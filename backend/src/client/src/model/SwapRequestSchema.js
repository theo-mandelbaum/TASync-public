/**
 * Sched API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ShiftSchema from './ShiftSchema';
import UserSchema from './UserSchema';

/**
 * The SwapRequestSchema model module.
 * @module model/SwapRequestSchema
 * @version 1.0
 */
class SwapRequestSchema {
    /**
     * Constructs a new <code>SwapRequestSchema</code>.
     * @alias module:model/SwapRequestSchema
     * @param id {String} 
     * @param requesterShift {module:model/ShiftSchema} 
     * @param requestedShift {module:model/ShiftSchema} 
     * @param requesterUser {module:model/UserSchema} 
     * @param requestedUser {module:model/UserSchema} 
     * @param dateRequested {Date} 
     */
    constructor(id, requesterShift, requestedShift, requesterUser, requestedUser, dateRequested) { 
        
        SwapRequestSchema.initialize(this, id, requesterShift, requestedShift, requesterUser, requestedUser, dateRequested);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, requesterShift, requestedShift, requesterUser, requestedUser, dateRequested) { 
        obj['id'] = id;
        obj['requester_shift'] = requesterShift;
        obj['requested_shift'] = requestedShift;
        obj['requester_user'] = requesterUser;
        obj['requested_user'] = requestedUser;
        obj['date_requested'] = dateRequested;
    }

    /**
     * Constructs a <code>SwapRequestSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SwapRequestSchema} obj Optional instance to populate.
     * @return {module:model/SwapRequestSchema} The populated <code>SwapRequestSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SwapRequestSchema();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('requester_shift')) {
                obj['requester_shift'] = ShiftSchema.constructFromObject(data['requester_shift']);
            }
            if (data.hasOwnProperty('requested_shift')) {
                obj['requested_shift'] = ShiftSchema.constructFromObject(data['requested_shift']);
            }
            if (data.hasOwnProperty('requester_user')) {
                obj['requester_user'] = UserSchema.constructFromObject(data['requester_user']);
            }
            if (data.hasOwnProperty('requested_user')) {
                obj['requested_user'] = UserSchema.constructFromObject(data['requested_user']);
            }
            if (data.hasOwnProperty('date_requested')) {
                obj['date_requested'] = ApiClient.convertToType(data['date_requested'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SwapRequestSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SwapRequestSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SwapRequestSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `requester_shift`
        if (data['requester_shift']) { // data not null
          ShiftSchema.validateJSON(data['requester_shift']);
        }
        // validate the optional field `requested_shift`
        if (data['requested_shift']) { // data not null
          ShiftSchema.validateJSON(data['requested_shift']);
        }
        // validate the optional field `requester_user`
        if (data['requester_user']) { // data not null
          UserSchema.validateJSON(data['requester_user']);
        }
        // validate the optional field `requested_user`
        if (data['requested_user']) { // data not null
          UserSchema.validateJSON(data['requested_user']);
        }

        return true;
    }


}

SwapRequestSchema.RequiredProperties = ["id", "requester_shift", "requested_shift", "requester_user", "requested_user", "date_requested"];

/**
 * @member {String} id
 */
SwapRequestSchema.prototype['id'] = undefined;

/**
 * @member {module:model/ShiftSchema} requester_shift
 */
SwapRequestSchema.prototype['requester_shift'] = undefined;

/**
 * @member {module:model/ShiftSchema} requested_shift
 */
SwapRequestSchema.prototype['requested_shift'] = undefined;

/**
 * @member {module:model/UserSchema} requester_user
 */
SwapRequestSchema.prototype['requester_user'] = undefined;

/**
 * @member {module:model/UserSchema} requested_user
 */
SwapRequestSchema.prototype['requested_user'] = undefined;

/**
 * @member {Date} date_requested
 */
SwapRequestSchema.prototype['date_requested'] = undefined;






export default SwapRequestSchema;

