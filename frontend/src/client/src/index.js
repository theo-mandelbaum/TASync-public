/**
 * Sched API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Error from './model/Error';
import QuestionCreateSchema from './model/QuestionCreateSchema';
import QuestionSchema from './model/QuestionSchema';
import ScheduleSchema from './model/ScheduleSchema';
import ScheduleSchemaCreate from './model/ScheduleSchemaCreate';
import SchoolSchema from './model/SchoolSchema';
import ShiftSchema from './model/ShiftSchema';
import ShiftSchemaCreate from './model/ShiftSchemaCreate';
import SubjectCreateSchema from './model/SubjectCreateSchema';
import SubjectSchema from './model/SubjectSchema';
import SwapRequestSchema from './model/SwapRequestSchema';
import UserSchema from './model/UserSchema';
import DefaultApi from './api/DefaultApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SchedApi = require('index'); // See note below*.
* var xxxSvc = new SchedApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SchedApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SchedApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SchedApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The QuestionCreateSchema model constructor.
     * @property {module:model/QuestionCreateSchema}
     */
    QuestionCreateSchema,

    /**
     * The QuestionSchema model constructor.
     * @property {module:model/QuestionSchema}
     */
    QuestionSchema,

    /**
     * The ScheduleSchema model constructor.
     * @property {module:model/ScheduleSchema}
     */
    ScheduleSchema,

    /**
     * The ScheduleSchemaCreate model constructor.
     * @property {module:model/ScheduleSchemaCreate}
     */
    ScheduleSchemaCreate,

    /**
     * The SchoolSchema model constructor.
     * @property {module:model/SchoolSchema}
     */
    SchoolSchema,

    /**
     * The ShiftSchema model constructor.
     * @property {module:model/ShiftSchema}
     */
    ShiftSchema,

    /**
     * The ShiftSchemaCreate model constructor.
     * @property {module:model/ShiftSchemaCreate}
     */
    ShiftSchemaCreate,

    /**
     * The SubjectCreateSchema model constructor.
     * @property {module:model/SubjectCreateSchema}
     */
    SubjectCreateSchema,

    /**
     * The SubjectSchema model constructor.
     * @property {module:model/SubjectSchema}
     */
    SubjectSchema,

    /**
     * The SwapRequestSchema model constructor.
     * @property {module:model/SwapRequestSchema}
     */
    SwapRequestSchema,

    /**
     * The UserSchema model constructor.
     * @property {module:model/UserSchema}
     */
    UserSchema,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
