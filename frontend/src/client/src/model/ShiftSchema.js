/**
 * Sched API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScheduleSchema from './ScheduleSchema';
import UserSchema from './UserSchema';

/**
 * The ShiftSchema model module.
 * @module model/ShiftSchema
 * @version 1.0
 */
class ShiftSchema {
    /**
     * Constructs a new <code>ShiftSchema</code>.
     * @alias module:model/ShiftSchema
     * @param id {String} 
     * @param schedule {module:model/ScheduleSchema} 
     * @param startTime {String} 
     * @param endTime {String} 
     * @param dayOfWeek {String} 
     * @param date {Date} 
     * @param maxTa {Number} 
     * @param maxStudents {Number} 
     * @param ta {Array.<module:model/UserSchema>} 
     * @param students {Array.<module:model/UserSchema>} 
     */
    constructor(id, schedule, startTime, endTime, dayOfWeek, date, maxTa, maxStudents, ta, students) { 
        
        ShiftSchema.initialize(this, id, schedule, startTime, endTime, dayOfWeek, date, maxTa, maxStudents, ta, students);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, schedule, startTime, endTime, dayOfWeek, date, maxTa, maxStudents, ta, students) { 
        obj['id'] = id;
        obj['schedule'] = schedule;
        obj['start_time'] = startTime;
        obj['end_time'] = endTime;
        obj['day_of_week'] = dayOfWeek;
        obj['date'] = date;
        obj['max_ta'] = maxTa;
        obj['max_students'] = maxStudents;
        obj['ta'] = ta;
        obj['students'] = students;
    }

    /**
     * Constructs a <code>ShiftSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShiftSchema} obj Optional instance to populate.
     * @return {module:model/ShiftSchema} The populated <code>ShiftSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShiftSchema();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = ScheduleSchema.constructFromObject(data['schedule']);
            }
            if (data.hasOwnProperty('start_time')) {
                obj['start_time'] = ApiClient.convertToType(data['start_time'], 'String');
            }
            if (data.hasOwnProperty('end_time')) {
                obj['end_time'] = ApiClient.convertToType(data['end_time'], 'String');
            }
            if (data.hasOwnProperty('day_of_week')) {
                obj['day_of_week'] = ApiClient.convertToType(data['day_of_week'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('max_ta')) {
                obj['max_ta'] = ApiClient.convertToType(data['max_ta'], 'Number');
            }
            if (data.hasOwnProperty('max_students')) {
                obj['max_students'] = ApiClient.convertToType(data['max_students'], 'Number');
            }
            if (data.hasOwnProperty('ta')) {
                obj['ta'] = ApiClient.convertToType(data['ta'], [UserSchema]);
            }
            if (data.hasOwnProperty('students')) {
                obj['students'] = ApiClient.convertToType(data['students'], [UserSchema]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShiftSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShiftSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ShiftSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `schedule`
        if (data['schedule']) { // data not null
          ScheduleSchema.validateJSON(data['schedule']);
        }
        // ensure the json data is a string
        if (data['start_time'] && !(typeof data['start_time'] === 'string' || data['start_time'] instanceof String)) {
            throw new Error("Expected the field `start_time` to be a primitive type in the JSON string but got " + data['start_time']);
        }
        // ensure the json data is a string
        if (data['end_time'] && !(typeof data['end_time'] === 'string' || data['end_time'] instanceof String)) {
            throw new Error("Expected the field `end_time` to be a primitive type in the JSON string but got " + data['end_time']);
        }
        // ensure the json data is a string
        if (data['day_of_week'] && !(typeof data['day_of_week'] === 'string' || data['day_of_week'] instanceof String)) {
            throw new Error("Expected the field `day_of_week` to be a primitive type in the JSON string but got " + data['day_of_week']);
        }
        if (data['ta']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ta'])) {
                throw new Error("Expected the field `ta` to be an array in the JSON data but got " + data['ta']);
            }
            // validate the optional field `ta` (array)
            for (const item of data['ta']) {
                UserSchema.validateJSON(item);
            };
        }
        if (data['students']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['students'])) {
                throw new Error("Expected the field `students` to be an array in the JSON data but got " + data['students']);
            }
            // validate the optional field `students` (array)
            for (const item of data['students']) {
                UserSchema.validateJSON(item);
            };
        }

        return true;
    }


}

ShiftSchema.RequiredProperties = ["id", "schedule", "start_time", "end_time", "day_of_week", "date", "max_ta", "max_students", "ta", "students"];

/**
 * @member {String} id
 */
ShiftSchema.prototype['id'] = undefined;

/**
 * @member {module:model/ScheduleSchema} schedule
 */
ShiftSchema.prototype['schedule'] = undefined;

/**
 * @member {String} start_time
 */
ShiftSchema.prototype['start_time'] = undefined;

/**
 * @member {String} end_time
 */
ShiftSchema.prototype['end_time'] = undefined;

/**
 * @member {String} day_of_week
 */
ShiftSchema.prototype['day_of_week'] = undefined;

/**
 * @member {Date} date
 */
ShiftSchema.prototype['date'] = undefined;

/**
 * @member {Number} max_ta
 */
ShiftSchema.prototype['max_ta'] = undefined;

/**
 * @member {Number} max_students
 */
ShiftSchema.prototype['max_students'] = undefined;

/**
 * @member {Array.<module:model/UserSchema>} ta
 */
ShiftSchema.prototype['ta'] = undefined;

/**
 * @member {Array.<module:model/UserSchema>} students
 */
ShiftSchema.prototype['students'] = undefined;






export default ShiftSchema;

