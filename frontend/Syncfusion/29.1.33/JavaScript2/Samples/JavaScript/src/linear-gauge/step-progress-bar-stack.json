{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><main>\n    <div class=\"control-section\">\n        <div id=\"stepprogressbar\">\n        </div>\n    </div>\n    \n    \n    \n</main></div></body></html>","index.js":"{{ripple}}\n    var gauge = new ej.lineargauge.LinearGauge({\n        orientation: 'Horizontal',\n        background:'transparent',  \n        axes: [{\n            minimum: 5,\n            maximum: 20,\n            opposedPosition: true,\n            line: {\n                width: 5\n            },\n            pointers: [{\n                value: 5,\n                height: 25,\n                width: 25,\n                placement: 'Near',\n                markerType: 'Image',\n                imageUrl: '//npmci.syncfusion.com/development/demos/src/linear-gauge/images/tick-icon.png'\n            }, {\n                value: 10,\n                height: 25,\n                width: 25,\n                placement: 'Near',\n                markerType: 'Image',\n                imageUrl: '//npmci.syncfusion.com/development/demos/src/linear-gauge/images/tick-icon.png'\n            }, {\n                value: 15,\n                height: 25,\n                width: 25,\n                placement: 'Near',\n                markerType: 'Image',\n                imageUrl: '//npmci.syncfusion.com/development/demos/src/linear-gauge/images/tick-icon.png'\n            }, {\n                value: 20,\n                height: 25,\n                width: 15,\n                placement: 'Center',\n                position: 'Cross',\n                color: '#D1D9DD',\n                offset: -2,\n                markerType: 'Circle'\n            }],\n            ranges: [\n                {\n                    start: 5,\n                    end: 10,\n                    startWidth: 5,\n                    endWidth: 5,\n                    color: '#1FAC8A'\n                }, {\n                    start: 10,\n                    end: 15,\n                    startWidth: 5,\n                    endWidth: 5,\n                    color: '#1FAC8A'\n                }, {\n                    start: 15,\n                    end: 20,\n                    startWidth: 5,\n                    endWidth: 5,\n                    color: '#D1D9DD'\n                }\n            ],\n            majorTicks: {\n                height: 0,\n                interval:5\n            },\n            minorTicks: {\n                height: 0\n            },\n            labelStyle: {\n                offset: 20,\n                font: { size: '16px', fontFamily: 'inherit' }\n            }\n        }],\n        load: function (args) {\n            // custom code start\n            var progressBarTheme = location.hash.split('/')[1];\n            progressBarTheme = progressBarTheme ? progressBarTheme : 'Material';\n            args.gauge.theme = (progressBarTheme.charAt(0).toUpperCase() +\n                progressBarTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        },\n        axisLabelRender: function (args) {\n            if (args.text == \"5\")\n                args.text = \"Ordered\";\n            else if (args.text == \"10\")\n                args.text = \"Packed\";\n            else if (args.text == \"15\")\n                args.text = \"Shipped\";\n            else if (args.text == \"20\")\n                args.text = \"Delivered\";\n            else\n                args.text = \" \";\n        }\n    });\n    gauge.appendTo('#stepprogressbar');\n"}