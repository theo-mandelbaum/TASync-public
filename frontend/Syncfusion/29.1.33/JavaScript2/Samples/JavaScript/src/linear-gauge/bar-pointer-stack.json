{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><main>\n    <div class=\"control-section\"> \n        <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\" style=\"display: flex;justify-content: center; align-items: center;\">\n                <div style=\"margin: auto;padding: 10px;\">\n                    <table role=\"none\">\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <div id=\"horizontal\" style=\"padding:6px;cursor:pointer;width:86px;color:black;font-size:15px;border:1px solid #0074E3;background-color:white;text-align:center\">\n                                        Horizontal</div>\n                                </td>\n                                <td>\n                                    <div id=\"vertical\" style=\"padding:6px;cursor:pointer;width:86px;color:white;font-size:15px;border:1px solid #0074E3;background-color: #0074E3;text-align:center\">\n                                        Vertical</div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <pre style=\"background-color: inherit; border:hidden\"></pre>\n        <div id=\"containerBox\" style=\"float: left; padding: 4%;\"> </div>\n        <div id=\"container1\" class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\" style=\"display: flex; justify-content: center; align-items: center;\">\n            <div id=\"gauge1\"></div>\n        </div>\n    \n        <div id=\"container2\" class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\" style=\"display: flex;justify-content: center; align-items: center;\">\n            <div id=\"gauge2\">\n            </div>\n        </div>\n    \n        <div id=\"container3\" class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\" style=\"display: flex;justify-content: center; align-items: center;\">\n            <div id=\"gauge3\"></div>\n        </div>\n    \n        <div id=\"container4\" class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\" style=\"display: flex;justify-content: center; align-items: center;\">\n            <div id=\"gauge4\"></div>\n        </div>\n    \n        <div id=\"container5\" class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\" style=\"display: flex;justify-content: center; align-items: center;\">\n            <div id=\"gauge5\"></div>\n        </div>\n    </div>\n    \n    \n    \n</main></div></body></html>","index.js":"{{ripple}}\n    document.getElementById('horizontal').onclick = function (e) {\n        document.getElementById('containerBox').style.padding = \"0%\";\n        if (e.currentTarget != null) {\n            e.currentTarget.style.color = \"white\";\n            e.currentTarget.style.backgroundColor = \"#0074E3\";\n            document.getElementById('vertical').style.color = \"black\";\n            document.getElementById('vertical').style.backgroundColor = \"white\";\n        }\n        gauge5.width = gauge4.width = gauge3.width = gauge2.width = gauge1.width = '450px';\n        gauge5.height = gauge4.height = gauge3.height = gauge2.height = gauge1.height = '150px';\n        gauge2.orientation = gauge3.orientation = gauge1.orientation = gauge4.orientation = gauge5.orientation = \"Horizontal\";\n        document.getElementById('container1').className = document.getElementById('container2').className =\n        document.getElementById('container3').className = document.getElementById('container4').className =\n        document.getElementById('container5').className = \"col-xs-12 col-sm-12 col-lg-12 col-md-12\";\n    };\n    document.getElementById('vertical').onclick = function (e) {\n        if (e.currentTarget != null) {\n            e.currentTarget.style.color = \"white\"; e.currentTarget.style.backgroundColor = \"#0074E3\";\n            document.getElementById('horizontal').style.color = \"black\";\n            document.getElementById('horizontal').style.backgroundColor = \"white\";\n        }\n        document.getElementById('containerBox').style.padding = \"4%\";\n        gauge5.orientation = gauge4.orientation = gauge3.orientation = gauge2.orientation = gauge1.orientation = \"Vertical\";\n        gauge1.width = gauge2.width = gauge3.width = gauge4.width = gauge5.width = '200px';\n        gauge1.height = gauge2.height = gauge3.height = gauge4.height = gauge5.height = '350px';\n        document.getElementById('container1').className = document.getElementById('container2').className =\n        document.getElementById('container3').className = document.getElementById('container4').className =\n        document.getElementById('container5').className = \"col-xs-4 col-sm-4 col-lg-2 col-md-2\";\n    };\n    var gauge1 = new ej.lineargauge.LinearGauge({\n        title: 'Outside',\n        titleStyle: {\n            fontFamily: \"inherit\",\n            fontWeight: '499'\n        },\n        width:'150px',\n        height:'350px',\n        background:'transparent',\n        animationDuration: 2000,\n        axes: [{\n            line: {\n                width: 5\n            },\n            majorTicks: {\n                interval: 20, height: 7, width: 1\n            },\n            minorTicks: {\n                interval: 10, height: 3\n            },\n            pointers: [{\n                value: 70,\n                height: 5,\n                width: 5,\n                placement: 'Near',\n                type: 'Bar',\n                position: 'Outside',\n                color: '#0074E3',\n                animationDuration: 1500\n            }\n            ],\n            minimum: 0,\n            maximum: 100,\n            opposedPosition: true,\n            labelStyle: { font: { fontFamily: 'inherit' } }\n        }],\n        load: function (args) {\n            // custom code start\n            var barPointerTheme = location.hash.split('/')[1];\n            barPointerTheme = barPointerTheme ? barPointerTheme : 'Material';\n            args.gauge.theme = (barPointerTheme.charAt(0).toUpperCase() +\n                barPointerTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge1.appendTo('#gauge1');\n    \n    var gauge2 = new ej.lineargauge.LinearGauge({\n        title: 'Cross',\n        titleStyle: {\n            fontFamily: \"inherit\",\n            fontWeight: '499'\n        },\n        width:'150px',\n        height:'350px',\n        background:'transparent',\n        animationDuration: 2000,\n        axes: [{\n            line: {\n                width: 5\n            },\n            minimum: 0,\n            maximum: 100,\n            pointers: [{\n                value: 70,\n                height: 5,\n                width: 5,\n                placement: 'Near',\n                type: 'Bar',\n                position: 'Cross',\n                color: '#0074E3',\n                animationDuration: 1500\n            }\n            ],\n            opposedPosition: true,\n            labelStyle: { font: { fontFamily: 'inherit' } },\n            majorTicks: {\n                interval: 20, height: 7, width: 1\n            },\n            minorTicks: {\n                interval: 10, height: 3\n            },\n        }],\n        load: function (args) {\n            // custom code start\n            var barPointerTheme2 = location.hash.split('/')[1];\n            barPointerTheme2 = barPointerTheme2 ? barPointerTheme2 : 'Material';\n            args.gauge.theme = (barPointerTheme2.charAt(0).toUpperCase() +\n                barPointerTheme2.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge2.appendTo('#gauge2');\n\n    var gauge3 = new ej.lineargauge.LinearGauge({\n        title: 'Inside',\n        titleStyle: {\n            fontFamily: \"inherit\",\n            fontWeight: '499'\n        },\n        width:'150px',\n        height:'350px',\n        background:'transparent',\n        animationDuration: 2000,\n        axes: [{\n            line: {\n                width: 5\n            },\n            pointers: [{\n                value: 70,\n                height: 5,\n                width: 5,\n                placement: 'Near',\n                type: 'Bar',\n                position: 'Inside',\n                color: '#0074E3',\n                animationDuration: 1500\n            }\n            ],\n            minimum: 0,\n            maximum: 100,\n            opposedPosition: true,\n            majorTicks: {\n                interval: 20, height: 7, width: 1\n            },\n            minorTicks: {\n                interval: 10, height: 3\n            },\n            labelStyle: { font: { fontFamily: 'inherit' } }\n        }],\n        load: function (args) {\n            // custom code start\n            var barPointerTheme3 = location.hash.split('/')[1];\n            barPointerTheme3 = barPointerTheme3 ? barPointerTheme3 : 'Material';\n            args.gauge.theme = (barPointerTheme3.charAt(0).toUpperCase() +\n                barPointerTheme3.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge3.appendTo('#gauge3');\n\n    var gauge4 = new ej.lineargauge.LinearGauge({\n        title: 'Gradient shader',\n        width:'150px',\n        height:'350px',\n        titleStyle: {\n            fontFamily: \"inherit\",\n            fontWeight: '499'\n        },\n        background:'transparent',\n        animationDuration: 2000,\n        axes: [{\n            line: {\n                width: 5\n            },\n            majorTicks: {\n                interval: 20,\n                height: 7,\n                width: 1\n            },\n            minorTicks: {\n                interval: 10,\n                height: 3\n            },\n            labelStyle: {\n                font: { fontFamily: 'inherit' }\n            },\n            pointers: [{\n                value: 70,\n                height: 5,\n                width: 5,\n                offset: 2,\n                placement: 'Near',\n                type: 'Bar',\n                position: 'Outside',\n                color: '#0074E3',\n                animationDuration: 1500,\n                linearGradient: {\n                    startValue: \"0%\",\n                    endValue: \"100%\",\n                    colorStop: [\n                        { color: \"#FB7D55\", offset: \"0%\", opacity: 1 },\n                        { color: \"#ECC85B\", offset: \"50%\", opacity: 1 },\n                        { color: \"#6FC78A\", offset: \"100%\", opacity: 1 }\n                    ]\n                }\n            }\n            ],\n            minimum: 0,\n            maximum: 100,\n            opposedPosition: true\n        }],\n        load: function (args) {\n            // custom code start\n            var barPointerTheme4 = location.hash.split('/')[1];\n            barPointerTheme4 = barPointerTheme4 ? barPointerTheme4 : 'Material';\n            args.gauge.theme = (barPointerTheme4.charAt(0).toUpperCase() +\n                barPointerTheme4.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge4.appendTo('#gauge4');\n\n    var gauge5 = new ej.lineargauge.LinearGauge({\n        title: 'Multiple bar pointers',\n        titleStyle: {\n            fontFamily: \"inherit\",\n            fontWeight: '499'\n        },\n        width:'150px',\n        height:'350px',\n        background:'transparent',\n        animationDuration: 2000,\n        axes: [{\n            line: {\n                width: 5\n            },\n            labelStyle: {\n                font: { fontFamily: 'inherit' }\n            },\n            majorTicks: {\n                interval: 20,\n                height: 7,\n                width: 1\n            },\n            minorTicks: {\n                interval: 10,\n                height: 3\n            },\n            pointers: [{\n                value: 10,\n                height: 5,\n                width: 5,\n                placement: 'Near',\n                type: 'Bar',\n                position: 'Inside',\n                color: '#0074E3',\n                animationDuration: 1500\n            },\n            {\n                value: 70,\n                height: 5,\n                width: 5,\n                placement: 'Near',\n                type: 'Bar',\n                position: 'Outside',\n                color: 'red',\n                animationDuration: 1500\n            }\n            ],\n            minimum: 0,\n            maximum: 100,\n            opposedPosition: true\n        }],\n        load: function (args) {\n            // custom code start\n            var barPointerTheme5 = location.hash.split('/')[1];\n            barPointerTheme5 = barPointerTheme5 ? barPointerTheme5 : 'Material';\n            args.gauge.theme = (barPointerTheme5.charAt(0).toUpperCase() +\n                barPointerTheme5.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge5.appendTo('#gauge5');\n"}