{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><main>\n    <div class=\"control-section\">\n        <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\" style=\"display: flex;justify-content: center; align-items: center;\">\n                <div style=\"margin: auto;padding: 10px;\">\n                    <table role=\"none\">\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <div id=\"horizontal\" style=\"padding:6px;cursor:pointer;width:86px;color:black;font-size:15px;border:1px solid #0074E3;background-color:white;text-align:center\">\n                                        Horizontal</div>\n                                </td>\n                                <td>\n                                    <div id=\"vertical\" style=\"padding:6px;cursor:pointer;width:86px;color:white;font-size:15px;border:1px solid #0074E3;background-color: #0074E3;text-align:center\">\n                                        Vertical</div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <pre style=\"background-color: inherit; border:hidden\"></pre>\n        <div id=\"containerBox\" style=\"float: left;\"> </div>\n        <div id=\"container1\" class=\"col-xs-5 col-sm-5 col-lg-4 col-md-4\" style=\"display: flex; justify-content: center; align-items: center;\">\n            <div id=\"gauge1\"></div>\n        </div>\n    \n        <div id=\"container2\" class=\"col-xs-5 col-sm-5 col-lg-4 col-md-4\" style=\"display: flex; justify-content: center; align-items: center;\">\n            <div id=\"gauge2\">\n            </div>\n        </div>\n    \n        <div id=\"container3\" class=\"col-xs-5 col-sm-5 col-lg-4 col-md-4\" style=\"display: flex; justify-content: center; align-items: center;\">\n            <div id=\"gauge3\"></div>\n        </div>\n    </div>\n    \n    \n    \n</main></div></body></html>","index.js":"{{ripple}}\n    document.getElementById('horizontal').onclick = function (e) {\n        document.getElementById('container1').className = document.getElementById('container2').className =\n        document.getElementById('container3').className = \"col-xs-12 col-sm-12 col-lg-12 col-md-12\";\n        gauge1.width = gauge2.width = gauge3.width = '450px';\n        gauge1.height = gauge2.height = gauge3.height = '150px';\n        gauge1.orientation = gauge2.orientation = gauge3.orientation = \"Horizontal\";\n        if (e.currentTarget != null) {\n            e.currentTarget.style.color = \"white\";\n            e.currentTarget.style.backgroundColor = \"#0074E3\";\n            document.getElementById('vertical').style.color = \"black\";\n            document.getElementById('vertical').style.backgroundColor = \"white\";\n        }\n        gauge1.axes[0].pointers[0].offset = 2;\n        gauge3.axes[0].pointers[0].offset = 2;\n    };\n    document.getElementById('vertical').onclick = function (e) {\n        document.getElementById('container1').className = document.getElementById('container2').className =\n        document.getElementById('container3').className = \"col-xs-5 col-sm-5 col-lg-4 col-md-4\";\n        if (e.currentTarget != null) {\n            e.currentTarget.style.color = \"white\";\n            e.currentTarget.style.backgroundColor = \"#0074E3\";\n            document.getElementById('horizontal').style.color = \"black\";\n            document.getElementById('horizontal').style.backgroundColor = \"white\";\n        }\n        gauge1.width = gauge2.width = gauge3.width = '170px';\n        gauge1.height = gauge2.height = gauge3.height = '350px';\n        gauge1.orientation = gauge2.orientation = gauge3.orientation = \"Vertical\";\n        gauge1.axes[0].pointers[0].offset = -2;\n        gauge3.axes[0].pointers[0].offset = -2;\n    };\n\n    var gauge1 = new ej.lineargauge.LinearGauge({\n        title: 'Text widget',\n        titleStyle: {\n            fontFamily: \"inherit\",\n            fontWeight: '499'\n        },\n        background:'transparent',\n        animationDuration: 2000,\n        width:'150px',\n        height:'350px',\n        annotations: [{\n            axisIndex: 0,\n            axisValue: 55,\n            x: 0,\n            y: 0,\n            zIndex: '1',\n            content: '<div style=\"font-size: 12px;color: white;margin-left: -2px;margin-top:1px;\"> 55 </div>'\n        }],\n        axes: [{\n            line: {\n                width: 20\n            },\n            pointers: [{\n                width: 30,\n                value: 55,\n                offset: -2,\n                color: '#173BBB',\n                position: 'Cross',\n                placement: 'Center',\n                markerType: 'Circle',\n            }\n            ],\n            majorTicks: {\n                interval: 20, height: 7, width: 1\n            },\n            minorTicks: {\n                interval: 10, height: 3\n            },\n            minimum: 0,\n            maximum: 100,\n            opposedPosition: true,\n            labelStyle: { font: { fontFamily: 'inherit' } }\n        }],\n        load: function (args) {\n            // custom code start\n            var customPointerTheme1 = location.hash.split('/')[1];\n            customPointerTheme1 = customPointerTheme1 ? customPointerTheme1 : 'Material';\n            args.gauge.theme = (customPointerTheme1.charAt(0).toUpperCase() +\n                customPointerTheme1.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge1.appendTo('#gauge1');\n\n    var gauge2 = new ej.lineargauge.LinearGauge({\n        title: 'Icon widget',\n        titleStyle: {\n            fontFamily: \"inherit\",\n            fontWeight: '499'\n        },\n        width:'150px',\n        height:'350px',\n        background:'transparent',\n        animationDuration: 2000,\n        axes: [{\n            line: {\n                width: 20\n            },\n            pointers: [{\n                width: 45,\n                value: 90,\n                height: 30,\n                placement: 'Near',\n                markerType: 'Image',\n                imageUrl: '//npmci.syncfusion.com/development/demos/src/linear-gauge/images/thumb-icon.png'\n            }\n            ],\n            majorTicks: {\n                interval: 20, height: 7, width: 1\n            },\n            minorTicks: {\n                interval: 10, height: 3\n            },\n            minimum: 0,\n            maximum: 100,\n            opposedPosition: true,\n            labelStyle: { font: { fontFamily: 'inherit' } }\n        }],\n        load: function (args) {\n            // custom code start\n            var customPointerTheme2 = location.hash.split('/')[1];\n            customPointerTheme2 = customPointerTheme2 ? customPointerTheme2 : 'Material';\n            args.gauge.theme = (customPointerTheme2.charAt(0).toUpperCase() +\n                customPointerTheme2.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge2.appendTo('#gauge2');\n\n    var gauge3 = new ej.lineargauge.LinearGauge({\n        title: 'Multiple widget pointers',\n        titleStyle: {\n            fontFamily: \"inherit\",\n            fontWeight: '499'\n        },\n        width:'170px',\n        height:'350px',\n        background:'transparent',\n        animationDuration: 2000,\n        annotations: [{\n            axisIndex: 0,\n            axisValue: 60,\n            x: 0,\n            y: 0,\n            zIndex: '1',\n            content: '<div style=\"font-size: 12px;color: white;margin-left: -2px;margin-top:1px;\"> 60 </div>'\n        }],\n        axes: [{\n            line: {\n                width: 20\n            },\n            pointers: [{\n                width: 30,\n                value: 60,\n                offset: -2,\n                placement: 'Center',\n                position: 'Cross',\n                markerType: 'Circle',\n                color: '#173BBB'\n            }, {\n                width: 45,\n                height: 30,\n                value: 30,\n                placement: 'Near',\n                markerType: 'Image',\n                color: '#173BBB',\n                imageUrl: '//npmci.syncfusion.com/development/demos/src/linear-gauge/images/thumb-icon.png'\n            }\n            ],\n            minimum: 0,\n            maximum: 100,\n            opposedPosition: true,\n            majorTicks: {\n                interval: 20, height: 7, width: 1\n            },\n            minorTicks: {\n                interval: 10, height: 3\n            },\n            labelStyle: { font: { fontFamily: 'inherit', fontWeight: 'normal' } }\n        }],\n        load: function (args) {\n            // custom code start\n            var customPointerTheme3 = location.hash.split('/')[1];\n            customPointerTheme3 = customPointerTheme3 ? customPointerTheme3 : 'Material';\n            args.gauge.theme = (customPointerTheme3.charAt(0).toUpperCase() +\n                customPointerTheme3.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge3.appendTo('#gauge3');\n"}