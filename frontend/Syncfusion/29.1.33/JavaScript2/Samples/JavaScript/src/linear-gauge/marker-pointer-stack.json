{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><main>\n    <div class=\"control-section\">\n        <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\" style=\"display: flex;justify-content: center; align-items: center;\">\n                <div style=\"margin: auto;padding: 10px;\">\n                    <table role=\"none\">\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <div id=\"horizontal\" style=\"padding:6px;cursor:pointer;width:86px;color:black;font-size:15px;border:1px solid #0074E3;background-color:white;text-align:center\">Horizontal</div>\n                                </td>\n                                <td>\n                                    <div id=\"vertical\" style=\"padding:6px;cursor:pointer;width:86px;color:white;font-size:15px;border:1px solid #0074E3;background-color: #0074E3;text-align:center\">Vertical</div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <pre style=\"background-color: inherit; border:hidden\"></pre>\n        <div id=\"containerBox\" style=\"float: left; padding: 4%;\"> </div>\n        <div id=\"container1\" class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\" style=\"display: flex; justify-content: center; align-items: center;\">\n        <div id=\"gaugeTriangle\"></div>\n        </div>\n        \n        <div id=\"container2\" class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\" style=\"display: flex;justify-content: center; align-items: center;\">\n        <div id=\"gaugeCircle\">\n        </div>\n        </div>\n        \n        <div id=\"container4\" class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\" style=\"display: flex;justify-content: center; align-items: center;\">\n        <div id=\"gaugeRectangle\"></div>\n        </div>\n        \n        <div id=\"container3\" class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\" style=\"display: flex;justify-content: center; align-items: center;\">\n        <div id=\"gaugeText\"></div>\n        </div>\n        \n        <div id=\"container5\" class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\" style=\"display: flex;justify-content: center; align-items: center;\">\n        <div id=\"gaugeMultiple\"></div>\n        </div>\n        </div>\n        \n        \n        \n</main></div></body></html>","index.js":"{{ripple}}\n    document.getElementById('horizontal').onclick = function (e) {\n        gauge1.width = gauge2.width = gauge3.width = gauge4.width = gauge5.width = '450px';\n        gauge1.height = gauge2.height = gauge3.height = gauge4.height = gauge5.height = '150px';\n        if (e.currentTarget != null) {\n            e.currentTarget.style.color = \"white\";\n            e.currentTarget.style.backgroundColor = \"#0074E3\";\n            document.getElementById('vertical').style.color = \"black\";\n            document.getElementById('vertical').style.backgroundColor = \"white\";\n        }\n        gauge5.orientation = gauge4.orientation = gauge3.orientation = gauge2.orientation = gauge1.orientation = \"Horizontal\";\n        document.getElementById('containerBox').style.padding = \"0%\"; \n        document.getElementById('container1').className = document.getElementById('container2').className =\n        document.getElementById('container3').className = document.getElementById('container4').className =\n        document.getElementById('container5').className = \"col-xs-12 col-sm-12 col-lg-12 col-md-12\";\n    };\n    document.getElementById('vertical').onclick = function (e) {\n        document.getElementById('container1').className = document.getElementById('container2').className =\n        document.getElementById('container3').className = document.getElementById('container4').className =\n        document.getElementById('container5').className = \"col-xs-4 col-sm-4 col-lg-2 col-md-2\";\n        document.getElementById('containerBox').style.padding = \"4%\";\n        gauge1.orientation = gauge2.orientation = gauge3.orientation = gauge5.orientation = gauge4.orientation = \"Vertical\";\n        if (e.currentTarget != null) {\n            e.currentTarget.style.color = \"white\";\n            e.currentTarget.style.backgroundColor = \"#0074E3\";\n            document.getElementById('horizontal').style.color = \"black\";\n            document.getElementById('horizontal').style.backgroundColor = \"white\";\n        }\n        gauge1.width = gauge2.width = gauge3.width = gauge4.width = gauge5.width = '200px';\n        gauge1.height = gauge2.height = gauge3.height = gauge4.height = gauge5.height = '350px';\n    };\n    var gauge1 = new ej.lineargauge.LinearGauge({\n        dragStart: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge1.axes[0].pointers[0].animationDuration = 0;\n                gauge1.axes[0].pointers[1].animationDuration = 0;\n            }\n        },\n        dragEnd: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge1.axes[0].pointers[0].animationDuration = 1500;\n                gauge1.axes[0].pointers[1].animationDuration = 1500;\n            }\n        },\n        dragMove: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge1.setPointerValue(0, 0, args.currentValue);\n            }\n        },\n        height: '350px',\n        width:'150px',\n        title: 'Inverted triangle',\n        background:'transparent',\n        animationDuration: 2000,\n        titleStyle: {\n            fontFamily: \"inherit\",\n            fontWeight: '499'\n        },\n        axes: [{\n            line: {\n                width: 5\n            },\n            pointers: [{\n                width: 5,\n                value: 40,\n                height: 5,\n                placement: 'Near',\n                type: 'Bar',\n                offset: 12,\n                color: '#0074E3',\n                animationDuration: 1500\n            }, {\n                width: 15,\n                value: 40,\n                height: 15,\n                enableDrag: true,\n                placement: 'Near',\n                markerType: 'Triangle',\n                animationDuration: 1500\n            }\n            ],\n            minimum: 0,\n            maximum: 100,\n            opposedPosition: true,\n            labelStyle: { font: { fontFamily: 'inherit' } },\n            majorTicks: {\n                interval: 20, height: 7, width: 1\n            },\n            minorTicks: {\n                interval: 10, height: 3\n            },\n        }],\n        load: function (args) {\n            // custom code start\n            var markerPointerTheme1 = location.hash.split('/')[1];\n            markerPointerTheme1 = markerPointerTheme1 ? markerPointerTheme1 : 'Material';\n            args.gauge.theme = (markerPointerTheme1.charAt(0).toUpperCase() +\n                markerPointerTheme1.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge1.appendTo('#gaugeTriangle');\n\n    var gauge2 = new ej.lineargauge.LinearGauge({\n        dragStart: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge2.axes[0].pointers[0].animationDuration = 0;\n                gauge2.axes[0].pointers[1].animationDuration = 0;\n            }\n        },\n        dragEnd: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge2.axes[0].pointers[0].animationDuration = 1500;\n                gauge2.axes[0].pointers[1].animationDuration = 1500;\n            }\n        },\n        dragMove: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge2.setPointerValue(0, 0, args.currentValue);\n            }\n        },\n        height: '350px',\n        width:'150px',\n        background:'transparent',\n        animationDuration: 2000,\n        title: 'Circle',\n        titleStyle: {\n            fontFamily: \"inherit\",\n            fontWeight: '499'\n        },\n        axes: [{\n            line: {\n                width: 5\n            },\n            pointers: [{\n                width: 5,\n                value: 20,\n                height: 5,\n                placement: 'Near',\n                type: 'Bar',\n                offset: 12,\n                color: '#0074E3',\n                animationDuration: 1500\n            }, {\n                width: 15,\n                value: 20,\n                height: 15,\n                enableDrag: true,\n                placement: 'Near',\n                markerType: 'Circle',\n                animationDuration: 1500\n            }\n            ],\n            majorTicks: {\n                interval: 20, height: 7, width: 1\n            },\n            minorTicks: {\n                interval: 10, height: 3\n            },\n            minimum: 0,\n            maximum: 100,\n            opposedPosition: true,\n            labelStyle: { font: { fontFamily: 'inherit' } }\n        }],\n        load: function (args) {\n            // custom code start\n            var markerPointerTheme2 = location.hash.split('/')[1];\n            markerPointerTheme2 = markerPointerTheme2 ? markerPointerTheme2 : 'Material';\n            args.gauge.theme = (markerPointerTheme2.charAt(0).toUpperCase() +\n                markerPointerTheme2.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge2.appendTo('#gaugeCircle');\n\n    var gauge3 = new ej.lineargauge.LinearGauge({\n        dragStart: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge3.axes[0].pointers[0].animationDuration = 0;\n                gauge3.axes[0].pointers[1].animationDuration = 0;\n            }\n        },\n        dragEnd: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge3.axes[0].pointers[0].animationDuration = 1500;\n                gauge3.axes[0].pointers[1].animationDuration = 1500;\n            }\n        },\n        dragMove: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge3.axes[0].pointers[1].text = Math.round(args.currentValue).toString() + \" Points\";\n                gauge3.setPointerValue(0, 0, args.currentValue);\n            }\n        },\n        title: 'Text',\n        titleStyle: {\n            fontFamily: \"inherit\",\n            fontWeight: '499'\n        },\n        height: '350px',\n        width:'168px',\n        background:'transparent',\n        animationDuration: 2000,\n        axes: [{\n            line: {\n                width: 5\n            },\n            pointers: [{\n                width: 5,\n                value: 50,\n                height: 5,\n                placement: 'Near',\n                type: 'Bar',\n                offset: 12,\n                color: '#0074E3',\n                animationDuration: 1500\n            }, {\n                width: 15,\n                value: 50,\n                height: 15,\n                enableDrag: true,\n                placement: 'Near',\n                markerType: 'Text',\n                text:'50 Points',\n                textStyle:{ fontFamily: 'inherit' },\n                animationDuration: 1500,\n                offset:-10\n            }\n            ],\n            minimum: 0,\n            maximum: 100,\n            opposedPosition: true,\n            majorTicks: {\n                interval: 20, height: 7, width: 1\n            },\n            minorTicks: {\n                interval: 10, height: 3\n            },\n            labelStyle: { font: { fontFamily: 'inherit' } }\n        }],\n        load: function (args) {\n            // custom code start\n            var markerPointerTheme3 = location.hash.split('/')[1];\n            markerPointerTheme3 = markerPointerTheme3 ? markerPointerTheme3 : 'Material';\n            args.gauge.theme = (markerPointerTheme3.charAt(0).toUpperCase() +\n                markerPointerTheme3.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge3.appendTo('#gaugeText');\n\n    var gauge4 = new ej.lineargauge.LinearGauge({\n        dragStart: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge4.axes[0].pointers[0].animationDuration = 0;\n                gauge4.axes[0].pointers[1].animationDuration = 0;\n            }\n        },\n        dragEnd: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge4.axes[0].pointers[0].animationDuration = 1500;\n                gauge4.axes[0].pointers[1].animationDuration = 1500;\n            }\n        },\n        dragMove: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge4.setPointerValue(0, 0, args.currentValue);\n            }\n        },\n        height: '350px',\n        width:'150px',\n        title: 'Rectangle',\n        background:'transparent',\n        animationDuration: 2000,\n        titleStyle: {\n            fontFamily: \"inherit\",\n            fontWeight: '499'\n        },\n        axes: [{\n            line: {\n                width: 5\n            },\n            majorTicks: {\n                interval: 20,\n                height: 7,\n                width: 1\n            },\n            minorTicks: {\n                interval: 10,\n                height: 3\n            },\n            labelStyle: {\n                font: { fontFamily: 'inherit' }\n            },\n            pointers: [{\n                width: 5,\n                value: 30,\n                height: 5,\n                placement: 'Near',\n                type: 'Bar',\n                offset: 12,\n                color: '#0074E3',\n                animationDuration: 1500\n            }, {\n                width: 15,\n                value: 30,\n                height: 5,\n                enableDrag: true,\n                placement: 'Near',\n                markerType: 'Rectangle',\n                animationDuration: 1500\n            }\n            ],\n            minimum: 0,\n            maximum: 100,\n            opposedPosition: true\n        }],\n        load: function (args) {\n            // custom code start\n            var markerPointerTheme4 = location.hash.split('/')[1];\n            markerPointerTheme4 = markerPointerTheme4 ? markerPointerTheme4 : 'Material';\n            args.gauge.theme = (markerPointerTheme4.charAt(0).toUpperCase() +\n                markerPointerTheme4.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge4.appendTo('#gaugeRectangle');\n\n    var gauge5 = new ej.lineargauge.LinearGauge({\n        dragStart: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge5.axes[0].pointers[0].animationDuration = 0;\n                gauge5.axes[0].pointers[1].animationDuration = 0;\n            }\n        },\n        dragEnd: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge5.axes[0].pointers[0].animationDuration = 1500;\n                gauge5.axes[0].pointers[1].animationDuration = 1500;\n            }\n        },\n        dragMove: function (args) {\n            if (args.pointerIndex == 1) {\n                gauge5.setPointerValue(0, 0, args.currentValue);\n            }\n        },\n        height: '350px',\n        width:'150px',\n        background:'transparent',\n        animationDuration: 2000,\n        title: 'Multiple pointers',\n        titleStyle: {\n            fontFamily: \"inherit\",\n            fontWeight: '499'\n        },\n        axes: [{\n            line: {\n                width: 5\n            },\n            minorTicks: {\n                interval: 10,\n                height: 3\n            },\n            majorTicks: {\n                interval: 20,\n                height: 7,\n                width: 1\n            },\n            labelStyle: {\n                font: { fontFamily: 'inherit' }\n            },\n            pointers: [{\n                width: 5,\n                value: 10,\n                height: 5,\n                placement: 'Near',\n                type: 'Bar',\n                offset: 12,\n                color: '#0074E3',\n                animationDuration: 1500\n            }, {\n                width: 15,\n                value: 10,\n                height: 15,\n                enableDrag: true,\n                placement: 'Near',\n                markerType: 'Triangle',\n                animationDuration: 1500\n            }, {\n                width: 15,\n                value: 100,\n                height: 15,\n                enableDrag: true,\n                placement: 'Near',\n                markerType: 'Diamond',\n                animationDuration: 1500\n            }\n            ],\n            minimum: 0,\n            maximum: 100,\n            opposedPosition: true\n        }],\n        load: function (args) {\n            // custom code start\n            var markerPointerTheme5 = location.hash.split('/')[1];\n            markerPointerTheme5 = markerPointerTheme5 ? markerPointerTheme5 : 'Material';\n            args.gauge.theme = (markerPointerTheme5.charAt(0).toUpperCase() +\n            markerPointerTheme5.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge5.appendTo('#gaugeMultiple');\n\n"}