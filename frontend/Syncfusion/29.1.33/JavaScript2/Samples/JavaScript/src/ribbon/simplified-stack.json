{"data-source.js":"window.recentDocuments = [\n    {\n        \"fileName\": \"Classic_layout.docx\",\n        \"location\": \"EJ2 >> Components >> Navigations >> Ribbon >> layouts\"\n    },\n    {\n        \"fileName\": \"Simplified_layout.docx\",\n        \"location\": \"EJ2 >> Components >> Navigations >> Ribbon >> layouts\"\n    },\n    {\n        \"fileName\": \"Ribbon_resize.docx\",\n        \"location\": \"EJ2 >> Components >> Navigations >> Ribbon >> resize\"\n    },\n    {\n        \"fileName\": \"Ribbon_backstage.docx\",\n        \"location\": \"EJ2 >> Components >> Navigations >> Ribbon >> backstage\"\n    },\n    {\n        \"fileName\": \"Ribbon_overflow.docx\",\n        \"location\": \"EJ2 >> Components >> Navigations >> Ribbon >> overflow\"\n    },\n    {\n        \"fileName\": \"Custom_items.docx\",\n        \"location\": \"EJ2 >> Components >> Navigations >> Ribbon >> items\"\n    }\n];\nwindow.dataOptions = {\n    \"info\": [\n        {\n            \"icon\": \"e-open-link\",\n            \"title\": \"Open in Desktop App\",\n            \"description\": \"Use the full functionality of Ribbon\"\n        },\n        {\n            \"icon\": \"e-protect-sheet\",\n            \"title\": \"Protect Document\",\n            \"description\": \"To prevent accidental changes, this document has been set to open as view-only.\"\n        },\n        {\n            \"icon\": \"e-send-to-back\",\n            \"title\": \"Version History\",\n            \"description\": \"View previous versions\"\n        }\n    ],\n    \"save\": [\n        {\n            \"icon\": \"e-save\",\n            \"title\": \"Save as\",\n            \"description\": \"Save a copy online\"\n        },\n        {\n            \"icon\": \"e-rename\",\n            \"title\": \"Rename\",\n            \"description\": \"Rename this file\"\n        },\n        {\n            \"icon\": \"e-download\",\n            \"title\": \"Download a Copy\",\n            \"description\": \"Download a local copy\"\n        },\n        {\n            \"icon\": \"e-export-pdf\",\n            \"title\": \"Download as PDF\",\n            \"description\": \"Download a copy as PDF file\"\n        },\n        {\n            \"icon\": \"e-chevron-down-fill\",\n            \"title\": \"Download as ODT\",\n            \"description\": \"Download a copy as ODT file\"\n        }\n    ],\n    \"export\": [\n        {\n            \"icon\": \"e-transform-right\",\n            \"title\": \"Transform to Web Page\",\n            \"description\": \"Transform your document into an interactive webpage\"\n        },\n        {\n            \"icon\": \"e-export\",\n            \"title\": \"Export to PowerPoint presentation\",\n            \"description\": \"Export your document into a multi-slide presentation\"\n        },\n        {\n            \"icon\": \"e-protect-workbook\",\n            \"title\": \"Send documents to Kindle\",\n            \"description\": \"Send documents to your Kindle device to read and annotate the documents\"\n        }\n    ],\n    \"print\": [\n        {\n            \"icon\": \"e-print-layout\",\n            \"title\": \"Print\",\n            \"description\": \"Print this document\"\n        }\n    ],\n    \"share\": [\n        {\n            \"icon\": \"e-arrow-right-up\",\n            \"title\": \"Share with People\",\n            \"description\": \"Invite other people to view or edit this document\"\n        },\n        {\n            \"icon\": \"e-protect-workbook\",\n            \"title\": \"Embed\",\n            \"description\": \"Embed this document in your blog or website\"\n        }\n    ],\n    \"account\": [\n        {\n            \"icon\": \"e-people\",\n            \"title\": \"Account type\",\n            \"description\": \"Administrator\"\n        },\n        {\n            \"icon\": \"e-password\",\n            \"title\": \"Password protected\",\n            \"description\": \"Yes\"\n        },\n        {\n            \"icon\": \"e-text-that-contains\",\n            \"title\": \"E-mail\",\n            \"description\": \"abc@gmail.com\"\n        }\n    ],\n    \"feedback\": [\n        {\n            \"icon\": \"e-check\",\n            \"title\": \"I Like Something\",\n            \"description\": \"It's nice to know when we have made a positive change.\"\n        },\n        {\n            \"icon\": \"e-close\",\n            \"title\": \"I Don't Like Something\",\n            \"description\": \"If something's not right we'd like to know so we can fix it.\"\n        },\n        {\n            \"icon\": \"e-comment-add\",\n            \"title\": \"I Have a Suggestion\",\n            \"description\": \"Do you have an idea for a new feature or an improvement ?\"\n        }\n    ]\n};\n","index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/ribbon/simplified/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-12 control-section default-ribbon-section\">\n    <div id=\"ribbonContainer\">\n        <div id=\"ribbon\"></div>\n        <div id=\"ribbonPlaceHolder\">\n            <div class=\"content1\"></div>\n            <div class=\"content2\"></div>\n            <div class=\"content3\"></div>\n            <div class=\"content4\"></div>\n            <div id=\"toast\"></div>\n        </div>\n        <div id=\"pictureList\"></div>\n    </div>\n</div>\n<style>\n    #pictureList {\n        display: none;\n        border: 1px;\n        box-shadow: 0 0 2px;\n    }\n\n    #pictureddl-popup #pictureList {\n        display: block;\n    }\n\n    .e-bigger #pictureList .e-list-header {\n     background-color: white;\n    }\n\n    body[class*=\"dark\"].e-bigger #pictureList .e-list-header,\n    body[class*=\"high\"].e-bigger #pictureList .e-list-header {\n        background-color: #212529;\n    }\n    \n    .e-bigger #pictureList ul {\n        padding: 0px;\n        margin-top: 0px;\n    }\n\n    #ribbonContainer{\n        padding: 20px;\n        background-color: #dbdada;\n        display: flex;\n        flex-direction: column;\n        height: 550px;\n    }\n\n    #ribbon {\n        box-sizing: border-box;\n    }\n\n    #ribbonPlaceHolder {\n        flex-grow: 1; \n        box-sizing: border-box;\n        background-color: transparent;\n        display: flex;\n        flex-wrap: wrap;\n        gap: 10px;\n        margin-top: 15px;\n    }\n\n    #ribbonPlaceHolder .content1 {\n        background-color: #3a9ae5;\n        width: 150px;\n        height: 60%;\n    }\n\n    #ribbonPlaceHolder .content2 {\n        background-color: #9d9c9a;\n        width: calc(100% - 160px);\n        height: 60%;\n    }\n\n    #ribbonPlaceHolder .content3 {\n        background-color: #7f7e7d;\n        width: 150px;\n        height: calc(40% - 10px);\n    }\n\n    #ribbonPlaceHolder .content4 {\n        background-color: #c8c6c4;\n        width: calc(100% - 160px);\n        height: calc(40% - 10px);\n    }\n\n    #ribbonPlaceHolder #toast .e-toast-close-icon {\n        position: absolute;\n        top: 50%;\n        right: 2px ;\n        transform: translateY(-50%);\n        margin: 0;\n    }\n\n    #ribbonPlaceHolder #toast .e-toast-content {\n        padding-right: 25px;\n    }\n\n    body[class*=\"dark\"] #ribbonContainer,\n    body[class*=\"high\"] #ribbonContainer {\n        background: #a7a7a742;\n    }\n\n    .font-group .e-ribbon-group-content {\n        justify-content: center;\n    }\n\n    #header_footer .e-ribbon-group-overflow-ddb {\n        min-width: 10ch;\n    }\n\n    @font-face {\n    font-family: 'ribbon';\n    src:\n    url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n    }\n\n    [class^=\"sf-icon-\"], [class*=\" sf-icon-\"] {\n    font-family: 'ribbon' !important;\n    speak: none;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    }\n\n    .sf-icon-3d-model:before { content: \"\\e700\"; }\n    .sf-icon-shapes:before { content: \"\\e701\"; }\n    .sf-icon-dictate:before { content: \"\\e702\"; }\n    .sf-icon-chart:before { content: \"\\e703\"; }\n    .sf-icon-screenshot:before { content: \"\\e704\"; }\n    .sf-icon-smart-art:before { content: \"\\e706\"; }\n    .sf-icon-share:before { content: \"\\e707\"; }\n    .sf-icon-read:before { content: \"\\e708\"; }\n    .sf-icon-web-layout:before { content: \"\\e709\"; }\n    .sf-icon-mode:before { content: \"\\e70b\"; }\n    .sf-icon-draft:before { content: \"\\e70c\"; }\n    .sf-icon-reuse:before { content: \"\\e70f\"; }\n    .sf-icon-editor:before { content: \"\\e70a\"; }\n    .sf-icon-word:before { content: \"\\e70d\"; }\n\n</style>\n\n</div></body></html>","index.js":"{{ripple}}import './data-source';\n\n    var fontStyle = ['Algerian', 'Arial', 'Cambria', 'Calibri', 'Cambria Math', 'Candara', 'Courier New', 'Georgia', 'Impact', 'Segoe Script', 'Segoe Print', 'Segoe UI', 'Symbol', 'Times New Roman', 'Verdana', 'Windings'\n    ];\n    var fontSize = ['8', '9', '10', '11', '12', '14', '16', '18', '20', '22', '24', '26', '28', '36', '48', '72', '96'];\n    var tabs = [{\n        header: \"Home\",\n        groups: [{\n            header: \"Clipboard\",\n            groupIconCss: 'e-icons e-paste',\n            showLauncherIcon: true,\n            id: 'clipboard',\n            collections: [{\n                items: [{\n                    type: 'SplitButton',\n                    allowedSizes: ej.ribbon.RibbonItemSize.Large,\n                    disabled: true,\n                    id: 'pastebtn',\n                    splitButtonSettings: {\n                        content: 'Paste',\n                        iconCss: 'e-icons e-paste',\n                        items: [{ text: 'Keep Source Format' }, { text: 'Merge Format' }, { text: 'Keep Text Only' }],\n                        select: function (args) { updateContent(\"Paste -> \" + args.item.text); },\n                        click: function () { updateContent(\"Paste\"); }\n                    }\n                }]\n            }, {\n                items: [{\n                    type: 'Button',\n                    buttonSettings: {\n                        content: 'Cut',\n                        iconCss: 'e-icons e-cut',\n                        clicked: function () { updateContent(\"Cut\"); enablePaste(); }\n                    }\n                }, {\n                    type: 'Button',\n                    buttonSettings: {\n                        content: 'Copy',\n                        iconCss: 'e-icons e-copy',\n                        clicked: function () { updateContent(\"Copy\"); enablePaste(); }\n                    }\n                }, {\n                    type: 'Button',\n                    buttonSettings: {\n                        content: 'Format Painter',\n                        iconCss: 'e-icons e-format-painter',\n                        clicked: function () { updateContent(\"Format Painter\"); }\n                    }\n                }]\n            },]\n        }, {\n            header: \"Font\",\n            orientation: 'Row',\n            groupIconCss: 'e-icons e-bold',\n            isCollapsible: false,\n            enableGroupOverflow: true,\n            overflowHeader: 'More Font Options',\n            cssClass: 'font-group',\n            collections: [{\n                items: [{\n                    type: 'ComboBox',\n                    comboBoxSettings: {\n                        width: '115px',\n                        popupWidth: '150px',\n                        allowFiltering: true,\n                        dataSource: fontStyle,\n                        label: 'Font Style',\n                        index: 2,\n                        change: function (args) {\n                            if (args.itemData) {\n                                updateContent(\"Font Style -> \" + args.itemData.text);\n                            }\n                        }\n                    }\n                }, {\n                    type: 'ComboBox',\n                    comboBoxSettings: {\n                        dataSource: fontSize,\n                        label: 'Font Size',\n                        allowFiltering: true,\n                        index: 4,\n                        width: '65px',\n                        popupWidth: '85px',\n                        change: function (args) {\n                            if (args.itemData) {\n                                updateContent(\"Font Size -> \" + args.itemData.text);\n                            }\n                        }\n                    }\n                }]\n            }, {\n                items: [{\n                    type: 'GroupButton',\n                    allowedSizes: ej.ribbon.RibbonItemSize.Small,\n                    groupButtonSettings: {\n                        selection: ej.ribbon.RibbonGroupButtonSelection.Multiple,\n                        header: 'Format Styles',\n                        items: [\n                        {\n                            iconCss: 'e-icons e-bold',\n                            content: 'Bold',\n                            click: function () { updateContent(\"Bold\"); }\n                        }, {\n                            iconCss: 'e-icons e-italic',\n                            content: 'Italic',\n                            click: function () { updateContent(\"Italic\"); }\n                        }, {\n                            iconCss: 'e-icons e-underline',\n                            content: 'Underline',\n                            click: function () { updateContent(\"Underline\"); }\n                        }, {\n                            iconCss: 'e-icons e-strikethrough',\n                            content: 'Strikethrough',\n                            click: function () { updateContent(\"Strikethrough\"); }\n                        }, {\n                            iconCss: 'e-icons e-change-case',\n                            content: 'Change Case',\n                            click: function () { updateContent(\"Change Case\"); }\n                        }]\n                    }\n                }, {\n                    type: 'ColorPicker',\n                    allowedSizes: ej.ribbon.RibbonItemSize.Small,\n                    colorPickerSettings: {\n                        change: function (args) { updateContent(args.currentValue.hex + \" color\"); },\n                        value: '#123456'\n                    },\n                    displayOptions: ej.ribbon.DisplayMode.Simplified | ej.ribbon.DisplayMode.Classic,\n                }]\n            }]\n        }, {\n            id: 'paragraph',\n            orientation: 'Row',\n            header: \"Paragraph\",\n            groupIconCss: 'e-icons e-align-center',\n            collections: [{\n                items: [{\n                    type: \"Button\",\n                    allowedSizes: ej.ribbon.RibbonItemSize.Small,\n                    buttonSettings: {\n                        iconCss: 'e-icons e-decrease-indent',\n                        content: 'Decrease Indent',\n                        clicked: function () { updateContent(\"Cut\"); }\n                    }\n                }, {\n                    type: \"Button\",\n                    allowedSizes: ej.ribbon.RibbonItemSize.Small,\n                    buttonSettings: {\n                        iconCss: 'e-icons e-increase-indent',\n                        content: 'Increase Indent',\n                        clicked: function () { updateContent(\"Increase Indent\"); }\n                    }\n                }, {\n                    type: \"Button\",\n                    allowedSizes: ej.ribbon.RibbonItemSize.Small,\n                    buttonSettings: {\n                        iconCss: 'e-icons e-paragraph',\n                        content: 'Paragraph',\n                        clicked: function () { updateContent(\"Paragraph\"); }\n                    }\n                }]\n            }, {\n                items: [\n                    {\n                    type: 'GroupButton',\n                    allowedSizes: ej.ribbon.RibbonItemSize.Small,\n                    groupButtonSettings: {\n                        selection: ej.ribbon.RibbonGroupButtonSelection.Single,\n                        header: 'Alignment',\n                        items: [{\n                            selected: true,\n                            iconCss: 'e-icons e-align-left',\n                            click: function ()  { updateContent(\"Align Left\"); }\n                        }, {\n                            iconCss: 'e-icons e-align-center',\n                            click: function ()  { updateContent(\"Align Center\"); }\n                        }, {\n                            iconCss: 'e-icons e-align-right',\n                            click: function ()  { updateContent(\"Align Right\"); }\n                        }, {\n                            iconCss: 'e-icons e-justify',\n                            click: function ()  { updateContent(\"Justify\"); }\n                        }\n                    ]\n                    }\n                }]\n            }]\n        }, {\n            header: \"Editing\",\n            orientation: 'Column',\n            groupIconCss: 'e-icons e-edit',\n            collections: [{\n                items: [{\n                    type: 'SplitButton',\n                    splitButtonSettings: {\n                        content: 'Find',\n                        iconCss: 'e-icons e-search',\n                        items: [{ text: 'Find', iconCss: 'e-icons e-search' },\n                        { text: 'Advanced Find', iconCss: 'e-icons e-search' },\n                        { text: 'Go to', iconCss: 'e-icons e-arrow-right' }],\n                        select: function (args) { updateContent(\"Find -> \" + args.item.text); },\n                        click: function () { updateContent(\"Find\"); }\n                    }\n                }, {\n                    type: 'Button',\n                    buttonSettings: {\n                        content: 'Replace',\n                        iconCss: 'e-icons e-replace',\n                        clicked: function () { updateContent(\"Replace\"); }\n                    }\n                }, {\n                    type: 'SplitButton',\n                    splitButtonSettings: {\n                        content: 'Select',\n                        iconCss: 'e-icons e-mouse-pointer',\n                        items: [{ text: 'Select All' },\n                        { text: 'Select Objects' }],\n                        select: function (args) { updateContent(\"Select -> \" + args.item.text); },\n                        click: function () { updateContent(\"Select\"); }\n                    }\n                }]\n            }]\n        }, {\n            header: \"Voice\",\n            isCollapsible: false,\n            groupIconCss: 'sf-icon-dictate',\n            collections: [{\n                items: [{\n                    type: 'SplitButton',\n                    allowedSizes: ej.ribbon.RibbonItemSize.Large,\n                    splitButtonSettings: {\n                        content: 'Dictate',\n                        iconCss: 'sf-icon-dictate',\n                        items: [{ text: 'Chinese' }, { text: 'English' }, { text: 'German' }, { text: 'French' }],\n                        select: function (args) { updateContent(\"Dictate -> \" + args.item.text); },\n                        click: function () { updateContent(\"Dictate\"); }\n                    }\n                }]\n            }]\n        }, {\n            header: \"Editor\",\n            isCollapsible: false,\n            groupIconCss: 'sf-icon-editor',\n            collections: [{\n                items: [{\n                    type: 'Button',\n                    allowedSizes: ej.ribbon.RibbonItemSize.Large,\n                    buttonSettings: {\n                        content: 'Editor',\n                        iconCss: 'sf-icon-editor',\n                        clicked: function () { updateContent(\"Editor\"); }\n                    }\n                }]\n            }]\n        }, {\n            header: \"Reuse Files\",\n            isCollapsible: false,\n            groupIconCss: 'sf-icon-reuse',\n            collections: [{\n                items: [{\n                    type: 'Button',\n                    allowedSizes: ej.ribbon.RibbonItemSize.Large,\n                    disabled: true,\n                    buttonSettings: {\n                        content: 'Reuse Files',\n                        iconCss: 'sf-icon-reuse',\n                        clicked: function () { updateContent(\"Reuse Files\"); }\n                    }\n                }]\n            }]\n        }]\n    }, {\n        header: 'Insert',\n        groups: [{\n            header: 'Tables',\n            isCollapsible: false,\n            collections: [{\n                items: [{\n                    type: 'DropDown',\n                    allowedSizes: ej.ribbon.RibbonItemSize.Large,\n                    dropDownSettings: {\n                        content: 'Table',\n                        iconCss: 'e-icons e-table',\n                        items: [\n                            { text: 'Insert Table' }, { text: 'Draw Table' },\n                            { text: 'Convert Table' }, { text: 'Excel SpreadSheet' }\n                        ],\n                        select: function (args) { updateContent(\"Table -> \" + args.item.text); }\n                    }\n                }]\n            }]\n        }, {\n            header: 'Illustrations',\n            showLauncherIcon: true,\n            id: 'illustration',\n            orientation: 'Row',\n            enableGroupOverflow: true,\n            overflowHeader: 'Illustrations',\n            groupIconCss: 'e-icons e-image',\n            collections: [{\n                items: [{\n                    id: 'pictureddl',\n                    type: 'DropDown',\n                    dropDownSettings: {\n                        content: 'Pictures',\n                        iconCss: 'e-icons e-image',\n                        target: '#pictureList'\n                    }\n                }, {\n                    type: 'DropDown',\n                    dropDownSettings: {\n                        iconCss: 'sf-icon-shapes',\n                        content: 'Shapes',\n                        items: [{ text: 'Lines' }, { text: 'Rectangles' }, { text: 'Basic Arrows' }, { text: 'Basic Shapes' }, { text: 'FlowChart' }],\n                        select: function (args) { updateContent(\"Shapes -> \" + args.item.text); }\n                    }\n                }, {\n                    type: 'Button',\n                    buttonSettings: {\n                        content: '3D Models',\n                        iconCss: 'sf-icon-3d-model',\n                        clicked: function () { updateContent(\"3D Models\"); }\n                    }\n                }, {\n                    type: 'Button',\n                    buttonSettings: {\n                        content: 'SmartArt',\n                        iconCss: 'sf-icon-smart-art',\n                        clicked: function () { updateContent(\"SmartArt\"); }\n                    }\n                }, {\n                    type: 'Button',\n                    buttonSettings: {\n                        content: 'Chart',\n                        iconCss: 'sf-icon-chart',\n                        clicked: function () { updateContent(\"Chart\"); }\n                    }\n                }, {\n                    type: 'Button',\n                    buttonSettings: {\n                        content: 'Screenshot',\n                        iconCss: 'sf-icon-screenshot',\n                        clicked: function () { updateContent(\"Screenshot\"); }\n                    }\n                }]\n            }]\n        }, {\n            header: 'Header & Footer',\n            showLauncherIcon: true,\n            orientation: 'Column',\n            id: 'header_footer',\n            groupIconCss: 'e-icons e-table',\n            collections: [{\n                items: [{\n                    type: 'DropDown',\n                    dropDownSettings: {\n                        content: 'Header',\n                        iconCss: 'e-icons e-header',\n                        items: [{ text: 'Insert Header' }, { text: 'Edit Header' }, { text: 'Remove Header' }],\n                        select: function (args) { updateContent(\"Header -> \" + args.item.text); }\n                    }\n                }, {\n                    type: 'DropDown',\n                    dropDownSettings: {\n                        content: 'Footer',\n                        iconCss: 'e-icons e-footer',\n                        items: [{ text: 'Insert Footer' }, { text: 'Edit Footer' }, { text: 'Remove Footer' }],\n                        select: function (args) { updateContent(\"Footer -> \" + args.item.text); }\n                    }\n                }, {\n                    type: 'DropDown',\n                    dropDownSettings: {\n                        iconCss: 'e-icons e-page-numbering',\n                        content: 'Page Number',\n                        items: [{ text: 'Insert Top of page' }, { text: 'Insert Bottom of page' }, { text: 'Format Page Number' }, { text: 'Remove Page Number' }],\n                        select: function (args) { updateContent(\"Page Number -> \" + args.item.text); }\n                    }\n                }]\n            }]\n        },\n        {\n            header: 'Comments',\n            isCollapsible: false,\n            collections: [{\n                items: [{\n                    type: 'Button',\n                    allowedSizes: ej.ribbon.RibbonItemSize.Large,\n                    buttonSettings: {\n                        iconCss: 'e-icons e-comment-add',\n                        content: 'New Comment',\n                        clicked: function () { updateContent(\"New Comment\"); }\n                    }\n                }]\n            }]\n        }, {\n            header: 'Links',\n            groupIconCss: 'e-icons e-link',\n            isCollapsible: false,\n            collections: [{\n                items: [{\n                    type: 'DropDown',\n                    allowedSizes: ej.ribbon.RibbonItemSize.Large,\n                    dropDownSettings: {\n                        iconCss: 'e-icons e-link',\n                        content: 'Link',\n                        items: [{ text: 'Insert Link', iconCss: 'e-icons e-link' },\n                        { text: 'Recent Links', iconCss: 'e-icons e-clock' },\n                        { text: 'Bookmarks', iconCss: 'e-icons e-bookmark' }],\n                        select: function (args) { updateContent(\"Link -> \" + args.item.text); }\n                    }\n                }]\n            }]\n        }]\n    }, {\n        header: 'View',\n        groups: [{\n            header: 'Views',\n            orientation: 'Row',\n            groupIconCss: 'e-icons e-print',\n            collections: [{\n                items: [{\n                    type: 'Button',\n                    buttonSettings: {\n                        iconCss: 'sf-icon-read',\n                        content: 'Read Mode',\n                        clicked: function () { updateContent(\"Read Mode\"); }\n                    }\n                }, {\n                    type: 'Button',\n                    buttonSettings: {\n                        iconCss: 'e-print e-icons',\n                        content: 'Print Layout',\n                        clicked: function () { updateContent(\"Print Layout\"); }\n                    }\n                }, {\n                    type: 'Button',\n                    buttonSettings: {\n                        iconCss: 'sf-icon-web-layout',\n                        content: 'Web Layout',\n                        clicked: function () { updateContent(\"Web Layout\"); }\n                    }\n                }]\n            }]\n        }, {\n            header: 'Zoom',\n            orientation: 'Row',\n            groupIconCss: 'e-icons e-zoom-to-fit',\n            collections: [{\n                items: [{\n                    type: 'Button',\n                    buttonSettings: {\n                        iconCss: 'e-icons e-zoom-in',\n                        content: 'Zoom In',\n                        clicked: function () { updateContent(\"Zoom In\"); }\n                    }\n                }, {\n                    type: 'Button',\n                    buttonSettings: {\n                        iconCss: 'e-icons e-zoom-out',\n                        content: 'Zoom Out',\n                        clicked: function () { updateContent(\"Zoom Out\"); }\n                    }\n                }]\n            }]\n        }, {\n            header: 'Show',\n            isCollapsible: false,\n            collections: [{\n                items: [{\n                    type: 'CheckBox',\n                    checkBoxSettings: {\n                        label: 'Ruler',\n                        checked: false,\n                        change: function () { updateContent(\"Ruler\"); }\n                    }\n                }, {\n                    type: 'CheckBox',\n                    checkBoxSettings: {\n                        label: 'Gridlines',\n                        checked: false,\n                        change: function () { updateContent(\"Gridlines\"); }\n                    }\n                }, {\n                    type: 'CheckBox',\n                    checkBoxSettings: {\n                        label: 'Navigation Pane',\n                        checked: true,\n                        change: function () { updateContent(\"Navigation Pane\"); }\n                    }\n                }]\n            }]\n        }, {\n            header: 'Dark Mode',\n            isCollapsible: false,\n            collections: [{\n                items: [{\n                    type: 'Button',\n                    allowedSizes: ej.ribbon.RibbonItemSize.Large,\n                    buttonSettings: {\n                        iconCss: 'sf-icon-mode',\n                        content: 'Dark Mode',\n                        clicked: function () { updateContent(\"Dark Mode\"); }\n                    }\n                }]\n            }]\n        }]\n    }];\n    var list = new ej.lists.ListView({\n        showHeader: true,\n        id: 'listview',\n        headerTitle: 'Insert Picture From',\n        dataSource: ['This Device', 'Stock Images', 'Online Images'],\n        select: function (args) { updateContent(\"Picture -> \" + args.text); }\n    });\n    list.appendTo('#pictureList');\n\n    var menuItems = [\n        { id: 'new', text: 'New', iconCss: 'e-icons e-file-new' },\n        { id: 'open', text: 'Open', iconCss: 'e-icons e-folder-open' },\n        { id: 'rename', text: 'Rename', iconCss: 'e-icons e-rename' },\n        {\n            id: 'save',\n            iconCss: 'e-icons e-save',\n            text: 'Save as',\n            items: [\n                { text: 'Microsoft Word (.docx)', iconCss: 'sf-icon-word', id: 'word' },\n                { text: 'Microsoft Word 97-2003(.doc)', iconCss: 'sf-icon-word', id: 'word97' },\n                { text: 'Download as PDF', iconCss: 'e-icons e-export-pdf', id: 'pdf' },\n            ]\n        }\n    ];\n\n    var files = ({\n        menuItems: menuItems,\n        visible: true,\n        select: function (args) {\n            if (args.item.id == \"word\" || args.item.id == \"word97\" || args.item.id == \"pdf\") {\n                updateContent(\"File -> Save as -> \" + args.item.text);\n            }\n            else {\n                updateContent(\"File -> \" + args.item.text);\n            }\n        }\n    });\n\n    var ribbon = new ej.ribbon.Ribbon({\n        tabs: tabs,\n        activeLayout: 'Simplified',\n        fileMenu: files,\n        launcherIconClick: function (args) {\n            if (args.groupId == \"clipboard\") {\n                updateContent(\"Clipboard Launcher Icon\");\n            }\n            else if (args.groupId == \"illustration\") {\n                updateContent(\"Illustration Launcher Icon\");\n            }\n            else if (args.groupId == \"header_footer\") {\n                updateContent(\"Header & Footer Launcher Icon\");\n            }\n        }\n    });\n    ribbon.appendTo(\"#ribbon\");\n\n    var toast = new ej.notifications.Toast({\n        target: '#ribbonPlaceHolder',\n        cssClass: 'e-toast-info',\n        newestOnTop: true,\n        height: 25,\n        width: 'auto',\n        timeOut: 2000,\n        showCloseButton: true,\n        animation: { show: { effect: 'FadeIn' }, hide: { effect: 'FadeOut' } },\n        position: { X: \"Right\" },\n    });\n    toast.appendTo('#toast');\n\n    function updateContent(args) {\n        toast.show({ content: \"Last clicked item is \" + args });\n    }\n\n    var isPasteDisabled = true;    \n    function enablePaste() { \n        if (!isPasteDisabled) { return; }        \n        ribbon.enableItem('pastebtn');\n        isPasteDisabled = false;\n    }\n\n"}