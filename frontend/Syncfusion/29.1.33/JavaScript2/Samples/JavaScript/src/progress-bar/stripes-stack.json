{"data-source.js":"var loadProgressBarTheme = function (args) {\n    var selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    args.progressBar.theme = (selectedTheme.charAt(0).toUpperCase() +\n    selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        return selectedTheme;\n};","index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/progress-bar/stripes/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n        <div class=\"row linear-parent\">\n            <div id=\"danger\" class=\"linear-progress\"></div>\n            <div id=\"warning\" class=\"linear-progress\"></div>\n            <div id=\"info\" class=\"linear-progress\"></div>  \n            <div id=\"success\" class=\"linear-progress\"></div>    \n       </div>\n       <div class=\"row linear-button\">\n           <button id=\"animation\" class=\"e-control e-btn e-lib e-outline e-primary\">Stop Animation</button></div>\n       </div>\n    </div>\n    \n    \n    <style>\n        #control-container {\n            padding: 0px !important;\n        }\n        .linear-parent {\n            text-align: center;\n            margin-top: 2%;\n        }\n        .linear-button {\n            text-align: center;\n        }\n        .linear-progress {\n            width: 80%;\n            margin: auto;\n            margin-bottom: 3%;\n        }\n        #animation {\n            border-radius: 4px;\n            text-transform: capitalize;\n        }\n        \n    </style></body></html>","index.js":"{{ripple}}import './data-source';\n\n    var progressLoad = function (argument) {\n        loadProgressBarTheme(argument);\n        if (argument.progressBar.theme === 'Material') {\n            argument.progressBar.trackColor = '#EAEAEA';\n        }\n    };\n\n    var button = new ej.buttons.Button();\n    button = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });\n    button.appendTo('#reLoad');\n    \n    var dangerProgress = new ej.progressbar.ProgressBar({\n        type: 'Linear',\n        height: '30',\n        width: '100%',\n        value: 20,\n        trackThickness: 20,\n        progressThickness: 20,\n        role: 'Success',\n        isStriped: true,\n        animation: {\n            enable: true,\n            duration: 2000,\n            delay: 0,\n        },\n        load: progressLoad\n    });\n    dangerProgress.appendTo('#danger');\n    var warningProgress = new ej.progressbar.ProgressBar({\n        type: 'Linear',\n        height: '30',\n        width: '100%',\n        value: 40,\n        trackThickness: 20,\n        progressThickness: 20,\n        role: 'Info',\n        isStriped: true,\n        animation: {\n            enable: true,\n            duration: 2000,\n            delay: 0,\n        },\n        load: progressLoad\n    });\n    warningProgress.appendTo('#warning');\n    var infoProgress = new ej.progressbar.ProgressBar({\n        type: 'Linear',\n        height: '30',\n        width: '100%',\n        value: 70,\n        role: 'Warning',\n        trackThickness: 20,\n        progressThickness: 20,\n        isStriped: true,\n        animation: {\n            enable: true,\n            duration: 2000,\n            delay: 0,\n        },\n        load: progressLoad\n    });\n    infoProgress.appendTo('#info');\n    var successProgress = new ej.progressbar.ProgressBar({\n        type: 'Linear',\n        height: '30',\n        width: '100%',\n        value: 100,\n        trackThickness: 20,\n        progressThickness: 20,\n        role: 'Danger',\n        isStriped: true,\n        animation: {\n            enable: true,\n            duration: 2000,\n            delay: 0,\n        },\n        load: progressLoad\n    });\n    successProgress.appendTo('#success');\n    var animationBtn = document.getElementById('animation');\n    animationBtn.onclick = function () {\n        if (!dangerProgress.animation.enable) {\n            dangerProgress.animation.enable = true;\n            animationBtn.innerHTML = 'Stop Animation';\n            dangerProgress.refresh();\n        }\n        else {\n            dangerProgress.animation.enable = false;\n            animationBtn.innerHTML = 'Start Animation';\n            dangerProgress.refresh();\n        }\n        if (!warningProgress.animation.enable) {\n            warningProgress.animation.enable = true;\n            warningProgress.refresh();\n        }\n        else {\n            warningProgress.animation.enable = false;\n            warningProgress.refresh();\n        }\n        if (!infoProgress.animation.enable) {\n            infoProgress.animation.enable = true;\n            infoProgress.refresh();\n        }\n        else {\n            infoProgress.animation.enable = false;\n            infoProgress.refresh();\n        }\n        if (!successProgress.animation.enable) {\n            successProgress.animation.enable = true;\n            successProgress.refresh();\n        }\n        else {\n            successProgress.animation.enable = false;\n            successProgress.refresh();\n        }\n    };\n\n"}