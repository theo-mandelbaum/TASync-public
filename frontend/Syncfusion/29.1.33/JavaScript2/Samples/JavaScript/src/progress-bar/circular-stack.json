{"data-source.js":"var loadProgressBarTheme = function (args) {\n    var selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    args.progressBar.theme = (selectedTheme.charAt(0).toUpperCase() +\n    selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        return selectedTheme;\n};","index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/progress-bar/circular/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"row\" style=\"margin-top: 8%;\">\n        <div class=\"col-lg-3 col-md-3 col-3\" align=\"center\">\n            <div id=\"circular-container\"></div>\n            <div class=\"progress-text-align\">Determinate</div>\n        </div>\n\n        <div class=\"col-lg-3 col-md-3 col-3\" align=\"center\">\n            <div id=\"rtl-container\"></div>\n            <div class=\"progress-text-align\">Buffer </div>\n\n        </div>\n        <div class=\"col-lg-3 col-md-3 col-3\" align=\"center\">\n            <div id=\"track-container\"></div>\n            <div class=\"progress-text-align\">Segment</div>\n        </div>\n\n        <div class=\"col-lg-3 col-md-3 col-3\" align=\"center\">\n            <div id=\"rounded-container\"></div>\n            <div class=\"progress-text-align\">Indeterminate</div>\n        </div>\n    </div>\n    <div class=\"row\" align=\"center\">\n        <button id=\"reLoad\" class=\"e-control e-btn e-lib e-outline e-primary\">Reload</button>\n    </div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n    .progress-text-align {\n        font-family: Roboto-Regular;\n        font-size: 14px;     \n    }\n\n\n    #reLoad {\n        border-radius: 4px;\n        text-transform: capitalize;\n        margin-top: 3%;\n    }\n</style> </div></body></html>","index.js":"{{ripple}}import './data-source';\n\n  var div = document.getElementsByClassName('progress-text-align');\n  var progressLoad = function (args) {\n    loadProgressBarTheme(args);\n      if (args.progressBar.theme === 'HighContrast' || args.progressBar.theme === 'Bootstrap5Dark' || args.progressBar.theme === 'BootstrapDark' || args.progressBar.theme === 'FabricDark' || args.progressBar.theme === 'TailwindDark' || args.progressBar.theme === 'Tailwind3Dark' || args.progressBar.theme === 'MaterialDark' || args.progressBar.theme === 'Material3Dark' || args.progressBar.theme === 'Fluent2Dark' || args.progressBar.theme === 'Fluent2HighContrast') {\n          for (var j = 0; j < div.length; j++) {\n              div[j].setAttribute('style', 'color:white');\n          }\n      }\n  };\n\n  var reloadButton = new ej.buttons.Button();\n  reloadButton = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });\n  reloadButton.appendTo('#reLoad');\n\n  var circluar = new ej.progressbar.ProgressBar({\n    type: 'Circular',\n    value: 100,\n    startAngle: 180,\n    endAngle: 180,\n    width: '160px',\n    height: '160px',\n    enableRtl: false,\n    animation: {\n      enable: true,\n      duration: 2000,\n      delay: 0,\n    },\n    load: progressLoad\n  });\n  circluar.appendTo('#circular-container');\n\n  var rtl = new ej.progressbar.ProgressBar({\n    type: 'Circular',\n    value: 70,\n    width: '160px',\n    height: '160px',\n    secondaryProgress: 90,\n    animation: {\n      enable: true,\n      duration: 2000,\n      delay: 0,\n    },\n    load: progressLoad\n  });\n  rtl.appendTo('#rtl-container');\n\n  var track = new ej.progressbar.ProgressBar({\n    type: 'Circular',\n    minimum: 0,\n    maximum: 100,\n    value: 100,\n    width: '160px',\n    height: '160px',\n    segmentCount: 4,\n    animation: {\n      enable: true,\n      duration: 2000,\n      delay: 0,\n    },\n    load: progressLoad\n  });\n  track.appendTo('#track-container');\n\n  var rounded = new ej.progressbar.ProgressBar({\n    type: 'Circular',\n    value: 20,\n    width: '160px',\n    height: '160px',\n    cornerRadius: 'Round',\n    isIndeterminate: true,\n    animation: {\n      enable: true,\n      duration: 2000,\n      delay: 0,\n    },\n    load: progressLoad\n  });\n  rounded.appendTo('#rounded-container');\n\n  var replayBtn = document.getElementById('reLoad');\n  replayBtn.onclick = function () {\n    circluar.refresh();\n    rtl.refresh();\n    track.refresh();\n    rounded.refresh();\n  };\n"}