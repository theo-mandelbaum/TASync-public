{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"content-wrapper\">\n        <!-- Initialize Uploader -->\n        <div id=\"dropArea\" class=\"viewer-file-droparea\" style=\"height: auto; overflow: auto; margin-bottom: 25px;\">\n            <button id=\"browse\">Browse...</button>\n            <div><p style=\"margin: 15px;\">OR</p>\n                <p id=\"drop\">Drop files (Word, Excel, PowerPoint, Image, PDF)</p>\n            </div>\n            <div id=\"progressbarContainer\" style=\"display: block;\">\n                <div id=\"file-details\">\n                    <p id=\"fileName\"></p>\n                    <p id=\"fileSize\"></p>\n                </div>\n                <div id=\"linearProgressBar\" style=\"justify-content: center; display: none;\">\n                    <div id=\"progressbar\" style=\"width: fit-content;\"></div>\n                    <span id=\"progress-status\" style=\"padding: 18px 5px;\"></span>\n                </div>\n                <div id=\"uploadedMessage\" style=\"display: none; margin-top: 10px;\">\n                    <p style=\"color: rgb(110, 218, 110);\">File successfully uploaded...</p>\n                </div>\n                <div id=\"fileSupportMessage\" style=\"display: none; margin-top: 10px;\">\n                    <p style=\"color: rgb(203, 38, 38);\">File not supported!</p>\n                </div>\n                <div id=\"fileSizeValidation\" style=\"display: none; margin-top: 10px;\">\n                    <p style=\"color: rgb(203, 38, 38);\">Maximum file size is (4.0 MB) for this operation...</p>\n                </div>\n            </div>\n            <div style=\"display: none;\">\n                <input type=\"file\" name=\"UploadFiles\" id=\"fileupload\">\n            </div>\n        </div>\n        <div id=\"pdfviewer-container\" style=\"display: none;\">\n            <div class=\"flex-container\">\n                <label class=\"switchLabel\" for=\"checked\">Standalone PDF Viewer</label>\n                <div class=\"e-message render-mode-info\">\n                    <span class=\"e-msg-icon render-mode-info-icon\" title=\"Turn OFF to render the PDF Viewer as server-backed\"></span>\n                </div>\n                <input cssclass=\"buttonSwitch\" id=\"checked\" change=\"change\" type=\"checkbox\">\n            </div>\n            <div id=\"pdfViewer\" style=\"height:640px; width:100%;\" class=\"e-pv-multi-format-pdfviewer\"></div>\n        </div>\n    </div>\n</div>\n\n\n<style>\n    .viewer-file-droparea {\n        border: 1px dashed #c3c3cc;\n        position: relative;\n        text-align: center;\n        padding: 20px 0 10px;\n    }\n    .flex-container {\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n    }\n\n    .render-mode-info {\n        background: none;\n        border: none;\n        padding-left: 0px;\n    }\n\n    .render-mode-info .render-mode-info-icon {\n        height: 16px;\n        width: 16px;\n    }\n\n    .switchLabel {\n        font-family: \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", sans-serif;\n        font-weight: 400;\n        line-height: 20px;\n        letter-spacing: 0.24px;\n        text-align: right;\n        font-size: 14px;\n        margin-bottom: 3px;\n    }\n\n    .render-mode-info .render-mode-info-icon::before {\n        line-height: normal;\n    }\n\n    .buttonSwitch {\n        Width: 40px;\n        Height: 24px;\n    }\n\n    .e-pv-multi-format-pdfviewer .e-pv-text-search-bar\n    {\n        top: 40px !important;\n    }\n    \n    .e-bigger .e-pv-multi-format-pdfviewer .e-pv-text-search-bar\n    {\n        top: 48px !important;\n    }\n</style></div></body></html>","index.js":"{{ripple}}\n  // Render the PDF viewer control\n  var uploadProgressValue = 0;\n  var pdfViewerProgressValue = 0;\n  var totalProgress;\n  var extensions = ['doc','docx','rtf','docm','dotm','dotx','dot','xls','xlsx','pptx','pptm','potx','potm','jpeg','png','bmp','pdf','jpg'];\n  var viewer = new ej.pdfviewer.PdfViewer ({\n    resourceUrl:'https://cdn.syncfusion.com/ej2/23.2.6/dist/ej2-pdfviewer-lib',\n    documentLoad: documentLoaded,\n    ajaxRequestSuccess: ajaxRequestSuccess,\n  });\n  ej.pdfviewer.PdfViewer.Inject(ej.pdfviewer.Toolbar, ej.pdfviewer.Magnification, ej.pdfviewer.BookmarkView, ej.pdfviewer.ThumbnailView, ej.pdfviewer.TextSelection, ej.pdfviewer.TextSearch, ej.pdfviewer.Print, ej.pdfviewer.Navigation, ej.pdfviewer.LinkAnnotation, ej.pdfviewer.Annotation,  ej.pdfviewer.FormFields, ej.pdfviewer.FormDesigner);\n  viewer.toolbarSettings = { showTooltip : true, toolbarItems: [ 'UndoRedoTool', 'PageNavigationTool', 'MagnificationTool', 'PanTool', 'SelectionTool', 'CommentTool', 'SubmitForm', 'SearchOption', 'AnnotationEditTool', 'FormDesignerEditTool', 'PrintOption', 'DownloadOption']};\n  \n  var switchObj = new ejs.buttons.Switch({ checked: true });\n  switchObj.appendTo('#checked');\n  switchObj.change = function (args) {\n    if (args.checked) {\n        viewer.serviceUrl = '';\n    }\n    else {\n        viewer.serviceUrl = 'http://localhost:62728/api/pdfviewer';\n    }\n    viewer.dataBind();\n    viewer.load(viewer.documentPath, null);\n  };\n  viewer.zoomMode = 'FitToPage';\n  viewer.appendTo('#pdfViewer');\n\n  var button = new ej.buttons.Button({});\n  button.appendTo('#browse');\n\n  var dropElement = document.getElementById('dropArea');\n  var uploadObj = new ej.inputs.Uploader({\n    dropArea: document.getElementById('dropArea'),\n    selected: onSelect,\n    multiple: false,\n    allowedExtensions: '.doc,.docx,.rtf,.docm,.dotm,.dotx,.dot,.xls,.xlsx,.pptx,.pptm,.potx,.potm.jpeg,.png,.bmp,.pdf,.jpg',\n  });\n  uploadObj.appendTo('#fileupload');\n\n  var parentElement;\n  if(ej.base.Browser.isDevice) {\n    document.getElementById('drop').style.padding = '0px 10%';\n  }\n  document.getElementById('browse').onclick = function () {\n    document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();\n    return false;\n  };\n\n  var progressLoad = function (args) {\n    var linearTheme = location.hash.split('/')[1];\n    linearTheme = linearTheme ? linearTheme : 'Material';\n    args.progressBar.theme = (linearTheme.charAt(0).toUpperCase() +\n        linearTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\n    if(linearTheme === 'fabric') {\n      args.progressBar.secondaryProgressColor = '#b0d0e9';\n    } else if (linearTheme === 'material-dark') {\n      args.progressBar.secondaryProgressColor = '#b8b8b8';\n    } else if (linearTheme === 'material') {\n      args.progressBar.secondaryProgressColor = '#f087ab';\n    } else if (linearTheme === 'bootstrap5-dark') {\n      args.progressBar.secondaryProgressColor = '#2b5288';\n    } else if (linearTheme === 'bootstrap5') {\n      args.progressBar.secondaryProgressColor = '#98c5f5';\n    } else if (linearTheme === 'bootstrap') {\n      args.progressBar.secondaryProgressColor = '#acc6dc';\n    }\n    else if (linearTheme === 'bootstrap4') {\n      args.progressBar.secondaryProgressColor = '#98c5f5';\n    }\n    else if (linearTheme === 'bootstrap-dark') {\n      args.progressBar.secondaryProgressColor = '#b8b8b8';\n    } else if (linearTheme === 'highcontrast') {\n      args.progressBar.secondaryProgressColor = '#aca379';\n    } else if (linearTheme === 'fluent-dark') {\n      args.progressBar.secondaryProgressColor = '#2b5288';\n    } else if (linearTheme === 'fluent') {\n      args.progressBar.secondaryProgressColor = '#98c5f5';\n    } else if (linearTheme === 'tailwind-dark') {\n      args.progressBar.secondaryProgressColor = '#386e7f';\n    } else if (linearTheme === 'tailwind') {\n      args.progressBar.secondaryProgressColor = '#b1afe9';\n    }\n  };\n  var uploadProgress = new ej.progressbar.ProgressBar({\n    type: 'Linear',\n    height: '60',\n    width: '250',\n    animation: {\n      enable: false,\n      duration: 0,\n      delay: 0,\n    },\n    load: progressLoad,\n  });\n  uploadProgress.appendTo('#progressbar');\n\n  function onSelect(args) {\n    uploadProgress.value = 0;\n    uploadProgress.refresh();\n    var progressBarContainer = document.getElementById(\"progressbarContainer\");\n    var progressBar = document.getElementById(\"linearProgressBar\");\n    var progressMessage = document.getElementById(\"uploadedMessage\");\n    var fileSupportMessage = document.getElementById(\"fileSupportMessage\");\n    var fileDetails = document.getElementById(\"file-details\");\n    var fileSizeValidation = document.getElementById(\"fileSizeValidation\");\n    progressBarContainer.style.display = \"block\";\n    progressBar.style.display = \"flex\";\n    progressMessage.style.display = \"none\";\n    fileSupportMessage.style.display = \"none\";\n    fileSizeValidation.style.display = \"none\";\n    if(!dropElement.querySelector('li')) {\n      this.filesData = [];\n    }\n    if(ej.base.isNullOrUndefined(document.getElementById('dropArea').querySelector('.e-upload-files'))) {\n      parentElement = ej.base.createElement('ul', {className: 'e-upload-files',});\n      document.getElementsByClassName('e-upload')[0].appendChild(parentElement);\n    }\n    var validFiles = args.filesData;\n    if (validFiles.length === 0) {\n      progressBarContainer.style.display = \"block\";\n      progressBar.style.display = \"none\";\n      if(document.getElementById('pdfviewer-container').style.display === \"block\"){\n        progressMessage.style.display = \"block\";\n        fileDetails.style.display = \"block\";\n      }\n      args.cancel = true;\n      return;\n    }\n    if(!extensions.includes(validFiles[0].type)){\n      fileSupportMessage.style.display = \"block\";\n      progressBar.style.display = \"none\";\n      fileDetails.style.display = \"none\";\n      args.cancel = true;\n      return;\n    }\n    if(validFiles[0].type != \"pdf\" && validFiles[0].size>4000000){\n      fileSizeValidation.style.display = \"block\";\n      progressBar.style.display = \"none\";\n      fileDetails.style.display = \"none\";\n      args.cancel = true;\n      return;\n    }\n    fileDetails.style.display = \"block\";\n    document.getElementById(\"fileName\").innerHTML = args.filesData[0].name;\n    viewer.downloadFileName = args.filesData[0].name;\n    viewer.exportAnnotationFileName = args.filesData[0].name;\n    var size = document.getElementById(\"fileSize\");\n    if((args.filesData[0].size.toString()).length <= 6){\n      size.innerHTML = ((args.filesData[0].size/1024).toFixed(1)).toString()+\" KB\";\n    } else {\n      var kbsize = args.filesData[0].size/1024;\n      size.innerHTML = ((kbsize/1024).toFixed(1)).toString()+\" MB\";\n    }\n    formSelectedData(validFiles[0], this);\n    this.filesData = this.filesData.concat(validFiles);\n    args.cancel = true;\n  }\n\n  function formSelectedData(file, proxy) {\n    var liEle = ej.base.createElement('li', {\n      className: 'e-upload-file-list',\n      attrs: {\n        'data-file-name': file.name\n      },\n    });\n    readURL(liEle, file);\n    proxy.fileList.push(liEle);\n  }\n\n  function readURL(li, args) {\n    var file = args.rawFile;\n    var reader = new FileReader();\n    var type = args.type;\n    reader.addEventListener('load', function () {\n      var post = JSON.stringify({\n        'data': reader.result,\n        'type': type\n      });\n      var url = \"http://localhost:62728/api/pdfviewer/LoadFile\";\n      var xhr = new XMLHttpRequest();\n      xhr.open('Post', url, true);\n      xhr.setRequestHeader('Content-type', 'application/json; charset=UTF-8');\n      xhr.upload.addEventListener('progress', function(event){\n        if (event.lengthComputable) {\n          var progressValue = Math.round((event.loaded / event.total) * 100);\n          uploadProgressValue = progressValue;\n          totalProgress = calculateTotalProgress();\n          updateProgressBar(totalProgress);\n          document.getElementById(\"progress-status\").innerHTML = totalProgress.toString()+\"%\";\n        }\n      });\n      xhr.onload = function (args) {\n        viewer.documentPath = this.responseText;\n        pdfViewerProgressValue = 60;\n        totalProgress = calculateTotalProgress();\n        updateProgressBar(totalProgress);\n        document.getElementById(\"progress-status\").innerHTML = totalProgress.toString()+\"%\";\n        document.getElementById(\"pdfviewer-container\").style.display = \"block\";\n      };\n      xhr.send(post);\n    }, false);\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  }\n\n  function calculateTotalProgress(){\n    totalProgress = (uploadProgressValue + pdfViewerProgressValue)/2;\n    return totalProgress;\n  }\n\n  function updateProgressBar(progress) {\n    uploadProgress.value = progress;\n    uploadProgress.dataBind();\n  }\n\n  function documentLoaded(){\n    var progressValue = document.getElementById(\"progress-status\");\n    pdfViewerProgressValue = 100;\n    totalProgress = calculateTotalProgress();\n    updateProgressBar(totalProgress);\n    progressValue.innerHTML = totalProgress.toString()+\"%\";\n    setTimeout(function(){\n      document.getElementById(\"linearProgressBar\").style.display = \"none\";\n      document.getElementById(\"uploadedMessage\").style.display = \"block\";\n      uploadProgressValue = 0;\n      pdfViewerProgressValue = 0;\n      progressValue.innerHTML = \"0%\";\n    },1000);\n  }\n\n  function ajaxRequestSuccess(args){\n    var progressValue = document.getElementById(\"progress-status\");\n    if (args.action === \"Load\") {\n      pdfViewerProgressValue = 70;\n      totalProgress = calculateTotalProgress();\n      updateProgressBar(totalProgress);\n      progressValue.innerHTML = totalProgress.toString()+\"%\";\n    }\n    if (args.action === \"RenderPdfPages\") {\n      if(pdfViewerProgressValue < 90){\n        pdfViewerProgressValue = pdfViewerProgressValue + 10;\n        totalProgress = calculateTotalProgress();\n        updateProgressBar(totalProgress);\n        progressValue.innerHTML = totalProgress.toString()+\"%\";\n      }\n    }\n  }\n"}