{"data-source.js":"\nwindow.orderdata = [{\n    OrderID: 10248,\n    CustomerID: \"VINET\",\n    EmployeeID: 1,\n    OrderDate: new Date(8364186e5),\n    ShipName: \"Vins et alcools Chevalier\",\n    ShipCity: \"Reims\",\n    ShipAddress: \"59 rue de l'Abbaye\",\n    ShipRegion: null,\n    ShipPostalCode: \"51100\",\n    ShipCountry: \"France\",\n    Freight: 32.38,\n    Verified: !0\n}, {\n    OrderID: 10249,\n    CustomerID: \"TOMSP\",\n    EmployeeID: 2,\n    OrderDate: new Date(836505e6),\n    ShipName: \"Toms Spezialitäten\",\n    ShipCity: \"Münster\",\n    ShipAddress: \"Luisenstr. 48\",\n    ShipRegion: null,\n    ShipPostalCode: \"44087\",\n    ShipCountry: \"Germany\",\n    Freight: 11.61,\n    Verified: !1\n}, {\n    OrderID: 10250,\n    CustomerID: \"HANAR\",\n    EmployeeID: 3,\n    OrderDate: new Date(8367642e5),\n    ShipName: \"Hanari Carnes\",\n    ShipCity: \"Rio de Janeiro\",\n    ShipAddress: \"Rua do Paço, 67\",\n    ShipRegion: \"RJ\",\n    ShipPostalCode: \"05454-876\",\n    ShipCountry: \"Brazil\",\n    Freight: 65.83,\n    Verified: !0\n}, {\n    OrderID: 10251,\n    CustomerID: \"VICTE\",\n    EmployeeID: 4,\n    OrderDate: new Date(8367642e5),\n    ShipName: \"Victuailles en stock\",\n    ShipCity: \"Lyon\",\n    ShipAddress: \"2, rue du Commerce\",\n    ShipRegion: null,\n    ShipPostalCode: \"69004\",\n    ShipCountry: \"France\",\n    Freight: 41.34,\n    Verified: !0\n}, {\n    OrderID: 10252,\n    CustomerID: \"SUPRD\",\n    EmployeeID: 5,\n    OrderDate: new Date(8368506e5),\n    ShipName: \"Suprêmes délices\",\n    ShipCity: \"Charleroi\",\n    ShipAddress: \"Boulevard Tirou, 255\",\n    ShipRegion: null,\n    ShipPostalCode: \"B-6000\",\n    ShipCountry: \"Belgium\",\n    Freight: 51.3,\n    Verified: !0\n}, {\n    OrderID: 10253,\n    CustomerID: \"HANAR\",\n    EmployeeID: 6,\n    OrderDate: new Date(836937e6),\n    ShipName: \"Hanari Carnes\",\n    ShipCity: \"Rio de Janeiro\",\n    ShipAddress: \"Rua do Paço, 67\",\n    ShipRegion: \"RJ\",\n    ShipPostalCode: \"05454-876\",\n    ShipCountry: \"Brazil\",\n    Freight: 58.17,\n    Verified: !0\n}, {\n    OrderID: 10254,\n    CustomerID: \"CHOPS\",\n    EmployeeID: 7,\n    OrderDate: new Date(8370234e5),\n    ShipName: \"Chop-suey Chinese\",\n    ShipCity: \"Bern\",\n    ShipAddress: \"Hauptstr. 31\",\n    ShipRegion: null,\n    ShipPostalCode: \"3012\",\n    ShipCountry: \"Switzerland\",\n    Freight: 22.98,\n    Verified: !1\n}, {\n    OrderID: 10255,\n    CustomerID: \"RICSU\",\n    EmployeeID: 8,\n    OrderDate: new Date(8371098e5),\n    ShipName: \"Richter Supermarkt\",\n    ShipCity: \"Genève\",\n    ShipAddress: \"Starenweg 5\",\n    ShipRegion: null,\n    ShipPostalCode: \"1204\",\n    ShipCountry: \"Switzerland\",\n    Freight: 148.33,\n    Verified: !0\n}, {\n    OrderID: 10256,\n    CustomerID: \"WELLI\",\n    EmployeeID: 9,\n    OrderDate: new Date(837369e6),\n    ShipName: \"Wellington Importadora\",\n    ShipCity: \"Resende\",\n    ShipAddress: \"Rua do Mercado, 12\",\n    ShipRegion: \"SP\",\n    ShipPostalCode: \"08737-363\",\n    ShipCountry: \"Brazil\",\n    Freight: 13.97,\n    Verified: !1\n}, {\n    OrderID: 10257,\n    CustomerID: \"HILAA\",\n    EmployeeID: 10,\n    OrderDate: new Date(8374554e5),\n    ShipName: \"HILARION-Abastos\",\n    ShipCity: \"San Cristóbal\",\n    ShipAddress: \"Carrera 22 con Ave. Carlos Soublette #8-35\",\n    ShipRegion: \"Táchira\",\n    ShipPostalCode: \"5022\",\n    ShipCountry: \"Venezuela\",\n    Freight: 81.91,\n    Verified: !0\n}, {\n    OrderID: 10258,\n    CustomerID: \"ERNSH\",\n    EmployeeID: 11,\n    OrderDate: new Date(8375418e5),\n    ShipName: \"Ernst Handel\",\n    ShipCity: \"Graz\",\n    ShipAddress: \"Kirchgasse 6\",\n    ShipRegion: null,\n    ShipPostalCode: \"8010\",\n    ShipCountry: \"Austria\",\n    Freight: 140.51,\n    Verified: !0\n}, {\n    OrderID: 10259,\n    CustomerID: \"CENTC\",\n    EmployeeID: 12,\n    OrderDate: new Date(8376282e5),\n    ShipName: \"Centro comercial Moctezuma\",\n    ShipCity: \"México D.F.\",\n    ShipAddress: \"Sierras de Granada 9993\",\n    ShipRegion: null,\n    ShipPostalCode: \"05022\",\n    ShipCountry: \"Mexico\",\n    Freight: 3.25,\n    Verified: !1\n}, {\n    OrderID: 10260,\n    CustomerID: \"OTTIK\",\n    EmployeeID: 13,\n    OrderDate: new Date(8377146e5),\n    ShipName: \"Ottilies Käseladen\",\n    ShipCity: \"Köln\",\n    ShipAddress: \"Mehrheimerstr. 369\",\n    ShipRegion: null,\n    ShipPostalCode: \"50739\",\n    ShipCountry: \"Germany\",\n    Freight: 55.09,\n    Verified: !0\n}, {\n    OrderID: 10261,\n    CustomerID: \"QUEDE\",\n    EmployeeID: 14,\n    OrderDate: new Date(8377146e5),\n    ShipName: \"Que Delícia\",\n    ShipCity: \"Rio de Janeiro\",\n    ShipAddress: \"Rua da Panificadora, 12\",\n    ShipRegion: \"RJ\",\n    ShipPostalCode: \"02389-673\",\n    ShipCountry: \"Brazil\",\n    Freight: 3.05,\n    Verified: !1\n}, {\n    OrderID: 10262,\n    CustomerID: \"RATTC\",\n    EmployeeID: 15,\n    OrderDate: new Date(8379738e5),\n    ShipName: \"Rattlesnake Canyon Grocery\",\n    ShipCity: \"Albuquerque\",\n    ShipAddress: \"2817 Milton Dr.\",\n    ShipRegion: \"NM\",\n    ShipPostalCode: \"87110\",\n    ShipCountry: \"USA\",\n    Freight: 48.29,\n    Verified: !0\n}, {\n    OrderID: 10263,\n    CustomerID: \"ERNSH\",\n    EmployeeID: 16,\n    OrderDate: new Date(8380602e5),\n    ShipName: \"Ernst Handel\",\n    ShipCity: \"Graz\",\n    ShipAddress: \"Kirchgasse 6\",\n    ShipRegion: null,\n    ShipPostalCode: \"8010\",\n    ShipCountry: \"Austria\",\n    Freight: 146.06,\n    Verified: !0\n}, {\n    OrderID: 10264,\n    CustomerID: \"FOLKO\",\n    EmployeeID: 17,\n    OrderDate: new Date(8381466e5),\n    ShipName: \"Folk och fä HB\",\n    ShipCity: \"Bräcke\",\n    ShipAddress: \"Åkergatan 24\",\n    ShipRegion: null,\n    ShipPostalCode: \"S-844 67\",\n    ShipCountry: \"Sweden\",\n    Freight: 3.67,\n    Verified: !1\n}, {\n    OrderID: 10265,\n    CustomerID: \"BLONP\",\n    EmployeeID: 18,\n    OrderDate: new Date(838233e6),\n    ShipName: \"Blondel père et fils\",\n    ShipCity: \"Strasbourg\",\n    ShipAddress: \"24, place Kléber\",\n    ShipRegion: null,\n    ShipPostalCode: \"67000\",\n    ShipCountry: \"France\",\n    Freight: 55.28,\n    Verified: !0\n}, {\n    OrderID: 10266,\n    CustomerID: \"WARTH\",\n    EmployeeID: 19,\n    OrderDate: new Date(8383194e5),\n    ShipName: \"Wartian Herkku\",\n    ShipCity: \"Oulu\",\n    ShipAddress: \"Torikatu 38\",\n    ShipRegion: null,\n    ShipPostalCode: \"90110\",\n    ShipCountry: \"Finland\",\n    Freight: 25.73,\n    Verified: !1\n}, {\n    OrderID: 10267,\n    CustomerID: \"FRANK\",\n    EmployeeID: 20,\n    OrderDate: new Date(8385786e5),\n    ShipName: \"Frankenversand\",\n    ShipCity: \"München\",\n    ShipAddress: \"Berliner Platz 43\",\n    ShipRegion: null,\n    ShipPostalCode: \"80805\",\n    ShipCountry: \"Germany\",\n    Freight: 208.58,\n    Verified: !0\n},\n\n];\nwindow.products = [\n{\n    id: 1,\n    name: 'Product A',\n    previousYear: 10,\n    lastYear: 20\n},\n{\n    id: 2,\n    name: 'Product B',\n    previousYear: 20,\n    lastYear: 30\n},\n{\n    id: 3,\n    name: 'Product C',\n    previousYear: 30,\n    lastYear: 20\n},\n{\n    id: 4,\n    name: 'Product D',\n    previousYear: 40,\n    lastYear: 10\n},\n{\n    id: 5,\n    name: 'Product E',\n    previousYear: 20,\n    lastYear: 30\n}\n];\n\nwindow.lineData = [\n    [0, 6, 4, 1, 3, 2, 5],\n    [5, 4, 6, 3, 1, 2, 0],\n    [6, 4, 0, 3, 2, 5, 1],\n    [4, 6, 3, 0, 1, 2, 5],\n    [3, 5, 6, 4, 0, 1, 2],\n    [1, 3, 4, 2, 5, 0, 6],\n    [2, 4, 0, 3, 5, 6, 1],\n    [5, 4, 6, 3, 1, 2, 1],\n    [0, 6, 4, 1, 3, 2, 6],\n    [6, 4, 0, 3, 2, 5, 2],\n    [4, 6, 3, 0, 1, 2, 4],\n    [3, 5, 6, 4, 0, 1, 3],\n    [1, 3, 4, 2, 5, 0, 5],\n    [2, 4, 0, 3, 5, 6, 2],\n    [4, 4, 6, 3, 1, 2, 0],\n    [1, 6, 4, 1, 3, 2, 5],\n    [5, 4, 0, 3, 2, 5, 1],\n    [5, 6, 3, 0, 1, 2, 5],\n    [3, 4, 0, 3, 5, 6, 1],\n    [4, 5, 6, 4, 0, 1, 2],\n    [1, 3, 4, 2, 5, 0, 7]\n];\nwindow.columnData = [\n    [0, 6, -4, 1, -3, 2, 5],\n    [5, -4, 6, 3, -1, 2, 0],\n    [6, 4, 0, 3, -2, 5, 1],\n    [4, -6, 3, 0, 1, -2, 5],\n    [3, 5, -6, -4, 0, 1, 2],\n    [1, -3, 4, -2, 5, 0, 6],\n    [2, 4, 0, -3, 5, -6, 1],\n    [5, 4, -6, 3, 1, -2, 0],\n    [0, -6, 4, 1, -3, 2, 5],\n    [6, 4, 0, -3, 2, -5, 1],\n    [4, 6, -3, 0, 1, 2, 5],\n    [3, -5, -6, 4, 0, 1, 2],\n    [1, 3, -4, -2, 5, 0, 6],\n    [2, -4, 0, -3, 5, 6, 1],\n    [5, 4, -6, 3, 1, -2, 0],\n    [0, 6, 4, -1, -3, 2, 5],\n    [6, -4, 0, -3, 2, 5, 1],\n    [4, 6, -3, 0, -1, 2, 5],\n    [6, 4, 0, -3, 2, -5, 1],\n    [3, 5, 6, -4, 0, 1, 2],\n    [1, 3, -4, 2, -5, 0, 6]\n];\nwindow.defaultSparkData = [\n    { x: 0, xval: '2005', yval: 20090440, yval1: 32805040, yval2: 1306314000, yval3: 60656180, yval4: 82431390, yval5: 1080264000,  yval6: 143420300, yval7: 9001774, yval8: 60441460, yval9: 295734100, yval10: 2.61, yval11: 3.29, yval12: 136.12, yval13: 110.88, yval14: 230.89, yval15: 328.59, yval16: 8.4 , yval17: 20.01, yval18: 246.88, yval19: 30.71,  yval20: 1 , yval21: 1 , yval22: 1 ,  yval23: 1 , yval24: 0 , yval25: 1 , yval26: 1 , yval27: 1 , yval28: 1 , yval29: 1 , yval30: 12.26, yval31: 10.84, yval32: 13.14, yval33: 12.15, yval34: 8.33, yval35: 22.32, yval36: 9.8  , yval37: 10.36, yval38: 10.78, yval39: 14.14 },\n    { x: 1, xval: '2006', yval: 20264080, yval1: 33098930, yval2: 1313974000, yval3: 60876140, yval4: 82422300, yval5: 1095352000,  yval6: 142893500, yval7: 9016596, yval8: 60609150, yval9: 298444200, yval10: 2.64, yval11: 3.31, yval12: 136.92, yval13: 111.28, yval14: 230.86, yval15: 333.18, yval16: 8.37, yval17: 20.04, yval18: 247.57, yval19: 30.99,  yval20: -1, yval21: -1, yval22: 1 ,  yval23: -1, yval24: 1 , yval25: -1, yval26: 0 , yval27: -1, yval28: 0 , yval29: -1, yval30: 12.14, yval31: 10.78, yval32: 13.25, yval33: 11.99, yval34: 8.25, yval35: 22.01, yval36: 9.95 , yval37: 10.27, yval38: 10.71, yval39: 14.14 },\n    { x: 2, xval: '2007', yval: 20434180, yval1: 33390140, yval2: 1321852000, yval3: 63713930, yval4: 82400990, yval5: 1129866000,  yval6: 141377800, yval7: 9031088, yval8: 60776240, yval9: 301139900, yval10: 2.66, yval11: 3.34, yval12: 137.74, yval13: 99.02 , yval14: 230.8 , yval15: 343.68, yval16: 8.28, yval17: 20.07, yval18: 248.25, yval19: 30.65,  yval20: -1, yval21: -1, yval22: 1 ,  yval23: 1 , yval24: -1, yval25: 1 , yval26: -1, yval27: 0 , yval28: 0 , yval29: -1, yval30: 12.02, yval31: 10.75, yval32: 13.45, yval33: 12.91, yval34: 8.2 , yval35: 22.69, yval36: 10.92, yval37: 10.2 , yval38: 10.67, yval39: 14.16 },\n    { x: 3, xval: '2008', yval: 21007310, yval1: 33212700, yval2: 1330045000, yval3: 64057790, yval4: 82369550, yval5: 1147996000,  yval6: 140702100, yval7: 9045389, yval8: 60943910, yval9: 303824600, yval10: 2.73, yval11: 3.33, yval12: 138.59, yval13: 99.56 , yval14: 230.71, yval15: 349.19, yval16: 8.24, yval17: 20.1 , yval18: 248.93, yval19: 30.92,  yval20: 1 , yval21: -1, yval22: 1 ,  yval23: -1, yval24: -1, yval25: -1, yval26: 1 , yval27: 0 , yval28: 0 , yval29: -1, yval30: 12.55, yval31: 10.29, yval32: 13.71, yval33: 12.73, yval34: 8.18, yval35: 22.22, yval36: 11.03, yval37: 10.15, yval38: 10.65, yval39: 14.18 },\n    { x: 4, xval: '2009', yval: 21262640, yval1: 33487210, yval2: 1338613000, yval3: 64057790, yval4: 82329760, yval5: 1166079000,  yval6: 140041200, yval7: 9059651, yval8: 61113200, yval9: 307212100, yval10: 2.75, yval11: 3.35, yval12: 139.48, yval13: 99.56 , yval14: 230.6 , yval15: 354.73, yval16: 8.19, yval17: 20.12, yval18: 250.86, yval19: 31.26,  yval20: -1, yval21: -1, yval22: 1 ,  yval23: -1, yval24: -1, yval25: -1, yval26: 0 , yval27: 0 , yval28: 0 , yval29: 1 , yval30: 12.47, yval31: 10.28, yval32: 14   , yval33: 12.57, yval34: 8.18, yval35: 21.76, yval36: 11.1 , yval37: 10.13, yval38: 10.65, yval39: 13.82 },\n    { x: 5, xval: '2010', yval: 21515750, yval1: 33759740, yval2: 1330141000, yval3: 64768390, yval4: 82282990, yval5: 1173108000,  yval6: 139390200, yval7: 9074055, yval8: 62348450, yval9: 310232900, yval10: 2.78, yval11: 3.38, yval12: 138.6 , yval13: 100.66, yval14: 230.47, yval15: 356.86, yval16: 8.15, yval17: 20.15, yval18: 255.94, yval19: 31.57,  yval20: -1, yval21: -1, yval22: -1,  yval23: -1, yval24: -1, yval25: -1, yval26: 0 , yval27: 0 , yval28: 1 , yval29: -1, yval30: 12.39, yval31: 10.28, yval32: 12.17, yval33: 12.43, yval34: 8.21, yval35: 21.34, yval36: 11.11, yval37: 10.14, yval38: 12.34, yval39: 13.83 },\n    { x: 6, xval: '2011', yval: 21766710, yval1: 34030590, yval2: 1336718000, yval3: 65312250, yval4: 81471830, yval5: 1189173000,  yval6: 138739900, yval7: 9074055, yval8: 62698360, yval9: 313232000, yval10: 2.81, yval11: 3.41, yval12: 139.29, yval13: 101.45, yval14: 228.2 , yval15: 361.75, yval16: 8.11, yval17: 20.18, yval18: 257.37, yval19: 31.88,  yval20: -1, yval21: -1, yval22: 0 ,  yval23: -1, yval24: 1 , yval25: -1, yval26: 0 , yval27: 0 , yval28: 0 , yval29: -1, yval30: 12.33, yval31: 10.28, yval32: 12.29, yval33: 12.29, yval34: 8.3 , yval35: 20.97, yval36: 11.05, yval37: 10.18, yval38: 12.29, yval39: 13.83 },\n    { x: 7, xval: '2012', yval: 22015580, yval1: 34300080, yval2: 1343240000, yval3: 65630690, yval4: 81305860, yval5: 1205074000,  yval6: 142517700, yval7: 9103788, yval8: 63047160, yval9: 313847500, yval10: 2.84, yval11: 3.44, yval12: 139.97, yval13: 101.94, yval14: 227.73, yval15: 366.59, yval16: 8.34, yval17: 20.22, yval18: 258.8 , yval19: 31.94,  yval20: -1, yval21: -1, yval22: -1,  yval23: 0 , yval24: 1 , yval25: -1, yval26: -1, yval27: 1 , yval28: -1, yval29: -1, yval30: 12.28, yval31: 10.28, yval32: 12.31, yval33: 12.72, yval34: 8.33, yval35: 20.6 , yval36: 10.94, yval37: 10.24, yval38: 12.27, yval39: 13.68 },\n    { x: 8, xval: '2013', yval: 22262500, yval1: 34568210, yval2: 1349586000, yval3: 65951610, yval4: 81147260, yval5: 1220800000,  yval6: 142500500, yval7: 9119423, yval8: 63395580, yval9: 316668600, yval10: 2.88, yval11: 3.46, yval12: 140.63, yval13: 102.44, yval14: 227.29, yval15: 371.37, yval16: 8.33, yval17: 20.25, yval18: 260.23, yval19: 32.23,  yval20: -1, yval21: -1, yval22: -1,  yval23: -1, yval24: 1 , yval25: -1, yval26: 1 , yval27: 1 , yval28: 0 , yval29: -1, yval30: 12.23, yval31: 10.28, yval32: 12.25, yval33: 12.6 , yval34: 8.37, yval35: 20.24, yval36: 12.11, yval37: 10.33, yval38: 12.26, yval39: 13.66 },\n    { x: 9, xval: '2014', yval: 22507620, yval1: 34834840, yval2: 1355693000, yval3: 66259010, yval4: 80996690, yval5: 1236345000,  yval6: 142470300, yval7: 9723809, yval8: 63742980, yval9: 318892100, yval10: 2.91, yval11: 3.49, yval12: 141.26, yval13: 102.92, yval14: 226.87, yval15: 376.1 , yval16: 8.33, yval17: 21.59, yval18: 261.66, yval19: 32.45,  yval20: -1, yval21: -1, yval22: -1,  yval23: -1, yval24: 1 , yval25: -1, yval26: -1, yval27: 1 , yval28: -1, yval29: -1, yval30: 12.19, yval31: 10.29, yval32: 12.17, yval33: 12.6 , yval34: 8.42, yval35: 19.89, yval36: 11.87, yval37: 11.92, yval38: 12.22, yval39: 13.42 }  \n];","index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/sparkline/customization/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\">\n        <div id=\"spark-container\" class=\"row\">\n            <div class=\"cols-sample-area\" align=\"center\">\n                <p>\n                    <font size=\"4px\"> Worldwide car sales by brand - 2017</font>\n                </p>\n                <table style=\"width:100%;\">\n                    <tbody><tr>\n                        <td align=\"center\" style=\"width: 30%;\">Sales Percentage</td>\n                        <td style=\"width: 30%;\">\n                            <div id=\"percentage\" style=\"height:200px\"></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\" style=\"width: 30%;\">Sales Count</td>\n                        <td style=\"width: 30%;\">\n                            <div id=\"sales\" style=\"height:200px\"></div>\n                        </td>\n                    </tr>\n                </tbody></table>\n            </div>\n        </div>\n        <div style=\"float: right; margin-right: 10px;\">Source:\n            <a href=\" http://carsalesbase.com/global-car-sales-2017\" target=\"_blank\" aria-label=\"Navigate to the documentation for car sales base\">carsalesbase.com</a>\n        </div>\n    </div>\n    \n    \n    \n    \n    \n    \n    <!-- Property Panel -->\n    <div class=\"col-lg-4 property-section\">\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n        <br>\n        <table id=\"property\" style=\"width:100%\" title=\"Properties\">\n            <tbody>\n                <tr style=\"height: 30px\">\n                    <td class=\"property-text\" style=\"width: 50%\">\n                        Sparkline\n                    </td>\n                    <td style=\"width: 50%\">\n                        <select id=\"spark\" style=\"width: 100%;\">\n                            <option selected=\"\" value=\"salespercentage\">Sales Percentage</option>\n                            <option value=\"salescount\">Sales Count</option>\n                        </select>\n                    </td>\n                </tr>\n                <tr style=\"height: 30px\">\n                    <td style=\"width: 50%\">\n                        Special Points\n                    </td>\n                    <td style=\"width: 50%\">\n                        <table>\n                            <tbody><tr>\n                                <td>All</td>\n                                <td>\n                                    <input type=\"checkbox\" id=\"all\">\n                                </td>\n                                <td style=\"padding: 5px;\">Negative</td>\n                                <td>\n                                    <input type=\"checkbox\" id=\"negative\">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td style=\"padding: 5px;\">First</td>\n                                <td>\n                                    <input type=\"checkbox\" id=\"first\">\n                                </td>\n                                <td style=\"padding: 5px;\">Last</td>\n                                <td>\n                                    <input type=\"checkbox\" id=\"last\">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td style=\"padding: 5px;\">High</td>\n                                <td>\n                                    <input type=\"checkbox\" id=\"high\">\n                                </td>\n                                <td style=\"padding: 5px;\">Low</td>\n                                <td>\n                                    <input type=\"checkbox\" id=\"low\">\n                                </td>\n                            </tr>\n                        </tbody></table>\n                    </td>\n                </tr>\n                <tr style=\"height: 30px\">\n                    <td style=\"width: 50%\">\n                        Marker\n                    </td>\n                    <td style=\"width: 50%\">\n                        <input type=\"checkbox\" name=\"marker\" id=\"marker\">\n                    </td>\n                </tr>\n                <tr style=\"height: 30px\">\n                    <td style=\"width: 50%\">\n                        Data Label\n                    </td>\n                    <td style=\"width: 50%\">\n                        <input type=\"checkbox\" name=\"datalabel\" id=\"datalabel\">\n                    </td>\n                </tr>\n\t\t\t\t<tr style=\"height: 30px\">\n                    <td style=\"width: 50%\">\n                        Enable RTL\n                    </td>\n                    <td style=\"width: 50%\">\n                        <input type=\"checkbox\" name=\"enableRTL\" id=\"enableRTL\">\n                    </td>\n                </tr>\n                <tr style=\"height: 30px\">\n                    <td style=\"width: 50%\">\n                        Tooltip\n                    </td>\n                    <td style=\"width: 50%\">\n                        <input type=\"checkbox\" name=\"tooltip\" id=\"tooltip\">\n                    </td>\n                </tr>\n                <tr style=\"height: 30px\">\n                    <td style=\"width: 50%\">\n                        Track Line\n                    </td>\n                    <td style=\"width: 50%\">\n                        <input type=\"checkbox\" name=\"trackline\" id=\"trackline\">\n                    </td>\n                </tr>\n                <tr style=\"height: 30px\">\n                    <td style=\"width: 50%\">\n                        Axis Line\n                    </td>\n                    <td style=\"width: 50%\">\n                        <input type=\"checkbox\" name=\"axis\" id=\"axis1\">\n                    </td>\n                </tr>\n                <tr>\n                    <td id=\"axisval\">\n                        Axis Value\n                        <span>&nbsp;&nbsp;&nbsp;0</span>\n                    </td>\n                    <td>\n                        <div id=\"range\"></div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div></div></body></html>","index.js":"{{ripple}}import './data-source';\n\n    // custom code start\n    var sparkload = function(args) {\n        var customtheme = location.hash.split('/')[1];\n        customtheme = customtheme ? customtheme : 'Fluent2';\n        args.sparkline.theme = (customtheme.charAt(0).toUpperCase() + customtheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    };\n    // custom code end\n    var percentage = new ej.charts.Sparkline({\n        // custom code start\n        load: sparkload,    \n        // custom code end   \n        lineWidth: 1,\n        type: 'Column',\n        valueType: 'Category',\n        height: '200px',\n        width: '180px',\n        dataSource: [\n            { x: 0, xval: 'AUDI', yval: 1 },\n            { x: 1, xval: 'BMW', yval: 5 },\n            { x: 2, xval: 'BUICK', yval: -1 },\n            { x: 3, xval: 'CETROEN', yval: -6 },           \n            { x: 6, xval: 'FORD', yval: -2 },\n            { x: 7, xval: 'HONDA', yval: 7 },\n            { x: 8, xval: 'HYUNDAI', yval: -9 },\n            { x: 9, xval: 'JEEP', yval: 0 },\n            { x: 4, xval: 'CHEVROLET', yval: 0 },\n            { x: 5, xval: 'FIAT', yval: 1 },\n            { x: 10, xval: 'KIA', yval: -10 },\n            { x: 11, xval: 'MAZDA', yval: 3 },            \n            { x: 14, xval: 'OPEL/VHALL', yval: -6 },\n            { x: 15, xval: 'PEUGEOT', yval: 0 },\n            { x: 16, xval: 'RENAULT', yval: 7 },\n            { x: 17, xval: 'SKODA', yval: 5 },\n            { x: 12, xval: 'MERCEDES', yval: 13 },\n            { x: 13, xval: 'NISSAN', yval: 5 },\n            { x: 18, xval: 'SUBARU', yval: 5 },\n            { x: 19, xval: 'SUZUKI', yval: 11 },\n            { x: 20, xval: 'TOYOTA', yval: 5 },\n            { x: 21, xval: 'VOLKSWAGEN', yval: 3 },\n        ],\n        xName: 'xval', yName: 'yval',\n        markerSettings: {\n            fill: 'red',\n            size: 5\n        },\n        tooltipSettings: {\n            format: '${xval}: ${yval}',\n            trackLineSettings: {\n                color: 'red',\n                width: 1\n            }\n        },\n        axisSettings: {\n            lineSettings: {\n                color: 'red',\n                width: 2\n            }\n        }\n    });\n    percentage.appendTo('#percentage');\n    var sales = new ej.charts.Sparkline({\n        load: sparkload,\n        height: '200px',\n        width: '180px',\n        lineWidth: 1,\n        type: 'Column',\n        valueType: 'Category',\n        dataSource: [\n            { x: 0, xval: 'AUDI', yval: 1847613 },\n            { x: 1, xval: 'BMW', yval: 2030331 },\n            { x: 2, xval: 'BUICK', yval: 1465823 },\n            { x: 3, xval: 'CETROEN', yval: 999888 },\n            { x: 4, xval: 'CHEVROLET', yval: 3857388 },\n            { x: 5, xval: 'FIAT', yval: 1503806 },\n            { x: 6, xval: 'FORD', yval: 5953122 },\n            { x: 7, xval: 'HONDA', yval: 4967689 },\n            { x: 8, xval: 'HYUNDAI', yval: 3951176 },\n            { x: 9, xval: 'JEEP', yval: 1390130 },\n            { x: 10, xval: 'KIA', yval: 2511293 },\n            { x: 11, xval: 'MAZDA', yval: 1495557 },\n            { x: 12, xval: 'MERCEDES', yval: 2834181 },\n            { x: 13, xval: 'NISSAN', yval: 4834694 },\n            { x: 14, xval: 'OPEL/VHALL', yval: 996559 },\n            { x: 15, xval: 'PEUGEOT', yval: 1590300 },\n            { x: 16, xval: 'RENAULT', yval: 2275227 },\n            { x: 17, xval: 'SKODA', yval: 1180672 },\n            { x: 18, xval: 'SUBARU', yval: 1050390 },\n            { x: 19, xval: 'SUZUKI', yval: 2891415 },\n            { x: 20, xval: 'TOYOTA', yval: 7843423 },\n            { x: 21, xval: 'VOLKSWAGEN', yval: 6639250 },\n        ],\n        xName: 'xval', yName: 'yval',\n        axisSettings: {\n            lineSettings: {\n                color: 'red',\n                width: 2\n            }\n        },\n        markerSettings: {\n            fill: 'red',\n            size: 5\n        },\n        tooltipSettings: {\n            format: '${xval}: ${yval}',\n            trackLineSettings: {\n                color: 'red',\n                width: 1\n            }\n        }\n    });\n    sales.appendTo('#sales');\n    // Code for Property Panel\n    var sampleChange;\n    var sampleValue = new ej.dropdowns.DropDownList({\n        index: 0,\n        placeholder: 'Sales Percentage',\n        width: '100%',\n        change: sampleChange\n    });\n    var sliderChange;\n    var slider = new ej.inputs.Slider({\n        value: 0, type: 'MinRange',\n        change: sliderChange,\n        max: 100, min: 0\n    }, '#range');\n    var allchange;\n    var allCheckBox = new ej.buttons.CheckBox({\n        checked: true, change: allchange\n    }, '#all');\n    var otherchange;\n    var negativeCheckBox = new ej.buttons.CheckBox({\n        change: otherchange, disabled: true\n    }, '#negative');\n    var firstCheckBox = new ej.buttons.CheckBox({\n        change: otherchange, disabled: true\n    }, '#first');\n    var lastCheckBox = new ej.buttons.CheckBox({\n        change: otherchange, disabled: true\n    }, '#last');\n    var highCheckBox = new ej.buttons.CheckBox({\n        change: otherchange, disabled: true\n    }, '#high');\n    var lowCheckBox = new ej.buttons.CheckBox({\n        change: otherchange, disabled: true\n    }, '#low');\n    var markerchange;\n    var markerCheckBox = new ej.buttons.CheckBox({\n        change: markerchange\n    }, '#marker');\n    var datalabelchange;\n    var datalabelCheckBox = new ej.buttons.CheckBox({\n        change: datalabelchange\n    }, '#datalabel');\n\tvar enableRTLchange;\n    var enableRTLCheckBox = new ej.buttons.CheckBox({\n        change: enableRTLchange\n    }, '#enableRTL');\n    var tooltipchange;\n    var tooltipCheckBox = new ej.buttons.CheckBox({\n        change: tooltipchange\n    }, '#tooltip');\n    var trackerchange;\n    var trackerCheckBox = new ej.buttons.CheckBox({\n        change: trackerchange\n    }, '#trackline');\n    var axislinechange;\n    var axislineCheckBox = new ej.buttons.CheckBox({\n        change: axislinechange\n    }, '#axis1');\n    sampleValue.change = sampleChange = function (drop) {\n        if (drop.value === 'salespercentage') {\n            slider.min = 0;\n            slider.max = 10;\n        }\n        else {\n            slider.min = 0;\n            slider.max = 5000000;\n        }\n        if ((drop.value === 'salespercentage' && percentage.markerSettings.visible.length) ||\n            (drop.value === 'salescount' && sales.markerSettings.visible.length)) {\n            markerCheckBox.checked = true;\n        }\n        else {\n            markerCheckBox.checked = false;\n        }\n        markerCheckBox.change = markerchange = function (e) {\n            var boolean = e.checked;\n            var spark = drop.value === 'salespercentage' ? percentage : sales;\n            if (boolean) {\n                spark.markerSettings.visible = getVisible();\n            }\n            else {\n                spark.markerSettings.visible = [];\n            }\n            spark.refresh();\n        };\n        if ((drop.value === 'salespercentage' && percentage.dataLabelSettings.visible.length) ||\n            (drop.value === 'salescount' && sales.dataLabelSettings.visible.length)) {\n            datalabelCheckBox.checked = true;\n        }\n        else {\n            datalabelCheckBox.checked = false;\n        }\n        var spark = drop.value === 'salespercentage' ? percentage : sales;\n        if (!markerCheckBox.checked && !datalabelCheckBox.checked) {\n            allCheckBox.checked = false;\n            negativeCheckBox.checked = false;\n            firstCheckBox.checked = false;\n            lastCheckBox.checked = false;\n            highCheckBox.checked = false;\n            lowCheckBox.checked = false;\n        }\n        if (markerCheckBox.checked) {\n            var spark_1 = drop.value === 'salespercentage' ? percentage : sales;\n            allCheckBox.checked = spark_1.markerSettings.visible.indexOf('All') > -1;\n            negativeCheckBox.checked = spark_1.markerSettings.visible.indexOf('Negative') > -1;\n            firstCheckBox.checked = spark_1.markerSettings.visible.indexOf('Start') > -1;\n            lastCheckBox.checked = spark_1.markerSettings.visible.indexOf('End') > -1;\n            highCheckBox.checked = spark_1.markerSettings.visible.indexOf('High') > -1;\n            lowCheckBox.checked = spark_1.markerSettings.visible.indexOf('Low') > -1;\n        }\n        if (datalabelCheckBox.checked) {\n            var spark_2 = drop.value === 'salespercentage' ? percentage : sales;\n            allCheckBox.checked = spark_2.dataLabelSettings.visible.indexOf('All') > -1;\n            negativeCheckBox.checked = spark_2.dataLabelSettings.visible.indexOf('Negative') > -1;\n            firstCheckBox.checked = spark_2.dataLabelSettings.visible.indexOf('Start') > -1;\n            lastCheckBox.checked = spark_2.dataLabelSettings.visible.indexOf('End') > -1;\n            highCheckBox.checked = spark_2.dataLabelSettings.visible.indexOf('High') > -1;\n            lowCheckBox.checked = spark_2.dataLabelSettings.visible.indexOf('Low') > -1;\n        }\n        datalabelCheckBox.change = datalabelchange = function (e) {\n            var boolean = e.checked;\n            var spark = drop.value === 'salespercentage' ? percentage : sales;\n            if (boolean) {\n                spark.dataLabelSettings.visible = getVisible();\n            }\n            else {\n                spark.dataLabelSettings.visible = [];\n            }\n            spark.refresh();\n        };\n        if ((drop.value === 'salespercentage' && percentage.tooltipSettings.visible === true) ||\n            (drop.value === 'salescount' && sales.tooltipSettings.visible === true)) {\n            tooltipCheckBox.checked = true;\n        }\n        else {\n            tooltipCheckBox.checked = false;\n        }\n        if ((drop.value === 'salespercentage' && percentage.enableRtl === true) ||\n        (drop.value === 'salescount' && sales.enableRtl === true)) {\n            enableRTLCheckBox.checked = true;\n        }\n        else {\n            enableRTLCheckBox.checked = false;\n        }\n        tooltipCheckBox.change = tooltipchange = function (e) {\n            var boolean = e.checked;\n            var spark = drop.value === 'salespercentage' ? percentage : sales;\n            if (boolean) {\n                spark.tooltipSettings.visible = true;\n            }\n            else {\n                spark.tooltipSettings.visible = false;\n            }\n            spark.refresh();\n        };\n        if ((drop.value === 'salespercentage' && percentage.tooltipSettings.trackLineSettings.visible === true) ||\n            (drop.value === 'salescount' && sales.tooltipSettings.trackLineSettings.visible === true)) {\n            trackerCheckBox.checked = true;\n        }\n        else {\n            trackerCheckBox.checked = false;\n        }\n        trackerCheckBox.change = trackerchange = function (e) {\n            var boolean = e.checked;\n            var spark = drop.value === 'salespercentage' ? percentage : sales;\n            if (boolean) {\n                spark.tooltipSettings.trackLineSettings.visible = true;\n            }\n            else {\n                spark.tooltipSettings.trackLineSettings.visible = false;\n            }\n            spark.refresh();\n        };\n        if ((drop.value === 'salespercentage' && percentage.axisSettings.lineSettings.visible === true) ||\n            (drop.value === 'salescount' && sales.axisSettings.lineSettings.visible === true)) {\n            axislineCheckBox.checked = true;\n        }\n        else {\n            axislineCheckBox.checked = false;\n        }\n        axislineCheckBox.change = axislinechange = function (e) {\n            var boolean = e.checked;\n            var spark = drop.value === 'salespercentage' ? percentage : sales;\n            if (boolean) {\n                spark.axisSettings.lineSettings.visible = true;\n            }\n            else {\n                spark.axisSettings.lineSettings.visible = false;\n            }\n            spark.refresh();\n        };\n        if (drop.value === 'salespercentage' && percentage.axisSettings.value !== 0) {\n            slider.value = percentage.axisSettings.value;\n            slider.min = 0;\n            slider.max = 10;\n            document.getElementById('axisval').innerHTML = 'Axis value: <span> ' + percentage.axisSettings.value;\n        }\n        if (drop.value === 'salescount' && sales.axisSettings.value !== 0) {\n            slider.value = sales.axisSettings.value;\n            slider.min = 0;\n            slider.max = 5000000;\n            document.getElementById('axisval').innerHTML = 'Axis value: <span> ' + sales.axisSettings.value;\n        }\n        slider.change = sliderChange = function (e) {\n            var spark = drop.value === 'salespercentage' ? percentage : sales;\n            spark.axisSettings.value = e.value;\n            document.getElementById('axisval').innerHTML = 'Axis value: <span> ' + e.value;\n            spark.refresh();\n        };\n        allCheckBox.checked = !(negativeCheckBox.checked || highCheckBox.checked || lowCheckBox.checked ||\n            firstCheckBox.checked || lastCheckBox.checked);\n        negativeCheckBox.disabled = highCheckBox.disabled = lowCheckBox.disabled = firstCheckBox.disabled =\n            lastCheckBox.disabled = allCheckBox.checked;\n    };\n    sampleValue.appendTo('#spark');\n    if (sampleValue.value === 'salespercentage') {\n        slider.min = 0;\n        slider.max = 10;\n    }\n    else {\n        slider.min = 0;\n        slider.max = 5000000;\n    }\n    allCheckBox.change = allchange = function (e) {\n        var checked = e.checked;\n        negativeCheckBox.disabled = checked;\n        firstCheckBox.disabled = checked;\n        lastCheckBox.disabled = checked;\n        highCheckBox.disabled = checked;\n        lowCheckBox.disabled = checked;\n        var spark = sampleValue.value === 'salespercentage' ? percentage : sales;\n        spark.markerSettings.visible = (checked && markerCheckBox.checked) ? ['All'] : (markerCheckBox.checked) ? getVisible() : [];\n        spark.dataLabelSettings.visible = (checked && datalabelCheckBox.checked) ? ['All'] :\n            (datalabelCheckBox.checked) ? getVisible() : [];\n        spark.refresh();\n    };\n    negativeCheckBox.change = otherchange = firstCheckBox.change = lastCheckBox.change = highCheckBox.change =\n        lowCheckBox.change = function (e) {\n            processMarkerLabel(e);\n        };\n    var processMarkerLabel = function (e) {\n        var checked = e.checked;\n        var spark = sampleValue.value === 'salespercentage' ? percentage : sales;\n        if (markerCheckBox.checked) {\n            spark.markerSettings.visible = getVisible();\n            spark.refresh();\n        }\n        if (datalabelCheckBox.checked) {\n            spark.dataLabelSettings.visible = getVisible();\n            spark.refresh();\n        }\n    };\n    var getVisible = function () {\n        var visible = [];\n        if (allCheckBox.checked) {\n            return ['All'];\n        }\n        if (negativeCheckBox.checked) {\n            visible.push('Negative');\n        }\n        if (firstCheckBox.checked) {\n            visible.push('Start');\n        }\n        if (lastCheckBox.checked) {\n            visible.push('End');\n        }\n        if (highCheckBox.checked) {\n            visible.push('High');\n        }\n        if (lowCheckBox.checked) {\n            visible.push('Low');\n        }\n        return visible;\n    };\n    markerCheckBox.change = markerchange = function (e) {\n        var boolean = e.checked;\n        var spark = sampleValue.value === 'salespercentage' ? percentage : sales;\n        if (boolean) {\n            spark.markerSettings.visible = getVisible();\n        }\n        else {\n            spark.markerSettings.visible = [];\n        }\n        spark.refresh();\n    };\n    datalabelCheckBox.change = datalabelchange = function (e) {\n        var boolean = e.checked;\n        var spark = sampleValue.value === 'salespercentage' ? percentage : sales;\n        if (boolean) {\n            spark.dataLabelSettings.visible = getVisible();\n        }\n        else {\n            spark.dataLabelSettings.visible = [];\n        }\n        spark.refresh();\n    };\n\tenableRTLCheckBox.change = enableRTLchange = function (e) {\n\t\tvar boolean = e.checked;\n\t\tvar spark = sampleValue.value === 'salespercentage' ? percentage : sales;\n\t\tif(boolean == true) {\n\t\t\tspark.enableRtl = true;\n\t\t} \n\t\telse {\n\t\t\tspark.enableRtl = false;\n\t\t}\n\t\tspark.refresh();\n\t};\n    tooltipCheckBox.change = tooltipchange = function (e) {\n        var boolean = e.checked;\n        var spark = sampleValue.value === 'salespercentage' ? percentage : sales;\n        if (boolean) {\n            spark.tooltipSettings.visible = true;\n            spark.tooltipSettings.format = '${xval}: ${yval}';\n        }\n        else {\n            spark.tooltipSettings.visible = false;\n        }\n        spark.refresh();\n    };\n    trackerCheckBox.change = trackerchange = function (e) {\n        var boolean = e.checked;\n        var spark = sampleValue.value === 'salespercentage' ? percentage : sales;\n        if (boolean) {\n            spark.tooltipSettings.trackLineSettings.visible = true;\n            spark.tooltipSettings.trackLineSettings.color = 'red';\n            spark.tooltipSettings.trackLineSettings.width = 1;\n        }\n        else {\n            spark.tooltipSettings.trackLineSettings.visible = false;\n        }\n        spark.refresh();\n    };\n    axislineCheckBox.change = axislinechange = function (e) {\n        var boolean = e.checked;\n        var spark = sampleValue.value === 'salespercentage' ? percentage : sales;\n        if (boolean) {\n            spark.axisSettings.lineSettings.visible = true;\n            spark.axisSettings.lineSettings.color = 'red';\n            spark.axisSettings.lineSettings.width = 2;\n        }\n        else {\n            spark.axisSettings.lineSettings.visible = false;\n        }\n        spark.refresh();\n    };\n    slider.change = sliderChange = function (e) {\n        var spark = sampleValue.value === 'salespercentage' ? percentage : sales;\n        spark.axisSettings.value = e.value;\n        document.getElementById('axisval').innerHTML = 'Axis value: <span> ' + e.value;\n        spark.refresh();\n    };\n"}