{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><main>\n    <div>\n        <div class=\"control-section\">\n                <div id=\"range-container\"></div>\n                <div id=\"template\">\n                <div class=\"sliderwrap\">\n                        <div id=\"default\"></div>\n                    </div>\n        </div>\n            </div>\n            \n           \n    </div>\n    <script id=\"pointerValue\" type=\"text/x-template\">\n        <div id='sliderwrap'>\n            <div class='des'>\n                <div id='default'></div>\n            </div>\n        </div>\n    </script>\n    \n    \n    <style>\n        .e-view.material3 div.e-handle-first, .e-view.material3-dark div.e-handle-first {\n            margin-top: 5px;\n        }\n        .e-view.fluent2 div.e-handle-first {\n            margin-top: 2.5px;\n        } \n\n        .e-view.fluent2-dark div.e-handle-first\n        {\n            margin-top: 3px;\n        }\n        \n        .e-view.fluent div.e-handle-first, .e-view.fluent-dark div.e-handle-first, .e-view.fabric div.e-handle-first,\n        .e-view.fabric-dark div.e-handle-first, .e-view.bootstrap div.e-handle-first, .e-view.bootstrap-dark div.e-handle-first,\n        .e-view.highcontrast div.e-handle-first, .e-view.tailwind div.e-handle-first, .e-view.tailwind-dark div.e-handle-first {\n            margin-top: 1px;\n        }\n        .e-view.bootstrap5 div.e-handle-first, .e-view.bootstrap5-dark div.e-handle-first, .e-view.material div.e-handle-first, .e-view.material-dark div.e-handle-first {\n            margin-top: -1px;\n        }\n        .sliderwrap {\n            margin-top: 0px;\n            width: 300px;            \n            align-self: center;\n        }  \n        #slider.e-control.e-slider .e-handle {\n            background-color: #fdf9f9 ;\n            border: 2px solid #666;\n            width:14px;\n            height:14px;\n        }\n        .fluent2-highcontrast #slider.e-control.e-slider .e-handle {\n            margin-top: 3px;\n        }\n        .e-control-wrapper.e-slider-container.e-horizontal .e-slider-track {\n            background: -webkit-linear-gradient(left, #ea501a 0, #ea501a 20%, #f79c02 40%, #e5ce20 60%, #a1cb43 80%, #82b944 100%);\n            background: linear-gradient(left, #ea501a 0, #ea501a 20%, #f79c02 40%, #e5ce20 60%, #a1cb43 80%, #82b944 100%);\n            background: -moz-linear-gradient(left, #ea501a 0, #ea501a 20%, #f79c02 40%, #e5ce20 60%, #a1cb43 80%, #82b944 100%); \n        }\n        .e-limit-bar.e-limits {\n            background-color: transparent !important;\n        }\n        .e-control-wrapper.e-slider-container.e-horizontal .e-range {\n            height: 0px !important;\n            width: 0px !important;\n        }\n        #slider.e-control.e-slider .e-slider-track {\n            height: 8px;\n            top: calc(50% - 4px);\n            border-radius: 5px;\n        }\n    </style>\n</main></div></body></html>","index.js":"{{ripple}}var sliderValue = 60;\n\n    var circulargauge = new ej.circulargauge.CircularGauge({\n        title: 'Progress Tracker',\n        titleStyle: { fontFamily: 'inherit' },\n        background:'transparent',\n        axes: [{\n            annotations: [{\n                description:'RangeBar pointer value from the slider',\n                content: '<div id=\"pointervalue\" style=\"font-size:35px;width:120px;text-align:center\">' +\n                    sliderValue.toString() + '/100</div>',\n                angle: 0,\n                zIndex: '1',\n                radius: '0%'\n            },\n            {\n                description:'Slider',\n                content: '<div id=\"slider\" style=\"height:70px;width:250px;\"></div>',\n                angle: 0,\n                zIndex: '1',\n                radius: '-100%'\n            },\n            ],\n            lineStyle: { width: 0 },\n            labelStyle: {\n                position: 'Inside', useRangeColor: true,\n                font: { size: '0px', color: 'white', fontFamily: 'Roboto', fontStyle: 'Regular' }\n            }, majorTicks: { height: 0, }, minorTicks: { height: 0 },\n            startAngle: 200, endAngle: 160, minimum: 0, maximum: 100, radius: '80%',\n            ranges: [\n                {\n                    start: 0, end: 100,\n                    radius: '90%',\n                    startWidth: 30, endWidth: 30,\n                    color: '#E0E0E0',\n                    roundedCornerRadius: 20\n                },\n            ],\n            pointers: [{\n                roundedCornerRadius: 20,\n                value: 60,\n                type: 'RangeBar',\n                radius: '90%',\n                color: '#e5ce20',\n                border: {\n                    color: 'grey',\n                    width: 0\n                },\n                animation: {\n                    enable: false\n                },\n                pointerWidth: 30\n            }]\n        }],\n        load: function (args) {\n            // custom code start\n            var arcgaugeTheme = location.hash.split('/')[1];\n            arcgaugeTheme = arcgaugeTheme ? arcgaugeTheme : 'Material';\n            args.gauge.theme = (arcgaugeTheme.charAt(0).toUpperCase() +\n                arcgaugeTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        },\n        loaded: function (args) {\n            var annotation = document.getElementById(args.gauge.element.id + '_Annotations_0');\n            if (annotation) {\n                annotationRender('slider', circulargauge.axes[0].pointers[0].value);\n                if (document.getElementById('pointervalue')) {\n                    document.getElementById('pointervalue').innerHTML = circulargauge.axes[0].pointers[0].value.toString() + '/100';\n                }\n            }\n        }\n    });\n    circulargauge.appendTo('#range-container');\n    function annotationRender(id, sliderValue) {\n        var first = new ej.inputs.Slider({\n            min: 0, max: 100,\n            type: 'MinRange',\n            limits: { enabled: true, minStart: 0, minEnd: 100 },\n            value: sliderValue,\n            change: function (args) {\n                sliderValue = args.value;\n                if (!isNaN(sliderValue)) {\n                    circulargauge.isProtectedOnChange = true;\n                    if (sliderValue >= 0 && sliderValue < 20) {\n                        circulargauge.axes[0].pointers[0].color = '#ea501a';\n                    }\n                    else if (sliderValue >= 20 && sliderValue < 40) {\n                        circulargauge.axes[0].pointers[0].color = '#f79c02';\n                    }\n                    else if (sliderValue >= 40 && sliderValue < 60) {\n                        circulargauge.axes[0].pointers[0].color = '#e5ce20';\n                    }\n                    else if (sliderValue >= 60 && sliderValue < 80) {\n                        circulargauge.axes[0].pointers[0].color = '#a1cb43';\n                    }\n                    else if (sliderValue >= 80 && sliderValue < 100) {\n                        circulargauge.axes[0].pointers[0].color = '#82b944';\n                    }\n                    circulargauge.setPointerValue(0, 0, sliderValue);\n                    if (document.getElementById('pointervalue')) {\n                        document.getElementById('pointervalue').innerHTML = circulargauge.axes[0].pointers[0].value.toString() + '/100';\n                    }\n                }\n            }\n        });\n        first.appendTo('#' + id);\n    }\n"}