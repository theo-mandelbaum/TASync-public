{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><main>\n    <div>\n        <div class=\"col-md-8 control-section\">\n            <div class=\"content-wrapper\">\n                <div id=\"user-container\"></div>\n            </div>\n        </div>\n        <br>\n        <!-- Property Panel -->\n        <div class=\"col-md-4 property-section\" style=\"margin-left:-8px;\">\n            <table id=\"property\" title=\"Properties\" style=\"width: 100%;margin-left: -10px;\" role=\"none\">\n                <tbody>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div style=\"font-size: 14px;\">Pointer Value</div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" id=\"value\" value=\"70\" min=\"0\" max=\"120\" style=\"width: 70%\">\n                            </div>\n                        </td>\n                        <td style=\"padding-top: 10px; text-align: center;\">\n                            <span id=\"pointerValue\" style=\"margin-left: -30px;\">70</span>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div id=\"enablePointer\" style=\"width: 97%; font-size: 14px;\">Allow Pointer Drag</div>\n                        </td>\n                        <td>\n                            <div id=\"checkbox1\" style=\"padding-top: 2px;margin-left: -10px;\">\n                                <input type=\"checkbox\" id=\"enable\" checked=\"true\">\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div id=\"enableRange\" style=\"width: 98%; font-size: 14px;\">Allow Ranges Drag</div>\n                        </td>\n                        <td>\n                            <div id=\"checkbox2\" style=\"padding-top: 2px;margin-left: -10px;\">\n                                <input type=\"checkbox\" id=\"enable1\">\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n    \n            </table>\n        </div>\n    </div>\n    <style>\n        .e-view.fluent2 #checkbox1, .e-view.fluent2-dark #checkbox1, .e-view.fluent2 #checkbox2, .e-view.fluent2-dark #checkbox2,\n        .e-view.fluent #checkbox1, .e-view.fluent-dark #checkbox1, .e-view.fluent #checkbox2, .e-view.fluent-dark #checkbox2 {\n            margin-top: 3px;\n        }\n\n        .e-view.fluent2 #property .e-checkbox-wrapper .e-icons, .e-view.fluent2-dark #property .e-checkbox-wrapper .e-icons {\n            margin-left: 0px;\n        }\n        .e-view.fluent2-highcontrast #property .e-checkbox-wrapper .e-icons {\n            margin-left: 0px;\n        }\n\n    </style>\n    \n    \n</main></div></body></html>","index.js":"{{ripple}}\n    var content = '<div style=\"font-size: 14px;color:#E5C31C;font-weight: lighter;font-style: oblique;\"><span>';\n    var pointerValue;\n    var circulargauge = new ej.circulargauge.CircularGauge({\n        enablePointerDrag: true,\n        enableRangeDrag: false,\n        background:'transparent',\n        dragMove: function (args) {\n            if (isNaN(args.rangeIndex)) {\n                pointerValue = Math.round(args.currentValue);\n                document.getElementById('pointerValue').innerHTML = pointerValue;\n                document.getElementById('value').value = pointerValue.toString();\n                circulargauge.setAnnotationValue(0, 0, content + pointerValue + ' MPH</span></div>');\n            }\n        },\n        dragEnd: function (args) {\n            pointerValue = Math.round(args.currentValue);\n            if (isNaN(args.rangeIndex)) {\n                setPointersValue(circulargauge, pointerValue);\n            }\n        },\n        axes: [{\n            annotations: [{\n                content: content + '70 MPH</span></div>',\n                angle: 180, zIndex: '1',\n                radius: '45%'\n            }],\n            endAngle: 140,\n            startAngle: 220,\n            lineStyle: { width: 0, color: '#9E9E9E' },\n            radius: '80%', minimum: 0,\n            maximum: 120,\n            majorTicks: { useRangeColor: true },\n            minorTicks: { useRangeColor: true },\n            labelStyle: { useRangeColor: true, fontFamily: 'Segoe UI' },\n            ranges: [{\n                start: 0,\n                end: 40,\n                startWidth: 8, endWidth: 8,\n                radius: '108%',\n                color: '#30B32D'\n            }, {\n                start: 40,\n                end: 100,\n                startWidth: 8, endWidth: 8,\n                radius: '108%',\n                color: '#E5C31C'\n            }, {\n                start: 100, end: 120,\n                startWidth: 8, endWidth: 8,\n                radius: '108%',\n                color: '#F03E3E'\n            }],\n            pointers: [{\n                description:'Marker pointer value : 70',\n                type: 'Marker', value: 70,\n                markerShape: 'InvertedTriangle',\n                radius: '110%',\n                markerHeight: 20,\n                color: '#E5C31C',\n                markerWidth: 20\n            }, {\n                description:'Needle pointer value : 70',\n                value: 70,\n                radius: '60%',\n                cap: { radius: 10, border: { width: 5, color: '#E5C31C' } },\n                needleTail: { length: '0%', color: '#E5C31C' },\n                color: '#E5C31C',\n                markerWidth: 5\n            }]\n        }],\n        load: function (args) {\n            // custom code start\n            var selectedRangeDragTheme = location.hash.split('/')[1];\n            selectedRangeDragTheme = selectedRangeDragTheme ? selectedRangeDragTheme : 'Material';\n            args.gauge.theme = (selectedRangeDragTheme.charAt(0).toUpperCase() +\n                selectedRangeDragTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    circulargauge.appendTo('#user-container');\n    function setPointersValue(circulargauge, pointerValue) {\n        var color = ej.circulargauge.getRangeColor(pointerValue, (circulargauge.axes[0].ranges), circulargauge.axes[0].pointers[0].color);\n        circulargauge.axes[0].pointers[0].color = color;\n        circulargauge.axes[0].pointers[1].color = color;\n        circulargauge.axes[0].pointers[0].animation.enable = false;\n        circulargauge.axes[0].pointers[1].animation.enable = false;\n        circulargauge.axes[0].pointers[0].needleTail.color = color;\n        circulargauge.axes[0].pointers[1].needleTail.color = color;\n        circulargauge.axes[0].pointers[0].cap.border.color = color;\n        circulargauge.axes[0].pointers[1].cap.border.color = color;\n        circulargauge.setPointerValue(0, 1, pointerValue);\n        circulargauge.setPointerValue(0, 0, pointerValue);\n        content = '<div style=\"font-size: 14px;color:' + color + ';font-weight: lighter;font-style: oblique;\"><span>';\n        circulargauge.setAnnotationValue(0, 0, content + pointerValue + ' MPH</span></div>');\n    }\n    document.getElementById('value').ontouchmove = document.getElementById('value').onpointermove =\n        document.getElementById('value').onchange = function () {\n            var pointerValue = parseInt(document.getElementById('value').value, 10);\n            setPointersValue(circulargauge, pointerValue);\n            document.getElementById('pointerValue').innerHTML = pointerValue.toString();\n        };\n        var pointerchange;\n        var rangechange;\n        var pointerchangeCheckBox = new ej.buttons.CheckBox({\n            change: pointerchange,\n            checked: true\n        }, '#enable');\n        pointerchangeCheckBox.change = pointerchange = function (e) {\n            var boolean = e.checked;\n            circulargauge.enablePointerDrag = boolean;\n        };\n        var rangechangeCheckBox = new ej.buttons.CheckBox({\n            change: rangechange\n        }, '#enable1');\n        rangechangeCheckBox.change = rangechange = function (e) {\n            var boolean = e.checked;\n            circulargauge.enableRangeDrag = boolean;\n        };\n"}