{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><main>\n    <div>\n        <div class=\"col-md-8 control-section\">\n            <div class=\"content-wrapper\">\n                <div id=\"labels-container\"></div>\n            </div>\n        </div>\n        <!-- Property panel -->\n        <br>\n        <div class=\"col-md-4 property-section\">\n            <table id=\"property\" title=\"Properties\" style=\"width: 100%; margin-left:0px;\" role=\"none\">\n                <colgroup>\n                    <col span=\"1\" style=\"width: 50%;\">\n                    <col span=\"1\" style=\"width: 30%;\">\n                    <col span=\"1\" style=\"width: 20%;\">\n                </colgroup>\n                <tbody>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div style=\"font-size: 14px;\"> Ticks </div>\n                        </td>\n                        <td>\n                            <div>\n                                <select id=\"Ticks\" class=\"form-control\">\n                                    <option value=\"major\" selected=\"true\">Major Ticks</option>\n                                    <option value=\"minor\">Minor Ticks</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div style=\"font-size: 14px;\"> Tick Position </div>\n                        </td>\n                        <td>\n                            <div>\n                                <select id=\"tickposition\" class=\"form-control\">\n                                    <option value=\"Inside\" selected=\"true\">Inside</option>\n                                    <option value=\"Cross\">Cross</option>\n                                    <option value=\"Outside\">Outside</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div style=\"font-size: 14px;\"> Label Position </div>\n                        </td>\n                        <td>\n                            <div>\n                                <select id=\"labelposition\" class=\"form-control\">\n                                    <option value=\"Outside\">Outside</option>\n                                    <option value=\"Cross\">Cross</option>\n                                    <option value=\"Inside\">Inside</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div style=\"font-size: 14px;\">Tick Offset</div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" id=\"tickOffset\" value=\"0\" min=\"0\" max=\"50\" style=\"width:70%\">\n                            </div>\n                        </td>\n                        <td style=\"padding-top: 10px; text-align: center;\">\n                            <span id=\"offset\" style=\"margin-left: -30px;\">0</span>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div style=\"font-size: 14px;\">Tick Height</div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" id=\"tickHeight\" value=\"10\" min=\"1\" max=\"50\" style=\"width:70%\">\n                            </div>\n                        </td>\n                        <td style=\"padding-top: 10px; text-align: center;\">\n                            <span id=\"height\" style=\"margin-left: -30px;\">10</span>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div style=\"font-size: 14px;\">Label Offset</div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" id=\"labelOffset\" value=\"0\" min=\"0\" max=\"50\" style=\"width:70%\">\n                            </div>\n                        </td>\n                        <td style=\"padding-top: 10px; text-align: center;\">\n                            <span id=\"labelOffsetValue\" style=\"margin-left: -30px;\">0</span>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div id=\"enablePointer\" style=\"font-size: 14px;\">Show Last Label</div>\n                        </td>\n                        <td>\n                            <div style=\"margin-top: -10px; margin-left: 2px\">\n                                <input type=\"checkbox\" id=\"showLastLabel\">\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    \n    \n    \n</main></div></body></html>","index.js":"{{ripple}}\n    var isMajorTicks = true;\n    var circulargauge = new ej.circulargauge.CircularGauge({\n        background:'transparent',\n        axes: [{\n            annotations: [{\n                content: '<div id=\"content\" style=\"color:#518C03;font-size:20px;font-family:inherit;font-weight:semibold;\">145</div>',\n                angle: 0, radius: '0%', zIndex: '1',\n            }],\n            startAngle: 210, endAngle: 150,\n            lineStyle: { width: 2, color: '#9E9E9E' },\n            labelStyle: {\n                position: 'Outside', autoAngle: true,\n                font: { size: '10px', fontFamily: 'inherit' }\n            }, majorTicks: {\n                position: 'Inside', color: '#757575', width: 2, height: 10, interval: 20\n            }, minorTicks: {\n                position: 'Inside', color: '#757575', height: 5, width: 2, interval: 10\n            },\n            radius: '84%', minimum: 0, maximum: 170,\n            pointers: [{\n                animation: { enable: false }, value: 145,\n                type: 'RangeBar', roundedCornerRadius: 10,\n                color: '#8BC34A', radius: '60%', pointerWidth: 7,\n            }]\n        }],\n        load: function (args) {\n            // custom code start\n            var ticksAndLabelsTheme = location.hash.split('/')[1];\n            ticksAndLabelsTheme = ticksAndLabelsTheme ? ticksAndLabelsTheme : 'Material';\n            args.gauge.theme = (ticksAndLabelsTheme.charAt(0).toUpperCase() +\n                ticksAndLabelsTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    circulargauge.appendTo('#labels-container');\n\n    var ticks = new ej.dropdowns.DropDownList({\n        index: 0, width: '100%',\n        change: function () {\n            var value = ticks.value.toString();\n            var tick;\n            isMajorTicks = value === 'major';\n            if (isMajorTicks) {\n                tick = circulargauge.axes[0].majorTicks;\n            }\n            else {\n                tick = circulargauge.axes[0].minorTicks;\n            }\n            tickPosition.value = tick.position;\n            document.getElementById('tickOffset').value = tick.offset.toString();\n            document.getElementById('tickHeight').value = tick.height.toString();\n            document.getElementById('offset').innerHTML = tick.offset.toString();\n            document.getElementById('height').innerHTML = tick.height.toString();\n        }\n    });\n    ticks.appendTo('#Ticks');\n\n    var tickPosition = new ej.dropdowns.DropDownList({\n        index: 0, width: '100%',\n        change: function () {\n            var value = tickPosition.value.toString();\n            if (isMajorTicks) {\n                circulargauge.axes[0].majorTicks.position = value;\n            }\n            else {\n                circulargauge.axes[0].minorTicks.position = value;\n            }\n            circulargauge.refresh();\n        }\n    });\n    tickPosition.appendTo('#tickposition');\n    \n    var labelPosition = new ej.dropdowns.DropDownList({\n        index: 0, width: '100%',\n        change: function () {\n            circulargauge.axes[0].labelStyle.position = labelPosition.value.toString();\n            circulargauge.refresh();\n        }\n    });\n    labelPosition.appendTo('#labelposition');\n    \n    var tickOffsetInput = document.getElementById('tickOffset');\n    tickOffsetInput.addEventListener('input', function () {\n        var value = parseInt(tickOffsetInput.value, 10);\n        if (isMajorTicks) {\n            circulargauge.axes[0].majorTicks.offset = value;\n        } else {\n            circulargauge.axes[0].minorTicks.offset = value;\n        }\n        document.getElementById('offset').innerHTML = value.toString();\n        circulargauge.refresh();\n    });\n\n    var tickHeightInput = document.getElementById('tickHeight');\n    tickHeightInput.addEventListener('input', function () {\n        var value = parseInt(tickHeightInput.value, 10);\n        if (isMajorTicks) {\n            circulargauge.axes[0].majorTicks.height = value;\n        }\n        else {\n            circulargauge.axes[0].minorTicks.height = value;\n        }\n        document.getElementById('height').innerHTML = value.toString();\n        circulargauge.refresh();\n    });\n    \n    var labelOffsetInput = document.getElementById('labelOffset');\n    labelOffsetInput.addEventListener('input', function () {\n        var value = parseInt(labelOffsetInput.value, 10);\n        circulargauge.axes[0].labelStyle.offset = value;\n        document.getElementById('labelOffsetValue').innerHTML = value.toString();\n        circulargauge.refresh();\n    });\n    var enableRTLChange;\n    var enableRTLCheckbox = new ej.buttons.CheckBox({\n        change: enableRTLChange, checked: false,\n    }, '#showLastLabel');\n    enableRTLCheckbox.change = enableRTLChange = function (e) {\n        var showLabel = e.checked;\n        circulargauge.axes[0].showLastLabel = showLabel;\n        circulargauge.refresh();\n    };\n"}