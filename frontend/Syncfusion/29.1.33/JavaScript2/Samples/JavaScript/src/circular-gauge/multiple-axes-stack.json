{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><main>\n    <div>\n        <div class=\"col-md-8 control-section\">\n            <div class=\"content-wrapper\">\n                <div id=\"axis-container\"></div>\n            </div>\n        </div>\n        <!-- Property panel -->\n        <br>\n        <div class=\"col-md-4 property-section\">\n            <table id=\"property\" title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                <tbody><tr>\n                    <td>\n                        <div style=\"font-size: 14px;\"> Axis </div>\n                    </td>\n                    <td>\n                        <div>\n                            <select id=\"axisIndex\" class=\"form-control\" style=\"width:90%\">\n                                <option value=\"0\" selected=\"true\">Axis 1</option>\n                                <option value=\"1\">Axis 2</option>\n                            </select>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <div style=\"font-size: 14px;\"> Direction </div>\n                    </td>\n                    <td>\n                        <div>\n                            <select id=\"axisDirection\" class=\"form-control\" style=\"width:90%\">\n                                <option value=\"ClockWise\" selected=\"true\">Clockwise</option>\n                                <option value=\"AntiClockWise\">Anti-clockwise</option>\n                            </select>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <div style=\"margin-top: 10px; font-size: 14px;\">Start Angle</div>\n                    </td>\n                    <td>\n                        <div style=\"margin-top: 10px\">\n                            <input type=\"range\" id=\"startAngle\" value=\"220\" min=\"0\" max=\"360\" style=\"width: 70%\">\n                        </div>\n                    </td>\n                    <td style=\"width: 10%;padding-top: 20px;text-align: center;\">\n                        <span id=\"start\" style=\"margin-left: -25px;font-size: 14px;\">220</span>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <div style=\"margin-top: 20px;font-size: 14px;\">End Angle</div>\n                    </td>\n                    <td>\n                        <div style=\"margin-top: 20px\">\n                            <input type=\"range\" id=\"endAngle\" value=\"140\" min=\"0\" max=\"360\" style=\"width: 70%\">\n                        </div>\n                    </td>\n                    <td style=\"width: 10%;padding-top: 30px;text-align: center;\">\n                        <span id=\"end\" style=\"margin-left: -25px;font-size: 14px;\">140</span>\n                    </td>\n                </tr>\n            </tbody></table>\n        </div>\n    </div>\n    \n    \n    \n    <style>\n        .property-panel-header {\n            margin-left: 10px\n        }\n    \n        tr {\n            height: 50px;\n        }\n    </style>\n</main></div></body></html>","index.js":"{{ripple}}\n    var axisIndex = 0;\n    var circulargauge = new ej.circulargauge.CircularGauge({\n        background:'transparent',\n        axes: [{\n            lineStyle: { width: 1.5 },\n            radius: '91%',\n            labelStyle: {\n                position: 'Inside', autoAngle: true,\n                hiddenLabel: 'None',\n                font: { fontFamily: 'inherit' }\n            }, majorTicks: {\n                position: 'Inside',\n                width: 2, height: 10\n            }, minorTicks: {\n                position: 'Inside', width: 2,\n                height: 5\n            },\n            minimum: 0, maximum: 160, startAngle: 220, endAngle: 140,\n            pointers: [{\n                value: 80, radius: '100%',\n                markerHeight: 15, markerWidth: 15, type: 'Marker',\n                markerShape: 'Triangle',\n            }]\n        }, {\n            lineStyle: { width: 1.5, color: '#E84011' }, radius: '92%',\n            labelStyle: {\n                position: 'Outside', autoAngle: true,\n                hiddenLabel: 'None', font: { fontFamily: 'inherit' }\n            }, majorTicks: {\n                position: 'Outside', width: 2, height: 10,\n                color: '#E84011'\n            }, minorTicks: {\n                position: 'Outside', width: 2,\n                height: 5, color: '#E84011'\n            },\n            minimum: 0, maximum: 240, startAngle: 220, endAngle: 140,\n            pointers: [{\n                value: 120, radius: '100%', color: '#E84011',\n                markerHeight: 15, markerWidth: 15, type: 'Marker',\n                markerShape: 'InvertedTriangle',\n            }]\n        }],\n        load: function (args) {\n            // custom code start\n            var selectedAxesTheme = location.hash.split('/')[1];\n            selectedAxesTheme = selectedAxesTheme ? selectedAxesTheme : 'Material';\n            args.gauge.theme = (selectedAxesTheme.charAt(0).toUpperCase() +\n                selectedAxesTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            //custom code end\n        }\n    });\n    circulargauge.appendTo('#axis-container');\n\n   var axis = new ej.dropdowns.DropDownList({\n        index: 0, width: '100%',\n        change: function () {\n            axisIndex = +axis.value;\n            direction.value = circulargauge.axes[axisIndex].direction;\n            var startAngle = circulargauge.axes[axisIndex].startAngle;\n            var endAngle = circulargauge.axes[axisIndex].endAngle;\n            document.getElementById('start').innerHTML = startAngle;\n            document.getElementById('end').innerHTML = endAngle;\n            document.getElementById('startAngle').value = startAngle.toString();\n            document.getElementById('endAngle').value = endAngle.toString();\n        }\n    });\n    axis.appendTo('#axisIndex');\n    var direction = new ej.dropdowns.DropDownList({\n        index: 0, width: '100%',\n        change: function () {\n            circulargauge.axes[axisIndex].direction = direction.value.toString();\n            circulargauge.axes[0].pointers[0].animation.enable = false;\n            circulargauge.axes[1].pointers[0].animation.enable = false;\n            circulargauge.refresh();\n        }\n    });\n    direction.appendTo('#axisDirection');\n    var startAngleInput = document.getElementById('startAngle');\n    startAngleInput.addEventListener('input', function () {\n        var value = parseInt(startAngleInput.value, 10);\n        circulargauge.axes[0].pointers[0].animation.enable = false;\n        circulargauge.axes[1].pointers[0].animation.enable = false;\n        circulargauge.axes[axisIndex].startAngle = value;\n        document.getElementById('start').innerHTML = value.toString();\n        circulargauge.axes[axisIndex].labelStyle.hiddenLabel =\n            ej.circulargauge.isCompleteAngle(circulargauge.axes[axisIndex].startAngle, circulargauge.axes[axisIndex].endAngle) ?\n                'First' : 'None';\n        circulargauge.refresh();\n    });\n    var endAngleInput = document.getElementById('endAngle');\n    endAngleInput.addEventListener('input', function () {\n        var value = parseInt(endAngleInput.value, 10);\n        circulargauge.axes[0].pointers[0].animation.enable = false;\n        circulargauge.axes[1].pointers[0].animation.enable = false;\n        circulargauge.axes[axisIndex].endAngle = value;\n        document.getElementById('end').innerHTML = value.toString();\n        circulargauge.axes[axisIndex].labelStyle.hiddenLabel =\n            ej.circulargauge.isCompleteAngle(circulargauge.axes[axisIndex].startAngle, circulargauge.axes[axisIndex].endAngle) ?\n                'First' : 'None';\n        circulargauge.refresh();\n    });\n"}