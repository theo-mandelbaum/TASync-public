(function(e, a) { for(var i in a) e[i] = a[i]; }(this, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/common/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/common/index.js":
/*!*****************************!*\
  !*** ./src/common/index.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var cBlock = ['sb-src-code.hljs.javascript', 'sb-src-code.hljs.xml'];\nvar switcherPopup;\nvar themeSwitherPopup;\nvar openedPopup;\nvar searchPopup;\nvar settingsPopup;\nvar sidebar;\nvar settingsidebar;\nvar preventToggle;\nvar prevAction;\nvar searchInstance;\nvar headerThemeSwitch = document.getElementById('header-theme-switcher');\nvar settingElement = ej.base.select('.sb-setting-btn');\nvar themeList = document.getElementById('themelist');\nvar themeCollection = ['material3', 'bootstrap5', 'fluent2', 'tailwind3', 'fluent2-highcontrast', 'highcontrast', 'tailwind', 'fluent', 'material3-dark', 'bootstrap5-dark', 'fluent2-dark', 'tailwind-dark', 'tailwind3-dark', 'fluent-dark'];\nvar themesToRedirect = ['material', 'material-dark', 'bootstrap4', 'bootstrap', 'bootstrap-dark', 'fabric', 'fabric-dark'];\nvar darkIgnore = ['highcontrast', 'fluent2-highcontrast'];\nvar themeDarkButton = document.getElementById('sb-dark-theme');\nvar darkButton = document.getElementById('sb-dark-span');\nvar themeModeDropDown;\nvar themeDropDown;\nvar contentTab;\nvar sourceTab;\nvar isExternalNavigation = true;\nvar defaultTree = false;\nvar intialLoadCompleted = false;\nvar resizeManualTrigger = false;\nvar reloadPageForRedirection = false;\nvar leftToggle = ej.base.select('#sb-toggle-left');\nvar sbRightPane = ej.base.select('.sb-right-pane');\nvar sbContentOverlay = ej.base.select('.sb-content-overlay');\nvar sbBodyOverlay = ej.base.select('.sb-body-overlay');\nvar sbHeader = ej.base.select('#sample-header');\nvar resetSearch = ej.base.select('.sb-reset-icon');\nvar urlRegex = /(npmci\\.syncfusion\\.com|ej2\\.syncfusion\\.com)(\\/)(development|production)*/;\nvar aiUrlRegex = /\\/ai-[^\\/]+\\//;\nvar aiControlRegex = /^ai-.*/;\nvar sampleRegex = /#\\/(([^\\/]+\\/)+[^\\/\\.]+)/;\n// Regex for removing hidden codes\nvar reg = /.*custom code start([\\S\\s]*?)custom code end.*/g;\nvar sbArray = ['angular', 'nextjs', 'react', 'typescript', 'aspnetcore', 'aspnetmvc', 'vue', 'blazor'];\nvar sbObj = {\n    'angular': 'angular',\n    'nextjs': 'nextjs',\n    'typescript': '',\n    'react': 'react',\n    'vue': 'vue',\n    'blazor': 'blazor'\n};\nvar searchEle = ej.base.select('#search-popup');\nvar inputele = ej.base.select('#search-input');\nvar searchOverlay = ej.base.select('.e-search-overlay');\nvar searchButton = document.getElementById('sb-trigger-search');\nvar setResponsiveElement = ej.base.select('.setting-responsive');\nvar isMobile = window.matchMedia('(max-width:550px)').matches;\nvar isTablet = window.matchMedia('(min-width:600px) and (max-width: 850px)').matches;\nvar isPc = window.matchMedia('(min-width:850px)').matches;\nvar selectedTheme = location.hash.split('/')[1] || 'tailwind3';\nvar toggleAnim = new ej.base.Animation({ duration: 500, timingFunction: 'ease' });\nvar controlSampleData = {};\nvar samplesList = getSampleList();\nvar samplesTreeList = [];\nvar execFunction = {};\nvar searchListView;\nvar sourceTabItems = [];\n//window.apiList = window.apiList;\nvar sampleNameElement = document.querySelector('#component-name>.sb-sample-text');\nvar breadCrumbComponent = document.querySelector('.sb-bread-crumb-text>.category-text');\nvar breadCrumSeperator = ej.base.select('.category-seperator');\nvar breadCrumbSubCategory = document.querySelector('.sb-bread-crumb-text>.component');\nvar breadCrumbSample = document.querySelector('.sb-bread-crumb-text>.crumb-sample');\nvar hsplitter = '<div class=\"sb-toolbar-splitter sb-custom-item\"></div>';\nvar openNewTemplate = \"<div class=\\\"sb-custom-item sb-open-new-wrapper\\\"><a id=\\\"openNew\\\" role='tab' target=\\\"_blank\\\" aria-label=\\\"Open new sample\\\">\\n<div class=\\\"sb-icons sb-icon-Popout\\\"></div></a></div>\";\nvar sampleNavigation = \"<div class=\\\"sb-custom-item sample-navigation\\\"><button id='prev-sample' role='tab' class=\\\"sb-navigation-prev\\\" \\n    aria-label=\\\"Navigate to previous sample\\\">\\n<span class='sb-icons sb-icon-Previous'></span>\\n</button>\\n<button role='tab' id='next-sample' class=\\\"sb-navigation-next\\\" aria-label=\\\"Navigate to next sample\\\">\\n<span class='sb-icons sb-icon-Next'></span>\\n</button>\\n</div>\";\nvar plnrTemplate = '<span class=\"sb-icons sb-icons-plnkr\" role=\"presentation\"></span><span class=\"sb-plnkr-text\">Edit in StackBlitz</span>';\nvar contentToolbarTemplate = '<div class=\"sb-desktop-setting\"><button id=\"open-plnkr\" role=\"tab\" aria-label=\"Open Edit in StackBlitz\" tabindex=\"0\" class=\"sb-custom-item sb-plnr-section\">' +\n    plnrTemplate + '</button>' + hsplitter + openNewTemplate + hsplitter +\n    '</div>' + sampleNavigation + '<div class=\"sb-icons sb-mobile-setting\"></div>';\nvar tabContentToolbar = ej.base.createElement('div', { className: 'sb-content-toolbar', innerHTML: contentToolbarTemplate });\nvar apiGrid;\nwindow.navigateSample = (window.navigateSample !== undefined) ? window.navigateSample : function () { return; };\nvar isInitRedirected;\nvar samplePath = [];\nvar defaultSamples = [];\nvar samplesAr = [];\nvar currentControlID;\nvar currentSampleID;\nvar currentControl;\nvar currencyDropDown;\nvar cultureDropDown;\nvar demoSection = ej.base.select('.sb-demo-section');\nvar newYear= new Date().getFullYear();\nvar copyRight= document.querySelector('.sb-footer-copyright');\ncopyRight.innerHTML = \"Copyright © 2001 - \" + newYear + \" Syncfusion<sup>®</sup> Inc.\";\nej.base.registerLicense('{SyncfusionJSLicensekey}');\n\nvar matchedCurrency = {\n    'en': 'USD',\n    'de': 'EUR',\n    'ar': 'AED',\n    'zh': 'CNY',\n    'fr-CH': 'CHF'\n};\nsettingsidebar = new ej.navigations.Sidebar({\n    position: 'Right', width: '282', zIndex: '1003', showBackdrop: true, type: 'Over', enableGestures: false,\n    closeOnDocumentClick: true, close: closeRightSidebar\n});\nfunction closeRightSidebar(args) {\n  let targetEle = args.event ? args.event.target : null;\n  if (targetEle && targetEle.closest('.e-popup')) args.cancel = true;\n}\nfunction changeCulture(cul) {\n    if (cul === 'ar') {\n        changeRtl(true);\n    }\n    else {\n        changeRtl(false);\n    }\n    if (currencyDropDown) {\n        currencyDropDown.value = matchedCurrency[cul];\n    } else {\n        ej.base.setCurrencyCode(matchedCurrency[cul]);\n    }\n    ej.base.setCulture(cul);\n}\nfunction changeRtl(bool) {\n    var elementlist = ej.base.selectAll('.e-control', document.getElementById('control-content'));\n    for (var i = 0; i < elementlist.length; i++) {\n        var control = elementlist[i];\n        if (control.ej2_instances) {\n            for (var a = 0; a < control.ej2_instances.length; a++) {\n                var instance = control.ej2_instances[a];\n                instance.enableRtl = bool;\n            }\n        }\n    }\n}\nfunction loadCulture(cul) {\n    var ajax = new ej.base.Ajax('./src/common/cldr-data/main/' + cul + '/all.json', 'GET', true);\n    if (ej.base.getValue('main.' + cul, ej.base.cldrData)) {\n        changeCulture(cul);\n    } else {\n        ajax.send().then(function (result) {\n            ej.base.loadCldr(JSON.parse(result));\n            changeCulture(cul);\n        });\n    }\n}\n\nloadCulture('en');\nej.base.L10n.load(window.Locale);\nisMobile = window.matchMedia('(max-width:550px)').matches;\nif (ej.base.Browser.isDevice || isMobile) {\n    if (sidebar) {\n        sidebar.destroy();\n    }\n    sidebar = new ej.navigations.Sidebar({ width: '280px', showBackdrop: true, closeOnDocumentClick: true, enableGestures: false,change:resizeFunction });\n    sidebar.appendTo('#left-sidebar');\n} else {\n    sidebar = new ej.navigations.Sidebar({\n        width: '282px', target: document.querySelector('.sb-content '),\n        showBackdrop: false,\n        closeOnDocumentClick: false,\n        enableGestures: false,\n        change:resizeFunction\n    });\n    sidebar.appendTo('#left-sidebar');\n}\n\nif (ej.base.Browser.isDevice || isMobile) {\n    leftToggle.setAttribute('aria-expanded', 'false');\n} else {\n    leftToggle.setAttribute('aria-expanded', 'true');\n}\n\nfunction resizeFunction() {\n    if (!isMobile && !isTablet) {\n        resizeManualTrigger = true;\n        setTimeout(cusResize(), 400);\n    }\n}\n\nfunction preventTabSwipe(e) {\n    if (e.isSwiped) {\n        e.cancel = true;\n    }\n}\nfunction dynamicTab(e) {\n    var blockEle = this.element.querySelector('#e-content' + this.tabId + '_' + e.selectedIndex).children[0];\n    blockEle.innerHTML = this.items[e.selectedIndex].data;\n    blockEle.innerHTML = blockEle.innerHTML.replace(reg,'');\n    blockEle.classList.add('sb-src-code');\n    if (blockEle) {\n        hljs.highlightBlock(blockEle);\n    }\n}\n\nfunction renderSbPopups() {\n    switcherPopup = new ej.popups.Popup(document.getElementById('sb-switcher-popup'), {\n        relateTo: document.querySelector('.sb-header-text-right'),\n        position: { X: 'left' },\n        collision: { X: 'flip', Y: 'flip' },\n        offsetX: 0,\n        offsetY: -15,\n    });\n    themeSwitherPopup = new ej.popups.Popup(document.getElementById('theme-switcher-popup'), {\n        offsetY: 2,\n        relateTo: document.querySelector('.theme-wrapper'),\n        position: { X: 'left', Y: 'bottom' },\n        collision: { X: 'flip', Y: 'flip' }\n    });\n\n// Initialize AutoComplete\nsearchPopup = new ej.dropdowns.AutoComplete({\n    dataSource: [], // Initialize with an empty data source\n    filtering: function (e) {\n        if (e.text && e.text.length < 3) {\n            return;\n        }\n        let val = searchInstance.search(e.text, {\n            fields: {\n                component: { boost: 1 },\n                name: { boost: 2 }\n            },\n            expand: true,\n            boolean: 'AND'\n        });\n        val.map(function (item) {\n            item['doc'] = searchInstance.documentStore.docs[item.ref];\n        });\n        let value = [];\n        if (ej.base.Browser.isDevice) {\n            for (let file of val) {\n                if (file.doc.hideOnDevice !== true) {\n                    value = value.concat(file);\n                }\n            }\n        }\n        let query = new ej.data.Query().take(10).select('doc');\n        let fields = searchInstance.fields;\n        let searchValue = ej.base.Browser.isDevice ? value : val;\n        e.updateData(searchValue, query, fields);\n    },\n    placeholder: 'Search here...',\n    noRecordsTemplate: '<div class=\"search-no-record\">We’re sorry. We cannot find any matches for your search term.</div>',\n    fields: { groupBy: 'doc.component', value: 'doc.uid', text: 'doc.name' },\n    highlight: true,\n    select: function (e) {\n        let data = e.itemData.doc;\n        let hashval = '#/' + location.hash.split('/')[1] + '/' + data.dir + '/' + data.url + '.html';\n        searchPopup.hidePopup();\n        searchOverlay.classList.add('e-search-hidden');\n        if (location.hash !== hashval) {\n            sampleOverlay();\n            location.hash = hashval;\n            setSelectList();\n        }\n    }\n}, inputele);\n\n// Append the AutoComplete to the search element\n// searchPopup.appendTo(inputele);\n    settingsPopup = new ej.popups.Popup(document.getElementById('settings-popup'), {\n        offsetY: 5,\n        zIndex: 1001,\n        relateTo: settingElement,\n        position: { X: 'right', Y: 'bottom' },\n        collision: { X: 'flip', Y: 'flip' }\n    });\n    settingsidebar.appendTo('#right-sidebar');\n    if (!isMobile) {\n        settingsidebar.hide();\n        settingsPopup.hide();\n    } else {\n        ej.base.select('.sb-mobile-preference').appendChild(ej.base.select('#settings-popup'));\n    }\n    searchPopup.hidePopup();\n    switcherPopup.hide();\n    themeSwitherPopup.hide();\n    themeDropDown = new ej.dropdowns.DropDownList({\n        index: themeCollection.indexOf(selectedTheme.split('-')[0]),\n        change: function (e) { switchTheme(e.value); }\n    });\n    themeDropDown.appendTo('#sb-setting-theme');\n    themeModeDropDown = new ej.dropdowns.DropDownList({\n        index: (location.hash.split('/')[1] && location.hash.split('/')[1].includes('-dark')) ? 1 : 0,\n        change: function (e) { darkSwitch() }\n    });\n    themeModeDropDown.appendTo('#sb-theme-mode');\n    cultureDropDown = new ej.dropdowns.DropDownList({\n        index: 0,\n        change: function (e) {\n            var value = e.value;\n            loadCulture(value);\n        }\n\n    });\n    currencyDropDown = new ej.dropdowns.DropDownList({\n        index: 0,\n        change: function (e) { ej.base.setCurrencyCode(e.value); }\n    });\n    cultureDropDown.appendTo('#sb-setting-culture');\n    currencyDropDown.appendTo('#sb-setting-currency');\n    contentTab = new ej.navigations.Tab({\n        selected: changeTab,\n        selecting: preventTabSwipe\n    }, '#sb-content');\n    sourceTab = new ej.navigations.Tab({\n        items: [],\n        headerPlacement: 'Bottom',\n        cssClass: 'sb-source-code-section',\n        selecting: preventTabSwipe,\n        created: dynamicTabCreation,\n        selected: dynamicTab,\n    }, '#sb-source-tab');\n    apiGrid = new ej.grids.Grid({\n        width: '100%',\n        dataSource: [],\n        allowTextWrap: true,\n        columns: [\n            { field: 'name', headerText: 'Name', template: '#template', width: 180, textAlign: 'center' },\n            { field: 'type', headerText: 'Type', width: 180 },\n            { field: 'description', headerText: 'Description', template: '#template-description', width: 200 },\n        ],\n        dataBound: dataBound\n    });\n    apiGrid.appendTo('#api-grid');\n    var prevbutton = new ej.buttons.Button({ iconCss: 'sb-icons sb-icon-Previous', cssClass: 'e-flat' }, '#mobile-prev-sample');\n    var nextbutton = new ej.buttons.Button({ iconCss: 'sb-icons sb-icon-Next', cssClass: 'e-flat', iconPosition: 'Right' }, '#mobile-next-sample');\n    var tabHeader = document.getElementById('sb-content-header');\n    tabHeader.appendChild(tabContentToolbar);\n    var openNew = new ej.popups.Tooltip({\n        content: 'Open in New Window'\n    });\n\n    openNew.appendTo('.sb-open-new-wrapper');\n\n    var previous = new ej.popups.Tooltip({\n        content: 'Previous Sample'\n    });\n    previous.appendTo('#prev-sample');\n\n    var next = new ej.popups.Tooltip({\n        content: 'Next Sample'\n    });\n\n    ej.base.select('#right-pane').addEventListener('scroll', function (event) {\n        next.close();\n        openNew.close();\n        previous.close();\n    });\n\n    next.appendTo('#next-sample');\n\n}\n\nfunction checkApiTableDataSource() {\n    var hash = location.hash.split('/');\n    var data = window.apiList[hash[2] + '/' + hash[3].replace('.html', '')] || [];\n    if (!data.length || (isMobile || isTablet)) {\n        contentTab.hideTab(2);\n    } else {\n        contentTab.hideTab(2, false);\n    }\n}\n\nfunction changeTab(args) {\n    if (args.selectedIndex === 2) {\n        var hash = location.hash.split('/');\n        var data = window.apiList[hash[2] + '/' + hash[3].replace('.html', '')] || [];\n        if (data.length) {\n            apiGrid.dataSource = data;\n        } else {\n            apiGrid.dataSource = [];\n        }\n    }\n    if (args.selectedIndex === 1) {\n        sourceTab.items = sourceTabItems;\n        sourceTab.refresh();\n        rendercopycode();\n        dynamicTabCreation(sourceTab);\n    }\n    if (args.selectedItem && args.selectedItem.innerText === 'DEMO') {\n        let demoSection = document.getElementsByClassName('sb-demo-section')[0];\n        const componentToIgnore= ['tab'];\n        if (demoSection) {\n            let elementList = demoSection.getElementsByClassName('e-control e-lib');\n            for (let i = 0; i < elementList.length; i++) {\n                let instance = elementList[i].ej2_instances;\n                if (instance && instance[0] && typeof instance[0].refresh === 'function' && componentToIgnore.indexOf(instance[0].getModuleName()) === -1 && !['rich-text-editor', 'ai-assistview', 'chat-ui'].includes(currentControl)) {\n                    instance[0].refresh();\n                }\n                if (instance && instance[0] && instance[0].getModuleName() !== 'DashboardLayout')\n                    break;\n            }\n        }\n    }\n}\n\nfunction dynamicTabCreation(obj) {\n    var tabObj;\n    if (obj) {\n        tabObj = obj;\n    } else { tabObj = this; }\n    var contentEle = tabObj.element.querySelector('#e-content' + tabObj.tabId + '_' + tabObj.selectedItem);\n    if (!contentEle) {\n        return;\n    }\n    var blockEle = tabObj.element.querySelector('#e-content' + tabObj.tabId + '_' + tabObj.selectedItem).children[0];\n    blockEle.innerHTML = tabObj.items[tabObj.selectedItem].data;\n    blockEle.innerHTML = blockEle.innerHTML.replace(reg,'');\n    blockEle.classList.add('sb-src-code');\n    if (blockEle) {\n        hljs.highlightBlock(blockEle);\n    }\n}\n\nfunction dataBound(args) {\n    if (!this.getRows()) {\n        return;\n    }\n    var gridtrs = this.getRows().length;\n    var trs = this.getRows();\n    for (var count = 0; count < gridtrs; count++) {\n        var tr1 = trs[count];\n        if (tr1.getBoundingClientRect().height > 100) {\n            var desDiv = tr1.querySelector('.sb-sample-description');\n            var tag = ej.base.createElement('a', { id: 'showtag', innerHTML: ' show more...' });\n            tag.addEventListener('click', tagShowmore.bind(this, desDiv));\n            desDiv.classList.add('e-custDesription');\n            desDiv.appendChild(tag);\n        }\n    }\n}\n\nfunction tagShowmore(target) {\n    target.classList.remove('e-custDesription');\n    target.querySelector('#showtag').classList.add('e-display');\n    var hideEle = target.querySelector('#hidetag');\n    if (!hideEle) {\n        var tag = ej.base.createElement('a', { id: 'hidetag', attrs: {}, innerHTML: 'show less..' });\n        target.appendChild(tag);\n        tag.addEventListener('click', taghideless.bind(this, target));\n    } else {\n        hideEle.classList.remove('e-display');\n    }\n}\n\nfunction taghideless(target) {\n    target.querySelector('#hidetag').classList.add('e-display');\n    target.querySelector('#showtag').classList.remove('e-display');\n    target.classList.add('e-custDesription');\n}\nfunction setPressedAttribute(ele) {\n    var status = ele.classList.contains('active');\n    ele.setAttribute('aria-pressed', status ? 'true' : 'false');\n}\nsearchOverlay.addEventListener('click', searchOverlayClick);\nfunction searchOverlayClick() {\n    toggleSearchOverlay();\n}\nfunction sbHeaderClick(action, preventSearch) {\n    if (openedPopup) {\n        openedPopup.hide(new ej.base.Animation({ name: 'FadeOut', duration: 300, delay: 0 }));\n    }\n    if (preventSearch !== true && !searchOverlay.classList.contains('sb-hide')) {\n        searchOverlay.classList.add('sb-hide');\n        searchButton.classList.remove('active');\n        setPressedAttribute(searchButton);\n    }\n    var curPopup;\n    switch (action) {\n        case 'changeSampleBrowser':\n            curPopup = switcherPopup;\n            break;\n        case 'changeTheme':\n            headerThemeSwitch.classList.toggle('active');\n            setPressedAttribute(headerThemeSwitch);\n            curPopup = themeSwitherPopup;\n            break;\n        case 'toggleSettings':\n            settingElement.classList.toggle('active');\n            setPressedAttribute(settingElement);\n            themeDropDown.index = themeCollection.indexOf(selectedTheme);\n            curPopup = settingsPopup;\n            break;\n    }\n    if (action === 'closePopup') {\n        headerThemeSwitch.classList.remove('active');\n        settingElement.classList.remove('active');\n        setPressedAttribute(headerThemeSwitch);\n        setPressedAttribute(settingElement);\n    }\n    if (curPopup && curPopup !== openedPopup) {\n        curPopup.show(new ej.base.Animation({ name: 'FadeIn', duration: 400, delay: 0 }));\n        openedPopup = curPopup;\n    } else {\n        openedPopup = null;\n    }\n    prevAction = action;\n}\n\nfunction toggleSearchOverlay() {\n    sbHeaderClick('closePopup', true);\n    inputele.value = '';\n    searchPopup.hidePopup();\n    searchButton.classList.toggle('active');\n    setPressedAttribute(searchButton);\n    searchOverlay.classList.toggle('sb-hide');\n    if (!searchOverlay.classList.contains('sb-hide')) {\n        inputele.focus();\n    }\n}\n\nfunction changeTheme(e) {\n    var target = e.target;\n    target = ej.base.closest(target, 'li');\n    var themeName = target.id;\n    switchTheme(themeName);\n    var imageEditorElem = document.querySelector(\".e-image-editor\");\n    if (imageEditorElem != null) {\n        var imageEditor = ej.base.getComponent(document.getElementById(imageEditorElem.id), 'image-editor');\n        imageEditor.theme = themeName;\n    }\n}\n\nfunction switchTheme(str) {\n    var hash = location.hash.split('/');\n    if (hash[1] !== str) {\n        if (hash[1].includes('-dark') && darkIgnore.indexOf(str) === -1) {\n            str = str + '-dark';\n        }\n        hash[1] = str;\n        localStorage.setItem('ej2-switch', ej.base.select('.sb-responsive-section .active').id);\n        location.hash = hash.join('/');\n    }\n}\n\nthemeDarkButton.addEventListener('click', darkSwitch);\n\nfunction darkSwitch() {\n    var hash = location.hash.split('/');\n    var darkTheme = hash[1]\n    darkTheme = darkTheme.includes(\"-dark\") ? darkTheme.replace(\"-dark\", \"\") : darkIgnore.indexOf(darkTheme) === 0 ? darkTheme : darkTheme + '-dark';\n    hash[1] = darkTheme;\n    localStorage.setItem('ej2-switch', ej.base.select('.sb-responsive-section .active').id);\n    location.hash = hash.join('/');\n    location.reload();\n}\n\nfunction onsearchInputChange(e) {\n    if (e.keyCode === 27 || e.keyCode === 13) {\n        toggleSearchOverlay();\n    }\n    var searchString = e.target.value;\n    if (searchString.length <= 2) {\n        searchPopup.hidePopup();\n        return;\n    }\n    var val = [];\n    val = searchInstance.search(searchString, {\n        fields: {\n            component: { boost: 1 },\n            name: { boost: 2 }\n        },\n        expand: true,\n        boolean: 'AND'\n    });\n    var value = [];\n    if (ej.base.Browser.isDevice) {\n        for (var j = 0; j < val.length; j++) {\n            if (val[j].doc.hideOnDevice !== true) {\n                value = value.concat(val);\n            }\n        }\n    }\n    \n}\n\nfunction highlight(searchString, listElement) {\n    var regex = new RegExp(searchString.split(' ').join('|'), 'gi');\n    var contentElements = ej.base.selectAll('.e-list-item .e-text-content .e-list-text', listElement);\n    for (var i = 0; i < contentElements.length; i++) {\n        var spanText = ej.base.select('.sb-highlight', contentElements[i]);\n        if (spanText) {\n            contentElements[i].innerHTML = contentElements[i].text;\n        }\n        contentElements[i].innerHTML = contentElements[i].innerHTML.replace(regex, function (matched) {\n            return '<span class=\"sb-highlight\">' + matched + '</span>';\n        });\n    }\n}\n\nfunction setMouseOrTouch(e) {\n    var ele = ej.base.closest(e.target, '.sb-responsive-items');\n    var switchType = ele.id;\n    changeMouseOrTouch(switchType);\n    sbHeaderClick('closePopup');\n    localStorage.setItem('ej2-switch', switchType);\n    location.reload();\n}\n\nfunction onNextButtonClick(arg) {\n    sampleOverlay();\n    var curSampleUrl = location.hash;\n    var inx = samplesAr.indexOf(curSampleUrl);\n    if (inx !== -1) {\n        var prevhref = samplesAr[inx];\n        var curhref = samplesAr[inx + 1];\n        location.href = curhref;\n    }\n    window.hashString = location.hash;\n    setSelectList();\n}\n\nfunction onPrevButtonClick(arg) {\n    sampleOverlay();\n    var curSampleUrl = location.hash;\n    var inx = samplesAr.indexOf(curSampleUrl);\n    if (inx !== -1) {\n        var prevhref = samplesAr[inx];\n        var curhref = samplesAr[inx - 1];\n        location.href = curhref;\n    }\n    window.hashString = location.hash;\n    setSelectList();\n}\n\n\nfunction processResize(e) {\n    var toggle = sidebar.isOpen;\n\n    isMobile = window.matchMedia('(max-width:550px)').matches;\n    isTablet = window.matchMedia('(min-width:550px) and (max-width: 850px)').matches;\n    if (isTablet) {\n        resizeManualTrigger = false;\n    }\n\n    if (resizeManualTrigger || (isMobile && ej.base.select('#right-sidebar').classList.contains('sb-hide'))) {\n        return;\n    }\n    isTablet = window.matchMedia('(min-width:550px) and (max-width: 850px)').matches;\n    isPc = window.matchMedia('(min-width:850px)').matches;\n    processDeviceDependables();\n    setLeftPaneHeight();\n    var leftPane = ej.base.select('.sb-left-pane');\n    var rightPane = ej.base.select('.sb-right-pane');\n    var footer = ej.base.select('.sb-footer-left');\n    var pref = ej.base.select('#settings-popup');\n    if (isTablet || isMobile) {\n        contentTab.hideTab(2);\n    } else {\n        contentTab.hideTab(2, false);\n    }\n    if (toggle && !isPc) {\n        toggleLeftPane();\n    }\n    if (isMobile || isTablet) {\n        sidebar.target = null;\n        sidebar.showBackdrop = true;\n        sidebar.closeOnDocumentClick = true;\n        ej.base.select('.sb-left-footer-links').appendChild(footer);\n\n        if (isVisible('.sb-mobile-overlay')) {\n            removeMobileOverlay();\n        }\n\n        if (!pref.parentElement.classList.contains('sb-mobile-preference')) {\n            ej.base.select('.sb-mobile-preference').appendChild(pref);\n            settingsPopup.show();\n        }\n        var propPanel = ej.base.select('#control-content .property-section');\n        if (propPanel) {\n            ej.base.select('.sb-mobile-prop-pane').appendChild(propPanel);\n            ej.base.select('.sb-mobile-setting').classList.remove('sb-hide');\n        }\n        if (isVisible('.sb-mobile-overlay')) {\n            removeMobileOverlay();\n        }\n    }\n    if (isPc) {\n        sidebar.target = document.querySelector('.sb-content ');\n        sidebar.showBackdrop = false;\n        sidebar.closeOnDocumentClick = false;\n        ej.base.select('.sb-footer').appendChild(footer);\n        if (isVisible('.sb-mobile-overlay')) {\n            removeMobileOverlay();\n        }\n\n        if (isPc && !ej.base.Browser.isDevice && isVisible('.sb-left-pane')) {\n            rightPane.classList.remove('control-fullview');\n        }\n        if (pref.parentElement.classList.contains('sb-mobile-preference')) {\n            ej.base.select('#sb-popup-section').appendChild(pref);\n            settingsidebar.hide();\n            settingsPopup.hide();\n        }\n        var mobilePropPane = ej.base.select('.sb-mobile-prop-pane .property-section');\n        if (mobilePropPane) {\n            ej.base.select('#control-content').appendChild(mobilePropPane);\n        }\n        if (!ej.base.select('.sb-mobile-right-pane').classList.contains('sb-hide')) {\n            toggleRightPane();\n        }\n    }\n\n}\n\nfunction resetInput(arg) {\n    arg.preventDefault();\n    arg.stopPropagation();\n    document.getElementById('search-input').value = '';\n    document.getElementById('search-input-wrapper').setAttribute('data-value', '');\n    searchPopup.hidePopup();\n}\nfunction bindEvents() {\n    document.getElementById('sb-switcher').addEventListener('click', function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        sbHeaderClick('changeSampleBrowser');\n    });\n    document.getElementById('sb-switcher').addEventListener('keydown', function (e) {\n        if (e.keyCode === 'Enter' || e.keyCode === ' ') {\n            sbHeaderClick('changeSampleBrowser');\n        }\n    });\n    ej.base.select('.sb-header-text-right').addEventListener('click', function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        sbHeaderClick('changeSampleBrowser');\n    });\n    headerThemeSwitch.addEventListener('click', function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        sbHeaderClick('changeTheme');\n    });\n    headerThemeSwitch.addEventListener('keydown', function (e) {\n        if (e.keyCode === 'Enter' || e.keyCode === ' ') {\n            sbHeaderClick('changeTheme');\n        }\n    });\n    themeList.addEventListener('click', changeTheme);\n    document.addEventListener('click', sbHeaderClick.bind(this, 'closePopup'));\n    settingElement.addEventListener('click', function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        sbHeaderClick('toggleSettings');\n    });\n    settingElement.addEventListener('keydown', function (e) {\n        if (e.keyCode === 'Enter' || e.keyCode === ' ') {\n            sbHeaderClick('toggleSettings');\n        }\n     });\n    searchButton.addEventListener('click', function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        toggleSearchOverlay();\n    });\n    searchButton.addEventListener('keydown', function (e) {\n        if (e.keyCode === 'Enter' || e.keyCode === ' ') {\n            toggleSearchOverlay();\n        }\n    });\n    document.getElementById('settings-popup').addEventListener('click', function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n    });\n    inputele.addEventListener('click', function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n    });\n    inputele.addEventListener('keyup', onsearchInputChange);\n    setResponsiveElement.addEventListener('click', setMouseOrTouch);\n    ej.base.select('#sb-left-back').addEventListener('click', showHideControlTree);\n    leftToggle.addEventListener('click', toggleLeftPane);\n    leftToggle.addEventListener('keydown', (e) => {\n        if (e.keyCode === 'Enter' || e.keyCode === ' ') {\n            toggleLeftPane();\n        }\n    });\n    ej.base.select('.sb-mobile-overlay').addEventListener('click', toggleMobileOverlay);\n    ej.base.select('.sb-header-settings').addEventListener('click', viewMobilePrefPane);\n    ej.base.select('.sb-mobile-setting').addEventListener('click', viewMobilePropPane);\n    resetSearch.addEventListener('click', resetInput);\n    document.getElementById('open-plnkr').addEventListener('click', function () {\n        var plnkrForm = ej.base.select('#stack-form');\n        if (plnkrForm) {\n            plnkrForm.submit();\n        }\n    });\n    document.getElementById('switch-sb').addEventListener('click', function (e) {\n        var target = ej.base.closest(e.target, 'li');\n        if (target) {\n            var anchor = target.querySelector('a');\n            if (anchor) {\n                anchor.click();\n            }\n        }\n    });\n    ej.base.select('#next-sample').addEventListener('click', onNextButtonClick);\n    ej.base.select('#mobile-next-sample').addEventListener('click', onNextButtonClick);\n    ej.base.select('#prev-sample').addEventListener('click', onPrevButtonClick);\n    ej.base.select('#mobile-prev-sample').addEventListener('click', onPrevButtonClick);\n    window.addEventListener('resize', processResize);\n    ej.base.select('.sb-right-pane').addEventListener('click', function () {\n        if (isTablet && isLeftPaneOpen()) {\n            toggleLeftPane();\n        }\n    });\n    // ej.base.select('.copycode').addEventListener('click', copyCode);\n}\n\nfunction copyCode() {\n    var copyElem = ej.base.select('.' + cBlock[sourceTab.selectedItem]);\n    var textArea = ej.base.createElement('textArea');\n    textArea.textContent = copyElem.textContent.trim();\n    document.body.appendChild(textArea);\n    textArea.select();\n    document.execCommand('copy');\n    ej.base.detach(textArea);\n    ej.base.select('.copy-tooltip').ej2_instances[0].close();\n}\nfunction rendercopycode() {\n    var ele = ej.base.createElement('div', { className: 'copy-tooltip', innerHTML: '<div class=\"e-icons copycode\"></div>' });\n    document.getElementById('sb-source-tab').appendChild(ele);\n    ej.base.select('.copycode').addEventListener('click', copyCode);\n    var copiedTooltip = new ej.popups.Tooltip({ content: 'Copied to clipboard ', position: 'BottomCenter', opensOn: 'Click', closeDelay: 500 }, '.copy-tooltip');\n}\n\n\nfunction setSbLink() {\n    var hrefLink = location.hash.split('/').slice(1);\n    var href = location.href = '#/' + selectedTheme + '/' + hrefLink.slice(1).join('/');\n    var link = href.match(urlRegex);\n    var sample = href.match(sampleRegex);\n    for (var i = 0, len = sbArray.length; i < len; i++) {\n        var sb = sbArray[i];\n        var ele = ej.base.select('#' + sb);\n        if (sb === 'aspnetcore' || sb === 'aspnetmvc') {\n            ele.href = sb === 'aspnetcore' ? 'https://ej2.syncfusion.com/aspnetcore/' : 'https://ej2.syncfusion.com/aspnetmvc/';\n\n        } else if (sb === 'nextjs') {\n            const defaultSamplePath = sample[1].includes('grid/grid-overview') ? sample[1].split('/')[0] + '/grid/overview' : sample[1];\n            ele.href = 'https://ej2.syncfusion.com/nextjs/demos/' + defaultSamplePath;\n        }\n        else if (sb === 'blazor') {\n            ele.href = 'https://blazor.syncfusion.com/demos/';\n        }\n        else if (sb === 'react' && location.href.includes('grid/grid-overview.html')) {\n            ele.href = ((link) ? ('http://' + link[1] + '/' + (link[3] ? (link[3] + '/') : '')) : ('https://ej2.syncfusion.com/')) + 'react/demos/#/' + selectedTheme + '/grid/overview';\n        } else {\n            ele.href = ((link) ? ('http://' + link[1] + '/' + (link[3] ? (link[3] + '/') : '')) :\n                ('https://ej2.syncfusion.com/')) + (sbObj[sb] ? (sb + '/') : '') +\n                'demos/#/' + (sample ? (sample[1] + (sb !== 'typescript' ? '' : '.html')) : '');\n        }\n\n\n    }\n}\n\nfunction changeMouseOrTouch(str) {\n    var activeEle = setResponsiveElement.querySelector('.active');\n    if (activeEle) {\n        activeEle.classList.remove('active');\n    }\n    if (str === 'mouse') {\n        document.body.classList.remove('e-bigger');\n    } else {\n        document.body.classList.add('e-bigger');\n    }\n    setResponsiveElement.querySelector('#' + str).classList.add('active');\n}\n\nfunction loadTheme(theme) {\n    theme = themesToRedirect.indexOf(theme) !== -1 ? 'tailwind3' : theme;\n    theme =  theme.includes('bootstrap5') ? theme.replace('bootstrap5', 'bootstrap5.3') : theme;\n    var body = document.body;\n    if (body.classList.length > 0) {\n        for (var themeItem in themeCollection) {\n            body.classList.remove(themeCollection[themeItem]);\n            body.classList.remove(themeCollection[themeItem] + '-dark');\n        }\n    }\n    body.classList.add(theme);\n    if (darkIgnore.indexOf(theme) !== -1) {\n        themeDarkButton.style.display = \"none\";\n        document.getElementById(\"mobiledarkswitch\").style.display = \"none\";\n    }\n    if (!isMobile) {\n        if (!theme.includes('-dark')) {\n            darkButton.innerHTML = \"DARK\";\n            document.getElementById(\"dark-icon\").style.display = \"inline-block\";\n            themeList.querySelector('.active').classList.remove('active'); \n            theme== 'bootstrap5.3'?themeList.querySelector('#bootstrap5').classList.add('active'): \n                themeList.querySelector('#' + theme).classList.add('active');\n        }\n        else {\n            darkButton.innerHTML = \"LIGHT\";\n            document.getElementById(\"light-icon\").style.display = \"inline-block\";\n            themeList.querySelector('.active').classList.remove('active');\n            theme== 'bootstrap5.3-dark'? themeList.querySelector('#bootstrap5').classList.add('active'):\n                themeList.querySelector('#' + theme.replace('-dark', \"\")).classList.add('active');\n        }\n    }\n    var doc = document.getElementById('themelink');\n    doc.setAttribute('href','./dist/' + theme + '.css');\n    var ajax = new ej.base.Ajax('./dist/' + theme + '.css', 'GET', true);\n    ajax.send().then(function (result) {\n        selectedTheme = theme;\n        selectedTheme = selectedTheme === \"bootstrap5.3\" ? 'bootstrap5' : selectedTheme === \"bootstrap5.3-dark\" ? \"bootstrap5-dark\" : selectedTheme;\n        renderLeftPaneComponents();\n        renderSbPopups();\n        bindEvents();\n        if (isTablet || isMobile) {\n            contentTab.hideTab(2);\n        }\n        processDeviceDependables();\n        addRoutes(samplesList);\n        routeDefault();\n        if (isTablet && isLeftPaneOpen()) {\n            toggleLeftPane();\n        }\n        elasticlunr.clearStopWords();\n        searchInstance = elasticlunr.Index.load(window.searchIndex);\n        hasher.initialized.add(parseHash);\n        hasher.changed.add(parseHash);\n        hasher.init();\n        if (reloadPageForRedirection == true) {\n            window.location.reload();\n        }\n    });\n}\n\nfunction toggleMobileOverlay() {\n\n    if (!ej.base.select('.sb-mobile-right-pane').classList.contains('sb-hide')) {\n        toggleRightPane();\n    }\n}\n\nfunction removeMobileOverlay() {\n    ej.base.select('.sb-mobile-overlay').classList.add('sb-hide');\n}\n\nfunction isLeftPaneOpen() {\n    return sidebar.isOpen;\n}\n\nfunction isVisible(elem) {\n    return !ej.base.select(elem).classList.contains('sb-hide');\n}\n\nfunction setLeftPaneHeight() {\n    var leftPane = ej.base.select('.sb-left-pane');\n    leftPane.style.height = isMobile ? (document.body.offsetHeight + 'px') : '';\n}\n\nfunction toggleLeftPane() {\n    var reverse = sidebar.isOpen;\n    ej.base.select('#left-sidebar').classList.remove('sb-hide');\n    leftToggle.setAttribute('aria-expanded', (!reverse).toString());\n    if (!reverse) {\n        leftToggle.classList.add('toggle-active');\n    } else {\n        leftToggle.classList.remove('toggle-active');\n    }\n\n    if (sidebar) {\n        reverse = sidebar.isOpen;\n        if (reverse) {\n            sidebar.hide();\n        } else {\n            sidebar.show();\n        }\n    }\n\n}\n\nfunction cusResize() {\n    var event;\n    if (typeof (Event) === 'function') {\n        event = new Event('resize');\n    } else {\n        event = document.createEvent('Event');\n        event.initEvent('resize', true, true);\n    }\n    window.dispatchEvent(event);\n}\n\nfunction toggleRightPane() {\n    themeDropDown.index = themeCollection.indexOf(selectedTheme);\n    ej.base.select('#right-sidebar').classList.remove('sb-hide');\n    if (isMobile) {\n        settingsidebar.toggle();\n    }\n}\n\n\nfunction viewMobilePrefPane() {\n    ej.base.select('.sb-mobile-prop-pane').classList.add('sb-hide');\n    ej.base.select('.sb-mobile-preference').classList.remove('sb-hide');\n    toggleRightPane();\n}\n\nfunction viewMobilePropPane() {\n    ej.base.select('.sb-mobile-preference').classList.add('sb-hide');\n    ej.base.select('.sb-mobile-prop-pane').classList.remove('sb-hide');\n    toggleRightPane();\n}\n\nfunction getSampleList() {\n    if (ej.base.Browser.isDevice) {\n        var tempList = ej.base.extend([], window.samplesList);\n        var sampleList = [];\n        for (var i = 0; i < tempList.length; i++) {\n            var temp = tempList[i];\n            if (temp.hideOnDevice == true) {\n                continue;\n            }\n            var data = new ej.data.DataManager(temp.samples);\n            temp.samples = data.executeLocal(new ej.data.Query().where('hideOnDevice', 'notEqual', true));\n            sampleList = sampleList.concat(temp);\n        }\n        return sampleList;\n    }\n    return window.samplesList;\n}\n\nfunction renderLeftPaneComponents() {\n    samplesTreeList = getTreeviewList(samplesList);\n    var sampleTreeView = new ej.navigations.TreeView({\n        fields: {\n            dataSource: samplesTreeList,\n            id: 'id',\n            parentID: 'pid',\n            text: 'name',\n            hasChildren: 'hasChild',\n            htmlAttributes: 'url'\n        },\n        nodeClicked: controlSelect,\n        nodeTemplate: '<div><span class=\"tree-text\">${name}</span>' +\n            '${if(type === \"update\")}<span class=\"e-badge sb-badge e-samplestatus ${type} tree tree-badge\">Updated</span>' +\n            '${else}${if(type)}<span class=\"e-badge sb-badge e-samplestatus ${type} tree tree-badge\">${type}</span>${/if}${/if}</div>'\n    }, '#controlTree');\n    var controlList = new ej.lists.ListView({\n        dataSource: controlSampleData[location.hash.split('/')[2]] || controlSampleData.grid,\n        fields: { id: 'uid', text: 'name', groupBy: 'order', htmlAttributes: 'data' },\n        select: controlSelect,\n        template: '<div class=\"e-text-content ${if(type)}e-icon-wrapper${/if}\"> <span class=\"e-list-text\">${name}' +\n            '</span>${if(type === \"update\")}<span class=\"e-badge sb-badge e-samplestatus ${type}\">Updated</span>' +\n            '${else}${if(type)}<span class=\"e-badge sb-badge e-samplestatus ${type}\">${type}</span>${/if}${/if}' +\n            '${if(directory)}<div class=\"e-icons e-icon-collapsible\"></div>${/if}</div>',\n        groupTemplate: '${if(items[0][\"category\"])}<div class=\"e-text-content\">' +\n            '<span class=\"e-list-text\">${items[0].category}</span>' +\n            '</div>${/if}',\n        actionComplete: setSelectList\n    }, '#controlList');\n}\n\nfunction getTreeviewList(list) {\n    var id;\n    var pid;\n    var tempList = [];\n    var category = '';\n    for (var i = 0; i < list.length; i++) {\n        if (category !== list[i].category) {\n            category = list[i].category;\n            tempList = tempList.concat({ id: i + 1, name: list[i].category, hasChild: true, expanded: true });\n            pid = i + 1;\n            id = pid;\n        }\n        id += 1;\n        tempList = tempList.concat({\n            id: id,\n            pid: pid,\n            name: list[i].name,\n            type: list[i].type,\n            url: {\n                'data-path': '/' + list[i].directory + '/' + list[i].samples[0].url + '.html',\n                'control-name': list[i].directory,\n            }\n        });\n        controlSampleData[list[i].directory] = getSamples(list[i].samples);\n    }\n    return tempList;\n}\n\nfunction getSamples(samples) {\n    var tempSamples = [];\n    for (var i = 0; i < samples.length; i++) {\n        tempSamples[i] = samples[i];\n        tempSamples[i].data = { 'sample-name': samples[i].url, 'data-path': '/' + samples[i].dir + '/' + samples[i].url + '.html' };\n    }\n    return tempSamples;\n}\n\nfunction controlSelect(arg) {\n    var path = (arg.node || arg.item).getAttribute('data-path');\n    var curHashCollection = '/' + location.hash.split('/').slice(2).join('/');\n    if (path) {\n        controlListRefresh(arg.node || arg.item);\n        if (path !== curHashCollection) {\n            sampleOverlay();\n            var theme = location.hash.split('/')[1] || 'tailwind3';\n            if (arg.item && ((isMobile && !ej.base.select('#left-sidebar').classList.contains('sb-hide')) ||\n                ((isTablet || (ej.base.Browser.isDevice && isPc)) && isLeftPaneOpen()))) {\n                toggleLeftPane();\n            }\n            window.hashString = '#/' + theme + path;\n            setTimeout(function () { location.hash = '#/' + theme + path; }, 600);\n        }\n    }\n}\n\nfunction controlListRefresh(ele) {\n    var samples = controlSampleData[ele.getAttribute('control-name')];\n    if (samples) {\n        var listView = ej.base.select('#controlList').ej2_instances[0];\n        listView.dataSource = samples;\n        showHideControlTree();\n    }\n}\n\nfunction showHideControlTree() {\n    var controlTree = ej.base.select('#controlTree');\n    var controlList = ej.base.select('#controlSamples');\n    var reverse = ej.base.select('#controlTree').style.display === 'none';\n    if (reverse) {\n        viewSwitch(controlList, controlTree, reverse);\n\n    } else {\n        viewSwitch(controlTree, controlList, reverse);\n    }\n}\n\nfunction viewSwitch(from, to, reverse) {\n    var anim = new ej.base.Animation({ duration: 500, timingFunction: 'ease' });\n    var controlTree = ej.base.select('#controlTree');\n    var controlList = ej.base.select('#controlList');\n    controlTree.style.overflowY = 'hidden';\n    controlList.classList.remove('e-view');\n    controlList.classList.remove('sb-control-list-top');\n    controlList.classList.add('sb-adjust-juggle');\n    to.style.display = '';\n    anim.animate(from, {\n        name: reverse ? 'SlideRightOut' : 'SlideLeftOut',\n        end: function () {\n            controlTree.style.overflowY = 'auto';\n            from.style.display = 'none';\n            controlList.classList.add('e-view');\n            controlList.classList.add('sb-control-list-top');\n            controlList.classList.remove('sb-adjust-juggle');\n        }\n    });\n    anim.animate(to, { name: reverse ? 'SlideLeftIn' : 'SlideRightIn' });\n}\n\nfunction setSelectList() {\n    var hString = window.hashString || location.hash;\n    var hash = hString.split('/');\n    var list = ej.base.select('#controlList').ej2_instances[0];\n    var control = ej.base.select('[control-name=\"' + hash[2] + '\"]');\n    if (control) {\n        var data = list.dataSource;\n        var samples = controlSampleData[control.getAttribute('control-name')];\n        if (JSON.stringify(data) !== JSON.stringify(samples)) {\n            list.dataSource = samples;\n            list.dataBind();\n        }\n        var selectSample = ej.base.select('[sample-name=\"' + hash.slice(-1)[0].split('.html')[0] + '\"]');\n        if (selectSample) {\n            if (ej.base.select('#controlTree').style.display !== 'none') {\n                showHideControlTree();\n            }\n            list.selectItem(selectSample);\n            selectSample.scrollIntoView({ block: \"nearest\" });\n        }\n    } else {\n        showHideControlTree();\n        list.selectItem(ej.base.select('[sample-name=\"grid-overview\"]'));\n    }\n}\n\nfunction toggleButtonState(id, state) {\n    var ele = document.getElementById(id);\n    var mobileEle = document.getElementById('mobile-' + id);\n    ele.disabled = state;\n    mobileEle.disabled = state;\n    if (state) {\n        mobileEle.classList.add('e-disabled');\n        ele.classList.add('e-disabled');\n    } else {\n        mobileEle.classList.remove('e-disabled');\n        ele.classList.remove('e-disabled');\n    }\n}\n\nfunction setPropertySectionHeight() {\n    if (!isTablet && !isMobile) {\n        var propertypane = ej.base.select('.property-section');\n        var ele = document.querySelector('.control-section');\n        if (ele && propertypane) {\n            ele.classList.add('sb-property-border');\n        } else {\n            ele.classList.remove('sb-property-border');\n        }\n    }\n}\n\nfunction routeDefault() {\n    crossroads.addRoute('', function () {\n        window.location.href = '#/' + selectedTheme + '/grid/gridoverview.html';\n        isInitRedirected = true;\n    });\n    crossroads.bypassed.add(function (request) {\n        var hash = request.split('.html')[0].split('/');\n        if (samplePath.indexOf(hash.slice(1).join('/')) === -1) {\n            location.hash = '#/' + hash[0] + '/' + (defaultSamples[hash[1]] || 'grid/gridoverview.html');\n            isInitRedirected = true;\n            reloadPageForRedirection = true;\n        }\n    });\n}\n\nfunction destroyControls() {\n    var elementlist = ej.base.selectAll('.e-control', document.getElementById('control-content'));\n    for (var i = 0; i < elementlist.length; i++) {\n        var control = elementlist[i];\n        if (control.ej2_instances) {\n            for (var a = 0; a < control.ej2_instances.length; a++) {\n                var instance = control.ej2_instances[a];\n                if (instance.element && document.contains(instance.element)){\n                    instance.destroy();\n                }\n            }\n        }\n\n    }\n}\n\nfunction loadScriptfile(path) {\n    var scriptEle = document.querySelector('script[src=\"' + path + '\"]');\n    var doFun;\n    var p2 = new Promise(function (resolve, reject) {\n        doFun = resolve;\n    });\n    if (!scriptEle) {\n        scriptEle = document.createElement('script');\n        scriptEle.setAttribute('type', 'text/javascript');\n        scriptEle.setAttribute('src', path);\n        scriptEle.onload = doFun;\n        if (typeof scriptEle !== 'undefined') {\n            document.getElementsByTagName('head')[0].appendChild(scriptEle);\n        }\n    } else {\n        doFun();\n    }\n    return p2;\n}\n\nfunction getExecFunction(sample) {\n    if (execFunction.hasOwnProperty(sample)) {\n        return execFunction[sample];\n    } else {\n        execFunction[sample] = window.default;\n        return execFunction[sample];\n    }\n}\n\nfunction errorHandler(error) {\n    document.getElementById('control-content').innerHTML = error ? error : 'Not Available';\n    ej.base.select('#control-content').classList.add('error-content');\n    removeOverlay();\n}\n\nfunction plunker(results) {\n    var plnkr = JSON.parse(results);\n    var prevForm = ej.base.select('#stack-form');\n    if (prevForm) {\n        ej.base.detach(prevForm);\n    }\n    var form = ej.base.createElement('form');\n    var res = 'https://stackblitz.com/run';\n    form.setAttribute('action', res);\n    form.setAttribute('method', 'post');\n    form.setAttribute('target', '_blank');\n    form.id = 'stack-form';\n    form.style.display = 'none';\n    document.body.appendChild(form);\n    var plunks = Object.keys(plnkr);\n    for (var x = 0; x < plunks.length; x++) {\n        createStackInput('project[files][' + plunks[x] + ']', plnkr[plunks[x]], form);\n    }\n    createStackInput('project[template]', 'javascript', form);\n    createStackInput('project[description]', 'Essential JS 2 Sample', form);\n    createStackInput('project[settings]', '{\"compile\":{\"clearConsole\":true}}', form);\n}\nfunction createStackInput(name, value, form) {\n    var input = ej.base.createElement('input');\n    input.setAttribute('type', 'hidden');\n    input.setAttribute('name', name);\n    input.setAttribute('value', value.replace(/{{theme}}/g, selectedTheme).replace(/{{ripple}}/,\n        (selectedTheme.indexOf('material') !== -1 ) ? 'ej.base.enableRipple(true);\\n' : ''));\n    form.appendChild(input);\n}\n\nfunction addRoutes(samplesList) {\n    var loop1 = function (node) {\n        defaultSamples[node.directory] = node.directory + '/' + node.samples[0].url + '.html';\n        var dataManager = new ej.data.DataManager(node.samples);\n        var samples = dataManager.executeLocal(new ej.data.Query().sortBy('order', 'ascending'));\n        var loop2 = function (subNode) {\n            var control = node.directory;\n            var sample = subNode.url;\n            samplePath = samplePath.concat(control + '/' + sample);\n            var sampleName = node.name + ' / ' + ((node.name !== subNode.category) ?\n                (subNode.category + ' / ') : '') + subNode.name;\n            var selectedTheme = location.hash.split('/')[1] ? location.hash.split('/')[1] : 'tailwind3';\n            var urlString = '/' + selectedTheme + '/' + control + '/' + sample + '.html';\n            samplesAr.push('#' + urlString);\n            crossroads.addRoute(urlString, function () {\n                var dataSourceLoad = document.getElementById(node.dataSourcePath);\n                if (node.dataSourcePath && !dataSourceLoad) {\n                    var dataAjax = new ej.base.Ajax(node.dataSourcePath, 'GET', true);\n                    dataAjax.send().then(function (result) {\n                        var ele = ej.base.createElement('script', { id: node.dataSourcePath, innerHTML: result });\n                        document.getElementsByTagName('head')[0].appendChild(ele);\n                        onDataSourceLoad(node, subNode, control, sample, sampleName);\n                    });\n                } else {\n                    onDataSourceLoad(node, subNode, control, sample, sampleName);\n                }\n\n\n            });\n        };\n        for (var i = 0; i < samples.length; i++) {\n            var subNode = samples[i];\n            loop2(subNode);\n        }\n    };\n    for (var i = 0; i < samplesList.length; i++) {\n        var node = samplesList[i];\n        loop1(node);\n    }\n    if (ej.base.Browser.isDevice) {\n        if (location.hash && samplesAr.indexOf(location.hash) == -1) {\n            var toastObj = new ej.notifications.Toast({\n                position: {\n                    X: 'Right'\n                }\n            });\n            toastObj.appendTo('#sb-home');\n            setTimeout(function () {\n                toastObj.show({\n                    content: location.hash.split('/')[2] + 'component not supported in mobile device'\n                });\n            }, 200);\n        }\n    }\n}\n\nfunction onDataSourceLoad(node, subNode, control, sample, sampleName) {\n    var controlID = node.uid;\n    var sampleID = subNode.uid;\n    document.getElementById('open-plnkr').disabled = true;\n    var openNew = ej.base.select('#openNew');\n    if (openNew) {\n        openNew.href = location.href.split('#')[0] +  node.directory + '/' + subNode.url + '/';\n    }\n    setSbLink();\n    const desktopSettings = ej.base.select('.sb-desktop-setting');\n    if (!ej.base.Browser.isDevice && desktopSettings) {\n        desktopSettings.style.display = !(/^ai-assistview/).test(control) && aiControlRegex.test(control) ? 'none' : '';\n    }\n    var ajaxFile = [];\n    var nameFile = [];\n    var tabObj = [];\n    var jsFile = new ej.base.Ajax('src/' + control + '/' + sample + '.js', 'GET', false);\n    var jsname = sample + '.js';\n\n    var htmlFile = new ej.base.Ajax('src/' + control + '/' + sample + '.html', 'GET', false);\n    var htmlFileNme = sample + '.html';\n\n    ajaxFile = [jsFile, htmlFile];\n    nameFile = [jsname, htmlFileNme];\n    if (subNode.sourceFiles) {\n        ajaxFile.splice(0);\n        nameFile.splice(0);\n        var sourcefiles = subNode.sourceFiles;\n        for (var i = 0; i < sourcefiles.length; i++) {\n            ajaxFile.push(new ej.base.Ajax(sourcefiles[i].path, 'GET', false));\n            nameFile.push(sourcefiles[i].displayName);\n\n        }\n    }\n    var subfile = 0;\n    var content;\n    for (var file = 0; file < ajaxFile.length; file++) {\n\n        ajaxFile[file].send().then(function (value) {  // jshint ignore:line\n            var fileName = nameFile[subfile];\n            if (fileName && fileName.indexOf('.html') > 0) {\n                content = getStringWithOutDescription(value.toString(), /(\\'|\\\")description/g);\n                content = getStringWithOutDescription(content.toString(), /(\\'|\\\")action-description/g);\n            }\n            content = fileName.indexOf('.html') > 0 ? content.replace(/@section (ActionDescription|Description){[^}]*}/g, '').replace(/&/g, '&amp;')\n                .replace(/\"/g, '&quot;').replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;') : value.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n            tabObj.push({\n                header: { text: nameFile[subfile] },\n                data: content,\n                content: nameFile[subfile]\n            });\n            subfile++;\n        });\n\n    }\n    sourceTabItems = tabObj;\n    var ajaxHTML = new ej.base.Ajax('src/' + control + '/' + sample + '.html', 'GET', true);\n    var p1 = ajaxHTML.send();\n    var jsScriptName = sample;\n    if ((aiControlRegex).test(control) && aiControlRegex.test(sample)) {\n        jsScriptName = sample.split('ai-')[1];\n    }\n    var p2 = loadScriptfile('src/' + control + '/' + jsScriptName + '.js');\n    var ajaxJs = new ej.base.Ajax('src/' + control + '/' + jsScriptName + '.js', 'GET', true);\n    sampleNameElement.innerHTML = node.name;\n    contentTab.selectedItem = 0;\n    breadCrumbComponent.innerHTML = node.name;\n    if (node.name !== subNode.category) {\n        breadCrumbSubCategory.innerHTML = subNode.category;\n        breadCrumbSubCategory.style.display = '';\n        breadCrumSeperator.style.display = '';\n    } else {\n        breadCrumbSubCategory.style.display = 'none';\n        breadCrumSeperator.style.display = 'none';\n    }\n    breadCrumbSample.innerHTML = subNode.name;\n    // for (var k = 0; k < 2; k++) {\n    //     var header = getSourceTabHeader(k);\n    //     if (header) {\n    //         header.innerHTML = sample + (k ? '.html' : '.js');\n    //     }\n    // }\n    var title = document.querySelector('title');\n    title.innerHTML = node.name + ' · ' + subNode.name + ' · Syncfusion JavaScript (ES5) UI Controls ';\n    // ajaxJs.send().then(function (value) {\n    //     document.querySelector('.js-source-content').innerHTML = value.toString().replace(/</g, '&lt;').replace(/\\>/g, '&gt;');\n    //     hljs.highlightBlock(document.querySelector('.js-source-content'));\n    // });\n    if (!(aiControlRegex).test(control) || (/^ai-assistview/).test(control)) {\n        var plunk = new ej.base.Ajax('src/' + control + '/' + sample + '-stack.json', 'GET', true);\n        var p3 = plunk.send();\n\n        p3.then(function (result) {\n            document.getElementById('open-plnkr').disabled = false;\n            plunker(result);\n        });\n    }\n    Promise.all([\n        p1,\n        p2\n    ]).then(function (results) {\n        var htmlString = results[0].toString();\n        destroyControls();\n        currentControlID = controlID;\n        currentSampleID = sampleID;\n        currentControl = node.directory;\n        var curIndex = samplesAr.indexOf(location.hash);\n        var samLength = samplesAr.length - 1;\n        if (curIndex === samLength) {\n            toggleButtonState('next-sample', true);\n        } else {\n            toggleButtonState('next-sample', false);\n        }\n        if (curIndex === 0) {\n            toggleButtonState('prev-sample', true);\n        } else {\n            toggleButtonState('prev-sample', false);\n        }\n        ej.base.select('#control-content').classList.remove('error-content');\n        document.getElementById('control-content').innerHTML = htmlString;\n        var controlEle = document.querySelector('.control-section');\n        var controlString = controlEle.innerHTML;\n        controlEle.innerHTML = '';\n        controlEle.appendChild(ej.base.createElement('div', { className: 'control-wrapper', innerHTML: controlString }));\n        renderPropertyPane('#property');\n        renderDescription();\n        renderActionDescription();\n        var htmlCode = ej.base.createElement('div', { innerHTML: htmlString });\n        var description = htmlCode.querySelector('#description');\n        if (description) {\n            ej.base.detach(description);\n        }\n        var actionDesc = htmlCode.querySelector('#action-description');\n        if (actionDesc) {\n            ej.base.detach(actionDesc);\n        }\n        // var htmlCodeSnippet = htmlCode.innerHTML.replace(/&/g, '&amp;')\n        //     .replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        // document.querySelector('.html-source-content').innerHTML = htmlCodeSnippet;\n        // hljs.highlightBlock(document.querySelector('.html-source-content'));\n        getExecFunction(control + sample)();\n        window.navigateSample();\n        isExternalNavigation = defaultTree = false;\n        checkApiTableDataSource();\n        setPropertySectionHeight();\n        removeOverlay();\n        var mobilePropPane = ej.base.select('.sb-mobile-prop-pane .property-section');\n        if (mobilePropPane) {\n            ej.base.detach(mobilePropPane);\n        }\n        var propPanel = ej.base.select('#control-content .property-section');\n        if (isMobile) {\n            if (propPanel) {\n                ej.base.select('.sb-mobile-setting').classList.remove('sb-hide');\n                ej.base.select('.sb-mobile-prop-pane').appendChild(propPanel);\n            } else {\n                ej.base.select('.sb-mobile-setting').classList.add('sb-hide');\n            }\n        }\n    }).catch(function (reason) {\n        errorHandler(reason.message);\n    });\n}\n\nfunction removeOverlay() {\n    document.body.setAttribute('aria-busy', 'false');\n    sbContentOverlay.classList.add('sb-hide');\n    sbRightPane.classList.remove('sb-right-pane-overlay');\n    sbHeader.classList.remove('sb-right-pane-overlay');\n    mobNavOverlay(false);\n    if (!sbBodyOverlay.classList.contains('sb-hide')) {\n        sbBodyOverlay.classList.add('sb-hide');\n    }\n    if (!isMobile) {\n        sbRightPane.scrollTop = 0;\n    } else {\n        sbRightPane.scrollTop = 74;\n    }\n    if (cultureDropDown.value == \"ar\") {\n        changeRtl(true);\n    }\n\n}\n\nfunction sampleOverlay() {\n    document.body.setAttribute('aria-busy', 'true');\n    sbHeader.classList.add('sb-right-pane-overlay');\n    sbRightPane.classList.add('sb-right-pane-overlay');\n    mobNavOverlay(true);\n    sbContentOverlay.classList.remove('sb-hide');\n}\n\nfunction overlay() {\n    sbHeader.classList.add('sb-right-pane-overlay');\n    sbBodyOverlay.classList.remove('sb-hide');\n}\n\nfunction mobNavOverlay(isOverlay) {\n    if (ej.base.isDevice) {\n        var mobileFoorter = ej.base.select('.sb-mobilefooter');\n        if (isOverlay) {\n            mobileFoorter.classList.add('sb-right-pane-overlay');\n        } else {\n            mobileFoorter.classList.remove('sb-right-pane-overlay');\n        }\n    }\n}\n\nfunction checkSampleLength(directory) {\n    var data = new ej.data.DataManager(samplesList);\n    var controls = data.executeLocal(new ej.data.Query().where('directory', 'equal', directory));\n    return controls[0].samples.length > 1;\n}\n\nfunction parseHash(newHash, oldHash) {\n    var newTheme = newHash.split('/')[0];\n    var control = newHash.split('/')[1];\n    if (newTheme !== selectedTheme && themeCollection.indexOf(newTheme) !== -1) {\n        location.reload();\n        crossroads.parse(newHash);\n    }\n    /* if (newHash.length && !ej.base.select('#' + control + '-common') && checkSampleLength(control)) {\n         var scriptElement = document.createElement('script');\n         scriptElement.src = 'src/' + control + '/common.js';\n         scriptElement.id = control + '-common';\n         scriptElement.type = 'text/javascript';\n         scriptElement.onload = function () {\n             crossroads.parse(newHash);\n         };\n         document.getElementsByTagName('head')[0].appendChild(scriptElement);\n     }*/\n\n    crossroads.parse(newHash);\n}\n\n// function getSourceTabHeader(index) {\n//     return document.querySelectorAll('.sb-source-code-section>.e-tab-header .e-tab-text')[index];\n// }\n\nfunction processDeviceDependables() {\n    if (ej.base.Browser.isDevice) {\n        ej.base.select('.sb-desktop-setting').classList.add('sb-hide');\n    } else {\n        ej.base.select('.sb-desktop-setting').classList.remove('sb-hide');\n    }\n}\n\nfunction checkTabHideStatus() {\n    if (!intialLoadCompleted) {\n        content.hideTab(1);\n        intialLoadCompleted = true;\n    }\n}\n\nfunction renderPropertyPane(ele) {\n    var contentEle = ej.base.select('#control-content');\n    var elem = contentEle.querySelector(ele);\n    var title;\n    if (!elem) {\n        return;\n    }\n    title = elem.getAttribute('title');\n    var parentEle = elem.parentElement;\n    elem = ej.base.detach(elem);\n    elem.classList.add('property-panel-table');\n    var parentPane = ej.base.createElement('div', {\n        className: 'property-panel-section',\n        innerHTML: \"<div class=\\\"property-panel-header\\\">\" + title + \"</div><div class=\\\"property-panel-content\\\"></div>\"\n    });\n    parentPane.children[1].appendChild(elem);\n    parentEle.appendChild(parentPane);\n}\n\nfunction renderDescription() {\n    var header;\n    var description = ej.base.select('#description', ej.base.select('#control-content'));\n    var descElement = ej.base.select('.description-section');\n    var iDescription = ej.base.select('#description', descElement);\n    if (iDescription) {\n        ej.base.detach(iDescription);\n    }\n    if (description) {\n        descElement.appendChild(description);\n    }\n}\n\nfunction renderActionDescription() {\n    var aDescription = ej.base.select('#action-description', ej.base.select('#control-content'));\n    var aDescElem = ej.base.select('.sb-action-description');\n    if (aDescription) {\n        aDescElem.innerHTML = '';\n        aDescElem.appendChild(aDescription);\n        aDescElem.style.display = '';\n    } else if (aDescElem) {\n        aDescElem.style.display = 'none';\n    }\n    var loadEle = document.getElementById('sb-content');\n     if (loadEle.ej2_instances[0])\n        loadEle.ej2_instances[0].tbObj.refreshOverflow();\n}\nfunction getStringWithOutDescription(code, descRegex) {\n    var lines = code.split('\\n');\n    var desStartLine = null;\n    var desEndLine = null;\n    var desInsideDivCnt = 0;\n    for (var i = 0; i < lines.length; i++) {\n        var curLine = lines[i];\n        if (desStartLine) {\n            if (/<div/g.test(curLine)) {\n                desInsideDivCnt = desInsideDivCnt + 1;\n            }\n            if (desInsideDivCnt && /<\\/div>/g.test(curLine)) {\n                desInsideDivCnt = desInsideDivCnt - 1;\n            } else if (!desEndLine && /<\\/div>/g.test(curLine)) {\n                desEndLine = i + 1;\n            }\n        }\n        if (descRegex.test(curLine)) {\n            desStartLine = i;\n        }\n    }\n    if (desEndLine && desStartLine) {\n        lines.splice(desStartLine, desEndLine - desStartLine);\n    }\n    return lines.join('\\n');\n}\n\nfunction loadJSON() {\n    var switchText = localStorage.getItem('ej2-switch') || 'mouse';\n    if (ej.base.Browser.isDevice || window.screen.width <= 850) {\n        switchText = 'touch';\n    }\n    setLeftPaneHeight();\n    if (isMobile) {\n        ej.base.select('#left-sidebar').classList.add('sb-hide');\n        ej.base.select('.sb-left-footer-links').appendChild(ej.base.select('.sb-footer-left'));\n        leftToggle.classList.remove('toggle-active');\n    }\n    /**\n     * Tab View\n     */\n    if (isTablet || (ej.base.Browser.isDevice && isPc)) {\n        leftToggle.classList.remove('toggle-active');\n        ej.base.select('.sb-right-pane').classList.add('control-fullview');\n    }\n\n    if (isTablet || ej.base.Browser.isDevice) {\n        ej.base.select('.sb-responsive-section').classList.add('sb-active');\n    }\n\n    overlay();\n    changeMouseOrTouch(switchText);\n    localStorage.removeItem('ej2-switch');\n    ej.base.enableRipple(selectedTheme.indexOf('material') !== -1 || !selectedTheme);\n    loadTheme(selectedTheme);\n}\nloadJSON();\n\n\n//# sourceURL=webpack:///./src/common/index.js?");

/***/ })

/******/ })));