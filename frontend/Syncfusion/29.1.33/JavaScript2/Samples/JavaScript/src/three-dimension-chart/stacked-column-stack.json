{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"sColumn-container\" align=\"center\"></div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\n * Sample for Stacked Column Series\n */\n\n    var chart3D = new ej.charts.Chart3D({\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            interval: 1,\n            valueType: 'Category'\n        },\n        //Initializing Primary Y Axis\n        primaryYAxis:\n        {\n            maximum: ej.base.Browser.isDevice ? 50 : 60,\n            interval: 10\n        },\n        //Initializing Chart Series\n        series: [\n            {\n                type: 'StackingColumn',\n                dataSource: [\n                    { x: '2018', y: 24.5 },\n                    { x: '2019', y: 25.6 },\n                    { x: '2020', y: 29 },\n                    { x: '2021', y: 28.5 },\n                    { x: '2022', y: 30.6 },\n                ],\n                xName: 'x', stackingGroup: 'Asia',\n                yName: 'y', name: 'Iran', columnWidth: 0.6\n            },\n            {\n                type: 'StackingColumn',\n                dataSource: [\n                    { x: '2018', y: 6.2 },\n                    { x: '2019', y: 15.6 },\n                    { x: '2020', y: 14.3 },\n                    { x: '2021', y: 9.3 },\n                    { x: '2022', y: 7.8 },\n                ],\n                xName: 'x', stackingGroup: 'Asia',\n                yName: 'y', name: 'Indonesia', columnWidth: 0.6\n            },\n            {\n                type: 'StackingColumn',\n                dataSource: [\n                    { x: '2018', y: 24.5 },\n                    { x: '2019', y: 23.2 },\n                    { x: '2020', y: 20.4 },\n                    { x: '2021', y: 23.2 },\n                    { x: '2022', y: 24.5 },\n                ],\n                xName: 'x', stackingGroup: 'Europe',\n                yName: 'y', name: 'Italy', columnWidth: 0.6\n\n            },\n            {\n                type: 'StackingColumn',\n                dataSource: [\n                    { x: '2018', y: 15.4 },\n                    { x: '2019', y: 21.1 },\n                    { x: '2020', y: 13.9 },\n                    { x: '2021', y: 11.6 },\n                    { x: '2022', y: 14.4 },\n                ],\n                xName: 'x', stackingGroup: 'Europe',\n                yName: 'y', name: 'France', columnWidth: 0.6\n\n            }\n        ],\n        wallColor: 'transparent',\n        //Initializing Chart title\n        title: 'Steel Production by Countries, Grouped by Continent',\n        //Initializing User Interaction Tooltip\n        tooltip: {\n            enable: true, format: '${point.x} : <b>${point.y} Mmt'\n        },\n        enableRotation: true,\n        rotation: 7,\n        tilt: 10,\n        depth: 100,\n        height: '400',\n        width: ej.base.Browser.isDevice ? '100%' : '75%',\n        legendSettings: {\n            enableHighlight: true\n        },\n           // custom code start\n        load: function (args) {\n            var selectedTheme = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + \n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        },\n        axisLabelRender: function (args) {\n            if (args.axis.name === 'primaryYAxis') {\n                args.text = args.text + ' Mmt';\n            }\n        }\n           // custom code end\n    });\n    chart3D.appendTo('#sColumn-container');\n"}