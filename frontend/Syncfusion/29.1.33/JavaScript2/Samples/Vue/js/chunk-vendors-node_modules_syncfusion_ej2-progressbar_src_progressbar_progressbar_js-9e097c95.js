"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-progressbar_src_progressbar_progressbar_js-9e097c95"],{

/***/ "./node_modules/@syncfusion/ej2-progressbar/src/progressbar/progressbar.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-progressbar/src/progressbar/progressbar.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProgressBar: () => (/* binding */ ProgressBar)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _utils_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/helper */ \"./node_modules/@syncfusion/ej2-progressbar/src/progressbar/utils/helper.js\");\n/* harmony import */ var _model_progress_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./model/progress-base */ \"./node_modules/@syncfusion/ej2-progressbar/src/progressbar/model/progress-base.js\");\n/* harmony import */ var _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-svg-base */ \"./node_modules/@syncfusion/ej2-svg-base/index.js\");\n/* harmony import */ var _utils_theme__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/theme */ \"./node_modules/@syncfusion/ej2-progressbar/src/progressbar/utils/theme.js\");\n/* harmony import */ var _model_constant__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./model/constant */ \"./node_modules/@syncfusion/ej2-progressbar/src/progressbar/model/constant.js\");\n/* harmony import */ var _model_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./model/index */ \"./node_modules/@syncfusion/ej2-progressbar/src/progressbar/model/index.js\");\n/* harmony import */ var _types_linear_progress__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./types/linear-progress */ \"./node_modules/@syncfusion/ej2-progressbar/src/progressbar/types/linear-progress.js\");\n/* harmony import */ var _types_circular_progress__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./types/circular-progress */ \"./node_modules/@syncfusion/ej2-progressbar/src/progressbar/types/circular-progress.js\");\n/* harmony import */ var _utils_progress_animation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/progress-animation */ \"./node_modules/@syncfusion/ej2-progressbar/src/progressbar/utils/progress-animation.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n *  progress bar control\n */\nvar ProgressBar = /** @class */ (function (_super) {\n    __extends(ProgressBar, _super);\n    function ProgressBar(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.linear = new _types_linear_progress__WEBPACK_IMPORTED_MODULE_7__.Linear(_this);\n        /** @private */\n        _this.circular = new _types_circular_progress__WEBPACK_IMPORTED_MODULE_8__.Circular(_this);\n        /** @private */\n        _this.annotateAnimation = new _utils_progress_animation__WEBPACK_IMPORTED_MODULE_9__.ProgressAnimation();\n        /** @private */\n        // private resizeTo: number;\n        /** @private */\n        _this.destroyIndeterminate = false;\n        /** @private */\n        _this.scaleX = 1;\n        /** @private */\n        _this.scaleY = 1;\n        ProgressBar_1.Inject(_model_index__WEBPACK_IMPORTED_MODULE_6__.ProgressTooltip);\n        return _this;\n    }\n    ProgressBar_1 = ProgressBar;\n    ProgressBar.prototype.getModuleName = function () {\n        return 'progressbar';\n    };\n    ProgressBar.prototype.preRender = function () {\n        this.unWireEvents();\n        this.initPrivateVariable();\n        this.wireEvents();\n    };\n    ProgressBar.prototype.initPrivateVariable = function () {\n        this.progressRect = new _utils_helper__WEBPACK_IMPORTED_MODULE_1__.Rect(0, 0, 0, 0);\n        this.progressSize = new _utils_helper__WEBPACK_IMPORTED_MODULE_1__.Size(0, 0);\n    };\n    ProgressBar.prototype.render = function () {\n        var _this = this;\n        this.trigger('load', { progressBar: this });\n        this.element.style.display = 'block';\n        this.element.style.position = 'relative';\n        this.element.setAttribute('role', 'progressbar');\n        this.element.setAttribute('aria-valuemin', this.minimum.toString());\n        this.element.setAttribute('aria-valuemax', this.maximum.toString());\n        this.element.setAttribute('aria-valuenow', this.value ? this.value.toString() : '0');\n        this.element.setAttribute('tabindex', '0');\n        this.element.setAttribute('aria-label', this.labelStyle.text || 'progress bar');\n        this.calculateProgressBarSize();\n        this.setTheme();\n        this.createSVG();\n        this.argsData = { value: this.value, progressColor: this.progressColor, trackColor: this.trackColor };\n        if (this.argsData.value === this.maximum) {\n            this.trigger(_model_constant__WEBPACK_IMPORTED_MODULE_5__.progressCompleted, this.argsData, function () { _this.controlRendering(); });\n        }\n        else {\n            this.trigger(_model_constant__WEBPACK_IMPORTED_MODULE_5__.valueChanged, this.argsData, function () { _this.controlRendering(); });\n        }\n    };\n    ProgressBar.prototype.controlRendering = function () {\n        this.renderElements();\n        this.trigger('loaded', { progressBar: this });\n        this.renderComplete();\n        this.controlRenderedTimeStamp = new Date().getTime();\n    };\n    /**\n     * calculate size of the progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.calculateProgressBarSize = function () {\n        var containerWidth = this.element.clientWidth || this.element.offsetWidth;\n        var containerHeight = this.element.clientHeight;\n        var width = (this.type === 'Linear') ? 200 : 120;\n        var height = (this.type === 'Linear') ? 30 : 120;\n        var padding = 10;\n        var thickness = Math.max(this.progressThickness, this.trackThickness);\n        height = (this.type === 'Linear' && thickness > (height - padding)) ? thickness + padding : height;\n        this.progressSize.width = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_1__.stringToNumber)(this.width, containerWidth) || containerWidth || width;\n        this.progressSize.height = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_1__.stringToNumber)(this.height, containerHeight) || containerHeight || height;\n        this.progressRect.x = this.margin.left;\n        this.progressRect.y = this.margin.top;\n        this.progressRect.width = this.progressSize.width - (this.margin.left + this.margin.right);\n        this.progressRect.height = this.progressSize.height - (this.margin.top + this.margin.bottom);\n        this.initialClipRect = new _utils_helper__WEBPACK_IMPORTED_MODULE_1__.Rect(this.progressRect.x, this.progressRect.y, this.progressSize.height, this.progressSize.width);\n    };\n    /**\n     * Render Annotation in progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.renderAnnotations = function () {\n        this.renderAnnotation();\n    };\n    /**\n     * Render SVG Element.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.renderElements = function () {\n        this.createSecondaryElement();\n        this.renderTrack();\n        this.renderProgress();\n        this.renderLabel();\n        if (this.annotations.length > 0) {\n            this.renderAnnotations();\n        }\n        this.setSecondaryElementPosition();\n        if (this.tooltip.enable && !(this.tooltip.showTooltipOnHover)) {\n            this.progressTooltipModule.tooltip();\n        }\n    };\n    ProgressBar.prototype.createSecondaryElement = function () {\n        var secElement = document.getElementById(this.element.id + 'Secondary_Element');\n        if (this.tooltip.enable) {\n            this.tooltipElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                id: this.element.id + '_tooltip',\n                className: 'ejSVGTooltip',\n                styles: 'pointer-events: none; position: absolute; zIndex: 1; visibility: visible'\n            });\n            if (secElement) {\n                this.secElement.appendChild(this.tooltipElement);\n            }\n        }\n        var tooltipElement = document.getElementById(this.element.id + '_tooltip');\n        if (secElement) {\n            secElement.innerHTML = '';\n            this.secElement = tooltipElement ? secElement.appendChild(tooltipElement) : secElement;\n            return;\n        }\n        this.secElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            id: this.element.id + 'Secondary_Element',\n            styles: 'position: absolute'\n        });\n        this.element.appendChild(this.secElement);\n        if (this.tooltipElement) {\n            this.secElement.appendChild(this.tooltipElement);\n        }\n    };\n    /**\n     * To set the left and top position for annotation for center aligned.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.setSecondaryElementPosition = function () {\n        var element = this.secElement;\n        var rect = this.element.getBoundingClientRect();\n        if ((0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_3__.getElement)(this.svgObject.id)) {\n            var svgRect = (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_3__.getElement)(this.svgObject.id).getBoundingClientRect();\n            element.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n            element.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n        }\n    };\n    ProgressBar.prototype.createSVG = function () {\n        this.removeSvg();\n        this.renderer = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_3__.SvgRenderer(this.element.id);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + 'SVG',\n            width: this.progressSize.width,\n            height: this.progressSize.height,\n            style: 'background-color:' + this.themeStyle.backgroundColor\n        });\n    };\n    ProgressBar.prototype.clipPathElement = function () {\n        this.clipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippath' });\n        this.bufferClipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippathBuffer' });\n    };\n    ProgressBar.prototype.renderTrack = function () {\n        if (this.type === 'Linear') {\n            this.linear.renderLinearTrack();\n        }\n        else if (this.type === 'Circular') {\n            this.circular.renderCircularTrack();\n        }\n    };\n    ProgressBar.prototype.renderProgress = function () {\n        this.clipPathElement();\n        if (this.type === 'Linear') {\n            this.linear.renderLinearProgress();\n        }\n        else if (this.type === 'Circular') {\n            this.circular.renderCircularProgress();\n        }\n    };\n    ProgressBar.prototype.renderLabel = function () {\n        if (this.type === 'Linear' && this.showProgressValue && !this.isIndeterminate) {\n            this.linear.renderLinearLabel();\n        }\n        else if (this.type === 'Circular' && this.showProgressValue && !this.isIndeterminate) {\n            this.circular.renderCircularLabel();\n        }\n        this.element.appendChild(this.svgObject);\n    };\n    ProgressBar.prototype.getPathLine = function (x, width, thickness) {\n        var moveTo = (this.enableRtl) ? ((this.cornerRadius === 'Round') ?\n            (x + this.progressRect.width) - ((_model_constant__WEBPACK_IMPORTED_MODULE_5__.lineCapRadius / 2) * thickness) : (x + this.progressRect.width)) :\n            ((this.cornerRadius === 'Round') ? (x + (_model_constant__WEBPACK_IMPORTED_MODULE_5__.lineCapRadius / 2) * thickness) : x);\n        //TODO : BLAZ-14309 - ProgressBar renders improperly when corner radius is set to \"Round\" and the value between one to four.\n        thickness = width < thickness && this.cornerRadius === 'Round' ? width : thickness;\n        var lineTo = (this.enableRtl) ? ((this.cornerRadius === 'Round' && width) ?\n            (moveTo - width + (_model_constant__WEBPACK_IMPORTED_MODULE_5__.lineCapRadius * thickness)) : (moveTo - width)) :\n            ((this.cornerRadius === 'Round' && width) ? (moveTo + width - (_model_constant__WEBPACK_IMPORTED_MODULE_5__.lineCapRadius * thickness)) : (moveTo + width));\n        return 'M' + moveTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2)) +\n            'L' + lineTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2));\n    };\n    ProgressBar.prototype.calculateProgressRange = function (value, minimum, maximum) {\n        var min = minimum || this.minimum;\n        var max = maximum || this.maximum;\n        var endValue = (value - min) / (max - min) * ((this.type === 'Linear') ? 1 : this.totalAngle);\n        var result = (value < min || value > max) ? 0 : endValue;\n        return result;\n    };\n    ProgressBar.prototype.calculateSegmentSize = function (width, thickness) {\n        var count = (this.type === 'Circular' && this.totalAngle === _model_constant__WEBPACK_IMPORTED_MODULE_5__.completeAngle) ? this.segmentCount : this.segmentCount - 1;\n        var cornerCount = (this.totalAngle === _model_constant__WEBPACK_IMPORTED_MODULE_5__.completeAngle || this.type === 'Linear') ? this.segmentCount : this.segmentCount - 1;\n        var gap = this.gapWidth || ((this.type === 'Linear') ? this.themeStyle.linearGapWidth : this.themeStyle.circularGapWidth);\n        var size = (width - count * gap);\n        size = (size - ((this.cornerRadius === 'Round') ? (cornerCount * (_model_constant__WEBPACK_IMPORTED_MODULE_5__.lineCapRadius * thickness)) : 0)) / this.segmentCount;\n        gap += (this.cornerRadius === 'Round') ? _model_constant__WEBPACK_IMPORTED_MODULE_5__.lineCapRadius * thickness : 0;\n        return ' ' + size + ' ' + gap;\n    };\n    ProgressBar.prototype.createClipPath = function (clipPath, range, d, refresh, thickness, isLabel, isMaximum) {\n        var path;\n        var rect;\n        var option;\n        var posx;\n        var posy;\n        var pathWidth;\n        var x = this.progressRect.x;\n        var totalWidth = this.progressRect.width;\n        if (this.type === 'Linear') {\n            if (this.cornerRadius === 'Round4px') {\n                posx = x;\n                pathWidth = totalWidth * range;\n                posx += (!isLabel) ? (-4) : 0;\n                posy = this.progressRect.y;\n                pathWidth += ((!isLabel && isMaximum) || this.isIndeterminate) ? 4 : 0;\n            }\n            else {\n                //TODO : BLAZ-14309 - ProgressBar renders improperly when corner radius is set to \"Round\" and the value between one to four.\n                posx = (this.enableRtl && !isLabel) ? (x + totalWidth + (this.cornerRadius === 'Round' ? thickness / 10 : 0)) : x - (this.cornerRadius === 'Round' ? thickness / 10 : 0);\n                pathWidth = totalWidth * range;\n                //TODO : BLAZ-14309 - ProgressBar renders improperly when corner radius is set to \"Round\" and the value between one to four.\n                //posx += (this.cornerRadius === 'Round' && !isLabel) ?\n                //    ((this.enableRtl) ? (lineCapRadius / 2) * thickness : -(lineCapRadius / 2) * thickness) : 0;\n                posy = (this.progressRect.y + (this.progressRect.height / 2)) - (thickness / 2);\n                pathWidth += (this.cornerRadius === 'Round' && !isLabel) ? (_model_constant__WEBPACK_IMPORTED_MODULE_5__.lineCapRadius * thickness) : 0;\n            }\n            if (!refresh) {\n                rect = new _utils_helper__WEBPACK_IMPORTED_MODULE_1__.RectOption(this.element.id + '_clippathrect' + (isLabel ? 'label' : ''), 'transparent', 1, 'transparent', 1, new _utils_helper__WEBPACK_IMPORTED_MODULE_1__.Rect(posx, posy, thickness, pathWidth));\n                path = this.renderer.drawRectangle(rect);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_3__.getElement)(this.element.id + '_clippathrect' + (isLabel ? 'label' : ''));\n                path.setAttribute('width', (pathWidth).toString());\n                if (this.isActive) {\n                    path.setAttribute('x', (posx).toString());\n                }\n            }\n        }\n        else {\n            if (!refresh) {\n                option = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_3__.PathOption(this.element.id + '_clippathcircle', 'transparent', 10, 'transparent', 1, '0', d);\n                path = this.renderer.drawPath(option);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_3__.getElement)(this.element.id + '_clippathcircle');\n                path.setAttribute('d', d);\n            }\n        }\n        return path;\n    };\n    /**\n     * Theming for progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.setTheme = function () {\n        this.themeStyle = (0,_utils_theme__WEBPACK_IMPORTED_MODULE_4__.getProgressThemeColor)(this.theme);\n        switch (this.theme) {\n            case 'Bootstrap':\n            case 'Bootstrap4':\n                this.cornerRadius = this.cornerRadius === 'Auto' ?\n                    ((this.type === 'Linear') ? 'Round4px' : 'Round') : this.cornerRadius;\n                break;\n            case 'Fluent2':\n            case 'Fluent2Dark':\n            case 'Fluent2HighContrast':\n            case 'Bootstrap5':\n            case 'Bootstrap5Dark':\n                this.cornerRadius = this.cornerRadius === 'Auto' && this.type === 'Linear' ? 'Round' : this.cornerRadius;\n                break;\n            default:\n                this.cornerRadius = this.cornerRadius === 'Auto' ? 'Square' : this.cornerRadius;\n        }\n    };\n    /**\n     * Annotation for progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.renderAnnotation = function () {\n        if (this.progressAnnotationModule && this.annotations.length > 0) {\n            this.progressAnnotationModule.renderAnnotations(this.secElement);\n        }\n    };\n    /**\n     * Handles the progressbar resize.\n     *\n     * @returns {boolean} false\n     * @private\n     */\n    ProgressBar.prototype.progressResize = function () {\n        var _this = this;\n        // 800 used as buffer time for resize event preventing from control rendered time\n        if (!(new Date().getTime() > this.controlRenderedTimeStamp + 800)) {\n            return false;\n        }\n        var arg = {\n            bar: this,\n            name: 'resized',\n            currentSize: new _utils_helper__WEBPACK_IMPORTED_MODULE_1__.Size(0, 0),\n            previousSize: new _utils_helper__WEBPACK_IMPORTED_MODULE_1__.Size(this.progressSize.width, this.progressSize.height),\n            cancel: (this.cancelResize) ? true : false\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTo);\n                return;\n            }\n            arg.currentSize = _this.progressSize;\n            _this.trigger('resized', arg);\n            if ((_this.width === null || _this.height === null || _this.width.indexOf('%') > -1 || _this.height.indexOf('%') > -1)\n                && !arg.cancel) {\n                if (_this.secElement) {\n                    _this.secElement.innerHTML = '';\n                }\n                _this.calculateProgressBarSize();\n                _this.createSVG();\n                _this.renderElements();\n            }\n        }, 500);\n        return false;\n    };\n    ProgressBar.prototype.progressMouseClick = function (e) {\n        this.mouseEvent(_model_constant__WEBPACK_IMPORTED_MODULE_5__.mouseClick, e);\n    };\n    ProgressBar.prototype.progressMouseDown = function (e) {\n        this.mouseEvent(_model_constant__WEBPACK_IMPORTED_MODULE_5__.mouseDown, e);\n    };\n    ProgressBar.prototype.progressMouseMove = function (e) {\n        this.mouseEvent(_model_constant__WEBPACK_IMPORTED_MODULE_5__.mouseMove, e);\n        var target = e.target;\n        if (this.tooltip.enable && this.tooltip.showTooltipOnHover) {\n            if (target.id.indexOf('Circularprogress') >= 0 || target.id.indexOf('Circularbuffer') >= 0 || target.id.indexOf('Linearprogress') >= 0 || target.id.indexOf('Linearbuffer') >= 0 || target.id.indexOf('Linearbuffer') >= 0) {\n                this.progressTooltipModule.tooltip(e);\n            }\n            else if (this.progressTooltipModule.isRendered) {\n                this.progressTooltipModule.removeTooltip(1000);\n                this.progressTooltipModule.isRendered = false;\n            }\n        }\n    };\n    ProgressBar.prototype.progressMouseUp = function (e) {\n        this.mouseEvent(_model_constant__WEBPACK_IMPORTED_MODULE_5__.mouseUp, e);\n    };\n    ProgressBar.prototype.progressMouseLeave = function (e) {\n        this.mouseEvent(_model_constant__WEBPACK_IMPORTED_MODULE_5__.mouseLeave, e);\n    };\n    ProgressBar.prototype.mouseEvent = function (eventName, e) {\n        var element = e.target;\n        this.trigger(eventName, { target: element.id });\n    };\n    /**\n     * Method to un-bind events for progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.unWireEvents = function () {\n        var startEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent;\n        var moveEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent;\n        var stopEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent;\n        /*! Find the Events type */\n        var cancelEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! UnBind the Event handler */\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'click', this.progressMouseClick);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, startEvent, this.progressMouseDown);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, moveEvent, this.progressMouseMove);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, stopEvent, this.progressMouseUp);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, cancelEvent, this.progressMouseLeave);\n        window.removeEventListener((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    /**\n     * Method to bind events for bullet chart.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.wireEvents = function () {\n        var startEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent;\n        var moveEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent;\n        var stopEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent;\n        /*! Find the Events type */\n        var cancelEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! Bind the Event handler */\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'click', this.progressMouseClick, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, startEvent, this.progressMouseDown, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, moveEvent, this.progressMouseMove, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, stopEvent, this.progressMouseUp, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, cancelEvent, this.progressMouseLeave, this);\n        this.resizeBounds = this.progressResize.bind(this);\n        window.addEventListener((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    ProgressBar.prototype.removeSvg = function () {\n        var svgElement = document.getElementById(this.element.id + 'SVG');\n        if (svgElement) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(svgElement);\n        }\n    };\n    ProgressBar.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'annotations':\n                    this.secElement.innerHTML = '';\n                    this.renderAnnotation();\n                    break;\n                case 'value':\n                    this.cancelResize = (this.animation.enable) ? true : false;\n                    this.argsData = {\n                        value: this.value,\n                        progressColor: this.argsData.progressColor,\n                        trackColor: this.argsData.trackColor\n                    };\n                    if (this.argsData.value < oldProp.value && this.animation.enable) {\n                        this.argsData.value = oldProp.value;\n                    }\n                    if (this.argsData.value === this.maximum) {\n                        this.trigger(_model_constant__WEBPACK_IMPORTED_MODULE_5__.progressCompleted, this.argsData);\n                    }\n                    else {\n                        this.trigger(_model_constant__WEBPACK_IMPORTED_MODULE_5__.valueChanged, this.argsData);\n                    }\n                    if (this.type === 'Circular') {\n                        this.circular.renderCircularProgress(this.previousEndAngle, this.previousTotalEnd, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(oldProp.value));\n                        if (this.showProgressValue) {\n                            this.circular.renderCircularLabel(true);\n                        }\n                        if (this.progressAnnotationModule && this.animation.enable && !this.isIndeterminate) {\n                            this.annotateAnimation.doAnnotationAnimation(this.clipPath, this, this.annotateEnd, this.annotateTotal);\n                        }\n                    }\n                    else {\n                        this.linear.renderLinearProgress(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(oldProp.value), this.previousWidth);\n                        if (this.showProgressValue) {\n                            this.linear.renderLinearLabel(true);\n                        }\n                    }\n                    if (this.progressTooltipModule) {\n                        this.progressTooltipModule.tooltip();\n                    }\n                    this.element.setAttribute('aria-valuenow', this.argsData.value ? this.argsData.value.toString() : '0');\n                    break;\n                case 'animation':\n                    this.createSVG();\n                    this.renderElements();\n                    break;\n            }\n        }\n    };\n    ProgressBar.prototype.requiredModules = function () {\n        var modules = [];\n        var enableAnnotation = false;\n        enableAnnotation = this.annotations.some(function (value) {\n            return (value.content !== null);\n        });\n        if (enableAnnotation) {\n            modules.push({\n                member: 'ProgressAnnotation',\n                args: [this]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'ProgressTooltip',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    ProgressBar.prototype.getPersistData = function () {\n        return ' ';\n    };\n    ProgressBar.prototype.show = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.svgObject)) {\n            this.svgObject.setAttribute('visibility', 'Visible');\n            if (this.isIndeterminate) {\n                this.destroyIndeterminate = false;\n                if (this.type === 'Linear') {\n                    this.linear.renderLinearProgress(true);\n                }\n                else {\n                    this.circular.renderCircularProgress(null, null, true);\n                }\n            }\n        }\n    };\n    ProgressBar.prototype.hide = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.svgObject)) {\n            this.svgObject.setAttribute('visibility', 'Hidden');\n            if (this.isIndeterminate) {\n                this.destroyIndeterminate = true;\n            }\n        }\n    };\n    /**\n     * To destroy the widget.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        this.removeSvg();\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n        this.svgObject = null;\n        this.element.classList.remove('e-progressbar');\n        if (!this.refreshing) {\n            this.destroyIndeterminate = true;\n        }\n    };\n    var ProgressBar_1;\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Linear')\n    ], ProgressBar.prototype, \"type\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ProgressBar.prototype, \"value\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ProgressBar.prototype, \"secondaryProgress\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], ProgressBar.prototype, \"secondaryProgressColor\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ProgressBar.prototype, \"secondaryProgressThickness\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], ProgressBar.prototype, \"minimum\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(100)\n    ], ProgressBar.prototype, \"maximum\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], ProgressBar.prototype, \"startAngle\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], ProgressBar.prototype, \"endAngle\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('100%')\n    ], ProgressBar.prototype, \"radius\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('100%')\n    ], ProgressBar.prototype, \"innerRadius\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1)\n    ], ProgressBar.prototype, \"segmentCount\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ProgressBar.prototype, \"gapWidth\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], ProgressBar.prototype, \"segmentColor\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Auto')\n    ], ProgressBar.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ProgressBar.prototype, \"height\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ProgressBar.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], ProgressBar.prototype, \"isIndeterminate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], ProgressBar.prototype, \"isActive\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], ProgressBar.prototype, \"isGradient\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], ProgressBar.prototype, \"isStriped\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Auto')\n    ], ProgressBar.prototype, \"role\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], ProgressBar.prototype, \"enableRtl\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], ProgressBar.prototype, \"labelOnTrack\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ProgressBar.prototype, \"trackColor\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ProgressBar.prototype, \"progressColor\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], ProgressBar.prototype, \"trackThickness\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], ProgressBar.prototype, \"progressThickness\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], ProgressBar.prototype, \"enablePieProgress\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Fabric')\n    ], ProgressBar.prototype, \"theme\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], ProgressBar.prototype, \"showProgressValue\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], ProgressBar.prototype, \"enableProgressSegments\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ size: null, color: null, fontStyle: null, fontWeight: null, fontFamily: null }, _model_progress_base__WEBPACK_IMPORTED_MODULE_2__.Font)\n    ], ProgressBar.prototype, \"labelStyle\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_progress_base__WEBPACK_IMPORTED_MODULE_2__.Margin)\n    ], ProgressBar.prototype, \"margin\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_progress_base__WEBPACK_IMPORTED_MODULE_2__.Animation)\n    ], ProgressBar.prototype, \"animation\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_progress_base__WEBPACK_IMPORTED_MODULE_2__.TooltipSettings)\n    ], ProgressBar.prototype, \"tooltip\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], ProgressBar.prototype, \"load\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], ProgressBar.prototype, \"textRender\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], ProgressBar.prototype, \"loaded\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], ProgressBar.prototype, \"valueChanged\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], ProgressBar.prototype, \"progressCompleted\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], ProgressBar.prototype, \"animationComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], ProgressBar.prototype, \"mouseClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], ProgressBar.prototype, \"mouseMove\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], ProgressBar.prototype, \"mouseUp\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], ProgressBar.prototype, \"mouseDown\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], ProgressBar.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], ProgressBar.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([{}], _model_index__WEBPACK_IMPORTED_MODULE_6__.ProgressAnnotationSettings)\n    ], ProgressBar.prototype, \"annotations\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([{}], _model_progress_base__WEBPACK_IMPORTED_MODULE_2__.RangeColor)\n    ], ProgressBar.prototype, \"rangeColors\", void 0);\n    ProgressBar = ProgressBar_1 = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], ProgressBar);\n    return ProgressBar;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-progressbar/src/progressbar/progressbar.js?");

/***/ })

}]);