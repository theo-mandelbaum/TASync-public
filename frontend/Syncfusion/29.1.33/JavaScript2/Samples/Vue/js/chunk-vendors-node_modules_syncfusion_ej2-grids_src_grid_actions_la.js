"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-grids_src_grid_actions_la"],{

/***/ "./node_modules/@syncfusion/ej2-grids/src/grid/actions/lazy-load-group.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-grids/src/grid/actions/lazy-load-group.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LazyLoadGroup: () => (/* binding */ LazyLoadGroup)\n/* harmony export */ });\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base/constant */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _renderer_group_lazy_load_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../renderer/group-lazy-load-renderer */ \"./node_modules/@syncfusion/ej2-grids/src/grid/renderer/group-lazy-load-renderer.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/enum */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n\n\n\n/**\n * Group lazy load class\n */\nvar LazyLoadGroup = /** @class */ (function () {\n    /**\n     * Constructor for Grid group lazy load module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} serviceLocator - specifies the ServiceLocator\n     * @hidden\n     */\n    function LazyLoadGroup(parent, serviceLocator) {\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    LazyLoadGroup.prototype.getModuleName = function () {\n        return 'lazyLoadGroup';\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    LazyLoadGroup.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_0__.initialLoad, this.instantiateRenderer, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_0__.destroy, this.destroy, this);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    LazyLoadGroup.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_0__.initialLoad, this.instantiateRenderer);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_0__.destroy, this.destroy);\n    };\n    LazyLoadGroup.prototype.instantiateRenderer = function () {\n        if (this.parent.height === 'auto') {\n            this.parent.height = this.parent.pageSettings.pageSize * this.parent.getRowHeight();\n        }\n        var renderer = this.serviceLocator.getService('rendererFactory');\n        if (this.parent.groupSettings.enableLazyLoading) {\n            renderer.addRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.RenderType.Content, new _renderer_group_lazy_load_renderer__WEBPACK_IMPORTED_MODULE_1__.GroupLazyLoadRenderer(this.parent, this.serviceLocator));\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.lazyLoadRender = new _renderer_group_lazy_load_renderer__WEBPACK_IMPORTED_MODULE_1__.GroupLazyLoadRenderer(this.parent, this.serviceLocator);\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    LazyLoadGroup.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return LazyLoadGroup;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-grids/src/grid/actions/lazy-load-group.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-grids/src/grid/actions/logger.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-grids/src/grid/actions/logger.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: () => (/* binding */ Logger),\n/* harmony export */   detailLists: () => (/* binding */ detailLists)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"./node_modules/@syncfusion/ej2-data/index.js\");\n/**\n *\n * `Logger` class\n */\n\n\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation/grid';\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/';\nvar WARNING = '[EJ2Grid.Warning]';\nvar ERROR = '[EJ2Grid.Error]';\nvar INFO = '[EJ2Grid.Info]';\nvar Logger = /** @class */ (function () {\n    function Logger(parent) {\n        this.parent = parent;\n        this.parent.on('initial-end', this.patchadaptor, this);\n    }\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                // eslint-disable-next-line no-console\n                console[item.logType](item.generateMessage(args, this.parent, cOp.options));\n            }\n        }\n    };\n    Logger.prototype.patchadaptor = function () {\n        var adaptor = this.parent.getDataModule().dataManager.adaptor;\n        var original = adaptor.beforeSend;\n        if (original) {\n            adaptor.beforeSend = function (dm, request, settings) {\n                original.call(adaptor, dm, request, settings);\n            };\n        }\n    };\n    Logger.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-end', this.patchadaptor);\n    };\n    return Logger;\n}());\n\nvar detailLists = {\n    // eslint-disable-next-line camelcase\n    module_missing: {\n        type: 'module_missing',\n        logType: 'warn',\n        check: function (args, parent) {\n            var injected = parent.getInjectedModules().map(function (m) { return m.prototype.getModuleName(); });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var modules = parent.requiredModules().map(function (m) { return m.member; })\n                .filter(function (name) { return injected.indexOf(name) === -1; });\n            return { success: modules.filter(function (m) { return m !== 'resize'; }).length > 0, options: modules };\n        },\n        generateMessage: function (args, parent, modules) {\n            modules = modules.filter(function (m) { return m !== 'resize'; })\n                .reduce(function (prev, cur) { return prev + (\"* \" + cur + \"\\n\"); }, '');\n            return WARNING + ': MODULES MISSING\\n' + 'The following modules are not injected:.\\n' +\n                (\"\" + modules) +\n                (\"Refer to \" + BASE_DOC_URL + \"/module.html for documentation on importing feature modules.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    promise_enabled: {\n        type: 'promise_enabled',\n        logType: 'error',\n        check: function () {\n            return { success: typeof Promise === 'undefined' };\n        },\n        generateMessage: function () {\n            return ERROR + ': PROMISE UNDEFINED\\n' +\n                'Promise object is not present in the global environment,' +\n                'please use polyfil to support Promise object in your environment.\\n' +\n                (\"Refer to \" + DOC_URL + \"/base/browser.html?#required-polyfills for more information.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    primary_column_missing: {\n        type: 'primary_column_missing',\n        logType: 'warn',\n        check: function (args, parent) {\n            return { success: parent.enableColumnVirtualization\n                    ? parent.getPrimaryKeyFieldNames().length === 0\n                    : parent.getColumns().filter(function (column) { return column.isPrimaryKey; }).length === 0 };\n        },\n        generateMessage: function () {\n            return WARNING + ': PRIMARY KEY MISSING\\n' + 'Editing is enabled but primary key column is not specified.\\n' +\n                (\"Refer to \" + BASE_DOC_URL + \"/api-column.html?#isprimarykey for documentation on providing primary key columns.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    selection_key_missing: {\n        type: 'selection_key_missing',\n        logType: 'warn',\n        check: function (args, parent) {\n            return { success: parent.selectionSettings.persistSelection &&\n                    parent.getColumns().filter(function (column) { return column.isPrimaryKey; }).length === 0 };\n        },\n        generateMessage: function () {\n            return WARNING + ': PRIMARY KEY MISSING\\n' +\n                'selectionSettings.persistSelection property is enabled. It requires one primary key column to persist selection.\\n' +\n                (\"Refer to \" + BASE_DOC_URL + \"/api-column.html?#isprimarykey for documentation on providing primary key columns.\");\n        }\n    },\n    actionfailure: {\n        type: 'actionfailure',\n        logType: 'error',\n        check: function () {\n            return { success: true };\n        },\n        generateMessage: function (args, parent) {\n            var message = '';\n            var formatError = formatErrorHandler(args, parent);\n            var ajaxError = ajaxErrorHandler(args, parent);\n            if (ajaxError !== '') {\n                message = ajaxError;\n            }\n            else if (formatError !== '') {\n                message = formatError;\n            }\n            else {\n                message = args.error;\n            }\n            return WARNING + ': ' + message;\n        }\n    },\n    // eslint-disable-next-line camelcase\n    locale_missing: {\n        type: 'locale_missing',\n        logType: 'warn',\n        check: function (args, parent) {\n            var lObj = _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.DataUtil.getObject(\"locale.\" + parent.locale + \".grid\", _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n);\n            return { success: parent.locale !== 'en-US' && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lObj) };\n        },\n        generateMessage: function (args, parent) {\n            return WARNING + ': LOCALE CONFIG MISSING\\n' + (\"Locale configuration for '\" + parent.locale + \"' is not provided.\\n\") +\n                (\"Refer to \" + BASE_DOC_URL + \"/globalization-and-localization.html?#localization \\n             for documentation on setting locale configuration.\");\n        }\n    },\n    limitation: {\n        type: 'limitation',\n        logType: 'warn',\n        check: function (args, parent) {\n            var name = args;\n            var opt;\n            switch (name) {\n                case 'freeze':\n                    opt = {\n                        success: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(parent.detailTemplate) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(parent.childGrid),\n                        options: { name: 'freeze' }\n                    };\n                    break;\n                case 'virtualization':\n                    opt = {\n                        success: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(parent.detailTemplate) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(parent.childGrid),\n                        options: { name: 'virtualization' }\n                    };\n                    break;\n                default:\n                    opt = { success: false };\n                    break;\n            }\n            return opt;\n        },\n        generateMessage: function (args, parent, options) {\n            var name = options.name;\n            var opt;\n            switch (name) {\n                case 'freeze':\n                    opt = 'Frozen rows and columns do not support the following features:\\n' +\n                        '* Details Template\\n' +\n                        '* Hierarchy Grid\\n';\n                    break;\n                case 'virtualization':\n                    opt = 'Virtualization does not support the following features.\\n' +\n                        '* Details Template.\\n' +\n                        '* Hierarchy Grid.\\n';\n                    break;\n                default:\n                    opt = '';\n                    break;\n            }\n            return WARNING + (\": \" + name.toUpperCase() + \" LIMITATIONS\\n\") + opt;\n        }\n    },\n    // eslint-disable-next-line camelcase\n    check_datasource_columns: {\n        type: 'check_datasource_columns',\n        logType: 'warn',\n        check: function (args, parent) {\n            return { success: !(parent.columns.length ||\n                    (parent.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.DataManager) ||\n                    (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.dataSource) && parent.dataSource.length)) };\n        },\n        generateMessage: function () {\n            return WARNING + ': GRID CONFIG MISSING\\n' + 'dataSource and columns are not provided in the grid. ' +\n                'At least one of either must be provided for grid configuration.\\n' +\n                (\"Refer to \" + BASE_DOC_URL + \"/columns.html for documentation on configuring the grid data and columns.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    virtual_height: {\n        type: 'virtual_height',\n        logType: 'error',\n        check: function (args, parent) {\n            return { success: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.height) || parent.height === 'auto' };\n        },\n        generateMessage: function () {\n            return ERROR + ': GRID HEIGHT MISSING \\n' + 'height property is required to use virtualization.\\n' +\n                (\"Refer to \" + BASE_DOC_URL + \"/virtual.html for documentation on configuring the virtual grid.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    grid_remote_edit: {\n        type: 'grid_remote_edit',\n        logType: 'error',\n        check: function (args) {\n            return { success: Array.isArray(args) || Array.isArray(args.result) };\n        },\n        generateMessage: function () {\n            return ERROR + ': RETRUN VALUE MISSING  \\n' +\n                'Remote service returns invalid data. \\n' +\n                (\"Refer to \" + BASE_DOC_URL + \"/edit.html for documentation on configuring editing with remote data.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    grid_sort_comparer: {\n        type: 'grid_sort_comparer',\n        logType: 'warn',\n        check: function (args, parent) {\n            return { success: parent.getDataModule().isRemote() };\n        },\n        generateMessage: function () {\n            return WARNING + ': SORT COMPARER NOT WORKING  \\n' + 'Sort comparer will not work with remote data.' +\n                (\"Refer to \" + BASE_DOC_URL + \"/sorting/#custom-sort-comparer for documentation on using the sort comparer.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    resize_min_max: {\n        type: 'resize_min_max',\n        logType: 'info',\n        check: function (args) {\n            return { success: (args.column.minWidth && args.column.minWidth >= args.width) ||\n                    (args.column.maxWidth && args.column.maxWidth <= args.width) };\n        },\n        generateMessage: function () {\n            return INFO + ': RESIZING COLUMN REACHED MIN OR MAX  \\n' + 'The column resizing width is at its min or max.';\n        }\n    },\n    // eslint-disable-next-line camelcase\n    action_disabled_column: {\n        type: 'action_disabled_column',\n        logType: 'info',\n        check: function (args) {\n            var success = true;\n            var fn;\n            switch (args.moduleName) {\n                case 'reorder':\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.destColumn)) {\n                        fn = \"reordering action is disabled for the \" + args.column.headerText + \" column\";\n                    }\n                    else {\n                        fn = \"reordering action is disabled for the \" + (args.column.allowReordering ?\n                            args.destColumn.headerText : args.column.headerText) + \" column\";\n                    }\n                    break;\n                case 'group':\n                    fn = \"grouping action is disabled for the \" + args.columnName + \" column.\";\n                    break;\n                case 'filter':\n                    fn = \"filtering action is disabled for the \" + args.columnName + \" column.\";\n                    break;\n                case 'sort':\n                    fn = \"sorting action is disabled for the \" + args.columnName + \" column.\";\n                    break;\n            }\n            return { success: success, options: { fn: fn } };\n        },\n        generateMessage: function (args, parent, options) {\n            return INFO + (\": ACTION DISABLED \\n \" + options.fn);\n        }\n    },\n    // eslint-disable-next-line camelcase\n    exporting_begin: {\n        type: 'exporting_begin',\n        logType: 'info',\n        check: function (args) {\n            return { success: true, options: { args: args } };\n        },\n        generateMessage: function (args, parent, options) {\n            return INFO + (\": EXPORTING INPROGRESS \\n Grid \" + options.args + \"ing is in progress\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    exporting_complete: {\n        type: 'exporting_complete',\n        logType: 'info',\n        check: function (args) {\n            return { success: true, options: { args: args } };\n        },\n        generateMessage: function (args, parent, options) {\n            return INFO + (\": EXPORTING COMPLETED \\n Grid \" + options.args + \"ing is complete\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    foreign_key_failure: {\n        type: 'foreign_key_failure',\n        logType: 'error',\n        check: function () {\n            return { success: true };\n        },\n        generateMessage: function () {\n            return ERROR + ': FOREIGNKEY CONFIG \\n  Grid foreign key column needs a valid data source/service.' +\n                (\"Refer to \" + BASE_DOC_URL + \"/columns/#foreign-key-column for documentation on configuring foreign key columns.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    initial_action: {\n        type: 'initial_action',\n        logType: 'error',\n        check: function (args) {\n            var success = true;\n            var fn;\n            switch (args.moduleName) {\n                case 'group':\n                    fn = \"The \" + args.columnName + \" column is not available in the grid's column model.\" +\n                        'Please provide a valid field name to group the column';\n                    break;\n                case 'filter':\n                    fn = \"The \" + args.columnName + \" column is not available in the grid's column model.\" +\n                        'Please provide a valid field name to filter the column.';\n                    break;\n                case 'sort':\n                    fn = \"The \" + args.columnName + \" column is not available in the grid's column model.\" +\n                        'Please provide a valid field name to sort the column.';\n                    break;\n            }\n            return { success: success, options: { fn: fn } };\n        },\n        generateMessage: function (args, parent, options) {\n            return ERROR + (\": INITIAL ACTION FAILURE \\n \" + options.fn);\n        }\n    },\n    // eslint-disable-next-line camelcase\n    frozen_rows_columns: {\n        type: 'frozen_rows_columns',\n        logType: 'error',\n        check: function (args, parent) {\n            return { success: parent.getColumns().length <= parent.frozenColumns\n                    || (parent.currentViewData.length && parent.frozenRows >= parent.currentViewData.length) };\n        },\n        generateMessage: function (args, parent) {\n            return ERROR + (\": OUT OF RANGE ERROR-\\n \" + (parent.getColumns().length <= parent.frozenColumns ? 'FROZEN COLUMNS,' : '')) +\n                ((parent.frozenRows >= parent.currentViewData.length ? 'FROZEN ROWS' : '') + \" invalid\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    column_type_missing: {\n        type: 'column_type_missing',\n        logType: 'error',\n        check: function (args) {\n            return { success: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.column.type), options: args.column.headerText };\n        },\n        generateMessage: function (args, parent, options) {\n            return ERROR + (\": COLUMN TYPE MISSING-\\n  \" + options + \" column type was invalid or not defined.\") +\n                (\"Please go through below help link: \" + DOC_URL + \"/grid/columns/#column-type\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    datasource_syntax_mismatch: {\n        type: 'datasource_syntax_mismatch',\n        logType: 'warn',\n        check: function (args) {\n            return { success: args.dataState.dataSource && !(args.dataState.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.DataManager ||\n                    'result' in args.dataState.dataSource || args.dataState.dataSource instanceof Array) &&\n                    !((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.dataState.dataStateChange)) };\n        },\n        generateMessage: function () {\n            return WARNING + ': DATASOURCE SYNTAX WARNING\\n' +\n                'DataSource should be in the form of {result: Object[], count: number}' +\n                'when dataStateChangeEvent used';\n        }\n    }\n};\nvar formatErrorHandler = function (args) {\n    var error = args.error;\n    if (error.indexOf && error.indexOf('Format options') !== 0) {\n        return '';\n    }\n    return 'INVALID FORMAT\\n' +\n        'For more information, refer to the following documentation links:\\n' +\n        (\"Number format: \" + DOC_URL + \"/common/internationalization#supported-format-string\\n\") +\n        (\"Date format: \" + DOC_URL + \"/common/internationalization#manipulating-datetime\\n\") +\n        (\"Message: \" + error);\n};\nvar ajaxErrorHandler = function (args) {\n    var error = _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.DataUtil.getObject('error.error', args);\n    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(error)) {\n        return '';\n    }\n    var jsonResult = '';\n    try {\n        jsonResult = JSON.parse(error.responseText);\n    }\n    catch (_a) {\n        jsonResult = '';\n    }\n    return 'XMLHTTPREQUEST FAILED\\n' +\n        (\"Url: \" + error.responseURL + \"\\n\") +\n        (\"Status: \" + error.status + \" - \" + error.statusText + \"\\n\") +\n        (\"\" + (jsonResult !== '' ? 'Message: ' + jsonResult : ''));\n};\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-grids/src/grid/actions/logger.js?");

/***/ })

}]);