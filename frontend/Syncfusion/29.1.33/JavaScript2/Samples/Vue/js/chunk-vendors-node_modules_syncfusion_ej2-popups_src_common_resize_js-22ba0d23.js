"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-popups_src_common_resize_js-22ba0d23"],{

/***/ "./node_modules/@syncfusion/ej2-popups/src/common/resize.js":
/*!******************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-popups/src/common/resize.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createResize: () => (/* binding */ createResize),\n/* harmony export */   removeResize: () => (/* binding */ removeResize),\n/* harmony export */   resizeDestroy: () => (/* binding */ resizeDestroy),\n/* harmony export */   setMaxHeight: () => (/* binding */ setMaxHeight),\n/* harmony export */   setMaxWidth: () => (/* binding */ setMaxWidth),\n/* harmony export */   setMinHeight: () => (/* binding */ setMinHeight)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/**\n * Resize library\n */\n\nvar elementClass = ['north-west', 'north', 'north-east', 'west', 'east', 'south-west', 'south', 'south-east'];\nvar RESIZE_HANDLER = 'e-resize-handle';\nvar FOCUSED_HANDLER = 'e-focused-handle';\nvar DIALOG_RESIZABLE = 'e-dlg-resizable';\nvar RESTRICT_LEFT = ['e-restrict-left'];\nvar RESIZE_WITHIN_VIEWPORT = 'e-resize-viewport';\nvar dialogBorderResize = ['north', 'west', 'east', 'south'];\nvar targetElement;\nvar selectedHandler;\nvar originalWidth = 0;\nvar originalHeight = 0;\nvar originalX = 0;\nvar originalY = 0;\nvar originalMouseX = 0;\nvar originalMouseY = 0;\nvar minHeight;\nvar maxHeight;\nvar minWidth;\nvar maxWidth;\nvar containerElement;\nvar resizeStart = null;\nvar resize = null;\nvar resizeEnd = null;\nvar resizeWestWidth;\nvar setLeft = true;\nvar previousWidth = 0;\nvar setWidth = true;\n// eslint-disable-next-line\nvar proxy;\n/**\n *\n * @param {ResizeArgs} args - specifies the resize args\n * @returns {void}\n */\nfunction createResize(args) {\n    resizeStart = args.resizeBegin;\n    resize = args.resizing;\n    resizeEnd = args.resizeComplete;\n    targetElement = getDOMElement(args.element);\n    containerElement = getDOMElement(args.boundary);\n    var directions = args.direction.split(' ');\n    for (var i = 0; i < directions.length; i++) {\n        if (dialogBorderResize.indexOf(directions[i]) >= 0 && directions[i]) {\n            setBorderResizeElm(directions[i]);\n        }\n        else if (directions[i].trim() !== '') {\n            var resizeHandler = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-icons ' + RESIZE_HANDLER + ' ' + 'e-' + directions[i] });\n            targetElement.appendChild(resizeHandler);\n        }\n    }\n    minHeight = args.minHeight;\n    minWidth = args.minWidth;\n    maxWidth = args.maxWidth;\n    maxHeight = args.maxHeight;\n    if (args.proxy && args.proxy.element && args.proxy.element.classList.contains('e-dialog')) {\n        wireEvents(args.proxy);\n    }\n    else {\n        wireEvents();\n    }\n}\n/**\n *\n * @param {string} direction - specifies the string\n * @returns {void}\n */\nfunction setBorderResizeElm(direction) {\n    calculateValues();\n    var borderBottom = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\n        attrs: {\n            'unselectable': 'on', 'contenteditable': 'false'\n        }\n    });\n    borderBottom.setAttribute('class', 'e-dialog-border-resize e-' + direction);\n    if (direction === 'south') {\n        borderBottom.style.height = '2px';\n        borderBottom.style.width = '100%';\n        borderBottom.style.bottom = '0px';\n        borderBottom.style.left = '0px';\n    }\n    if (direction === 'north') {\n        borderBottom.style.height = '2px';\n        borderBottom.style.width = '100%';\n        borderBottom.style.top = '0px';\n        borderBottom.style.left = '0px';\n    }\n    if (direction === 'east') {\n        borderBottom.style.height = '100%';\n        borderBottom.style.width = '2px';\n        borderBottom.style.right = '0px';\n        borderBottom.style.top = '0px';\n    }\n    if (direction === 'west') {\n        borderBottom.style.height = '100%';\n        borderBottom.style.width = '2px';\n        borderBottom.style.left = '0px';\n        borderBottom.style.top = '0px';\n    }\n    targetElement.appendChild(borderBottom);\n}\n/**\n *\n * @param {string} element - specifies the element\n * @returns {HTMLElement} - returns the element\n */\nfunction getDOMElement(element) {\n    var domElement;\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element)) {\n        if (typeof (element) === 'string') {\n            domElement = document.querySelector(element);\n        }\n        else {\n            domElement = element;\n        }\n    }\n    return domElement;\n}\n/**\n * Wires up the event handlers for the resizable elements.\n *\n * @param {any} [args] - Optional arguments that provide context for the event handlers.\n * @returns {void}\n */\nfunction wireEvents(args) {\n    var context = args || this;\n    var resizers = targetElement.querySelectorAll('.' + RESIZE_HANDLER);\n    for (var i = 0; i < resizers.length; i++) {\n        selectedHandler = resizers[i];\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(selectedHandler, 'mousedown', onMouseDown, context);\n        var eventName = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(selectedHandler, eventName, onTouchStart, context);\n    }\n    var borderResizers = targetElement.querySelectorAll('.e-dialog-border-resize');\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(borderResizers)) {\n        for (var i = 0; i < borderResizers.length; i++) {\n            selectedHandler = borderResizers[i];\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(selectedHandler, 'mousedown', onMouseDown, context);\n            var eventName = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(selectedHandler, eventName, onTouchStart, context);\n        }\n    }\n}\n/* istanbul ignore next */\n/**\n *\n * @param {string} e - specifies the string\n * @returns {string} - returns the string\n */\nfunction getEventType(e) {\n    return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n}\n/* istanbul ignore next */\n/**\n *\n * @param {MouseEvent} e - specifies the mouse event\n * @returns {void}\n */\nfunction onMouseDown(e) {\n    e.preventDefault();\n    targetElement = e.target.parentElement;\n    calculateValues();\n    originalMouseX = e.pageX;\n    originalMouseY = e.pageY;\n    e.target.classList.add(FOCUSED_HANDLER);\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(resizeStart)) {\n        var proxy_1 =  false || this;\n        if (resizeStart(e, proxy_1) === true) {\n            return;\n        }\n    }\n    if (this.targetEle && targetElement && targetElement.querySelector('.' + DIALOG_RESIZABLE)) {\n        containerElement = this.target === ('body' || 0 || 0) ? null : this.targetEle;\n        maxWidth = this.targetEle.clientWidth;\n        maxHeight = this.targetEle.clientHeight;\n    }\n    var target = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) ? document : containerElement;\n    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(target, 'mousemove', onMouseMove, this);\n    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'mouseup', onMouseUp, this);\n    for (var i = 0; i < RESTRICT_LEFT.length; i++) {\n        if (targetElement.classList.contains(RESTRICT_LEFT[i])) {\n            setLeft = false;\n        }\n        else {\n            setLeft = true;\n        }\n    }\n}\n/* istanbul ignore next */\n/**\n *\n * @param {MouseEvent} e - specifies the event\n * @returns {void}\n */\nfunction onMouseUp(e) {\n    var touchMoveEvent = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n    var touchEndEvent = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n    var target = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) ? document : containerElement;\n    var eventName = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(target, 'mousemove', onMouseMove);\n    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(target, touchMoveEvent, onMouseMove);\n    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(target, eventName, onMouseMove);\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.body.querySelector('.' + FOCUSED_HANDLER))) {\n        document.body.querySelector('.' + FOCUSED_HANDLER).classList.remove(FOCUSED_HANDLER);\n    }\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(resizeEnd)) {\n        var proxy_2 =  false || this;\n        resizeEnd(e, proxy_2);\n    }\n    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'mouseup', onMouseUp);\n    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, touchEndEvent, onMouseUp);\n}\n/* istanbul ignore next */\n/**\n * @returns {void}\n */\nfunction calculateValues() {\n    originalWidth = parseFloat(getComputedStyle(targetElement, null).getPropertyValue('width').replace('px', ''));\n    originalHeight = parseFloat(getComputedStyle(targetElement, null).getPropertyValue('height').replace('px', ''));\n    originalX = targetElement.getBoundingClientRect().left;\n    originalY = targetElement.getBoundingClientRect().top;\n}\n/* istanbul ignore next */\n/**\n *\n * @param {MouseEvent} e - specifies the event\n * @returns {void}\n */\nfunction onTouchStart(e) {\n    targetElement = e.target.parentElement;\n    calculateValues();\n    var dialogResizeElement = targetElement.classList.contains('e-dialog');\n    if ((e.target.classList.contains(RESIZE_HANDLER) || e.target.classList.contains('e-dialog-border-resize')) && dialogResizeElement) {\n        e.target.classList.add(FOCUSED_HANDLER);\n    }\n    var coordinates = e.touches ? e.changedTouches[0] : e;\n    originalMouseX = coordinates.pageX;\n    originalMouseY = coordinates.pageY;\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(resizeStart)) {\n        var proxy_3 =  false || this;\n        if (resizeStart(e, proxy_3) === true) {\n            return;\n        }\n    }\n    var touchMoveEvent = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n    var touchEndEvent = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n    var target = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) ? document : containerElement;\n    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(target, touchMoveEvent, onMouseMove, this);\n    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, touchEndEvent, onMouseUp, this);\n}\n/* istanbul ignore next */\n/**\n *\n * @param {MouseEvent} e - specifies the event\n * @returns {void}\n */\nfunction onMouseMove(e) {\n    if (e.target.classList.contains(RESIZE_HANDLER) && e.target.classList.contains(FOCUSED_HANDLER)) {\n        selectedHandler = e.target;\n    }\n    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.body.querySelector('.' + FOCUSED_HANDLER))) {\n        selectedHandler = document.body.querySelector('.' + FOCUSED_HANDLER);\n    }\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(selectedHandler)) {\n        var resizeTowards = '';\n        for (var i = 0; i < elementClass.length; i++) {\n            if (selectedHandler.classList.contains('e-' + elementClass[i])) {\n                resizeTowards = elementClass[i];\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(resize)) {\n            var proxy_4 =  false || this;\n            resize(e, proxy_4);\n        }\n        switch (resizeTowards) {\n            case 'south':\n                resizeSouth(e);\n                break;\n            case 'north':\n                resizeNorth(e);\n                break;\n            case 'west':\n                resizeWest(e);\n                break;\n            case 'east':\n                resizeEast(e);\n                break;\n            case 'south-east':\n                resizeSouth(e);\n                resizeEast(e);\n                break;\n            case 'south-west':\n                resizeSouth(e);\n                resizeWest(e);\n                break;\n            case 'north-east':\n                resizeNorth(e);\n                resizeEast(e);\n                break;\n            case 'north-west':\n                resizeNorth(e);\n                resizeWest(e);\n                break;\n            default: break;\n        }\n    }\n}\n/* istanbul ignore next */\n/**\n *\n * @param {HTMLElement} element - specifies the eleemnt\n * @returns {ClientRect} - returns the client\n */\nfunction getClientRectValues(element) {\n    return element.getBoundingClientRect();\n}\n/**\n * @param {MouseEvent | TouchEvent} e - specifies the event\n * @returns {void}\n */\nfunction resizeSouth(e) {\n    var documentHeight = document.documentElement.clientHeight;\n    var calculateValue = false;\n    var coordinates = e.touches ? e.changedTouches[0] : e;\n    var currentpageY = coordinates.pageY;\n    var targetRectValues = getClientRectValues(targetElement);\n    var containerRectValues;\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {\n        containerRectValues = getClientRectValues(containerElement);\n    }\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {\n        calculateValue = true;\n    }\n    else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) && ((documentHeight - currentpageY) >= 0 || (targetRectValues.top < 0))) {\n        calculateValue = true;\n    }\n    var calculatedHeight = originalHeight + (currentpageY - originalMouseY);\n    calculatedHeight = (calculatedHeight > minHeight) ? calculatedHeight : minHeight;\n    var containerTop = 0;\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {\n        containerTop = containerRectValues.top;\n    }\n    var borderValue = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) ? 0 : containerElement.offsetHeight - containerElement.clientHeight;\n    var topWithoutborder = (targetRectValues.top - containerTop) - (borderValue / 2);\n    topWithoutborder = (topWithoutborder < 0) ? 0 : topWithoutborder;\n    if (targetRectValues.top > 0 && (topWithoutborder + calculatedHeight) > maxHeight) {\n        calculateValue = false;\n        if (targetElement.classList.contains(RESIZE_WITHIN_VIEWPORT)) {\n            return;\n        }\n        targetElement.style.height = (maxHeight - parseInt(topWithoutborder.toString(), 10)) + 'px';\n        return;\n    }\n    var targetTop = 0;\n    if (calculateValue) {\n        if (targetRectValues.top < 0 && (documentHeight + (targetRectValues.height + targetRectValues.top) > 0)) {\n            targetTop = targetRectValues.top;\n            if ((calculatedHeight + targetTop) <= 30) {\n                calculatedHeight = (targetRectValues.height - (targetRectValues.height + targetRectValues.top)) + 30;\n            }\n        }\n        if (((calculatedHeight + targetRectValues.top) >= maxHeight)) {\n            targetElement.style.height = targetRectValues.height +\n                (documentHeight - (targetRectValues.height + targetRectValues.top)) + 'px';\n        }\n        var calculatedTop = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) ? targetTop : topWithoutborder;\n        if (calculatedHeight >= minHeight && ((calculatedHeight + calculatedTop) <= maxHeight)) {\n            targetElement.style.height = calculatedHeight + 'px';\n        }\n    }\n}\n/**\n * Resizes the element towards the north direction.\n *\n * @param {MouseEvent | TouchEvent} e - The event object.\n * @returns {void}\n */\nfunction resizeNorth(e) {\n    var calculateValue = false;\n    var boundaryRectValues;\n    var pageY = (getEventType(e.type) === 'mouse') ? e.pageY : e.touches[0].pageY;\n    var targetRectValues = getClientRectValues(targetElement);\n    var borderValue = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) ? 0 : containerElement.offsetHeight - containerElement.clientHeight;\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {\n        boundaryRectValues = getClientRectValues(containerElement);\n    }\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) && (targetRectValues.top - boundaryRectValues.top) > 0) {\n        calculateValue = true;\n    }\n    else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) && pageY > 0) {\n        calculateValue = true;\n    }\n    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) &&\n        (Math.floor((targetRectValues.top - boundaryRectValues.top) + targetRectValues.height +\n            (boundaryRectValues.bottom - targetRectValues.bottom)) - borderValue) <= maxHeight) {\n        calculateValue = true;\n    }\n    var currentHeight = originalHeight - (pageY - originalMouseY);\n    if (calculateValue) {\n        if (currentHeight >= minHeight && currentHeight <= maxHeight) {\n            var containerTop = 0;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {\n                containerTop = boundaryRectValues.top;\n            }\n            var top_1 = (originalY - containerTop) + (pageY - originalMouseY);\n            top_1 = top_1 > 0 ? top_1 : 1;\n            targetElement.style.height = currentHeight + 'px';\n            targetElement.style.top = top_1 + 'px';\n        }\n    }\n}\n/**\n * Resizes the element towards the west direction.\n *\n * @param {MouseEvent | TouchEvent} e - The event object.\n * @returns {void}\n */\nfunction resizeWest(e) {\n    var documentWidth = document.documentElement.clientWidth;\n    var calculateValue = false;\n    var rectValues;\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {\n        rectValues = getClientRectValues(containerElement);\n    }\n    var pageX = (getEventType(e.type) === 'mouse') ? e.pageX : e.touches[0].pageX;\n    var targetRectValues = getClientRectValues(targetElement);\n    var borderValue = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) ? 0 : containerElement.offsetWidth - containerElement.clientWidth;\n    /* eslint-disable */\n    var left = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) ? 0 : rectValues.left;\n    var containerWidth = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) ? 0 : rectValues.width;\n    /* eslint-enable */\n    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(resizeWestWidth)) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {\n            resizeWestWidth = (((targetRectValues.left - left) - borderValue / 2)) + targetRectValues.width;\n            resizeWestWidth = resizeWestWidth + (containerWidth - borderValue - resizeWestWidth);\n        }\n        else {\n            resizeWestWidth = documentWidth;\n        }\n    }\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) &&\n        (Math.floor((targetRectValues.left - rectValues.left) + targetRectValues.width +\n            (rectValues.right - targetRectValues.right)) - borderValue) <= maxWidth) {\n        calculateValue = true;\n    }\n    else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) && pageX >= 0) {\n        calculateValue = true;\n    }\n    var calculatedWidth = originalWidth - (pageX - originalMouseX);\n    if (setLeft) {\n        calculatedWidth = (calculatedWidth > resizeWestWidth) ? resizeWestWidth : calculatedWidth;\n    }\n    if (calculateValue) {\n        if (calculatedWidth >= minWidth && calculatedWidth <= maxWidth) {\n            var containerLeft = 0;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {\n                containerLeft = rectValues.left;\n            }\n            var left_1 = (originalX - containerLeft) + (pageX - originalMouseX);\n            left_1 = (left_1 > 0) ? left_1 : 1;\n            if (calculatedWidth !== previousWidth && setWidth) {\n                targetElement.style.width = calculatedWidth + 'px';\n            }\n            if (setLeft) {\n                targetElement.style.left = left_1 + 'px';\n                if (left_1 === 1) {\n                    setWidth = false;\n                }\n                else {\n                    setWidth = true;\n                }\n            }\n        }\n    }\n    previousWidth = calculatedWidth;\n}\n/**\n * Resizes the element towards the east direction.\n *\n * @param {MouseEvent | TouchEvent} e - The event object.\n * @returns {void}\n */\nfunction resizeEast(e) {\n    var documentWidth = document.documentElement.clientWidth;\n    var calculateValue = false;\n    var containerRectValues;\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {\n        containerRectValues = getClientRectValues(containerElement);\n    }\n    var coordinates = e.touches ? e.changedTouches[0] : e;\n    var pageX = coordinates.pageX;\n    var targetRectValues = getClientRectValues(targetElement);\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) && (((targetRectValues.left - containerRectValues.left) + targetRectValues.width) <= maxWidth\n        || (targetRectValues.right - containerRectValues.left) >= targetRectValues.width)) {\n        calculateValue = true;\n    }\n    else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) && (documentWidth - pageX) > 0) {\n        calculateValue = true;\n    }\n    var calculatedWidth = originalWidth + (pageX - originalMouseX);\n    var containerLeft = 0;\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {\n        containerLeft = containerRectValues.left;\n    }\n    if (((targetRectValues.left - containerLeft) + calculatedWidth) > maxWidth) {\n        calculateValue = false;\n        if (targetElement.classList.contains(RESIZE_WITHIN_VIEWPORT)) {\n            return;\n        }\n        targetElement.style.width = maxWidth - (targetRectValues.left - containerLeft) + 'px';\n    }\n    if (calculateValue) {\n        if (calculatedWidth >= minWidth && calculatedWidth <= maxWidth) {\n            targetElement.style.width = calculatedWidth + 'px';\n        }\n    }\n}\n/* istanbul ignore next */\n/**\n *\n * @param {number} minimumHeight - specifies the number\n * @returns {void}\n */\nfunction setMinHeight(minimumHeight) {\n    minHeight = minimumHeight;\n}\n/**\n *\n * @param {number} value - specifies the number value\n * @returns {void}\n */\nfunction setMaxWidth(value) {\n    maxWidth = value;\n}\n/**\n *\n * @param {number} value - specifies the number value\n * @returns {void}\n */\nfunction setMaxHeight(value) {\n    maxHeight = value;\n}\n/**\n * @returns {void}\n */\nfunction removeResize() {\n    var handlers = targetElement.querySelectorAll('.' + RESIZE_HANDLER);\n    for (var i = 0; i < handlers.length; i++) {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(handlers[i]);\n    }\n    var borderResizers = targetElement.querySelectorAll('.e-dialog-border-resize');\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(borderResizers)) {\n        for (var i = 0; i < borderResizers.length; i++) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(borderResizers[i]);\n        }\n    }\n}\n/**\n * @returns {void}\n */\nfunction resizeDestroy() {\n    targetElement = null;\n    selectedHandler = null;\n    containerElement = null;\n    resizeWestWidth = null;\n    resizeStart = null;\n    resize = null;\n    resizeEnd = null;\n}\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-popups/src/common/resize.js?");

/***/ })

}]);