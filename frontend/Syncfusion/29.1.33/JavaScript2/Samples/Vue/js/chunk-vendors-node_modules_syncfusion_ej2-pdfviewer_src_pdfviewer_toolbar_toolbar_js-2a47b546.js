"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-pdfviewer_src_pdfviewer_toolbar_toolbar_js-2a47b546"],{

/***/ "./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/toolbar/toolbar.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/toolbar/toolbar.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toolbar: () => (/* binding */ Toolbar)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\");\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\");\n/* harmony import */ var _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../index */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/index.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n/* harmony import */ var _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-splitbuttons */ \"./node_modules/@syncfusion/ej2-splitbuttons/index.js\");\n/* harmony import */ var _base_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../base/types */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/base/types.js\");\n/* harmony import */ var _formdesigner_toolbar__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./formdesigner-toolbar */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/toolbar/formdesigner-toolbar.js\");\n\n\n\n\n\n\n\n\n\n/* eslint-disable valid-jsdoc */\n/**\n * Toolbar module\n *\n * @param {string} args - args\n * @param {Event} event - args\n * @returns {void}\n */\nvar Toolbar = /** @class */ (function () {\n    /**\n     * @param {PdfViewer} viewer - It describes about the viewer\n     * @param {PdfViewerBase} viewerBase - It describes about the viewer base\n     * @private\n     * @returns {void}\n     */\n    function Toolbar(viewer, viewerBase) {\n        var _this = this;\n        this.isPageNavigationToolDisabled = false;\n        this.isMagnificationToolDisabled = false;\n        /**\n         * @private\n         */\n        this.isSelectionToolDisabled = false;\n        this.isScrollingToolDisabled = false;\n        this.isOpenBtnVisible = true;\n        this.isNavigationToolVisible = true;\n        this.isMagnificationToolVisible = true;\n        this.isSelectionBtnVisible = true;\n        this.isScrollingBtnVisible = true;\n        this.isDownloadBtnVisible = true;\n        this.isPrintBtnVisible = true;\n        this.isSearchBtnVisible = true;\n        /**\n         * @private\n         */\n        this.isTextSearchBoxDisplayed = false;\n        this.isUndoRedoBtnsVisible = true;\n        this.isAnnotationEditBtnVisible = true;\n        this.isFormDesignerEditBtnVisible = true;\n        this.isCommentBtnVisible = true;\n        this.isSubmitbtnvisible = true;\n        this.toolItems = [];\n        this.itemsIndexArray = [];\n        this.onToolbarKeydown = function (event) {\n            var isSkip = event.key === 'Tab' || event.shiftKey === true || event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowUp' || event.key === 'ArrowDown' || event.key === 'ArrowLeft' || event.key === 'ArrowRight';\n            var targetId = event.target.id;\n            var customItem = _this.toolItems.filter(function (toolItem) { return toolItem.id === targetId; });\n            if (!(targetId === _this.pdfViewer.element.id + '_currentPageInput' || targetId === _this.pdfViewer.element.id + '_zoomDropDown' || customItem.length > 0) && !isSkip) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        };\n        this.toolbarClickHandler = function (args) {\n            var isKeyBoardEvent = args.originalEvent && args.originalEvent.pointerType !== 'mouse' && args.originalEvent.pointerType !== 'touch';\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || _this.pdfViewer.enableDesktopMode) {\n                if (args.originalEvent.target === _this.zoomDropdownItem.parentElement.childNodes[1] ||\n                    args.originalEvent.target === _this.zoomDropdownItem.parentElement.childNodes[2]) {\n                    args.cancel = true;\n                }\n                else if (args.originalEvent.target.id === _this.pdfViewer.element.id + '_openIcon') {\n                    var tooltipData = args.originalEvent.target.parentElement.dataset;\n                    if (tooltipData && tooltipData.tooltipId) {\n                        var tooltipElement = document.getElementById(tooltipData.tooltipId);\n                        if (tooltipElement) {\n                            tooltipElement.style.display = 'none';\n                        }\n                    }\n                }\n            }\n            _this.handleToolbarBtnClick(args, isKeyBoardEvent);\n            var targetElement = args.originalEvent.target;\n            var customItem = [];\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.item)) {\n                customItem = _this.toolItems.filter(function (toolItem) { return toolItem.id === args.item.id; });\n            }\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || _this.pdfViewer.enableDesktopMode) {\n                if (!(args.originalEvent.target === _this.zoomDropdownItem.parentElement.childNodes[1] ||\n                    args.originalEvent.target === _this.zoomDropdownItem.parentElement.childNodes[2] ||\n                    args.originalEvent.target === _this.currentPageBoxElement ||\n                    args.originalEvent.target === _this.textSearchItem.childNodes[0] || customItem.length > 0)) {\n                    if (!isKeyBoardEvent && targetElement.parentElement.id !== _this.pdfViewer.element.id + '_toolbarContainer_nav' && targetElement.id !== _this.pdfViewer.element.id + '_toolbarContainer_nav') {\n                        args.originalEvent.target.blur();\n                        _this.pdfViewerBase.focusViewerContainer();\n                    }\n                }\n            }\n            else {\n                args.originalEvent.target.blur();\n                _this.pdfViewerBase.focusViewerContainer();\n            }\n        };\n        this.loadDocument = function (args) {\n            var upoadedFiles = args.target.files;\n            if (args.target.files[0] !== null) {\n                var uploadedFile = upoadedFiles[0];\n                if (uploadedFile) {\n                    _this.uploadedDocumentName = uploadedFile.name;\n                    var reader = new FileReader();\n                    if (_this.pdfViewerBase.clientSideRendering) {\n                        reader.readAsArrayBuffer(uploadedFile);\n                    }\n                    else {\n                        reader.readAsDataURL(uploadedFile);\n                    }\n                    reader.onload = function (e) {\n                        args.target.value = null;\n                        var uploadedFileUrl = e.currentTarget.result;\n                        _this.pdfViewer.uploadedFileByteArray = new Uint8Array(uploadedFileUrl);\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                            _this.pdfViewer._dotnetInstance.invokeMethodAsync('LoadDocumentFromClient', uploadedFileUrl);\n                        }\n                        else {\n                            if (_this.pdfViewerBase.clientSideRendering) {\n                                _this.uploadedFile = _this.pdfViewer.uploadedFileByteArray;\n                                _this.pdfViewer.load(_this.pdfViewer.uploadedFileByteArray, null);\n                                _this.pdfViewerBase.isSkipDocumentPath = true;\n                                _this.pdfViewer.documentPath = _this.pdfViewer.uploadedFileByteArray;\n                                _this.pdfViewerBase.documentPathByteArray = _this.pdfViewer.documentPath;\n                            }\n                            else {\n                                _this.uploadedFile = uploadedFileUrl;\n                                _this.pdfViewer.load(uploadedFileUrl, null);\n                                _this.pdfViewerBase.isSkipDocumentPath = true;\n                                _this.pdfViewer.documentPath = uploadedFileUrl;\n                                _this.pdfViewerBase.documentPathByteArray = _this.pdfViewer.documentPath;\n                            }\n                        }\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.fileInputElement)) {\n                            _this.fileInputElement.value = '';\n                        }\n                    };\n                }\n            }\n        };\n        this.navigateToPage = function (args) {\n            if (args.which === 13) {\n                var enteredValue = parseInt(_this.currentPageBoxElement.value, 10);\n                if (enteredValue !== null) {\n                    if (enteredValue > 0 && enteredValue <= _this.pdfViewerBase.pageCount) {\n                        if (_this.pdfViewer.navigationModule) {\n                            _this.pdfViewer.navigationModule.goToPage(enteredValue);\n                        }\n                    }\n                    else {\n                        _this.updateCurrentPage(_this.pdfViewerBase.currentPageNumber);\n                    }\n                }\n                else {\n                    _this.updateCurrentPage(_this.pdfViewerBase.currentPageNumber);\n                }\n                _this.currentPageBoxElement.blur();\n                _this.pdfViewerBase.focusViewerContainer();\n            }\n        };\n        this.textBoxFocusOut = function () {\n            if (_this.currentPageBox.value === null || _this.currentPageBox.value >= _this.pdfViewerBase.pageCount ||\n                _this.currentPageBox.value !== _this.pdfViewerBase.currentPageNumber) {\n                _this.updateCurrentPage(_this.pdfViewerBase.currentPageNumber);\n            }\n        };\n        this.pdfViewer = viewer;\n        this.pdfViewerBase = viewerBase;\n    }\n    /**\n     * @param {string} width - It describes about the width\n     * @private\n     * @returns {HTMLElement} - html element\n     */\n    Toolbar.prototype.intializeToolbar = function (width) {\n        var toolbarDiv;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            toolbarDiv = this.createToolbar(width);\n        }\n        else {\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n                toolbarDiv = this.pdfViewer.element.querySelector('.e-pv-toolbar');\n                this.toolbarElement = toolbarDiv;\n            }\n        }\n        var isIE = !!document.documentMode;\n        if (isIE) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                this.pdfViewerBase.blazorUIAdaptor.totalPageElement.classList.add('e-pv-total-page-ms');\n            }\n            else {\n                if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.totalPageItem.classList.add('e-pv-total-page-ms');\n                }\n            }\n        }\n        this.createFileElement(toolbarDiv);\n        this.wireEvent();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.updateToolbarItems();\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n                this.applyToolbarSettings();\n                this.initialEnableItems();\n                this.pdfViewerBase.navigationPane.adjustPane();\n            }\n            else {\n                this.initialEnableItems();\n            }\n            if (this.pdfViewer.annotationModule) {\n                this.annotationToolbarModule = new _index__WEBPACK_IMPORTED_MODULE_4__.AnnotationToolbar(this.pdfViewer, this.pdfViewerBase, this);\n                if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n                    this.annotationToolbarModule.initializeAnnotationToolbar();\n                }\n            }\n            if (this.pdfViewer.formDesignerModule) {\n                this.formDesignerToolbarModule = new _formdesigner_toolbar__WEBPACK_IMPORTED_MODULE_8__.FormDesignerToolbar(this.pdfViewer, this.pdfViewerBase, this);\n                if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n                    this.formDesignerToolbarModule.initializeFormDesignerToolbar();\n                }\n            }\n        }\n        else {\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n                this.initialEnableItems();\n                this.pdfViewerBase.navigationPane.adjustPane();\n                if (this.pdfViewer.enableToolbar) {\n                    this.bindOpenIconEvent();\n                }\n            }\n            this.PanElement = document.getElementById(this.pdfViewer.element.id + '_handTool').children[0];\n            this.PanElement.classList.add('e-pv-tbar-btn');\n            this.SelectToolElement = document.getElementById(this.pdfViewer.element.id + '_selectTool').children[0];\n            this.SelectToolElement.classList.add('e-pv-tbar-btn');\n            this.CommentElement = document.getElementById(this.pdfViewer.element.id + '_comment').children[0];\n            this.CommentElement.classList.add('e-pv-tbar-btn');\n            this.annotationToolbarModule = new _index__WEBPACK_IMPORTED_MODULE_4__.AnnotationToolbar(this.pdfViewer, this.pdfViewerBase, this);\n            if (this.pdfViewer.enableToolbar && this.pdfViewer.enableAnnotationToolbar ||\n                (this.pdfViewer.enableDesktopMode && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice)) {\n                this.annotationToolbarModule.afterAnnotationToolbarCreationInBlazor();\n            }\n        }\n        return toolbarDiv;\n    };\n    Toolbar.prototype.bindOpenIconEvent = function () {\n        var openElement = document.getElementById(this.pdfViewer.element.id + '_open');\n        if (openElement) {\n            openElement.addEventListener('click', this.openFileDialogBox.bind(this));\n        }\n    };\n    Toolbar.prototype.InitializeMobileToolbarInBlazor = function () {\n        var toolbarDiv = this.pdfViewer.element.querySelector('.e-pv-mobile-toolbar');\n        this.createFileElement(toolbarDiv);\n        this.wireEvent();\n    };\n    /**\n     * Shows /hides the toolbar in the PdfViewer\n     *\n     * @param  {boolean} enableToolbar - If set true , its show the Toolbar\n     * @returns {void}\n     */\n    Toolbar.prototype.showToolbar = function (enableToolbar) {\n        var toolbar;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.toolbarElement)) {\n            toolbar = this.toolbarElement;\n        }\n        if (enableToolbar) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(toolbar) && !(this.pdfViewerBase.navigationPane &&\n                this.pdfViewerBase.navigationPane.isNavigationToolbarVisible)) {\n                toolbar.style.display = 'block';\n            }\n            var toolbarContainer = this.pdfViewerBase.getElement('_toolbarContainer');\n            if (toolbarContainer) {\n                var toolbarHeight = toolbarContainer.clientHeight;\n                if (toolbarHeight === 0) {\n                    toolbarHeight = parseFloat(window.getComputedStyle(toolbarContainer)['height']) + 1;\n                }\n                this.pdfViewerBase.toolbarHeight = toolbarHeight;\n            }\n            if ((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !this.pdfViewer.enableDesktopMode) && this.pdfViewer.toolbarModule &&\n                this.pdfViewer.toolbarModule.annotationToolbarModule) {\n                this.pdfViewer.toolbarModule.annotationToolbarModule.hideMobileAnnotationToolbar();\n            }\n        }\n        else {\n            this.pdfViewerBase.toolbarHeight = 0;\n            if (enableToolbar) {\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.pdfViewer.toolbarModule.annotationToolbarModule.toolbar) {\n                    this.annotationToolbarModule.toolbarCreated = false;\n                    this.annotationToolbarModule.adjustMobileViewer();\n                    this.pdfViewer.toolbarModule.annotationToolbarModule.toolbar.element.style.display = 'none';\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.annotationToolbarModule.propertyToolbar) {\n                    this.annotationToolbarModule.propertyToolbar.element.style.display = 'none';\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(toolbar)) {\n                toolbar.style.display = 'none';\n            }\n        }\n    };\n    /**\n     * Shows/hides the Navigation toolbar in the PdfViewer\n     *\n     * @param  {boolean} enableNavigationToolbar - If set true , its show the Navigation Toolbar\n     * @returns {void}\n     */\n    Toolbar.prototype.showNavigationToolbar = function (enableNavigationToolbar) {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            var navigationToolbar = this.pdfViewerBase.navigationPane.sideBarToolbar;\n            var navigationToolbarSplitter = this.pdfViewerBase.navigationPane.sideBarToolbarSplitter;\n            if (enableNavigationToolbar) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(navigationToolbar)) {\n                    navigationToolbar.style.display = 'block';\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(navigationToolbarSplitter)) {\n                    navigationToolbarSplitter.style.display = 'block';\n                }\n                if (this.pdfViewerBase.navigationPane.isBookmarkOpen || this.pdfViewerBase.navigationPane.isThumbnailOpen) {\n                    this.pdfViewerBase.navigationPane.clear();\n                }\n            }\n            else {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(navigationToolbar)) {\n                    navigationToolbar.style.display = 'none';\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(navigationToolbarSplitter)) {\n                    navigationToolbarSplitter.style.display = 'none';\n                }\n                if (this.pdfViewerBase.navigationPane.isBookmarkOpen || this.pdfViewerBase.navigationPane.isThumbnailOpen) {\n                    this.pdfViewerBase.navigationPane.updateViewerContainerOnClose();\n                }\n            }\n        }\n    };\n    /**\n     * Shows /hides the annotation toolbar in the PdfViewer\n     *\n     * @param  {boolean} enableAnnotationToolbar - If set true , its show the annotation Toolbar\n     * @returns {void}\n     */\n    Toolbar.prototype.showAnnotationToolbar = function (enableAnnotationToolbar) {\n        if (enableAnnotationToolbar) {\n            this.annotationToolbarModule.isToolbarHidden = true;\n            this.annotationToolbarModule.showAnnotationToolbar(null, false, true);\n        }\n        else {\n            this.annotationToolbarModule.isToolbarHidden = false;\n            this.annotationToolbarModule.showAnnotationToolbar(null, false, false);\n        }\n    };\n    /**\n     * Shows /hides the the toolbar items in the PdfViewer\n     *\n     * @param  {string[]} items - Defines the toolbar items in the toolbar\n     * @param  {boolean} isVisible - If set true, then its show the toolbar Items\n     * @returns {void}\n     */\n    Toolbar.prototype.showToolbarItem = function (items, isVisible) {\n        for (var i = 0; i < items.length; i++) {\n            switch (items[parseInt(i.toString(), 10)]) {\n                case 'OpenOption':\n                    this.showOpenOption(isVisible);\n                    break;\n                case 'PageNavigationTool':\n                    this.showPageNavigationTool(isVisible);\n                    break;\n                case 'MagnificationTool':\n                    this.showMagnificationTool(isVisible);\n                    break;\n                case 'SelectionTool':\n                    this.showSelectionTool(isVisible);\n                    break;\n                case 'PanTool':\n                    this.showScrollingTool(isVisible);\n                    break;\n                case 'DownloadOption':\n                    this.showDownloadOption(isVisible);\n                    break;\n                case 'PrintOption':\n                    this.showPrintOption(isVisible);\n                    break;\n                case 'SearchOption':\n                    this.showSearchOption(isVisible);\n                    break;\n                case 'UndoRedoTool':\n                    this.showUndoRedoTool(isVisible);\n                    break;\n                case 'AnnotationEditTool':\n                    this.showAnnotationEditTool(isVisible);\n                    break;\n                case 'FormDesignerEditTool':\n                    this.showFormDesignerEditTool(isVisible);\n                    break;\n                case 'CommentTool':\n                    this.showCommentOption(isVisible);\n                    break;\n                case 'SubmitForm':\n                    this.showSubmitForm(isVisible);\n                    break;\n            }\n        }\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            this.applyHideToToolbar(true, this.itemsIndexArray[0].endIndex + 1, this.itemsIndexArray[0].endIndex + 1);\n            this.applyHideToToolbar(true, this.itemsIndexArray[1].endIndex + 1, this.itemsIndexArray[1].endIndex + 1);\n            this.applyHideToToolbar(true, this.itemsIndexArray[2].endIndex + 1, this.itemsIndexArray[2].endIndex + 1);\n            this.applyHideToToolbar(true, this.itemsIndexArray[4].endIndex + 1, this.itemsIndexArray[4].endIndex + 1);\n            this.applyHideToToolbar(true, this.itemsIndexArray[5].endIndex + 1, this.itemsIndexArray[5].endIndex + 1);\n        }\n        else {\n            this.applyHideToToolbar(true, 1, 1);\n            this.applyHideToToolbar(true, 8, 8);\n            this.applyHideToToolbar(true, 12, 12);\n            this.applyHideToToolbar(true, 15, 15);\n        }\n        this.showSeparator(items);\n    };\n    /**\n     * Enables /disables the the toolbar items in the PdfViewer\n     *\n     * @param  {string[]} items - Defines the toolbar items in the toolbar\n     * @param  {boolean} isEnable - If set true, then its Enable the toolbar Items\n     * @returns {void}\n     */\n    Toolbar.prototype.enableToolbarItem = function (items, isEnable) {\n        for (var i = 0; i < items.length; i++) {\n            switch (items[parseInt(i.toString(), 10)]) {\n                case 'OpenOption':\n                    this.enableOpenOption(isEnable);\n                    break;\n                case 'PageNavigationTool':\n                    this.isPageNavigationToolDisabled = isEnable;\n                    this.enablePageNavigationTool(isEnable);\n                    break;\n                case 'MagnificationTool':\n                    this.isMagnificationToolDisabled = isEnable;\n                    this.enableMagnificationTool(isEnable);\n                    break;\n                case 'SelectionTool':\n                    this.isSelectionToolDisabled = isEnable;\n                    this.enableSelectionTool(isEnable);\n                    break;\n                case 'PanTool':\n                    this.isScrollingToolDisabled = isEnable;\n                    this.enableScrollingTool(isEnable);\n                    break;\n                case 'DownloadOption':\n                    this.enableDownloadOption(isEnable);\n                    break;\n                case 'PrintOption':\n                    this.enablePrintOption(isEnable);\n                    break;\n                case 'SearchOption':\n                    this.enableSearchOption(isEnable);\n                    break;\n                case 'UndoRedoTool':\n                    this.enableUndoRedoTool(isEnable);\n                    break;\n                case 'AnnotationEditTool':\n                    this.enableAnnotationEditTool(isEnable);\n                    break;\n                case 'FormDesignerEditTool':\n                    this.enableFormDesignerEditTool(isEnable);\n                    break;\n                case 'CommentTool':\n                    this.enableCommentsTool(isEnable);\n                    break;\n                case 'OrganizePagesTool':\n                    this.enableOrganizePagesButton(isEnable);\n                    break;\n            }\n        }\n    };\n    /**\n     * @param {any} restrictionSummary - It describes about the restriction summary\n     * @param {boolean} isEnable - It describes about the isEnable boolean value\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.DisableToolbarItems = function (restrictionSummary, isEnable) {\n        switch (restrictionSummary) {\n            case 'Print':\n                this.enablePrintOption(isEnable);\n                break;\n            case 'CopyContent':\n                this.isSelectionToolDisabled = isEnable;\n                this.enableSelectionTool(isEnable);\n                if (isEnable) {\n                    this.pdfViewerBase.initiateTextSelectMode();\n                    this.updateInteractionTools(isEnable);\n                }\n                else {\n                    this.pdfViewerBase.initiatePanning();\n                    this.updateInteractionTools(isEnable);\n                }\n                break;\n            case 'EditAnnotations':\n                this.enableAnnotationEditTool(isEnable);\n                if (this.annotationToolbarModule && !this.annotationToolbarModule.isToolbarHidden) {\n                    this.annotationToolbarModule.showAnnotationToolbar();\n                }\n                break;\n        }\n    };\n    Toolbar.prototype.showOpenOption = function (enableOpenOption) {\n        this.isOpenBtnVisible = enableOpenOption;\n        //For mobile devices, the default previous value for OpenOption has been passed as (0,0).\n        this.applyHideToToolbar(enableOpenOption, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[0]) ?\n            this.itemsIndexArray[0].startIndex : 0, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[0]) ? this.itemsIndexArray[0].endIndex : 0);\n    };\n    Toolbar.prototype.showPageNavigationTool = function (enablePageNavigationTool) {\n        this.isNavigationToolVisible = enablePageNavigationTool;\n        //For mobile devices, the default previous value for PageNavigationTool has been passed as (2,7).\n        this.applyHideToToolbar(enablePageNavigationTool, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[1]) ?\n            this.itemsIndexArray[1].startIndex : 2, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[1]) ? this.itemsIndexArray[1].endIndex : 7);\n    };\n    Toolbar.prototype.showMagnificationTool = function (enableMagnificationTool) {\n        this.isMagnificationToolVisible = enableMagnificationTool;\n        //For mobile devices, the default previous value for MagnificationTool has been passed as (9,11).\n        this.applyHideToToolbar(enableMagnificationTool, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[2]) ?\n            this.itemsIndexArray[2].startIndex : 9, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[2]) ? this.itemsIndexArray[2].endIndex : 11);\n    };\n    Toolbar.prototype.showSelectionTool = function (enableSelectionTool) {\n        this.isSelectionBtnVisible = enableSelectionTool;\n        //For mobile devices, the default previous value for SelectionTool has been passed as (13,13).\n        this.applyHideToToolbar(enableSelectionTool, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[3]) ?\n            this.itemsIndexArray[3].startIndex : 13, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[3]) ? this.itemsIndexArray[3].endIndex : 13);\n    };\n    Toolbar.prototype.showScrollingTool = function (enableScrollingTool) {\n        this.isScrollingBtnVisible = enableScrollingTool;\n        //For mobile devices, the default previous value for ScrollingTool has been passed as (14,14).\n        this.applyHideToToolbar(enableScrollingTool, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[4]) ?\n            this.itemsIndexArray[4].startIndex : 14, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[4]) ? this.itemsIndexArray[4].endIndex : 14);\n    };\n    Toolbar.prototype.showDownloadOption = function (enableDownloadOption) {\n        this.isDownloadBtnVisible = enableDownloadOption;\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            //The itemsIndexArray is null, the default previous value for DownloadOption has been passed as (26,26).\n            this.applyHideToToolbar(enableDownloadOption, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[12]) ?\n                this.itemsIndexArray[12].startIndex : 26, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[12]) ?\n                this.itemsIndexArray[12].endIndex : 26);\n        }\n        else {\n            this.applyHideToToolbar(enableDownloadOption, 6, 6);\n        }\n    };\n    Toolbar.prototype.showPageOrganizerToolbar = function (enablePageOrganizer) {\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !this.pdfViewer.enableDesktopMode) {\n            this.applyHideToToolbar(enablePageOrganizer, 4, 4);\n        }\n    };\n    Toolbar.prototype.showPrintOption = function (enablePrintOption) {\n        this.isPrintBtnVisible = enablePrintOption;\n        //For mobile devices, the default previous value for PrintOption has been passed as (25,25).\n        this.applyHideToToolbar(enablePrintOption, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[11]) ?\n            this.itemsIndexArray[11].startIndex : 25, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[11]) ?\n            this.itemsIndexArray[11].endIndex : 25);\n    };\n    Toolbar.prototype.showSearchOption = function (enableSearchOption) {\n        this.isSearchBtnVisible = enableSearchOption;\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            //The itemsIndexArray is null, the default previous value for SearchOption has been passed as (22,22).\n            this.applyHideToToolbar(enableSearchOption, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[8]) ?\n                this.itemsIndexArray[8].startIndex : 22, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[8]) ?\n                this.itemsIndexArray[8].endIndex : 22);\n        }\n        else {\n            this.applyHideToToolbar(enableSearchOption, 6, 6);\n        }\n    };\n    Toolbar.prototype.showUndoRedoTool = function (isEnable) {\n        this.isUndoRedoBtnsVisible = isEnable;\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            //The itemsIndexArray is null, the default previous value for PageNavigationTool has been passed as (16,17).\n            this.applyHideToToolbar(isEnable, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[5]) ? this.itemsIndexArray[5].startIndex : 16, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[5]) ? this.itemsIndexArray[5].endIndex : 17);\n        }\n        else {\n            this.applyHideToToolbar(isEnable, 2, 3);\n        }\n    };\n    Toolbar.prototype.showCommentOption = function (isEnable) {\n        if (!this.pdfViewer.enableStickyNotesAnnotation) {\n            this.isCommentBtnVisible = isEnable;\n            //For mobile devices, the default previous value for CommentOption has been passed as (18,19).\n            this.applyHideToToolbar(this.pdfViewer.enableStickyNotesAnnotation, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[6]) ?\n                this.itemsIndexArray[6].startIndex : 18, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[6]) ?\n                this.itemsIndexArray[6].endIndex : 19);\n        }\n        else {\n            this.isCommentBtnVisible = isEnable;\n            //For mobile devices, the default previous value for CommentOption has been passed as (18,19).\n            this.applyHideToToolbar(isEnable, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[6]) ? this.itemsIndexArray[6].startIndex : 18, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[6]) ? this.itemsIndexArray[6].endIndex : 19);\n        }\n    };\n    Toolbar.prototype.showAnnotationEditTool = function (isEnable) {\n        this.isAnnotationEditBtnVisible = isEnable;\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            //The itemsIndexArray is null, the default previous value for AnnotationEditTool has been passed as (23,23).\n            this.applyHideToToolbar(isEnable, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[9]) ?\n                this.itemsIndexArray[9].startIndex : 23, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[9]) ?\n                this.itemsIndexArray[9].endIndex : 23);\n        }\n        else {\n            this.applyHideToToolbar(isEnable, 5, 5);\n        }\n    };\n    Toolbar.prototype.showFormDesignerEditTool = function (isEnable) {\n        this.isFormDesignerEditBtnVisible = isEnable;\n        //For mobile devices, the default previous value for FormDesignerEditTool has been passed as (24,24).\n        this.applyHideToToolbar(isEnable, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[10]) ?\n            this.itemsIndexArray[10].startIndex : 24, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[10]) ?\n            this.itemsIndexArray[10].endIndex : 24);\n    };\n    Toolbar.prototype.showSubmitForm = function (isEnable) {\n        this.isSubmitbtnvisible = isEnable;\n        //For mobile devices, the default previous value for SubmitForm has been passed as (20,21).\n        this.applyHideToToolbar(isEnable, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[7]) ?\n            this.itemsIndexArray[7].startIndex : 20, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[7]) ?\n            this.itemsIndexArray[7].endIndex : 21);\n    };\n    Toolbar.prototype.enableOpenOption = function (enableOpenOption) {\n        this.enableItems(this.openDocumentItem.parentElement, enableOpenOption);\n    };\n    Toolbar.prototype.enablePageNavigationTool = function (enablePageNavigationTool) {\n        this.enableItems(this.firstPageItem.parentElement, enablePageNavigationTool);\n        this.enableItems(this.previousPageItem.parentElement, enablePageNavigationTool);\n        this.enableItems(this.nextPageItem.parentElement, enablePageNavigationTool);\n        this.enableItems(this.lastPageItem.parentElement, enablePageNavigationTool);\n        this.currentPageBox.readonly = !enablePageNavigationTool;\n    };\n    Toolbar.prototype.enableMagnificationTool = function (enableMagnificationTool) {\n        this.enableItems(this.zoomInItem.parentElement, enableMagnificationTool);\n        this.enableItems(this.zoomOutItem.parentElement, enableMagnificationTool);\n        this.zoomDropDown.readonly = !enableMagnificationTool;\n    };\n    Toolbar.prototype.enableSelectionTool = function (enableSelectionTool) {\n        if (this.textSelectItem && this.textSelectItem.parentElement) {\n            this.enableItems(this.textSelectItem.parentElement, enableSelectionTool);\n        }\n    };\n    Toolbar.prototype.enableScrollingTool = function (enableScrollingTool) {\n        this.enableItems(this.panItem.parentElement, enableScrollingTool);\n    };\n    Toolbar.prototype.enableDownloadOption = function (enableDownloadOption) {\n        this.enableItems(this.downloadItem.parentElement, enableDownloadOption);\n    };\n    Toolbar.prototype.enablePrintOption = function (enablePrintOption) {\n        this.enableItems(this.printItem.parentElement, enablePrintOption);\n    };\n    Toolbar.prototype.enableSearchOption = function (enableSearchOption) {\n        this.enableItems(this.textSearchItem.parentElement, enableSearchOption);\n    };\n    Toolbar.prototype.enableUndoRedoTool = function (isEnable) {\n        this.enableItems(this.undoItem.parentElement, isEnable);\n        this.enableItems(this.redoItem.parentElement, isEnable);\n    };\n    Toolbar.prototype.enableAnnotationEditTool = function (isEnable) {\n        this.enableItems(this.annotationItem.parentElement, isEnable);\n    };\n    Toolbar.prototype.enableFormDesignerEditTool = function (isEnable) {\n        this.enableItems(this.formDesignerItem.parentElement, isEnable);\n    };\n    Toolbar.prototype.enableCommentsTool = function (isEnable) {\n        if (this.pdfViewer.enableStickyNotesAnnotation) {\n            this.enableItems(this.annotationItem.parentElement, isEnable);\n        }\n    };\n    Toolbar.prototype.enableOrganizePagesButton = function (isEnable) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.organizePageItem) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.organizePageItem.parentElement) &&\n            this.pdfViewer.enablePageOrganizer) {\n            this.enableItems(this.organizePageItem.parentElement, isEnable);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.resetToolbar = function () {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentPageBox)) {\n                this.currentPageBox.min = 0;\n                this.currentPageBox.value = 0;\n            }\n            this.updateTotalPage();\n            this.updateToolbarItems();\n            if (this.pdfViewer.toolbarModule && this.annotationToolbarModule) {\n                this.pdfViewer.toolbarModule.annotationToolbarModule.updateFontSizeInIcon(16);\n            }\n            if (this.annotationToolbarModule) {\n                this.annotationToolbarModule.clear();\n            }\n            else {\n                if (this.annotationToolbarModule) {\n                    if (this.annotationToolbarModule.propertyToolbar) {\n                        this.annotationToolbarModule.propertyToolbar.destroy();\n                    }\n                    var commentsContainer = document.getElementById(this.pdfViewer.element.id + '_commentscontentcontainer');\n                    if (commentsContainer) {\n                        commentsContainer.innerHTML = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.updateToolbarItems = function () {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            if (this.toolbar) {\n                if (this.pdfViewerBase.pageCount === 0) {\n                    this.enableItems(this.downloadItem.parentElement, false);\n                    this.enableItems(this.printItem.parentElement, false);\n                    this.enableItems(this.commentItem.parentElement, false);\n                    this.updateUndoRedoButtons();\n                    this.updateNavigationButtons();\n                    this.enableItems(this.zoomInItem.parentElement, false);\n                    this.enableItems(this.zoomOutItem.parentElement, false);\n                    if (this.pdfViewer.magnificationModule) {\n                        this.zoomDropDown.readonly = true;\n                    }\n                    this.enableItems(this.submitItem.parentElement, false);\n                    this.toolbar.enableItems(this.pdfViewerBase.getElement('_currentPageInputContainer'), false);\n                    this.enableItems(this.pdfViewerBase.getElement('_zoomDropDownContainer'), false);\n                    this.enableItems(this.textSelectItem.parentElement, false);\n                    this.enableItems(this.annotationItem.parentElement, false);\n                    this.enableItems(this.formDesignerItem.parentElement, false);\n                    this.enableItems(this.panItem.parentElement, false);\n                    this.enableItems(this.textSearchItem.parentElement, false);\n                    this.deSelectItem(this.annotationItem);\n                    if (this.annotationToolbarModule) {\n                        this.annotationToolbarModule.resetToolbar();\n                    }\n                    this.deSelectItem(this.formDesignerItem);\n                    if (this.formDesignerToolbarModule) {\n                        this.formDesignerToolbarModule.resetFormDesignerToolbar();\n                    }\n                }\n                else if (this.pdfViewerBase.pageCount > 0) {\n                    var obj = this.pdfViewerBase.getElement('_currentPageInputContainer');\n                    if (obj) {\n                        this.enableItems(this.downloadItem.parentElement, true);\n                        this.enableItems(this.printItem.parentElement, true);\n                        this.toolbar.enableItems(this.pdfViewerBase.getElement('_currentPageInputContainer'), true);\n                        this.enableItems(this.pdfViewerBase.getElement('_zoomDropDownContainer'), true);\n                        this.updateUndoRedoButtons();\n                        this.updateNavigationButtons();\n                        this.updateZoomButtons();\n                        if (this.pdfViewer.magnificationModule) {\n                            this.zoomDropDown.readonly = false;\n                        }\n                        this.updateInteractionItems();\n                        // modify this condition if new annotation types are added.\n                        if (this.pdfViewer.annotationModule && this.pdfViewer.enableAnnotation) {\n                            this.enableItems(this.annotationItem.parentElement, true);\n                        }\n                        if (this.pdfViewer.formDesignerModule && this.pdfViewer.enableFormDesigner) {\n                            this.enableItems(this.formDesignerItem.parentElement, true);\n                        }\n                        if (this.pdfViewer.textSearchModule && this.pdfViewer.enableTextSearch) {\n                            this.enableItems(this.textSearchItem.parentElement, true);\n                        }\n                        if (this.pdfViewer.annotationModule && this.pdfViewer.enableStickyNotesAnnotation) {\n                            this.enableItems(this.commentItem.parentElement, true);\n                        }\n                    }\n                }\n                if (this.pdfViewer.toolbarSettings.annotationToolbarItems) {\n                    if (this.pdfViewer.toolbarSettings.annotationToolbarItems.length === 0 ||\n                        !this.pdfViewer.annotationModule || !this.pdfViewer.enableAnnotationToolbar) {\n                        this.enableToolbarItem(['AnnotationEditTool'], false);\n                    }\n                }\n                if (this.pdfViewer.toolbarSettings.formDesignerToolbarItems) {\n                    if (this.pdfViewer.toolbarSettings.formDesignerToolbarItems.length === 0 ||\n                        !this.pdfViewer.formDesignerModule || !this.pdfViewer.enableFormDesignerToolbar) {\n                        this.enableToolbarItem(['FormDesignerEditTool'], false);\n                    }\n                }\n                if (!this.pdfViewer.enableDownload) {\n                    this.enableDownloadOption(false);\n                }\n                if (!this.pdfViewer.enablePrint) {\n                    this.enablePrintOption(false);\n                }\n            }\n        }\n        else {\n            if (this.pdfViewerBase.pageCount === 0) {\n                this.enableItems(this.textSearchItem.parentElement, false);\n                this.enableItems(this.moreOptionItem.parentElement, false);\n                this.enableItems(this.annotationItem.parentElement, false);\n            }\n            else if (this.pdfViewerBase.pageCount > 0) {\n                this.enableItems(this.textSearchItem.parentElement, true);\n                this.enableItems(this.moreOptionItem.parentElement, true);\n                if (this.pdfViewer.annotationModule && this.pdfViewer.enableAnnotation) {\n                    this.enableItems(this.annotationItem.parentElement, true);\n                }\n                if (!this.pdfViewer.annotationModule || !this.pdfViewer.enableAnnotationToolbar) {\n                    this.enableToolbarItem(['AnnotationEditTool'], false);\n                }\n                this.updateUndoRedoButtons();\n                if (this.pdfViewer && this.pdfViewer.element && this.pdfViewer.element.id && this.pdfViewer.isAnnotationToolbarOpen) {\n                    var annotationId = this.pdfViewer.element.id + '_annotationIcon';\n                    this.annotationToolbarModule.createAnnotationToolbarForMobile(annotationId);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.updateNavigationButtons = function () {\n        if (this.pdfViewer.navigationModule && !this.isPageNavigationToolDisabled) {\n            if (this.pdfViewerBase.pageCount === 0 || (this.pdfViewerBase.currentPageNumber === 1 && this.pdfViewerBase.pageCount === 1)) {\n                this.enableItems(this.firstPageItem.parentElement, false);\n                this.enableItems(this.previousPageItem.parentElement, false);\n                this.enableItems(this.nextPageItem.parentElement, false);\n                this.enableItems(this.lastPageItem.parentElement, false);\n            }\n            else if (this.pdfViewerBase.currentPageNumber === 1 && this.pdfViewerBase.pageCount > 0) {\n                this.enableItems(this.firstPageItem.parentElement, false);\n                this.enableItems(this.previousPageItem.parentElement, false);\n                this.enableItems(this.nextPageItem.parentElement, true);\n                this.enableItems(this.lastPageItem.parentElement, true);\n            }\n            else if (this.pdfViewerBase.currentPageNumber === this.pdfViewerBase.pageCount && this.pdfViewerBase.pageCount > 0) {\n                this.enableItems(this.firstPageItem.parentElement, true);\n                this.enableItems(this.previousPageItem.parentElement, true);\n                this.enableItems(this.nextPageItem.parentElement, false);\n                this.enableItems(this.lastPageItem.parentElement, false);\n            }\n            else if (this.pdfViewerBase.currentPageNumber > 1 && this.pdfViewerBase.currentPageNumber < this.pdfViewerBase.pageCount) {\n                this.enableItems(this.firstPageItem.parentElement, true);\n                this.enableItems(this.previousPageItem.parentElement, true);\n                this.enableItems(this.nextPageItem.parentElement, true);\n                this.enableItems(this.lastPageItem.parentElement, true);\n            }\n        }\n        else {\n            this.enableItems(this.firstPageItem.parentElement, false);\n            this.enableItems(this.previousPageItem.parentElement, false);\n            this.enableItems(this.nextPageItem.parentElement, false);\n            this.enableItems(this.lastPageItem.parentElement, false);\n            this.currentPageBox.readonly = true;\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.updateZoomButtons = function () {\n        if (this.pdfViewer.magnificationModule && !this.isMagnificationToolDisabled && (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ||\n            this.pdfViewer.enableDesktopMode)) {\n            if (this.pdfViewer.minZoom != null || this.pdfViewer.maxZoom != null) {\n                if (this.pdfViewer.magnificationModule.zoomFactor <= this.pdfViewer.minZoom / 100) {\n                    this.enableItems(this.zoomInItem.parentElement, true);\n                    this.enableItems(this.zoomOutItem.parentElement, false);\n                }\n                else if (this.pdfViewer.magnificationModule.zoomFactor >= this.pdfViewer.maxZoom / 100) {\n                    this.enableItems(this.zoomInItem.parentElement, false);\n                    this.enableItems(this.zoomOutItem.parentElement, true);\n                }\n                else {\n                    this.enableItems(this.zoomInItem.parentElement, true);\n                    this.enableItems(this.zoomOutItem.parentElement, true);\n                }\n            }\n            else {\n                if (this.pdfViewer.magnificationModule.zoomFactor <= 0.1) {\n                    this.enableItems(this.zoomInItem.parentElement, true);\n                    this.enableItems(this.zoomOutItem.parentElement, false);\n                }\n                else if (this.pdfViewer.magnificationModule.zoomFactor >= 4) {\n                    this.enableItems(this.zoomInItem.parentElement, false);\n                    this.enableItems(this.zoomOutItem.parentElement, true);\n                }\n                else {\n                    this.enableItems(this.zoomInItem.parentElement, true);\n                    this.enableItems(this.zoomOutItem.parentElement, true);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.updateUndoRedoButtons = function () {\n        if (this.pdfViewer.annotationModule) {\n            if (this.pdfViewerBase.pageCount > 0) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                    this.enableCollectionAvailableInBlazor(this.pdfViewer.annotationModule.actionCollection, 'undo');\n                    this.enableCollectionAvailableInBlazor(this.pdfViewer.annotationModule.redoCollection, 'redo');\n                }\n                else {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.undoItem) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.undoItem.parentElement)) {\n                        this.enableCollectionAvailable(this.pdfViewer.annotationModule.actionCollection, this.undoItem.parentElement);\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.redoItem) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.redoItem.parentElement)) {\n                        this.enableCollectionAvailable(this.pdfViewer.annotationModule.redoCollection, this.redoItem.parentElement);\n                    }\n                }\n            }\n            else {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                    //this.pdfViewer._dotnetInstance.invokeMethodAsync('DisableUndoRedoButton', null);\n                    this.pdfViewerBase.blazorUIAdaptor.disableUndoRedoButton();\n                }\n                else {\n                    this.disableUndoRedoButtons();\n                }\n            }\n        }\n        else {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                //this.pdfViewer._dotnetInstance.invokeMethodAsync('DisableUndoRedoButton', null);\n                this.pdfViewerBase.blazorUIAdaptor.disableUndoRedoButton();\n            }\n            else {\n                this.disableUndoRedoButtons();\n            }\n        }\n    };\n    Toolbar.prototype.enableCollectionAvailable = function (collection, item) {\n        if (collection.length > 0) {\n            this.toolbar.enableItems(item, true);\n        }\n        else {\n            this.toolbar.enableItems(item, false);\n        }\n    };\n    Toolbar.prototype.enableCollectionAvailableInBlazor = function (collection, item) {\n        if (collection.length > 0) {\n            //this.pdfViewer._dotnetInstance.invokeMethodAsync('UpdateUndoRedoButton', item, true);\n            this.pdfViewerBase.blazorUIAdaptor.updateUndoRedoButton(item, true);\n        }\n        else {\n            // this.pdfViewer._dotnetInstance.invokeMethodAsync('UpdateUndoRedoButton', item, false);\n            this.pdfViewerBase.blazorUIAdaptor.updateUndoRedoButton(item, false);\n        }\n    };\n    Toolbar.prototype.disableUndoRedoButtons = function () {\n        this.enableItems(this.undoItem.parentElement, false);\n        this.enableItems(this.redoItem.parentElement, false);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.unWireEvent();\n            this.destroyComponent();\n            if (this.moreDropDown) {\n                this.moreDropDown.destroy();\n            }\n            if (this.annotationToolbarModule) {\n                this.annotationToolbarModule.destroy();\n            }\n            if (this.formDesignerToolbarModule) {\n                this.formDesignerToolbarModule.destroy();\n            }\n            if (this.toolbar) {\n                this.toolbar.destroy();\n            }\n            if (this.toolbarElement) {\n                this.toolbarElement.parentElement.removeChild(this.toolbarElement);\n            }\n        }\n    };\n    Toolbar.prototype.destroyComponent = function () {\n        var componentElement = [this.openDocumentItem, this.firstPageItem, this.previousPageItem, this.nextPageItem,\n            this.lastPageItem, this.currentPageBoxElement, this.zoomOutItem, this.zoomInItem, this.zoomDropdownItem, this.textSelectItem,\n            this.panItem, this.submitItem, this.undoItem, this.redoItem, this.commentItem, this.textSearchItem, this.annotationItem,\n            this.formDesignerItem, this.printItem, this.downloadItem];\n        for (var i = 0; i < componentElement.length; i++) {\n            if (componentElement[parseInt(i.toString(), 10)]) {\n                this.destroyDependentComponent(componentElement[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    Toolbar.prototype.destroyDependentComponent = function (component) {\n        if (component.ej2_instances) {\n            for (var i = component.ej2_instances.length - 1; i >= 0; i--) {\n                component.ej2_instances[parseInt(i.toString(), 10)].destroy();\n            }\n        }\n    };\n    /**\n     * @param {number} pageIndex - It describes about the page index\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.updateCurrentPage = function (pageIndex) {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentPageBox)) {\n                    if (this.currentPageBox.value === pageIndex) {\n                        this.currentPageBoxElement.value = pageIndex.toString();\n                    }\n                    this.currentPageBox.value = pageIndex;\n                }\n            }\n            else {\n                //this.pdfViewer._dotnetInstance.invokeMethodAsync('OnPageChanged', pageIndex);\n                this.pdfViewerBase.blazorUIAdaptor.pageChanged(pageIndex);\n            }\n            this.pdfViewerBase.currentPageNumber = pageIndex;\n            this.pdfViewer.currentPageNumber = pageIndex;\n        }\n        else {\n            this.pdfViewerBase.mobileSpanContainer.innerHTML = pageIndex.toString();\n            this.pdfViewerBase.mobilecurrentPageContainer.innerHTML = pageIndex.toString();\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.updateTotalPage = function () {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            if (this.pdfViewerBase.pageCount > 0) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentPageBox)) {\n                    this.currentPageBox.min = 1;\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.totalPageItem)) {\n                this.totalPageItem.textContent = this.pdfViewer.localeObj.getConstant('of') + this.pdfViewerBase.pageCount.toString();\n            }\n        }\n    };\n    /**\n     * @param {event} event - It describes about the event\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.openFileDialogBox = function (event) {\n        event.preventDefault();\n        this.fileInputElement.click();\n    };\n    Toolbar.prototype.createToolbar = function (controlWidth) {\n        var _this = this;\n        this.toolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: this.pdfViewer.element.id + '_toolbarContainer', className: 'e-pv-toolbar' });\n        this.pdfViewerBase.viewerMainContainer.appendChild(this.toolbarElement);\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            this.toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({\n                clicked: this.toolbarClickHandler, width: '', height: '', overflowMode: 'Popup', cssClass: 'e-pv-toolbar-scroll',\n                items: this.createToolbarItems(), created: function () {\n                    _this.createZoomDropdown();\n                    _this.createNumericTextBox();\n                    _this.toolbar.refreshOverflow();\n                }\n            });\n            this.toolbar.isStringTemplate = true;\n            if (this.pdfViewer.enableRtl) {\n                this.toolbar.enableRtl = true;\n            }\n            this.toolbar.appendTo(this.toolbarElement);\n            this.applyToolbarSettings();\n            this.afterToolbarCreation();\n            this.updateTotalPage();\n            this.toolbarElement.addEventListener('keydown', this.onToolbarKeydown);\n            this.toolbarElement.setAttribute('aria-label', 'Toolbar');\n        }\n        else {\n            this.createToolbarItemsForMobile();\n            this.afterToolbarCreationInMobile();\n            if (this.pdfViewer.enableRtl) {\n                this.toolbar.enableRtl = true;\n            }\n            this.applyToolbarSettingsForMobile();\n            this.disableUndoRedoButtons();\n        }\n        return this.toolbarElement;\n    };\n    /**\n     * Create a custom toolbar item in the PdfViewer\n     *\n     * @param  {number} startIndex - It describes about the start index\n     * @returns {void}\n     */\n    Toolbar.prototype.createCustomItem = function (startIndex) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.toolbarSettings)) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.toolbarSettings.toolbarItems)) {\n                this.pdfViewer.toolbarSettings.toolbarItems = ['OpenOption', 'PageNavigationTool', 'MagnificationTool', 'SelectionTool',\n                    'PanTool', 'UndoRedoTool', 'CommentTool', 'SubmitForm', 'SearchOption', 'AnnotationEditTool',\n                    'FormDesignerEditTool', 'PrintOption', 'DownloadOption'];\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.toolbarSettings.annotationToolbarItems)) {\n                this.pdfViewer.toolbarSettings.annotationToolbarItems = ['HighlightTool', 'UnderlineTool', 'StrikethroughTool',\n                    'ColorEditTool', 'OpacityEditTool', 'AnnotationDeleteTool', 'StampAnnotationTool', 'HandWrittenSignatureTool',\n                    'InkAnnotationTool', 'ShapeTool', 'CalibrateTool', 'StrokeColorEditTool', 'ThicknessEditTool',\n                    'FreeTextAnnotationTool', 'FontFamilyAnnotationTool', 'FontSizeAnnotationTool', 'FontStylesAnnotationTool',\n                    'FontAlignAnnotationTool', 'FontColorAnnotationTool', 'CommentPanelTool'];\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.toolbarSettings.formDesignerToolbarItems)) {\n                this.pdfViewer.toolbarSettings.formDesignerToolbarItems = ['TextboxTool', 'PasswordTool', 'CheckBoxTool',\n                    'RadioButtonTool', 'DropdownTool', 'ListboxTool', 'DrawSignatureTool', 'DeleteTool'];\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.toolbarSettings.showTooltip)) {\n                this.pdfViewer.toolbarSettings.showTooltip = false;\n            }\n        }\n        for (var j = startIndex; j < this.pdfViewer.toolbarSettings.toolbarItems.length; j++) {\n            if (typeof (this.pdfViewer.toolbarSettings.toolbarItems[parseInt(j.toString(), 10)]) === 'object') {\n                var customToolbarItem = this.pdfViewer.toolbarSettings.toolbarItems[parseInt(j.toString(), 10)];\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(customToolbarItem.prefixIcon) && customToolbarItem.prefixIcon !== '') {\n                    customToolbarItem.prefixIcon += ' e-pv-icon';\n                }\n                //Generate a text button template\n                if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(customToolbarItem.prefixIcon) || customToolbarItem.prefixIcon === '') && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(customToolbarItem.template)) {\n                    var text = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(customToolbarItem.text) ? customToolbarItem.text : 'Custom Toolbar Item';\n                    customToolbarItem.template = '<button id=\"Custom\" class=\"e-tbar-btn\" style=\"font-size:14px\"><span>' + text + '</span></button>';\n                }\n                this.toolItems.push(customToolbarItem);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(customToolbarItem.align) || customToolbarItem.align === 'left' || customToolbarItem.align === 'Left') {\n                    this.toolItems.push({ type: 'Separator', align: 'Left' });\n                }\n            }\n            else {\n                break;\n            }\n        }\n    };\n    Toolbar.prototype.createToolbarItems = function () {\n        var currentPageInputTemplate = this.createCurrentPageInputTemplate();\n        var totalPageTemplate = this.createTotalPageTemplate();\n        var zoomDropDownTemplateString = this.createZoomDropdownElement();\n        var submitButton = '<button id=\"' + this.pdfViewer.element.id + '_submitForm\" class=\"e-tbar-btn\" style=\"font-size:15px\"><span id=\"' + this.pdfViewer.element.id + '_submitFormSpan\" class=\"e-tbar-btn-text e-pv-submitform-text\">' + this.pdfViewer.localeObj.getConstant('SubmitForm') + '</span></button>';\n        var defaultToolbarOrder = ['OpenOption', 'PageNavigationTool', 'MagnificationTool', 'SelectionTool', 'PanTool', 'UndoRedoTool', 'CommentTool', 'SubmitForm', 'SearchOption', 'AnnotationEditTool', 'FormDesignerEditTool', 'PrintOption', 'DownloadOption'];\n        for (var i = 0; i < defaultToolbarOrder.length; i++) {\n            if (i === 0) {\n                this.createCustomItem(i);\n            }\n            var toolbarItemOrder = i;\n            switch (toolbarItemOrder) {\n                case 0:\n                    this.itemsIndexArray.push({ item: 'OpenOption', startIndex: this.toolItems.length, endIndex: this.toolItems.length });\n                    this.toolItems.push({ prefixIcon: 'e-pv-open-document-icon e-pv-icon', cssClass: 'e-pv-open-document-container', id: this.pdfViewer.element.id + '_open', text: this.pdfViewer.localeObj.getConstant('Open text'), align: 'Left' });\n                    this.toolItems.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-open-separator-container' });\n                    break;\n                case 1:\n                    if (!this.pdfViewer.enableRtl) {\n                        this.itemsIndexArray.push({ item: 'PageNavigationTool', startIndex: this.toolItems.length, endIndex: this.toolItems.length + 5 });\n                        this.toolItems.push({ prefixIcon: 'e-pv-first-page-navigation-icon e-pv-icon', cssClass: 'e-pv-first-page-navigation-container', id: this.pdfViewer.element.id + '_firstPage', text: this.pdfViewer.localeObj.getConstant('First text'), align: 'Left' });\n                        this.toolItems.push({ prefixIcon: 'e-pv-previous-page-navigation-icon e-pv-icon', cssClass: 'e-pv-previous-page-navigation-container', id: this.pdfViewer.element.id + '_previousPage', text: this.pdfViewer.localeObj.getConstant('Previous text'), align: 'Left' });\n                        this.toolItems.push({ prefixIcon: 'e-pv-next-page-navigation-icon e-pv-icon', cssClass: 'e-pv-next-page-navigation-container', id: this.pdfViewer.element.id + '_nextPage', text: this.pdfViewer.localeObj.getConstant('Next text'), align: 'Left' });\n                        this.toolItems.push({ prefixIcon: 'e-pv-last-page-navigation-icon e-pv-icon', cssClass: 'e-pv-last-page-navigation-container', id: this.pdfViewer.element.id + '_lastPage', text: this.pdfViewer.localeObj.getConstant('Last text'), align: 'Left' });\n                        this.toolItems.push({ template: currentPageInputTemplate, align: 'Left', cssClass: 'e-pv-current-page-container' });\n                        this.toolItems.push({ template: totalPageTemplate, align: 'Left', cssClass: 'e-pv-total-page-container' });\n                    }\n                    else {\n                        this.toolItems.push({ prefixIcon: 'e-pv-last-page-navigation-icon e-pv-icon', cssClass: 'e-pv-last-page-navigation-container', id: this.pdfViewer.element.id + '_firstPage', text: this.pdfViewer.localeObj.getConstant('First text'), align: 'Left' });\n                        this.toolItems.push({ prefixIcon: 'e-pv-next-page-navigation-icon e-pv-icon', cssClass: 'e-pv-next-page-navigation-container', id: this.pdfViewer.element.id + '_previousPage', text: this.pdfViewer.localeObj.getConstant('Previous text'), align: 'Left' });\n                        this.toolItems.push({ prefixIcon: 'e-pv-previous-page-navigation-icon e-pv-icon', cssClass: 'e-pv-previous-page-navigation-container', id: this.pdfViewer.element.id + '_nextPage', text: this.pdfViewer.localeObj.getConstant('Next text'), align: 'Left' });\n                        this.toolItems.push({ prefixIcon: 'e-pv-first-page-navigation-icon e-pv-icon', cssClass: 'e-pv-first-page-navigation-container', id: this.pdfViewer.element.id + '_lastPage', text: this.pdfViewer.localeObj.getConstant('Last text'), align: 'Left' });\n                        this.toolItems.push({ template: totalPageTemplate, align: 'Left', cssClass: 'e-pv-total-page-container' });\n                        this.toolItems.push({ template: currentPageInputTemplate, align: 'Left', cssClass: 'e-pv-current-page-container' });\n                    }\n                    this.toolItems.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-navigation-separator-container' });\n                    break;\n                case 2:\n                    this.itemsIndexArray.push({ item: 'MagnificationTool', startIndex: this.toolItems.length, endIndex: this.toolItems.length + 2 });\n                    this.toolItems.push({ prefixIcon: 'e-pv-zoom-out-icon e-pv-icon', cssClass: 'e-pv-zoom-out-container', id: this.pdfViewer.element.id + '_zoomOut', text: this.pdfViewer.localeObj.getConstant('Zoom out text'), align: 'Left' });\n                    this.toolItems.push({ prefixIcon: 'e-pv-zoom-in-icon e-pv-icon', cssClass: 'e-pv-zoom-in-container', id: this.pdfViewer.element.id + '_zoomIn', text: this.pdfViewer.localeObj.getConstant('Zoom in text'), align: 'Left' });\n                    this.toolItems.push({ template: zoomDropDownTemplateString, cssClass: 'e-pv-zoom-drop-down-container', align: 'Left' });\n                    this.toolItems.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-magnification-separator-container' });\n                    break;\n                case 3:\n                    this.itemsIndexArray.push({ item: 'SelectionTool', startIndex: this.toolItems.length, endIndex: this.toolItems.length });\n                    this.toolItems.push({ prefixIcon: 'e-pv-text-select-tool-icon e-pv-icon', cssClass: 'e-pv-text-select-tool-container', id: this.pdfViewer.element.id + '_selectTool', text: this.pdfViewer.localeObj.getConstant('Selection text') });\n                    break;\n                case 4:\n                    this.itemsIndexArray.push({ item: 'PanTool', startIndex: this.toolItems.length, endIndex: this.toolItems.length });\n                    this.toolItems.push({ prefixIcon: 'e-pv-pan-tool-icon e-pv-icon', cssClass: 'e-pv-pan-tool-container', id: this.pdfViewer.element.id + '_handTool', text: this.pdfViewer.localeObj.getConstant('Pan text') });\n                    this.toolItems.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-pan-separator-container' });\n                    break;\n                case 5:\n                    this.itemsIndexArray.push({ item: 'UndoRedoTool', startIndex: this.toolItems.length, endIndex: this.toolItems.length + 1 });\n                    this.toolItems.push({ prefixIcon: 'e-pv-undo-icon e-pv-icon', cssClass: 'e-pv-undo-container', id: this.pdfViewer.element.id + '_undo', text: this.pdfViewer.localeObj.getConstant('Undo'), align: 'Left' });\n                    this.toolItems.push({ prefixIcon: 'e-pv-redo-icon e-pv-icon', cssClass: 'e-pv-redo-container', id: this.pdfViewer.element.id + '_redo', text: this.pdfViewer.localeObj.getConstant('Redo'), align: 'Left' });\n                    this.toolItems.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-undo-separator-container' });\n                    break;\n                case 6:\n                    this.itemsIndexArray.push({ item: 'CommentTool', startIndex: this.toolItems.length, endIndex: this.toolItems.length + 1 });\n                    this.toolItems.push({ prefixIcon: 'e-pv-comment-icon e-pv-icon', cssClass: 'e-pv-comment-container', id: this.pdfViewer.element.id + '_comment', text: this.pdfViewer.localeObj.getConstant('Add Comments'), align: 'Left' });\n                    this.toolItems.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-comment-separator-container' });\n                    break;\n                case 7:\n                    this.itemsIndexArray.push({ item: 'SubmitForm', startIndex: this.toolItems.length, endIndex: this.toolItems.length });\n                    this.toolItems.push({ template: submitButton, cssClass: 'e-pv-submit', align: 'Left' });\n                    break;\n                case 8:\n                    this.itemsIndexArray.push({ item: 'SearchOption', startIndex: this.toolItems.length, endIndex: this.toolItems.length });\n                    this.toolItems.push({ prefixIcon: 'e-pv-text-search-icon e-pv-icon', cssClass: 'e-pv-text-search-container', id: this.pdfViewer.element.id + '_search', text: this.pdfViewer.localeObj.getConstant('Search text'), align: 'Right' });\n                    break;\n                case 9:\n                    this.itemsIndexArray.push({ item: 'AnnotationEditTool', startIndex: this.toolItems.length, endIndex: this.toolItems.length });\n                    this.toolItems.push({ prefixIcon: 'e-pv-annotation-icon e-pv-icon', cssClass: 'e-pv-annotation-container', id: this.pdfViewer.element.id + '_annotation', text: this.pdfViewer.localeObj.getConstant('Annotation Edit text'), align: 'Right' });\n                    break;\n                case 10:\n                    this.itemsIndexArray.push({ item: 'FormDesignerEditTool', startIndex: this.toolItems.length, endIndex: this.toolItems.length });\n                    this.toolItems.push({ prefixIcon: 'e-pv-formdesigner-icon e-pv-icon', cssClass: 'e-pv-formdesigner-container', id: this.pdfViewer.element.id + '_formdesigner', text: this.pdfViewer.localeObj.getConstant('FormDesigner Edit text'), align: 'Right' });\n                    break;\n                case 11:\n                    this.itemsIndexArray.push({ item: 'PrintOption', startIndex: this.toolItems.length, endIndex: this.toolItems.length });\n                    this.toolItems.push({ prefixIcon: 'e-pv-print-document-icon e-pv-icon', cssClass: 'e-pv-print-document-container', id: this.pdfViewer.element.id + '_print', text: this.pdfViewer.localeObj.getConstant('Print text'), align: 'Right' });\n                    break;\n                case 12:\n                    this.itemsIndexArray.push({ item: 'DownloadOption', startIndex: this.toolItems.length, endIndex: this.toolItems.length });\n                    this.toolItems.push({ prefixIcon: 'e-pv-download-document-icon e-pv-icon', cssClass: 'e-pv-download-document-container', id: this.pdfViewer.element.id + '_download', text: this.pdfViewer.localeObj.getConstant('Download'), align: 'Right' });\n                    break;\n            }\n            for (var k = 0; k < this.pdfViewer.toolbarSettings.toolbarItems.length; k++) {\n                if (defaultToolbarOrder[parseInt(i.toString(), 10)] ===\n                    this.pdfViewer.toolbarSettings.toolbarItems[parseInt(k.toString(), 10)]) {\n                    if (typeof (this.pdfViewer.toolbarSettings.toolbarItems[k + 1]) === 'object') {\n                        this.createCustomItem(k + 1);\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n        }\n        return this.toolItems;\n    };\n    Toolbar.prototype.afterToolbarCreationInMobile = function () {\n        this.itemsContainer = this.toolbar.element.childNodes[0];\n        this.itemsContainer.id = this.pdfViewer.element.id + '_toolbarItemsContainer';\n        this.openDocumentItem = this.addClassToolbarItem('_open', 'e-pv-open-document', this.pdfViewer.localeObj.getConstant('Open'));\n        this.undoItem = this.addClassToolbarItem('_undo', 'e-pv-undo', this.pdfViewer.localeObj.getConstant('Undo'));\n        this.redoItem = this.addClassToolbarItem('_redo', 'e-pv-redo', this.pdfViewer.localeObj.getConstant('Redo'));\n        this.annotationItem = this.addClassToolbarItem('_annotation', 'e-pv-annotation', this.pdfViewer.localeObj.getConstant('Annotation'));\n        this.textSearchItem = this.addClassToolbarItem('_search', 'e-pv-text-search', this.pdfViewer.localeObj.getConstant('Text Search'));\n    };\n    Toolbar.prototype.afterToolbarCreation = function () {\n        var isMac = navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i) ? true : false;\n        this.itemsContainer = this.toolbar.element.childNodes[0];\n        this.itemsContainer.id = this.pdfViewer.element.id + '_toolbarItemsContainer';\n        this.openDocumentItem = this.addClassToolbarItem('_open', 'e-pv-open-document', this.pdfViewer.localeObj.getConstant('Open') + (isMac ? ' (⌘+O)' : ' (Ctrl+O)'));\n        this.undoItem = this.addClassToolbarItem('_undo', 'e-pv-undo', this.pdfViewer.localeObj.getConstant('Undo') + (isMac ? ' (⌘+Z)' : ' (Ctrl+Z)'));\n        this.redoItem = this.addClassToolbarItem('_redo', 'e-pv-redo', this.pdfViewer.localeObj.getConstant('Redo') + (isMac ? ' (⌘+Y)' : ' (Ctrl+Y)'));\n        if (!this.pdfViewer.enableRtl) {\n            this.firstPageItem = this.addClassToolbarItem('_firstPage', 'e-pv-first-page-navigation', this.pdfViewer.localeObj.getConstant('Go To First Page') + (isMac ? ' (⌘+← or ⌘+↑)' : ' (Ctrl+← or Ctrl+↑)'));\n            this.previousPageItem = this.addClassToolbarItem('_previousPage', 'e-pv-previous-page-navigation', this.pdfViewer.localeObj.getConstant('Previous Page') + (' (←)'));\n            this.nextPageItem = this.addClassToolbarItem('_nextPage', 'e-pv-next-page-navigation', this.pdfViewer.localeObj.getConstant('Next Page') + (' (→)'));\n            this.lastPageItem = this.addClassToolbarItem('_lastPage', 'e-pv-last-page-navigation', this.pdfViewer.localeObj.getConstant('Go To Last Page') + (isMac ? ' (⌘+→ or ⌘+↓)' : ' (Ctrl+→ or Ctrl+↓)'));\n        }\n        else {\n            this.firstPageItem = this.addClassToolbarItem('_firstPage', 'e-pv-last-page-navigation', this.pdfViewer.localeObj.getConstant('Go To First Page') + (isMac ? ' (⌘+← or ⌘+↑)' : ' (Ctrl+← or Ctrl+↑)'));\n            this.previousPageItem = this.addClassToolbarItem('_previousPage', 'e-pv-next-page-navigation', this.pdfViewer.localeObj.getConstant('Previous Page') + (' (←)'));\n            this.nextPageItem = this.addClassToolbarItem('_nextPage', 'e-pv-previous-page-navigation', this.pdfViewer.localeObj.getConstant('Next Page') + (' (→)'));\n            this.lastPageItem = this.addClassToolbarItem('_lastPage', 'e-pv-first-page-navigation', this.pdfViewer.localeObj.getConstant('Go To Last Page') + (isMac ? ' (⌘+→ or ⌘+↓)' : ' (Ctrl+→ or Ctrl+↓)'));\n        }\n        this.zoomOutItem = this.addClassToolbarItem('_zoomOut', 'e-pv-zoom-out', this.pdfViewer.localeObj.getConstant('Zoom Out') + (isMac ? ' (⌘+Minus)' : ' (Ctrl+Minus)'));\n        this.zoomInItem = this.addClassToolbarItem('_zoomIn', 'e-pv-zoom-in', this.pdfViewer.localeObj.getConstant('Zoom In') + (isMac ? ' (⌘+Plus)' : ' (Ctrl+Plus)'));\n        this.textSelectItem = this.addClassToolbarItem('_selectTool', 'e-pv-text-select-tool', this.pdfViewer.localeObj.getConstant('Text Selection') + (isMac ? ' (⇧+V)' : ' (Shift+V)'));\n        this.panItem = this.addClassToolbarItem('_handTool', 'e-pv-pan-tool', this.pdfViewer.localeObj.getConstant('Panning') + (isMac ? ' (⇧+H)' : ' (Shift+H)'));\n        this.commentItem = this.addClassToolbarItem('_comment', 'e-pv-comment', this.pdfViewer.localeObj.getConstant('Add Comments'));\n        this.textSearchItem = this.addClassToolbarItem('_search', 'e-pv-text-search', this.pdfViewer.localeObj.getConstant('Text Search') + (isMac ? ' (⌘+F)' : ' (Ctrl+F)'));\n        this.textSearchItem.setAttribute('aria-label', this.pdfViewer.localeObj.getConstant('Search text'));\n        this.annotationItem = this.addClassToolbarItem('_annotation', 'e-pv-annotation', this.pdfViewer.localeObj.getConstant('Annotation') + (isMac ? ' (⌘+⇧+A)' : ' (Ctrl+Shift+A)'));\n        this.annotationItem.setAttribute('aria-label', this.pdfViewer.localeObj.getConstant('Annotation Edit text'));\n        this.formDesignerItem = this.addClassToolbarItem('_formdesigner', 'e-pv-formdesigner', this.pdfViewer.localeObj.getConstant('FormDesigner'));\n        this.printItem = this.addClassToolbarItem('_print', 'e-pv-print-document', this.pdfViewer.localeObj.getConstant('Print') + (isMac ? ' (⌘+P)' : ' (Ctrl+P)'));\n        this.downloadItem = this.addClassToolbarItem('_download', 'e-pv-download-document', this.pdfViewer.localeObj.getConstant('Download file') + (isMac ? ' (⌘+S)' : ' (Ctrl+S)'));\n        this.zoomDropdownItem = this.pdfViewerBase.getElement('_zoomDropDown');\n        this.createTooltip(this.zoomDropdownItem, this.pdfViewer.localeObj.getConstant('Zoom'));\n        this.zoomDropdownItem.setAttribute('aria-label', this.pdfViewer.localeObj.getConstant('Zoom'));\n        this.addPropertiesToolItemContainer(this.zoomDropdownItem.parentElement.parentElement, null, '_zoomDropDownContainer');\n        this.createTooltip(this.currentPageBoxElement, this.pdfViewer.localeObj.getConstant('Page Number') + (isMac ? ' (⌘+G)' : ' (Ctrl+G)'));\n        this.currentPageBoxElement.setAttribute('aria-label', this.pdfViewer.localeObj.getConstant('Page Number'));\n        this.submitItem = this.pdfViewerBase.getElement('_submitForm');\n        this.addPropertiesToolItemContainer(this.submitItem.parentElement, 'e-pv-submit', '_submitFormContainer');\n        this.createTooltip(this.submitItem, this.pdfViewer.localeObj.getConstant('SubmitForm'));\n        this.submitItem.setAttribute('aria-label', this.pdfViewer.localeObj.getConstant('SubmitForm'));\n        this.addPropertiesToolItemContainer(this.currentPageBoxElement.parentElement.parentElement, 'e-pv-current-page-container', '_currentPageInputContainer');\n        this.pdfViewerBase.getElement('_currentPageInputContainer').style.minWidth = '20px';\n        this.totalPageItem = this.pdfViewerBase.getElement('_totalPage');\n        this.addPropertiesToolItemContainer(this.totalPageItem.parentElement, 'e-pv-total-page-container', '_totalPageContainer');\n    };\n    /**\n     * @param {string} idString - It describes about the idString value\n     * @param {string} className - It describes about the class name\n     * @param {string} tooltipText - It describes about the tooltip text\n     * @private\n     * @returns {HTMLElement} - html element\n     */\n    Toolbar.prototype.addClassToolbarItem = function (idString, className, tooltipText) {\n        var element = this.pdfViewerBase.getElement(idString);\n        element.classList.add(className);\n        element.classList.add('e-pv-tbar-btn');\n        element.setAttribute('aria-label', tooltipText);\n        element.parentElement.classList.add(className + '-container');\n        element.parentElement.classList.add('e-popup-text');\n        element.parentElement.id = this.pdfViewer.element.id + idString + 'Container';\n        if (element.childNodes.length > 0) {\n            var spanElement = element.childNodes[0];\n            spanElement.id = this.pdfViewer.element.id + idString + 'Icon';\n            spanElement.classList.remove('e-icons');\n            spanElement.classList.remove('e-btn-icon');\n            if (this.pdfViewer.enableRtl) {\n                spanElement.classList.add('e-right');\n            }\n            var textElement = element.childNodes[1];\n            if (textElement) {\n                if (textElement.classList.contains('e-tbar-btn-text')) {\n                    textElement.id = this.pdfViewer.element.id + idString + 'Text';\n                }\n            }\n        }\n        element.style.width = '';\n        this.createTooltip(element, tooltipText);\n        return element;\n    };\n    Toolbar.prototype.addPropertiesToolItemContainer = function (element, className, idString) {\n        if (className !== null) {\n            element.classList.add(className);\n        }\n        element.classList.add('e-popup-text');\n        element.id = this.pdfViewer.element.id + idString;\n    };\n    Toolbar.prototype.createZoomDropdownElement = function () {\n        var zoomDropdownElement = this.createToolbarItem('input', this.pdfViewer.element.id + '_zoomDropDown', null);\n        return zoomDropdownElement.outerHTML;\n    };\n    Toolbar.prototype.createZoomDropdown = function () {\n        // eslint-disable-next-line\n        var proxy = this;\n        var minZoom = proxy.pdfViewer.minZoom;\n        var maxZoom = proxy.pdfViewer.maxZoom;\n        var items = [];\n        var zoomValues = [10, 25, 50, 75, 100, 125, 150, 200, 400];\n        if (minZoom != null && maxZoom != null && minZoom > maxZoom) {\n            var tempZoomValue = maxZoom;\n            maxZoom = minZoom;\n            minZoom = tempZoomValue;\n        }\n        if (minZoom != null || maxZoom != null) {\n            var isWithinRange = function (zoom) {\n                return (minZoom == null || zoom >= minZoom) && (maxZoom == null || zoom <= maxZoom);\n            };\n            var idCounter = 0;\n            if (minZoom != null && !items.some(function (item) { return parseInt(item.id, 10) === minZoom; })) {\n                items.push({ percent: minZoom + '%', id: idCounter.toString() });\n                idCounter++;\n            }\n            for (var i = 0; i < zoomValues.length; i++) {\n                var zoom = zoomValues[parseInt(i.toString(), 10)];\n                if (isWithinRange(zoom) && zoom !== minZoom && zoom !== maxZoom) {\n                    items.push({ percent: zoom + '%', id: idCounter.toString() });\n                    idCounter++;\n                }\n            }\n            if (maxZoom != null && !items.some(function (item) { return parseInt(item.id, 10) === maxZoom; }) && maxZoom !== minZoom) {\n                items.push({ percent: maxZoom + '%', id: idCounter.toString() });\n                idCounter++;\n            }\n            items.sort(function (a, b) { return parseInt(a.id, 10) - parseInt(b.id, 10); });\n        }\n        else {\n            items.push({ percent: '10%', id: '0' }, { percent: '35%', id: '1' }, { percent: '50%', id: '2' }, { percent: '75%', id: '3' }, { percent: '100%', id: '4' }, { percent: '125%', id: '5' }, { percent: '150%', id: '6' }, { percent: '200%', id: '7' }, { percent: '400%', id: '8' });\n        }\n        items.push({ percent: proxy.pdfViewer.localeObj.getConstant('Fit Page'), id: 'fitPage' }, { percent: proxy.pdfViewer.localeObj.getConstant('Fit Width'), id: 'fitWidth' }, { percent: proxy.pdfViewer.localeObj.getConstant('Automatic'), id: 'automatic' });\n        if (!proxy.pdfViewer.enableRtl) {\n            proxy.zoomDropDown = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_3__.ComboBox({\n                dataSource: items, text: '100%', fields: { text: 'percent', value: 'id' }, readonly: true, cssClass: 'e-pv-zoom-drop-down', popupHeight: '450px', showClearButton: false, open: proxy.openZoomDropdown.bind(proxy), select: function (args) {\n                    if (args.e.type === 'keydown' && args.itemData.percent !== proxy.zoomDropDown.element.value) {\n                        proxy.zoomDropDownChange(proxy.zoomDropDown.element.value);\n                        args.cancel = true;\n                    }\n                }\n            });\n        }\n        else {\n            proxy.zoomDropDown = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_3__.ComboBox({\n                dataSource: items, text: '100%', enableRtl: true, fields: { text: 'percent', value: 'id' }, readonly: true, cssClass: 'e-pv-zoom-drop-down-rtl', popupHeight: '450px', showClearButton: false, open: proxy.openZoomDropdown.bind(proxy), select: function (args) {\n                    if (args.e.type === 'keydown' && args.itemData.percent !== proxy.zoomDropDown.element.value) {\n                        proxy.zoomDropDownChange(proxy.zoomDropDown.element.value);\n                        args.cancel = true;\n                    }\n                }\n            });\n        }\n        proxy.zoomDropDown.appendTo(proxy.pdfViewerBase.getElement('_zoomDropDown'));\n    };\n    Toolbar.prototype.createCurrentPageInputTemplate = function () {\n        var goToPageElement = this.createToolbarItem('input', this.pdfViewer.element.id + '_currentPageInput', null);\n        return goToPageElement.outerHTML;\n    };\n    Toolbar.prototype.createTotalPageTemplate = function () {\n        var totalPageElement = this.createToolbarItem('span', this.pdfViewer.element.id + '_totalPage', 'e-pv-total-page');\n        return totalPageElement.outerHTML;\n    };\n    Toolbar.prototype.createNumericTextBox = function () {\n        this.currentPageBox = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.NumericTextBox({ value: 0, format: '##', cssClass: 'e-pv-current-page-box', showSpinButton: false });\n        this.currentPageBoxElement = this.pdfViewerBase.getElement('_currentPageInput');\n        this.currentPageBox.appendTo(this.currentPageBoxElement);\n    };\n    Toolbar.prototype.createToolbarItemsForMobile = function () {\n        this.toolbarElement.classList.add('e-pv-mobile-toolbar');\n        var template = '<button id=\"' + this.pdfViewer.element.id + '_more_option\" class=\"e-tbar-btn\"></button>';\n        this.toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({\n            items: [{ prefixIcon: 'e-pv-open-document-icon e-pv-icon', tooltipText: this.pdfViewer.localeObj.getConstant('Open'), id: this.pdfViewer.element.id + '_open' },\n                { type: 'Separator', align: 'Left' },\n                { prefixIcon: 'e-pv-undo-icon e-pv-icon', tooltipText: this.pdfViewer.localeObj.getConstant('Undo'), id: this.pdfViewer.element.id + '_undo' },\n                { prefixIcon: 'e-pv-redo-icon e-pv-icon', tooltipText: this.pdfViewer.localeObj.getConstant('Redo'), id: this.pdfViewer.element.id + '_redo' },\n                {\n                    tooltipText: 'Organize PDF', id: this.pdfViewer.element.id + '_menu_organize',\n                    prefixIcon: 'e-pv-organize-view-icon e-pv-icon', align: 'Right',\n                    disabled: true\n                },\n                { prefixIcon: 'e-pv-annotation-icon e-pv-icon', cssClass: 'e-pv-annotation-container', tooltipText: this.pdfViewer.localeObj.getConstant('Annotation'), id: this.pdfViewer.element.id + '_annotation', align: 'Right' },\n                { prefixIcon: 'e-pv-text-search-icon e-pv-icon', tooltipText: this.pdfViewer.localeObj.getConstant('Text Search'), id: this.pdfViewer.element.id + '_search', align: 'Right' },\n                { template: template, align: 'Right' }\n            ], clicked: this.toolbarClickHandler, width: '', height: '', overflowMode: 'Popup'\n        });\n        this.toolbar.isStringTemplate = true;\n        this.toolbar.appendTo(this.toolbarElement);\n        this.openDocumentItem = this.pdfViewerBase.getElement('_open');\n        this.openDocumentItem.classList.add('e-pv-open-document');\n        this.openDocumentItem.firstElementChild.id = this.pdfViewer.element.id + '_openIcon';\n        this.annotationItem = this.pdfViewerBase.getElement('_annotation');\n        this.annotationItem.classList.add('e-pv-annotation');\n        this.annotationItem.firstElementChild.id = this.pdfViewer.element.id + '_annotationIcon';\n        this.organizePageItem = this.pdfViewerBase.getElement('_menu_organize');\n        this.organizePageItem.classList.add('e-pv-organize-view');\n        this.annotationItem.firstElementChild.id = this.pdfViewer.element.id + '_organize-view' + '_icon';\n        this.textSearchItem = this.pdfViewerBase.getElement('_search');\n        this.textSearchItem.classList.add('e-pv-text-search');\n        this.textSearchItem.firstElementChild.id = this.pdfViewer.element.id + '_searchIcon';\n        this.undoItem = this.pdfViewerBase.getElement('_undo');\n        this.undoItem.classList.add('e-pv-undo');\n        this.redoItem = this.pdfViewerBase.getElement('_redo');\n        this.redoItem.classList.add('e-pv-redo');\n        this.redoItem.firstElementChild.id = this.pdfViewer.element.id + '_redoIcon';\n        this.undoItem.firstElementChild.id = this.pdfViewer.element.id + '_undoIcon';\n        this.createMoreOption(this.pdfViewer.element.id + '_more_option');\n    };\n    Toolbar.prototype.createMoreOption = function (idString) {\n        var _this = this;\n        this.moreOptionItem = document.getElementById(idString);\n        var items = [\n            {\n                text: this.pdfViewer.localeObj.getConstant('Download'), id: this.pdfViewer.element.id + '_menu_download',\n                iconCss: 'e-icons e-pv-download-document-icon e-pv-icon'\n            },\n            {\n                text: this.pdfViewer.localeObj.getConstant('Bookmarks'), id: this.pdfViewer.element.id + '_menu_bookmarks',\n                iconCss: 'e-icons e-pv-bookmark-icon e-pv-icon'\n            }\n        ];\n        this.moreDropDown = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_6__.DropDownButton({\n            items: items, iconCss: 'e-pv-more-icon e-pv-icon', cssClass: 'e-caret-hide',\n            open: function (args) {\n                var dropdownButtonPosition = _this.moreDropDown.element.getBoundingClientRect();\n                if (!_this.pdfViewer.enableRtl) {\n                    args.element.parentElement.style.left = dropdownButtonPosition.left + dropdownButtonPosition.width - args.element.parentElement.offsetWidth + 'px';\n                }\n            }, select: function (args) {\n                switch (args.item.id) {\n                    case _this.pdfViewer.element.id + '_menu_download':\n                        _this.pdfViewerBase.download();\n                        break;\n                    case _this.pdfViewer.element.id + '_menu_bookmarks':\n                        _this.showToolbar(false);\n                        _this.pdfViewerBase.navigationPane.createNavigationPaneMobile('bookmarks');\n                        break;\n                    default:\n                        break;\n                }\n            }, beforeItemRender: function (args) {\n                if (args.item.id === _this.pdfViewer.element.id + '_menu_bookmarks') {\n                    if (!_this.pdfViewer.bookmarkViewModule || !_this.pdfViewer.bookmarkViewModule.bookmarks) {\n                        args.element.classList.add('e-disabled');\n                    }\n                    else {\n                        args.element.classList.remove('e-disabled');\n                    }\n                }\n                else if (args.item.id === _this.pdfViewer.element.id + '_menu_download') {\n                    if (!_this.pdfViewer.enableDownload) {\n                        args.element.classList.add('e-disabled');\n                    }\n                    else {\n                        args.element.classList.remove('e-disabled');\n                    }\n                }\n            }, close: function (args) {\n                _this.moreOptionItem.blur();\n                _this.pdfViewerBase.focusViewerContainer();\n            }\n        });\n        this.moreDropDown.appendTo('#' + idString);\n    };\n    Toolbar.prototype.createToolbarItem = function (elementName, id, className) {\n        var toolbarItem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)(elementName, { id: id });\n        if (className !== null) {\n            toolbarItem.className = className;\n        }\n        if (elementName === 'input' && id !== this.pdfViewer.element.id + '_zoomDropDown') {\n            toolbarItem.type = 'text';\n        }\n        return toolbarItem;\n    };\n    /**\n     * @param {HTMLElement} toolbarItem - It describes about the toolbar item\n     * @param {string} tooltipText - It describes about the tooltip text\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.createTooltip = function (toolbarItem, tooltipText) {\n        if (tooltipText !== null) {\n            var tooltip = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_5__.Tooltip({\n                content: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.initializeCSPTemplate)(function () { return tooltipText; }), opensOn: 'Hover', beforeOpen: this.onTooltipBeforeOpen.bind(this)\n            });\n            tooltip.appendTo(toolbarItem);\n        }\n    };\n    Toolbar.prototype.onTooltipBeforeOpen = function (args) {\n        if (!this.pdfViewer.toolbarSettings.showTooltip && this.toolbarElement.contains(args.target)) {\n            args.cancel = true;\n        }\n        if (this.annotationToolbarModule) {\n            if (!this.pdfViewer.toolbarSettings.showTooltip && ((this.annotationToolbarModule.toolbarElement &&\n                this.annotationToolbarModule.toolbarElement.contains(args.target)) ||\n                (this.annotationToolbarModule.shapeToolbarElement &&\n                    this.annotationToolbarModule.shapeToolbarElement.contains(args.target)))) {\n                args.cancel = true;\n            }\n        }\n        if (this.formDesignerToolbarModule) {\n            if (!this.pdfViewer.toolbarSettings.showTooltip && (this.formDesignerToolbarModule.toolbarElement &&\n                this.formDesignerToolbarModule.toolbarElement.contains(args.target))) {\n                args.cancel = true;\n            }\n        }\n    };\n    Toolbar.prototype.createFileElement = function (toolbarElement) {\n        if (toolbarElement) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                this.fileInputElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', { id: this.pdfViewer.element.id + '_fileUploadElement', styles: 'position:fixed; left:-100em', attrs: { 'type': 'file' } });\n                this.fileInputElement.setAttribute('accept', '.pdf');\n                this.fileInputElement.setAttribute('aria-label', 'file upload element');\n                this.fileInputElement.setAttribute('tabindex', '-1');\n            }\n            else {\n                this.fileInputElement = this.pdfViewer.element.querySelector('.e-pv-fileupload-element');\n            }\n            if (toolbarElement) {\n                toolbarElement.appendChild(this.fileInputElement);\n            }\n        }\n    };\n    Toolbar.prototype.wireEvent = function () {\n        if (this.fileInputElement) {\n            this.fileInputElement.addEventListener('change', this.loadDocument);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n                this.toolbarElement.addEventListener('mouseup', this.toolbarOnMouseup.bind(this));\n                this.currentPageBoxElement.addEventListener('focusout', this.textBoxFocusOut);\n                this.currentPageBoxElement.addEventListener('keypress', this.navigateToPage);\n                this.zoomDropDown.change = this.zoomPercentSelect.bind(this);\n                this.zoomDropDown.element.addEventListener('keypress', this.onZoomDropDownInput.bind(this));\n                this.zoomDropDown.element.addEventListener('click', this.onZoomDropDownInputClick.bind(this));\n            }\n        }\n    };\n    Toolbar.prototype.unWireEvent = function () {\n        if (this.fileInputElement) {\n            this.fileInputElement.removeEventListener('change', this.loadDocument);\n        }\n        if ((!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.toolbarElement)) {\n                this.toolbarElement.removeEventListener('mouseup', this.toolbarOnMouseup.bind(this));\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentPageBoxElement)) {\n                this.currentPageBoxElement.removeEventListener('focusout', this.textBoxFocusOut);\n                this.currentPageBoxElement.removeEventListener('keypress', this.navigateToPage);\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.zoomDropDown)) {\n                this.zoomDropDown.removeEventListener('change', this.zoomPercentSelect);\n                this.zoomDropDown.element.removeEventListener('keypress', this.onZoomDropDownInput);\n                this.zoomDropDown.element.removeEventListener('click', this.onZoomDropDownInputClick);\n            }\n        }\n    };\n    /**\n     * @param {number} viewerWidth - It describes about the viewer width\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.onToolbarResize = function (viewerWidth) {\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !this.pdfViewer.enableDesktopMode) {\n            this.pdfViewerBase.navigationPane.toolbarResize();\n        }\n        else {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.toolbar)) {\n                this.toolbar.refreshOverflow();\n            }\n        }\n    };\n    Toolbar.prototype.toolbarOnMouseup = function (event) {\n        if (event.target === this.itemsContainer || event.target === this.toolbarElement) {\n            this.pdfViewerBase.focusViewerContainer();\n        }\n    };\n    Toolbar.prototype.applyHideToToolbar = function (show, startIndex, endIndex) {\n        var isHide = !show;\n        for (var index = startIndex; index <= endIndex; index++) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.toolbar) && this.toolbar.items[parseInt(index.toString(), 10)]) {\n                var className = this.toolbar.items[parseInt(index.toString(), 10)].cssClass;\n                if (className && className !== '') {\n                    // Querying the toolbar item\n                    var element = this.toolbar.element.querySelector('.' + className);\n                    if (element) {\n                        this.toolbar.hideItem(element, isHide);\n                    }\n                }\n                else {\n                    this.toolbar.hideItem(index, isHide);\n                }\n            }\n        }\n    };\n    Toolbar.prototype.handleOpenIconClick = function (args, isKeyBoardEvent) {\n        this.fileInputElement.click();\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !this.pdfViewer.enableDesktopMode && !isKeyBoardEvent) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                args.originalEvent.target.blur();\n            }\n            this.pdfViewerBase.focusViewerContainer();\n        }\n    };\n    Toolbar.prototype.handleToolbarBtnClick = function (args, isKeyBoardEvent) {\n        this.addInkAnnotation();\n        this.deSelectCommentAnnotation();\n        switch (args.originalEvent.target.id || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.item) &&\n            args.item.id)) {\n            case this.pdfViewer.element.id + '_open':\n            case this.pdfViewer.element.id + '_openIcon':\n            case this.pdfViewer.element.id + '_openText':\n                this.handleOpenIconClick(args, isKeyBoardEvent);\n                break;\n            case this.pdfViewer.element.id + '_download':\n            case this.pdfViewer.element.id + '_downloadIcon':\n            case this.pdfViewer.element.id + '_downloadText':\n                this.pdfViewerBase.download();\n                break;\n            case this.pdfViewer.element.id + '_print':\n            case this.pdfViewer.element.id + '_printIcon':\n            case this.pdfViewer.element.id + '_printText':\n                if (this.pdfViewer.printModule) {\n                    this.pdfViewer.firePrintStart();\n                }\n                break;\n            case this.pdfViewer.element.id + '_undo':\n            case this.pdfViewer.element.id + '_undoIcon':\n            case this.pdfViewer.element.id + '_undoText':\n                if (this.pdfViewer.annotationModule) {\n                    this.pdfViewer.annotationModule.undo();\n                }\n                break;\n            case this.pdfViewer.element.id + '_redo':\n            case this.pdfViewer.element.id + '_redoIcon':\n            case this.pdfViewer.element.id + '_redoText':\n                if (this.pdfViewer.annotationModule) {\n                    this.pdfViewer.annotationModule.redo();\n                }\n                break;\n            case this.pdfViewer.element.id + '_firstPage':\n            case this.pdfViewer.element.id + '_firstPageIcon':\n            case this.pdfViewer.element.id + '_firstPageText':\n                if (this.pdfViewer.navigationModule) {\n                    this.pdfViewer.navigationModule.goToFirstPage();\n                }\n                break;\n            case this.pdfViewer.element.id + '_previousPage':\n            case this.pdfViewer.element.id + '_previousPageIcon':\n            case this.pdfViewer.element.id + '_previousPageText':\n                if (this.pdfViewer.navigationModule) {\n                    this.pdfViewer.navigationModule.goToPreviousPage();\n                }\n                break;\n            case this.pdfViewer.element.id + '_nextPage':\n            case this.pdfViewer.element.id + '_nextPageIcon':\n            case this.pdfViewer.element.id + '_nextPageText':\n                if (this.pdfViewer.navigationModule) {\n                    this.pdfViewer.navigationModule.goToNextPage();\n                }\n                break;\n            case this.pdfViewer.element.id + '_lastPage':\n            case this.pdfViewer.element.id + '_lastPageIcon':\n            case this.pdfViewer.element.id + '_lastPageText':\n                if (this.pdfViewer.navigationModule) {\n                    this.pdfViewer.navigationModule.goToLastPage();\n                }\n                break;\n            case this.pdfViewer.element.id + '_zoomIn':\n            case this.pdfViewer.element.id + '_zoomInIcon':\n            case this.pdfViewer.element.id + '_zoomInText':\n                this.pdfViewer.magnificationModule.zoomIn();\n                break;\n            case this.pdfViewer.element.id + '_zoomOut':\n            case this.pdfViewer.element.id + '_zoomOutIcon':\n            case this.pdfViewer.element.id + '_zoomOutText':\n                this.pdfViewer.magnificationModule.zoomOut();\n                break;\n            case this.pdfViewer.element.id + '_selectTool':\n            case this.pdfViewer.element.id + '_selectToolIcon':\n            case this.pdfViewer.element.id + '_selectToolText':\n                if (!this.isSelectionToolDisabled) {\n                    this.pdfViewerBase.initiateTextSelectMode();\n                    this.updateInteractionTools(true);\n                }\n                break;\n            case this.pdfViewer.element.id + '_handTool':\n            case this.pdfViewer.element.id + '_handToolIcon':\n            case this.pdfViewer.element.id + '_handToolText':\n                if (!(this.isScrollingToolDisabled || this.getStampMode())) {\n                    this.pdfViewerBase.initiatePanning();\n                    this.updateInteractionTools(false);\n                }\n                break;\n            case this.pdfViewer.element.id + '_search':\n            case this.pdfViewer.element.id + '_searchIcon':\n            case this.pdfViewer.element.id + '_searchText':\n                this.textSearchButtonHandler();\n                break;\n            case this.pdfViewer.element.id + '_annotation':\n            case this.pdfViewer.element.id + '_annotationIcon':\n            case this.pdfViewer.element.id + '_annotationText':\n                this.initiateAnnotationMode(args.originalEvent.target.id, isKeyBoardEvent);\n                break;\n            case this.pdfViewer.element.id + '_formdesigner':\n            case this.pdfViewer.element.id + '_formdesignerIcon':\n            case this.pdfViewer.element.id + '_formdesignerText':\n                this.initiateFormDesignerMode(isKeyBoardEvent);\n                this.formDesignerToolbarModule.showHideDeleteIcon(false);\n                break;\n            case this.pdfViewer.element.id + '_comment':\n            case this.pdfViewer.element.id + '_commentIcon':\n            case this.pdfViewer.element.id + '_commentText':\n                this.pdfViewerBase.isAddComment = true;\n                this.pdfViewerBase.isCommentIconAdded = true;\n                this.annotationToolbarModule.deselectAllItems();\n                this.pdfViewer.annotation.triggerAnnotationUnselectEvent();\n                this.pdfViewer.annotation.triggerSignatureUnselectEvent();\n                this.addComments(args.originalEvent.target);\n                break;\n            case this.pdfViewer.element.id + '_submitForm':\n            case this.pdfViewer.element.id + '_submitFormSpan': {\n                var data = void 0;\n                this.pdfViewerBase.exportFormFields(data, _base_types__WEBPACK_IMPORTED_MODULE_7__.FormFieldDataFormat.Json);\n                break;\n            }\n            case this.pdfViewer.element.id + '_menu_organize':\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.pageOrganizer)) {\n                    this.pdfViewer.pageOrganizer.createOrganizeWindowForMobile();\n                }\n                break;\n            default:\n                this.pdfViewer.fireCustomToolbarClickEvent(args);\n                break;\n        }\n    };\n    Toolbar.prototype.addInkAnnotation = function () {\n        if (this.pdfViewer.annotationModule && this.pdfViewer.annotationModule.inkAnnotationModule) {\n            var currentPageNumber = parseInt(this.pdfViewer.annotationModule.inkAnnotationModule.currentPageNumber, 10);\n            this.pdfViewer.annotationModule.inkAnnotationModule.drawInkAnnotation(currentPageNumber);\n        }\n        if (this.annotationToolbarModule) {\n            this.pdfViewer.toolbar.annotationToolbarModule.deselectInkAnnotation();\n            this.annotationToolbarModule.inkAnnotationSelected = false;\n        }\n    };\n    Toolbar.prototype.deSelectCommentAnnotation = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.pdfViewer.toolbar.deSelectItem(this.commentItem);\n        }\n        else {\n            this.pdfViewer.toolbar.deSelectItem(this.CommentElement);\n        }\n        this.pdfViewerBase.isCommentIconAdded = false;\n    };\n    /**\n     * @param {any} targetElement - It describes about the target element\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.addComments = function (targetElement) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            if (targetElement.id === this.pdfViewer.element.id + '_comment' || targetElement.id === this.pdfViewer.element.id + '_commentIcon' || targetElement.id === this.pdfViewer.element.id + '_commentText') {\n                if ((targetElement.id === this.pdfViewer.element.id + '_commentIcon' || targetElement.id === this.pdfViewer.element.id + '_commentText') && targetElement.parentElement) {\n                    targetElement.parentElement.classList.add('e-pv-select');\n                }\n                else {\n                    targetElement.classList.add('e-pv-select');\n                }\n            }\n            else {\n                if (this.pdfViewer.enableRtl) {\n                    targetElement.className = 'e-pv-comment-selection-icon e-pv-icon e-icon-left e-right';\n                }\n                else {\n                    targetElement.className = 'e-pv-comment-selection-icon e-pv-icon e-icon-left';\n                }\n            }\n        }\n        else {\n            this.pdfViewerBase.isCommentIconAdded = true;\n            this.pdfViewerBase.isAddComment = true;\n            this.annotationToolbarModule.deselectAllItemsInBlazor();\n            var commentsButton = this.CommentElement;\n            commentsButton.classList.add('e-pv-select');\n        }\n        this.updateStampItems();\n        document.getElementById(this.pdfViewer.element.id + '_pageDiv_' + (this.pdfViewerBase.currentPageNumber - 1)).addEventListener('mousedown', this.pdfViewer.annotationModule.stickyNotesAnnotationModule.drawIcons.bind(this));\n    };\n    Toolbar.prototype.openZoomDropdown = function () {\n        // eslint-disable-next-line\n        var toolbarData = this;\n        if (document.fullscreen) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                var fullscreenElement = document.fullscreenElement;\n                if (fullscreenElement && fullscreenElement.tagName !== 'BODY' && fullscreenElement.tagName !== 'HTML') {\n                    setTimeout(function () {\n                        var popupElement = document.getElementById(toolbarData.pdfViewer.element.id + '_zoomCombo_popup');\n                        var targetElement = document.getElementById(toolbarData.toolbarElement.id);\n                        if (popupElement && targetElement && popupElement.ej2_instances) {\n                            targetElement.appendChild(popupElement);\n                            popupElement.ej2_instances[0].refreshPosition();\n                        }\n                    }, 100);\n                }\n            }\n            else {\n                var popupElement = document.getElementById(this.pdfViewer.element.id + '_zoomDropDown_popup');\n                var targetElement = document.getElementById(this.toolbarElement.id);\n                if (popupElement) {\n                    targetElement.appendChild(popupElement);\n                }\n            }\n        }\n    };\n    Toolbar.prototype.onZoomDropDownInput = function (event) {\n        if ((event.which < 48 || event.which > 57) && event.which !== 8 && event.which !== 13 && event.which !== 32) {\n            event.preventDefault();\n            return false;\n        }\n        else {\n            if (event.which === 13) {\n                event.preventDefault();\n                var value = this.zoomDropDown.element.value.trim();\n                this.zoomDropDownChange(value);\n            }\n            return true;\n        }\n    };\n    Toolbar.prototype.onZoomDropDownInputClick = function () {\n        this.zoomDropDown.element.select();\n    };\n    Toolbar.prototype.zoomPercentSelect = function (args) {\n        if (this.pdfViewerBase.pageCount > 0) {\n            if (args.isInteracted) {\n                if (args.itemData) {\n                    var zoomText = args.itemData.percent;\n                    this.zoomDropDownChange(zoomText);\n                }\n            }\n            else {\n                this.updateZoomPercentage(this.pdfViewer.magnificationModule.zoomFactor);\n            }\n        }\n    };\n    Toolbar.prototype.zoomDropDownChange = function (zoomText) {\n        if (zoomText !== this.pdfViewer.localeObj.getConstant('Fit Width') && zoomText !== this.pdfViewer.localeObj.getConstant('Fit Page') && zoomText !== this.pdfViewer.localeObj.getConstant('Automatic')) {\n            this.pdfViewer.magnificationModule.isAutoZoom = false;\n            this.pdfViewerBase.previousScrollbarWidth = this.pdfViewerBase.navigationPane.getViewerContainerScrollbarWidth();\n            this.pdfViewer.magnificationModule.zoomTo(parseFloat(zoomText));\n            this.updateZoomPercentage(this.pdfViewer.magnificationModule.zoomFactor);\n            this.zoomDropDown.focusOut();\n        }\n        else if (zoomText === this.pdfViewer.localeObj.getConstant('Fit Width')) {\n            this.pdfViewer.magnificationModule.isAutoZoom = false;\n            this.pdfViewer.magnificationModule.fitToWidth();\n            this.zoomDropDown.focusOut();\n        }\n        else if (zoomText === this.pdfViewer.localeObj.getConstant('Fit Page')) {\n            this.pdfViewer.magnificationModule.fitToPage();\n            this.zoomDropDown.focusOut();\n        }\n        else if (zoomText === this.pdfViewer.localeObj.getConstant('Automatic')) {\n            this.pdfViewer.magnificationModule.isAutoZoom = true;\n            this.pdfViewer.magnificationModule.fitToAuto();\n            this.zoomDropDown.focusOut();\n        }\n    };\n    /**\n     * @param {number} zoomFactor - It describes about the zoom factor\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.updateZoomPercentage = function (zoomFactor) {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            var currentPercent = parseInt((zoomFactor * 100).toString(), 10) + '%';\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                var blazorZoomDropDown = this.pdfViewerBase.getElement('_zoomDropDown');\n                if (blazorZoomDropDown && blazorZoomDropDown.children.length > 0) {\n                    blazorZoomDropDown.children[0].children[0].value = currentPercent;\n                }\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.zoomDropDown)) {\n                if (this.zoomDropDown.text === currentPercent) {\n                    this.zoomDropDown.element.value = currentPercent;\n                }\n                if (this.zoomDropDown.index === 11) {\n                    this.zoomDropDown.value = 4;\n                }\n                if (zoomFactor <= 0.25) {\n                    this.pdfViewerBase.isMinimumZoom = true;\n                }\n                else {\n                    this.pdfViewerBase.isMinimumZoom = false;\n                }\n                this.zoomDropDown.text = currentPercent;\n            }\n        }\n    };\n    Toolbar.prototype.updateInteractionItems = function () {\n        if (this.pdfViewer.textSelectionModule) {\n            if (this.pdfViewer.enableTextSelection) {\n                this.enableItems(this.textSelectItem.parentElement, true);\n            }\n            else {\n                this.enableItems(this.textSelectItem.parentElement, false);\n            }\n        }\n        else {\n            this.enableItems(this.textSelectItem.parentElement, false);\n        }\n        this.enableItems(this.panItem.parentElement, true);\n        if (this.pdfViewer.interactionMode === 'TextSelection' && this.pdfViewer.enableTextSelection) {\n            this.selectItem(this.textSelectItem);\n            this.textSelectItem.setAttribute('tabindex', '-1');\n            this.deSelectItem(this.panItem);\n            this.panItem.setAttribute('tabindex', '0');\n        }\n        else {\n            this.selectItem(this.panItem);\n            this.panItem.setAttribute('tabindex', '-1');\n            this.deSelectItem(this.textSelectItem);\n            this.textSelectItem.setAttribute('tabindex', '0');\n            this.pdfViewerBase.initiatePanning();\n        }\n    };\n    /**\n     * @param {boolean} iskeyboardClick - It describes about the iskeyboardclick boolean value\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.textSearchButtonHandler = function (iskeyboardClick) {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            if (this.pdfViewer.textSearchModule && this.pdfViewerBase.pageCount > 0) {\n                this.isTextSearchBoxDisplayed = !this.isTextSearchBoxDisplayed;\n                this.pdfViewer.textSearchModule.showSearchBox(this.isTextSearchBoxDisplayed);\n                if (this.isTextSearchBoxDisplayed) {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                        this.selectItem(this.textSearchItem);\n                        this.textSearchItem.setAttribute('tabindex', '0');\n                    }\n                    var searchInputElement = document.getElementById(this.pdfViewer.element.id + '_search_input');\n                    searchInputElement.select();\n                    searchInputElement.focus();\n                }\n                else {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                        this.deSelectItem(this.textSearchItem);\n                        this.textSearchItem.blur();\n                    }\n                    else {\n                        var searchItem = this.pdfViewerBase.getElement('_search');\n                        if (iskeyboardClick) {\n                            searchItem.firstElementChild.focus();\n                        }\n                        else {\n                            searchItem.firstElementChild.blur();\n                            this.pdfViewerBase.focusViewerContainer();\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.showToolbar(false);\n            this.pdfViewerBase.navigationPane.createNavigationPaneMobile('search');\n        }\n    };\n    /**\n     * @param {string} id - It describes about the id value\n     * @param {boolean} isKeyBoardEvent - It describes about the whether isKeyBoardEvent true or not\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.initiateAnnotationMode = function (id, isKeyBoardEvent) {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            if (this.annotationToolbarModule && this.pdfViewer.enableAnnotationToolbar) {\n                this.annotationToolbarModule.showAnnotationToolbar(this.annotationItem);\n                this.pdfViewer.toolbarModule.annotationToolbarModule.toolbar.refreshOverflow();\n                if (isKeyBoardEvent || this.pdfViewer.toolbarModule.annotationToolbarModule.toolbar.items.length > 0) {\n                    document.getElementById(this.pdfViewer.toolbarModule.annotationToolbarModule.toolbar.items[0].id).focus();\n                }\n                if (this.pdfViewer.isAnnotationToolbarVisible && this.pdfViewer.isFormDesignerToolbarVisible) {\n                    var formDesignerMainDiv = document.getElementById(this.pdfViewer.element.id + '_formdesigner_toolbar');\n                    formDesignerMainDiv.style.display = 'none';\n                    this.formDesignerToolbarModule.isToolbarHidden = false;\n                    this.formDesignerToolbarModule.showFormDesignerToolbar(this.formDesignerItem);\n                    this.annotationToolbarModule.adjustViewer(true);\n                }\n            }\n        }\n        else {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                if (id === this.pdfViewer.element.id + '_annotation') {\n                    id = this.pdfViewer.element.id + '_annotationIcon';\n                }\n                this.annotationToolbarModule.createAnnotationToolbarForMobile(id);\n            }\n        }\n    };\n    Toolbar.prototype.initiateFormDesignerMode = function (isKeyBoardEvent) {\n        if (this.formDesignerToolbarModule && this.pdfViewer.enableFormDesignerToolbar) {\n            this.formDesignerToolbarModule.showFormDesignerToolbar(this.formDesignerItem);\n            if (this.pdfViewer.isAnnotationToolbarVisible && this.pdfViewer.isFormDesignerToolbarVisible) {\n                var annotationMainDiv = document.getElementById(this.pdfViewer.element.id + '_annotation_toolbar');\n                annotationMainDiv.style.display = 'none';\n                var commentPanel = document.getElementById(this.pdfViewer.element.id + '_commantPanel');\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(commentPanel) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewerBase.navigationPane)) {\n                    if (commentPanel.style.display === 'block') {\n                        this.pdfViewerBase.navigationPane.closeCommentPanelContainer();\n                    }\n                }\n                this.annotationToolbarModule.isToolbarHidden = false;\n                this.annotationToolbarModule.showAnnotationToolbar(this.annotationItem);\n                this.formDesignerToolbarModule.adjustViewer(true);\n            }\n            if (isKeyBoardEvent && this.pdfViewer.toolbarModule.formDesignerToolbarModule.toolbar.items.length > 0) {\n                document.getElementById(this.pdfViewer.toolbarModule.formDesignerToolbarModule.toolbar.items[0].id).focus();\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.DisableInteractionTools = function () {\n        this.deSelectItem(this.textSelectItem);\n        this.deSelectItem(this.panItem);\n    };\n    /**\n     * @param {HTMLElement} element - It describes about the element value\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.selectItem = function (element) {\n        if (element) {\n            element.classList.add('e-pv-select');\n        }\n    };\n    /**\n     * @param {HTMLElement} element - It describes about the element value\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.deSelectItem = function (element) {\n        if (element) {\n            element.classList.remove('e-pv-select');\n        }\n    };\n    /**\n     * @param {boolean} isTextSelect - It describes about the isTextSelect boolean value\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.updateInteractionTools = function (isTextSelect) {\n        var isBlazorPlatform = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)();\n        if (isTextSelect) {\n            if (isBlazorPlatform) {\n                this.selectItem(this.SelectToolElement);\n                this.deSelectItem(this.PanElement);\n            }\n            else {\n                this.selectItem(this.textSelectItem);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.textSelectItem)) {\n                    this.textSelectItem.setAttribute('tabindex', '-1');\n                }\n                this.deSelectItem(this.panItem);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.panItem)) {\n                    this.panItem.setAttribute('tabindex', '0');\n                }\n            }\n        }\n        else {\n            if (isBlazorPlatform) {\n                this.selectItem(this.PanElement);\n                this.deSelectItem(this.SelectToolElement);\n            }\n            else {\n                this.selectItem(this.panItem);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.panItem)) {\n                    this.panItem.setAttribute('tabindex', '-1');\n                }\n                this.deSelectItem(this.textSelectItem);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.textSelectItem)) {\n                    this.textSelectItem.setAttribute('tabindex', '0');\n                }\n            }\n        }\n    };\n    Toolbar.prototype.initialEnableItems = function () {\n        if (this.pdfViewer.enableToolbar) {\n            this.showToolbar(true);\n        }\n        else {\n            this.showToolbar(false);\n        }\n        if (this.pdfViewer.enableNavigationToolbar) {\n            this.showNavigationToolbar(true);\n        }\n        else {\n            this.showNavigationToolbar(false);\n        }\n        if (this.pdfViewer.pageOrganizer) {\n            this.showPageOrganizerToolbar(true);\n        }\n        else {\n            this.showPageOrganizerToolbar(false);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            if (this.isPrintBtnVisible) {\n                this.showPrintOption(true);\n            }\n            else {\n                this.showPrintOption(false);\n            }\n            if (this.isDownloadBtnVisible) {\n                this.showDownloadOption(true);\n            }\n            else {\n                this.showDownloadOption(false);\n            }\n            if (this.isSearchBtnVisible) {\n                this.showSearchOption(true);\n            }\n            else {\n                this.showSearchOption(false);\n            }\n            if (this.isCommentBtnVisible) {\n                this.showCommentOption(true);\n            }\n            else {\n                this.showCommentOption(false);\n            }\n        }\n    };\n    Toolbar.prototype.showSeparator = function (toolbarItems) {\n        if (!this.isOpenBtnVisible || (!this.isNavigationToolVisible && !this.isMagnificationToolVisible &&\n            !this.isSelectionBtnVisible && !this.isScrollingBtnVisible && !this.isUndoRedoBtnsVisible)) {\n            //For mobile devices, the default previous value has been passed as (1,1).\n            this.applyHideToToolbar(false, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[0]) ? this.itemsIndexArray[0].endIndex + 1 : 1, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[0]) ? this.itemsIndexArray[0].endIndex + 1 : 1);\n        }\n        if (((!this.isNavigationToolVisible && !this.isMagnificationToolVisible) && !this.isOpenBtnVisible) ||\n            (this.isOpenBtnVisible && !this.isNavigationToolVisible) ||\n            ((!this.isOpenBtnVisible && !this.isNavigationToolVisible) || (!this.isMagnificationToolVisible &&\n                !this.isScrollingBtnVisible && !this.isSelectionBtnVisible))) {\n            //For mobile devices, the default previous value has been passed as (8,8).\n            this.applyHideToToolbar(false, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[1]) ? this.itemsIndexArray[1].endIndex + 1 : 8, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[1]) ? this.itemsIndexArray[1].endIndex + 1 : 8);\n        }\n        if ((!this.isMagnificationToolVisible && !this.isSelectionBtnVisible && !this.isScrollingBtnVisible) ||\n            (this.isMagnificationToolVisible && (!this.isSelectionBtnVisible && !this.isScrollingBtnVisible)) ||\n            (!this.isMagnificationToolVisible && (this.isSelectionBtnVisible || this.isScrollingBtnVisible))) {\n            //For mobile devices, the default previous value has been passed as (12,12).\n            this.applyHideToToolbar(false, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[2]) ?\n                this.itemsIndexArray[2].endIndex + 1 : 12, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[2]) ?\n                this.itemsIndexArray[2].endIndex + 1 : 12);\n        }\n        if (((!this.isMagnificationToolVisible && !this.isNavigationToolVisible && !this.isScrollingBtnVisible\n            && !this.isSelectionBtnVisible) && this.isUndoRedoBtnsVisible || !this.isUndoRedoBtnsVisible)) {\n            //For mobile devices, the default previous value has been passed as (15,15).\n            this.applyHideToToolbar(false, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[4]) ?\n                this.itemsIndexArray[4].endIndex + 1 : 15, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[4]) ?\n                this.itemsIndexArray[4].endIndex + 1 : 15);\n        }\n        if ((!this.isUndoRedoBtnsVisible || (this.isUndoRedoBtnsVisible && !this.isCommentBtnVisible &&\n            !this.isSubmitbtnvisible)) && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.itemsIndexArray[5]))) {\n            this.applyHideToToolbar(false, this.itemsIndexArray[5].endIndex + 1, this.itemsIndexArray[5].endIndex + 1);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.applyToolbarSettings = function () {\n        var toolbarSettingsItems = this.pdfViewer.toolbarSettings.toolbarItems;\n        if (toolbarSettingsItems) {\n            if (toolbarSettingsItems.indexOf('OpenOption') !== -1) {\n                this.showOpenOption(true);\n            }\n            else {\n                this.showOpenOption(false);\n            }\n            if (toolbarSettingsItems.indexOf('PageNavigationTool') !== -1) {\n                this.showPageNavigationTool(true);\n            }\n            else {\n                this.showPageNavigationTool(false);\n            }\n            if (toolbarSettingsItems.indexOf('MagnificationTool') !== -1) {\n                this.showMagnificationTool(true);\n            }\n            else {\n                this.showMagnificationTool(false);\n            }\n            if (toolbarSettingsItems.indexOf('SelectionTool') !== -1) {\n                this.showSelectionTool(true);\n            }\n            else {\n                this.showSelectionTool(false);\n            }\n            if (toolbarSettingsItems.indexOf('PanTool') !== -1) {\n                this.showScrollingTool(true);\n            }\n            else {\n                this.showScrollingTool(false);\n            }\n            if (toolbarSettingsItems.indexOf('PrintOption') !== -1) {\n                this.showPrintOption(true);\n            }\n            else {\n                this.showPrintOption(false);\n            }\n            if (toolbarSettingsItems.indexOf('DownloadOption') !== -1) {\n                this.showDownloadOption(true);\n            }\n            else {\n                this.showDownloadOption(false);\n            }\n            if (toolbarSettingsItems.indexOf('SearchOption') !== -1) {\n                this.showSearchOption(true);\n            }\n            else {\n                this.showSearchOption(false);\n            }\n            if (toolbarSettingsItems.indexOf('UndoRedoTool') !== -1) {\n                this.showUndoRedoTool(true);\n            }\n            else {\n                this.showUndoRedoTool(false);\n            }\n            if (toolbarSettingsItems.indexOf('AnnotationEditTool') !== -1) {\n                this.showAnnotationEditTool(true);\n            }\n            else {\n                this.showAnnotationEditTool(false);\n            }\n            if (toolbarSettingsItems.indexOf('FormDesignerEditTool') !== -1) {\n                this.showFormDesignerEditTool(true);\n            }\n            else {\n                this.showFormDesignerEditTool(false);\n            }\n            if (toolbarSettingsItems.indexOf('CommentTool') !== -1) {\n                this.showCommentOption(true);\n            }\n            else {\n                this.showCommentOption(false);\n            }\n            if (toolbarSettingsItems.indexOf('SubmitForm') !== -1) {\n                this.showSubmitForm(true);\n            }\n            else {\n                this.showSubmitForm(false);\n            }\n            this.showSeparator(toolbarSettingsItems);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.applyToolbarSettingsForMobile = function () {\n        var toolbarSettingsItems = this.pdfViewer.toolbarSettings.toolbarItems;\n        if (toolbarSettingsItems) {\n            if (toolbarSettingsItems.indexOf('OpenOption') !== -1) {\n                this.showOpenOption(true);\n            }\n            else {\n                this.showOpenOption(false);\n            }\n            if (toolbarSettingsItems.indexOf('UndoRedoTool') !== -1) {\n                this.showUndoRedoTool(true);\n            }\n            else {\n                this.showUndoRedoTool(false);\n            }\n            if (toolbarSettingsItems.indexOf('AnnotationEditTool') !== -1) {\n                this.showAnnotationEditTool(true);\n            }\n            else {\n                this.showAnnotationEditTool(false);\n            }\n            if (toolbarSettingsItems.indexOf('SearchOption') !== -1) {\n                this.showSearchOption(true);\n            }\n            else {\n                this.showSearchOption(false);\n            }\n        }\n    };\n    Toolbar.prototype.getStampMode = function () {\n        if (this.pdfViewer.annotation && this.pdfViewer.annotation.stampAnnotationModule) {\n            return this.pdfViewer.annotation.stampAnnotationModule.isStampAddMode;\n        }\n        else {\n            return false;\n        }\n    };\n    Toolbar.prototype.stampBeforeOpen = function (args) {\n        this.annotationToolbarModule.resetFreeTextAnnot();\n        if (args.ParentItem.Text === '' && this.pdfViewer.customStampSettings.isAddToMenu && args.Items.length > 0) {\n            var currentElements = null;\n            for (var i = 0; i < args.Items.length; i++) {\n                if (args.Items[parseInt(i.toString(), 10)].Text === 'Custom Stamp') {\n                    args.Items[parseInt(i.toString(), 10)].Items = [];\n                    currentElements = args.Items[parseInt(i.toString(), 10)];\n                    break;\n                }\n            }\n            var elements = this.pdfViewerBase.customStampCollection;\n            var stampElements = this.pdfViewer.customStampSettings.customStamps;\n            if (elements.length === 0 && stampElements && stampElements.length > 0) {\n                for (var n = 0; n < stampElements.length; n++) {\n                    elements.push({ customStampName: stampElements[parseInt(n.toString(), 10)].customStampName,\n                        customStampImageSource: stampElements[parseInt(n.toString(), 10)].customStampImageSource });\n                }\n            }\n            for (var m = 0; m < elements.length; m++) {\n                if (currentElements != null) {\n                    currentElements.Items.push({ text: elements[parseInt(m.toString(), 10)].customStampName });\n                }\n            }\n        }\n    };\n    Toolbar.prototype.stampBeforeClose = function (args, showItemOnClick) {\n        if ((args.ParentItem && args.ParentItem.Text !== 'Custom Stamp' && args.ParentItem.Text !== 'Standard Business' && args.ParentItem.Text !== 'Dynamic' && args.ParentItem.Text !== 'Sign Here') || !args.ParentItem) {\n            showItemOnClick = true;\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Toolbar.prototype.updateStampItems = function () {\n        if (this.pdfViewer.annotationModule && this.pdfViewer.annotationModule.stampAnnotationModule &&\n            this.pdfViewer.annotationModule.stampAnnotationModule.isNewStampAnnot) {\n            if (this.pdfViewer.selectedItems.annotations[0]) {\n                this.pdfViewer.remove(this.pdfViewer.selectedItems.annotations[0]);\n                this.pdfViewer.clearSelection(this.pdfViewer.currentPageNumber - 1);\n                this.pdfViewer.renderDrawing();\n                this.pdfViewerBase.tool = null;\n            }\n            this.pdfViewerBase.isAlreadyAdded = false;\n            this.pdfViewer.annotationModule.stampAnnotationModule.isNewStampAnnot = false;\n        }\n    };\n    Toolbar.prototype.stampSelect = function (args, stampParentID) {\n        this.pdfViewerBase.isAlreadyAdded = false;\n        this.updateStampItems();\n        if (args.Item.Text === 'Custom Stamp') {\n            this.annotationToolbarModule.checkStampAnnotations();\n            this.pdfViewer.annotation.stampAnnotationModule.isStampAddMode = true;\n            var stampImage = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', { id: this.pdfViewer.element.id + '_stampElement', attrs: { 'type': 'file' } });\n            stampImage.setAttribute('accept', '.jpg,.jpeg,.png');\n            stampImage.style.position = 'absolute';\n            stampImage.style.left = '0px';\n            stampImage.style.top = '0px';\n            stampImage.style.visibility = 'hidden';\n            document.body.appendChild(stampImage);\n            stampImage.click();\n            stampImage.addEventListener('change', this.annotationToolbarModule.addStampImage);\n            document.body.removeChild(stampImage);\n        }\n        else if (stampParentID === 'Custom Stamp' && args.Item.Text !== '') {\n            var elements = this.pdfViewerBase.customStampCollection;\n            for (var n = 0; n < elements.length; n++) {\n                if (elements[parseInt(n.toString(), 10)].customStampName === args.Item.Text) {\n                    this.pdfViewer.annotationModule.stampAnnotationModule.customStampName = args.Item.Text;\n                    this.annotationToolbarModule.checkStampAnnotations();\n                    this.pdfViewer.annotation.stampAnnotationModule.isStampAddMode = true;\n                    this.pdfViewer.annotationModule.stampAnnotationModule.isStampAnnotSelected = true;\n                    this.pdfViewerBase.stampAdded = true;\n                    this.pdfViewerBase.isAlreadyAdded = true;\n                    this.pdfViewer.annotationModule.stampAnnotationModule.\n                        createCustomStampAnnotation(elements[parseInt(n.toString(), 10)].customStampImageSource);\n                    this.pdfViewerBase.stampAdded = false;\n                }\n            }\n        }\n        else if (args.Item.Text !== 'Dynamic' && args.Item.Text !== '' && args.Item.Text !== 'Standard Business' && (stampParentID === 'Sign Here' || args.Item.Text !== 'Sign Here')) {\n            this.annotationToolbarModule.checkStampAnnotations();\n            this.pdfViewer.annotation.stampAnnotationModule.isStampAddMode = true;\n            this.pdfViewer.annotationModule.stampAnnotationModule.isStampAnnotSelected = true;\n            this.pdfViewerBase.stampAdded = true;\n            if (stampParentID === 'Dynamic') {\n                this.pdfViewerBase.isDynamicStamp = true;\n                this.pdfViewer.annotationModule.stampAnnotationModule.retrieveDynamicStampAnnotation(args.Item.Text);\n            }\n            else {\n                this.pdfViewerBase.isDynamicStamp = false;\n                this.pdfViewer.annotationModule.stampAnnotationModule.retrievestampAnnotation(args.Item.Text);\n            }\n        }\n    };\n    Toolbar.prototype.enableItems = function (element, isEnable) {\n        this.toolbar.enableItems(element, isEnable);\n        if (element && element.id === this.pdfViewer.element.id + '_zoomDropDownContainer') {\n            this.pdfViewerBase.getElement('_zoomDropDown').setAttribute('tabindex', isEnable ? '0' : '-1');\n            this.pdfViewerBase.getElement('_zoomDropDown').setAttribute('data-tabindex', isEnable ? '0' : '-1');\n        }\n        else if (element.firstElementChild && element.id !== this.pdfViewer.element.id + '_zoomDropDownContainer') {\n            element.firstElementChild.setAttribute('tabindex', isEnable ? '0' : '-1');\n            element.firstElementChild.setAttribute('data-tabindex', isEnable ? '0' : '-1');\n        }\n    };\n    /**\n     * @private\n     * @returns {string} - string\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'Toolbar';\n    };\n    return Toolbar;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/toolbar/toolbar.js?");

/***/ })

}]);