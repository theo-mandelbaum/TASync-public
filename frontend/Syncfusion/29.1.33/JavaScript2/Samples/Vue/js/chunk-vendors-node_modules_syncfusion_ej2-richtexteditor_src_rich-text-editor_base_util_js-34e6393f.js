"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-richtexteditor_src_rich-text-editor_base_util_js-34e6393f"],{

/***/ "./node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/base/util.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/base/util.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanupInternalElements: () => (/* binding */ cleanupInternalElements),\n/* harmony export */   convertToBlob: () => (/* binding */ convertToBlob),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   dispatchEvent: () => (/* binding */ dispatchEvent),\n/* harmony export */   getCollection: () => (/* binding */ getCollection),\n/* harmony export */   getDefaultValue: () => (/* binding */ getDefaultValue),\n/* harmony export */   getDropDownValue: () => (/* binding */ getDropDownValue),\n/* harmony export */   getEditValue: () => (/* binding */ getEditValue),\n/* harmony export */   getFormattedFontSize: () => (/* binding */ getFormattedFontSize),\n/* harmony export */   getIndex: () => (/* binding */ getIndex),\n/* harmony export */   getLocaleFontFormat: () => (/* binding */ getLocaleFontFormat),\n/* harmony export */   getTBarItemsIndex: () => (/* binding */ getTBarItemsIndex),\n/* harmony export */   getTextNodesUnder: () => (/* binding */ getTextNodesUnder),\n/* harmony export */   getTooltipText: () => (/* binding */ getTooltipText),\n/* harmony export */   hasClass: () => (/* binding */ hasClass),\n/* harmony export */   isEditableValueEmpty: () => (/* binding */ isEditableValueEmpty),\n/* harmony export */   isIDevice: () => (/* binding */ isIDevice),\n/* harmony export */   pageYOffset: () => (/* binding */ pageYOffset),\n/* harmony export */   parseHelper: () => (/* binding */ parseHelper),\n/* harmony export */   parseHtml: () => (/* binding */ parseHtml),\n/* harmony export */   removeSelectionClassStates: () => (/* binding */ removeSelectionClassStates),\n/* harmony export */   resetContentEditableElements: () => (/* binding */ resetContentEditableElements),\n/* harmony export */   sanitizeHelper: () => (/* binding */ sanitizeHelper),\n/* harmony export */   setToolbarStatus: () => (/* binding */ setToolbarStatus),\n/* harmony export */   toObjectLowerCase: () => (/* binding */ toObjectLowerCase),\n/* harmony export */   updateDropDownFontFormatLocale: () => (/* binding */ updateDropDownFontFormatLocale),\n/* harmony export */   updateDropdownContent: () => (/* binding */ updateDropdownContent),\n/* harmony export */   updateTextNode: () => (/* binding */ updateTextNode),\n/* harmony export */   updateUndoRedoStatus: () => (/* binding */ updateUndoRedoStatus)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/classes */ \"./node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/base/classes.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/constant */ \"./node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/base/constant.js\");\n/* harmony import */ var _models_items__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/items */ \"./node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/models/items.js\");\n/* harmony import */ var _models_default_locale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/default-locale */ \"./node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/models/default-locale.js\");\n/**\n * Defines util methods used by Rich Text Editor.\n */\n\n\n\n\n\n\nvar undoRedoItems = ['Undo', 'Redo'];\nvar inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button',\n    'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input',\n    'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress',\n    'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'strike', 'sub', 'sup', 'svg',\n    'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n/**\n * @param {string} val - specifies the string value\n * @param {string} items - specifies the value\n * @returns {number} - returns the number value\n * @hidden\n */\nfunction getIndex(val, items) {\n    var index = -1;\n    items.some(function (item, i) {\n        if (typeof item === 'string' && val === item.toLocaleLowerCase()) {\n            index = i;\n            return true;\n        }\n        return false;\n    });\n    return index;\n}\n/**\n * @param {Element} element - specifies the element\n * @param {string} className - specifies the string value\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\nfunction hasClass(element, className) {\n    var hasClass = false;\n    if (element.classList.contains(className)) {\n        hasClass = true;\n    }\n    return hasClass;\n}\n/**\n * @param {IDropDownItemModel} items - specifies the item model\n * @param {string} value - specifies the string value\n * @param {string} type - specifies the string value\n * @param {string} returnType - specifies the return type\n * @returns {string} - returns the string value\n * @hidden\n */\nfunction getDropDownValue(items, value, type, returnType) {\n    var data;\n    var result;\n    if (items.length === 0 && value === 'FontSize') {\n        return 'Font Size';\n    }\n    for (var k = 0; k < items.length; k++) {\n        if (type === 'value' && items[k].value.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n            data = items[k];\n            break;\n        }\n        else if (type === 'text' && items[k].text.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n            data = items[k];\n            break;\n        }\n        else if (type === 'subCommand' && items[k].subCommand.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n            data = items[k];\n            break;\n        }\n    }\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(data)) {\n        switch (returnType) {\n            case 'text':\n                result = data.text;\n                break;\n            case 'value':\n                result = data.value;\n                break;\n            case 'iconCss':\n                result = data.iconCss;\n                break;\n        }\n    }\n    return result;\n}\n/**\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\nfunction isIDevice() {\n    var result = false;\n    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isIos) {\n        result = true;\n    }\n    return result;\n}\n/**\n * @param {string} value - specifies the value\n * @returns {string} - returns the string value\n * @hidden\n */\nfunction getFormattedFontSize(value) {\n    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value)) {\n        return '';\n    }\n    return value;\n}\n/**\n * @param {MouseEvent} e - specifies the mouse event\n * @param {HTMLElement} parentElement - specifies the parent element\n * @param {boolean} isIFrame - specifies the boolean value\n * @returns {number} - returns the number\n * @hidden\n */\nfunction pageYOffset(e, parentElement, isIFrame) {\n    var y = 0;\n    if (isIFrame) {\n        y = window.pageYOffset + parentElement.getBoundingClientRect().top + e.clientY;\n    }\n    else {\n        y = e.pageY;\n    }\n    return y;\n}\n/**\n * @param {string} item - specifies the string\n * @param {ServiceLocator} serviceLocator - specifies the service locator\n * @returns {string} - returns the string\n * @hidden\n */\nfunction getTooltipText(item, serviceLocator) {\n    var i10n = serviceLocator.getService('rteLocale');\n    var itemLocale = _models_default_locale__WEBPACK_IMPORTED_MODULE_4__.toolsLocale[\"\" + item];\n    var tooltipText = i10n.getConstant(itemLocale);\n    return tooltipText;\n}\n/**\n * @param {ISetToolbarStatusArgs} e - specifies the e element\n * @param {boolean} isPopToolbar - specifies the boolean value\n * @param {IRichTextEditor} self - specifies the parent element\n * @returns {void}\n * @hidden\n */\nfunction setToolbarStatus(e, isPopToolbar, self) {\n    updateDropDownFontFormatLocale(self);\n    var dropDown = e.dropDownModule;\n    var data = e.args;\n    var keys = Object.keys(e.args);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        for (var j = 0; j < e.tbItems.length; j++) {\n            var item = e.tbItems[j].subCommand;\n            var itemStr = item && item.toLocaleLowerCase();\n            if (item && (itemStr === key) || (item === 'UL' && key === 'unorderedlist') || (item === 'OL' && key === 'orderedlist') ||\n                (itemStr === 'pre' && key === 'insertcode') || (item === 'NumberFormatList' && key === 'numberFormatList' ||\n                item === 'BulletFormatList' && key === 'bulletFormatList')) {\n                if (typeof data[\"\" + key] === 'boolean') {\n                    if (data[\"\" + key] === true) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([e.tbElements[j]], [_base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_ACTIVE]);\n                    }\n                    else {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([e.tbElements[j]], [_base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_ACTIVE]);\n                    }\n                }\n                else if ((typeof data[\"\" + key] === 'string' || data[\"\" + key] === null) &&\n                    getIndex(key, e.parent.toolbarSettings.items) >= -1) {\n                    var value = ((data[\"\" + key]) ? data[\"\" + key] : '');\n                    var result = '';\n                    switch (key) {\n                        case 'formats': {\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dropDown.formatDropDown) || isPopToolbar ||\n                                (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dropDown.formatDropDown) && dropDown.formatDropDown.isDestroyed)) {\n                                break;\n                            }\n                            var formatItems = e.parent.format.types;\n                            var formatContent = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.parent.format.default) ? formatItems[0].text :\n                                e.parent.format.default;\n                            result = value === 'empty' ? '' : getDropDownValue(formatItems, value, 'subCommand', 'text');\n                            dropDown.formatDropDown.content = ('<span style=\"display: inline-flex;' +\n                                'width:' + e.parent.format.width + '\" >' +\n                                '<span class=\"e-rte-dropdown-btn-text' + ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.parent.cssClass) ? '' : ' ' + e.parent.cssClass) + '\">'\n                                + ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result) ? formatContent : result) +\n                                '</span></span>');\n                            dropDown.formatDropDown.dataBind();\n                            break;\n                        }\n                        case 'alignments': {\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dropDown.alignDropDown) ||\n                                (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dropDown.alignDropDown) && dropDown.alignDropDown.isDestroyed)) {\n                                break;\n                            }\n                            var alignItems = _models_items__WEBPACK_IMPORTED_MODULE_3__.alignmentItems;\n                            result = getDropDownValue(alignItems, value, 'subCommand', 'iconCss');\n                            dropDown.alignDropDown.iconCss = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result) ? 'e-icons e-justify-left' : result;\n                            dropDown.alignDropDown.dataBind();\n                            break;\n                        }\n                        case 'fontname': {\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dropDown.fontNameDropDown) || isPopToolbar ||\n                                (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dropDown.fontNameDropDown) && dropDown.fontNameDropDown.isDestroyed)) {\n                                break;\n                            }\n                            var fontNameItems = e.parent.fontFamily.items;\n                            result = value === 'empty' ? '' : getDropDownValue(fontNameItems, value, 'value', 'text');\n                            var fontNameContent = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.parent.fontFamily.default) ? (fontNameItems.length === 0) ? self.serviceLocator.getService('rteLocale').getConstant('fontName') : fontNameItems[0].text :\n                                e.parent.fontFamily.default;\n                            var name_1 = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result) ? fontNameContent : result) === 'Default' ? self.serviceLocator.getService('rteLocale').getConstant('fontName')\n                                : ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result) ? fontNameContent : result);\n                            var htmlValue = ('<span style=\"display: inline-flex;' +\n                                'width:' + e.parent.fontFamily.width + '\" >' +\n                                '<span class=\"e-rte-dropdown-btn-text' + ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.parent.cssClass) ? '' : ' ' + e.parent.cssClass) + '\">'\n                                + name_1 + '</span></span>');\n                            updateDropdownContent(dropDown.fontNameDropDown, htmlValue);\n                            break;\n                        }\n                        case 'fontsize': {\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dropDown.fontSizeDropDown) ||\n                                (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dropDown.fontSizeDropDown) && dropDown.fontSizeDropDown.isDestroyed)) {\n                                break;\n                            }\n                            var fontSizeItems = e.parent.fontSize.items;\n                            var fontSizeContent = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.parent.fontSize.default) ? (fontSizeItems.length === 0) ? self.serviceLocator.getService('rteLocale').getConstant('fontSize') : fontSizeItems[0].text :\n                                e.parent.fontSize.default;\n                            var fontSizeToolbarText = getDropDownValue(fontSizeItems, (value === '' ? fontSizeContent.replace(/\\s/g, '') : value), (fontSizeItems.length > 0 && fontSizeItems[0] && fontSizeContent.replace(/\\s/g, '') === fontSizeItems[0].text && value === '') ? 'text' : 'value', 'text');\n                            result = value === 'empty' ? '' : (fontSizeToolbarText === 'Default') ? self.serviceLocator.getService('rteLocale').getConstant('fontSize') : fontSizeToolbarText;\n                            var htmlValue = ('<span style=\"display: inline-flex;' +\n                                'width:' + e.parent.fontSize.width + '\" >' +\n                                '<span class=\"e-rte-dropdown-btn-text' + ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.parent.cssClass) ? '' : ' ' + e.parent.cssClass) + '\">'\n                                + getFormattedFontSize(result) + '</span></span>');\n                            updateDropdownContent(dropDown.fontSizeDropDown, htmlValue);\n                            break;\n                        }\n                        case 'bulletFormatList':\n                        case 'numberFormatList': {\n                            if (value !== '') {\n                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([e.tbElements[j]], [_base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_ACTIVE]);\n                            }\n                            else {\n                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([e.tbElements[j]], [_base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_ACTIVE]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {string} items - specifies the string value\n * @returns {string[]} - returns the array value\n * @hidden\n */\nfunction getCollection(items) {\n    if (typeof items === 'object') {\n        return items;\n    }\n    else {\n        return [items];\n    }\n}\n/**\n * @param {any} dropDown - The dropdown button instance.\n * @param {string} htmlString - The HTML content to update.\n * @returns {void}\n * @hidden\n */\nfunction updateDropdownContent(dropDown, htmlString) {\n    var styleMatch = htmlString.match(/style=\"([^\"]*)\"/);\n    var styleValue = '';\n    if (styleMatch) {\n        styleValue = styleMatch[1];\n    }\n    var updatedHtml = htmlString.replace(/ style=\"([^\"]*)\"/, '');\n    dropDown.content = updatedHtml;\n    dropDown.dataBind();\n    if (dropDown.element.firstChild) {\n        dropDown.element.firstChild.style.cssText = styleValue;\n    }\n}\n/**\n * @param {string[]} items - specifies the array of string value\n * @param {IToolbarItemModel} toolbarItems - specifies the tool bar model\n * @returns {number} - returns the number\n * @hidden\n */\nfunction getTBarItemsIndex(items, toolbarItems) {\n    var itemsIndex = [];\n    for (var i = 0; i < items.length; i++) {\n        for (var j = 0; j < toolbarItems.length; j++) {\n            if (toolbarItems[j].type === 'Separator') {\n                continue;\n            }\n            else {\n                if ((items[i] === 'OrderedList' || items[i] === 'NumberFormatList') && toolbarItems[j].subCommand === 'OL') {\n                    itemsIndex.push(j);\n                    break;\n                }\n                else if ((items[i] === 'UnorderedList' || items[i] === 'BulletFormatList') && toolbarItems[j].subCommand === 'UL') {\n                    itemsIndex.push(j);\n                    break;\n                }\n                else if (items[i] === 'InsertCode' && toolbarItems[j].subCommand === 'Pre') {\n                    itemsIndex.push(j);\n                    break;\n                }\n                else if (items[i] === 'Blockquote' && toolbarItems[j].subCommand === 'blockquote') {\n                    itemsIndex.push(j);\n                    break;\n                }\n                else if (items[i] === 'FileManager' && toolbarItems[j].subCommand === 'File') {\n                    itemsIndex.push(j);\n                    break;\n                }\n                else if (typeof (items[i]) === 'object' && items[i].command === 'Custom') {\n                    itemsIndex.push(i);\n                    break;\n                }\n                else if (items[i] === toolbarItems[j].subCommand) {\n                    itemsIndex.push(j);\n                    break;\n                }\n            }\n        }\n    }\n    return itemsIndex;\n}\n/**\n * @param {BaseToolbar} baseToolbar - specifies the base\n * @param {boolean} undoRedoStatus - specifies the boolean value\n * @returns {void}\n * @hidden\n */\nfunction updateUndoRedoStatus(baseToolbar, undoRedoStatus) {\n    var i = 0;\n    var trgItems = getTBarItemsIndex(getCollection(undoRedoItems), baseToolbar.toolbarObj.items);\n    var tbItems = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('.' + _base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_TB_ITEM, baseToolbar.toolbarObj.element);\n    var keys = Object.keys(undoRedoStatus);\n    for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n        var key = keys_2[_i];\n        var target = tbItems[trgItems[i]];\n        if (target) {\n            baseToolbar.toolbarObj.enableItems(target, undoRedoStatus[\"\" + key]);\n        }\n        i++;\n    }\n}\n/**\n * To dispatch the event manually\n *\n * @param {Element} element - specifies the element.\n * @param {string} type - specifies the string type.\n * @returns {void}\n * @hidden\n * @deprecated\n */\nfunction dispatchEvent(element, type) {\n    var evt = document.createEvent('HTMLEvents');\n    evt.initEvent(type, false, true);\n    element.dispatchEvent(evt);\n}\n/**\n * To parse the HTML\n *\n * @param {string} value - specifies the string value\n * @returns {DocumentFragment} - returns the document\n * @hidden\n */\nfunction parseHtml(value) {\n    var tempNode = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('template');\n    tempNode.innerHTML = value;\n    if (tempNode.content instanceof DocumentFragment) {\n        return tempNode.content;\n    }\n    else {\n        return document.createRange().createContextualFragment(value);\n    }\n}\n/**\n * @param {Document} docElement - specifies the document element\n * @param {Element} node - specifies the node\n * @returns {Node[]} - returns the node array\n * @hidden\n */\nfunction getTextNodesUnder(docElement, node) {\n    var nodes = [];\n    for (node = node.firstChild; node; node = node.nextSibling) {\n        if (node.nodeType === 3) {\n            nodes.push(node);\n        }\n        else {\n            nodes = nodes.concat(getTextNodesUnder(docElement, node));\n        }\n    }\n    return nodes;\n}\n/**\n * @param {IToolsItemConfigs} obj - specifies the configuration\n * @returns {void}\n * @hidden\n */\nfunction toObjectLowerCase(obj) {\n    var convertedValue = {};\n    var keys = Object.keys(obj);\n    for (var i = 0; i < Object.keys(obj).length; i++) {\n        convertedValue[keys[i].toLocaleLowerCase()] = obj[keys[i]];\n    }\n    return convertedValue;\n}\n/**\n * @param {string} value - specifies the string value\n * @param {IRichTextEditor} rteObj - specifies the rte object\n * @returns {string} - returns the string\n * @hidden\n */\nfunction getEditValue(value, rteObj) {\n    var val;\n    if (value !== null && value !== '') {\n        val = rteObj.enableHtmlEncode ? updateTextNode(decode(value), rteObj) : updateTextNode(value, rteObj);\n        rteObj.setProperties({ value: val }, true);\n    }\n    else {\n        if (rteObj.enterKey === 'DIV') {\n            val = rteObj.enableHtmlEncode ? '&lt;div&gt;&lt;br/&gt;&lt;/div&gt;' : '<div><br/></div>';\n        }\n        else if (rteObj.enterKey === 'BR') {\n            val = rteObj.enableHtmlEncode ? '&lt;br/&gt;' : '<br/>';\n        }\n        else {\n            val = rteObj.enableHtmlEncode ? '&lt;p&gt;&lt;br/&gt;&lt;/p&gt;' : '<p><br/></p>';\n        }\n    }\n    return val;\n}\n/**\n * @param {string} value - specifies the value\n * @param {IRichTextEditor} rteObj - specifies the rich text editor instance.\n * @returns {string} - returns the string\n * @hidden\n */\nfunction updateTextNode(value, rteObj) {\n    var tempNode = document.createElement('div');\n    var resultElm = document.createElement('div');\n    var childNodes = tempNode.childNodes;\n    tempNode.innerHTML = value;\n    tempNode.setAttribute('class', 'tempDiv');\n    if (childNodes.length > 0) {\n        var isPreviousInlineElem = void 0;\n        var previousParent = void 0;\n        var insertElem = void 0;\n        while (tempNode.firstChild) {\n            var emptyBlockElem = tempNode.querySelectorAll(_base_constant__WEBPACK_IMPORTED_MODULE_2__.blockEmptyNodes);\n            for (var i = 0; i < emptyBlockElem.length; i++) {\n                emptyBlockElem[i].innerHTML = '<br>';\n            }\n            // To handle the Empty block node with \\n\n            var allPNodes = tempNode.querySelectorAll('p');\n            for (var i = 0; i < allPNodes.length; i++) {\n                if (allPNodes[i].textContent.trim().length === 0 && allPNodes[i].childNodes.length === 1\n                    && allPNodes[i].childNodes[0].nodeName === '#text' &&\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(allPNodes[i].childNodes[0].textContent.match(/\\u00a0/g))) {\n                    allPNodes[i].innerHTML = '<br>';\n                }\n            }\n            var emptyInlineElem = tempNode.querySelectorAll(_base_constant__WEBPACK_IMPORTED_MODULE_2__.inlineEmptyNodes);\n            for (var i = 0; i < emptyInlineElem.length; i++) {\n                emptyInlineElem[i].innerHTML = '&ZeroWidthSpace;';\n            }\n            if (rteObj.enterKey !== 'BR' && ((tempNode.firstChild.nodeName === '#text' &&\n                (tempNode.firstChild.textContent.indexOf('\\n') < 0 || tempNode.firstChild.textContent.trim() !== '')) ||\n                inlineNode.indexOf(tempNode.firstChild.nodeName.toLocaleLowerCase()) >= 0)) {\n                if (!isPreviousInlineElem) {\n                    if (rteObj.enterKey === 'DIV') {\n                        insertElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n                    }\n                    else {\n                        insertElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('p');\n                    }\n                    resultElm.appendChild(insertElem);\n                    insertElem.appendChild(tempNode.firstChild);\n                }\n                else {\n                    previousParent.appendChild(tempNode.firstChild);\n                }\n                previousParent = insertElem;\n                isPreviousInlineElem = true;\n            }\n            else if (tempNode.firstChild.nodeName === '#text' && (tempNode.firstChild.textContent === '\\n' ||\n                (tempNode.firstChild.textContent.indexOf('\\n') >= 0 && tempNode.firstChild.textContent.trim() === ''))) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(tempNode.firstChild);\n            }\n            else {\n                resultElm.appendChild(tempNode.firstChild);\n                isPreviousInlineElem = false;\n            }\n        }\n        var imageElm = resultElm.querySelectorAll('img');\n        for (var i = 0; i < imageElm.length; i++) {\n            if (imageElm[i].classList.contains('e-rte-image-unsupported')) {\n                continue; // Should not add the class if the image is Broken.\n            }\n            if (!imageElm[i].classList.contains(_base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_RTE_IMAGE)) {\n                imageElm[i].classList.add(_base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_RTE_IMAGE);\n            }\n            if (!(imageElm[i].classList.contains(_base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_IMGINLINE) ||\n                imageElm[i].classList.contains(_base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_IMGBREAK)) &&\n                !(imageElm[i].classList.contains('e-imgleft') || imageElm[i].classList.contains('e-imgright') || imageElm[i].classList.contains('e-imgcenter'))) {\n                imageElm[i].classList.add(_base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_IMGINLINE);\n            }\n        }\n    }\n    return resultElm.innerHTML;\n}\n/**\n * @param {IRichTextEditor} rteObj - specifies the rte object\n * @returns {string} - returns the value based on enter configuration.\n * @hidden\n */\nfunction getDefaultValue(rteObj) {\n    var currentVal;\n    if (rteObj.enterKey === 'DIV') {\n        currentVal = rteObj.enableHtmlEncode ? '&lt;div&gt;&lt;br/&gt;&lt;/div&gt;' : '<div><br/></div>';\n    }\n    else if (rteObj.enterKey === 'BR') {\n        currentVal = rteObj.enableHtmlEncode ? '&lt;br/&gt;' : '<br/>';\n    }\n    else {\n        currentVal = rteObj.enableHtmlEncode ? '&lt;p&gt;&lt;br/&gt;&lt;/p&gt;' : '<p><br/></p>';\n    }\n    return currentVal;\n}\n/**\n * @param {string} value - specifies the value\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\nfunction isEditableValueEmpty(value) {\n    return (value === '<p><br></p>' || value === '&lt;p&gt;&lt;br&gt;&lt;/p&gt;'\n        || value === '<div><br></div>' || value === '&lt;div&gt;&lt;br&gt;&lt;/div&gt;'\n        || value === '<br>' || value === '&lt;br&gt;'\n        || value === '') ? true : false;\n}\n/**\n * @param {string} value - specifies the string value\n * @returns {string} - returns the string\n * @hidden\n */\nfunction decode(value) {\n    return value.replace(/&amp;/g, '&').replace(/&amp;lt;/g, '<')\n        .replace(/&lt;/g, '<').replace(/&amp;gt;/g, '>')\n        .replace(/&gt;/g, '>').replace(/&nbsp;/g, ' ')\n        .replace(/&amp;nbsp;/g, ' ').replace(/&quot;/g, '');\n}\n/**\n * @param {string} value - specifies the string value\n * @param {IRichTextEditor} parent - specifies the rte\n * @returns {string} - returns the string value\n * @hidden\n */\nfunction sanitizeHelper(value, parent) {\n    if (parent.enableHtmlSanitizer) {\n        var item = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.beforeSanitize();\n        if (item.selectors.tags[2] && item.selectors.tags[2].indexOf('iframe') > -1) {\n            item.selectors.tags[2] = 'iframe:not(.e-rte-embed-url)';\n        }\n        var beforeEvent = {\n            cancel: false,\n            helper: null\n        };\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(item, item, beforeEvent);\n        parent.trigger('beforeSanitizeHtml', item);\n        if (item.cancel && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(item.helper)) {\n            value = item.helper(value);\n        }\n        else if (!item.cancel) {\n            value = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.serializeValue(item, value);\n        }\n    }\n    value = parseHelper(value);\n    return value;\n}\n/**\n * @param {string} value - specifies the string value\n * @returns {string} - returns the string value\n * @hidden\n */\nfunction parseHelper(value) {\n    var temp = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n    value = value.replace(/&(times|divide|ne)/g, '&amp;amp;$1');\n    temp.innerHTML = value;\n    var fontElements = temp.querySelectorAll('font');\n    fontElements.forEach(function (font) {\n        var span = document.createElement('span');\n        var style = (font.getAttribute('style') || '').replace(/style:/gi, '').trim();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(style) && style.trim() !== '' && !style.endsWith(';')) {\n            style += ';';\n        }\n        Array.from(font.attributes).forEach(function (attr) {\n            var name = attr.name.toLowerCase();\n            var value = attr.value;\n            switch (name) {\n                case 'size':\n                    style += \"font-size:\" + value + \";\";\n                    break;\n                case 'face':\n                    style += \"font-family:\" + value + \";\";\n                    break;\n                case 'bgcolor':\n                    style += \"background-color:\" + value + \";\";\n                    break;\n                case 'style':\n                    break;\n                default:\n                    style += name + \":\" + value + \";\";\n                    break;\n            }\n        });\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(style) && style.trim() !== '') {\n            style = style.replace(/;;+/g, ';');\n            span.style.cssText = style;\n        }\n        span.innerHTML = font.innerHTML;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(font.parentNode)) {\n            font.parentNode.replaceChild(span, font);\n        }\n    });\n    var parsedValue = temp.innerHTML;\n    temp.remove();\n    return parsedValue;\n}\n/**\n * @param {string} dataUrl - specifies the string value\n * @returns {BaseToolbar} - returns the value\n * @hidden\n */\n//Converting the base64 url to blob\nfunction convertToBlob(dataUrl) {\n    var arr = dataUrl.split(',');\n    var mime = arr[0].match(/:(.*?);/)[1];\n    var bstr = atob(arr[1]);\n    var n = bstr.length;\n    var u8arr = new Uint8Array(n);\n    while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new Blob([u8arr], { type: mime });\n}\n/**\n * @param {IRichTextEditor} self - specifies the rte\n * @param {string} localeItems - specifies the locale items\n * @param {IDropDownItemModel} item - specifies the dropdown item\n * @returns {string} - returns the value\n * @hidden\n */\nfunction getLocaleFontFormat(self, localeItems, item) {\n    for (var i = 0; localeItems.length > i; i++) {\n        if (localeItems[i].value === item.value || localeItems[i].value === item.subCommand) {\n            return self.localeObj.getConstant(localeItems[i].locale);\n        }\n    }\n    return item.text;\n}\n/**\n * @param {string} value - specifies the string value\n * @param {string} editorMode - specifies the string value\n * @returns {string} - returns the string value\n * @hidden\n */\nfunction resetContentEditableElements(value, editorMode) {\n    if (editorMode && editorMode === 'HTML' && value) {\n        var valueElementWrapper = document.createElement('div');\n        valueElementWrapper.innerHTML = value;\n        valueElementWrapper.querySelectorAll('.e-img-inner').forEach(function (el) {\n            el.setAttribute('contenteditable', 'true');\n        });\n        value = valueElementWrapper.innerHTML;\n        valueElementWrapper.remove();\n    }\n    return value;\n}\n/**\n * @param {string} value - specifies the string value\n * @param {string} editorMode - specifies the string value\n * @returns {string} - returns the string value\n * @hidden\n */\nfunction cleanupInternalElements(value, editorMode) {\n    if (value && editorMode) {\n        var valueElementWrapper = document.createElement('div');\n        if (editorMode === 'HTML') {\n            valueElementWrapper.innerHTML = value;\n            valueElementWrapper.querySelectorAll('.e-img-inner').forEach(function (el) {\n                el.setAttribute('contenteditable', 'false');\n            });\n            var item = valueElementWrapper.querySelectorAll('.e-column-resize, .e-row-resize, .e-table-box, .e-table-rhelper, .e-img-resize, .e-vid-resize');\n            if (item.length > 0) {\n                for (var i = 0; i < item.length; i++) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(item[i]);\n                }\n            }\n            removeSelectionClassStates(valueElementWrapper);\n        }\n        else {\n            valueElementWrapper.textContent = value;\n        }\n        return (editorMode === 'Markdown') ? valueElementWrapper.innerHTML.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&') : valueElementWrapper.innerHTML;\n    }\n    return value;\n}\n/**\n * @param {HTMLElement} element - specifies the element\n * @returns {void}\n * @hidden\n */\nfunction removeSelectionClassStates(element) {\n    var classNames = [_base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_IMG_FOCUS, _base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_TABLE_SEL,\n        _base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_TABLE_MULTI_CELL, _base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_TABLE_SEL_END, _base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_VID_FOCUS,\n        _base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_AUD_FOCUS, _base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_RESIZE, _base_classes__WEBPACK_IMPORTED_MODULE_1__.CLS_RTE_DRAG_IMAGE];\n    for (var i = 0; i < classNames.length; i++) {\n        var item = element.querySelectorAll('.' + classNames[i]);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(item, classNames[i]);\n        if (item.length === 0) {\n            continue;\n        }\n        for (var j = 0; j < item.length; j++) {\n            if (item[j].classList.length === 0) {\n                item[j].removeAttribute('class');\n            }\n            if ((item[j].nodeName === 'IMG' || item[j].nodeName === 'VIDEO') &&\n                item[j].style.outline !== '') {\n                item[j].style.outline = '';\n            }\n        }\n    }\n    element.querySelectorAll('[class=\"\"]').forEach(function (el) {\n        el.removeAttribute('class');\n    });\n}\n/**\n * @param {IRichTextEditor} self - specifies the rte\n * @returns {void}\n * @hidden\n */\nfunction updateDropDownFontFormatLocale(self) {\n    _models_items__WEBPACK_IMPORTED_MODULE_3__.fontFamily.forEach(function (item, i) {\n        _models_items__WEBPACK_IMPORTED_MODULE_3__.fontFamily[i].text = getLocaleFontFormat(self, _models_default_locale__WEBPACK_IMPORTED_MODULE_4__.fontNameLocale, _models_items__WEBPACK_IMPORTED_MODULE_3__.fontFamily[i]);\n    });\n    _models_items__WEBPACK_IMPORTED_MODULE_3__.formatItems.forEach(function (item, i) {\n        _models_items__WEBPACK_IMPORTED_MODULE_3__.formatItems[i].text = getLocaleFontFormat(self, _models_default_locale__WEBPACK_IMPORTED_MODULE_4__.formatsLocale, _models_items__WEBPACK_IMPORTED_MODULE_3__.formatItems[i]);\n    });\n    _models_items__WEBPACK_IMPORTED_MODULE_3__.numberFormatList.forEach(function (item, i) {\n        _models_items__WEBPACK_IMPORTED_MODULE_3__.numberFormatList[i].text = getLocaleFontFormat(self, _models_default_locale__WEBPACK_IMPORTED_MODULE_4__.numberFormatListLocale, _models_items__WEBPACK_IMPORTED_MODULE_3__.numberFormatList[i]);\n    });\n    _models_items__WEBPACK_IMPORTED_MODULE_3__.bulletFormatList.forEach(function (item, i) {\n        _models_items__WEBPACK_IMPORTED_MODULE_3__.bulletFormatList[i].text = getLocaleFontFormat(self, _models_default_locale__WEBPACK_IMPORTED_MODULE_4__.bulletFormatListLocale, _models_items__WEBPACK_IMPORTED_MODULE_3__.bulletFormatList[i]);\n    });\n}\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/base/util.js?");

/***/ })

}]);