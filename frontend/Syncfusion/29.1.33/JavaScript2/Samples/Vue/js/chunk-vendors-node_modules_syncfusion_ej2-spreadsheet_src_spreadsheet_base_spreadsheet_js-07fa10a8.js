"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-spreadsheet_src_spreadsheet_base_spreadsheet_js-07fa10a8"],{

/***/ "./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/base/spreadsheet.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/base/spreadsheet.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Spreadsheet: () => (/* binding */ Spreadsheet)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _common_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/common/index.js\");\n/* harmony import */ var _renderer_render__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../renderer/render */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/renderer/render.js\");\n/* harmony import */ var _actions_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../actions/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/actions/index.js\");\n/* harmony import */ var _services_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/services/index.js\");\n/* harmony import */ var _workbook_services_index__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../workbook/services/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/services/index.js\");\n/* harmony import */ var _workbook_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../workbook/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/index.js\");\n/* harmony import */ var _workbook_common_index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../workbook/common/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/common/index.js\");\n/* harmony import */ var _workbook_base_workbook__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../workbook/base/workbook */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/base/workbook.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n/* harmony import */ var _workbook_base_index__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../workbook/base/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/base/index.js\");\n/* harmony import */ var _integrations_index__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../integrations/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/integrations/index.js\");\n/* harmony import */ var _syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-grids */ \"./node_modules/@syncfusion/ej2-grids/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/index.js\");\n/* harmony import */ var _workbook_actions_index__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../workbook/actions/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/actions/index.js\");\n/* harmony import */ var _actions_conditional_formatting__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../actions/conditional-formatting */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/actions/conditional-formatting.js\");\n/* harmony import */ var _renderer_print__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../renderer/print */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/renderer/print.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path='../../workbook/base/workbook-model.d.ts'/>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Represents the Spreadsheet component.\n *\n * ```html\n * <div id='spreadsheet'></div>\n * <script>\n *  let spreadsheetObj = new Spreadsheet();\n *  spreadsheetObj.appendTo('#spreadsheet');\n * </script>\n * ```\n */\nvar Spreadsheet = /** @class */ (function (_super) {\n    __extends(Spreadsheet, _super);\n    /**\n     * Constructor for creating the widget.\n     *\n     * @param  {SpreadsheetModel} options - Configures Spreadsheet options.\n     * @param  {string|HTMLElement} element - Element to render Spreadsheet.\n     */\n    function Spreadsheet(options, element) {\n        var _this = _super.call(this, options) || this;\n        /** @hidden */\n        _this.viewport = {\n            rowCount: 0, colCount: 0, height: 0, topIndex: 0, leftIndex: 0, width: 0,\n            bottomIndex: 0, rightIndex: 0, beforeFreezeHeight: 0, beforeFreezeWidth: 0, scaleX: 1, scaleY: 1\n        };\n        _this.needsID = true;\n        Spreadsheet_1.Inject(_integrations_index__WEBPACK_IMPORTED_MODULE_11__.Ribbon, _integrations_index__WEBPACK_IMPORTED_MODULE_11__.FormulaBar, _integrations_index__WEBPACK_IMPORTED_MODULE_11__.SheetTabs, _actions_index__WEBPACK_IMPORTED_MODULE_3__.Selection, _actions_index__WEBPACK_IMPORTED_MODULE_3__.Edit, _actions_index__WEBPACK_IMPORTED_MODULE_3__.KeyboardNavigation, _actions_index__WEBPACK_IMPORTED_MODULE_3__.KeyboardShortcut, _actions_index__WEBPACK_IMPORTED_MODULE_3__.Clipboard, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.DataBind, _integrations_index__WEBPACK_IMPORTED_MODULE_11__.Open, _integrations_index__WEBPACK_IMPORTED_MODULE_11__.ContextMenu, _integrations_index__WEBPACK_IMPORTED_MODULE_11__.Save, _integrations_index__WEBPACK_IMPORTED_MODULE_11__.NumberFormat, _actions_index__WEBPACK_IMPORTED_MODULE_3__.CellFormat, _integrations_index__WEBPACK_IMPORTED_MODULE_11__.Formula, _actions_index__WEBPACK_IMPORTED_MODULE_3__.WrapText, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookEdit, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookOpen, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookSave, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookCellFormat, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookNumberFormat, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookFormula, _integrations_index__WEBPACK_IMPORTED_MODULE_11__.Sort, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookSort, _actions_index__WEBPACK_IMPORTED_MODULE_3__.Resize, _actions_index__WEBPACK_IMPORTED_MODULE_3__.UndoRedo, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookFilter, _integrations_index__WEBPACK_IMPORTED_MODULE_11__.Filter, _actions_index__WEBPACK_IMPORTED_MODULE_3__.SpreadsheetHyperlink, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookHyperlink, _actions_index__WEBPACK_IMPORTED_MODULE_3__.Insert, _actions_index__WEBPACK_IMPORTED_MODULE_3__.Delete, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookInsert, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookDelete, _index__WEBPACK_IMPORTED_MODULE_13__.DataValidation, _workbook_actions_index__WEBPACK_IMPORTED_MODULE_14__.WorkbookDataValidation, _renderer_print__WEBPACK_IMPORTED_MODULE_16__.Print, _actions_index__WEBPACK_IMPORTED_MODULE_3__.ProtectSheet, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookProtectSheet, _actions_index__WEBPACK_IMPORTED_MODULE_3__.FindAndReplace, _workbook_actions_index__WEBPACK_IMPORTED_MODULE_14__.WorkbookFindAndReplace, _actions_index__WEBPACK_IMPORTED_MODULE_3__.Merge, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookMerge, _integrations_index__WEBPACK_IMPORTED_MODULE_11__.SpreadsheetImage, _actions_conditional_formatting__WEBPACK_IMPORTED_MODULE_15__.ConditionalFormatting, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookImage, _workbook_actions_index__WEBPACK_IMPORTED_MODULE_14__.WorkbookConditionalFormat, _integrations_index__WEBPACK_IMPORTED_MODULE_11__.SpreadsheetChart, _workbook_index__WEBPACK_IMPORTED_MODULE_6__.WorkbookChart, _actions_index__WEBPACK_IMPORTED_MODULE_3__.AutoFill, _workbook_actions_index__WEBPACK_IMPORTED_MODULE_14__.WorkbookAutoFill, _actions_index__WEBPACK_IMPORTED_MODULE_3__.SpreadsheetNote);\n        if (element) {\n            _this.appendTo(element);\n        }\n        return _this;\n    }\n    Spreadsheet_1 = Spreadsheet;\n    /**\n     * To get cell element.\n     *\n     * @param {number} rowIndex - specify the rowIndex.\n     * @param {number} colIndex - specify the colIndex.\n     * @param {HTMLTableElement} row - specify the row.\n     * @returns {HTMLElement} - Get cell element\n     * @hidden\n     */\n    Spreadsheet.prototype.getCell = function (rowIndex, colIndex, row) {\n        var td;\n        if (this.insideViewport(rowIndex, colIndex)) {\n            if (!row) {\n                row = this.getRow(rowIndex, null, colIndex);\n            }\n            colIndex = this.getViewportIndex(colIndex, true);\n            td = row ? row.cells[colIndex] : row;\n        }\n        return td;\n    };\n    /**\n     * Get cell element.\n     *\n     * @param {number} index - specify the index.\n     * @param {HTMLTableElement} table - specify the table.\n     * @param {number} colIdx - specify the column index.\n     * @returns {HTMLTableRowElement} - Get cell element\n     * @hidden\n     */\n    Spreadsheet.prototype.getRow = function (index, table, colIdx) {\n        if (!table) {\n            var sheet = this.getActiveSheet();\n            var frozenRow = this.frozenRowCount(sheet);\n            var frozenCol = this.frozenColCount(sheet);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(colIdx) || index > frozenRow - 1 && colIdx > frozenCol - 1) {\n                table = this.getContentTable();\n            }\n            else {\n                table = index < frozenRow && colIdx < frozenCol ? this.sheetModule.getSelectAllTable() : (index < frozenRow ?\n                    this.getColHeaderTable() : this.getRowHeaderTable());\n            }\n        }\n        index = this.getViewportIndex(index);\n        return table ? table.rows[index] : null;\n    };\n    /**\n     * To get hidden row/column count between two specified index.\n     *\n     * Set `layout` as `columns` if you want to get column hidden count.\n     *\n     * @param {number} startIndex - specify the startIndex.\n     * @param {number} endIndex - specify the endIndex.\n     * @param {string} layout - specify the layout.\n     * @param {SheetModel} sheet - specify the sheet.\n     * @returns {number} - To get hidden row/column count between two specified index.\n     * @hidden\n     */\n    Spreadsheet.prototype.hiddenCount = function (startIndex, endIndex, layout, sheet) {\n        if (layout === void 0) { layout = 'rows'; }\n        if (sheet === void 0) { sheet = this.getActiveSheet(); }\n        var count = 0;\n        var rowColModel;\n        for (var i = startIndex; i <= endIndex; i++) {\n            rowColModel = sheet[\"\" + layout][i];\n            if (rowColModel && rowColModel.hidden) {\n                count++;\n            }\n        }\n        return count;\n    };\n    /**\n     * To get row/column viewport index.\n     *\n     * @param {number} index - specify the index.\n     * @param {boolean} isCol - specify the bool value.\n     * @returns {number} - To get row/column viewport index.\n     * @hidden\n     */\n    Spreadsheet.prototype.getViewportIndex = function (index, isCol) {\n        var sheet = this.getActiveSheet();\n        var frozenCol = this.frozenColCount(sheet);\n        var frozenRow = this.frozenRowCount(sheet);\n        if (isCol) {\n            if (frozenCol) {\n                var leftIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(sheet.topLeftCell)[1];\n                if (index < frozenCol) {\n                    index -= this.hiddenCount(leftIndex, index, 'columns');\n                    index -= leftIndex;\n                    return index + 1;\n                }\n                else {\n                    index -= this.hiddenCount(this.viewport.leftIndex + frozenCol, index, 'columns');\n                    index -= (this.viewport.leftIndex + frozenCol);\n                    return index;\n                }\n            }\n            else {\n                index -= this.hiddenCount(this.viewport.leftIndex, index, 'columns');\n                index -= this.viewport.leftIndex;\n            }\n        }\n        else {\n            if (frozenRow) {\n                var topIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(sheet.topLeftCell)[0];\n                if (index < frozenRow) {\n                    index -= this.hiddenCount(topIndex, index);\n                    index -= topIndex;\n                    return index + 1;\n                }\n                else {\n                    index -= this.hiddenCount(this.viewport.topIndex + frozenRow, index);\n                    index -= (this.viewport.topIndex + frozenRow);\n                    return index;\n                }\n            }\n            else {\n                index -= this.hiddenCount(this.viewport.topIndex, index);\n                index -= this.viewport.topIndex;\n            }\n        }\n        return index;\n    };\n    /**\n     * To initialize the services;\n     *\n     * @returns {void} - To initialize the services.\n     * @hidden\n     */\n    Spreadsheet.prototype.preRender = function () {\n        _super.prototype.preRender.call(this);\n        this.serviceLocator = new _workbook_services_index__WEBPACK_IMPORTED_MODULE_5__.ServiceLocator;\n        this.initServices();\n    };\n    Spreadsheet.prototype.initServices = function () {\n        this.serviceLocator.register(_common_index__WEBPACK_IMPORTED_MODULE_1__.locale, new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n(this.getModuleName(), _common_index__WEBPACK_IMPORTED_MODULE_1__.defaultLocale, this.locale));\n        this.serviceLocator.register(_common_index__WEBPACK_IMPORTED_MODULE_1__.dialog, new _services_index__WEBPACK_IMPORTED_MODULE_4__.Dialog(this));\n        this.serviceLocator.register(_common_index__WEBPACK_IMPORTED_MODULE_1__.actionEvents, new _services_index__WEBPACK_IMPORTED_MODULE_4__.ActionEvents(this));\n        this.serviceLocator.register(_common_index__WEBPACK_IMPORTED_MODULE_1__.overlay, new _services_index__WEBPACK_IMPORTED_MODULE_4__.Overlay(this));\n    };\n    /**\n     * To Initialize the component rendering.\n     *\n     * @returns {void} - To Initialize the component rendering.\n     * @hidden\n     */\n    Spreadsheet.prototype.render = function () {\n        _super.prototype.render.call(this);\n        this.element.setAttribute('tabindex', '0');\n        this.renderModule = new _renderer_render__WEBPACK_IMPORTED_MODULE_2__.Render(this);\n        this.renderSpreadsheet();\n        this.wireEvents();\n        if (this.created && !this.refreshing) {\n            if (this.created.observers) {\n                if (this.created.observers.length > 0) {\n                    var observerObject = { observers: this.created.observers };\n                    if (this.isAngular) {\n                        observerObject = { observers: this.created.observers,\n                            currentObservers: this.created.observers };\n                        this.created.currentObservers = [];\n                    }\n                    this.createdHandler = observerObject;\n                    this.created.observers = [];\n                }\n            }\n            else {\n                this.createdHandler = this.created;\n                this.setProperties({ created: undefined }, true);\n            }\n        }\n    };\n    Spreadsheet.prototype.renderSpreadsheet = function () {\n        if (this.cssClass) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], this.cssClass.split(' '));\n        }\n        this.setHeight();\n        this.setWidth();\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_9__.createSpinner)({ target: this.element }, this.createElement);\n        if (this.cssClass && this.cssClass.indexOf('e-mobile-view') === -1 && this.isMobileView()) {\n            this.element.classList.add('e-mobile-view');\n        }\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.element.classList.add('e-device');\n        }\n        this.sheetModule = this.serviceLocator.getService('sheet');\n        if (this.allowScrolling) {\n            this.scrollModule = new _actions_index__WEBPACK_IMPORTED_MODULE_3__.Scroll(this);\n        }\n        if (this.scrollSettings.enableVirtualization) {\n            new _actions_index__WEBPACK_IMPORTED_MODULE_3__.VirtualScroll(this);\n        }\n        this.renderModule.render();\n        new _actions_index__WEBPACK_IMPORTED_MODULE_3__.ShowHide(this);\n    };\n    /**\n     * By default, Spreadsheet shows the spinner for all its actions. To manually show spinner you this method at your needed time.\n     *\n     * {% codeBlock src='spreadsheet/showSpinner/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void} - shows spinner\n     */\n    Spreadsheet.prototype.showSpinner = function () {\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_9__.showSpinner)(this.element);\n    };\n    /**\n     * To hide showed spinner manually.\n     *\n     * {% codeBlock src='spreadsheet/hideSpinner/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void} - To hide showed spinner manually.\n     */\n    Spreadsheet.prototype.hideSpinner = function () {\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_9__.hideSpinner)(this.element);\n    };\n    /**\n     * To protect the particular sheet.\n     *\n     * {% codeBlock src='spreadsheet/protectSheet/index.md' %}{% endcodeBlock %}\n     *\n     * @param {number | string} sheet - Specifies the sheet to protect.\n     * @param {ProtectSettingsModel} protectSettings - Specifies the protect sheet options.\n     * @default { selectCells: 'false', formatCells: 'false', formatRows: 'false', formatColumns:'false', insertLink:'false' }\n     * @param {string} password - Specifies the password to protect.\n     * @returns {void} - To protect the particular sheet.\n     */\n    Spreadsheet.prototype.protectSheet = function (sheet, protectSettings, password) {\n        _super.prototype.protectSheet.call(this, sheet, protectSettings, password);\n    };\n    /**\n     * To unprotect the particular sheet.\n     *\n     * {% codeBlock src='spreadsheet/unprotectSheet/index.md' %}{% endcodeBlock %}\n     *\n     * @param {number | string} sheet - Specifies the sheet name or index to Unprotect.\n     * @returns {void} - To unprotect the particular sheet.\n     */\n    Spreadsheet.prototype.unprotectSheet = function (sheet) {\n        _super.prototype.unprotectSheet.call(this, sheet);\n    };\n    /**\n     * To find the specified cell value.\n     *\n     * {% codeBlock src='spreadsheet/find/index.md' %}{% endcodeBlock %}\n     *\n     * @param {FindOptions} args - Specifies the replace value with find args to replace specified cell value.\n     * @param {string} args.value - Specifies the value to be find.\n     * @param {string} args.mode - Specifies the value to be find within sheet or workbook.\n     * @param {string} args.searchBy - Specifies the value to be find by row or column.\n     * @param {boolean} args.isCSen - Specifies the find match with case sensitive or not.\n     * @param {boolean} args.isEMatch - Specifies the find match with entire match or not.\n     * @param {string} args.findOpt - Specifies the next or previous find match.\n     * @param {number} args.sheetIndex - Specifies the current sheet to find.\n     * @default { mode: 'Sheet', searchBy: 'By Row', isCSen: 'false', isEMatch:'false' }\n     * @returns {void} - To find the specified cell value.\n     */\n    Spreadsheet.prototype.find = function (args) {\n        var activeCell = this.getActiveSheet().activeCell;\n        _super.prototype.findHandler.call(this, args);\n        if (!args.isAction) {\n            if (activeCell !== this.getActiveSheet().activeCell) {\n                return this.getActiveSheet().name + '!' + this.getActiveSheet().activeCell;\n            }\n            else {\n                return null;\n            }\n        }\n    };\n    /**\n     * To replace the specified cell value.\n     *\n     * {% codeBlock src='spreadsheet/replace/index.md' %}{% endcodeBlock %}\n     *\n     * @param {FindOptions} args - Specifies the replace value with find args to replace specified cell value.\n     * @param {string} args.replaceValue - Specifies the replacing value.\n     * @param {string} args.replaceBy - Specifies the value to be replaced for one or all.\n     * @param {string} args.value - Specifies the value to be replaced\n     * @returns {void} - To replace the specified cell value.\n     */\n    Spreadsheet.prototype.replace = function (args) {\n        args = {\n            value: args.value, mode: args.mode ? args.mode : 'Sheet', isCSen: args.isCSen ? args.isCSen : false,\n            isEMatch: args.isEMatch ? args.isEMatch : false, searchBy: args.searchBy ? args.searchBy : 'By Row',\n            replaceValue: args.replaceValue, replaceBy: args.replaceBy,\n            sheetIndex: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(args.sheetIndex) ? this.activeSheetIndex : args.sheetIndex, findOpt: args.findOpt ? args.findOpt : ''\n        };\n        _super.prototype.replaceHandler.call(this, args);\n    };\n    /**\n     * To Find All the Match values Address within Sheet or Workbook.\n     *\n     * {% codeBlock src='spreadsheet/findAll/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} value - Specifies the value to find.\n     * @param {string} mode - Specifies the value to be find within Sheet/Workbook.\n     * @param {boolean} isCSen - Specifies the find match with case sensitive or not.\n     * @param {boolean} isEMatch - Specifies the find match with entire match or not.\n     * @param {number} sheetIndex - Specifies the sheetIndex. If not specified, it will consider the active sheet.\n     * @returns {string[]} - To Find All the Match values Address within Sheet or Workbook.\n     */\n    Spreadsheet.prototype.findAll = function (value, mode, isCSen, isEMatch, sheetIndex) {\n        mode = mode ? mode : 'Sheet';\n        sheetIndex = sheetIndex < this.sheets.length ? sheetIndex : this.activeSheetIndex;\n        isCSen = isCSen ? isCSen : false;\n        isEMatch = isEMatch ? isEMatch : false;\n        var findCollection = [];\n        var findAllArguments = {\n            value: value, mode: mode, sheetIndex: sheetIndex, isCSen: isCSen,\n            isEMatch: isEMatch, findCollection: findCollection\n        };\n        this.notify(_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.findAllValues, findAllArguments);\n        return findCollection;\n    };\n    /**\n     * Used to navigate to cell address within workbook.\n     *\n     * {% codeBlock src='spreadsheet/goTo/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} address - Specifies the cell address you need to navigate.\n     * You can specify the address in two formats,\n     * `{sheet name}!{cell address}` - Switch to specified sheet and navigate to specified cell address.\n     * `{cell address}` - Navigate to specified cell address with in the active sheet.\n     * @returns {void} - Used to navigate to cell address within workbook.\n     */\n    Spreadsheet.prototype.goTo = function (address) {\n        if (address.includes('!')) {\n            var idx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetIndex)(this, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetNameFromAddress)(address));\n            if (idx === undefined) {\n                return;\n            }\n            if (idx !== this.activeSheetIndex) {\n                var selectRange_1 = address.substring(address.lastIndexOf('!') + 1);\n                var activeCell = selectRange_1.split(':')[0];\n                var sheet_1 = this.sheets[idx];\n                this.setSheetPropertyOnMute(sheet_1, 'activeCell', activeCell);\n                this.setSheetPropertyOnMute(sheet_1, 'selectedRange', selectRange_1);\n                var cellIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(activeCell);\n                if (sheet_1.frozenColumns || sheet_1.frozenRows) {\n                    var topLeftCell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(sheet_1.topLeftCell);\n                    if (!((sheet_1.frozenRows && cellIndex[0] < topLeftCell[0]) || (sheet_1.frozenColumns && cellIndex[1] < topLeftCell[1]))) {\n                        var frozenRow_1 = this.frozenRowCount(sheet_1);\n                        var frozenCol_1 = this.frozenColCount(sheet_1);\n                        var curCell = [];\n                        var paneCell = [];\n                        var paneTopLeftCell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(sheet_1.paneTopLeftCell);\n                        if (frozenRow_1) {\n                            curCell.push(topLeftCell[0]);\n                            if (cellIndex[0] >= frozenRow_1) {\n                                paneCell.push(cellIndex[0]);\n                            }\n                            else {\n                                paneCell.push(paneTopLeftCell[0]);\n                            }\n                        }\n                        else {\n                            curCell.push(cellIndex[0]);\n                            paneCell.push(cellIndex[0]);\n                        }\n                        if (frozenCol_1) {\n                            curCell.push(topLeftCell[1]);\n                            if (cellIndex[1] >= frozenCol_1) {\n                                paneCell.push(cellIndex[1]);\n                            }\n                            else {\n                                paneCell.push(paneTopLeftCell[1]);\n                            }\n                        }\n                        else {\n                            curCell.push(cellIndex[1]);\n                            paneCell.push(cellIndex[1]);\n                        }\n                        this.setSheetPropertyOnMute(sheet_1, 'topLeftCell', (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.getCellAddress)(curCell[0], curCell[1]));\n                        this.setSheetPropertyOnMute(sheet_1, 'paneTopLeftCell', (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.getCellAddress)(paneCell[0], paneCell[1]));\n                    }\n                }\n                else {\n                    if (cellIndex[0] < this.viewport.rowCount) {\n                        cellIndex[0] = 0;\n                    }\n                    if (cellIndex[1] < this.viewport.colCount) {\n                        cellIndex[1] = 0;\n                    }\n                    this.updateTopLeftCell(cellIndex[0], cellIndex[1], null, sheet_1);\n                }\n                this.activeSheetIndex = idx;\n                this.dataBind();\n                return;\n            }\n        }\n        var indexes = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getRangeIndexes)(address);\n        var sheet = this.getActiveSheet();\n        var frozenRow = this.frozenRowCount(sheet);\n        var frozenCol = this.frozenColCount(sheet);\n        var insideDomCount = this.insideViewport(indexes[0], indexes[1]);\n        if (insideDomCount) {\n            this.selectRange(address);\n            var viewportIndexes = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(sheet.paneTopLeftCell);\n            var viewportSize = this.viewport.height;\n            if (this.allowScrolling) {\n                viewportSize -= this.getScrollElement().parentElement.getBoundingClientRect().height;\n            }\n            var threshold = 0;\n            var lastRowIdx = 0;\n            if (frozenRow) {\n                var topLeftIndexes = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(sheet.topLeftCell);\n                for (var i = topLeftIndexes[0]; i < frozenRow; i++) {\n                    threshold += (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.getRowHeight)(sheet, i);\n                    if (threshold > viewportSize) {\n                        lastRowIdx = i;\n                        break;\n                    }\n                }\n            }\n            if (lastRowIdx === 0) {\n                for (var i = viewportIndexes[0]; i <= this.viewport.bottomIndex; i++) {\n                    threshold += (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.getRowHeight)(sheet, i);\n                    if (threshold > viewportSize) {\n                        lastRowIdx = i;\n                        break;\n                    }\n                    else if (i === this.viewport.bottomIndex) {\n                        lastRowIdx = this.viewport.bottomIndex;\n                    }\n                }\n            }\n            viewportIndexes[2] = lastRowIdx;\n            var lastColIdx = 0;\n            threshold = 0;\n            viewportSize = this.viewport.width - this.sheetModule.getScrollSize();\n            if (frozenCol) {\n                var topLeftIndexes = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(sheet.topLeftCell);\n                for (var i = topLeftIndexes[1]; i < frozenCol; i++) {\n                    threshold += (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.getColumnWidth)(sheet, i);\n                    if (threshold > viewportSize) {\n                        lastColIdx = i;\n                        break;\n                    }\n                }\n            }\n            if (lastColIdx === 0) {\n                for (var i = viewportIndexes[1]; i <= this.viewport.rightIndex; i++) {\n                    threshold += (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.getColumnWidth)(sheet, i);\n                    if (threshold > viewportSize) {\n                        lastColIdx = i;\n                        break;\n                    }\n                    else if (i === this.viewport.rightIndex) {\n                        lastColIdx = this.viewport.rightIndex;\n                    }\n                }\n            }\n            viewportIndexes[3] = lastColIdx;\n            if (indexes[0] >= viewportIndexes[0] && indexes[0] < viewportIndexes[2] && indexes[1] >= viewportIndexes[1] &&\n                indexes[1] < viewportIndexes[3]) {\n                return;\n            }\n            if (frozenRow || frozenCol) {\n                viewportIndexes = [].concat((0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(sheet.topLeftCell), [frozenRow, viewportIndexes[3]]);\n                if (indexes[0] >= viewportIndexes[0] && indexes[0] < viewportIndexes[2] && indexes[1] >= viewportIndexes[1] &&\n                    indexes[1] < viewportIndexes[3]) {\n                    return;\n                }\n                viewportIndexes[2] = lastRowIdx;\n                viewportIndexes[3] = frozenCol;\n                if (indexes[0] >= viewportIndexes[0] && indexes[0] < viewportIndexes[2] && indexes[1] >= viewportIndexes[1] &&\n                    indexes[1] < viewportIndexes[3]) {\n                    return;\n                }\n            }\n        }\n        var content = this.getMainContent().parentElement;\n        var vTrack;\n        var cVTrack;\n        var offset;\n        var vWidth;\n        var vHeight;\n        var scrollableSize;\n        if (indexes[0] === frozenRow) {\n            offset = 0;\n        }\n        else {\n            offset = (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.getRowsHeight)(sheet, frozenRow, indexes[0] - 1, true);\n            if (this.scrollSettings.enableVirtualization) {\n                scrollableSize = offset + this.getContentTable().getBoundingClientRect().height;\n                vHeight = parseFloat(content.querySelector('.e-virtualtrack').style.height);\n                if (scrollableSize > vHeight) {\n                    scrollableSize += 10;\n                    vTrack = content.querySelector('.e-virtualtrack');\n                    vTrack.style.height = scrollableSize + \"px\";\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getUpdateUsingRaf)(function () { vTrack.style.height = vHeight + \"px\"; });\n                }\n            }\n        }\n        content.scrollTop = offset;\n        content = this.element.getElementsByClassName('e-scroller')[0];\n        if (indexes[1] === frozenCol) {\n            offset = 0;\n        }\n        else {\n            offset = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getColumnsWidth)(sheet, frozenCol, indexes[1] - 1, true);\n            if (this.scrollSettings.enableVirtualization) {\n                scrollableSize = offset + this.getContentTable().getBoundingClientRect().width;\n                vWidth = parseFloat(content.querySelector('.e-virtualtrack').style.width);\n                if (scrollableSize > vWidth) {\n                    scrollableSize += 10;\n                    vTrack = content.querySelector('.e-virtualtrack');\n                    vTrack.style.width = scrollableSize + \"px\";\n                    cVTrack = this.getColumnHeaderContent().querySelector('.e-virtualtrack');\n                    cVTrack.style.width = scrollableSize + \"px\";\n                    vTrack = this.getMainContent().querySelector('.e-virtualtrack');\n                    vTrack.style.width = scrollableSize + \"px\";\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getUpdateUsingRaf)(function () {\n                        vTrack.style.width = vWidth + \"px\";\n                        cVTrack.style.width = vWidth + \"px\";\n                    });\n                }\n            }\n        }\n        content.scrollLeft = offset;\n        if (!insideDomCount) {\n            this.selectRange(address);\n        }\n    };\n    /**\n     * @hidden\n     * @param {number} rowIndex - Specifies the row index.\n     * @param {number} colIndex - Specifies the column index.\n     * @returns {boolean} - Specifies the boolean value.\n     */\n    Spreadsheet.prototype.insideViewport = function (rowIndex, colIndex) {\n        var sheet = this.getActiveSheet();\n        if (sheet.frozenRows || sheet.frozenColumns) {\n            var frozenRow = this.frozenRowCount(sheet);\n            var frozenCol = this.frozenColCount(sheet);\n            var indexes = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(sheet.topLeftCell);\n            return ((rowIndex >= indexes[0] && rowIndex < frozenRow) || (rowIndex >= this.viewport.topIndex + frozenRow && rowIndex <=\n                this.viewport.bottomIndex)) && ((colIndex >= indexes[1] && colIndex < frozenCol) || (colIndex >= this.viewport.leftIndex +\n                frozenCol && colIndex <= this.viewport.rightIndex));\n        }\n        else {\n            return rowIndex >= this.viewport.topIndex && rowIndex <= this.viewport.bottomIndex && colIndex >= this.viewport.leftIndex &&\n                colIndex <= this.viewport.rightIndex;\n        }\n    };\n    /**\n     * Used to resize the Spreadsheet.\n     *\n     * {% codeBlock src='spreadsheet/resize/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void} - Used to resize the Spreadsheet.\n     */\n    Spreadsheet.prototype.resize = function () {\n        this.renderModule.setSheetPanelSize();\n        if (this.scrollSettings.enableVirtualization) {\n            this.renderModule.refreshSheet(false, true);\n        }\n    };\n    /**\n     * To cut the specified cell or cells properties such as value, format, style etc...\n     *\n     * {% codeBlock src='spreadsheet/cut/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} address - Specifies the range address to cut.\n     * @returns {Promise<Object>} - To cut the specified cell or cells properties such as value, format, style etc...\n     */\n    Spreadsheet.prototype.cut = function (address) {\n        var promise = new Promise(function (resolve) { resolve((function () { })()); });\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.cut, address ? {\n            range: (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getIndexesFromAddress)(address),\n            sId: this.sheets[(0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetIndex)(this, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetNameFromAddress)(address))] ?\n                this.sheets[(0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetIndex)(this, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetNameFromAddress)(address))].id : this.getActiveSheet().id,\n            promise: promise, invokeCopy: true, isPublic: true\n        } : { promise: promise, invokeCopy: true, isPublic: true });\n        return promise;\n    };\n    /**\n     * To copy the specified cell or cells properties such as value, format, style etc...\n     *\n     * {% codeBlock src='spreadsheet/copy/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} address - Specifies the range address.\n     * @returns {Promise<Object>} - To copy the specified cell or cells properties such as value, format, style etc...\n     */\n    Spreadsheet.prototype.copy = function (address) {\n        var promise = new Promise(function (resolve) { resolve((function () { })()); });\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.copy, address ? {\n            range: (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getIndexesFromAddress)(address),\n            sId: this.sheets[(0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetIndex)(this, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetNameFromAddress)(address))] ?\n                this.sheets[(0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetIndex)(this, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetNameFromAddress)(address))].id : this.getActiveSheet().id,\n            promise: promise, invokeCopy: true, isPublic: true\n        } : { promise: promise, invokeCopy: true, isPublic: true });\n        return promise;\n    };\n    /**\n     * This method is used to paste the cut or copied cells in to specified address.\n     *\n     * {% codeBlock src='spreadsheet/paste/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} address - Specifies the cell or range address.\n     * @param {PasteSpecialType} type - Specifies the type of paste.\n     * @returns {void} - used to paste the cut or copied cells in to specified address.\n     */\n    Spreadsheet.prototype.paste = function (address, type) {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.paste, {\n            range: address ? (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getIndexesFromAddress)(address) : address,\n            sIdx: address ? (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetIndex)(this, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetNameFromAddress)(address)) : address,\n            type: type, isAction: true, isInternal: true\n        });\n    };\n    /**\n     * To update the action which need to perform.\n     *\n     * {% codeBlock src='spreadsheet/updateAction/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} options - It describes an action and event args to perform.\n     * @param {string} options.action - specifies an action.\n     * @param {string} options.eventArgs - specifies an args to perform an action.\n     * @returns {void} - To update the action which need to perform.\n     */\n    Spreadsheet.prototype.updateAction = function (options) {\n        (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(options, this);\n    };\n    Spreadsheet.prototype.setHeight = function () {\n        if (this.height) {\n            if (this.height.toString().indexOf('%') > -1) {\n                this.element.style.minHeight = '400px';\n            }\n            this.element.style.height = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.height);\n        }\n    };\n    Spreadsheet.prototype.setWidth = function () {\n        if (this.width) {\n            if (this.width.toString().indexOf('%') > -1 || this.width === 'auto') {\n                this.element.style.minWidth = '300px';\n            }\n            this.element.style.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.width);\n        }\n    };\n    /**\n     * Set the width of column.\n     *\n     * {% codeBlock src='spreadsheet/setColWidth/index.md' %}{% endcodeBlock %}\n     *\n     * @param {number} width - To specify the width\n     * @param {number} colIndex - To specify the colIndex\n     * @param {number} sheetIndex - To specify the sheetIndex\n     * @returns {void} - Set the width of column.\n     */\n    Spreadsheet.prototype.setColWidth = function (width, colIndex, sheetIndex) {\n        if (width === void 0) { width = 64; }\n        if (colIndex === void 0) { colIndex = 0; }\n        var sheet = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(sheetIndex) ? this.getActiveSheet() : this.sheets[sheetIndex];\n        if (sheet && (!sheet.isProtected || sheet.protectSettings.formatColumns)) {\n            var mIndex_1 = colIndex;\n            var colWidth_1 = (typeof width === 'number') ? width + 'px' : width;\n            colIndex = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(colIndex) ? (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(sheet.activeCell)[1] : colIndex;\n            var setColModel = function () {\n                (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getColumn)(sheet, mIndex_1).width = parseInt(colWidth_1, 10) > 0 ? parseInt(colWidth_1, 10) : 0;\n                sheet.columns[mIndex_1].customWidth = true;\n            };\n            var frozenCol = this.frozenColCount(sheet);\n            if (sheet.id === this.getActiveSheet().id) {\n                if ((colIndex >= this.viewport.leftIndex + frozenCol && colIndex <= this.viewport.rightIndex) ||\n                    (frozenCol && colIndex < frozenCol)) {\n                    colIndex = this.getViewportIndex(colIndex, true);\n                    var eleWidth = (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.getColumnWidth)(sheet, mIndex_1, null, true);\n                    var threshold = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getDPRValue)(parseInt(colWidth_1, 10)) - eleWidth;\n                    if (threshold < 0 && eleWidth < -(threshold)) {\n                        threshold = -eleWidth;\n                    }\n                    setColModel();\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.colWidthChanged, { threshold: threshold, colIdx: mIndex_1, checkWrapCell: true });\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.setResize)(mIndex_1, colIndex, colWidth_1, true, this);\n                }\n                else {\n                    var oldWidth = (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.getColumnWidth)(sheet, colIndex);\n                    var threshold = void 0;\n                    if (parseInt(colWidth_1, 10) > 0) {\n                        threshold = -(oldWidth - parseInt(colWidth_1, 10));\n                    }\n                    else {\n                        threshold = -oldWidth;\n                    }\n                    setColModel();\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.colWidthChanged, { threshold: threshold, colIdx: colIndex });\n                }\n                this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.positionAutoFillElement, null);\n            }\n            else {\n                setColModel();\n            }\n        }\n    };\n    /**\n     * Set the height of row.\n     *\n     * {% codeBlock src='spreadsheet/setRowHeight/index.md' %}{% endcodeBlock %}\n     *\n     * @param {number} height - Specifies height needs to be updated. If not specified, it will set the default height 20.\n     * @param {number} rowIndex - Specifies the row index. If not specified, it will consider the first row.\n     * @param {number} sheetIndex - Specifies the sheetIndex. If not specified, it will consider the active sheet.\n     * @param {boolean} edited - Specifies the boolean value.\n     * @param {boolean} skipCustomRow - When this parameter is enabled, the method will skip updating the row height if it has already been modified and its 'customHeight' property is set to true.\n     * @returns {void} - Set the height of row.\n     */\n    Spreadsheet.prototype.setRowHeight = function (height, rowIndex, sheetIndex, edited, skipCustomRow) {\n        if (height === void 0) { height = 20; }\n        if (rowIndex === void 0) { rowIndex = 0; }\n        var sheet = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(sheetIndex) ? this.getActiveSheet() : this.sheets[sheetIndex];\n        if (sheet) {\n            var mIndex_2 = rowIndex;\n            rowIndex = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowIndex) ? (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(sheet.activeCell)[0] : rowIndex;\n            if (skipCustomRow && sheet.rows[rowIndex] && sheet.rows[rowIndex].customHeight) {\n                return;\n            }\n            var rowHeight_1 = (typeof height === 'number') ? height + 'px' : height;\n            var setRowModel = function () {\n                (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.setRowHeight)(sheet, mIndex_2, parseInt(rowHeight_1, 10) > 0 ? parseInt(rowHeight_1, 10) : 0);\n                sheet.rows[mIndex_2].customHeight = true;\n            };\n            if (sheet.id === this.getActiveSheet().id) {\n                var frozenRow = this.frozenRowCount(sheet);\n                if ((rowIndex >= this.viewport.topIndex + frozenRow && rowIndex <= this.viewport.bottomIndex) ||\n                    (frozenRow && rowIndex < frozenRow)) {\n                    rowIndex = this.getViewportIndex(mIndex_2);\n                    var eleHeight = (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.getRowHeight)(sheet, mIndex_2, true);\n                    var threshold = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getDPRValue)(parseInt(rowHeight_1, 10)) - eleHeight;\n                    if (threshold < 0 && eleHeight < -(threshold)) {\n                        threshold = -eleHeight;\n                    }\n                    setRowModel();\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.rowHeightChanged, { threshold: threshold, rowIdx: mIndex_2, isCustomHgt: true });\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(edited)) {\n                        edited = false;\n                    }\n                    if (!edited) {\n                        (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.setResize)(mIndex_2, rowIndex, rowHeight_1, false, this);\n                        edited = false;\n                    }\n                }\n                else {\n                    var oldHeight = (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.getRowHeight)(sheet, rowIndex);\n                    var threshold = void 0;\n                    if (parseInt(rowHeight_1, 10) > 0) {\n                        threshold = -(oldHeight - parseInt(rowHeight_1, 10));\n                    }\n                    else {\n                        threshold = -oldHeight;\n                    }\n                    setRowModel();\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.rowHeightChanged, { threshold: threshold, rowIdx: mIndex_2 });\n                }\n                this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.positionAutoFillElement, null);\n            }\n            else {\n                setRowModel();\n            }\n        }\n    };\n    /**\n     * Allows you to set the height to the single or multiple rows.\n     *\n     * @param {number} height - Specifies the height for row.\n     * @param {string[]} ranges - Specifies the row range to set the height. If the sheet name is not specified then height will apply to\n     * the rows in the active sheet. Possible values are\n     * * Single row range: ['2'] or ['2:2']\n     * * Multiple rows range: ['1:100']\n     * * Multiple rows with discontinuous range - ['1:10', '15:25', '30:40']\n     * * Multiple rows with different sheets - ['Sheet1!1:50', 'Sheet2!1:50', 'Sheet3!1:50'].\n     * @param {boolean} skipCustomRows - When this parameter is enabled, it will skip updating the heights of rows where the height has already been modified, and its 'customHeight' property is set to true.\n     * @returns {void}\n     */\n    Spreadsheet.prototype.setRowsHeight = function (height, ranges, skipCustomRows) {\n        if (height === void 0) { height = 20; }\n        if (!ranges) {\n            ranges = [1 + \":\" + (this.getActiveSheet().usedRange.rowIndex + 1)];\n        }\n        this.setSize(height, ranges, function (idx) { return Number(idx) - 1; }, this.setRowHeight.bind(this), skipCustomRows);\n    };\n    /**\n     * Allows you to set the width to the single or multiple columns.\n     *\n     * @param {number} width - Specifies the width for column.\n     * @param {string[]} ranges - Specifies the column range to set the width. If the sheet name is not specified then width will apply to\n     * the column in the active sheet. Possible values are\n     * * Single column range: ['F'] or ['F:F']\n     * * Multiple columns range: ['A:F']\n     * * Multiple columns with discontinuous range - ['A:C', 'G:I', 'K:M']\n     * * Multiple columns with different sheets - ['Sheet1!A:H', 'Sheet2!A:H', 'Sheet3!A:H'].\n     * @returns {void}\n     */\n    Spreadsheet.prototype.setColumnsWidth = function (width, ranges) {\n        if (width === void 0) { width = 64; }\n        if (!ranges) {\n            ranges = [\"A:\" + (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.getColumnHeaderText)(this.getActiveSheet().usedRange.colIndex + 1)];\n        }\n        this.setSize(width, ranges, function (headerText) { return (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getColIndex)(headerText); }, this.setColWidth.bind(this));\n    };\n    Spreadsheet.prototype.setSize = function (width, ranges, getIndex, updateSize, skipCustomRows) {\n        var _this = this;\n        var sheetIdx;\n        var rangeArr;\n        var sheetName;\n        var startIdx;\n        var endIdx;\n        ranges.forEach(function (range) {\n            if (range.includes('!')) {\n                sheetName = range.substring(0, range.lastIndexOf('!'));\n                sheetIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetIndex)(_this, sheetName);\n                range = range.substring(range.lastIndexOf('!') + 1);\n            }\n            else {\n                sheetIdx = _this.activeSheetIndex;\n            }\n            if (range.includes(':')) {\n                rangeArr = range.split(':');\n                startIdx = getIndex(rangeArr[0]);\n                endIdx = getIndex(rangeArr[1]);\n            }\n            else {\n                startIdx = endIdx = getIndex(range);\n            }\n            for (var idx = startIdx; idx <= endIdx; idx++) {\n                updateSize(width, idx, sheetIdx, false, skipCustomRows);\n            }\n        });\n    };\n    /**\n     * This method is used to autofit the range of rows or columns\n     *\n     * {% codeBlock src='spreadsheet/autoFit/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} range - range of rows or columns that needs to be autofit.\n     *\n     * @returns {void} - used to autofit the range of rows or columns\n     * ```html\n     * <div id='Spreadsheet'></div>\n     * ```\n     * ```typescript\n     * let spreadsheet = new Spreadsheet({\n     *      allowResizing: true\n     * ...\n     * }, '#Spreadsheet');\n     * spreadsheet.autoFit('A:D'); // Auto fit from A to D columns\n     * Spreadsheet.autoFit('1:4'); // Auto fit from 1 to 4 rows\n     *\n     * ```\n     */\n    Spreadsheet.prototype.autoFit = function (range) {\n        var sheetIdx;\n        if (range.indexOf('!') !== -1) {\n            sheetIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetIndex)(this, range.substring(0, range.lastIndexOf('!')));\n            range = range.substring(range.lastIndexOf('!') + 1);\n        }\n        var values = this.getIndexes(range);\n        var startIdx = values.startIdx;\n        var endIdx = values.endIdx;\n        var isCol = values.isCol;\n        var maximumColInx = isCol ? (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getColIndex)('XFD') : 1048576;\n        if (startIdx <= maximumColInx) {\n            if (endIdx > maximumColInx) {\n                endIdx = maximumColInx;\n            }\n        }\n        else {\n            return;\n        }\n        for (startIdx; startIdx <= endIdx; startIdx++) {\n            this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.setAutoFit, { idx: startIdx, isCol: isCol, sheetIdx: sheetIdx });\n        }\n    };\n    /**\n     * @hidden\n     * @param {string} range - specify the range.\n     * @returns {number | boolean} - to get the index.\n     *\n     */\n    Spreadsheet.prototype.getIndexes = function (range) {\n        var startIsCol;\n        var endIsCol;\n        var start;\n        var end;\n        if (range.indexOf(':') !== -1) {\n            var starttoend = range.split(':');\n            start = starttoend[0];\n            end = starttoend[1];\n        }\n        else {\n            start = range;\n            end = range;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(start)) {\n            var startValues = this.getAddress(start);\n            start = startValues.address;\n            startIsCol = startValues.isCol;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(end)) {\n            var endValues = this.getAddress(end);\n            end = endValues.address;\n            endIsCol = endValues.isCol;\n        }\n        var isCol = startIsCol === true && endIsCol === true ? true : false;\n        var startIdx = isCol ? (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getColIndex)(start.toUpperCase()) : parseInt(start, 10);\n        var endIdx = isCol ? (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getColIndex)(end.toUpperCase()) : parseInt(end, 10);\n        return { startIdx: startIdx, endIdx: endIdx, isCol: isCol };\n    };\n    Spreadsheet.prototype.getAddress = function (address) {\n        var isCol;\n        if (address.substring(0, 1).match(/\\D/g)) {\n            isCol = true;\n            address = address.replace(/[0-9]/g, '');\n            return { address: address, isCol: isCol };\n        }\n        else if (address.substring(0, 1).match(/[0-9]/g) && address.match(/\\D/g)) {\n            return { address: '', isCol: false };\n        }\n        else {\n            address = (parseInt(address, 10) - 1).toString();\n            return { address: address, isCol: isCol };\n        }\n    };\n    /**\n     * To add the hyperlink in the cell\n     *\n     * {% codeBlock src='spreadsheet/addHyperlink/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string | HyperlinkModel} hyperlink - to specify the hyperlink\n     * @param {string} address - to specify the address\n     * @param {string} displayText - to specify the text to be displayed, by default value of the cell will be displayed.\n     * @returns {void} - To add the hyperlink in the cell\n     */\n    Spreadsheet.prototype.addHyperlink = function (hyperlink, address, displayText) {\n        this.insertHyperlink(hyperlink, address, displayText, true);\n    };\n    /**\n     * To remove the hyperlink in the cell\n     *\n     * {% codeBlock src='spreadsheet/removeHyperlink/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} range - To specify the range\n     * @returns {void} - To remove the hyperlink in the cell\n     */\n    Spreadsheet.prototype.removeHyperlink = function (range) {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.removeHyperlink, { range: range, preventEventTrigger: true });\n    };\n    /**\n     * @hidden\n     * @param {string | HyperlinkModel} hyperlink - specify the hyperlink\n     * @param {string} address - To specify the address\n     * @param {string} displayText - To specify the displayText\n     * @param {boolean} isMethod - To specify the bool value\n     * @returns {void} - to insert the hyperlink\n     */\n    Spreadsheet.prototype.insertHyperlink = function (hyperlink, address, displayText, isMethod) {\n        if (this.allowHyperlink) {\n            var sheetName = void 0;\n            var sheetIdx = void 0;\n            var cellIdx = void 0;\n            var sheet = this.getActiveSheet();\n            address = address ? address : sheet.name + '!' + sheet.activeCell;\n            cellIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getRangeIndexes)(address);\n            if ((0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.isReadOnlyCells)(this, cellIdx)) {\n                this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.readonlyAlert, null);\n                return;\n            }\n            var prevELem = this.getCell(cellIdx[0], cellIdx[1]);\n            var classList = [];\n            for (var i = 0; prevELem && i < prevELem.classList.length; i++) {\n                classList.push(prevELem.classList[i]);\n            }\n            var befArgs = { hyperlink: hyperlink, address: address, displayText: displayText, cancel: false };\n            var aftArgs = { hyperlink: hyperlink, address: address, displayText: displayText };\n            if (!isMethod) {\n                this.trigger(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.beforeHyperlinkCreate, befArgs);\n                this.notify(_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.beginAction, { action: 'hyperlink', eventArgs: befArgs });\n            }\n            if (!befArgs.cancel) {\n                hyperlink = befArgs.hyperlink;\n                address = befArgs.address;\n                var args = {\n                    hyperlink: hyperlink, cell: address, displayText: displayText, triggerEvt: !isMethod\n                };\n                this.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.setLinkModel, args);\n                if (address && address.lastIndexOf('!') !== -1) {\n                    var lastIndex = address.lastIndexOf('!');\n                    sheetName = address.substring(0, lastIndex);\n                    var sheets = this.sheets;\n                    for (var idx = 0; idx < sheets.length; idx++) {\n                        if (sheets[idx].name === sheetName) {\n                            sheetIdx = idx;\n                        }\n                    }\n                    sheet = this.sheets[sheetIdx];\n                    address = address.substring(lastIndex + 1);\n                }\n                if (!sheet) {\n                    return;\n                }\n                address = address ? address : this.getActiveSheet().activeCell;\n                cellIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getRangeIndexes)(address);\n                if (!isMethod) {\n                    this.trigger(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.afterHyperlinkCreate, aftArgs);\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.completeAction, { action: 'hyperlink', eventArgs: befArgs });\n                }\n                if (sheet === this.getActiveSheet()) {\n                    this.serviceLocator.getService('cell').refreshRange(cellIdx, false, false, false, true, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.isImported)(this));\n                    for (var i = 0; i < classList.length; i++) {\n                        if (!this.getCell(cellIdx[0], cellIdx[1]).classList.contains(classList[i])) {\n                            this.getCell(cellIdx[0], cellIdx[1]).classList.add(classList[i]);\n                        }\n                    }\n                    this.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.refreshRibbonIcons, null);\n                }\n            }\n        }\n    };\n    /**\n     * This method is used to add data validation.\n     *\n     * {% codeBlock src='spreadsheet/addDataValidation/index.md' %}{% endcodeBlock %}\n     *\n     * @param {ValidationModel} rules - specifies the validation rules like type, operator, value1, value2, ignoreBlank, inCellDropDown, isHighlighted arguments.\n     * @param {string} range - range that needs to be add validation.\n     * @returns {void} - used to add data validation.\n     */\n    Spreadsheet.prototype.addDataValidation = function (rules, range) {\n        _super.prototype.addDataValidation.call(this, rules, range);\n    };\n    /**\n     * This method is used for remove validation.\n     *\n     * {% codeBlock src='spreadsheet/removeDataValidation/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} range - range that needs to be remove validation.\n     * @returns {void} - This method is used for remove validation.\n     */\n    Spreadsheet.prototype.removeDataValidation = function (range) {\n        _super.prototype.removeDataValidation.call(this, range);\n    };\n    /**\n     * This method is used to highlight the invalid data.\n     *\n     * {% codeBlock src='spreadsheet/addInvalidHighlight/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} range - range that needs to be highlight the invalid data.\n     * @returns {void} - This method is used to highlight the invalid data.\n     */\n    Spreadsheet.prototype.addInvalidHighlight = function (range) {\n        _super.prototype.addInvalidHighlight.call(this, range);\n    };\n    /**\n     * This method is used for remove highlight from invalid data.\n     *\n     * {% codeBlock src='spreadsheet/removeInvalidHighlight/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} range - range that needs to be remove invalid highlight.\n     * @returns {void} - This method is used for remove highlight from invalid data.\n     */\n    Spreadsheet.prototype.removeInvalidHighlight = function (range) {\n        _super.prototype.removeInvalidHighlight.call(this, range);\n    };\n    /**\n     * This method is used to add conditional formatting.\n     *\n     * {% codeBlock src='spreadsheet/conditionalFormat/index.md' %}{% endcodeBlock %}\n     *\n     * @param {ConditionalFormatModel} conditionalFormat - Specify the conditionalFormat.\n     * @returns {void} - used to add conditional formatting.\n     */\n    Spreadsheet.prototype.conditionalFormat = function (conditionalFormat) {\n        _super.prototype.conditionalFormat.call(this, conditionalFormat);\n    };\n    /**\n     * This method is used for remove conditional formatting.\n     *\n     * {% codeBlock src='spreadsheet/clearConditionalFormat/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} range - range that needs to be remove conditional formatting.\n     * @returns {void} - used for remove conditional formatting.\n     */\n    Spreadsheet.prototype.clearConditionalFormat = function (range) {\n        range = range || this.getActiveSheet().selectedRange;\n        _super.prototype.clearConditionalFormat.call(this, range);\n    };\n    /**\n     * @hidden\n     * @returns {void} - set Panel Size.\n     */\n    Spreadsheet.prototype.setPanelSize = function () {\n        if (this.height !== 'auto') {\n            var panel = document.getElementById(this.element.id + '_sheet_panel');\n            panel.style.height = (this.element.getBoundingClientRect().height * this.viewport.scaleY) -\n                (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getSiblingsHeight)(panel, null, this.viewport.scaleY) + \"px\";\n        }\n    };\n    /**\n     * Opens the Excel file.\n     *\n     * {% codeBlock src='spreadsheet/open/index.md' %}{% endcodeBlock %}\n     *\n     * @param {OpenOptions} options - Options for opening the excel file.\n     * @returns {void} - Open the Excel file.\n     */\n    Spreadsheet.prototype.open = function (options) {\n        this.isOpen = true;\n        _super.prototype.open.call(this, options);\n        if (this.isOpen) {\n            this.showSpinner();\n        }\n    };\n    /**\n     * Used to hide/show the rows in spreadsheet.\n     *\n     * @param {number} startIndex - Specifies the start row index.\n     * @param {number} endIndex - Specifies the end row index.\n     * @param {boolean} hide - To hide/show the rows in specified range.\n     * @returns {void} - To hide/show the rows in spreadsheet.\n     */\n    Spreadsheet.prototype.hideRow = function (startIndex, endIndex, hide) {\n        if (endIndex === void 0) { endIndex = startIndex; }\n        if (hide === void 0) { hide = true; }\n        if (this.renderModule) {\n            this.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.hideShow, { startIndex: startIndex, endIndex: endIndex, hide: hide, actionUpdate: false });\n        }\n        else {\n            _super.prototype.hideRow.call(this, startIndex, endIndex, hide);\n        }\n    };\n    /**\n     * Used to hide/show the columns in spreadsheet.\n     *\n     * @param {number} startIndex - Specifies the start column index.\n     * @param {number} endIndex - Specifies the end column index.\n     * @param {boolean} hide - Set `true` / `false` to hide / show the columns.\n     * @returns {void} - To hide/show the columns in spreadsheet.\n     */\n    Spreadsheet.prototype.hideColumn = function (startIndex, endIndex, hide) {\n        if (endIndex === void 0) { endIndex = startIndex; }\n        if (hide === void 0) { hide = true; }\n        if (this.renderModule) {\n            this.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.hideShow, { startIndex: startIndex, endIndex: endIndex, hide: hide, isCol: true, actionUpdate: false });\n        }\n        else {\n            _super.prototype.hideColumn.call(this, startIndex, endIndex, hide);\n        }\n    };\n    /**\n     * This method is used to Clear contents, formats and hyperlinks in spreadsheet.\n     *\n     * {% codeBlock src='spreadsheet/clear/index.md' %}{% endcodeBlock %}\n     *\n     * @param {ClearOptions} options - Options for clearing the content, formats and hyperlinks in spreadsheet.\n     * @returns {void} -  Used to Clear contents, formats and hyperlinks in spreadsheet\n     */\n    Spreadsheet.prototype.clear = function (options) {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.clearViewer, { options: options });\n    };\n    /**\n     * Used to refresh the spreadsheet in UI level.\n     *\n     * {% codeBlock src='spreadsheet/refresh/index.md' %}{% endcodeBlock %}\n     *\n     * @param {boolean} isNew - Specifies `true` / `false` to create new workbook in spreadsheet.\n     * @returns {void} -  Used to refresh the spreadsheet.\n     */\n    Spreadsheet.prototype.refresh = function (isNew) {\n        var _this = this;\n        if (this.isReact) {\n            this['clearTemplate']();\n        }\n        if (isNew) {\n            this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.clearCopy, null);\n            this.sheets.length = 0;\n            this.sheetNameCount = 1;\n            this.notify(_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.sheetsDestroyed, {});\n            this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.clearUndoRedoCollection, null);\n            this.createSheet();\n            this.activeSheetIndex = this.sheets.length - 1;\n            this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.refreshSheetTabs, null);\n            this.notify(_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.workbookFormulaOperation, { action: 'initSheetInfo' });\n            this.renderModule.refreshSheet();\n        }\n        else {\n            if (this.createdHandler) {\n                var refreshFn_1 = function () {\n                    _this.off(_index__WEBPACK_IMPORTED_MODULE_13__.spreadsheetCreated, refreshFn_1);\n                    _this.refresh();\n                };\n                this.on(_index__WEBPACK_IMPORTED_MODULE_13__.spreadsheetCreated, refreshFn_1, this);\n            }\n            else {\n                this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.deInitProperties, {});\n                _super.prototype.refresh.call(this);\n            }\n        }\n    };\n    /**\n     * Used to set the image in spreadsheet.\n     *\n     * {% codeBlock src='spreadsheet/insertImage/index.md' %}{% endcodeBlock %}\n     *\n     * @param {ImageModel} images - Specifies the options to insert image in spreadsheet.\n     * @param {string} range - Specifies the range in spreadsheet.\n     * @returns {void} -  Used to set the image in spreadsheet.\n     */\n    Spreadsheet.prototype.insertImage = function (images, range) {\n        var i;\n        for (i = 0; i < images.length; i++) {\n            this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.createImageElement, {\n                options: images[i],\n                range: range ? range : this.getActiveSheet().selectedRange, isPublic: true\n            });\n        }\n    };\n    /**\n     * Used to delete the image in spreadsheet.\n     *\n     * {% codeBlock src='spreadsheet/deleteImage/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} id - Specifies the id of the image element to be deleted.\n     * @param {string} range - Specifies the range in spreadsheet.\n     * @returns {void} - Used to delete the image in spreadsheet.\n     */\n    Spreadsheet.prototype.deleteImage = function (id, range) {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.deleteImage, { id: id, range: range ? range : this.getActiveSheet().selectedRange });\n    };\n    /**\n     * Gets the row header div of the Spreadsheet.\n     *\n     * @returns {Element} - Gets the row header div of the Spreadsheet.\n     * @hidden\n     */\n    Spreadsheet.prototype.getRowHeaderContent = function () {\n        return this.sheetModule.getRowHeaderPanel();\n    };\n    /**\n     * Gets the column header div of the Spreadsheet.\n     *\n     * @returns {HTMLElement} - Gets the column header div of the Spreadsheet.\n     * @hidden\n     */\n    Spreadsheet.prototype.getColumnHeaderContent = function () {\n        return this.sheetModule.getColHeaderPanel();\n    };\n    /**\n     * Gets the main content div of the Spreadsheet.\n     *\n     * @returns {HTMLElement} - Gets the main content div of the Spreadsheet.\n     * @hidden\n     */\n    Spreadsheet.prototype.getMainContent = function () {\n        return this.sheetModule.getContentPanel();\n    };\n    /**\n     * Get the select all div of spreadsheet\n     *\n     * @returns {HTMLElement} - Get the select all div of spreadsheet\n     */\n    Spreadsheet.prototype.getSelectAllContent = function () {\n        return this.sheetModule.getSelectAllContent();\n    };\n    /**\n     * Gets the horizontal scroll element of the Spreadsheet.\n     *\n     * @returns {HTMLElement} - Gets the column header div of the Spreadsheet.\n     * @hidden\n     */\n    Spreadsheet.prototype.getScrollElement = function () {\n        return this.sheetModule.getScrollElement();\n    };\n    /**\n     * Get the main content table element of spreadsheet.\n     *\n     * @returns {HTMLTableElement} -Get the main content table element of spreadsheet.\n     * @hidden\n     */\n    Spreadsheet.prototype.getContentTable = function () {\n        return this.sheetModule.getContentTable();\n    };\n    /**\n     * Get the row header table element of spreadsheet.\n     *\n     * @returns {HTMLTableElement} - Get the row header table element of spreadsheet.\n     * @hidden\n     */\n    Spreadsheet.prototype.getRowHeaderTable = function () {\n        return this.sheetModule.getRowHeaderTable();\n    };\n    /**\n     * Get the column header table element of spreadsheet.\n     *\n     * @returns {HTMLTableElement} - Get the column header table element of spreadsheet.\n     * @hidden\n     */\n    Spreadsheet.prototype.getColHeaderTable = function () {\n        return this.sheetModule.getColHeaderTable();\n    };\n    /**\n     * To get the backup element count for row and column virtualization.\n     *\n     * @param {'row' | 'col'} layout -  specify the layout.\n     * @returns {number} - To get the backup element count for row and column virtualization.\n     * @hidden\n     */\n    Spreadsheet.prototype.getThreshold = function (layout) {\n        var threshold = Math.round((this.viewport[layout + 'Count'] + 1) / 2);\n        return threshold < 15 ? 15 : threshold;\n    };\n    /**\n     * @hidden\n     * @returns {boolean} - Returns the bool value.\n     */\n    Spreadsheet.prototype.isMobileView = function () {\n        return (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.cssClass) && (this.cssClass.indexOf('e-mobile-view') > -1 || _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) && this.cssClass.indexOf('e-desktop-view') === -1)\n            && false;\n    };\n    /**\n     * @hidden\n     * @param {number} sheetId - Specifies the sheet id.\n     * @param {number} rowIndex - specify the row index.\n     * @param {number} colIndex - specify the col index.\n     * @param {string} formulaCellReference - specify the col index.\n     * @param {boolean} refresh - specify the col index.\n     * @param {boolean} isUnique - specifies the unique formula.\n     * @param {boolean} isSubtotal - specifies the subtotal formula.\n     * @returns {string | number} - to get Value Row Col.\n     */\n    Spreadsheet.prototype.getValueRowCol = function (sheetId, rowIndex, colIndex, formulaCellReference, refresh, isUnique, isSubtotal) {\n        return _super.prototype.getValueRowCol.call(this, sheetId, rowIndex, colIndex, formulaCellReference, refresh, isUnique, isSubtotal);\n    };\n    /**\n     * Updates the properties of a specified cell.\n     *\n     * {% codeBlock src='spreadsheet/updateCell/index.md' %}{% endcodeBlock %}\n     *\n     * @param {CellModel} cell - The properties to update for the specified cell.\n     * @param {string} address - The address of the cell to update. If not provided, the active cell's address will be used.\n     * @param {boolean} enableDependentCellUpdate - Specifies whether dependent cells should also be updated. Default value is <c>true</c>.\n     * @returns {void} - This method does not return a value.\n     */\n    Spreadsheet.prototype.updateCell = function (cell, address, enableDependentCellUpdate) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(enableDependentCellUpdate)) {\n            enableDependentCellUpdate = true;\n        }\n        this.updateCellInfo(cell, address, enableDependentCellUpdate, undefined, undefined, true);\n    };\n    /**\n     * Updates the properties of a specified cell.\n     *\n     * @param {CellModel} cell - The properties to update for the specified cell.\n     * @param {string} address - The address of the cell to update. If not provided, the active cell's address will be used.\n     * @param {boolean} isDependentUpdate - Specifies whether dependent cells should also be updated.\n     * @param {UndoRedoEventArgs} cellInformation - It holds the undoRedoCollections.\n     * @param {boolean} isRedo - It holds the undo redo information.\n     * @param {boolean} isPublic - It holds whether updateCell public method is used.\n     * @returns {void} - This method does not return a value.\n     *\n     * @hidden\n     */\n    Spreadsheet.prototype.updateCellInfo = function (cell, address, isDependentUpdate, cellInformation, isRedo, isPublic) {\n        address = address || this.getActiveSheet().activeCell;\n        if ((0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.isReadOnlyCells)(this, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getRangeIndexes)(address))) {\n            return;\n        }\n        var isFinite = this.scrollSettings.isFinite;\n        _super.prototype.updateCellDetails.call(this, cell, address, cellInformation, isRedo, isDependentUpdate, isFinite, isPublic);\n    };\n    /**\n     * Used to get a row data from the data source with updated cell value.\n     *\n     * {% codeBlock src='spreadsheet/getRowData/index.md' %}{% endcodeBlock %}\n     *\n     * @param {number} index - Specifies the row index.\n     * @param {number} sheetIndex - Specifies the sheet index. By default, it consider the active sheet index.\n     * @returns {Object[]} - Return row data.\n     */\n    Spreadsheet.prototype.getRowData = function (index, sheetIndex) {\n        return _super.prototype.getRowData.call(this, index, sheetIndex);\n    };\n    /**\n     * Sorts the range of cells in the active sheet.\n     *\n     * {% codeBlock src='spreadsheet/sort/index.md' %}{% endcodeBlock %}\n     *\n     * @param {SortOptions} sortOptions - options for sorting.\n     * @param {string} range - address of the data range.\n     * @returns {Promise<SortEventArgs>} - Sorts the range of cells in the active sheet.\n     */\n    Spreadsheet.prototype.sort = function (sortOptions, range) {\n        var _this = this;\n        if (!this.allowSorting) {\n            return Promise.reject();\n        }\n        var prevSort = [];\n        if (this.sortCollection) {\n            for (var i = this.sortCollection.length - 1; i >= 0; i--) {\n                if (this.sortCollection[i] && this.sortCollection[i].sheetIndex === this.activeSheetIndex) {\n                    prevSort.push(this.sortCollection[i]);\n                    this.sortCollection.splice(i, 1);\n                }\n            }\n        }\n        this.notify(_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.updateSortCollection, { sortOptions: sortOptions });\n        return _super.prototype.sort.call(this, sortOptions, range, prevSort).then(function (args) {\n            _this.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.sortComplete, args);\n            return Promise.resolve(args);\n        });\n    };\n    /**\n     * @hidden\n     * @param {number} sheetId - specify the sheet id.\n     * @param {string | number} value - Specify the value.\n     * @param {number} rowIndex - Specify the row index.\n     * @param {number} colIndex - Specify the col index.\n     * @param {string} formula - Specify the col index.\n     * @param {boolean} isRandomFormula - Specify the random formula.\n     * @returns {void} - To set value for row and col.\n     */\n    Spreadsheet.prototype.setValueRowCol = function (sheetId, value, rowIndex, colIndex, formula, isRandomFormula) {\n        if (!this.isEdit && value === '#CIRCULARREF!') {\n            var sheet = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheet)(this, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetIndexFromId)(this, sheetId));\n            var circularArgs = { action: 'isCircularReference', argValue: value,\n                address: sheet.name + \"!\" + (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.getColumnHeaderText)(colIndex) + rowIndex };\n            this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.formulaOperation, circularArgs);\n            value = circularArgs.argValue;\n        }\n        _super.prototype.setValueRowCol.call(this, sheetId, value, rowIndex, colIndex, formula, isRandomFormula);\n        if (this.allowEditing) {\n            this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.editOperation, {\n                action: 'refreshDependentCellValue', rowIdx: rowIndex, colIdx: colIndex,\n                sheetIdx: (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetIndexFromId)(this, sheetId)\n            });\n        }\n        else {\n            var sheetIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheetIndexFromId)(this, sheetId);\n            rowIndex--;\n            colIndex--;\n            if (this.activeSheetIndex === sheetIdx) {\n                var sheet = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheet)(this, sheetIdx);\n                var td = void 0;\n                if (!(0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.isHiddenRow)(sheet, rowIndex) && !(0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.isHiddenCol)(sheet, colIndex)) {\n                    td = this.getCell(rowIndex, colIndex);\n                }\n                if (td) {\n                    if (td.parentElement) {\n                        var curRowIdx = td.parentElement.getAttribute('aria-rowindex');\n                        if (curRowIdx && Number(curRowIdx) - 1 !== rowIndex) {\n                            return;\n                        }\n                    }\n                    var cell = (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.getCell)(rowIndex, colIndex, sheet);\n                    var nodeEventArgs = {\n                        value: cell.value, format: cell.format, onLoad: true,\n                        formattedText: cell.value, isRightAlign: false, type: 'General', cell: cell,\n                        rowIndex: rowIndex, colIndex: colIndex, isRowFill: false\n                    };\n                    this.notify(_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.getFormattedCellObject, nodeEventArgs);\n                    this.refreshNode(td, nodeEventArgs);\n                }\n            }\n        }\n    };\n    /**\n     * Get component name.\n     *\n     * @returns {string} - Get component name.\n     * @hidden\n     */\n    Spreadsheet.prototype.getModuleName = function () {\n        return 'spreadsheet';\n    };\n    /**\n     * The `calculateNow` method is used to calculate any uncalculated formulas in a spreadsheet.\n     * This method accepts an option to specify whether the calculation should be performed for the entire workbook or a specific sheet.\n     *\n     * @param {string} [scope] - Specifies the scope of the calculation. Acceptable values are `Sheet` or `Workbook`.\n     * If not provided, the default scope is `Sheet`.\n     * * `Sheet`: Calculates formulas only on the current sheet or a specified sheet.\n     * * `Workbook`: Calculates formulas across the entire workbook.\n     * @param {number | string} [sheet] - The index or name of the sheet to calculate if the scope is set to `Sheet`.\n     * If not provided and the scope is `Sheet`, the current active sheet will be used.\n     * @returns {Promise<void>} - A promise that resolves when the calculation is complete.\n     * The promise does not return a specific value, but it can be used to perform actions after the calculation has finished.\n     */\n    Spreadsheet.prototype.calculateNow = function (scope, sheet) {\n        return _super.prototype.calculateNow.call(this, scope, sheet);\n    };\n    /**\n     * @hidden\n     * @param {Element} td - Specify the element.\n     * @param {NumberFormatArgs} args - specify the args.\n     * @returns {void} - to refresh the node.\n     */\n    Spreadsheet.prototype.refreshNode = function (td, args) {\n        var value;\n        if (td) {\n            if (args) {\n                args.result = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.formattedText) ? ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.result) ? '' : args.result) :\n                    args.formattedText.toString();\n                if (!args.isRowFill) {\n                    var beforeFillSpan = td.querySelector('.e-fill-before');\n                    if (beforeFillSpan) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(beforeFillSpan);\n                    }\n                    var spanFillElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('.' + 'e-fill', td);\n                    if (spanFillElem) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(spanFillElem);\n                        td.style.display = 'table-cell';\n                    }\n                    var spanFillSecElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('.' + 'e-fill-sec', td);\n                    if (spanFillSecElem) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(spanFillSecElem);\n                    }\n                }\n                var spanElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + this.element.id + '_currency', td);\n                if (spanElem) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(spanElem);\n                }\n                if (args.type === 'Accounting' && (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.isNumber)(args.value) && args.result.includes(args.curSymbol)) {\n                    var curSymbol = void 0;\n                    var result = void 0;\n                    var setVal = void 0;\n                    if (args.result.trim().endsWith(args.curSymbol)) {\n                        result = args.result;\n                    }\n                    else {\n                        curSymbol = args.result.includes(' ' + args.curSymbol) ? ' ' + args.curSymbol : args.curSymbol;\n                        result = args.result.split(curSymbol).join('');\n                    }\n                    var dataBarVal = td.querySelector('.e-databar-value');\n                    var iconSetSpan = td.querySelector('.e-iconsetspan');\n                    var tdContainer = td;\n                    var nodeElement = void 0;\n                    if (td.children.length > 0 && td.children[td.childElementCount - 1].className.indexOf('e-addNoteIndicator') > -1) {\n                        nodeElement = document.getElementsByClassName('e-addNoteIndicator')[0];\n                    }\n                    if (dataBarVal) {\n                        this.refreshNode(dataBarVal, { result: result });\n                        tdContainer = td.querySelector('.e-cf-databar') || td;\n                    }\n                    else if (td.querySelector('a')) {\n                        td.querySelector('a').textContent = result;\n                    }\n                    else {\n                        setVal = true;\n                        td.innerText = '';\n                    }\n                    if (iconSetSpan) {\n                        td.insertBefore(iconSetSpan, td.firstElementChild);\n                    }\n                    if (curSymbol) {\n                        var curr = this.createElement('span', { id: this.element.id + '_currency', styles: 'float: left' });\n                        curr.innerText = curSymbol;\n                        tdContainer.appendChild(curr);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nodeElement)) {\n                            tdContainer.appendChild(nodeElement);\n                        }\n                    }\n                    if (setVal) {\n                        td.innerHTML += result;\n                    }\n                    td.classList.add('e-right-align');\n                    return;\n                }\n                else {\n                    var alignClass = void 0;\n                    if (args.result && (args.result.toLowerCase() === 'true' || args.result.toLowerCase() === 'false')) {\n                        args.result = args.result.toUpperCase();\n                        alignClass = 'e-center-align';\n                        args.isRightAlign = true; // Re-use this to center align the cell.\n                    }\n                    else {\n                        alignClass = 'e-right-align';\n                    }\n                    value = args.result;\n                    if (!this.allowWrap) {\n                        if (value.toString().includes('\\n')) {\n                            value = value.replace(/\\n/g, '');\n                        }\n                    }\n                    if (args.isRightAlign) {\n                        td.classList.add(alignClass);\n                    }\n                    else {\n                        td.classList.remove(alignClass);\n                    }\n                }\n            }\n            value = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value) ? value : '';\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.rowIndex) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.colIndex)) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(td, { 'aria-label': (value ? value + ' ' : '') + (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.getCellAddress)(args.rowIndex, args.colIndex) });\n            }\n            var node_1 = td.lastChild;\n            if (node_1 && node_1.nodeName === 'SPAN' && node_1.classList.contains('e-iconsetspan')) {\n                node_1 = null;\n            }\n            var nodeIndicator = td.querySelector('.e-addNoteIndicator');\n            if (nodeIndicator) {\n                node_1 = nodeIndicator.previousSibling;\n            }\n            if (td.querySelector('.e-databar-value')) {\n                node_1 = td.querySelector('.e-databar-value').lastChild;\n            }\n            if (td.querySelector('.e-hyperlink')) {\n                if (args.cell && args.cell.wrap && value && value.toString().indexOf('\\n')) {\n                    td.querySelector('.e-hyperlink').textContent = value;\n                }\n                node_1 = td.querySelector('.e-hyperlink').lastChild;\n            }\n            var wrapContent = td.querySelector('.e-wrap-content');\n            if (wrapContent && !(td.querySelector('.e-hyperlink') || td.querySelector('.e-databar-value'))) {\n                if (!wrapContent.lastChild) {\n                    wrapContent.appendChild(document.createTextNode(''));\n                }\n                node_1 = wrapContent.lastChild;\n            }\n            if ((this.isAngular || this.isVue) &&\n                td.classList.contains('e-cell-template') && node_1 && (node_1.nodeType === 8 || node_1.nodeType === 3)) {\n                if (node_1.nodeType === 3 || value !== '') {\n                    var checkNodeFn = function () {\n                        if (!td.childElementCount) {\n                            if (node_1.nodeType === 3) {\n                                if (!args.isRowFill) {\n                                    node_1.nodeValue = value;\n                                }\n                            }\n                            else {\n                                td.appendChild(document.createTextNode(value));\n                            }\n                        }\n                    };\n                    if (this.isAngular) {\n                        (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getUpdateUsingRaf)(checkNodeFn);\n                    }\n                    else {\n                        checkNodeFn();\n                    }\n                }\n            }\n            else if (node_1 && (node_1.nodeType === 3 || node_1.nodeType === 1)) {\n                if (!args.isRowFill) {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(node_1.className) &&\n                        node_1.className.indexOf('e-addNoteIndicator') > -1) {\n                        node_1 = td.lastChild;\n                        node_1.nodeValue = value;\n                    }\n                    else {\n                        node_1.nodeValue = value;\n                    }\n                }\n            }\n            else {\n                td.appendChild(document.createTextNode(value));\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @param {CellStyleModel} style - specify the style.\n     * @param {number} lines - Specify the lines.\n     * @param {number} borderWidth - Specify the borderWidth.\n     * @returns {number} - To calculate Height\n     */\n    Spreadsheet.prototype.calculateHeight = function (style, lines, borderWidth) {\n        if (lines === void 0) { lines = 1; }\n        if (borderWidth === void 0) { borderWidth = 1; }\n        var fontSize = (style && style.fontSize) || this.cellStyle.fontSize;\n        var threshold = style.fontFamily === 'Arial Black' ? 1.44 : 1.24;\n        return ((fontSize.indexOf('pt') > -1 ? parseInt(fontSize, 10) * 1.33 : parseInt(fontSize, 10)) * threshold * lines) +\n            (borderWidth * threshold);\n    };\n    /**\n     * @hidden\n     * @param {number} startIdx - specify the start index.\n     * @param {number} endIdx - Specify the end index.\n     * @param {string} layout - Specify the rows.\n     * @param {boolean} finite - Specifies the scroll mode.\n     * @returns {number[]} - To skip the hidden rows.\n     */\n    Spreadsheet.prototype.skipHidden = function (startIdx, endIdx, layout, finite) {\n        if (layout === void 0) { layout = 'rows'; }\n        if (finite === void 0) { finite = this.scrollSettings.isFinite; }\n        var sheet = this.getActiveSheet();\n        var totalCount;\n        if (this.scrollSettings.isFinite) {\n            totalCount = (layout === 'rows' ? sheet.rowCount : sheet.colCount) - 1;\n        }\n        for (var i = startIdx; i <= endIdx; i++) {\n            if ((sheet[\"\" + layout])[i] && (sheet[\"\" + layout])[i].hidden) {\n                if (startIdx === i) {\n                    startIdx++;\n                }\n                endIdx++;\n                if (finite && endIdx > totalCount) {\n                    endIdx = totalCount;\n                    break;\n                }\n            }\n            else if (!finite && this.scrollSettings.isFinite && endIdx > totalCount) {\n                if ((sheet[\"\" + layout])[i - 1] && (sheet[\"\" + layout])[i - 1].hidden) {\n                    endIdx--;\n                    break;\n                }\n            }\n        }\n        return [startIdx, endIdx];\n    };\n    /**\n     * @hidden\n     * @param {HTMLElement} nextTab - Specify the element.\n     * @param {string} selector - Specify the selector\n     * @returns {void} - To update the active border.\n     */\n    Spreadsheet.prototype.updateActiveBorder = function (nextTab, selector) {\n        if (selector === void 0) { selector = '.e-ribbon'; }\n        var indicator = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)(selector + \" .e-tab-header .e-indicator\", this.element);\n        indicator.style.display = 'none';\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(indicator, { 'left': '', 'right': '' });\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(indicator, {\n            'left': nextTab.offsetLeft + 'px', 'right': nextTab.parentElement.offsetWidth - (nextTab.offsetLeft + nextTab.offsetWidth) + 'px'\n        });\n        indicator.style.display = '';\n    };\n    /**\n     * To perform the undo operation in spreadsheet.\n     *\n     * {% codeBlock src='spreadsheet/undo/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void} - To perform the undo operation in spreadsheet.\n     */\n    Spreadsheet.prototype.undo = function () {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.performUndoRedo, { isUndo: true, isPublic: true });\n    };\n    /**\n     * To perform the redo operation in spreadsheet.\n     *\n     * {% codeBlock src='spreadsheet/redo/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void} - To perform the redo operation in spreadsheet.\n     */\n    Spreadsheet.prototype.redo = function () {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.performUndoRedo, { isUndo: false, isPublic: true });\n    };\n    /**\n     * To update the undo redo collection in spreadsheet.\n     *\n     * {% codeBlock src='spreadsheet/updateUndoRedoCollection/index.md' %}{% endcodeBlock %}\n     *\n     * @param {object} args - options for undo redo.\n     * @returns {void} - To update the undo redo collection in spreadsheet.\n     */\n    Spreadsheet.prototype.updateUndoRedoCollection = function (args) {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.updateUndoRedoCollection, { args: args, isPublic: true });\n    };\n    /**\n     * Adds the defined name to the Spreadsheet.\n     *\n     * {% codeBlock src='spreadsheet/addDefinedName/index.md' %}{% endcodeBlock %}\n     *\n     * @param {DefineNameModel} definedName - Specifies the name, scope, comment, refersTo.\n     * @returns {boolean} - Return the added status of the defined name.\n     */\n    Spreadsheet.prototype.addDefinedName = function (definedName) {\n        var eventArgs = {\n            action: 'addDefinedName',\n            isAdded: false,\n            definedName: definedName\n        };\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.formulaOperation, eventArgs);\n        return eventArgs.isAdded;\n    };\n    /**\n     * Removes the defined name from the Spreadsheet.\n     *\n     * {% codeBlock src='spreadsheet/removeDefinedName/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} definedName - Specifies the name.\n     * @param {string} scope - Specifies the scope of the defined name.\n     * @returns {boolean} - Return the removed status of the defined name.\n     */\n    Spreadsheet.prototype.removeDefinedName = function (definedName, scope) {\n        return _super.prototype.removeDefinedName.call(this, definedName, scope);\n    };\n    Spreadsheet.prototype.mouseClickHandler = function (e) {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.click, e);\n    };\n    Spreadsheet.prototype.mouseDownHandler = function (e) {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.mouseDown, e);\n    };\n    Spreadsheet.prototype.keyUpHandler = function (e) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-find-dlg')) {\n            this.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.findKeyUp, e);\n        }\n        else {\n            this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.keyUp, e);\n        }\n    };\n    Spreadsheet.prototype.keyDownHandler = function (e) {\n        var findToolDlg = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-findtool-dlg');\n        if (findToolDlg) {\n            if (e.keyCode === 9) {\n                var target = e.target;\n                if (e.shiftKey) {\n                    if (target.classList.contains('e-text-findNext-short')) {\n                        var focusEle = findToolDlg.querySelector('.e-findRib-close .e-tbar-btn');\n                        if (focusEle) {\n                            e.preventDefault();\n                            focusEle.focus();\n                        }\n                    }\n                }\n                else if (target.classList.contains('e-tbar-btn') && target.parentElement.classList.contains('e-findRib-close')) {\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.focus)(findToolDlg);\n                }\n            }\n        }\n        else {\n            this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.keyDown, e);\n            var dialogbox = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-dialog');\n            if (!this.enableKeyboardNavigation && (document.activeElement.classList.contains('e-cell') || dialogbox)) {\n                if ([38, 40, 33, 34, 35, 36, 9].indexOf(e.keyCode) > -1) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    Spreadsheet.prototype.freeze = function (e) {\n        if (!this.allowFreezePane || e.row < 0 || e.column < 0) {\n            return;\n        }\n        if (e.triggerEvent) {\n            var args = {\n                row: e.row, column: e.column,\n                cancel: false, sheetIndex: this.activeSheetIndex\n            };\n            this.notify(_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.beginAction, { eventArgs: args, action: 'freezePanes' });\n            if (args.cancel) {\n                return;\n            }\n        }\n        this.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.contentLoaded, this.freezePaneUpdated, this);\n        this.freezePanes(e.row, e.column);\n        this.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.refreshRibbonIcons, null);\n    };\n    Spreadsheet.prototype.freezePaneUpdated = function () {\n        this.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.contentLoaded, this.freezePaneUpdated);\n        var sheet = this.getActiveSheet();\n        (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.focus)(this.element);\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.completeAction, { eventArgs: { row: sheet.frozenRows, column: sheet.frozenColumns,\n                sheetIndex: this.activeSheetIndex }, action: 'freezePanes' });\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @returns {void} - Binding events to the element while component creation.\n     */\n    Spreadsheet.prototype.wireEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getStartEvent)(), this.mouseDownHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keyup', this.keyUpHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keydown', this.keyDownHandler, this);\n        this.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.freeze, this.freeze, this);\n        this.on(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.refreshInsertDelete, this.refreshInsertDelete, this);\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * {% codeBlock src='spreadsheet/destroy/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void} - Destroys the component.\n     */\n    Spreadsheet.prototype.destroy = function () {\n        if (this.isReact) {\n            this['clearTemplate']();\n        }\n        this.unwireEvents();\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.spreadsheetDestroyed, null);\n        _super.prototype.destroy.call(this);\n        this.element.innerHTML = '';\n        this.element.removeAttribute('tabindex');\n        this.element.removeAttribute('role');\n        this.element.style.removeProperty('height');\n        this.element.style.removeProperty('width');\n        this.element.style.removeProperty('min-height');\n        this.element.style.removeProperty('min-width');\n        if (this.sheetModule) {\n            this.sheetModule.destroy();\n        }\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @returns {void} - Unbinding events from the element while component destroy.\n     */\n    Spreadsheet.prototype.unwireEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getStartEvent)(), this.mouseDownHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keyup', this.keyUpHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keydown', this.keyDownHandler);\n        this.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.freeze, this.freeze);\n        this.off(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.refreshInsertDelete, this.refreshInsertDelete);\n    };\n    Spreadsheet.prototype.refreshInsertDelete = function (args) {\n        var _this = this;\n        if (args.modelType === 'Sheet') {\n            return;\n        }\n        var updated;\n        var indexes;\n        args.sheet.ranges.forEach(function (range) {\n            if (range.template && range.address) {\n                indexes = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getRangeIndexes)(range.address);\n                updated = _this.updateRangeOnInsertDelete(args, indexes);\n                if (updated) {\n                    range.address = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.getRangeAddress)(indexes);\n                }\n            }\n        });\n        this.setSheetPropertyOnMute(args.sheet, 'ranges', args.sheet.ranges);\n    };\n    /**\n     * To add context menu items.\n     *\n     * {% codeBlock src='spreadsheet/addContextMenu/index.md' %}{% endcodeBlock %}\n     *\n     * @param {MenuItemModel[]} items - Items that needs to be added.\n     * @param {string} text - Item before / after that the element to be inserted.\n     * @param {boolean} insertAfter - Set `false` if the `items` need to be inserted before the `text`.\n     * By default, `items` are added after the `text`.\n     * @param {boolean} isUniqueId - Set `true` if the given `text` is a unique id.\n     * @returns {void} - To add context menu items.\n     */\n    Spreadsheet.prototype.addContextMenuItems = function (items, text, insertAfter, isUniqueId) {\n        if (insertAfter === void 0) { insertAfter = true; }\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.addContextMenuItems, { items: items, text: text, insertAfter: insertAfter, isUniqueId: isUniqueId });\n    };\n    /**\n     * To remove existing context menu items.\n     *\n     * {% codeBlock src='spreadsheet/removeContextMenuItems/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string[]} items - Items that needs to be removed.\n     * @param {boolean} isUniqueId - Set `true` if the given `text` is a unique id.\n     * @returns {void} - To remove existing context menu items.\n     */\n    Spreadsheet.prototype.removeContextMenuItems = function (items, isUniqueId) {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.removeContextMenuItems, { items: items, isUniqueId: isUniqueId });\n    };\n    /**\n     * To enable / disable context menu items.\n     *\n     * {% codeBlock src='spreadsheet/enableContextMenuItems/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string[]} items - Items that needs to be enabled / disabled.\n     * @param {boolean} enable - Set `true` / `false` to enable / disable the menu items.\n     * @param {boolean} isUniqueId - Set `true` if the given `text` is a unique id.\n     * @returns {void} - To enable / disable context menu items.\n     */\n    Spreadsheet.prototype.enableContextMenuItems = function (items, enable, isUniqueId) {\n        if (enable === void 0) { enable = true; }\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.enableContextMenuItems, { items: items, enable: enable, isUniqueId: isUniqueId });\n    };\n    /**\n     * To enable / disable file menu items.\n     *\n     * {% codeBlock src='spreadsheet/enableFileMenuItems/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string[]} items - Items that needs to be enabled / disabled.\n     * @param {boolean} enable - Set `true` / `false` to enable / disable the menu items.\n     * @param {boolean} isUniqueId - Set `true` if the given file menu items `text` is a unique id.\n     * @returns {void} - To enable / disable file menu items.\n     */\n    Spreadsheet.prototype.enableFileMenuItems = function (items, enable, isUniqueId) {\n        if (enable === void 0) { enable = true; }\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.enableFileMenuItems, { items: items, enable: enable, isUniqueId: isUniqueId });\n    };\n    /**\n     * To show/hide the file menu items in Spreadsheet ribbon.\n     *\n     * {% codeBlock src='spreadsheet/hideFileMenuItems/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string[]} items - Specifies the file menu items text which is to be show/hide.\n     * @param {boolean} hide - Set `true` / `false` to hide / show the file menu items.\n     * @param {boolean} isUniqueId - Set `true` if the given file menu items `text` is a unique id.\n     * @returns {void} - To show/hide the file menu items in Spreadsheet ribbon.\n     */\n    Spreadsheet.prototype.hideFileMenuItems = function (items, hide, isUniqueId) {\n        if (hide === void 0) { hide = true; }\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.hideFileMenuItems, { items: items, hide: hide, isUniqueId: isUniqueId });\n    };\n    /**\n     * To add custom file menu items.\n     *\n     * {% codeBlock src='spreadsheet/addFileMenuItems/index.md' %}{% endcodeBlock %}\n     *\n     * @param {MenuItemModel[]} items - Specifies the ribbon file menu items to be inserted.\n     * @param {string} text - Specifies the existing file menu item text before / after which the new file menu items to be inserted.\n     * @param {boolean} insertAfter - Set `false` if the `items` need to be inserted before the `text`.\n     * By default, `items` are added after the `text`.\n     * @param {boolean} isUniqueId - Set `true` if the given file menu items `text` is a unique id.\n     * @returns {void} - To add custom file menu items.\n     */\n    Spreadsheet.prototype.addFileMenuItems = function (items, text, insertAfter, isUniqueId) {\n        if (insertAfter === void 0) { insertAfter = true; }\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.addFileMenuItems, { items: items, text: text, insertAfter: insertAfter, isUniqueId: isUniqueId });\n    };\n    /**\n     * To show/hide the existing ribbon tabs.\n     *\n     * {% codeBlock src='spreadsheet/hideRibbonTabs/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string[]} tabs - Specifies the tab header text which needs to be shown/hidden.\n     * @param {boolean} hide - Set `true` / `false` to hide / show the ribbon tabs.\n     * @returns {void} - To show/hide the existing ribbon tabs.\n     */\n    Spreadsheet.prototype.hideRibbonTabs = function (tabs, hide) {\n        if (hide === void 0) { hide = true; }\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.hideRibbonTabs, { tabs: tabs, hide: hide });\n    };\n    /**\n     * To enable / disable the existing ribbon tabs.\n     *\n     * {% codeBlock src='spreadsheet/enableRibbonTabs/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string[]} tabs - Specifies the tab header text which needs to be enabled / disabled.\n     * @param {boolean} enable - Set `true` / `false` to enable / disable the ribbon tabs.\n     * @returns {void} - To enable / disable the existing ribbon tabs.\n     */\n    Spreadsheet.prototype.enableRibbonTabs = function (tabs, enable) {\n        if (enable === void 0) { enable = true; }\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.enableRibbonTabs, { tabs: tabs, enable: enable });\n    };\n    /**\n     * To add custom ribbon tabs.\n     *\n     * {% codeBlock src='spreadsheet/addRibbonTabs/index.md' %}{% endcodeBlock %}\n     *\n     * @param {RibbonItemModel[]} items - Specifies the ribbon tab items to be inserted.\n     * @param {string} insertBefore - Specifies the existing ribbon header text before which the new tabs will be inserted.\n     * If not specified, the new tabs will be inserted at the end.\n     * @returns {void} - To add custom ribbon tabs.\n     */\n    Spreadsheet.prototype.addRibbonTabs = function (items, insertBefore) {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.addRibbonTabs, { items: items, insertBefore: insertBefore });\n    };\n    /**\n     * Enables or disables the specified ribbon toolbar items or all ribbon items.\n     *\n     * {% codeBlock src='spreadsheet/enableToolbarItems/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} tab - Specifies the ribbon tab header text under which the toolbar items need to be enabled / disabled.\n     * @param {number[]} items - Specifies the toolbar item indexes / unique id's which needs to be enabled / disabled.\n     * If it is not specified the entire toolbar items will be enabled / disabled.\n     * @param  {boolean} enable - Boolean value that determines whether the toolbar items should be enabled or disabled.\n     * @returns {void} - Enables or disables the specified ribbon toolbar items or all ribbon items.\n     */\n    Spreadsheet.prototype.enableToolbarItems = function (tab, items, enable) {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.enableToolbarItems, [{ tab: tab, items: items, enable: enable === undefined ? true : enable }]);\n    };\n    /**\n     * To show/hide the existing Spreadsheet ribbon toolbar items.\n     *\n     * {% codeBlock src='spreadsheet/hideToolbarItems/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} tab - Specifies the ribbon tab header text under which the specified items needs to be hidden / shown.\n     * @param {number[]} indexes - Specifies the toolbar indexes which needs to be shown/hidden from UI.\n     * @param {boolean} hide - Set `true` / `false` to hide / show the toolbar items.\n     * @returns {void} - To show/hide the existing Spreadsheet ribbon toolbar items.\n     */\n    Spreadsheet.prototype.hideToolbarItems = function (tab, indexes, hide) {\n        if (hide === void 0) { hide = true; }\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.hideToolbarItems, { tab: tab, indexes: indexes, hide: hide });\n    };\n    /**\n     * To add the custom items in Spreadsheet ribbon toolbar.\n     *\n     * {% codeBlock src='spreadsheet/addToolbarItems/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} tab - Specifies the ribbon tab header text under which the specified items will be inserted.\n     * @param {ItemModel[]} items - Specifies the ribbon toolbar items that needs to be inserted.\n     * @param {number} index - Specifies the index text before which the new items will be inserted.\n     * If not specified, the new items will be inserted at the end of the toolbar.\n     * @returns {void} - To add the custom items in Spreadsheet ribbon toolbar.\n     */\n    Spreadsheet.prototype.addToolbarItems = function (tab, items, index) {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.addToolbarItems, { tab: tab, items: items, index: index });\n    };\n    /**\n     * Selects the cell / range of cells with specified address.\n     *\n     * {% codeBlock src='spreadsheet/selectRange/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} address - Specifies the range address.\n     * @returns {void} - To select the range.\n     */\n    Spreadsheet.prototype.selectRange = function (address) {\n        if (this.isEdit) {\n            this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.editOperation, { action: 'endEdit' });\n        }\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.selectRange, { address: address });\n    };\n    /**\n     * Allows you to select a chart from the active sheet. To select a specific chart from the active sheet, pass the chart `id`.\n     * If you pass an empty argument, the chart present in the active cell will be selected. If the active cell does not have a chart,\n     * the initially rendered chart will be selected from the active sheet.\n     *\n     * @param {string} id - Specifies the chart `id` to be selected.\n     * @returns {void}\n     */\n    Spreadsheet.prototype.selectChart = function (id) {\n        this.selectOverlay(id, true);\n    };\n    /**\n     * Allows you to select an image from the active sheet. To select a specific image from the active sheet, pass the image `id`.\n     * If you pass an empty argument, the image present in the active cell will be selected. If the active cell does not have an image,\n     * the initially rendered image will be selected from the active sheet.\n     *\n     * @param {string} id - Specifies the image `id` to be selected.\n     * @returns {void}\n     */\n    Spreadsheet.prototype.selectImage = function (id) {\n        this.selectOverlay(id);\n    };\n    Spreadsheet.prototype.selectOverlay = function (id, isChart) {\n        var sheet = this.getActiveSheet();\n        if (sheet.isProtected || !this.allowEditing) {\n            return;\n        }\n        if (!id) {\n            var activeCell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(sheet.activeCell);\n            var cell = (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.getCell)(activeCell[0], activeCell[1], sheet, false, true);\n            if (isChart) {\n                if (cell.chart && cell.chart.length) {\n                    id = cell.chart[cell.chart.length - 1].id;\n                }\n            }\n            else if (cell.image && cell.image.length) {\n                id = cell.image[cell.image.length - 1].id;\n            }\n        }\n        var overlayEle;\n        if (id) {\n            overlayEle = this.element.querySelector(\"#\" + id);\n            if (!overlayEle.classList.contains('e-ss-overlay')) {\n                overlayEle = overlayEle.parentElement;\n            }\n        }\n        else {\n            overlayEle = this.element.querySelector(\".e-ss-overlay\" + (isChart ? '.e-datavisualization-chart' : ':not(.e-datavisualization-chart)'));\n        }\n        if (overlayEle) {\n            var isChartActive = void 0;\n            var activeOverlay = this.element.getElementsByClassName('e-ss-overlay-active')[0];\n            if (activeOverlay) {\n                activeOverlay.classList.remove('e-ss-overlay-active');\n                isChartActive = activeOverlay.classList.contains('e-datavisualization-chart');\n                if (isChartActive) {\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.clearChartBorder, null);\n                }\n            }\n            overlayEle.classList.add('e-ss-overlay-active');\n            if (overlayEle.classList.contains('e-datavisualization-chart')) {\n                this.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.focusChartBorder, { id: overlayEle.id });\n                if (!isChartActive) {\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.insertDesignChart, { id: overlayEle.id });\n                }\n            }\n            else if (isChartActive) {\n                this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.removeDesignChart, null);\n            }\n        }\n    };\n    /**\n     * Allows you to remove a selection from the active chart.\n     *\n     * @returns {void}\n     */\n    Spreadsheet.prototype.deselectChart = function () {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.refreshOverlayElem, { selector: '.e-datavisualization-chart' });\n    };\n    /**\n     * Allows you to remove a selection from the active image.\n     *\n     * @returns {void}\n     */\n    Spreadsheet.prototype.deselectImage = function () {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.refreshOverlayElem, { selector: ':not(.e-datavisualization-chart)' });\n    };\n    /**\n     * Start edit the active cell.\n     *\n     * {% codeBlock src='spreadsheet/startEdit/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void} - Start edit the active cell.\n     */\n    Spreadsheet.prototype.startEdit = function () {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.editOperation, { action: 'startEdit', isNewValueEdit: false });\n    };\n    /**\n     * Cancels the edited state, this will not update any value in the cell.\n     *\n     * {% codeBlock src='spreadsheet/closeEdit/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void} - Cancels the edited state, this will not update any value in the cell.\n     */\n    Spreadsheet.prototype.closeEdit = function () {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.editOperation, { action: 'cancelEdit' });\n    };\n    /**\n     * If Spreadsheet is in editable state, you can save the cell by invoking endEdit.\n     *\n     * {% codeBlock src='spreadsheet/endEdit/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void} - If Spreadsheet is in editable state, you can save the cell by invoking endEdit.\n     */\n    Spreadsheet.prototype.endEdit = function () {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.editOperation, { action: 'endEdit', isPublic: true });\n    };\n    /**\n     * This method is used to print the active sheet or the entire workbook.\n     *\n     * @param {printOptions} printOptions - Represents the settings to customize the print type, row and column headers and gridlines in the printing operation.\n     * @returns {void}\n     */\n    Spreadsheet.prototype.print = function (printOptions) {\n        if (printOptions === void 0) { printOptions = { type: 'ActiveSheet', allowRowColumnHeader: false, allowGridLines: false }; }\n        if (this.allowPrint && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.printModule)) {\n            this.printModule.print(this, printOptions);\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param  {SpreadsheetModel} newProp - Specify the new properties\n     * @param  {SpreadsheetModel} oldProp - Specify the old properties\n     * @returns {void} - Called internally if any of the property value changed.\n     * @hidden\n     */\n    Spreadsheet.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        _super.prototype.onPropertyChanged.call(this, newProp, oldProp);\n        var sheetTabsRefreshed;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            var header = void 0;\n            var addBtn = void 0;\n            var sheet = this.getActiveSheet();\n            var horizontalScroll = this.getScrollElement();\n            switch (prop) {\n                case 'enableRtl':\n                    if (newProp.locale || newProp.currencyCode) {\n                        break;\n                    }\n                    header = this.getColumnHeaderContent();\n                    if (header) {\n                        header = header.parentElement;\n                    }\n                    if (!header) {\n                        break;\n                    }\n                    if (newProp.enableRtl) {\n                        header.style.marginRight = '';\n                        document.getElementById(this.element.id + '_sheet_panel').classList.add('e-rtl');\n                    }\n                    else {\n                        header.style.marginLeft = '';\n                        document.getElementById(this.element.id + '_sheet_panel').classList.remove('e-rtl');\n                    }\n                    if (this.allowScrolling) {\n                        this.scrollModule.setPadding(true);\n                    }\n                    if (this.allowAutoFill) {\n                        var autofillEle = this.element.querySelector('.e-dragfill-ddb');\n                        if (autofillEle) {\n                            var autofillDdb = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(autofillEle, 'dropdown-btn');\n                            if (autofillDdb) {\n                                autofillDdb.enableRtl = newProp.enableRtl;\n                                autofillDdb.dataBind();\n                            }\n                        }\n                    }\n                    this.sheetModule.setPanelWidth(sheet, this.getRowHeaderContent(), true);\n                    if (this.allowImage || this.allowChart) {\n                        var overlays = this.element.getElementsByClassName('e-ss-overlay');\n                        var chart = void 0;\n                        var overlay_1 = void 0;\n                        var chartEle = void 0;\n                        for (var idx = 0, overlayLen = overlays.length - 1; idx <= overlayLen; idx++) {\n                            overlay_1 = overlays[0];\n                            if (overlay_1.classList.contains('e-datavisualization-chart')) {\n                                chartEle = overlay_1.querySelector('.e-accumulationchart');\n                                if (chartEle) {\n                                    chart = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(chartEle, 'accumulationchart');\n                                }\n                                else {\n                                    chartEle = overlay_1.querySelector('.e-chart');\n                                    chart = chartEle && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(chartEle, 'chart');\n                                }\n                                if (chart) {\n                                    chart.destroy();\n                                }\n                            }\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(overlay_1);\n                            if (idx === overlayLen) {\n                                this.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.updateView, {});\n                            }\n                        }\n                    }\n                    if (horizontalScroll) {\n                        horizontalScroll.scrollLeft = 0;\n                    }\n                    this.selectRange(sheet.selectedRange);\n                    break;\n                case 'cssClass':\n                    if (oldProp.cssClass) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], oldProp.cssClass.split(' '));\n                    }\n                    if (newProp.cssClass) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], newProp.cssClass.split(' '));\n                    }\n                    break;\n                case 'activeSheetIndex':\n                    this.renderModule.refreshSheet();\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.activeSheetChanged, { idx: newProp.activeSheetIndex });\n                    break;\n                case 'width':\n                    this.setWidth();\n                    this.resize();\n                    break;\n                case 'height':\n                    this.setHeight();\n                    this.resize();\n                    break;\n                case 'showRibbon':\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.ribbon, { prop: 'showRibbon', onPropertyChange: true });\n                    break;\n                case 'showFormulaBar':\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.formulaBar, { uiUpdate: true });\n                    break;\n                case 'showSheetTabs':\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.sheetTabs, null);\n                    break;\n                case 'cellStyle':\n                    this.renderModule.refreshSheet();\n                    break;\n                case 'allowEditing':\n                    if (this.allowEditing) {\n                        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.editOperation, { action: 'renderEditor' });\n                        if (this.enableKeyboardNavigation) {\n                            // Remove and reassign the `keyDown` and `mouseDown` event in `KeyboardNavigation` and `Selection` module.\n                            // To execute the respective event after editing operation.\n                            this.enableKeyboardNavigation = false;\n                            this.dataBind();\n                            this.enableKeyboardNavigation = true;\n                            this.dataBind();\n                            var mode = this.selectionSettings.mode;\n                            if (mode !== 'None') {\n                                this.selectionSettings.mode = 'None';\n                                this.dataBind();\n                                this.selectionSettings.mode = mode;\n                                this.dataBind();\n                            }\n                        }\n                    }\n                    else {\n                        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.refreshOverlayElem, null);\n                    }\n                    break;\n                case 'allowInsert':\n                    addBtn = this.element.getElementsByClassName('e-add-sheet-tab')[0];\n                    if (addBtn) {\n                        addBtn.disabled = !this.allowInsert;\n                        if (this.allowInsert) {\n                            if (addBtn.classList.contains('e-disabled')) {\n                                addBtn.classList.remove('e-disabled');\n                            }\n                        }\n                        else {\n                            if (!addBtn.classList.contains('e-disabled')) {\n                                addBtn.classList.add('e-disabled');\n                            }\n                        }\n                    }\n                    break;\n                case 'sheets':\n                    if (newProp.sheets === this.sheets) {\n                        this.renderModule.refreshSheet();\n                        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.refreshSheetTabs, null);\n                        this.notify(_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.workbookFormulaOperation, { action: 'initSheetInfo' });\n                        break;\n                    }\n                    Object.keys(newProp.sheets).forEach(function (sheetIndex, index) {\n                        var sheetIdx = Number(sheetIndex);\n                        var sheet = newProp.sheets[sheetIdx];\n                        var curSheet = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheet)(_this, sheetIdx);\n                        if (sheet.ranges && Object.keys(sheet.ranges).length) {\n                            var ranges = Object.keys(sheet.ranges);\n                            var newRangeIdx_1;\n                            ranges.forEach(function (rangeIdx, idx) {\n                                if (!sheet.ranges[Number(rangeIdx)].info) {\n                                    newRangeIdx_1 = idx;\n                                }\n                            });\n                            var rangeIdx_1;\n                            var range_1;\n                            var curRange_1;\n                            var dataSource_1;\n                            ranges.forEach(function (rangeIndex, idx) {\n                                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(newRangeIdx_1) || newRangeIdx_1 === idx) {\n                                    rangeIdx_1 = Number(rangeIndex);\n                                    range_1 = sheet.ranges[rangeIdx_1];\n                                    curRange_1 = curSheet.ranges[rangeIdx_1];\n                                    dataSource_1 = range_1.dataSource;\n                                    if (range_1.fieldsOrder && curRange_1.info && !dataSource_1 && curRange_1.dataSource) {\n                                        dataSource_1 = curRange_1.dataSource;\n                                    }\n                                    if (dataSource_1) {\n                                        _this.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.dataSourceChanged, { sheetIdx: sheetIdx, rangeIdx: rangeIdx_1, changedData: dataSource_1 });\n                                    }\n                                }\n                            });\n                        }\n                        else if (sheet.paneTopLeftCell && oldProp.sheets && oldProp.sheets[\"\" + sheetIdx] &&\n                            oldProp.sheets[\"\" + sheetIdx].paneTopLeftCell) {\n                            if (_this.activeSheetIndex !== Number(sheetIdx)) {\n                                return;\n                            }\n                            var cIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(sheet.paneTopLeftCell);\n                            var pIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getCellIndexes)(oldProp.sheets[\"\" + sheetIdx].paneTopLeftCell);\n                            if (cIdx[0] !== pIdx[0]) {\n                                var frozenRow = _this.frozenRowCount(_this.getActiveSheet());\n                                var top_1 = cIdx[0] > frozenRow ? (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.getRowsHeight)(_this.getActiveSheet(), frozenRow, cIdx[0] - 1) : 0;\n                                _this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.updateScroll, { top: top_1 });\n                            }\n                            if (cIdx[1] !== pIdx[1]) {\n                                var frozenCol = _this.frozenColCount(_this.getActiveSheet());\n                                var left = cIdx[1] > frozenCol ? (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getColumnsWidth)(_this.getActiveSheet(), frozenCol, cIdx[1] - 1) : 0;\n                                _this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.updateScroll, { left: left });\n                            }\n                        }\n                        else {\n                            if (index === 0) {\n                                _this.renderModule.refreshSheet();\n                            }\n                            if (_this.showSheetTabs && sheet.name && !sheetTabsRefreshed) {\n                                var items = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('.e-sheet-tabs-items', _this.element);\n                                var idx = Number(sheetIdx);\n                                if (items.children[idx + 1]) {\n                                    _this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.sheetNameUpdate, { items: items, value: sheet.name, idx: idx });\n                                }\n                                else {\n                                    _this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.refreshSheetTabs, null);\n                                    sheetTabsRefreshed = true;\n                                }\n                            }\n                        }\n                    });\n                    break;\n                case 'locale':\n                    this.refresh();\n                    break;\n                case 'currencyCode':\n                    if (!newProp.locale) {\n                        this.refresh();\n                    }\n                    break;\n                case 'password':\n                    if (this.password.length > 0) {\n                        if (this.showSheetTabs) {\n                            this.element.querySelector('.e-add-sheet-tab').setAttribute('disabled', 'true');\n                            this.element.querySelector('.e-add-sheet-tab').classList.add('e-disabled');\n                        }\n                    }\n                    break;\n                case 'isProtected':\n                    if (this.isProtected) {\n                        var addBtn_1 = this.element.getElementsByClassName('e-add-sheet-tab')[0];\n                        if (addBtn_1) {\n                            addBtn_1.disabled = this.isProtected;\n                            if (this.isProtected) {\n                                if (addBtn_1.classList.contains('e-disabled')) {\n                                    addBtn_1.classList.add('e-disabled');\n                                }\n                            }\n                            else {\n                                if (!addBtn_1.classList.contains('e-disabled')) {\n                                    addBtn_1.classList.remove('e-disabled');\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'allowFreezePane':\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.ribbon, { prop: 'allowFreezePane', onPropertyChange: true });\n                    break;\n                case 'allowImage':\n                case 'allowChart':\n                    this.renderModule.refreshSheet();\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.ribbon, { prop: prop, onPropertyChange: true });\n                    break;\n                case 'calculationMode':\n                    if (oldProp.calculationMode === 'Manual') {\n                        this.notify(_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.workbookFormulaOperation, { action: 'ClearDependentCellCollection' });\n                    }\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.ribbon, { prop: prop, onPropertyChange: true });\n                    break;\n                case 'allowResizing':\n                    if (newProp.allowResizing) {\n                        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.propertyChange, { propertyName: prop });\n                    }\n                    break;\n                case 'enableNotes':\n                    if (newProp.enableNotes) {\n                        this.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.updateView, {});\n                    }\n                    break;\n                case 'allowNumberFormatting':\n                case 'allowWrap':\n                case 'allowCellFormatting':\n                    this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.ribbon, { prop: prop, onPropertyChange: true });\n                    this.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_6__.updateView, {});\n                    break;\n                case 'showAggregate':\n                    this.notify(_index__WEBPACK_IMPORTED_MODULE_13__.showAggregate, { remove: !this.showAggregate });\n                    break;\n            }\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering.\n     *\n     * @returns {ModuleDeclaration[]} - To provide the array of modules needed for component rendering.\n     * @hidden\n     */\n    Spreadsheet.prototype.requiredModules = function () {\n        return (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getRequiredModules)(this);\n    };\n    /**\n     * Appends the control within the given HTML Div element.\n     *\n     * {% codeBlock src='spreadsheet/appendTo/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string | HTMLElement} selector - Target element where control needs to be appended.\n     * @returns {void} - Appends the control within the given HTML Div element.\n     */\n    Spreadsheet.prototype.appendTo = function (selector) {\n        _super.prototype.appendTo.call(this, selector);\n    };\n    /**\n     * Filters the range of cells in the sheet.\n     *\n     * @hidden\n     * @param {FilterOptions} filterOptions - specifiy the FilterOptions.\n     * @param {string} range - Specify the range\n     * @returns {Promise<FilterEventArgs>} - Filters the range of cells in the sheet.\n     */\n    Spreadsheet.prototype.filter = function (filterOptions, range) {\n        if (!this.allowFiltering) {\n            return Promise.reject();\n        }\n        range = range || this.getActiveSheet().selectedRange;\n        return _super.prototype.filter.call(this, filterOptions, range);\n    };\n    /**\n     * Clears the filter changes of the sheet.\n     *\n     * {% codeBlock src='spreadsheet/clearFilter/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} field - Specify the field.\n     * @param {number} sheetIndex - Specify the index of the sheet.\n     * @returns {void} - To clear the filter.\n     */\n    Spreadsheet.prototype.clearFilter = function (field, sheetIndex) {\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.clearFilter, { field: field, sheetIndex: sheetIndex });\n    };\n    /**\n     * Applies the filter UI in the range of cells in the sheet.\n     *\n     * {% codeBlock src='spreadsheet/applyFilter/index.md' %}{% endcodeBlock %}\n     *\n     * @param {PredicateModel[]} predicates - Specifies the predicates.\n     * @param {string} range - Specify the range.\n     * @returns {Promise<void>} - to apply the filter.\n     */\n    Spreadsheet.prototype.applyFilter = function (predicates, range) {\n        var _this = this;\n        if (!this.allowFiltering) {\n            return Promise.reject();\n        }\n        var promise = new Promise(function (resolve) { resolve((function () { })()); });\n        if (predicates && predicates.length) {\n            var eventArgs_1;\n            predicates.forEach(function (predicate) {\n                eventArgs_1 = { instance: { options: { type: predicate.type, format: predicate.type === 'date' && 'yMd' } },\n                    arg3: predicate.value, arg2: predicate.operator };\n                _this.notify(_syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_12__.fltrPrevent, eventArgs_1);\n                predicate.value = eventArgs_1.arg3;\n            });\n        }\n        var sheetIdx = range ? (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.getSheetIndexFromAddress)(this, range) : this.activeSheetIndex;\n        var filterArgs = { predicates: predicates, range: range, isInternal: true, promise: promise, sIdx: sheetIdx };\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.initiateFilterUI, filterArgs);\n        return filterArgs.promise;\n    };\n    /**\n     * To add custom library function.\n     *\n     *  {% codeBlock src='spreadsheet/addCustomFunction/index.md' %}{% endcodeBlock %}\n     *\n     * @param {string} functionHandler - Custom function handler name\n     * @param {string} functionName - Custom function name\n     * @param  {string} formulaDescription - Specifies formula description.\n     * @returns {void} - To add custom function.\n     */\n    Spreadsheet.prototype.addCustomFunction = function (functionHandler, functionName, formulaDescription) {\n        _super.prototype.addCustomFunction.call(this, functionHandler, functionName, formulaDescription);\n        this.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.refreshFormulaDatasource, null);\n    };\n    /**\n     * Sets or releases the read-only status for a specified range in the given sheet.\n     *\n     * @param {boolean} readOnly - A boolean indicating whether the range should be set as read-only (true) or editable (false).\n     * @param {string} range - The range to be set as read-only. It can be a single cell, a range of cells (e.g., \"A1:B5\"), a column (e.g., \"C\"), or a row (e.g., \"10\").\n     * @param {number} sheetIndex - The index of the sheet where the range is located. If not provided, it defaults to the active sheet index.\n     * @returns {void} - Sets the read-only status for a specified range in the given sheet.\n     *\n     */\n    Spreadsheet.prototype.setRangeReadOnly = function (readOnly, range, sheetIndex) {\n        range = range || this.getActiveSheet().selectedRange;\n        var sheetIdx = sheetIndex || this.activeSheetIndex;\n        var indexes = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_7__.getSwapRange)((0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getRangeIndexes)(range));\n        var sheet = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getSheet)(this, sheetIdx);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(sheet)) {\n            return;\n        }\n        this.notify('actionBegin', { action: 'readonly', eventArgs: { readOnly: readOnly, range: range, sheetIdx: sheetIdx } });\n        if ((0,_common_index__WEBPACK_IMPORTED_MODULE_1__.isColumnRange)(range) || (indexes[0] === 0 && indexes[2] === sheet.rowCount - 1)) {\n            for (var col = indexes[1]; col <= indexes[3]; col++) {\n                if (!readOnly) {\n                    var column = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getColumn)(sheet, col);\n                    if (column && column.isReadOnly) {\n                        delete column.isReadOnly;\n                    }\n                }\n                else {\n                    (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.setColumn)(sheet, col, { isReadOnly: readOnly });\n                }\n            }\n        }\n        else if ((0,_common_index__WEBPACK_IMPORTED_MODULE_1__.isRowRange)(range) || (indexes[1] === 0 && indexes[3] === sheet.colCount - 1)) {\n            for (var row = indexes[0]; row <= indexes[2]; row++) {\n                if (!readOnly) {\n                    var rowValue = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_6__.getRow)(sheet, row);\n                    if (rowValue && rowValue.isReadOnly) {\n                        delete rowValue.isReadOnly;\n                    }\n                }\n                else {\n                    (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.setRow)(sheet, row, { isReadOnly: readOnly });\n                }\n            }\n        }\n        else {\n            for (var colIdx = indexes[1]; colIdx <= indexes[3]; colIdx++) {\n                for (var rowIdx = indexes[0]; rowIdx <= indexes[2]; rowIdx++) {\n                    if (!readOnly) {\n                        var cell = (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.getCell)(rowIdx, colIdx, sheet);\n                        if (cell && cell.isReadOnly) {\n                            delete cell.isReadOnly;\n                        }\n                    }\n                    else {\n                        (0,_workbook_base_index__WEBPACK_IMPORTED_MODULE_10__.setCell)(rowIdx, colIdx, sheet, { isReadOnly: readOnly }, true);\n                    }\n                }\n            }\n        }\n        // Added the e-readonly class to cell range/column for providing the customization option from sample end to the readonly mode cells.\n        for (var colIndex = indexes[1]; colIndex <= indexes[3]; colIndex++) {\n            for (var rowIndex = indexes[0]; rowIndex <= indexes[2]; rowIndex++) {\n                var cell = this.getCell(rowIndex, colIndex);\n                if (!readOnly && cell && cell.classList.contains('e-readonly')) {\n                    cell.classList.remove('e-readonly');\n                }\n                else if (cell && !cell.classList.contains('e-readonly')) {\n                    cell.className += ' e-readonly';\n                }\n            }\n        }\n        this.notify('actionComplete', { action: 'readonly', eventArgs: { readOnly: readOnly, range: range, sheetIdx: sheetIdx } });\n    };\n    var Spreadsheet_1;\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Spreadsheet.prototype, \"cssClass\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Spreadsheet.prototype, \"allowScrolling\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Spreadsheet.prototype, \"allowResizing\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Spreadsheet.prototype, \"showAggregate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Spreadsheet.prototype, \"enableClipboard\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Spreadsheet.prototype, \"enableContextMenu\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Spreadsheet.prototype, \"enableKeyboardNavigation\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Spreadsheet.prototype, \"enableKeyboardShortcut\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Spreadsheet.prototype, \"allowUndoRedo\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Spreadsheet.prototype, \"allowWrap\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _common_index__WEBPACK_IMPORTED_MODULE_1__.SelectionSettings)\n    ], Spreadsheet.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _common_index__WEBPACK_IMPORTED_MODULE_1__.ScrollSettings)\n    ], Spreadsheet.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"beforeCellRender\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"beforeSelect\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"select\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"contextMenuBeforeOpen\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"fileMenuBeforeOpen\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"contextMenuBeforeClose\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"dialogBeforeOpen\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"fileMenuBeforeClose\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"contextMenuItemSelect\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"fileMenuItemSelect\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"dataBound\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"cellEdit\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"cellEditing\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"cellEdited\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"cellSave\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"beforeCellSave\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"created\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"beforeSort\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"beforeHyperlinkCreate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"afterHyperlinkCreate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"beforeHyperlinkClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"afterHyperlinkClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"beforeConditionalFormat\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"actionBegin\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"actionComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"openComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Spreadsheet.prototype, \"sortComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('USD')\n    ], Spreadsheet.prototype, \"currencyCode\", void 0);\n    Spreadsheet = Spreadsheet_1 = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], Spreadsheet);\n    return Spreadsheet;\n}(_workbook_base_workbook__WEBPACK_IMPORTED_MODULE_8__.Workbook));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/base/spreadsheet.js?");

/***/ })

}]);