"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-ci"],{

/***/ "./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-axis-panel.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-axis-panel.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateSum: () => (/* binding */ calculateSum)\n/* harmony export */ });\n/**\n * Specifies Circular-Gauge axis-panel Helper methods\n */\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nfunction calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-axis-panel.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-axis-renderer.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-axis-renderer.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRangeColor: () => (/* binding */ getRangeColor)\n/* harmony export */ });\n/**\n * Specifies Circular-Gauge axis-render Helper methods\n */\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nfunction getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-axis-renderer.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-circular-gauge.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-circular-gauge.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRange: () => (/* binding */ getRange),\n/* harmony export */   getValueFromAngle: () => (/* binding */ getValueFromAngle),\n/* harmony export */   setStyles: () => (/* binding */ setStyles)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _helper_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper-common */ \"./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js\");\n/**\n * Specifies Circular-Gauge Helper methods\n */\n\n\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nfunction setStyles(element, fill, border) {\n    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nfunction getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= (0,_helper_common__WEBPACK_IMPORTED_MODULE_1__.isCompleteAngle)(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / (0,_helper_common__WEBPACK_IMPORTED_MODULE_1__.getDegree)(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / (0,_helper_common__WEBPACK_IMPORTED_MODULE_1__.getDegree)(startAngle, endAngle)) * (maximumValue - minimumValue)));\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nfunction getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString.split('Range_')[1]\n    };\n}\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-circular-gauge.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-legend.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-legend.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removeTooltip: () => (/* binding */ removeTooltip),\n/* harmony export */   showTooltip: () => (/* binding */ showTooltip),\n/* harmony export */   textTrim: () => (/* binding */ textTrim),\n/* harmony export */   titleTooltip: () => (/* binding */ titleTooltip)\n/* harmony export */ });\n/* harmony import */ var _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helper-common */ \"./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\n\n\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nfunction textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = (0,_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__.measureText)(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = (0,_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__.measureText)(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {CircularGauge} gauge - Specifies the circular gauge.\n * @param {string} type - Specifies the type\n * @returns {void}\n * @private */\nfunction showTooltip(text, x, y, gauge, type) {\n    var tooltipRect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__.Rect(gauge.margin.left, gauge.margin.top + 10, gauge.availableSize.width - (gauge.margin.left + gauge.margin.right), gauge.availableSize.height - (gauge.margin.top - gauge.margin.bottom));\n    var id;\n    var tooltip;\n    if (type === 'Title') {\n        id = gauge.element.id + '_EJ2_Title_Tooltip';\n        tooltip = document.getElementById(id);\n        var width = (0,_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__.measureText)(text, {\n            fontFamily: 'Segoe UI', size: '12px',\n            fontStyle: 'Normal', fontWeight: 'Regular'\n        }).width + 5;\n        tooltipRect.width = width < tooltipRect.width ? width : tooltipRect.width - 10;\n        if (!tooltip) {\n            removeTooltip();\n        }\n    }\n    else if (type === 'LegendText') {\n        id = gauge.element.id + '_EJ2_Legend_Tooltip';\n        tooltip = document.getElementById(id);\n        if (!tooltip) {\n            removeTooltip();\n        }\n        var width = (0,_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__.measureText)(text, {\n            fontFamily: 'Segoe UI', size: '12px',\n            fontStyle: 'Normal', fontWeight: 'Regular'\n        }).width + 5;\n        x = (x + width > tooltipRect.width) ? x - width : x;\n        tooltipRect.x = x < 0 ? 5 : x;\n        tooltipRect.y = y;\n        tooltipRect.width = width;\n    }\n    if (!tooltip) {\n        tooltip = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: id, className: 'EJ2-CircularGauge-Tooltip' });\n        tooltip.innerText = text;\n        tooltip.style.cssText = 'top:' + (tooltipRect.y + 15).toString() + 'px;left:' + (tooltipRect.x).toString() +\n            'px; background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n            'position:absolute; border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n            'padding-bottom: 2px; padding-top : 2px; font-size:12px; text-align: center; font-family: \"Segoe UI\"; width:' + (tooltipRect.width) + 'px;';\n        (0,_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__.getElement)(gauge.element.id + '_Secondary_Element').appendChild(tooltip);\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (tooltipRect.y + 15).toString() + 'px';\n        tooltip.style.left = (tooltipRect.x).toString() + 'px';\n    }\n}\n/**\n * @param {Event} event - Specifies the event.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {boolean} isTitleTouch - Specifies the title touch with boolean.\n * @returns {void}\n * @private */\nfunction titleTooltip(event, x, y, gauge, isTitleTouch) {\n    var targetId = event.target.id;\n    var elementArray = document.getElementsByClassName('EJ2-CircularGauge-Tooltip');\n    if ((targetId === (gauge.element.id + '_CircularGaugeTitle')) && (event.target.textContent.indexOf('...') > -1)) {\n        showTooltip(gauge.title, x, y, gauge, 'Title');\n    }\n    else if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1 &&\n        gauge.legendSettings.visible) {\n        var axisIndex = parseInt(targetId.split(gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n        var rangeIndex = parseInt(targetId.split(gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n        var text = '';\n        for (var _i = 0, _a = gauge.legendModule.legendCollection; _i < _a.length; _i++) {\n            var legends = _a[_i];\n            if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                text = legends.originalText;\n            }\n        }\n        showTooltip(text, x, y, gauge, 'LegendText');\n    }\n    else if (elementArray.length > 0 && (elementArray[0].id.indexOf('Title_Tooltip') > -1 ||\n        elementArray[0].id.indexOf('Legend_Tooltip') > -1)) {\n        removeTooltip();\n    }\n    if (isTitleTouch && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this)) {\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(removeTooltip.bind(this), 2000);\n    }\n}\n/**\n * @returns {void}\n * @private */\nfunction removeTooltip() {\n    if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n        document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0].remove();\n    }\n}\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-legend.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-pointer-renderer.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-pointer-renderer.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCompleteArc: () => (/* binding */ getCompleteArc),\n/* harmony export */   getCompletePath: () => (/* binding */ getCompletePath),\n/* harmony export */   linear: () => (/* binding */ linear)\n/* harmony export */ });\n/* harmony import */ var _helper_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helper-common */ \"./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js\");\n/**\n * Specifies Circular-Gauge pointer-render Helper methods\n */\n\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nfunction linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nfunction getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= (0,_helper_common__WEBPACK_IMPORTED_MODULE_0__.isCompleteAngle)(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = (0,_helper_common__WEBPACK_IMPORTED_MODULE_0__.getDegree)(start, end);\n    return getCompletePath(center, (0,_helper_common__WEBPACK_IMPORTED_MODULE_0__.getLocationFromAngle)(start, radius, center), (0,_helper_common__WEBPACK_IMPORTED_MODULE_0__.getLocationFromAngle)(end, radius, center), radius, (0,_helper_common__WEBPACK_IMPORTED_MODULE_0__.getLocationFromAngle)(start, innerRadius, center), (0,_helper_common__WEBPACK_IMPORTED_MODULE_0__.getLocationFromAngle)(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nfunction getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-pointer-renderer.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-tooltip.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-tooltip.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getElementSize: () => (/* binding */ getElementSize),\n/* harmony export */   getMousePosition: () => (/* binding */ getMousePosition)\n/* harmony export */ });\n/* harmony import */ var _helper_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helper-common */ \"./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/**\n * Specifies Circular-Gauge Tooltip Helper methods\n */\n\n\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n *\n * @private\n */\nfunction getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new _helper_common__WEBPACK_IMPORTED_MODULE_0__.GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * function to get the size of the element.\n *\n * @param {string} template - Specifies the template element.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @param {HTMLElement} parent - specifies the element.\n * @returns {Size} - Return the size of the element\n *\n * @private\n */\nfunction getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = (0,_helper_common__WEBPACK_IMPORTED_MODULE_0__.getTemplateFunction)(template, gauge);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var tooltipData = templateFn ? (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n        : templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateElement = (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n            : templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new _helper_common__WEBPACK_IMPORTED_MODULE_0__.Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.remove)(element);\n    }\n    return elementSize;\n}\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-tooltip.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-circulargauge/src/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-circulargauge/src/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Animation: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Animation),\n/* harmony export */   Annotation: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Annotation),\n/* harmony export */   AnnotationTooltip: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.AnnotationTooltip),\n/* harmony export */   Annotations: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Annotations),\n/* harmony export */   Axis: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Axis),\n/* harmony export */   Border: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Border),\n/* harmony export */   Cap: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Cap),\n/* harmony export */   CircularGauge: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.CircularGauge),\n/* harmony export */   ColorStop: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.ColorStop),\n/* harmony export */   CustomizeOption: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.CustomizeOption),\n/* harmony export */   Font: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Font),\n/* harmony export */   GaugeLocation: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.GaugeLocation),\n/* harmony export */   GaugeTooltip: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.GaugeTooltip),\n/* harmony export */   Gradient: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Gradient),\n/* harmony export */   GradientPosition: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.GradientPosition),\n/* harmony export */   ImageExport: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.ImageExport),\n/* harmony export */   Index: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Index),\n/* harmony export */   Label: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Label),\n/* harmony export */   Legend: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Legend),\n/* harmony export */   LegendOptions: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.LegendOptions),\n/* harmony export */   LegendSettings: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.LegendSettings),\n/* harmony export */   Line: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Line),\n/* harmony export */   LinearGradient: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.LinearGradient),\n/* harmony export */   Location: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Location),\n/* harmony export */   Margin: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Margin),\n/* harmony export */   NeedleTail: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.NeedleTail),\n/* harmony export */   PathOption: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.PathOption),\n/* harmony export */   PdfExport: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.PdfExport),\n/* harmony export */   Pointer: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Pointer),\n/* harmony export */   Print: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Print),\n/* harmony export */   RadialGradient: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.RadialGradient),\n/* harmony export */   Range: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Range),\n/* harmony export */   RangeTooltip: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.RangeTooltip),\n/* harmony export */   Rect: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Rect),\n/* harmony export */   RectOption: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.RectOption),\n/* harmony export */   Size: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Size),\n/* harmony export */   TextOption: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.TextOption),\n/* harmony export */   Tick: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.Tick),\n/* harmony export */   TooltipSettings: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.TooltipSettings),\n/* harmony export */   VisibleLabels: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.VisibleLabels),\n/* harmony export */   appendPath: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.appendPath),\n/* harmony export */   arcPath: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.arcPath),\n/* harmony export */   arcRoundedPath: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.arcRoundedPath),\n/* harmony export */   arcWidthPath: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.arcWidthPath),\n/* harmony export */   arcWidthPathCalculation: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.arcWidthPathCalculation),\n/* harmony export */   calculateShapes: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.calculateShapes),\n/* harmony export */   calculateSum: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.calculateSum),\n/* harmony export */   getAngleFromLocation: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getAngleFromLocation),\n/* harmony export */   getAngleFromValue: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getAngleFromValue),\n/* harmony export */   getCirclePath: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getCirclePath),\n/* harmony export */   getCompleteArc: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getCompleteArc),\n/* harmony export */   getCompletePath: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getCompletePath),\n/* harmony export */   getDegree: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getDegree),\n/* harmony export */   getElement: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getElement),\n/* harmony export */   getElementSize: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getElementSize),\n/* harmony export */   getFontStyle: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getFontStyle),\n/* harmony export */   getLabelFormat: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getLabelFormat),\n/* harmony export */   getLocationFromAngle: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getLocationFromAngle),\n/* harmony export */   getMousePosition: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getMousePosition),\n/* harmony export */   getPathArc: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getPathArc),\n/* harmony export */   getPointer: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getPointer),\n/* harmony export */   getRange: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getRange),\n/* harmony export */   getRangeColor: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getRangeColor),\n/* harmony export */   getRangePath: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getRangePath),\n/* harmony export */   getRoundedPathArc: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getRoundedPathArc),\n/* harmony export */   getTemplateFunction: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getTemplateFunction),\n/* harmony export */   getValueFromAngle: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.getValueFromAngle),\n/* harmony export */   isCompleteAngle: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.isCompleteAngle),\n/* harmony export */   linear: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.linear),\n/* harmony export */   measureText: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.measureText),\n/* harmony export */   removeElement: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.removeElement),\n/* harmony export */   removeTooltip: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.removeTooltip),\n/* harmony export */   roundedArcWidthPathCalculation: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.roundedArcWidthPathCalculation),\n/* harmony export */   setStyles: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.setStyles),\n/* harmony export */   showTooltip: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.showTooltip),\n/* harmony export */   stringToNumber: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.stringToNumber),\n/* harmony export */   textElement: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.textElement),\n/* harmony export */   textTrim: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.textTrim),\n/* harmony export */   titleTooltip: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.titleTooltip),\n/* harmony export */   toPixel: () => (/* reexport safe */ _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__.toPixel)\n/* harmony export */ });\n/* harmony import */ var _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./circular-gauge/index */ \"./node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/index.js\");\n/**\n * Circular Gauge component exported.\n */\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-circulargauge/src/index.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-compression/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-compression/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChecksumCalculator: () => (/* reexport safe */ _src_index__WEBPACK_IMPORTED_MODULE_0__.ChecksumCalculator),\n/* harmony export */   CompressedStreamReader: () => (/* reexport safe */ _src_index__WEBPACK_IMPORTED_MODULE_0__.CompressedStreamReader),\n/* harmony export */   CompressedStreamWriter: () => (/* reexport safe */ _src_index__WEBPACK_IMPORTED_MODULE_0__.CompressedStreamWriter),\n/* harmony export */   CompressorHuffmanTree: () => (/* reexport safe */ _src_index__WEBPACK_IMPORTED_MODULE_0__.CompressorHuffmanTree),\n/* harmony export */   DecompressorHuffmanTree: () => (/* reexport safe */ _src_index__WEBPACK_IMPORTED_MODULE_0__.DecompressorHuffmanTree),\n/* harmony export */   Stream: () => (/* reexport safe */ _src_index__WEBPACK_IMPORTED_MODULE_0__.Stream),\n/* harmony export */   Utils: () => (/* reexport safe */ _src_index__WEBPACK_IMPORTED_MODULE_0__.Utils),\n/* harmony export */   ZipArchive: () => (/* reexport safe */ _src_index__WEBPACK_IMPORTED_MODULE_0__.ZipArchive),\n/* harmony export */   ZipArchiveItem: () => (/* reexport safe */ _src_index__WEBPACK_IMPORTED_MODULE_0__.ZipArchiveItem),\n/* harmony export */   ZipArchiveItemHelper: () => (/* reexport safe */ _src_index__WEBPACK_IMPORTED_MODULE_0__.ZipArchiveItemHelper)\n/* harmony export */ });\n/* harmony import */ var _src_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/index */ \"./node_modules/@syncfusion/ej2-compression/src/index.js\");\n/**\n * index\n */\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-compression/index.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-compression/src/checksum-calculator.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-compression/src/checksum-calculator.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChecksumCalculator: () => (/* binding */ ChecksumCalculator)\n/* harmony export */ });\n/* eslint-disable */\n/// <summary>\n/// Checksum calculator, based on Adler32 algorithm.\n/// </summary>\nvar ChecksumCalculator = /** @class */ (function () {\n    function ChecksumCalculator() {\n    }\n    /// <summary>\n    /// Updates checksum by calculating checksum of the\n    /// given buffer and adding it to current value.\n    /// </summary>\n    /// <param name=\"checksum\">Current checksum.</param>\n    /// <param name=\"buffer\">Data byte array.</param>\n    /// <param name=\"offset\">Offset in the buffer.</param>\n    /// <param name=\"length\">Length of data to be used from the stream.</param>\n    ChecksumCalculator.ChecksumUpdate = function (checksum, buffer, offset, length) {\n        var checkSumUInt = checksum;\n        var s1 = checkSumUInt & 65535;\n        var s2 = checkSumUInt >> this.DEF_CHECKSUM_BIT_OFFSET;\n        while (length > 0) {\n            var steps = Math.min(length, this.DEF_CHECKSUM_ITERATIONSCOUNT);\n            length -= steps;\n            while (--steps >= 0) {\n                s1 = s1 + (buffer[offset++] & 255);\n                s2 = s2 + s1;\n            }\n            s1 %= this.DEF_CHECKSUM_BASE;\n            s2 %= this.DEF_CHECKSUM_BASE;\n        }\n        checkSumUInt = (s2 << this.DEF_CHECKSUM_BIT_OFFSET) | s1;\n        checksum = checkSumUInt;\n    };\n    /// <summary>\n    /// Generates checksum by calculating checksum of the\n    /// given buffer.\n    /// </summary>\n    /// <param name=\"buffer\">Data byte array.</param>\n    /// <param name=\"offset\">Offset in the buffer.</param>\n    /// <param name=\"length\">Length of data to be used from the stream.</param>\n    ChecksumCalculator.ChecksumGenerate = function (buffer, offset, length) {\n        var result = 1;\n        ChecksumCalculator.ChecksumUpdate(result, buffer, offset, length);\n        return result;\n    };\n    /// <summary>\n    /// Bits offset, used in adler checksum calculation.\n    /// </summary>\n    ChecksumCalculator.DEF_CHECKSUM_BIT_OFFSET = 16;\n    /// <summary>\n    /// Lagrest prime, less than 65535\n    /// </summary>\n    ChecksumCalculator.DEF_CHECKSUM_BASE = 65521;\n    /// <summary>\n    /// Count of iteration used in calculated of the adler checksumm.\n    /// </summary>\n    ChecksumCalculator.DEF_CHECKSUM_ITERATIONSCOUNT = 3800;\n    return ChecksumCalculator;\n}());\n\n/* eslint-enable */ \n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-compression/src/checksum-calculator.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-compression/src/decompressor-huffman-tree.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-compression/src/decompressor-huffman-tree.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DecompressorHuffmanTree: () => (/* binding */ DecompressorHuffmanTree)\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"./node_modules/@syncfusion/ej2-compression/src/index.js\");\n/* eslint-disable */\n\nvar DecompressorHuffmanTree = /** @class */ (function () {\n    function DecompressorHuffmanTree(lengths) {\n        this.buildTree(lengths);\n    }\n    DecompressorHuffmanTree.init = function () {\n        var lengths;\n        var index;\n        // Generate huffman tree for lengths.\n        lengths = new Uint8Array(288);\n        index = 0;\n        while (index < 144) {\n            lengths[index++] = 8;\n        }\n        while (index < 256) {\n            lengths[index++] = 9;\n        }\n        while (index < 280) {\n            lengths[index++] = 7;\n        }\n        while (index < 288) {\n            lengths[index++] = 8;\n        }\n        DecompressorHuffmanTree.m_LengthTree = new DecompressorHuffmanTree(lengths);\n        // Generate huffman tree for distances.\n        lengths = new Uint8Array(32);\n        index = 0;\n        while (index < 32) {\n            lengths[index++] = 5;\n        }\n        DecompressorHuffmanTree.m_DistanceTree = new DecompressorHuffmanTree(lengths);\n    };\n    /// <summary>\n    /// Prepares data for generating huffman tree.\n    /// </summary>\n    /// <param name=\"blCount\">Array of counts of each code length.</param>\n    /// <param name=\"nextCode\">Numerical values of the smallest code for each code length.</param>\n    /// <param name=\"lengths\">Array of code lengths.</param>\n    /// <param name=\"treeSize\">Calculated tree size.</param>\n    /// <returns>Code.</returns>\n    DecompressorHuffmanTree.prototype.prepareData = function (blCount, nextCode, lengths) {\n        var code = 0;\n        var treeSize = 512;\n        // Count number of codes for each code length.\n        for (var i = 0; i < lengths.length; i++) {\n            var length_1 = lengths[i];\n            if (length_1 > 0) {\n                blCount[length_1]++;\n            }\n        }\n        for (var bits = 1; bits <= DecompressorHuffmanTree.MAX_BITLEN; bits++) {\n            nextCode[bits] = code;\n            code += blCount[bits] << (16 - bits);\n            if (bits >= 10) {\n                var start = nextCode[bits] & 0x1ff80;\n                var end = code & 0x1ff80;\n                treeSize += (end - start) >> (16 - bits);\n            }\n        }\n        /*      if( code != 65536 )\n          throw new ZipException( \"Code lengths don't add up properly.\" );*/\n        return { 'code': code, 'treeSize': treeSize };\n    };\n    /// <summary>\n    /// Generates huffman tree.\n    /// </summary>\n    /// <param name=\"blCount\">Array of counts of each code length.</param>\n    /// <param name=\"nextCode\">Numerical values of the smallest code for each code length.</param>\n    /// <param name=\"code\">Precalculated code.</param>\n    /// <param name=\"lengths\">Array of code lengths.</param>\n    /// <param name=\"treeSize\">Calculated size of the tree.</param>\n    /// <returns>Generated tree.</returns>\n    DecompressorHuffmanTree.prototype.treeFromData = function (blCount, nextCode, lengths, code, treeSize) {\n        var tree = new Int16Array(treeSize);\n        var pointer = 512;\n        var increment = 1 << 7;\n        for (var bits = DecompressorHuffmanTree.MAX_BITLEN; bits >= 10; bits--) {\n            var end = code & 0x1ff80;\n            code -= blCount[bits] << (16 - bits);\n            var start = code & 0x1ff80;\n            for (var i = start; i < end; i += increment) {\n                tree[_index__WEBPACK_IMPORTED_MODULE_0__.Utils.bitReverse(i)] = _index__WEBPACK_IMPORTED_MODULE_0__.Utils.bitConverterInt32ToInt16((-pointer << 4) | bits);\n                pointer += 1 << (bits - 9);\n            }\n        }\n        for (var i = 0; i < lengths.length; i++) {\n            var bits = lengths[i];\n            if (bits == 0) {\n                continue;\n            }\n            code = nextCode[bits];\n            var revcode = _index__WEBPACK_IMPORTED_MODULE_0__.Utils.bitReverse(code);\n            if (bits <= 9) {\n                do {\n                    tree[revcode] = _index__WEBPACK_IMPORTED_MODULE_0__.Utils.bitConverterInt32ToInt16((i << 4) | bits);\n                    revcode += 1 << bits;\n                } while (revcode < 512);\n            }\n            else {\n                var subTree = tree[revcode & 511];\n                var treeLen = 1 << (subTree & 15);\n                subTree = -(subTree >> 4);\n                do {\n                    tree[subTree | (revcode >> 9)] = _index__WEBPACK_IMPORTED_MODULE_0__.Utils.bitConverterInt32ToInt16((i << 4) | bits);\n                    revcode += 1 << bits;\n                } while (revcode < treeLen);\n            }\n            nextCode[bits] = code + (1 << (16 - bits));\n        }\n        return tree;\n    };\n    /// <summary>\n    /// Builds huffman tree from array of code lengths.\n    /// </summary>\n    /// <param name=\"lengths\">Array of code lengths.</param>\n    DecompressorHuffmanTree.prototype.buildTree = function (lengths) {\n        // Count of codes for each code length.\n        var blCount = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        // Numerical value of the smallest code for each code length.\n        var nextCode = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        var prepareData = this.prepareData(blCount, nextCode, lengths);\n        this.m_Tree = this.treeFromData(blCount, nextCode, lengths, prepareData.code, prepareData.treeSize);\n    };\n    /// <summary>\n    /// Reads and decompresses one symbol.\n    /// </summary>\n    /// <param name=\"input\"></param>\n    /// <returns></returns>\n    DecompressorHuffmanTree.prototype.unpackSymbol = function (input) {\n        var lookahead;\n        var symbol;\n        if ((lookahead = input.peekBits(9)) >= 0) {\n            if ((symbol = this.m_Tree[lookahead]) >= 0) {\n                input.skipBits((symbol & 15));\n                return symbol >> 4;\n            }\n            var subtree = -(symbol >> 4);\n            var bitlen = symbol & 15;\n            if ((lookahead = input.peekBits(bitlen)) >= 0) {\n                symbol = this.m_Tree[subtree | (lookahead >> 9)];\n                input.skipBits((symbol & 15));\n                return symbol >> 4;\n            }\n            else {\n                var bits = input.availableBits;\n                lookahead = input.peekBits(bits);\n                symbol = this.m_Tree[subtree | (lookahead >> 9)];\n                if ((symbol & 15) <= bits) {\n                    input.skipBits((symbol & 15));\n                    return symbol >> 4;\n                }\n                else {\n                    return -1;\n                }\n            }\n        }\n        else {\n            var bits = input.availableBits;\n            lookahead = input.peekBits(bits);\n            symbol = this.m_Tree[lookahead];\n            if (symbol >= 0 && (symbol & 15) <= bits) {\n                input.skipBits((symbol & 15));\n                return symbol >> 4;\n            }\n            else {\n                return -1;\n            }\n        }\n    };\n    Object.defineProperty(DecompressorHuffmanTree, \"lengthTree\", {\n        /// <summary>\n        /// GET huffman tree for encoding and decoding lengths.\n        /// </summary>\n        get: function () {\n            return this.m_LengthTree;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DecompressorHuffmanTree, \"distanceTree\", {\n        /// <summary>\n        /// GET huffman tree for encoding and decoding distances.\n        /// </summary>\n        get: function () {\n            return this.m_DistanceTree;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /// <summary>\n    /// Maximum count of bits.\n    /// </summary>\n    DecompressorHuffmanTree.MAX_BITLEN = 15;\n    return DecompressorHuffmanTree;\n}());\n\n/* eslint-enable */ \n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-compression/src/decompressor-huffman-tree.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-compression/src/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-compression/src/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChecksumCalculator: () => (/* reexport safe */ _compression_writer__WEBPACK_IMPORTED_MODULE_1__.ChecksumCalculator),\n/* harmony export */   CompressedStreamReader: () => (/* reexport safe */ _compression_reader__WEBPACK_IMPORTED_MODULE_4__.CompressedStreamReader),\n/* harmony export */   CompressedStreamWriter: () => (/* reexport safe */ _compression_writer__WEBPACK_IMPORTED_MODULE_1__.CompressedStreamWriter),\n/* harmony export */   CompressorHuffmanTree: () => (/* reexport safe */ _compression_writer__WEBPACK_IMPORTED_MODULE_1__.CompressorHuffmanTree),\n/* harmony export */   DecompressorHuffmanTree: () => (/* reexport safe */ _decompressor_huffman_tree__WEBPACK_IMPORTED_MODULE_3__.DecompressorHuffmanTree),\n/* harmony export */   Stream: () => (/* reexport safe */ _compression_reader__WEBPACK_IMPORTED_MODULE_4__.Stream),\n/* harmony export */   Utils: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.Utils),\n/* harmony export */   ZipArchive: () => (/* reexport safe */ _zip_archive__WEBPACK_IMPORTED_MODULE_0__.ZipArchive),\n/* harmony export */   ZipArchiveItem: () => (/* reexport safe */ _zip_archive__WEBPACK_IMPORTED_MODULE_0__.ZipArchiveItem),\n/* harmony export */   ZipArchiveItemHelper: () => (/* reexport safe */ _zip_archive__WEBPACK_IMPORTED_MODULE_0__.ZipArchiveItemHelper)\n/* harmony export */ });\n/* harmony import */ var _zip_archive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./zip-archive */ \"./node_modules/@syncfusion/ej2-compression/src/zip-archive.js\");\n/* harmony import */ var _compression_writer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compression-writer */ \"./node_modules/@syncfusion/ej2-compression/src/compression-writer.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./node_modules/@syncfusion/ej2-compression/src/utils.js\");\n/* harmony import */ var _decompressor_huffman_tree__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./decompressor-huffman-tree */ \"./node_modules/@syncfusion/ej2-compression/src/decompressor-huffman-tree.js\");\n/* harmony import */ var _compression_reader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./compression-reader */ \"./node_modules/@syncfusion/ej2-compression/src/compression-reader.js\");\n/**\n * export ZipArchive class\n */\n\n\n\n\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-compression/src/index.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-compression/src/utils.js":
/*!***************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-compression/src/utils.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Utils: () => (/* binding */ Utils)\n/* harmony export */ });\n/* eslint-disable */\nvar Utils = /** @class */ (function () {\n    function Utils() {\n    }\n    Utils.bitReverse = function (value) {\n        return (Utils.reverseBits[value & 15] << 12\n            | Utils.reverseBits[(value >> 4) & 15] << 8\n            | Utils.reverseBits[(value >> 8) & 15] << 4\n            | Utils.reverseBits[value >> 12]);\n    };\n    Utils.bitConverterToInt32 = function (value, index) {\n        return value[index] | value[index + 1] << 8 | value[index + 2] << 16 | value[index + 3] << 24;\n    };\n    Utils.bitConverterToInt16 = function (value, index) {\n        return value[index] | value[index + 1] << 8;\n    };\n    Utils.bitConverterToUInt32 = function (value) {\n        var uint = new Uint32Array(1);\n        uint[0] = value;\n        return uint[0];\n    };\n    Utils.bitConverterToUInt16 = function (value, index) {\n        var uint = new Uint16Array(1);\n        uint[0] = (value[index] | value[index + 1] << 8);\n        return uint[0];\n    };\n    Utils.bitConverterUintToInt32 = function (value) {\n        var uint = new Int32Array(1);\n        uint[0] = value;\n        return uint[0];\n    };\n    Utils.bitConverterInt32ToUint = function (value) {\n        var uint = new Uint32Array(1);\n        uint[0] = value;\n        return uint[0];\n    };\n    Utils.bitConverterInt32ToInt16 = function (value) {\n        var uint = new Int16Array(1);\n        uint[0] = value;\n        return uint[0];\n    };\n    Utils.byteToString = function (value) {\n        var str = '';\n        for (var i = 0; i < value.length; i++) {\n            str += String.fromCharCode(value[i]);\n        }\n        return str;\n    };\n    Utils.byteIntToString = function (value) {\n        var str = '';\n        for (var i = 0; i < value.length; i++) {\n            str += String.fromCharCode(value[i]);\n        }\n        return str;\n    };\n    Utils.arrayCopy = function (source, sourceIndex, destination, destinationIndex, dataToCopy) {\n        var temp = new Uint8Array(source.buffer, sourceIndex);\n        var data = temp.subarray(0, dataToCopy);\n        destination.set(data, destinationIndex);\n    };\n    Utils.mergeArray = function (arrayOne, arrayTwo) {\n        var mergedArray = new Uint8Array(arrayOne.length + arrayTwo.length);\n        mergedArray.set(arrayOne);\n        mergedArray.set(arrayTwo, arrayOne.length);\n        return mergedArray;\n    };\n    /**\n     * @private\n     */\n    Utils.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var encode1;\n        var encode2;\n        var encode3;\n        var encode4;\n        var count = 0;\n        var resultIndex = 0;\n        /*let dataUrlPrefix: string = 'data:';*/\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        if (input.charAt(input.length - 2) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        if (totalLength % 1 !== 0) {\n            // totalLength is not an integer, the length does not match a valid\n            // base64 content. That can happen if:\n            // - the input is not a base64 content\n            // - the input is *almost* a base64 content, with a extra chars at the\n            // beginning or at the end\n            // - the input uses a base64 variant (base64url for example)\n            throw new Error('Invalid base64 input, bad content length.');\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (count < input.length) {\n            encode1 = keyStr.indexOf(input.charAt(count++));\n            encode2 = keyStr.indexOf(input.charAt(count++));\n            encode3 = keyStr.indexOf(input.charAt(count++));\n            encode4 = keyStr.indexOf(input.charAt(count++));\n            chr1 = (encode1 << 2) | (encode2 >> 4);\n            chr2 = ((encode2 & 15) << 4) | (encode3 >> 2);\n            chr3 = ((encode3 & 3) << 6) | encode4;\n            output[resultIndex++] = chr1;\n            if (encode3 !== 64) {\n                output[resultIndex++] = chr2;\n            }\n            if (encode4 !== 64) {\n                output[resultIndex++] = chr3;\n            }\n        }\n        return output;\n    };\n    Utils.reverseBits = [0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15];\n    Utils.huffCodeLengthOrders = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n    return Utils;\n}());\n\n/* eslint-enable */ \n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-compression/src/utils.js?");

/***/ })

}]);