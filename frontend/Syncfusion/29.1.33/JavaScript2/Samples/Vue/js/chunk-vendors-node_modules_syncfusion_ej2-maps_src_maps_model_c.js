"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-maps_src_maps_model_c"],{

/***/ "./node_modules/@syncfusion/ej2-maps/src/maps/model/constants.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-maps/src/maps/model/constants.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   animationComplete: () => (/* binding */ animationComplete),\n/* harmony export */   annotationRendering: () => (/* binding */ annotationRendering),\n/* harmony export */   beforePrint: () => (/* binding */ beforePrint),\n/* harmony export */   bubbleClick: () => (/* binding */ bubbleClick),\n/* harmony export */   bubbleMouseMove: () => (/* binding */ bubbleMouseMove),\n/* harmony export */   bubbleRendering: () => (/* binding */ bubbleRendering),\n/* harmony export */   click: () => (/* binding */ click),\n/* harmony export */   dataLabelRendering: () => (/* binding */ dataLabelRendering),\n/* harmony export */   doubleClick: () => (/* binding */ doubleClick),\n/* harmony export */   itemHighlight: () => (/* binding */ itemHighlight),\n/* harmony export */   itemSelection: () => (/* binding */ itemSelection),\n/* harmony export */   layerRendering: () => (/* binding */ layerRendering),\n/* harmony export */   legendRendering: () => (/* binding */ legendRendering),\n/* harmony export */   load: () => (/* binding */ load),\n/* harmony export */   loaded: () => (/* binding */ loaded),\n/* harmony export */   markerClick: () => (/* binding */ markerClick),\n/* harmony export */   markerClusterClick: () => (/* binding */ markerClusterClick),\n/* harmony export */   markerClusterMouseMove: () => (/* binding */ markerClusterMouseMove),\n/* harmony export */   markerClusterRendering: () => (/* binding */ markerClusterRendering),\n/* harmony export */   markerDragEnd: () => (/* binding */ markerDragEnd),\n/* harmony export */   markerDragStart: () => (/* binding */ markerDragStart),\n/* harmony export */   markerMouseMove: () => (/* binding */ markerMouseMove),\n/* harmony export */   markerRendering: () => (/* binding */ markerRendering),\n/* harmony export */   mouseMove: () => (/* binding */ mouseMove),\n/* harmony export */   mousedown: () => (/* binding */ mousedown),\n/* harmony export */   mousemove: () => (/* binding */ mousemove),\n/* harmony export */   mouseup: () => (/* binding */ mouseup),\n/* harmony export */   onclick: () => (/* binding */ onclick),\n/* harmony export */   pan: () => (/* binding */ pan),\n/* harmony export */   panComplete: () => (/* binding */ panComplete),\n/* harmony export */   resize: () => (/* binding */ resize),\n/* harmony export */   rightClick: () => (/* binding */ rightClick),\n/* harmony export */   shapeHighlight: () => (/* binding */ shapeHighlight),\n/* harmony export */   shapeRendering: () => (/* binding */ shapeRendering),\n/* harmony export */   shapeSelected: () => (/* binding */ shapeSelected),\n/* harmony export */   tooltipRender: () => (/* binding */ tooltipRender),\n/* harmony export */   zoomComplete: () => (/* binding */ zoomComplete),\n/* harmony export */   zoomIn: () => (/* binding */ zoomIn),\n/* harmony export */   zoomOut: () => (/* binding */ zoomOut)\n/* harmony export */ });\n/**\n * Maps constants doc\n */\n/**\n * Specifies the maps load event name.\n *\n * @private\n */\nvar load = 'load';\n/**\n * Specifies the maps loaded event name.\n *\n * @private\n */\nvar loaded = 'loaded';\n/**\n * Specifies the maps click event name.\n *\n * @private\n */\nvar click = 'click';\n/**\n * Specifies the maps onclick event name.\n *\n * @private\n */\nvar onclick = 'onclick';\n/**\n * Specifies the maps right click event name.\n *\n * @private\n */\nvar rightClick = 'rightClick';\n/**\n * Specifies the maps double click event name.\n *\n * @private\n */\nvar doubleClick = 'doubleClick';\n/**\n * Specifies the maps resize event name.\n *\n * @private\n */\nvar resize = 'resize';\n/**\n * Specifies the maps tooltip event name.\n *\n */\nvar tooltipRender = 'tooltipRender';\n/**\n * Specifies the map shape selected event.\n *\n */\nvar shapeSelected = 'shapeSelected';\n/**\n * Specifies the maps shape highlight event.\n *\n */\nvar shapeHighlight = 'shapeHighlight';\n/**\n * Specifies the maps mouse move event name.\n *\n * @private\n */\nvar mousemove = 'mousemove';\n/**\n * Specifies the maps mouse up event name.\n *\n * @private\n */\nvar mouseup = 'mouseup';\n/**\n * Specifies the maps mouse down event name.\n *\n * @private\n */\nvar mousedown = 'mousedown';\n/**\n * Specifies the maps layer rendering event name.\n *\n * @private\n */\nvar layerRendering = 'layerRendering';\n/**\n * Specifies the maps shape rendering event name.\n *\n * @private\n */\nvar shapeRendering = 'shapeRendering';\n/**\n * Specifies the maps marker rendering event name.\n *\n * @private\n */\nvar markerRendering = 'markerRendering';\n/**\n * Specifies the maps cluster rendering event name.\n *\n * @private\n */\nvar markerClusterRendering = 'markerClusterRendering';\n/**\n * Specifies the maps marker click event name.\n *\n * @private\n */\nvar markerClick = 'markerClick';\n/**\n * Specifies the maps marker drag start event name.\n *\n * @private\n */\nvar markerDragStart = 'markerDragStart';\n/**\n * Specifies the maps marker drag end event name.\n *\n * @private\n */\nvar markerDragEnd = 'markerDragEnd';\n/**\n * Specifies the maps cluster click event name.\n *\n * @private\n */\nvar markerClusterClick = 'markerClusterClick';\n/**\n * Specifies the maps marker mouse move event name.\n *\n * @private\n */\nvar markerMouseMove = 'markerMouseMove';\n/**\n * Specifies the maps mouse move event name.\n *\n * @private\n */\nvar mouseMove = 'mouseMove';\n/**\n * Specifies the maps cluster mouse move event name.\n *\n * @private\n */\nvar markerClusterMouseMove = 'markerClusterMouseMove';\n/**\n * Specifies the maps data label rendering event name.\n *\n * @private\n */\nvar dataLabelRendering = 'dataLabelRendering';\n/**\n * Specifies the maps bubbleRendering event name.\n *\n * @private\n */\nvar bubbleRendering = 'bubbleRendering';\n/**\n * Specifies the maps bubble click event name.\n *\n * @private\n */\nvar bubbleClick = 'bubbleClick';\n/**\n * Specifies the maps bubble mouse move event name.\n *\n * @private\n */\nvar bubbleMouseMove = 'bubbleMouseMove';\n/**\n * Specifies the maps animation complete event name.\n *\n * @private\n */\nvar animationComplete = 'animationComplete';\n/**\n * Specifies the maps legend rendering event name.\n *\n * @private\n */\nvar legendRendering = 'legendRendering';\n/**\n * Specifies the maps annotation rendering event name.\n *\n * @private\n */\nvar annotationRendering = 'annotationRendering';\n/**\n * Specifies the maps item selection event name.\n *\n * @private\n */\nvar itemSelection = 'itemSelection';\n/**\n * Specifies the maps pan complete event name.\n *\n * @private\n */\nvar panComplete = 'panComplete';\n/**\n * Specifies the maps zoom complete event name.\n *\n * @private\n */\nvar zoomComplete = 'zoomComplete';\n/**\n * Specifies the maps item highlight event name.\n *\n */\nvar itemHighlight = 'itemHighlight';\n/**\n * Specifies the maps before print event name.\n */\nvar beforePrint = 'beforePrint';\n/**\n * Specifies the maps zoom in event name.\n */\nvar zoomIn = 'zoomIn';\n/**\n * Specifies the maps zoom out event name.\n */\nvar zoomOut = 'zoomOut';\n/**\n * Specifies the maps pan event name.\n */\nvar pan = 'pan';\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-maps/src/maps/model/constants.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-maps/src/maps/model/export-image.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-maps/src/maps/model/export-image.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageExport: () => (/* binding */ ImageExport)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _utils_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/helper */ \"./node_modules/@syncfusion/ej2-maps/src/maps/utils/helper.js\");\n\n\n/**\n * This module enables the export to Image functionality in maps.\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {Maps} control - Specifies the instance of the map\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    function ImageExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {Maps} maps - Specifies the Maps instance.\n     * @param {ExportType} type - Specifies the type of the image file for exporting.\n     * @param {string} fileName - Specifies the file name of the image file for exporting.\n     * @param {boolean} allowDownload - Specifies whether to download image as a file or not.\n     * @returns {Promise<string>} - Specifies the base64 string of the exported image which is returned when the allowDownload is set to false.\n     * @private\n     */\n    ImageExport.prototype.export = function (maps, type, fileName, allowDownload) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n        var promise = new Promise(function (resolve, reject) {\n            var imageCanvasElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': maps.availableSize.width.toString(),\n                    'height': maps.availableSize.height.toString()\n                }\n            });\n            var isDownload = !(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var svgParent = document.getElementById(maps.element.id + '_Tile_SVG_Parent');\n            var svgDataElement;\n            var tileSvg;\n            var svgObject = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElementByID)(maps.element.id + '_svg').cloneNode(true);\n            var backgroundElement = svgObject.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((maps.theme === 'Tailwind' || maps.theme === 'Tailwind3' || maps.theme === 'Bootstrap5' || maps.theme === 'Fluent' || maps.theme === 'Material3' || maps.theme === 'Fluent2')\n                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                svgObject.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            else if ((maps.theme === 'TailwindDark' || maps.theme === 'Tailwind3Dark' || maps.theme === 'Bootstrap5Dark' || maps.theme === 'FluentDark' || maps.theme === 'Material3Dark' ||\n                maps.theme === 'Fluent2Dark' || maps.theme === 'Fluent2HighContrast')\n                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                svgObject.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n            }\n            if (!maps.isTileMap) {\n                svgDataElement = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                    svgObject.outerHTML + '</svg>';\n            }\n            else {\n                tileSvg = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElementByID)(maps.element.id + '_Tile_SVG').cloneNode(true);\n                svgDataElement = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                    svgObject.outerHTML + tileSvg.outerHTML + '</svg>';\n            }\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgDataElement] :\n                [(new XMLSerializer()).serializeToString(svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    (0,_utils_helper__WEBPACK_IMPORTED_MODULE_1__.triggerDownload)(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var ctxt_1 = imageCanvasElement.getContext('2d');\n                if (!maps.isTileMap) {\n                    image_1.onload = (function () {\n                        ctxt_1.drawImage(image_1, 0, 0);\n                        window.URL.revokeObjectURL(url);\n                        if (allowDownload) {\n                            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_1__.triggerDownload)(fileName, type, imageCanvasElement.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                        }\n                        else {\n                            if (type === 'PNG') {\n                                resolve(imageCanvasElement.toDataURL('image/png'));\n                            }\n                            else if (type === 'JPEG') {\n                                resolve(imageCanvasElement.toDataURL('image/jpeg'));\n                            }\n                        }\n                    });\n                    image_1.src = url;\n                }\n                else {\n                    maps.isExportInitialTileMap = true;\n                    var svgParentElement = document.getElementById(maps.element.id + '_MapAreaBorder');\n                    var top_1 = parseFloat(svgParentElement.getAttribute('y'));\n                    var left_1 = parseFloat(svgParentElement.getAttribute('x'));\n                    var imgxHttp = new XMLHttpRequest();\n                    var imgTileLength_1 = maps.mapLayerPanel.tiles.length;\n                    var _loop_1 = function (i) {\n                        var tile = document.getElementById(maps.element.id + '_tile_' + (i - 1));\n                        var exportTileImg = new Image();\n                        exportTileImg.crossOrigin = 'Anonymous';\n                        var background = maps.background ? maps.background : ((maps.theme === 'Tailwind' || maps.theme === 'Tailwind3' || maps.theme === 'Bootstrap5' || maps.theme === 'Fluent' || maps.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) ? '#ffffff' :\n                            (maps.theme === 'TailwindDark' || maps.theme === 'Tailwind3Dark' || maps.theme === 'Bootstrap5Dark' || maps.theme === 'FluentDark' || maps.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent') ? '#000000' : '#ffffff';\n                        ctxt_1.fillStyle = background;\n                        ctxt_1.fillRect(0, 0, maps.availableSize.width, maps.availableSize.height);\n                        ctxt_1.font = maps.titleSettings.textStyle.size + ' Arial';\n                        var titleElement = document.getElementById(maps.element.id + '_Map_title');\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(titleElement)) {\n                            ctxt_1.fillStyle = titleElement.getAttribute('fill');\n                            ctxt_1.fillText(maps.titleSettings.text, parseFloat(titleElement.getAttribute('x')), parseFloat(titleElement.getAttribute('y')));\n                        }\n                        exportTileImg.onload = (function () {\n                            if (i === 0 || i === imgTileLength_1 + 1) {\n                                if (i === 0) {\n                                    ctxt_1.setTransform(1, 0, 0, 1, 0, 0);\n                                    ctxt_1.rect(0, top_1, parseFloat(svgParent.style.width), parseFloat(svgParent.style.height));\n                                    ctxt_1.clip();\n                                }\n                                else {\n                                    ctxt_1.setTransform(1, 0, 0, 1, left_1, top_1);\n                                }\n                            }\n                            else {\n                                ctxt_1.setTransform(1, 0, 0, 1, parseFloat(tile.style.left) + left_1, parseFloat(tile.style.top) +\n                                    top_1);\n                            }\n                            ctxt_1.drawImage(exportTileImg, 0, 0);\n                            if (i === imgTileLength_1 + 1) {\n                                localStorage.setItem('local-canvasImage', imageCanvasElement.toDataURL('image/png'));\n                                var localBase64 = localStorage.getItem('local-canvasImage');\n                                if (allowDownload) {\n                                    (0,_utils_helper__WEBPACK_IMPORTED_MODULE_1__.triggerDownload)(fileName, type, localBase64, isDownload);\n                                    localStorage.removeItem('local-canvasImage');\n                                    maps.isExportInitialTileMap = false;\n                                }\n                                else {\n                                    maps.isExportInitialTileMap = false;\n                                    if (type === 'PNG') {\n                                        resolve(localBase64);\n                                    }\n                                    else if (type === 'JPEG') {\n                                        resolve(imageCanvasElement.toDataURL('image/jpeg'));\n                                    }\n                                }\n                            }\n                        });\n                        if (i === 0 || i === imgTileLength_1 + 1) {\n                            if (i === 0) {\n                                exportTileImg.src = url;\n                            }\n                            else {\n                                setTimeout(function () {\n                                    exportTileImg.src = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(tileSvg)], { type: 'image/svg+xml' }));\n                                }, 300);\n                            }\n                        }\n                        else {\n                            imgxHttp.open('GET', tile.children[0].getAttribute('src'), true);\n                            imgxHttp.send();\n                            exportTileImg.src = tile.children[0].getAttribute('src');\n                        }\n                    };\n                    for (var i = 0; i <= imgTileLength_1 + 1; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n        });\n        return promise;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    ImageExport.prototype.getModuleName = function () {\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ImageExport.prototype.destroy = function () { };\n    return ImageExport;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-maps/src/maps/model/export-image.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-maps/src/maps/model/export-pdf.js":
/*!************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-maps/src/maps/model/export-pdf.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PdfExport: () => (/* binding */ PdfExport)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-pdf-export */ \"./node_modules/@syncfusion/ej2-pdf-export/index.js\");\n\n\n/**\n * This module enables the export to PDF functionality in maps.\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    function PdfExport() {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {Maps} maps - Specifies the Maps instance.\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName - Specifies the name of the PDF document.\n     * @param {boolean} allowDownload - Specifies whether to download the document or not.\n     * @param {PdfPageOrientation} orientation - Specifies the orientation of the PDF document to export the maps.\n     * @returns {Promise<string>} - Returns \"null\" value when the allowDownload is set to false.\n     * @private\n     */\n    PdfExport.prototype.export = function (maps, type, fileName, allowDownload, orientation) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve) {\n            if (maps.isTileMap) {\n                maps.isExportInitialTileMap = true;\n            }\n            var canvasElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': maps.availableSize.width.toString(),\n                    'height': maps.availableSize.height.toString()\n                }\n            });\n            orientation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(orientation) ? _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_1__.PdfPageOrientation.Landscape : orientation;\n            var svgParent = document.getElementById(maps.element.id + '_Tile_SVG_Parent');\n            var svgData;\n            var exportElement = maps.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((maps.theme === 'Tailwind' || maps.theme === 'Tailwind3' || maps.theme === 'Bootstrap5' || maps.theme === 'Fluent' || maps.theme === 'Material3' ||\n                maps.theme === 'Fluent2')\n                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            else if ((maps.theme === 'TailwindDark' || maps.theme === 'Tailwind3Dark' || maps.theme === 'Bootstrap5Dark' || maps.theme === 'FluentDark' || maps.theme === 'Material3Dark' ||\n                maps.theme === 'Fluent2Dark' || maps.theme === 'Fluent2HighContrast')\n                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var pdfDocument = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_1__.PdfDocument();\n            var image = new Image();\n            var ctx = canvasElement.getContext('2d');\n            if (!maps.isTileMap) {\n                image.onload = (function () {\n                    ctx.drawImage(image, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (type === 'PDF') {\n                        var imageString = canvasElement.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                        pdfDocument.pageSettings.orientation = orientation;\n                        imageString = imageString.slice(imageString.indexOf(',') + 1);\n                        pdfDocument.pages.add().graphics.drawImage(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_1__.PdfBitmap(imageString), 0, 0, (maps.availableSize.width - 60), maps.availableSize.height);\n                        if (allowDownload) {\n                            pdfDocument.save(fileName + '.pdf');\n                            pdfDocument.destroy();\n                        }\n                        else {\n                            resolve(null);\n                        }\n                    }\n                });\n                image.src = url;\n            }\n            else {\n                var svgParentElement = document.getElementById(maps.element.id + '_MapAreaBorder');\n                var top_1 = parseFloat(svgParentElement.getAttribute('y'));\n                var left_1 = parseFloat(svgParentElement.getAttribute('x'));\n                var xHttp = new XMLHttpRequest();\n                var tileLength_1 = maps.mapLayerPanel.tiles.length;\n                var _loop_1 = function (i) {\n                    var tile = document.getElementById(maps.element.id + '_tile_' + (i - 1));\n                    var tileImg = new Image();\n                    tileImg.crossOrigin = 'Anonymous';\n                    var background = maps.background ? maps.background : ((maps.theme === 'Tailwind' || maps.theme === 'Tailwind3' || maps.theme === 'Bootstrap5' || maps.theme === 'Fluent' || maps.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) ? '#ffffff' :\n                        (maps.theme === 'TailwindDark' || maps.theme === 'Tailwind3Dark' || maps.theme === 'Bootstrap5Dark' || maps.theme === 'FluentDark' || maps.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent') ? '#000000' : '#ffffff';\n                    ctx.fillStyle = background;\n                    ctx.fillRect(0, 0, maps.availableSize.width, maps.availableSize.height);\n                    ctx.font = maps.titleSettings.textStyle.size + ' Arial';\n                    var titleElement = document.getElementById(maps.element.id + '_Map_title');\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(titleElement)) {\n                        ctx.fillStyle = titleElement.getAttribute('fill');\n                        ctx.fillText(maps.titleSettings.text, parseFloat(titleElement.getAttribute('x')), parseFloat(titleElement.getAttribute('y')));\n                    }\n                    tileImg.onload = (function () {\n                        if (i === 0 || i === tileLength_1 + 1) {\n                            if (i === 0) {\n                                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                                ctx.rect(0, top_1, parseFloat(svgParent.style.width), parseFloat(svgParent.style.height));\n                                ctx.clip();\n                            }\n                            else {\n                                ctx.setTransform(1, 0, 0, 1, left_1, top_1);\n                            }\n                        }\n                        else {\n                            ctx.setTransform(1, 0, 0, 1, parseFloat(tile.style.left) + left_1, parseFloat(tile.style.top) + top_1);\n                        }\n                        ctx.drawImage(tileImg, 0, 0);\n                        if (i === tileLength_1 + 1) {\n                            if (type === 'PDF') {\n                                localStorage.setItem('saved-image-example', canvasElement.toDataURL('image/jpeg'));\n                                var x = localStorage.getItem('saved-image-example');\n                                pdfDocument.pageSettings.orientation = orientation;\n                                x = x.slice(x.indexOf(',') + 1);\n                                pdfDocument.pages.add().graphics.drawImage(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_1__.PdfBitmap(x), 0, 0, (maps.availableSize.width - 60), maps.availableSize.height);\n                                maps.isExportInitialTileMap = false;\n                                if (allowDownload) {\n                                    pdfDocument.save(fileName + '.pdf');\n                                    pdfDocument.destroy();\n                                }\n                                else {\n                                    resolve(null);\n                                }\n                            }\n                        }\n                    });\n                    if (i === 0 || i === tileLength_1 + 1) {\n                        if (i === 0) {\n                            tileImg.src = url;\n                        }\n                        else {\n                            setTimeout(function () {\n                                var tileSvg = document.getElementById(maps.element.id + '_Tile_SVG');\n                                tileImg.src = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(tileSvg)], { type: 'image/svg+xml' }));\n                            }, 300);\n                        }\n                    }\n                    else {\n                        xHttp.open('GET', tile.children[0].getAttribute('src'), true);\n                        xHttp.send();\n                        tileImg.src = tile.children[0].getAttribute('src');\n                    }\n                };\n                for (var i = 0; i <= tileLength_1 + 1; i++) {\n                    _loop_1(i);\n                }\n            }\n        });\n        return promise;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    PdfExport.prototype.destroy = function () { };\n    return PdfExport;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-maps/src/maps/model/export-pdf.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-maps/src/maps/model/print.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-maps/src/maps/model/print.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Print: () => (/* binding */ Print)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _utils_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/helper */ \"./node_modules/@syncfusion/ej2-maps/src/maps/utils/helper.js\");\n/* harmony import */ var _model_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../model/constants */ \"./node_modules/@syncfusion/ej2-maps/src/maps/model/constants.js\");\n\n\n\n/**\n * This module enables the print functionality in maps.\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Maps.\n     *\n     * @param {Maps} control - Specifies the instance of the Maps\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    function Print(control) {\n    }\n    /**\n     * To print the Maps.\n     *\n     * @param {Maps} maps -Specifies the Maps instance.\n     * @param {string[] | string | Element} elements - Specifies the element of the Maps\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (maps, elements) {\n        var printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        printWindow.moveTo(0, 0);\n        printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(maps, elements), name: _model_constants__WEBPACK_IMPORTED_MODULE_2__.beforePrint\n        };\n        //eslint-disable-next-line @typescript-eslint/no-unused-vars\n        maps.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.print)(argsData.htmlContent, printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps.\n     *\n     * @param {Maps} maps -Specifies the Maps instance.\n     * @param {string[] | string | Element} elements - Specifies the html element\n     * @returns {Element} - Returns the div element\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (maps, elements) {\n        var div = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n        var divElement = maps.element.cloneNode(true);\n        //eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var backgroundElement = (!maps.isTileMap ? divElement.getElementsByTagName('svg')[0] : divElement.getElementsByTagName('svg')[1]);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(backgroundElement)) {\n            backgroundElement = backgroundElement.childNodes[0];\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(backgroundElement)) {\n                var backgroundColor = backgroundElement.getAttribute('fill');\n                if ((maps.theme === 'Tailwind' || maps.theme === 'Tailwind3' || maps.theme === 'Bootstrap5' || maps.theme === 'Fluent' || maps.theme === 'Material3' ||\n                    maps.theme === 'Fluent2')\n                    && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    backgroundElement.setAttribute('fill', 'rgba(255,255,255, 1)');\n                }\n                else if ((maps.theme === 'TailwindDark' || maps.theme === 'Tailwind3Dark' || maps.theme === 'Bootstrap5Dark' || maps.theme === 'FluentDark' || maps.theme === 'Material3Dark' ||\n                    maps.theme === 'Fluent2Dark' || maps.theme === 'Fluent2HighContrast')\n                    && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    backgroundElement.setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                }\n            }\n        }\n        if (maps.isTileMap) {\n            for (var i = 0; i < divElement.childElementCount; i++) {\n                if (divElement.children[i].id === maps.element.id + '_tile_parent') {\n                    divElement.children[i].style.removeProperty('height');\n                    divElement.children[i].style.removeProperty('width');\n                    divElement.children[i].style.removeProperty('top');\n                    divElement.children[i].style.removeProperty('left');\n                    divElement.children[i].style.removeProperty('right');\n                    divElement.children[i].style.removeProperty('overflow');\n                    var svgElement = document.getElementById(maps.element.id + '_Tile_SVG_Parent');\n                    divElement.children[i].children[0].style.overflow = 'hidden';\n                    divElement.children[i].children[0].style.position = 'absolute';\n                    divElement.children[i].children[0].style.height = svgElement.style.height;\n                    divElement.children[i].children[0].style.width = svgElement.style.width;\n                    divElement.children[i].children[0].style.left = svgElement.style.left;\n                    divElement.children[i].children[0].style.top = svgElement.style.top;\n                    break;\n                }\n            }\n        }\n        if (elements) {\n            if (elements instanceof Array) {\n                Array.prototype.forEach.call(elements, function (value) {\n                    div.appendChild((0,_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild((0,_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(divElement);\n        }\n        return div;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} Returns the module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'Print';\n    };\n    /**\n     * To destroy the print.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Print.prototype.destroy = function () { };\n    return Print;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-maps/src/maps/model/print.js?");

/***/ })

}]);