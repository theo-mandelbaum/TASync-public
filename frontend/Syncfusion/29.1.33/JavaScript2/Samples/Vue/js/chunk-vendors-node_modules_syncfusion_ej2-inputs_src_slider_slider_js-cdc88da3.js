"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-inputs_src_slider_slider_js-cdc88da3"],{

/***/ "./node_modules/@syncfusion/ej2-inputs/src/slider/slider.js":
/*!******************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-inputs/src/slider/slider.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ColorRangeData: () => (/* binding */ ColorRangeData),\n/* harmony export */   LimitData: () => (/* binding */ LimitData),\n/* harmony export */   Slider: () => (/* binding */ Slider),\n/* harmony export */   TicksData: () => (/* binding */ TicksData),\n/* harmony export */   TooltipData: () => (/* binding */ TooltipData)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n/**\n * Configures the ticks data of the Slider.\n */\nvar TicksData = /** @class */ (function (_super) {\n    __extends(TicksData, _super);\n    function TicksData() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('None')\n    ], TicksData.prototype, \"placement\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(10)\n    ], TicksData.prototype, \"largeStep\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1)\n    ], TicksData.prototype, \"smallStep\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], TicksData.prototype, \"showSmallTicks\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], TicksData.prototype, \"format\", void 0);\n    return TicksData;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * It illustrates the color track data in slider.\n * {% codeBlock src='slider/colorrange/index.md' %}{% endcodeBlock %}\n */\nvar ColorRangeData = /** @class */ (function (_super) {\n    __extends(ColorRangeData, _super);\n    function ColorRangeData() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ColorRangeData.prototype, \"color\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ColorRangeData.prototype, \"start\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ColorRangeData.prototype, \"end\", void 0);\n    return ColorRangeData;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * It illustrates the limit data in slider.\n * {% codeBlock src='slider/limits/index.md' %}{% endcodeBlock %}\n */\nvar LimitData = /** @class */ (function (_super) {\n    __extends(LimitData, _super);\n    function LimitData() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], LimitData.prototype, \"enabled\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], LimitData.prototype, \"minStart\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], LimitData.prototype, \"minEnd\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], LimitData.prototype, \"maxStart\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], LimitData.prototype, \"maxEnd\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], LimitData.prototype, \"startHandleFixed\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], LimitData.prototype, \"endHandleFixed\", void 0);\n    return LimitData;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * It illustrates the tooltip data in slider.\n */\nvar TooltipData = /** @class */ (function (_super) {\n    __extends(TooltipData, _super);\n    function TooltipData() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], TooltipData.prototype, \"cssClass\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Before')\n    ], TooltipData.prototype, \"placement\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Focus')\n    ], TooltipData.prototype, \"showOn\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], TooltipData.prototype, \"isVisible\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], TooltipData.prototype, \"format\", void 0);\n    return TooltipData;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\nvar bootstrapTooltipOffset = 6;\nvar bootstrap4TooltipOffset = 3;\nvar tolerance = 1e-10;\nvar classNames = {\n    root: 'e-slider',\n    rtl: 'e-rtl',\n    sliderHiddenInput: 'e-slider-input',\n    controlWrapper: 'e-control-wrapper',\n    sliderHandle: 'e-handle',\n    rangeBar: 'e-range',\n    sliderButton: 'e-slider-button',\n    firstButton: 'e-first-button',\n    secondButton: 'e-second-button',\n    scale: 'e-scale',\n    tick: 'e-tick',\n    large: 'e-large',\n    tickValue: 'e-tick-value',\n    sliderTooltip: 'e-slider-tooltip',\n    sliderHover: 'e-slider-hover',\n    sliderFirstHandle: 'e-handle-first',\n    sliderSecondHandle: 'e-handle-second',\n    sliderDisabled: 'e-disabled',\n    sliderContainer: 'e-slider-container',\n    horizontalTooltipBefore: 'e-slider-horizontal-before',\n    horizontalTooltipAfter: 'e-slider-horizontal-after',\n    verticalTooltipBefore: 'e-slider-vertical-before',\n    verticalTooltipAfter: 'e-slider-vertical-after',\n    materialTooltip: 'e-material-tooltip',\n    materialTooltipOpen: 'e-material-tooltip-open',\n    materialTooltipActive: 'e-tooltip-active',\n    materialSlider: 'e-material-slider',\n    sliderTrack: 'e-slider-track',\n    sliderHorizantalColor: 'e-slider-horizantal-color',\n    sliderVerticalColor: 'e-slider-vertical-color',\n    sliderHandleFocused: 'e-handle-focused',\n    verticalSlider: 'e-vertical',\n    horizontalSlider: 'e-horizontal',\n    sliderHandleStart: 'e-handle-start',\n    sliderTooltipStart: 'e-material-tooltip-start',\n    sliderTabHandle: 'e-tab-handle',\n    sliderButtonIcon: 'e-button-icon',\n    sliderSmallSize: 'e-small-size',\n    sliderTickPosition: 'e-tick-pos',\n    sliderFirstTick: 'e-first-tick',\n    sliderLastTick: 'e-last-tick',\n    sliderButtonClass: 'e-slider-btn',\n    sliderTooltipWrapper: 'e-tooltip-wrap',\n    sliderTabTrack: 'e-tab-track',\n    sliderTabRange: 'e-tab-range',\n    sliderActiveHandle: 'e-handle-active',\n    sliderMaterialHandle: 'e-material-handle',\n    sliderMaterialRange: 'e-material-range',\n    sliderMaterialDefault: 'e-material-default',\n    materialTooltipShow: 'e-material-tooltip-show',\n    materialTooltipHide: 'e-material-tooltip-hide',\n    readonly: 'e-read-only',\n    limits: 'e-limits',\n    limitBarDefault: 'e-limit-bar',\n    limitBarFirst: 'e-limit-first',\n    limitBarSecond: 'e-limit-second',\n    dragHorizontal: 'e-drag-horizontal',\n    dragVertical: 'e-drag-vertical'\n};\n/**\n * The Slider component allows the user to select a value or range\n * of values in-between a min and max range, by dragging the handle over the slider bar.\n * ```html\n * <div id='slider'></div>\n * ```\n * ```typescript\n * <script>\n *   var sliderObj = new Slider({ value: 10 });\n *   sliderObj.appendTo('#slider');\n * </script>\n * ```\n */\nvar Slider = /** @class */ (function (_super) {\n    __extends(Slider, _super);\n    function Slider(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.horDir = 'left';\n        _this.verDir = 'bottom';\n        _this.transition = {\n            handle: 'left .4s cubic-bezier(.25, .8, .25, 1), right .4s cubic-bezier(.25, .8, .25, 1), ' +\n                'top .4s cubic-bezier(.25, .8, .25, 1) , bottom .4s cubic-bezier(.25, .8, .25, 1)',\n            rangeBar: 'all .4s cubic-bezier(.25, .8, .25, 1)'\n        };\n        _this.transitionOnMaterialTooltip = {\n            handle: 'left 1ms ease-out, right 1ms ease-out, bottom 1ms ease-out, top 1ms ease-out',\n            rangeBar: 'left 1ms ease-out, right 1ms ease-out, bottom 1ms ease-out, width 1ms ease-out, height 1ms ease-out'\n        };\n        _this.scaleTransform = 'transform .4s cubic-bezier(.25, .8, .25, 1)';\n        _this.customAriaText = null;\n        _this.drag = true;\n        _this.isDragComplete = false;\n        _this.initialTooltip = true;\n        return _this;\n    }\n    Slider.prototype.preRender = function () {\n        var localeText = { incrementTitle: 'Increase', decrementTitle: 'Decrease' };\n        this.l10n = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('slider', localeText, this.locale);\n        this.isElementFocused = false;\n        this.tickElementCollection = [];\n        this.tooltipFormatInfo = {};\n        this.ticksFormatInfo = {};\n        this.initCultureInfo();\n        this.initCultureFunc();\n        this.formChecker();\n    };\n    Slider.prototype.formChecker = function () {\n        var formElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.element, 'form');\n        if (formElement) {\n            this.isForm = true;\n            // this condition needs to be checked, if the slider is going to be refreshed by `refresh()`\n            // then we need to revert the slider `value` back to `formResetValue` to preserve the initial value\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formResetValue)) {\n                this.setProperties({ 'value': this.formResetValue }, true);\n            }\n            this.formResetValue = this.value;\n            if (this.type === 'Range' &&\n                ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formResetValue) || typeof (this.formResetValue) !== 'object')) {\n                this.formResetValue = [parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.min)), parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.max))];\n            }\n            else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formResetValue)) {\n                this.formResetValue = parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.min));\n            }\n            this.formElement = formElement;\n        }\n        else {\n            this.isForm = false;\n        }\n    };\n    Slider.prototype.initCultureFunc = function () {\n        this.internationalization = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization(this.locale);\n    };\n    Slider.prototype.initCultureInfo = function () {\n        this.tooltipFormatInfo.format = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.tooltip.format)) ? this.tooltip.format : null;\n        this.ticksFormatInfo.format = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.ticks.format)) ? this.ticks.format : null;\n    };\n    Slider.prototype.formatString = function (value, formatInfo) {\n        var formatValue = null;\n        var formatString = null;\n        if ((value || value === 0)) {\n            formatValue = this.formatNumber(value);\n            var numberOfDecimals = this.numberOfDecimals(value);\n            formatString = this.internationalization.getNumberFormat(formatInfo)(this.makeRoundNumber(value, numberOfDecimals));\n        }\n        return { elementVal: formatValue, formatString: formatString };\n    };\n    Slider.prototype.formatNumber = function (value) {\n        var numberOfDecimals = this.numberOfDecimals(value);\n        return this.internationalization.getNumberFormat({\n            maximumFractionDigits: numberOfDecimals,\n            minimumFractionDigits: numberOfDecimals, useGrouping: false\n        })(value);\n    };\n    Slider.prototype.numberOfDecimals = function (value) {\n        var decimalPart = value.toString().split('.')[1];\n        var numberOfDecimals = !decimalPart || !decimalPart.length ? 0 : decimalPart.length;\n        return numberOfDecimals;\n    };\n    Slider.prototype.makeRoundNumber = function (value, precision) {\n        var decimals = precision || 0;\n        return Number(value.toFixed(decimals));\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    Slider.prototype.render = function () {\n        var _this = this;\n        this.initialize();\n        this.initRender();\n        this.wireEvents();\n        this.setZindex();\n        this.renderComplete();\n        if (this.element.tagName === 'EJS-SLIDER') {\n            if (this.getTheme(this.sliderContainer) === 'none') {\n                setTimeout(function () {\n                    _this.refresh();\n                }, 0);\n            }\n        }\n    };\n    Slider.prototype.initialize = function () {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], classNames.root);\n        this.setCSSClass();\n    };\n    Slider.prototype.setElementWidth = function (width) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(width) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.sliderContainer)) {\n            if (typeof width === 'number') {\n                this.sliderContainer.style.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(width);\n            }\n            else if (typeof width === 'string') {\n                this.sliderContainer.style.width = (width.match(/px|%|em/)) ? (width) : ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(width));\n            }\n        }\n    };\n    Slider.prototype.setCSSClass = function (oldCSSClass) {\n        if (oldCSSClass) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], oldCSSClass.split(' '));\n        }\n        if (this.cssClass) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], this.cssClass.split(' '));\n        }\n    };\n    Slider.prototype.setEnabled = function () {\n        if (!this.enabled) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.sliderContainer], [classNames.sliderDisabled]);\n            if (this.tooltip.isVisible && this.tooltipElement && this.tooltip.showOn === 'Always') {\n                this.tooltipElement.classList.add(classNames.sliderDisabled);\n            }\n            this.unwireEvents();\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.sliderContainer], [classNames.sliderDisabled]);\n            if (this.tooltip.isVisible && this.tooltipElement && this.tooltip.showOn === 'Always') {\n                this.tooltipElement.classList.remove(classNames.sliderDisabled);\n            }\n            this.wireEvents();\n        }\n    };\n    Slider.prototype.getTheme = function (container) {\n        var theme = window.getComputedStyle(container, ':after').getPropertyValue('content');\n        return theme.replace(/['\"]+/g, '');\n    };\n    /**\n     * Initialize the rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    Slider.prototype.initRender = function () {\n        this.sliderContainer = this.createElement('div', { className: classNames.sliderContainer + ' ' + classNames.controlWrapper });\n        this.element.parentNode.insertBefore(this.sliderContainer, this.element);\n        this.sliderContainer.appendChild(this.element);\n        this.sliderTrack = this.createElement('div', { className: classNames.sliderTrack });\n        this.element.appendChild(this.sliderTrack);\n        this.setElementWidth(this.width);\n        this.element.tabIndex = -1;\n        this.getThemeInitialization();\n        this.setHandler();\n        this.createRangeBar();\n        if (this.limits.enabled) {\n            this.createLimitBar();\n        }\n        this.setOrientClass();\n        this.hiddenInput = (this.createElement('input', {\n            attrs: {\n                type: 'hidden', value: ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) ? ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.min) ? '0' : this.min.toString()) : this.value.toString()),\n                name: this.element.getAttribute('name') || this.element.getAttribute('id') ||\n                    '_' + (Math.random() * 1000).toFixed(0) + 'slider', class: classNames.sliderHiddenInput\n            }\n        }));\n        this.hiddenInput.tabIndex = -1;\n        this.sliderContainer.appendChild(this.hiddenInput);\n        if (this.showButtons) {\n            this.setButtons();\n        }\n        this.setEnableRTL();\n        if (this.type === 'Range') {\n            this.rangeValueUpdate();\n        }\n        else {\n            this.value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) ? ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.min) ? 0 :\n                parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.min.toString()))) : this.value;\n        }\n        this.previousVal = this.type !== 'Range' ? this.checkHandleValue(parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.value.toString()))) :\n            [this.checkHandleValue(parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.value[0].toString()))),\n                this.checkHandleValue(parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.value[1].toString())))];\n        this.previousChanged = this.previousVal;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.hasAttribute('name'))) {\n            this.element.removeAttribute('name');\n        }\n        this.setValue();\n        if (this.limits.enabled) {\n            this.setLimitBar();\n        }\n        if (this.ticks.placement !== 'None') {\n            this.renderScale();\n        }\n        if (this.tooltip.isVisible) {\n            this.renderTooltip();\n        }\n        if (!this.enabled) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.sliderContainer], [classNames.sliderDisabled]);\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.sliderContainer], [classNames.sliderDisabled]);\n        }\n        if (this.readonly) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.sliderContainer], [classNames.readonly]);\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.sliderContainer], [classNames.readonly]);\n        }\n    };\n    Slider.prototype.getThemeInitialization = function () {\n        this.isMaterial = this.getTheme(this.sliderContainer) === 'material'\n            || this.getTheme(this.sliderContainer) === 'material-dark';\n        this.isMaterial3 = this.getTheme(this.sliderContainer) === 'Material3'\n            || this.getTheme(this.sliderContainer) === 'Material3-dark';\n        this.isBootstrap = this.getTheme(this.sliderContainer) === 'bootstrap'\n            || this.getTheme(this.sliderContainer) === 'bootstrap-dark';\n        this.isBootstrap4 = this.getTheme(this.sliderContainer) === 'bootstrap4';\n        this.isTailwind = this.getTheme(this.sliderContainer) === 'tailwind' || this.getTheme(this.sliderContainer) === 'tailwind-dark';\n        this.isTailwind3 = this.getTheme(this.sliderContainer) === 'tailwind3' || this.getTheme(this.sliderContainer) === 'tailwind3-dark';\n        this.isBootstrap5 = this.getTheme(this.sliderContainer) === 'bootstrap5';\n        this.isFluent = this.getTheme(this.sliderContainer) === 'FluentUI';\n        this.isFluent2 = this.getTheme(this.sliderContainer) === 'fluent2';\n        this.isBootstrap5Dot3 = this.getTheme(this.sliderContainer) === 'bootstrap5.3';\n        this.isMaterialTooltip = (this.isMaterial || this.isMaterial3) && this.type !== 'Range' && this.tooltip.isVisible;\n    };\n    Slider.prototype.createRangeBar = function () {\n        if (this.type !== 'Default') {\n            this.rangeBar = (this.createElement('div', { attrs: { class: classNames.rangeBar } }));\n            this.element.appendChild(this.rangeBar);\n            if (this.drag && this.type === 'Range') {\n                if (this.orientation === 'Horizontal') {\n                    this.rangeBar.classList.add(classNames.dragHorizontal);\n                }\n                else {\n                    this.rangeBar.classList.add(classNames.dragVertical);\n                }\n            }\n        }\n    };\n    Slider.prototype.createLimitBar = function () {\n        var firstElementClassName = this.type !== 'Range' ? classNames.limitBarDefault :\n            classNames.limitBarFirst;\n        firstElementClassName += ' ' + classNames.limits;\n        this.limitBarFirst = (this.createElement('div', {\n            attrs: { class: firstElementClassName }\n        }));\n        this.element.appendChild(this.limitBarFirst);\n        if (this.type === 'Range') {\n            this.limitBarSecond = (this.createElement('div', {\n                attrs: {\n                    class: classNames.limitBarSecond + ' ' + classNames.limits\n                }\n            }));\n            this.element.appendChild(this.limitBarSecond);\n        }\n    };\n    Slider.prototype.setOrientClass = function () {\n        if (this.orientation !== 'Vertical') {\n            this.sliderContainer.classList.remove(classNames.verticalSlider);\n            this.sliderContainer.classList.add(classNames.horizontalSlider);\n            this.firstHandle.setAttribute('aria-orientation', 'horizontal');\n            if (this.type === 'Range') {\n                this.secondHandle.setAttribute('aria-orientation', 'horizontal');\n            }\n        }\n        else {\n            this.sliderContainer.classList.remove(classNames.horizontalSlider);\n            this.sliderContainer.classList.add(classNames.verticalSlider);\n            this.firstHandle.setAttribute('aria-orientation', 'vertical');\n            if (this.type === 'Range') {\n                this.secondHandle.setAttribute('aria-orientation', 'vertical');\n            }\n        }\n    };\n    Slider.prototype.setAriaAttributes = function (element) {\n        var _this = this;\n        var min = this.min;\n        var max = this.max;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.customValues) && this.customValues.length > 0) {\n            min = this.customValues[0];\n            max = this.customValues[this.customValues.length - 1];\n        }\n        if (this.type !== 'Range') {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(element, {\n                'aria-valuemin': (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(min) ? '0' : min.toString(), 'aria-valuemax': ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(max) ? '100' : max.toString())\n            });\n        }\n        else {\n            var range = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.customValues) && this.customValues.length > 0 ?\n                [[min.toString(), (this.customValues[this.value[1]]).toString()],\n                    [(this.customValues[this.value[0]]).toString(), max.toString()]] :\n                [[min.toString(), this.value[1].toString()], [this.value[0].toString(), max.toString()]];\n            range.forEach(function (range, index) {\n                var element = index === 0 ? _this.firstHandle : _this.secondHandle;\n                if (element) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(element, {\n                        'aria-valuemin': range[0], 'aria-valuemax': range[1]\n                    });\n                }\n            });\n        }\n    };\n    Slider.prototype.createSecondHandle = function () {\n        this.secondHandle = this.createElement('div', {\n            attrs: {\n                class: classNames.sliderHandle, 'role': 'slider', tabIndex: '0', 'aria-label': 'slider'\n            }\n        });\n        this.secondHandle.classList.add(classNames.sliderSecondHandle);\n        this.element.appendChild(this.secondHandle);\n    };\n    Slider.prototype.createFirstHandle = function () {\n        this.firstHandle = this.createElement('div', {\n            attrs: {\n                class: classNames.sliderHandle, 'role': 'slider', tabIndex: '0', 'aria-label': 'slider'\n            }\n        });\n        this.firstHandle.classList.add(classNames.sliderFirstHandle);\n        this.element.appendChild(this.firstHandle);\n        if (this.isMaterialTooltip) {\n            this.materialHandle = this.createElement('div', {\n                attrs: {\n                    class: classNames.sliderHandle + ' ' +\n                        classNames.sliderMaterialHandle\n                }\n            });\n            this.element.appendChild(this.materialHandle);\n        }\n    };\n    Slider.prototype.wireFirstHandleEvt = function (destroy) {\n        if (!destroy) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.firstHandle, 'mousedown touchstart', this.handleFocus, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.firstHandle, 'transitionend', this.transitionEnd, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.firstHandle, 'mouseenter touchenter', this.handleOver, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.firstHandle, 'mouseleave touchend', this.handleLeave, this);\n        }\n        else {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.firstHandle, 'mousedown touchstart', this.handleFocus);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.firstHandle, 'transitionend', this.transitionEnd);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.firstHandle, 'mouseenter touchenter', this.handleOver);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.firstHandle, 'mouseleave touchend', this.handleLeave);\n        }\n    };\n    Slider.prototype.wireSecondHandleEvt = function (destroy) {\n        if (!destroy) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.secondHandle, 'mousedown touchstart', this.handleFocus, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.secondHandle, 'transitionend', this.transitionEnd, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.secondHandle, 'mouseenter touchenter', this.handleOver, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.secondHandle, 'mouseleave touchend', this.handleLeave, this);\n        }\n        else {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.secondHandle, 'mousedown touchstart', this.handleFocus);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.secondHandle, 'transitionend', this.transitionEnd);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.secondHandle, 'mouseenter touchenter', this.handleOver);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.secondHandle, 'mouseleave touchend', this.handleLeave);\n        }\n    };\n    Slider.prototype.handleStart = function () {\n        if (this.type !== 'Range') {\n            this.firstHandle.classList[this.handlePos1 === 0 ? 'add' : 'remove'](classNames.sliderHandleStart);\n            if (this.isMaterialTooltip) {\n                this.materialHandle.classList[this.handlePos1 === 0 ? 'add' : 'remove'](classNames.sliderHandleStart);\n                if (this.tooltipElement) {\n                    this.tooltipElement.classList[this.handlePos1 === 0 ? 'add' : 'remove'](classNames.sliderTooltipStart);\n                }\n            }\n        }\n    };\n    Slider.prototype.transitionEnd = function (e) {\n        if (e.propertyName !== 'transform') {\n            this.handleStart();\n            if (!this.enableAnimation) {\n                this.getHandle().style.transition = 'none';\n            }\n            if (this.type !== 'Default') {\n                this.rangeBar.style.transition = 'none';\n            }\n            if ((this.isMaterial || this.isMaterial3) && this.tooltip.isVisible && this.type === 'Default') {\n                this.tooltipElement.style.transition = this.transition.handle;\n            }\n            this.tooltipToggle(this.getHandle());\n            this.closeTooltip();\n        }\n    };\n    Slider.prototype.handleFocusOut = function () {\n        if (this.firstHandle.classList.contains(classNames.sliderHandleFocused)) {\n            this.firstHandle.classList.remove(classNames.sliderHandleFocused);\n        }\n        if (this.type === 'Range') {\n            if (this.secondHandle.classList.contains(classNames.sliderHandleFocused)) {\n                this.secondHandle.classList.remove(classNames.sliderHandleFocused);\n            }\n        }\n    };\n    Slider.prototype.handleFocus = function (e) {\n        this.focusSliderElement();\n        this.sliderBarClick(e);\n        if (e.currentTarget === this.firstHandle) {\n            this.firstHandle.classList.add(classNames.sliderHandleFocused);\n            this.firstHandle.classList.add(classNames.sliderTabHandle);\n        }\n        else {\n            this.secondHandle.classList.add(classNames.sliderHandleFocused);\n            this.secondHandle.classList.add(classNames.sliderTabHandle);\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'mousemove touchmove', this.sliderBarMove, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'mouseup touchend', this.sliderBarUp, this);\n    };\n    Slider.prototype.handleOver = function (e) {\n        if (this.tooltip.isVisible && this.tooltip.showOn === 'Hover') {\n            this.tooltipToggle(e.currentTarget);\n        }\n        if (this.type === 'Default') {\n            this.tooltipToggle(this.getHandle());\n        }\n    };\n    Slider.prototype.handleLeave = function (e) {\n        if (this.tooltip.isVisible && this.tooltip.showOn === 'Hover' &&\n            !e.currentTarget.classList.contains(classNames.sliderHandleFocused) &&\n            !e.currentTarget.classList.contains(classNames.sliderTabHandle)) {\n            this.closeTooltip();\n        }\n    };\n    Slider.prototype.setHandler = function () {\n        this.createFirstHandle();\n        if (this.type === 'Range') {\n            this.createSecondHandle();\n        }\n    };\n    Slider.prototype.setEnableRTL = function () {\n        if (this.enableRtl && this.orientation !== 'Vertical') {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.sliderContainer], classNames.rtl);\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.sliderContainer], classNames.rtl);\n        }\n        var preDir = (this.orientation !== 'Vertical') ? this.horDir : this.verDir;\n        if (this.enableRtl) {\n            this.horDir = 'right';\n            this.verDir = 'bottom';\n        }\n        else {\n            this.horDir = 'left';\n            this.verDir = 'bottom';\n        }\n        var currDir = (this.orientation !== 'Vertical') ? this.horDir : this.verDir;\n        if (preDir !== currDir) {\n            if (this.orientation === 'Horizontal') {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.firstHandle, { 'right': '', 'left': 'auto' });\n                if (this.type === 'Range') {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.secondHandle, { 'top': '', 'left': 'auto' });\n                }\n            }\n        }\n        this.setBarColor();\n    };\n    Slider.prototype.tooltipValue = function () {\n        var _this = this;\n        var text;\n        var args = {\n            value: this.value,\n            text: ''\n        };\n        if (this.initialTooltip) {\n            this.initialTooltip = false;\n            this.setTooltipContent();\n            args.text = text = (typeof (this.tooltipObj.content) === 'function' ? this.tooltipObj.content() : this.tooltipObj.content);\n            this.trigger('tooltipChange', args, function (observedArgs) {\n                _this.addTooltipClass(observedArgs.text);\n                if (text !== observedArgs.text) {\n                    _this.customAriaText = observedArgs.text;\n                    if (_this.enableHtmlSanitizer) {\n                        observedArgs.text = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(observedArgs.text.toString());\n                    }\n                    else {\n                        observedArgs.text = observedArgs.text.toString();\n                    }\n                    var contentTemp = function () {\n                        return observedArgs.text;\n                    };\n                    _this.tooltipObj.content = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.initializeCSPTemplate)(contentTemp);\n                    _this.setAriaAttrValue(_this.firstHandle);\n                    if (_this.type === 'Range') {\n                        _this.setAriaAttrValue(_this.secondHandle);\n                    }\n                }\n            });\n            if (this.isMaterialTooltip) {\n                this.setPreviousVal('change', this.value);\n            }\n        }\n    };\n    Slider.prototype.setTooltipContent = function () {\n        var content = this.formatContent(this.tooltipFormatInfo, false);\n        var contentTemp = function () {\n            return content;\n        };\n        this.tooltipObj.content = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.initializeCSPTemplate)(contentTemp);\n    };\n    Slider.prototype.formatContent = function (formatInfo, ariaContent) {\n        var content = '';\n        var handle1 = this.handleVal1;\n        var handle2 = this.handleVal2;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.customValues) && this.customValues.length > 0) {\n            handle1 = this.customValues[this.handleVal1];\n            handle2 = this.customValues[this.handleVal2];\n        }\n        if (!ariaContent) {\n            if (this.type === 'Range') {\n                if (this.enableRtl && this.orientation !== 'Vertical') {\n                    content = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(formatInfo.format)) ? (this.formatString(handle2, formatInfo)\n                        .formatString + ' - ' + this.formatString(handle1, formatInfo).formatString) :\n                        (handle2.toString() + ' - ' + handle1.toString());\n                }\n                else {\n                    content = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(formatInfo.format)) ? (this.formatString(handle1, formatInfo)\n                        .formatString + ' - ' + this.formatString(handle2, formatInfo).formatString) :\n                        (handle1.toString() + ' - ' + handle2.toString());\n                }\n            }\n            else {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(handle1)) {\n                    content = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(formatInfo.format)) ?\n                        this.formatString(handle1, formatInfo).formatString : handle1.toString();\n                }\n            }\n            return content;\n        }\n        else {\n            if (this.type === 'Range') {\n                if (this.enableRtl && this.orientation !== 'Vertical') {\n                    content = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.tooltip) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.tooltip.format)) ?\n                        (this.formatString(handle2, formatInfo).elementVal + ' - ' +\n                            this.formatString(handle1, formatInfo).elementVal) :\n                        (handle2.toString() + ' - ' + handle1.toString());\n                }\n                else {\n                    content = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.tooltip) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.tooltip.format)) ?\n                        (this.formatString(handle1, formatInfo).elementVal + ' - ' +\n                            this.formatString(handle2, formatInfo).elementVal) :\n                        (handle1.toString() + ' - ' + handle2.toString());\n                }\n            }\n            else {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(handle1)) {\n                    content = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.tooltip) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.tooltip.format)) ?\n                        this.formatString(handle1, formatInfo).elementVal : handle1.toString();\n                }\n            }\n            return content;\n        }\n    };\n    Slider.prototype.addTooltipClass = function (content) {\n        if (this.isMaterialTooltip) {\n            var count = content.toString().length;\n            if (!this.tooltipElement) {\n                var cssClass = count > 4 ? classNames.sliderMaterialRange : classNames.sliderMaterialDefault;\n                this.tooltipObj.cssClass = classNames.sliderTooltip + ' ' + cssClass;\n            }\n            else {\n                var cssClass = count > 4 ?\n                    { oldCss: classNames.sliderMaterialDefault, newCss: classNames.sliderMaterialRange } :\n                    { oldCss: classNames.sliderMaterialRange, newCss: classNames.sliderMaterialDefault };\n                this.tooltipElement.classList.remove(cssClass.oldCss);\n                if (!this.tooltipElement.classList.contains(cssClass.newCss)) {\n                    this.tooltipElement.classList.add(cssClass.newCss);\n                    this.tooltipElement.style.transform = count > 4 ? 'scale(1)' :\n                        this.getTooltipTransformProperties(this.previousTooltipClass).rotate;\n                }\n            }\n        }\n    };\n    Slider.prototype.tooltipPlacement = function () {\n        return this.orientation === 'Horizontal' ? (this.tooltip.placement === 'Before' ? 'TopCenter' : 'BottomCenter') :\n            (this.tooltip.placement === 'Before' ? 'LeftCenter' : 'RightCenter');\n    };\n    Slider.prototype.tooltipBeforeOpen = function (args) {\n        this.tooltipElement = args.element;\n        if (this.tooltip.cssClass) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.tooltipElement], this.tooltip.cssClass.split(' ').filter(function (css) { return css; }));\n        }\n        args.target.removeAttribute('aria-describedby');\n        if (this.isMaterialTooltip) {\n            this.tooltipElement.firstElementChild.classList.add(classNames.materialTooltipHide);\n            this.handleStart();\n            this.setTooltipTransform();\n        }\n    };\n    Slider.prototype.tooltipCollision = function (position) {\n        if (this.isBootstrap || this.isBootstrap4 || ((this.isMaterial || this.isMaterial3) && !this.isMaterialTooltip)) {\n            var tooltipOffsetValue = this.isBootstrap4 ? bootstrap4TooltipOffset : bootstrapTooltipOffset;\n            switch (position) {\n                case 'TopCenter':\n                    this.tooltipObj.setProperties({ 'offsetY': -(tooltipOffsetValue) }, false);\n                    break;\n                case 'BottomCenter':\n                    this.tooltipObj.setProperties({ 'offsetY': tooltipOffsetValue }, false);\n                    break;\n                case 'LeftCenter':\n                    this.tooltipObj.setProperties({ 'offsetX': -(tooltipOffsetValue) }, false);\n                    break;\n                case 'RightCenter':\n                    this.tooltipObj.setProperties({ 'offsetX': tooltipOffsetValue }, false);\n                    break;\n            }\n        }\n    };\n    Slider.prototype.materialTooltipEventCallBack = function (event) {\n        this.sliderBarClick(event);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'mousemove touchmove', this.sliderBarMove, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'mouseup touchend', this.sliderBarUp, this);\n    };\n    Slider.prototype.wireMaterialTooltipEvent = function (destroy) {\n        if (this.isMaterialTooltip) {\n            if (!destroy) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.tooltipElement, 'mousedown touchstart', this.materialTooltipEventCallBack, this);\n            }\n            else {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.tooltipElement, 'mousedown touchstart', this.materialTooltipEventCallBack);\n            }\n        }\n    };\n    Slider.prototype.tooltipPositionCalculation = function (position) {\n        var cssClass;\n        switch (position) {\n            case 'TopCenter':\n                cssClass = classNames.horizontalTooltipBefore;\n                break;\n            case 'BottomCenter':\n                cssClass = classNames.horizontalTooltipAfter;\n                break;\n            case 'LeftCenter':\n                cssClass = classNames.verticalTooltipBefore;\n                break;\n            case 'RightCenter':\n                cssClass = classNames.verticalTooltipAfter;\n                break;\n        }\n        return cssClass;\n    };\n    Slider.prototype.getTooltipTransformProperties = function (className) {\n        var transformProperties;\n        if (this.tooltipElement) {\n            var position = this.orientation === 'Horizontal' ?\n                ((this.tooltipElement.clientHeight + 14) - (this.tooltipElement.clientHeight / 2)) :\n                ((this.tooltipElement.clientWidth + 14) - (this.tooltipElement.clientWidth / 2));\n            transformProperties = this.orientation === 'Horizontal' ?\n                (className === classNames.horizontalTooltipBefore ? { rotate: 'rotate(45deg)', translate: \"translateY(\" + position + \"px)\" } :\n                    { rotate: 'rotate(225deg)', translate: \"translateY(\" + -(position) + \"px)\" }) :\n                (className === classNames.verticalTooltipBefore ? { rotate: 'rotate(-45deg)', translate: \"translateX(\" + position + \"px)\" } :\n                    { rotate: 'rotate(-225deg)', translate: \"translateX(\" + (-position) + \"px)\" });\n        }\n        return transformProperties;\n    };\n    Slider.prototype.openMaterialTooltip = function () {\n        var _this = this;\n        if (this.isMaterialTooltip) {\n            this.refreshTooltip(this.firstHandle);\n            var tooltipContentElement = this.tooltipElement.firstElementChild;\n            tooltipContentElement.classList.remove(classNames.materialTooltipHide);\n            tooltipContentElement.classList.add(classNames.materialTooltipShow);\n            this.firstHandle.style.cursor = 'default';\n            this.tooltipElement.style.transition = this.scaleTransform;\n            this.tooltipElement.classList.add(classNames.materialTooltipOpen);\n            this.materialHandle.style.transform = 'scale(0)';\n            if (tooltipContentElement.innerText.length > 4) {\n                this.tooltipElement.style.transform = 'scale(1)';\n            }\n            else {\n                this.tooltipElement.style.transform = this.getTooltipTransformProperties(this.previousTooltipClass).rotate;\n            }\n            if (this.type === 'Default') {\n                setTimeout(function () { if (_this.tooltipElement) {\n                    _this.tooltipElement.style.transition = _this.transition.handle;\n                } }, 2500);\n            }\n            else {\n                setTimeout(function () { if (_this.tooltipElement) {\n                    _this.tooltipElement.style.transition = 'none';\n                } }, 2500);\n            }\n        }\n    };\n    Slider.prototype.closeMaterialTooltip = function () {\n        var _this = this;\n        if (this.isMaterialTooltip) {\n            var tooltipContentElement = this.tooltipElement.firstElementChild;\n            this.tooltipElement.style.transition = this.scaleTransform;\n            tooltipContentElement.classList.remove(classNames.materialTooltipShow);\n            tooltipContentElement.classList.add(classNames.materialTooltipHide);\n            this.firstHandle.style.cursor = '-webkit-grab';\n            this.firstHandle.style.cursor = 'grab';\n            if (this.materialHandle) {\n                this.materialHandle.style.transform = 'scale(1)';\n            }\n            this.tooltipElement.classList.remove(classNames.materialTooltipOpen);\n            this.setTooltipTransform();\n            this.tooltipTarget = undefined;\n            setTimeout(function () { if (_this.tooltipElement) {\n                _this.tooltipElement.style.transition = 'none';\n            } }, 2500);\n        }\n    };\n    Slider.prototype.checkTooltipPosition = function (args) {\n        var tooltipClass = this.tooltipPositionCalculation(args.collidedPosition);\n        if (this.tooltipCollidedPosition === undefined ||\n            this.tooltipCollidedPosition !== args.collidedPosition || !args.element.classList.contains(tooltipClass)) {\n            if (this.isMaterialTooltip) {\n                if (tooltipClass !== undefined) {\n                    args.element.classList.remove(this.previousTooltipClass);\n                    args.element.classList.add(tooltipClass);\n                    this.previousTooltipClass = tooltipClass;\n                }\n                if (args.element.style.transform && args.element.classList.contains(classNames.materialTooltipOpen) &&\n                    args.element.firstElementChild.innerText.length <= 4) {\n                    args.element.style.transform = this.getTooltipTransformProperties(this.previousTooltipClass).rotate;\n                }\n            }\n            this.tooltipCollidedPosition = args.collidedPosition;\n        }\n        if (this.isMaterialTooltip && this.tooltipElement && this.tooltipElement.style.transform.indexOf('translate') !== -1) {\n            this.setTooltipTransform();\n        }\n    };\n    Slider.prototype.setTooltipTransform = function () {\n        var transformProperties = this.getTooltipTransformProperties(this.previousTooltipClass);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.tooltipElement)) {\n            return;\n        }\n        if (this.tooltipElement.firstElementChild.innerText.length > 4) {\n            this.tooltipElement.style.transform = transformProperties.translate + \" scale(0.01)\";\n        }\n        else {\n            this.tooltipElement.style.transform = transformProperties.translate + \" \" + transformProperties.rotate + \" scale(0.01)\";\n        }\n    };\n    Slider.prototype.renderTooltip = function () {\n        this.tooltipObj = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__.Tooltip({\n            showTipPointer: this.isBootstrap || this.isMaterial || this.isMaterial3 || this.isBootstrap4 || this.isTailwind\n                || this.isTailwind3 || this.isBootstrap5 || this.isFluent || this.isFluent2 || this.isBootstrap5Dot3,\n            cssClass: classNames.sliderTooltip,\n            height: (this.isMaterial || this.isMaterial3) ? 30 : 'auto',\n            animation: { open: { effect: 'None' }, close: { effect: 'FadeOut', duration: 500 } },\n            opensOn: 'Custom',\n            beforeOpen: this.tooltipBeforeOpen.bind(this),\n            beforeCollision: this.checkTooltipPosition.bind(this),\n            beforeClose: this.tooltipBeforeClose.bind(this),\n            enableHtmlSanitizer: this.enableHtmlSanitizer\n        });\n        this.tooltipObj.appendTo(this.firstHandle);\n        this.initializeTooltipProps();\n    };\n    Slider.prototype.initializeTooltipProps = function () {\n        var tooltipShowOn = (this.tooltip.showOn === 'Auto' ? 'Hover' : this.tooltip.showOn);\n        this.setProperties({ tooltip: { showOn: tooltipShowOn } }, true);\n        this.tooltipObj.position = this.tooltipPlacement();\n        this.tooltipCollision(this.tooltipObj.position);\n        [this.firstHandle, this.rangeBar, this.secondHandle].forEach(function (handle) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(handle)) {\n                handle.style.transition = 'none';\n            }\n        });\n        if (this.isMaterialTooltip) {\n            this.sliderContainer.classList.add(classNames.materialSlider);\n            this.tooltipValue();\n            this.tooltipObj.animation.close.effect = 'None';\n            this.tooltipObj.open(this.firstHandle);\n        }\n    };\n    Slider.prototype.tooltipBeforeClose = function () {\n        this.tooltipElement = undefined;\n        this.tooltipCollidedPosition = undefined;\n    };\n    Slider.prototype.setButtons = function () {\n        this.firstBtn = this.createElement('div', { className: classNames.sliderButton + ' ' + classNames.firstButton });\n        this.firstBtn.appendChild(this.createElement('span', { className: classNames.sliderButtonIcon }));\n        if (this.isTailwind || this.isTailwind3) {\n            this.firstBtn.querySelector('span').classList.add('e-icons');\n        }\n        this.firstBtn.tabIndex = -1;\n        this.secondBtn = this.createElement('div', { className: classNames.sliderButton + ' ' + classNames.secondButton });\n        this.secondBtn.appendChild(this.createElement('span', { className: classNames.sliderButtonIcon }));\n        if (this.isTailwind || this.isTailwind3) {\n            this.secondBtn.querySelector('span').classList.add('e-icons');\n        }\n        this.secondBtn.tabIndex = -1;\n        this.sliderContainer.classList.add(classNames.sliderButtonClass);\n        this.sliderContainer.appendChild(this.firstBtn);\n        this.sliderContainer.appendChild(this.secondBtn);\n        this.sliderContainer.appendChild(this.element);\n        this.buttonTitle();\n    };\n    Slider.prototype.buttonTitle = function () {\n        var enabledRTL = this.enableRtl && this.orientation !== 'Vertical';\n        this.l10n.setLocale(this.locale);\n        var decrementTitle = this.l10n.getConstant('decrementTitle');\n        var incrementTitle = this.l10n.getConstant('incrementTitle');\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(enabledRTL ? this.secondBtn : this.firstBtn, { 'aria-label': decrementTitle, title: decrementTitle });\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(enabledRTL ? this.firstBtn : this.secondBtn, { 'aria-label': incrementTitle, title: incrementTitle });\n    };\n    Slider.prototype.buttonFocusOut = function () {\n        if (this.isMaterial || this.isMaterial3) {\n            this.getHandle().classList.remove('e-large-thumb-size');\n        }\n    };\n    Slider.prototype.repeatButton = function (args) {\n        var hVal = this.handleValueUpdate();\n        var enabledRTL = this.enableRtl && this.orientation !== 'Vertical';\n        var value;\n        if (args.target.parentElement.classList.contains(classNames.firstButton)\n            || args.target.classList.contains(classNames.firstButton)) {\n            if (enabledRTL) {\n                value = this.add(hVal, parseFloat(this.step.toString()), true);\n            }\n            else {\n                value = this.add(hVal, parseFloat(this.step.toString()), false);\n            }\n        }\n        else if (args.target.parentElement.classList.contains(classNames.secondButton)\n            || (args.target.classList.contains(classNames.secondButton))) {\n            if (enabledRTL) {\n                value = this.add(hVal, parseFloat(this.step.toString()), false);\n            }\n            else {\n                value = this.add(hVal, parseFloat(this.step.toString()), true);\n            }\n        }\n        if (this.limits.enabled) {\n            value = this.getLimitCorrectedValues(value);\n        }\n        if (value >= this.min && value <= this.max) {\n            this.changeHandleValue(value);\n            this.tooltipToggle(this.getHandle());\n        }\n    };\n    Slider.prototype.repeatHandlerMouse = function (args) {\n        args.preventDefault();\n        if (args.type === ('mousedown') || args.type === ('touchstart')) {\n            this.buttonClick(args);\n            this.repeatInterval = setInterval(this.repeatButton.bind(this), 180, args);\n        }\n    };\n    Slider.prototype.materialChange = function () {\n        if (!this.getHandle().classList.contains('e-large-thumb-size')) {\n            this.getHandle().classList.add('e-large-thumb-size');\n        }\n    };\n    Slider.prototype.focusHandle = function () {\n        if (!this.getHandle().classList.contains(classNames.sliderTabHandle)) {\n            this.getHandle().classList.add(classNames.sliderTabHandle);\n        }\n    };\n    Slider.prototype.repeatHandlerUp = function (e) {\n        this.changeEvent('changed', e);\n        this.closeTooltip();\n        clearInterval(this.repeatInterval);\n        this.getHandle().focus();\n    };\n    Slider.prototype.customTickCounter = function (bigNum) {\n        var tickCount = 4;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.customValues) && this.customValues.length > 0) {\n            if (bigNum > 4) {\n                tickCount = 3;\n            }\n            if (bigNum > 7) {\n                tickCount = 2;\n            }\n            if (bigNum > 14) {\n                tickCount = 1;\n            }\n            if (bigNum > 28) {\n                tickCount = 0;\n            }\n        }\n        return tickCount;\n    };\n    Slider.prototype.renderScale = function () {\n        var orien = this.orientation === 'Vertical' ? 'v' : 'h';\n        this.ul = this.createElement('ul', {\n            className: classNames.scale + ' ' + 'e-' + orien + '-scale ' + classNames.tick + '-' + this.ticks.placement.toLowerCase(),\n            attrs: { role: 'presentation', 'aria-hidden': 'true' }\n        });\n        this.ul.style.zIndex = '-1';\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isAndroid && orien === 'h') {\n            this.ul.classList.add(classNames.sliderTickPosition);\n        }\n        var smallStep = this.ticks.smallStep;\n        if (!this.ticks.showSmallTicks) {\n            if (this.ticks.largeStep > 0) {\n                smallStep = this.ticks.largeStep;\n            }\n            else {\n                smallStep = (parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.max))) - (parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.min)));\n            }\n        }\n        else if (smallStep <= 0) {\n            smallStep = parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.step));\n        }\n        var min = parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.min));\n        var max = parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.max));\n        var steps = parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(smallStep));\n        var bigNum = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.customValues) && this.customValues.length > 0 && this.customValues.length - 1;\n        var customStep = this.customTickCounter(bigNum);\n        var count = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.customValues) && this.customValues.length > 0 ?\n            (bigNum * customStep) + bigNum : Math.abs((max - min) / steps);\n        this.element.appendChild(this.ul);\n        var li;\n        var start = parseFloat(this.min.toString());\n        if (orien === 'v') {\n            start = parseFloat(this.max.toString());\n        }\n        var left = 0;\n        var islargeTick;\n        var tickWidth = 100 / count;\n        if (tickWidth === Infinity) {\n            tickWidth = 5;\n        }\n        for (var i = 0, y = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.customValues) && this.customValues.length > 0 ?\n            this.customValues.length - 1 : 0, k = 0; i <= count; i++) {\n            li = (this.createElement('li', {\n                attrs: {\n                    class: classNames.tick, role: 'presentation',\n                    'aria-hidden': 'true'\n                }\n            }));\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.customValues) && this.customValues.length > 0) {\n                islargeTick = i % (customStep + 1) === 0;\n                if (islargeTick) {\n                    if (orien === 'h') {\n                        start = this.customValues[k];\n                        k++;\n                    }\n                    else {\n                        start = this.customValues[y];\n                        y--;\n                    }\n                    li.setAttribute('title', start.toString());\n                }\n            }\n            else {\n                li.setAttribute('title', start.toString());\n                if (this.numberOfDecimals(this.max) === 0 && this.numberOfDecimals(this.min) === 0 &&\n                    this.numberOfDecimals(this.step) === 0) {\n                    if (orien === 'h') {\n                        var reminder = (start - parseFloat(this.min.toString())) % this.ticks.largeStep;\n                        islargeTick = (Math.abs(reminder) < tolerance || Math.abs(this.ticks.largeStep - reminder) < tolerance);\n                    }\n                    else {\n                        var reminder = Math.abs(start - parseFloat(this.max.toString())) % this.ticks.largeStep;\n                        islargeTick = (Math.abs(reminder) < tolerance || Math.abs(this.ticks.largeStep - reminder) < tolerance);\n                    }\n                }\n                else {\n                    var largestep = this.ticks.largeStep;\n                    var startValue = start;\n                    if (orien === 'h') {\n                        var reminder = ((startValue - min) % largestep);\n                        islargeTick = Math.abs(reminder) < tolerance || Math.abs(largestep - reminder) < tolerance;\n                    }\n                    else {\n                        var reminder = Math.abs(startValue - parseFloat(max.toString())) % largestep;\n                        islargeTick = Math.abs(reminder) < tolerance || Math.abs(largestep - reminder) < tolerance;\n                    }\n                }\n            }\n            if (islargeTick) {\n                li.classList.add(classNames.large);\n            }\n            if (orien === 'h') {\n                li.style.width = tickWidth + '%';\n            }\n            else {\n                li.style.height = tickWidth + '%';\n            }\n            var repeat = islargeTick ? (this.ticks.placement === 'Both' ? 2 : 1) : 0;\n            if (islargeTick) {\n                for (var j = 0; j < repeat; j++) {\n                    this.createTick(li, start);\n                }\n            }\n            else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.customValues)) {\n                this.formatTicksValue(li, start);\n            }\n            this.ul.appendChild(li);\n            this.tickElementCollection.push(li);\n            var decimalPoints = void 0;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.customValues)) {\n                if (this.numberOfDecimals(smallStep) > this.numberOfDecimals(start)) {\n                    decimalPoints = this.numberOfDecimals(smallStep);\n                }\n                else {\n                    decimalPoints = this.numberOfDecimals(start);\n                }\n                if (orien === 'h') {\n                    start = this.makeRoundNumber(start + smallStep, decimalPoints);\n                }\n                else {\n                    if (this.min > this.max) {\n                        start = this.makeRoundNumber(start + smallStep, decimalPoints);\n                    }\n                    else {\n                        start = this.makeRoundNumber(start - smallStep, decimalPoints);\n                    }\n                }\n                left = this.makeRoundNumber(left + smallStep, decimalPoints);\n            }\n        }\n        this.ticksAlignment(orien, tickWidth);\n    };\n    Slider.prototype.ticksAlignment = function (orien, tickWidth, triggerEvent) {\n        if (triggerEvent === void 0) { triggerEvent = true; }\n        this.firstChild = this.ul.firstElementChild;\n        this.lastChild = this.ul.lastElementChild;\n        this.firstChild.classList.add(classNames.sliderFirstTick);\n        this.lastChild.classList.add(classNames.sliderLastTick);\n        this.sliderContainer.classList.add(classNames.scale + '-' + this.ticks.placement.toLowerCase());\n        if (orien === 'h') {\n            this.firstChild.style.width = tickWidth / 2 + '%';\n            this.lastChild.style.width = tickWidth / 2 + '%';\n        }\n        else {\n            this.firstChild.style.height = tickWidth / 2 + '%';\n            this.lastChild.style.height = tickWidth / 2 + '%';\n        }\n        var eventArgs = { ticksWrapper: this.ul, tickElements: this.tickElementCollection };\n        if (triggerEvent) {\n            this.trigger('renderedTicks', eventArgs);\n        }\n        this.scaleAlignment();\n    };\n    Slider.prototype.createTick = function (li, start) {\n        var span = this.createElement('span', {\n            className: classNames.tickValue + ' ' + classNames.tick + '-' + this.ticks.placement.toLowerCase(),\n            attrs: { role: 'presentation', 'aria-hidden': 'true' }\n        });\n        li.appendChild(span);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.customValues)) {\n            this.formatTicksValue(li, start, span);\n        }\n        else {\n            if (this.enableHtmlSanitizer) {\n                span.innerHTML = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(start.toString());\n            }\n            else {\n                span.innerHTML = start.toString();\n            }\n        }\n    };\n    Slider.prototype.formatTicksValue = function (li, start, spanElement) {\n        var _this = this;\n        var tickText = this.formatNumber(start);\n        var text = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.ticks) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.ticks.format) ?\n            this.formatString(start, this.ticksFormatInfo).formatString : tickText;\n        var eventArgs = { value: start, text: text, tickElement: li };\n        this.trigger('renderingTicks', eventArgs, function (observedArgs) {\n            li.setAttribute('title', observedArgs.text.toString());\n            if (spanElement) {\n                if (_this.enableHtmlSanitizer) {\n                    spanElement.innerHTML = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(observedArgs.text.toString());\n                }\n                else {\n                    spanElement.innerHTML = observedArgs.text.toString();\n                }\n            }\n        });\n    };\n    Slider.prototype.scaleAlignment = function () {\n        this.tickValuePosition();\n        if (this.orientation === 'Vertical') {\n            if (this.element.getBoundingClientRect().width <= 15) {\n                this.sliderContainer.classList.add(classNames.sliderSmallSize);\n            }\n            else {\n                this.sliderContainer.classList.remove(classNames.sliderSmallSize);\n            }\n        }\n        else {\n            if (this.element.getBoundingClientRect().height <= 15) {\n                this.sliderContainer.classList.add(classNames.sliderSmallSize);\n            }\n            else {\n                this.sliderContainer.classList.remove(classNames.sliderSmallSize);\n            }\n        }\n    };\n    Slider.prototype.tickValuePosition = function () {\n        this.firstChild = this.element.querySelector('ul').children[0];\n        var first = this.firstChild.getBoundingClientRect();\n        var firstChild;\n        var otherChild;\n        var smallStep = this.ticks.smallStep;\n        var count = Math.abs((parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.max))) - (parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.min)))) / smallStep;\n        if (this.firstChild.children.length > 0) {\n            firstChild = this.firstChild.children[0].getBoundingClientRect();\n        }\n        var tickElements = [this.sliderContainer.querySelectorAll('.' + classNames.tick + '.' +\n                classNames.large + ' .' + classNames.tickValue)];\n        var other;\n        if (this.ticks.placement === 'Both') {\n            other = [].slice.call(tickElements[0], 2);\n        }\n        else {\n            other = [].slice.call(tickElements[0], 1);\n        }\n        var tickWidth = this.orientation === 'Vertical' ?\n            (first.height * 2) : (first.width * 2);\n        for (var i = 0; i < this.firstChild.children.length; i++) {\n            if (this.orientation === 'Vertical') {\n                this.firstChild.children[i].style.top = -(firstChild.height / 2) + 'px';\n            }\n            else {\n                if (!this.enableRtl) {\n                    this.firstChild.children[i].style.left = -(firstChild.width / 2) + 'px';\n                }\n                else {\n                    this.firstChild.children[i].style.left = (tickWidth -\n                        this.firstChild.children[i].getBoundingClientRect().width) / 2 + 'px';\n                }\n            }\n        }\n        for (var i = 0; i < other.length; i++) {\n            otherChild = other[i].getBoundingClientRect();\n            if (this.orientation === 'Vertical') {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(other[i], { top: (tickWidth - otherChild.height) / 2 + 'px' });\n            }\n            else {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(other[i], { left: (tickWidth - otherChild.width) / 2 + 'px' });\n            }\n        }\n        if (this.enableRtl && this.lastChild.children.length && count !== 0) {\n            this.lastChild.children[0].style.left = -(this.lastChild.getBoundingClientRect().width / 2) + 'px';\n            if (this.ticks.placement === 'Both') {\n                this.lastChild.children[1].style.left = -(this.lastChild.getBoundingClientRect().width / 2) + 'px';\n            }\n        }\n        if (count === 0) {\n            if (this.orientation === 'Horizontal') {\n                if (!this.enableRtl) {\n                    this.firstChild.classList.remove(classNames.sliderLastTick);\n                    this.firstChild.style.left = this.firstHandle.style.left;\n                }\n                else {\n                    this.firstChild.classList.remove(classNames.sliderLastTick);\n                    this.firstChild.style.right = this.firstHandle.style.right;\n                    this.firstChild.children[0].style.left =\n                        (this.firstChild.getBoundingClientRect().width / 2) + 2 + 'px';\n                    if (this.ticks.placement === 'Both') {\n                        this.firstChild.children[1].style.left =\n                            (this.firstChild.getBoundingClientRect().width / 2) + 2 + 'px';\n                    }\n                }\n            }\n            if (this.orientation === 'Vertical') {\n                this.firstChild.classList.remove(classNames.sliderLastTick);\n            }\n        }\n    };\n    Slider.prototype.setAriaAttrValue = function (element) {\n        var ariaValueText;\n        var isTickFormatted = ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.ticks) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.ticks.format))) ? true : false;\n        var text = !isTickFormatted ?\n            this.formatContent(this.ticksFormatInfo, false) : this.formatContent(this.tooltipFormatInfo, false);\n        var valuenow = isTickFormatted ? this.formatContent(this.ticksFormatInfo, true) :\n            this.formatContent(this.tooltipFormatInfo, true);\n        text = (!this.customAriaText) ? (text) : (this.customAriaText);\n        if (text.split(' - ').length === 2) {\n            ariaValueText = text.split(' - ');\n        }\n        else {\n            ariaValueText = [text, text];\n        }\n        this.setAriaAttributes(element);\n        if (this.type !== 'Range') {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(element, { 'aria-valuenow': valuenow, 'aria-valuetext': text });\n        }\n        else {\n            if (!this.enableRtl) {\n                if (element === this.firstHandle) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(element, { 'aria-valuenow': valuenow.split(' - ')[0], 'aria-valuetext': ariaValueText[0] });\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(element, { 'aria-valuenow': valuenow.split(' - ')[1], 'aria-valuetext': ariaValueText[1] });\n                }\n            }\n            else {\n                if (element === this.firstHandle) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(element, { 'aria-valuenow': valuenow.split(' - ')[1], 'aria-valuetext': ariaValueText[1] });\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(element, { 'aria-valuenow': valuenow.split(' - ')[0], 'aria-valuetext': ariaValueText[0] });\n                }\n            }\n        }\n    };\n    Slider.prototype.handleValueUpdate = function () {\n        var hVal;\n        if (this.type === 'Range') {\n            if (this.activeHandle === 1) {\n                hVal = this.handleVal1;\n            }\n            else {\n                hVal = this.handleVal2;\n            }\n        }\n        else {\n            hVal = this.handleVal1;\n        }\n        return hVal;\n    };\n    Slider.prototype.getLimitCorrectedValues = function (value) {\n        if (this.type === 'MinRange' || this.type === 'Default') {\n            value = (this.getLimitValueAndPosition(value, this.limits.minStart, this.limits.minEnd))[0];\n        }\n        else {\n            if (this.activeHandle === 1) {\n                value = (this.getLimitValueAndPosition(value, this.limits.minStart, this.limits.minEnd))[0];\n            }\n            else {\n                value = (this.getLimitValueAndPosition(value, this.limits.maxStart, this.limits.maxEnd))[0];\n            }\n        }\n        return value;\n    };\n    Slider.prototype.focusSliderElement = function () {\n        if (!this.isElementFocused) {\n            this.element.focus();\n            this.isElementFocused = true;\n        }\n    };\n    Slider.prototype.buttonClick = function (args) {\n        this.focusSliderElement();\n        var value;\n        var enabledRTL = this.enableRtl && this.orientation !== 'Vertical';\n        var hVal = this.handleValueUpdate();\n        if ((args.keyCode === 40) || (args.keyCode === 37)\n            || args.currentTarget.classList.contains(classNames.firstButton)) {\n            if (enabledRTL) {\n                value = this.add(hVal, parseFloat(this.step.toString()), true);\n            }\n            else {\n                value = this.add(hVal, parseFloat(this.step.toString()), false);\n            }\n        }\n        else if ((args.keyCode === 38) || (args.keyCode === 39) ||\n            args.currentTarget.classList.contains(classNames.secondButton)) {\n            if (enabledRTL) {\n                value = this.add(hVal, parseFloat(this.step.toString()), false);\n            }\n            else {\n                value = this.add(hVal, parseFloat(this.step.toString()), true);\n            }\n        }\n        else if ((args.keyCode === 33\n            || args.currentTarget.classList.contains(classNames.firstButton))) {\n            if (enabledRTL) {\n                value = this.add(hVal, parseFloat(this.ticks.largeStep.toString()), false);\n            }\n            else {\n                value = this.add(hVal, parseFloat(this.ticks.largeStep.toString()), true);\n            }\n        }\n        else if ((args.keyCode === 34) ||\n            args.currentTarget.classList.contains(classNames.secondButton)) {\n            if (enabledRTL) {\n                value = this.add(hVal, parseFloat(this.ticks.largeStep.toString()), true);\n            }\n            else {\n                value = this.add(hVal, parseFloat(this.ticks.largeStep.toString()), false);\n            }\n        }\n        else if ((args.keyCode === 36)) {\n            value = parseFloat(this.min < this.max ? this.min.toString() : this.max.toString());\n        }\n        else if ((args.keyCode === 35)) {\n            value = parseFloat(this.min < this.max ? this.max.toString() : this.min.toString());\n        }\n        if (this.limits.enabled) {\n            value = this.getLimitCorrectedValues(value);\n        }\n        this.changeHandleValue(value);\n        if ((this.isMaterial || this.isMaterial3) && !this.tooltip.isVisible &&\n            !this.getHandle().classList.contains(classNames.sliderTabHandle)) {\n            this.materialChange();\n        }\n        this.tooltipToggle(this.getHandle());\n        this.getHandle().focus();\n        this.focusHandle();\n        if (args.currentTarget.classList.contains(classNames.firstButton)) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.firstBtn, 'mouseup touchend', this.buttonUp, this);\n        }\n        if (args.currentTarget.classList.contains(classNames.secondButton)) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.secondBtn, 'mouseup touchend', this.buttonUp, this);\n        }\n    };\n    Slider.prototype.tooltipToggle = function (target) {\n        if (this.isMaterialTooltip) {\n            if (!this.tooltipElement.classList.contains(classNames.materialTooltipOpen)) {\n                this.openMaterialTooltip();\n            }\n            else {\n                this.refreshTooltip(this.firstHandle);\n            }\n        }\n        else {\n            if (!this.tooltipElement) {\n                this.openTooltip(target);\n            }\n            else {\n                this.refreshTooltip(target);\n            }\n        }\n    };\n    Slider.prototype.buttonUp = function (args) {\n        if (args.currentTarget.classList.contains(classNames.firstButton)) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.firstBtn, 'mouseup touchend', this.buttonUp);\n        }\n        if (args.currentTarget.classList.contains(classNames.secondButton)) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.secondBtn, 'mouseup touchend', this.buttonUp);\n        }\n    };\n    Slider.prototype.setRangeBar = function () {\n        if (this.orientation === 'Horizontal' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.rangeBar)) {\n            if (this.type === 'MinRange') {\n                if (this.enableRtl) {\n                    this.rangeBar.style.right = '0px';\n                }\n                else {\n                    this.rangeBar.style.left = '0px';\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.rangeBar, { 'width': (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.handlePos1) ? 0 : this.handlePos1 + 'px' });\n            }\n            else {\n                if (this.enableRtl) {\n                    this.rangeBar.style.right = this.handlePos1 + 'px';\n                }\n                else {\n                    this.rangeBar.style.left = this.handlePos1 + 'px';\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.rangeBar, { 'width': this.handlePos2 - this.handlePos1 + 'px' });\n            }\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.rangeBar)) {\n            if (this.type === 'MinRange') {\n                this.rangeBar.style.bottom = this.min > this.max ? this.handlePos1 + 'px' : '0px';\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.rangeBar, { 'height': (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.handlePos1) ? 0 : this.min > this.max ? this.element.clientHeight - this.handlePos1 + 'px' : this.handlePos1 + 'px' });\n            }\n            else {\n                this.rangeBar.style.bottom = this.min > this.max ? this.handlePos2 + 'px' : this.handlePos1 + 'px';\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.rangeBar, { 'height': this.min > this.max ? this.handlePos1 - this.handlePos2 + 'px' : this.handlePos2 - this.handlePos1 + 'px' });\n            }\n        }\n    };\n    Slider.prototype.checkValidValueAndPos = function (value) {\n        value = this.checkHandleValue(value);\n        value = this.checkHandlePosition(value);\n        return value;\n    };\n    Slider.prototype.setLimitBarPositions = function (fromMinPostion, fromMaxpostion, toMinPostion, toMaxpostion) {\n        if (this.orientation === 'Horizontal') {\n            if (!this.enableRtl) {\n                this.limitBarFirst.style.left = fromMinPostion + 'px';\n                this.limitBarFirst.style.width = (fromMaxpostion - fromMinPostion) + 'px';\n            }\n            else {\n                this.limitBarFirst.style.right = fromMinPostion + 'px';\n                this.limitBarFirst.style.width = (fromMaxpostion - fromMinPostion) + 'px';\n            }\n        }\n        else {\n            this.limitBarFirst.style.bottom = (this.min < this.max ? fromMinPostion : fromMaxpostion) + 'px';\n            this.limitBarFirst.style.height = (this.min < this.max ? (fromMaxpostion - fromMinPostion) : (fromMinPostion - fromMaxpostion)) + 'px';\n        }\n        if (this.type === 'Range') {\n            if (this.orientation === 'Horizontal') {\n                if (!this.enableRtl) {\n                    this.limitBarSecond.style.left = toMinPostion + 'px';\n                    this.limitBarSecond.style.width = (toMaxpostion - toMinPostion) + 'px';\n                }\n                else {\n                    this.limitBarSecond.style.right = toMinPostion + 'px';\n                    this.limitBarSecond.style.width = (toMaxpostion - toMinPostion) + 'px';\n                }\n            }\n            else {\n                this.limitBarSecond.style.bottom = (this.min < this.max ? toMinPostion : toMaxpostion) + 'px';\n                this.limitBarSecond.style.height = (this.min < this.max ? (toMaxpostion - toMinPostion) : (toMinPostion - toMaxpostion)) + 'px';\n            }\n        }\n    };\n    Slider.prototype.setLimitBar = function () {\n        if (this.type === 'Default' || this.type === 'MinRange') {\n            var fromPosition = (this.getLimitValueAndPosition(this.limits.minStart, this.limits.minStart, this.limits.minEnd, true))[0];\n            fromPosition = this.checkValidValueAndPos(fromPosition);\n            var toPosition = (this.getLimitValueAndPosition(this.limits.minEnd, this.limits.minStart, this.limits.minEnd, true))[0];\n            toPosition = this.checkValidValueAndPos(toPosition);\n            this.setLimitBarPositions(fromPosition, toPosition);\n        }\n        else if (this.type === 'Range') {\n            var fromMinPostion = (this.getLimitValueAndPosition(this.limits.minStart, this.limits.minStart, this.limits.minEnd, true))[0];\n            fromMinPostion = this.checkValidValueAndPos(fromMinPostion);\n            var fromMaxpostion = (this.getLimitValueAndPosition(this.limits.minEnd, this.limits.minStart, this.limits.minEnd, true))[0];\n            fromMaxpostion = this.checkValidValueAndPos(fromMaxpostion);\n            var toMinPostion = (this.getLimitValueAndPosition(this.limits.maxStart, this.limits.maxStart, this.limits.maxEnd, true))[0];\n            toMinPostion = this.checkValidValueAndPos(toMinPostion);\n            var toMaxpostion = (this.getLimitValueAndPosition(this.limits.maxEnd, this.limits.maxStart, this.limits.maxEnd, true))[0];\n            toMaxpostion = this.checkValidValueAndPos(toMaxpostion);\n            this.setLimitBarPositions(fromMinPostion, fromMaxpostion, toMinPostion, toMaxpostion);\n        }\n    };\n    Slider.prototype.getLimitValueAndPosition = function (currentValue, minValue, maxValue, limitBar) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(minValue)) {\n            minValue = this.min < this.max ? this.min : this.max;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentValue) && limitBar) {\n                currentValue = minValue;\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(maxValue)) {\n            maxValue = this.min < this.max ? this.max : this.min;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentValue) && limitBar) {\n                currentValue = maxValue;\n            }\n        }\n        if (currentValue < minValue) {\n            currentValue = minValue;\n        }\n        if (currentValue > maxValue) {\n            currentValue = maxValue;\n        }\n        return [currentValue, this.checkHandlePosition(currentValue)];\n    };\n    Slider.prototype.setValue = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.customValues) && this.customValues.length > 0) {\n            this.min = 0;\n            this.max = this.customValues.length - 1;\n            this.setBarColor();\n        }\n        this.setAriaAttributes(this.firstHandle);\n        this.handleVal1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) ? this.checkHandleValue(parseFloat(this.min.toString())) :\n            this.checkHandleValue(parseFloat(this.value.toString()));\n        this.handlePos1 = this.checkHandlePosition(this.handleVal1);\n        this.preHandlePos1 = this.handlePos1;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.activeHandle)) {\n            this.activeHandle = this.type === 'Range' ? 2 : 1;\n        }\n        if (this.type === 'Default' || this.type === 'MinRange') {\n            if (this.limits.enabled) {\n                var values = this.getLimitValueAndPosition(this.handleVal1, this.limits.minStart, this.limits.minEnd);\n                this.handleVal1 = values[0];\n                this.handlePos1 = values[1];\n                this.preHandlePos1 = this.handlePos1;\n            }\n            this.setHandlePosition(null);\n            this.handleStart();\n            this.value = this.handleVal1;\n            this.setAriaAttrValue(this.firstHandle);\n            this.changeEvent('changed', null);\n        }\n        else {\n            this.validateRangeValue();\n        }\n        if (this.type !== 'Default') {\n            this.setRangeBar();\n        }\n        if (this.limits.enabled) {\n            this.setLimitBar();\n        }\n    };\n    Slider.prototype.rangeValueUpdate = function () {\n        if (this.value === null || typeof (this.value) !== 'object') {\n            this.value = [parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.min)), parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.max))];\n        }\n    };\n    Slider.prototype.validateRangeValue = function () {\n        this.rangeValueUpdate();\n        this.setRangeValue();\n    };\n    Slider.prototype.modifyZindex = function () {\n        if (this.type === 'Range' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.firstHandle) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.secondHandle)) {\n            if (this.activeHandle === 1) {\n                this.firstHandle.style.zIndex = (this.zIndex + 4) + '';\n                this.secondHandle.style.zIndex = (this.zIndex + 3) + '';\n            }\n            else {\n                this.firstHandle.style.zIndex = (this.zIndex + 3) + '';\n                this.secondHandle.style.zIndex = (this.zIndex + 4) + '';\n            }\n        }\n        else if (this.isMaterialTooltip && this.tooltipElement) {\n            this.tooltipElement.style.zIndex = (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__.getZindexPartial)(this.element) + '';\n        }\n    };\n    Slider.prototype.setHandlePosition = function (event) {\n        var _this = this;\n        var handle;\n        var pos = (this.activeHandle === 1) ? this.handlePos1 : this.handlePos2;\n        if (this.isMaterialTooltip) {\n            handle = [this.firstHandle, this.materialHandle];\n        }\n        else {\n            handle = [this.getHandle()];\n        }\n        this.handleStart();\n        handle.forEach(function (handle) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(handle)) {\n                return;\n            }\n            if (_this.orientation === 'Horizontal') {\n                if (_this.enableRtl) {\n                    handle.style.right = pos + \"px\";\n                }\n                else {\n                    handle.style.left = pos + \"px\";\n                }\n            }\n            else {\n                handle.style.bottom = pos + \"px\";\n            }\n        });\n        this.changeEvent('change', event);\n    };\n    Slider.prototype.getHandle = function () {\n        return (this.activeHandle === 1) ? this.firstHandle : this.secondHandle;\n    };\n    Slider.prototype.setRangeValue = function () {\n        this.updateRangeValue();\n        this.activeHandle = 1;\n        this.setHandlePosition(null);\n        this.activeHandle = 2;\n        this.setHandlePosition(null);\n        this.activeHandle = 1;\n    };\n    Slider.prototype.changeEvent = function (eventName, e) {\n        var previous = eventName === 'change' ? this.previousVal : this.previousChanged;\n        if (this.type !== 'Range') {\n            this.setProperties({ 'value': this.handleVal1 }, true);\n            if (previous !== this.value && (!this.isMaterialTooltip || !this.initialTooltip)) {\n                this.trigger(eventName, this.changeEventArgs(eventName, e));\n                this.initialTooltip = true;\n                this.setPreviousVal(eventName, this.value);\n            }\n            this.setAriaAttrValue(this.firstHandle);\n        }\n        else {\n            var value = this.value = [this.handleVal1, this.handleVal2];\n            this.setProperties({ 'value': value }, true);\n            if (previous.length === this.value.length\n                && this.value[0] !== previous[0] || this.value[1] !== previous[1]) {\n                this.initialTooltip = false;\n                this.trigger(eventName, this.changeEventArgs(eventName, e));\n                this.initialTooltip = true;\n                this.setPreviousVal(eventName, this.value);\n            }\n            this.setAriaAttrValue(this.getHandle());\n        }\n        this.hiddenInput.value = this.value.toString();\n    };\n    Slider.prototype.changeEventArgs = function (eventName, e) {\n        var eventArgs;\n        if (this.tooltip.isVisible && this.tooltipObj && this.initialTooltip) {\n            this.tooltipValue();\n            eventArgs = {\n                value: this.value,\n                previousValue: eventName === 'change' ? this.previousVal : this.previousChanged,\n                action: eventName, text: (typeof (this.tooltipObj.content) === 'function' ? this.tooltipObj.content() : this.tooltipObj.content), isInteracted: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e) ? false : true\n            };\n        }\n        else {\n            eventArgs = {\n                value: this.value,\n                previousValue: eventName === 'change' ? this.previousVal : this.previousChanged,\n                action: eventName, text: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.ticksFormatInfo.format) ? this.value.toString() :\n                    (this.type !== 'Range' ? this.formatString(this.value, this.ticksFormatInfo).formatString :\n                        (this.formatString(this.value[0], this.ticksFormatInfo).formatString + ' - ' +\n                            this.formatString(this.value[1], this.ticksFormatInfo).formatString)),\n                isInteracted: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e) ? false : true\n            };\n        }\n        return eventArgs;\n    };\n    Slider.prototype.setPreviousVal = function (eventName, value) {\n        if (eventName === 'change') {\n            this.previousVal = value;\n        }\n        else {\n            this.previousChanged = value;\n        }\n    };\n    Slider.prototype.updateRangeValue = function () {\n        var values = this.value.toString().split(',').map(Number);\n        if ((this.enableRtl && this.orientation !== 'Vertical') || this.rtl) {\n            this.value = [values[1], values[0]];\n        }\n        else {\n            this.value = [values[0], values[1]];\n        }\n        if (this.enableRtl && this.orientation !== 'Vertical') {\n            this.handleVal1 = this.checkHandleValue(this.value[1]);\n            this.handleVal2 = this.checkHandleValue(this.value[0]);\n        }\n        else {\n            this.handleVal1 = this.checkHandleValue(this.value[0]);\n            this.handleVal2 = this.checkHandleValue(this.value[1]);\n        }\n        this.handlePos1 = this.checkHandlePosition(this.handleVal1);\n        this.handlePos2 = this.checkHandlePosition(this.handleVal2);\n        if (this.min < this.max && this.handlePos1 > this.handlePos2) {\n            this.handlePos1 = this.handlePos2;\n            this.handleVal1 = this.handleVal2;\n        }\n        if (this.min > this.max && this.handlePos1 < this.handlePos2) {\n            this.handlePos2 = this.handlePos1;\n            this.handleVal2 = this.handleVal1;\n        }\n        this.preHandlePos1 = this.handlePos1;\n        this.preHandlePos2 = this.handlePos2;\n        if (this.limits.enabled) {\n            this.activeHandle = 1;\n            var values_1 = this.getLimitValueAndPosition(this.handleVal1, this.limits.minStart, this.limits.minEnd);\n            this.handleVal1 = values_1[0];\n            this.handlePos1 = values_1[1];\n            this.preHandlePos1 = this.handlePos1;\n            this.activeHandle = 2;\n            values_1 = this.getLimitValueAndPosition(this.handleVal2, this.limits.maxStart, this.limits.maxEnd);\n            this.handleVal2 = values_1[0];\n            this.handlePos2 = values_1[1];\n            this.preHandlePos2 = this.handlePos2;\n        }\n    };\n    Slider.prototype.checkHandlePosition = function (value) {\n        var pos;\n        value = (100 *\n            (value - (parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.min))))) / ((parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.max))) - (parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.min))));\n        if (this.orientation === 'Horizontal') {\n            pos = this.element.getBoundingClientRect().width * (value / 100);\n        }\n        else {\n            pos = this.element.getBoundingClientRect().height * (value / 100);\n        }\n        if (((parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.max))) === (parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.min))))) {\n            if (this.orientation === 'Horizontal') {\n                pos = this.element.getBoundingClientRect().width;\n            }\n            else {\n                pos = this.element.getBoundingClientRect().height;\n            }\n        }\n        return pos;\n    };\n    Slider.prototype.checkHandleValue = function (value) {\n        if (this.min === this.max) {\n            return (parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.max)));\n        }\n        var handle = this.tempStartEnd();\n        if (value < handle.start) {\n            value = handle.start;\n        }\n        else if (value > handle.end) {\n            value = handle.end;\n        }\n        return value;\n    };\n    /**\n     * It is used to reposition slider.\n     *\n     * @returns {void}\n     */\n    Slider.prototype.reposition = function () {\n        var _this = this;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.firstHandle)) {\n            this.firstHandle.style.transition = 'none';\n        }\n        if (this.type !== 'Default' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.rangeBar)) {\n            this.rangeBar.style.transition = 'none';\n        }\n        if (this.type === 'Range' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.secondHandle)) {\n            this.secondHandle.style.transition = 'none';\n        }\n        this.handlePos1 = this.checkHandlePosition(this.handleVal1);\n        if (this.handleVal2) {\n            this.handlePos2 = this.checkHandlePosition(this.handleVal2);\n        }\n        if (this.orientation === 'Horizontal') {\n            if (this.enableRtl) {\n                this.firstHandle.style.right = this.handlePos1 + \"px\";\n            }\n            else {\n                this.firstHandle.style.left = this.handlePos1 + \"px\";\n            }\n            if (this.isMaterialTooltip && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.materialHandle)) {\n                if (this.enableRtl) {\n                    this.materialHandle.style.right = this.handlePos1 + \"px\";\n                }\n                else {\n                    this.materialHandle.style.left = this.handlePos1 + \"px\";\n                }\n            }\n            if (this.type === 'MinRange' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.rangeBar)) {\n                if (this.enableRtl) {\n                    this.rangeBar.style.right = '0px';\n                }\n                else {\n                    this.rangeBar.style.left = '0px';\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.rangeBar, { 'width': (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.handlePos1) ? 0 : this.handlePos1 + 'px' });\n            }\n            else if (this.type === 'Range' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.secondHandle) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.rangeBar)) {\n                if (this.enableRtl) {\n                    this.secondHandle.style.right = this.handlePos2 + \"px\";\n                    this.rangeBar.style.right = this.handlePos1 + 'px';\n                }\n                else {\n                    this.secondHandle.style.left = this.handlePos2 + \"px\";\n                    this.rangeBar.style.left = this.handlePos1 + 'px';\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.rangeBar, { 'width': this.handlePos2 - this.handlePos1 + 'px' });\n            }\n        }\n        else {\n            this.firstHandle.style.bottom = this.handlePos1 + \"px\";\n            if (this.isMaterialTooltip) {\n                this.materialHandle.style.bottom = this.handlePos1 + \"px\";\n            }\n            if (this.type === 'MinRange') {\n                this.rangeBar.style.bottom = this.min > this.max ? this.handlePos1 + 'px' : '0px';\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.rangeBar, { 'height': (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.handlePos1) ? 0 : this.min > this.max ? this.element.clientHeight - this.handlePos1 + 'px' : this.handlePos1 + 'px' });\n            }\n            else if (this.type === 'Range') {\n                this.secondHandle.style.bottom = this.handlePos2 + \"px\";\n                this.rangeBar.style.bottom = this.min > this.max ? this.handlePos2 + 'px' : this.handlePos1 + 'px';\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.rangeBar, { 'height': this.min > this.max ? this.handlePos1 - this.handlePos2 + 'px' : this.handlePos2 - this.handlePos1 + 'px' });\n            }\n        }\n        if (this.limits.enabled) {\n            this.setLimitBar();\n        }\n        if (this.ticks.placement !== 'None' && this.ul) {\n            this.removeElement(this.ul);\n            this.ul = undefined;\n            this.renderScale();\n        }\n        this.handleStart();\n        if (!this.tooltip.isVisible) {\n            setTimeout(function () {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.firstHandle)) {\n                    _this.firstHandle.style.transition = _this.scaleTransform;\n                }\n                if (_this.type === 'Range' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.secondHandle)) {\n                    _this.secondHandle.style.transition = _this.scaleTransform;\n                }\n            });\n        }\n        this.refreshTooltip(this.tooltipTarget);\n        this.setBarColor();\n    };\n    Slider.prototype.changeHandleValue = function (value) {\n        var position = null;\n        if (this.activeHandle === 1) {\n            if (!(this.limits.enabled && this.limits.startHandleFixed)) {\n                this.handleVal1 = this.checkHandleValue(value);\n                this.handlePos1 = this.checkHandlePosition(this.handleVal1);\n                if (this.type === 'Range' && ((this.handlePos1 > this.handlePos2 && this.min < this.max) || (this.handlePos1 < this.handlePos2 && this.min > this.max))) {\n                    this.handlePos1 = this.handlePos2;\n                    this.handleVal1 = this.handleVal2;\n                }\n                if (this.handlePos1 !== this.preHandlePos1) {\n                    position = this.preHandlePos1 = this.handlePos1;\n                }\n            }\n            this.modifyZindex();\n        }\n        else {\n            if (!(this.limits.enabled && this.limits.endHandleFixed)) {\n                this.handleVal2 = this.checkHandleValue(value);\n                this.handlePos2 = this.checkHandlePosition(this.handleVal2);\n                if (this.type === 'Range' && ((this.handlePos2 < this.handlePos1 && this.min < this.max) || (this.handlePos2 > this.handlePos1 && this.min > this.max))) {\n                    this.handlePos2 = this.handlePos1;\n                    this.handleVal2 = this.handleVal1;\n                }\n                if (this.handlePos2 !== this.preHandlePos2) {\n                    position = this.preHandlePos2 = this.handlePos2;\n                }\n            }\n            this.modifyZindex();\n        }\n        if (position !== null) {\n            if (this.type !== 'Default') {\n                this.setRangeBar();\n            }\n            this.setHandlePosition(null);\n        }\n    };\n    Slider.prototype.tempStartEnd = function () {\n        if (this.min > this.max) {\n            return {\n                start: this.max,\n                end: this.min\n            };\n        }\n        else {\n            return {\n                start: this.min,\n                end: this.max\n            };\n        }\n    };\n    Slider.prototype.xyToPosition = function (position) {\n        var pos;\n        if (this.min === this.max) {\n            return 100;\n        }\n        if (this.orientation === 'Horizontal') {\n            var left = position.x - this.element.getBoundingClientRect().left;\n            var num = this.element.offsetWidth / 100;\n            this.val = (left / num);\n        }\n        else {\n            var top_1 = position.y - this.element.getBoundingClientRect().top;\n            var num = this.element.offsetHeight / 100;\n            this.val = 100 - (top_1 / num);\n        }\n        var val = this.stepValueCalculation(this.val);\n        if (val < 0) {\n            val = 0;\n        }\n        else if (val > 100) {\n            val = 100;\n        }\n        if (this.enableRtl && this.orientation !== 'Vertical') {\n            val = 100 - val;\n        }\n        if (this.orientation === 'Horizontal') {\n            pos = this.element.getBoundingClientRect().width * (val / 100);\n        }\n        else {\n            pos = this.element.getBoundingClientRect().height * (val / 100);\n        }\n        return pos;\n    };\n    Slider.prototype.stepValueCalculation = function (value) {\n        if (this.step === 0) {\n            this.step = 1;\n        }\n        var percentStep = (parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.step))) / ((parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.max)) - parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.min))) / 100);\n        var remain = value % Math.abs(percentStep);\n        if (remain !== 0) {\n            if ((percentStep / 2) > remain) {\n                value -= remain;\n            }\n            else {\n                value += Math.abs(percentStep) - remain;\n            }\n        }\n        return value;\n    };\n    Slider.prototype.add = function (a, b, addition) {\n        var precision;\n        var x = Math.pow(10, precision || 3);\n        var val;\n        if (addition) {\n            val = (Math.round(a * x) + Math.round(b * x)) / x;\n        }\n        else {\n            val = (Math.round(a * x) - Math.round(b * x)) / x;\n        }\n        return val;\n    };\n    Slider.prototype.positionToValue = function (pos) {\n        var val;\n        var diff = parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.max)) - parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.min));\n        if (this.orientation === 'Horizontal') {\n            val = (pos / this.element.getBoundingClientRect().width) * diff;\n        }\n        else {\n            val = (pos / this.element.getBoundingClientRect().height) * diff;\n        }\n        var total = this.add(val, parseFloat(this.min.toString()), true);\n        return (total);\n    };\n    Slider.prototype.sliderBarClick = function (evt) {\n        evt.preventDefault();\n        var pos;\n        if (evt.type === 'mousedown' || evt.type === 'mouseup' || evt.type === 'click') {\n            pos = { x: evt.clientX, y: evt.clientY };\n        }\n        else if (evt.type === 'touchend' || evt.type === 'touchstart') {\n            pos = { x: evt.changedTouches[0].clientX, y: evt.changedTouches[0].clientY };\n        }\n        var handlepos = this.xyToPosition(pos);\n        var handleVal = this.positionToValue(handlepos);\n        if (this.type === 'Range' && (this.min < (this.max) && (this.handlePos2 - handlepos) < (handlepos - this.handlePos1) || (this.min > this.max) && (this.handlePos1 - handlepos) > (handlepos - this.handlePos2))) {\n            this.activeHandle = 2;\n            if (!(this.limits.enabled && this.limits.endHandleFixed)) {\n                if (this.limits.enabled) {\n                    var value = this.getLimitValueAndPosition(handleVal, this.limits.maxStart, this.limits.maxEnd);\n                    handleVal = value[0];\n                    handlepos = value[1];\n                }\n                this.secondHandle.classList.add(classNames.sliderActiveHandle);\n                this.handlePos2 = this.preHandlePos2 = handlepos;\n                this.handleVal2 = handleVal;\n            }\n            this.modifyZindex();\n            this.secondHandle.focus();\n        }\n        else {\n            this.activeHandle = 1;\n            if (!(this.limits.enabled && this.limits.startHandleFixed)) {\n                if (this.limits.enabled) {\n                    var value = this.getLimitValueAndPosition(handleVal, this.limits.minStart, this.limits.minEnd);\n                    handleVal = value[0];\n                    handlepos = value[1];\n                }\n                this.firstHandle.classList.add(classNames.sliderActiveHandle);\n                this.handlePos1 = this.preHandlePos1 = handlepos;\n                this.handleVal1 = handleVal;\n            }\n            this.modifyZindex();\n            this.firstHandle.focus();\n        }\n        if (this.isMaterialTooltip) {\n            this.tooltipElement.classList.add(classNames.materialTooltipActive);\n        }\n        var focusedElement = this.element.querySelector('.' + classNames.sliderTabHandle);\n        if (focusedElement && this.getHandle() !== focusedElement) {\n            focusedElement.classList.remove(classNames.sliderTabHandle);\n        }\n        var handle = this.activeHandle === 1 ? this.firstHandle : this.secondHandle;\n        var behindElement;\n        if ((evt.type === 'click' || evt.type === 'mousedown') && evt.target === handle) {\n            var eventX = evt.clientX, eventY = evt.clientY;\n            behindElement = document.elementFromPoint(eventX, eventY);\n        }\n        if (!this.checkRepeatedValue(handleVal)) {\n            return;\n        }\n        var transition = (this.isMaterial || this.isMaterial3) && this.tooltip.isVisible ?\n            this.transitionOnMaterialTooltip : this.transition;\n        this.getHandle().style.transition = transition.handle;\n        if (this.type !== 'Default') {\n            this.rangeBar.style.transition = transition.rangeBar;\n        }\n        this.setHandlePosition(evt);\n        if (this.isMaterialTooltip) {\n            this.initialTooltip = false;\n        }\n        if (evt.target !== handle) {\n            this.changeEvent('changed', evt);\n        }\n        if (this.type !== 'Default') {\n            this.setRangeBar();\n        }\n    };\n    Slider.prototype.handleValueAdjust = function (handleValue, assignValue, handleNumber) {\n        if (handleNumber === 1) {\n            this.handleVal1 = assignValue;\n            this.handleVal2 = this.handleVal1 + this.minDiff;\n        }\n        else if (handleNumber === 2) {\n            this.handleVal2 = assignValue;\n            this.handleVal1 = this.handleVal2 - this.minDiff;\n        }\n        this.handlePos1 = this.checkHandlePosition(this.handleVal1);\n        this.handlePos2 = this.checkHandlePosition(this.handleVal2);\n    };\n    Slider.prototype.dragRangeBarMove = function (event) {\n        var _a, _b;\n        if (event.type !== 'touchmove') {\n            event.preventDefault();\n        }\n        this.rangeBarDragged = true;\n        var pos;\n        this.rangeBar.style.transition = 'none';\n        this.firstHandle.style.transition = 'none';\n        this.secondHandle.style.transition = 'none';\n        var xPostion;\n        var yPostion;\n        if (event.type === 'mousemove') {\n            _a = [event.clientX, event.clientY], xPostion = _a[0], yPostion = _a[1];\n        }\n        else {\n            _b = [event.changedTouches[0].clientX, event.changedTouches[0].clientY], xPostion = _b[0], yPostion = _b[1];\n        }\n        if (!(this.limits.enabled && this.limits.startHandleFixed) && !(this.limits.enabled && this.limits.endHandleFixed)) {\n            if (!this.enableRtl) {\n                pos = { x: xPostion - this.firstPartRemain, y: yPostion + this.secondPartRemain };\n            }\n            else {\n                pos = { x: xPostion + this.secondPartRemain, y: yPostion + this.secondPartRemain };\n            }\n            if (this.min > this.max) {\n                this.handlePos2 = this.xyToPosition(pos);\n                this.handleVal2 = this.positionToValue(this.handlePos2);\n            }\n            else {\n                this.handlePos1 = this.xyToPosition(pos);\n                this.handleVal1 = this.positionToValue(this.handlePos1);\n            }\n            if (!this.enableRtl) {\n                pos = { x: xPostion + this.secondPartRemain, y: yPostion - this.firstPartRemain };\n            }\n            else {\n                pos = { x: xPostion - this.firstPartRemain, y: yPostion - this.firstPartRemain };\n            }\n            if (this.min > this.max) {\n                this.handlePos1 = this.xyToPosition(pos);\n                this.handleVal1 = this.positionToValue(this.handlePos1);\n            }\n            else {\n                this.handlePos2 = this.xyToPosition(pos);\n                this.handleVal2 = this.positionToValue(this.handlePos2);\n            }\n            if (this.limits.enabled) {\n                var value = this.getLimitValueAndPosition(this.handleVal1, this.limits.minStart, this.limits.minEnd);\n                this.handleVal1 = value[0];\n                this.handlePos1 = value[1];\n                if (this.handleVal1 === this.limits.minEnd) {\n                    this.handleValueAdjust(this.handleVal1, this.limits.minEnd, 1);\n                }\n                if (this.handleVal1 === this.limits.minStart) {\n                    this.handleValueAdjust(this.handleVal1, this.limits.minStart, 1);\n                }\n                value = this.getLimitValueAndPosition(this.handleVal2, this.limits.maxStart, this.limits.maxEnd);\n                this.handleVal2 = value[0];\n                this.handlePos2 = value[1];\n                if (this.handleVal2 === this.limits.maxStart) {\n                    this.handleValueAdjust(this.handleVal2, this.limits.maxStart, 2);\n                }\n                if (this.handleVal2 === this.limits.maxEnd) {\n                    this.handleValueAdjust(this.handleVal2, this.limits.maxEnd, 2);\n                }\n            }\n            if (this.handleVal2 === (this.min > this.max ? this.min : this.max)) {\n                this.handleValueAdjust(this.handleVal2, (this.min > this.max ? this.min : this.max), 2);\n            }\n            if (this.handleVal1 === (this.min > this.max ? this.max : this.min)) {\n                this.handleValueAdjust(this.handleVal1, (this.min > this.max ? this.max : this.min), 1);\n            }\n        }\n        this.activeHandle = 1;\n        this.setHandlePosition(event);\n        this.activeHandle = 2;\n        this.setHandlePosition(event);\n        this.tooltipToggle(this.rangeBar);\n        this.setRangeBar();\n    };\n    Slider.prototype.sliderBarUp = function (event) {\n        this.changeEvent('changed', event);\n        this.handleFocusOut();\n        this.firstHandle.classList.remove(classNames.sliderActiveHandle);\n        if (this.type === 'Range') {\n            this.initialTooltip = false;\n            this.secondHandle.classList.remove(classNames.sliderActiveHandle);\n        }\n        this.closeTooltip();\n        if (this.isMaterial || this.isMaterial3) {\n            this.getHandle().classList.remove('e-large-thumb-size');\n            if (this.isMaterialTooltip) {\n                this.tooltipElement.classList.remove(classNames.materialTooltipActive);\n            }\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'mousemove touchmove', this.sliderBarMove);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'mouseup touchend', this.sliderBarUp);\n    };\n    Slider.prototype.sliderBarMove = function (evt) {\n        if (evt.type !== 'touchmove') {\n            evt.preventDefault();\n        }\n        var pos;\n        if (evt.type === 'mousemove') {\n            pos = { x: evt.clientX, y: evt.clientY };\n        }\n        else {\n            pos = { x: evt.changedTouches[0].clientX, y: evt.changedTouches[0].clientY };\n        }\n        var handlepos = this.xyToPosition(pos);\n        var handleVal = this.positionToValue(handlepos);\n        handlepos = Math.round(handlepos);\n        if (this.type !== 'Range' && this.activeHandle === 1) {\n            if (!(this.limits.enabled && this.limits.startHandleFixed)) {\n                if (this.limits.enabled) {\n                    var valueAndPostion = this.getLimitValueAndPosition(handleVal, this.limits.minStart, this.limits.minEnd);\n                    handlepos = valueAndPostion[1];\n                    handleVal = valueAndPostion[0];\n                }\n                this.handlePos1 = handlepos;\n                this.handleVal1 = handleVal;\n            }\n            this.firstHandle.classList.add(classNames.sliderActiveHandle);\n        }\n        if (this.type === 'Range') {\n            if (this.activeHandle === 1) {\n                this.firstHandle.classList.add(classNames.sliderActiveHandle);\n                if (!(this.limits.enabled && this.limits.startHandleFixed)) {\n                    if ((this.min < this.max && handlepos > this.handlePos2 || (this.min > this.max && handlepos < this.handlePos2))) {\n                        handlepos = this.handlePos2;\n                        handleVal = this.handleVal2;\n                    }\n                    if (handlepos !== this.preHandlePos1) {\n                        if (this.limits.enabled) {\n                            var value = this.getLimitValueAndPosition(handleVal, this.limits.minStart, this.limits.minEnd);\n                            handleVal = value[0];\n                            handlepos = value[1];\n                        }\n                        this.handlePos1 = this.preHandlePos1 = handlepos;\n                        this.handleVal1 = handleVal;\n                        this.activeHandle = 1;\n                    }\n                }\n            }\n            else if (this.activeHandle === 2) {\n                this.secondHandle.classList.add(classNames.sliderActiveHandle);\n                if (!(this.limits.enabled && this.limits.endHandleFixed)) {\n                    if ((this.min < this.max && handlepos < this.handlePos1) || (this.min > this.max && handlepos > this.handlePos1)) {\n                        handlepos = this.handlePos1;\n                        handleVal = this.handleVal1;\n                    }\n                    if (handlepos !== this.preHandlePos2) {\n                        if (this.limits.enabled) {\n                            var value = this.getLimitValueAndPosition(handleVal, this.limits.maxStart, this.limits.maxEnd);\n                            handleVal = value[0];\n                            handlepos = value[1];\n                        }\n                        this.handlePos2 = this.preHandlePos2 = handlepos;\n                        this.handleVal2 = handleVal;\n                        this.activeHandle = 2;\n                    }\n                }\n            }\n        }\n        if (!this.checkRepeatedValue(handleVal)) {\n            return;\n        }\n        this.getHandle().style.transition = this.scaleTransform;\n        if (this.type !== 'Default') {\n            this.rangeBar.style.transition = 'none';\n        }\n        this.setHandlePosition(evt);\n        if ((this.isMaterial || this.isMaterial3) && !this.tooltip.isVisible &&\n            !this.getHandle().classList.contains(classNames.sliderTabHandle)) {\n            this.materialChange();\n        }\n        this.tooltipToggle(this.getHandle());\n        if (this.type !== 'Default') {\n            this.setRangeBar();\n        }\n    };\n    Slider.prototype.dragRangeBarUp = function (event) {\n        if (!this.rangeBarDragged) {\n            this.focusSliderElement();\n            this.sliderBarClick(event);\n        }\n        else {\n            this.isDragComplete = true;\n        }\n        this.changeEvent('changed', event);\n        this.closeTooltip();\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'mousemove touchmove', this.dragRangeBarMove);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'mouseup touchend', this.dragRangeBarUp);\n        this.rangeBarDragged = false;\n    };\n    Slider.prototype.checkRepeatedValue = function (currentValue) {\n        if (this.type === 'Range') {\n            var previousVal = this.enableRtl && this.orientation !== 'Vertical' ? (this.activeHandle === 1 ?\n                this.previousVal[1] : this.previousVal[0]) :\n                (this.activeHandle === 1 ? this.previousVal[0] : this.previousVal[1]);\n            if (currentValue === previousVal) {\n                return 0;\n            }\n        }\n        else {\n            if (currentValue === this.previousVal) {\n                return 0;\n            }\n        }\n        return 1;\n    };\n    Slider.prototype.refreshTooltip = function (target) {\n        if (this.tooltip.isVisible && this.tooltipObj) {\n            this.tooltipValue();\n            if (target) {\n                this.tooltipObj.refresh(target);\n                this.tooltipTarget = target;\n            }\n        }\n    };\n    Slider.prototype.openTooltip = function (target) {\n        if (this.tooltip.isVisible && this.tooltipObj && !this.isMaterialTooltip) {\n            this.tooltipValue();\n            this.tooltipObj.open(target);\n            this.tooltipTarget = target;\n        }\n    };\n    Slider.prototype.closeTooltip = function () {\n        if (this.tooltip.isVisible && this.tooltipObj && this.tooltip.showOn !== 'Always' && !this.isMaterialTooltip) {\n            this.tooltipValue();\n            this.tooltipObj.close();\n            this.tooltipTarget = undefined;\n        }\n    };\n    Slider.prototype.keyDown = function (event) {\n        switch (event.keyCode) {\n            case 37:\n            case 38:\n            case 39:\n            case 40:\n            case 33:\n            case 34:\n            case 36:\n            case 35:\n                event.preventDefault();\n                this.buttonClick(event);\n                break;\n        }\n    };\n    Slider.prototype.wireButtonEvt = function (destroy) {\n        if (!destroy) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.firstBtn, 'mouseleave touchleave', this.buttonFocusOut, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.secondBtn, 'mouseleave touchleave', this.buttonFocusOut, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.firstBtn, 'mousedown touchstart', this.repeatHandlerMouse, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.firstBtn, 'mouseup mouseleave touchup touchend', this.repeatHandlerUp, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.secondBtn, 'mousedown touchstart', this.repeatHandlerMouse, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.secondBtn, 'mouseup mouseleave touchup touchend', this.repeatHandlerUp, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.firstBtn, 'focusout', this.sliderFocusOut, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.secondBtn, 'focusout', this.sliderFocusOut, this);\n        }\n        else {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.firstBtn, 'mouseleave touchleave', this.buttonFocusOut);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.secondBtn, 'mouseleave touchleave', this.buttonFocusOut);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.firstBtn, 'mousedown touchstart', this.repeatHandlerMouse);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.firstBtn, 'mouseup mouseleave touchup touchend', this.repeatHandlerUp);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.secondBtn, 'mousedown touchstart', this.repeatHandlerMouse);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.secondBtn, 'mouseup mouseleave touchup touchend', this.repeatHandlerUp);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.firstBtn, 'focusout', this.sliderFocusOut);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.secondBtn, 'focusout', this.sliderFocusOut);\n        }\n    };\n    Slider.prototype.rangeBarMousedown = function (event) {\n        var _a, _b;\n        event.preventDefault();\n        this.focusSliderElement();\n        if (this.type === 'Range' && this.drag && event.target === this.rangeBar) {\n            var xPostion = void 0;\n            var yPostion = void 0;\n            if (event.type === 'mousedown') {\n                _a = [event.clientX, event.clientY], xPostion = _a[0], yPostion = _a[1];\n            }\n            else if (event.type === 'touchstart') {\n                _b = [event.changedTouches[0].clientX, event.changedTouches[0].clientY], xPostion = _b[0], yPostion = _b[1];\n            }\n            if (this.orientation === 'Horizontal') {\n                this.firstPartRemain = xPostion - this.rangeBar.getBoundingClientRect().left;\n                this.secondPartRemain = this.rangeBar.getBoundingClientRect().right - xPostion;\n            }\n            else {\n                this.firstPartRemain = yPostion - this.rangeBar.getBoundingClientRect().top;\n                this.secondPartRemain = this.rangeBar.getBoundingClientRect().bottom - yPostion;\n            }\n            this.minDiff = this.handleVal2 - this.handleVal1;\n            this.tooltipToggle(this.rangeBar);\n            var focusedElement = this.element.querySelector('.' + classNames.sliderTabHandle);\n            if (focusedElement) {\n                focusedElement.classList.remove(classNames.sliderTabHandle);\n            }\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'mousemove touchmove', this.dragRangeBarMove, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'mouseup touchend', this.dragRangeBarUp, this);\n        }\n    };\n    Slider.prototype.elementClick = function (event) {\n        if (this.isDragComplete) {\n            this.isDragComplete = false;\n            return;\n        }\n        event.preventDefault();\n        this.focusSliderElement();\n        this.sliderBarClick(event);\n        this.focusHandle();\n    };\n    Slider.prototype.wireEvents = function () {\n        this.onresize = this.reposition.bind(this);\n        window.addEventListener('resize', this.onresize);\n        if (this.enabled && !this.readonly) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'click', this.elementClick, this);\n            if (this.type === 'Range' && this.drag) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.rangeBar, 'mousedown touchstart', this.rangeBarMousedown, this);\n            }\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.sliderContainer, 'keydown', this.keyDown, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.sliderContainer, 'keyup', this.keyUp, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'focusout', this.sliderFocusOut, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.sliderContainer, 'mouseover mouseout touchstart touchend', this.hover, this);\n            this.wireFirstHandleEvt(false);\n            if (this.type === 'Range') {\n                this.wireSecondHandleEvt(false);\n            }\n            if (this.showButtons) {\n                this.wireButtonEvt(false);\n            }\n            this.wireMaterialTooltipEvent(false);\n            if (this.isForm) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.formElement, 'reset', this.formResetHandler, this);\n            }\n        }\n    };\n    Slider.prototype.unwireEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'click', this.elementClick);\n        if (this.type === 'Range' && this.drag) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.rangeBar, 'mousedown touchstart', this.rangeBarMousedown);\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.sliderContainer, 'keydown', this.keyDown);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.sliderContainer, 'keyup', this.keyUp);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'focusout', this.sliderFocusOut);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.sliderContainer, 'mouseover mouseout touchstart touchend', this.hover);\n        this.wireFirstHandleEvt(true);\n        if (this.type === 'Range') {\n            this.wireSecondHandleEvt(true);\n        }\n        if (this.showButtons) {\n            this.wireButtonEvt(true);\n        }\n        this.wireMaterialTooltipEvent(true);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'reset', this.formResetHandler);\n    };\n    Slider.prototype.formResetHandler = function () {\n        this.setProperties({ 'value': this.formResetValue }, true);\n        this.setValue();\n    };\n    Slider.prototype.keyUp = function (event) {\n        if (event.keyCode === 9 && event.target.classList.contains(classNames.sliderHandle)) {\n            this.focusSliderElement();\n            if (!event.target.classList.contains(classNames.sliderTabHandle)) {\n                if (this.element.querySelector('.' + classNames.sliderTabHandle)) {\n                    this.element.querySelector('.' + classNames.sliderTabHandle).classList.remove(classNames.sliderTabHandle);\n                }\n                event.target.classList.add(classNames.sliderTabHandle);\n                var parentElement = event.target.parentElement;\n                if (parentElement === this.element) {\n                    parentElement.querySelector('.' + classNames.sliderTrack).classList.add(classNames.sliderTabTrack);\n                    if (this.type === 'Range' || this.type === 'MinRange') {\n                        parentElement.querySelector('.' + classNames.rangeBar).classList.add(classNames.sliderTabRange);\n                    }\n                }\n                if (this.type === 'Range') {\n                    var previousSibling = event.target.previousSibling;\n                    if (previousSibling && previousSibling.classList.contains(classNames.sliderHandle)) {\n                        this.activeHandle = 2;\n                    }\n                    else {\n                        this.activeHandle = 1;\n                    }\n                }\n                this.getHandle().focus();\n                this.tooltipToggle(this.getHandle());\n            }\n        }\n        this.closeTooltip();\n        this.changeEvent('changed', event);\n    };\n    Slider.prototype.hover = function (event) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(event)) {\n            if (event.type === 'mouseover' || event.type === 'touchmove' || event.type === 'mousemove' ||\n                event.type === 'pointermove' || event.type === 'touchstart') {\n                this.sliderContainer.classList.add(classNames.sliderHover);\n            }\n            else {\n                this.sliderContainer.classList.remove(classNames.sliderHover);\n                var curTarget = event.currentTarget;\n                if (this.tooltip.isVisible && this.tooltip.showOn !== 'Always' && this.tooltipObj && this.isMaterialTooltip &&\n                    !curTarget.classList.contains(classNames.sliderHandleFocused) &&\n                    !curTarget.classList.contains(classNames.sliderTabHandle)) {\n                    this.closeMaterialTooltip();\n                }\n            }\n        }\n    };\n    Slider.prototype.sliderFocusOut = function (event) {\n        if (event.relatedTarget !== this.secondHandle && event.relatedTarget !== this.firstHandle &&\n            event.relatedTarget !== this.element && event.relatedTarget !== this.firstBtn && event.relatedTarget !== this.secondBtn) {\n            this.closeMaterialTooltip();\n            this.closeTooltip();\n            if (this.element.querySelector('.' + classNames.sliderTabHandle)) {\n                this.element.querySelector('.' + classNames.sliderTabHandle).classList.remove(classNames.sliderTabHandle);\n            }\n            if (this.element.querySelector('.' + classNames.sliderTabTrack)) {\n                this.element.querySelector('.' + classNames.sliderTabTrack).classList.remove(classNames.sliderTabTrack);\n                if ((this.type === 'Range' || this.type === 'MinRange') &&\n                    this.element.querySelector('.' + classNames.sliderTabRange)) {\n                    this.element.querySelector('.' + classNames.sliderTabRange).classList.remove(classNames.sliderTabRange);\n                }\n            }\n            this.hiddenInput.focus();\n            this.hiddenInput.blur();\n            this.isElementFocused = false;\n        }\n    };\n    Slider.prototype.removeElement = function (element) {\n        if (element.parentNode) {\n            element.parentNode.removeChild(element);\n        }\n    };\n    Slider.prototype.changeSliderType = function (type, args) {\n        if (this.isMaterialTooltip && this.materialHandle) {\n            this.sliderContainer.classList.remove(classNames.materialSlider);\n            this.removeElement(this.materialHandle);\n            this.materialHandle = undefined;\n        }\n        this.removeElement(this.firstHandle);\n        this.firstHandle = undefined;\n        if (type !== 'Default') {\n            if (type === 'Range') {\n                this.removeElement(this.secondHandle);\n                this.secondHandle = undefined;\n            }\n            this.removeElement(this.rangeBar);\n            this.rangeBar = undefined;\n        }\n        if (this.tooltip.isVisible && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.tooltipObj)) {\n            this.tooltipObj.destroy();\n            this.tooltipElement = undefined;\n            this.tooltipCollidedPosition = undefined;\n        }\n        if (this.limits.enabled) {\n            if (type === 'MinRange' || type === 'Default') {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.limitBarFirst)) {\n                    this.removeElement(this.limitBarFirst);\n                    this.limitBarFirst = undefined;\n                }\n            }\n            else {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.limitBarSecond)) {\n                    this.removeElement(this.limitBarSecond);\n                    this.limitBarSecond = undefined;\n                }\n            }\n        }\n        this.activeHandle = 1;\n        this.getThemeInitialization();\n        if (this.type === 'Range') {\n            this.rangeValueUpdate();\n        }\n        this.createRangeBar();\n        if (this.limits.enabled) {\n            this.createLimitBar();\n        }\n        this.setHandler();\n        this.setOrientClass();\n        this.wireFirstHandleEvt(!this.enabled);\n        if (this.type === 'Range') {\n            this.wireSecondHandleEvt(!this.enabled);\n        }\n        this.setValue();\n        if (this.tooltip.isVisible) {\n            this.renderTooltip();\n            this.wireMaterialTooltipEvent(false);\n        }\n        this.setBarColor();\n        if (args !== 'tooltip') {\n            this.updateConfig();\n        }\n        if (this.readonly) {\n            this.sliderContainer.classList.remove(classNames.readonly);\n            this.setReadOnly();\n        }\n    };\n    Slider.prototype.changeRtl = function () {\n        if (!this.enableRtl && this.type === 'Range') {\n            this.value = [this.handleVal2, this.handleVal1];\n        }\n        this.updateConfig();\n        if (this.tooltip.isVisible) {\n            this.tooltipObj.refresh(this.firstHandle);\n        }\n        if (this.showButtons) {\n            var enabledRTL = this.enableRtl && this.orientation !== 'Vertical';\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(enabledRTL ? this.secondBtn : this.firstBtn, { 'aria-label': 'Decrease', title: 'Decrease' });\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(enabledRTL ? this.firstBtn : this.secondBtn, { 'aria-label': 'Increase', title: 'Increase' });\n        }\n    };\n    Slider.prototype.changeOrientation = function () {\n        this.changeSliderType(this.type, 'null');\n    };\n    Slider.prototype.updateConfig = function () {\n        this.setEnableRTL();\n        this.setValue();\n        if (this.tooltip.isVisible) {\n            this.refreshTooltip(this.tooltipTarget);\n        }\n        if (this.ticks.placement !== 'None') {\n            if (this.ul) {\n                this.removeElement(this.ul);\n                this.ul = undefined;\n                this.renderScale();\n            }\n        }\n        this.limitsPropertyChange();\n    };\n    Slider.prototype.limitsPropertyChange = function () {\n        if (this.limits.enabled) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.limitBarFirst) && this.type !== 'Range') {\n                this.createLimitBar();\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.limitBarFirst) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.limitBarSecond) && this.type === 'Range') {\n                this.createLimitBar();\n            }\n            this.setLimitBar();\n            this.setValue();\n        }\n        else {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.limitBarFirst)) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.limitBarFirst);\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.limitBarSecond)) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.limitBarSecond);\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Slider.prototype.getPersistData = function () {\n        var keyEntity = ['value'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers.\n     * Also it removes the attributes and classes.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Slider.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.unwireEvents();\n        window.removeEventListener('resize', this.onresize);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.sliderContainer], [classNames.sliderDisabled]);\n        this.firstHandle.removeAttribute('aria-orientation');\n        if (this.type === 'Range') {\n            this.secondHandle.removeAttribute('aria-orientation');\n        }\n        if (this.sliderContainer.parentNode) {\n            this.sliderContainer.parentNode.insertBefore(this.element, this.sliderContainer);\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.sliderContainer);\n        if (this.tooltip.isVisible) {\n            this.tooltipObj.destroy();\n        }\n        this.element.innerHTML = '';\n        this.hiddenInput = null;\n        this.sliderContainer = null;\n        this.sliderTrack = null;\n        this.rangeBar = null;\n        this.firstHandle = null;\n        this.secondHandle = null;\n        this.tickElementCollection = null;\n        this.ul = null;\n        this.firstBtn = null;\n        this.secondBtn = null;\n        this.materialHandle = null;\n        this.tooltipObj = null;\n        this.tooltipTarget = null;\n        this.limitBarFirst = null;\n        this.limitBarSecond = null;\n        this.firstChild = null;\n        this.lastChild = null;\n        this.tooltipElement = null;\n    };\n    /**\n     * Calls internally if any of the property value is changed.\n     *\n     * @param {SliderModel} newProp - Specifies the new properties\n     * @param {SliderModel} oldProp - Specifies the old properties\n     * @returns {void}\n     * @private\n     */\n    Slider.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'cssClass':\n                    this.setCSSClass(oldProp.cssClass);\n                    break;\n                case 'value':\n                    if (newProp && oldProp) {\n                        var value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.value) ?\n                            (this.type === 'Range' ? [this.min, this.max] : this.min) : newProp.value;\n                        this.setProperties({ 'value': value }, true);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(oldProp.value) && oldProp.value.toString() !== value.toString()) {\n                            this.setValue();\n                            this.refreshTooltip(this.tooltipTarget);\n                            if (this.type === 'Range') {\n                                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.value) || oldProp.value[1] === value[1]) {\n                                    this.activeHandle = 1;\n                                }\n                                else {\n                                    this.activeHandle = 2;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'min':\n                case 'step':\n                case 'max':\n                    this.setMinMaxValue();\n                    break;\n                case 'tooltip':\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.tooltip) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(oldProp.tooltip)) {\n                        this.initialTooltip = true;\n                        this.setTooltip(prop);\n                        if (!this.showButtons) {\n                            this.wireEvents();\n                        }\n                    }\n                    break;\n                case 'type':\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(oldProp) && Object.keys(oldProp).length\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(oldProp.type)) {\n                        this.changeSliderType(oldProp.type, prop);\n                        this.setZindex();\n                    }\n                    break;\n                case 'enableRtl':\n                    if (oldProp.enableRtl !== newProp.enableRtl && this.orientation !== 'Vertical') {\n                        this.rtl = oldProp.enableRtl;\n                        this.changeRtl();\n                    }\n                    break;\n                case 'limits':\n                    this.limitsPropertyChange();\n                    break;\n                case 'orientation':\n                    this.changeOrientation();\n                    break;\n                case 'ticks':\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.sliderContainer.querySelector('.' + classNames.scale))) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.ul);\n                        Array.prototype.forEach.call(this.sliderContainer.classList, function (className) {\n                            if (className.match(/e-scale-/)) {\n                                _this.sliderContainer.classList.remove(className);\n                            }\n                        });\n                    }\n                    if (this.ticks.placement !== 'None') {\n                        this.renderScale();\n                        this.setZindex();\n                    }\n                    break;\n                case 'locale':\n                    if (this.showButtons) {\n                        this.buttonTitle();\n                    }\n                    break;\n                case 'showButtons':\n                    if (newProp.showButtons) {\n                        this.setButtons();\n                        this.reposition();\n                        if (this.enabled && !this.readonly) {\n                            this.wireButtonEvt(false);\n                        }\n                    }\n                    else {\n                        if (this.firstBtn && this.secondBtn) {\n                            this.sliderContainer.removeChild(this.firstBtn);\n                            this.sliderContainer.removeChild(this.secondBtn);\n                            this.sliderContainer.classList.remove(classNames.sliderButtonClass);\n                            this.firstBtn = undefined;\n                            this.secondBtn = undefined;\n                            this.reposition();\n                        }\n                    }\n                    break;\n                case 'enabled':\n                    this.setEnabled();\n                    break;\n                case 'readonly':\n                    this.setReadOnly();\n                    break;\n                case 'customValues':\n                    this.setValue();\n                    this.reposition();\n                    break;\n                case 'colorRange':\n                    this.reposition();\n                    break;\n                case 'width':\n                    this.setElementWidth(newProp.width);\n                    this.setMinMaxValue();\n                    if (this.limits) {\n                        this.limitsPropertyChange();\n                    }\n                    break;\n            }\n        }\n    };\n    Slider.prototype.setReadOnly = function () {\n        if (this.readonly) {\n            this.unwireEvents();\n            this.sliderContainer.classList.add(classNames.readonly);\n        }\n        else {\n            this.wireEvents();\n            this.sliderContainer.classList.remove(classNames.readonly);\n        }\n    };\n    Slider.prototype.setMinMaxValue = function () {\n        var _this = this;\n        this.setValue();\n        this.refreshTooltip(this.tooltipTarget);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.sliderContainer.querySelector('.' + classNames.scale))) {\n            if (this.ul) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.ul);\n                Array.prototype.forEach.call(this.sliderContainer.classList, function (className) {\n                    if (className.match(/e-scale-/)) {\n                        _this.sliderContainer.classList.remove(className);\n                    }\n                });\n            }\n        }\n        if (this.ticks.placement !== 'None') {\n            this.renderScale();\n            this.setZindex();\n        }\n    };\n    Slider.prototype.setZindex = function () {\n        this.zIndex = 6;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.ticks) && this.ticks.placement !== 'None' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.ul) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element)) {\n            this.ul.style.zIndex = (this.zIndex + -7) + '';\n            this.element.style.zIndex = (this.zIndex + 2) + '';\n        }\n        if (!this.isMaterial && !this.isMaterial3 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.ticks) && this.ticks.placement === 'Both') {\n            this.element.style.zIndex = (this.zIndex + 2) + '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.firstHandle)) {\n            this.firstHandle.style.zIndex = (this.zIndex + 3) + '';\n        }\n        if (this.type === 'Range' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.secondHandle)) {\n            this.secondHandle.style.zIndex = (this.zIndex + 4) + '';\n        }\n    };\n    Slider.prototype.setTooltip = function (args) {\n        this.changeSliderType(this.type, args);\n    };\n    Slider.prototype.setBarColor = function () {\n        var trackPosition;\n        var trackClassName;\n        var child = this.sliderTrack.lastElementChild;\n        while (child) {\n            this.sliderTrack.removeChild(child);\n            child = this.sliderTrack.lastElementChild;\n        }\n        for (var i = 0; i < this.colorRange.length; i++) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.colorRange[i].start) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.colorRange[i].end)) {\n                if (this.colorRange[i].end > this.colorRange[i].start) {\n                    if (this.colorRange[i].start < this.min) {\n                        this.colorRange[i].start = this.min;\n                    }\n                    if (this.colorRange[i].end > this.max) {\n                        this.colorRange[i].end = this.max;\n                    }\n                    var startingPosition = this.checkHandlePosition(this.colorRange[i].start);\n                    var endPosition = this.checkHandlePosition(this.colorRange[i].end);\n                    var trackContainer = this.createElement('div');\n                    trackContainer.style.backgroundColor = this.colorRange[i].color;\n                    trackContainer.style.border = '1px solid ' + this.colorRange[i].color;\n                    if (this.orientation === 'Horizontal') {\n                        trackClassName = classNames.sliderHorizantalColor;\n                        if (this.enableRtl) {\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.customValues)) {\n                                trackPosition =\n                                    this.checkHandlePosition(this.max) - this.checkHandlePosition(this.colorRange[i].end);\n                            }\n                            else {\n                                trackPosition = this.checkHandlePosition(this.customValues.length - this.colorRange[i].end - 1);\n                            }\n                        }\n                        else {\n                            trackPosition = this.checkHandlePosition(this.colorRange[i].start);\n                        }\n                        trackContainer.style.width = endPosition - startingPosition + 'px';\n                        trackContainer.style.left = trackPosition + 'px';\n                    }\n                    else {\n                        trackClassName = classNames.sliderVerticalColor;\n                        trackPosition = this.checkHandlePosition(this.colorRange[i].start);\n                        trackContainer.style.height = endPosition - startingPosition + 'px';\n                        trackContainer.style.bottom = trackPosition + 'px';\n                    }\n                    trackContainer.classList.add(trackClassName);\n                    this.sliderTrack.appendChild(trackContainer);\n                }\n            }\n        }\n    };\n    /**\n     * Gets the component name\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Slider.prototype.getModuleName = function () {\n        return 'slider';\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Slider.prototype, \"value\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Slider.prototype, \"customValues\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1)\n    ], Slider.prototype, \"step\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Slider.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], Slider.prototype, \"min\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(100)\n    ], Slider.prototype, \"max\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Slider.prototype, \"readonly\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Default')\n    ], Slider.prototype, \"type\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([{}], ColorRangeData)\n    ], Slider.prototype, \"colorRange\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, TicksData)\n    ], Slider.prototype, \"ticks\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, LimitData)\n    ], Slider.prototype, \"limits\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Slider.prototype, \"enabled\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, TooltipData)\n    ], Slider.prototype, \"tooltip\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Slider.prototype, \"showButtons\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Slider.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Horizontal')\n    ], Slider.prototype, \"orientation\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Slider.prototype, \"cssClass\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Slider.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Slider.prototype, \"created\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Slider.prototype, \"change\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Slider.prototype, \"changed\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Slider.prototype, \"renderingTicks\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Slider.prototype, \"renderedTicks\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Slider.prototype, \"tooltipChange\", void 0);\n    Slider = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], Slider);\n    return Slider;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-inputs/src/slider/slider.js?");

/***/ })

}]);