"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-maps_src_maps_maps_js-0bb29fcf"],{

/***/ "./node_modules/@syncfusion/ej2-maps/src/maps/maps.js":
/*!************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-maps/src/maps/maps.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Maps: () => (/* binding */ Maps)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-svg-base */ \"./node_modules/@syncfusion/ej2-svg-base/index.js\");\n/* harmony import */ var _utils_helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../maps/utils/helper */ \"./node_modules/@syncfusion/ej2-maps/src/maps/utils/helper.js\");\n/* harmony import */ var _model_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./model/base */ \"./node_modules/@syncfusion/ej2-maps/src/maps/model/base.js\");\n/* harmony import */ var _model_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./model/constants */ \"./node_modules/@syncfusion/ej2-maps/src/maps/model/constants.js\");\n/* harmony import */ var _model_theme__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./model/theme */ \"./node_modules/@syncfusion/ej2-maps/src/maps/model/theme.js\");\n/* harmony import */ var _layers_layer_panel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./layers/layer-panel */ \"./node_modules/@syncfusion/ej2-maps/src/maps/layers/layer-panel.js\");\n/* harmony import */ var _maps_user_interaction_annotation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../maps/user-interaction/annotation */ \"./node_modules/@syncfusion/ej2-maps/src/maps/user-interaction/annotation.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./index */ \"./node_modules/@syncfusion/ej2-maps/src/maps/index.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"./node_modules/@syncfusion/ej2-data/index.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps Component file\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Represents the maps control. It is ideal for rendering maps from GeoJSON data or other map providers like OpenStreetMap, Google Maps, Bing Maps, etc that\n * has rich feature set that includes markers, labels, bubbles and much more.\n * ```html\n * <div id=\"maps\"/>\n * <script>\n *   var maps = new Maps();\n *   maps.appendTo(\"#maps\");\n * </script>\n * ```\n */\nvar Maps = /** @class */ (function (_super) {\n    __extends(Maps, _super);\n    /**\n     * Constructor for creating the widget.\n     *\n     * @param {MapsModel} options Specifies the options\n     * @param {string | HTMLElement} element Specifies the element\n     */\n    function Maps(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**\n         * Check layer whether is geometry or tile.\n         *\n         * @private\n         */\n        _this.isTileMap = false;\n        /**\n         * Resize the map\n         *\n         * @private\n         */\n        _this.isResize = false;\n        /**\n         * @private\n         */\n        _this.isReset = false;\n        /** @private */\n        _this.baseSize = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Size(0, 0);\n        /** @public */\n        _this.translatePoint = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Point(0, 0);\n        /** @private */\n        _this.baseTranslatePoint = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Point(0, 0);\n        /** @public */\n        _this.zoomTranslatePoint = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Point(0, 0);\n        /** @private */\n        _this.markerZoomedState = true;\n        /** @private */\n        _this.zoomPersistence = false;\n        /** @private */\n        _this.defaultState = true;\n        /** @private */\n        _this.centerPositionChanged = false;\n        /** @private */\n        _this.markerNullCount = 0;\n        /** @private */\n        _this.tileTranslatePoint = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Point(0, 0);\n        /** @private */\n        _this.baseTileTranslatePoint = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Point(0, 0);\n        /** @private */\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        _this.isDevice = false;\n        /** @private */\n        _this.staticMapZoom = _this.zoomSettings.enable ? _this.zoomSettings.zoomFactor : 0;\n        /** @private */\n        _this.zoomNotApplied = false;\n        /** @public */\n        _this.dataLabelShape = [];\n        _this.zoomShapeCollection = [];\n        _this.zoomLabelPositions = [];\n        _this.mouseDownEvent = { x: null, y: null };\n        _this.mouseClickEvent = { x: null, y: null };\n        /** @private */\n        _this.selectedElementId = [];\n        /** @private */\n        _this.selectedMarkerElementId = [];\n        /** @private */\n        _this.selectedBubbleElementId = [];\n        /** @private */\n        _this.selectedNavigationElementId = [];\n        /** @private */\n        _this.selectedPolygonElementId = [];\n        /** @private */\n        _this.selectedLegendElementId = [];\n        /** @private */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _this.legendSelectionCollection = [];\n        /** @private */\n        _this.shapeSelections = true;\n        /** @private */\n        _this.legendSelection = true;\n        /** @private */\n        _this.toggledLegendId = [];\n        /** @private */\n        _this.toggledElementId = [];\n        /** @private */\n        _this.checkInitialRender = true;\n        /** @private */\n        _this.initialTileTranslate = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Point(0, 0);\n        /** @private */\n        _this.isMarkerZoomCompleted = false;\n        /** @private */\n        _this.markerDragId = '';\n        /** @private */\n        _this.initialCheck = true;\n        /** @private */\n        _this.applyZoomReset = false;\n        /** @private */\n        _this.markerClusterExpandCheck = false;\n        /** @private */\n        _this.markerClusterExpand = false;\n        /** @private */\n        _this.mouseMoveId = '';\n        /** @private */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _this.shapeSelectionItem = [];\n        /** @private */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _this.markerDragArgument = null;\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)('mergePersistData', _this.mergePersistMapsData, _this);\n        return _this;\n    }\n    Object.defineProperty(Maps.prototype, \"isShapeSelected\", {\n        /**\n         *\n         * Specifies whether the shape is selected in the maps or not.\n         *\n         * @returns {boolean} - Returns a boolean value to specify whether the shape is selected in the maps or not.\n         */\n        get: function () {\n            return this.mapSelect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To manage persist maps data.\n     *\n     * @returns {void}\n     */\n    Maps.prototype.mergePersistMapsData = function () {\n        var data;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var windowData;\n        try {\n            windowData = window.localStorage;\n        }\n        catch (e) {\n            windowData = null;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(windowData)) {\n            data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        }\n        if (!((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(data) || (data === ''))) {\n            var dataObj = JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof this[key] === 'object') && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this[key])) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(this[key], dataObj[key]);\n                }\n                else {\n                    this[key] = dataObj[key];\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /**\n     * Gets the localized label by locale keyword.\n     *\n     * @param  {string} key - Specifies the key\n     * @returns {string} - Returns the string value\n     * @private\n     */\n    Maps.prototype.getLocalizedLabel = function (key) {\n        return this.localeObject.getConstant(key);\n    };\n    /**\n     * Initializing pre-required values.\n     *\n     * @returns {void}\n     */\n    Maps.prototype.preRender = function () {\n        this.isDevice = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice;\n        this.initPrivateVariable();\n        this.allowServerDataBinding = false;\n        this.unWireEVents();\n        this.wireEVents();\n        this.setCulture();\n    };\n    Maps.prototype.renderElements = function () {\n        if (!this.isDestroyed) {\n            this.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_4__.load, { maps: this });\n            this.createSVG();\n            this.findBaseAndSubLayers();\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.markerModule) && this.markerModule.getMapsInstance()) {\n                this.markerModule.initializeMarkerClusterList();\n            }\n            this.createSecondaryElement();\n            this.addTabIndex();\n            this.themeStyle = (0,_model_theme__WEBPACK_IMPORTED_MODULE_5__.getThemeStyle)(this.theme);\n            this.renderBorder();\n            this.renderTitle(this.titleSettings, 'title', null, null);\n            this.renderArea();\n            this.processRequestJsonData();\n            this.renderComplete();\n            this.isAddLayer = !this.isTileMap ? false : this.isAddLayer;\n        }\n    };\n    /**\n     * To Initialize the control rendering.\n     *\n     * @returns {void}\n     */\n    Maps.prototype.render = function () {\n        this.renderElements();\n    };\n    Maps.prototype.processRequestJsonData = function () {\n        var _this = this;\n        var length = this.layersCollection.length - 1;\n        this.serverProcess = { request: 0, response: 0 };\n        var queryModule;\n        var dataModule;\n        Array.prototype.forEach.call(this.layersCollection, function (layer, layerIndex) {\n            if (layer.shapeData instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__.DataManager) {\n                _this.serverProcess['request']++;\n                dataModule = layer.shapeData;\n                queryModule = layer.query instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__.Query ? layer.query : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__.Query();\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var dataManager = dataModule.executeQuery(queryModule);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                dataManager.then(function (e) {\n                    _this.processResponseJsonData('DataManager', e, layer, 'ShapeData');\n                });\n            }\n            else if (layer.shapeData instanceof _utils_helper__WEBPACK_IMPORTED_MODULE_2__.MapAjax || layer.shapeData) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(layer.shapeData['dataOptions'])) {\n                    _this.processAjaxRequest(layer, layer.shapeData, 'ShapeData');\n                }\n            }\n            if (layer.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__.DataManager) {\n                _this.serverProcess['request']++;\n                dataModule = layer.dataSource;\n                queryModule = layer.query instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__.Query ? layer.query : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__.Query();\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var dataManager = dataModule.executeQuery(queryModule);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                dataManager.then(function (e) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    layer.dataSource = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.processResult)(e);\n                });\n            }\n            if (layer.markerSettings.length > 0) {\n                var _loop_1 = function (i) {\n                    if (layer.markerSettings[i].dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__.DataManager) {\n                        _this.serverProcess['request']++;\n                        dataModule = layer.markerSettings[i].dataSource;\n                        queryModule = layer.markerSettings[i].query instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__.Query ?\n                            layer.markerSettings[i].query : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__.Query();\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        var dataManager = dataModule.executeQuery(queryModule);\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        dataManager.then(function (e) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            layer.markerSettings[i].dataSource = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.processResult)(e);\n                        });\n                    }\n                };\n                for (var i = 0; i < layer.markerSettings.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            if (layer.bubbleSettings.length > 0) {\n                var _loop_2 = function (i) {\n                    if (layer.bubbleSettings[i].dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__.DataManager) {\n                        _this.serverProcess['request']++;\n                        dataModule = layer.bubbleSettings[i].dataSource;\n                        queryModule = layer.bubbleSettings[i].query instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__.Query ?\n                            layer.bubbleSettings[i].query : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__.Query();\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        var dataManager = dataModule.executeQuery(queryModule);\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        dataManager.then(function (e) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            layer.bubbleSettings[i].dataSource = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.processResult)(e);\n                        });\n                    }\n                };\n                for (var i = 0; i < layer.bubbleSettings.length; i++) {\n                    _loop_2(i);\n                }\n            }\n            if (layer.dataSource instanceof _utils_helper__WEBPACK_IMPORTED_MODULE_2__.MapAjax || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(layer.dataSource) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(layer.dataSource['dataOptions']))) {\n                _this.processAjaxRequest(layer, layer.dataSource, 'DataSource');\n            }\n            if (_this.serverProcess['request'] === _this.serverProcess['response'] && length === layerIndex) {\n                _this.processResponseJsonData(null);\n            }\n        });\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Maps.prototype.processAjaxRequest = function (layer, localAjax, type) {\n        var _this = this;\n        this.serverProcess['request']++;\n        var fetchApiModule = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Fetch(localAjax.dataOptions, localAjax.type, localAjax.contentType);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fetchApiModule.onSuccess = function (args) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.type) && args.type === 'application/octet-stream') {\n                var reader_1 = new FileReader();\n                //eslint-disable-next-line @typescript-eslint/no-this-alias\n                var map_1 = _this;\n                // eslint-disable-next-line @typescript-eslint/tslint/config\n                reader_1.onload = function () {\n                    args = JSON.parse(reader_1.result.toString());\n                    map_1.processResponseJsonData('Fetch', args, layer, type);\n                };\n                reader_1.readAsText(args);\n            }\n            else {\n                _this.processResponseJsonData('Fetch', args, layer, type);\n            }\n        };\n        fetchApiModule.send(localAjax.sendData);\n    };\n    /**\n     * This method is used to process the JSON data to render the maps.\n     *\n     * @param {string} processType - Specifies the process type in maps.\n     * @param {any | string} data - Specifies the data for maps.\n     * @param {LayerSettings} layer - Specifies the layer for the maps.\n     * @param {string} dataType - Specifies the data type for maps.\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.processResponseJsonData = function (processType, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, layer, dataType) {\n        this.serverProcess['response']++;\n        if (processType) {\n            if (dataType === 'ShapeData') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                layer.shapeData = (processType === 'DataManager') ? (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.processResult)(data) : data;\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                layer.dataSource = (processType === 'DataManager') ? (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.processResult)(data) : data;\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(processType) && this.serverProcess['request'] === this.serverProcess['response']) {\n            var collection = this.layersCollection;\n            this.layersCollection = [];\n            for (var i = 0; i < collection.length; i++) {\n                if (collection[i].isBaseLayer) {\n                    this.layersCollection.push(collection[i]);\n                }\n            }\n            for (var j = 0; j < collection.length; j++) {\n                if (!collection[j].isBaseLayer) {\n                    this.layersCollection.push(collection[j]);\n                }\n            }\n            this.renderMap();\n        }\n        else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(processType)) {\n            this.renderMap();\n        }\n    };\n    Maps.prototype.renderMap = function () {\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.renderLegend();\n        }\n        this.createTile();\n        if (this.zoomSettings.enable && this.zoomModule) {\n            this.zoomModule.createZoomingToolbars();\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dataLabelModule)) {\n            this.dataLabelModule.dataLabelCollections = [];\n        }\n        this.mapLayerPanel.measureLayerPanel();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.svgObject)) {\n            this.element.appendChild(this.svgObject);\n        }\n        this.setSecondaryElementPosition();\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].selectionSettings && this.layers[i].selectionSettings.enable &&\n                this.layers[i].initialShapeSelection.length > 0 && this.checkInitialRender) {\n                var checkSelection = this.layers[i].selectionSettings.enableMultiSelect;\n                this.layers[i].selectionSettings.enableMultiSelect = checkSelection ? checkSelection : true;\n                var shapeSelection = this.layers[i].initialShapeSelection;\n                for (var j = 0; j < this.layers[i].initialShapeSelection.length; j++) {\n                    this.shapeSelection(i, shapeSelection[j].shapePath, shapeSelection[j].shapeValue, true);\n                }\n                this.layers[i].selectionSettings.enableMultiSelect = checkSelection;\n                if (i === this.layers.length - 1) {\n                    this.checkInitialRender = false;\n                }\n            }\n            if (!this.isResize) {\n                for (var k = 0; k < this.layers[i].markerSettings.length; k++) {\n                    // eslint-disable-next-line max-len\n                    if (this.layers[i].markerSettings[k].selectionSettings && this.layers[i].markerSettings[k].selectionSettings.enable\n                        && this.layers[i].markerSettings[k].initialMarkerSelection.length > 0) {\n                        var markerSelectionValues = this.layers[i].markerSettings[k].initialMarkerSelection;\n                        for (var j = 0; j < markerSelectionValues.length; j++) {\n                            this.markerInitialSelection(i, k, this.layers[i].markerSettings[k], markerSelectionValues[j].latitude, markerSelectionValues[j].longitude);\n                        }\n                    }\n                }\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.getElementById(this.element.id + '_tile_parent'))) {\n            var svg = this.svgObject.getBoundingClientRect();\n            var element = document.getElementById(this.element.id);\n            var tileElement = document.getElementById(this.element.id + '_tile_parent');\n            var tileElement1 = document.getElementById(this.element.id + '_tiles');\n            var tile = tileElement.getBoundingClientRect();\n            var top_1;\n            var left = void 0;\n            left = parseFloat(tileElement.style.left);\n            var bottom = svg.bottom - tile.bottom - element.offsetTop;\n            top_1 = parseFloat(tileElement.style.top);\n            top_1 = (bottom <= 11) ? top_1 : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.legendModule) && this.legendSettings.position === 'Bottom') ? this.mapAreaRect.y : (top_1 * 2);\n            left = (bottom <= 11) ? left : !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.legendModule) ? left : (left * 2);\n            tileElement.style.top = top_1 + 'px';\n            tileElement.style.left = left + 'px';\n            tileElement1.style.top = top_1 + 'px';\n            tileElement1.style.left = left + 'px';\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.legendModule) && this.legendModule.totalPages.length > 0) {\n                tileElement.style.height = tileElement1.style.height = this.legendModule.legendTotalRect.height + 'px';\n                tileElement.style.width = tileElement1.style.width = this.legendModule.legendTotalRect.width + 'px';\n            }\n        }\n        this.arrangeTemplate();\n        if (this.annotationsModule) {\n            if (this.width !== '0px' && this.height !== '0px' && this.width !== '0%' && this.height !== '0%') {\n                this.annotationsModule.renderAnnotationElements();\n            }\n        }\n        this.element.style.outline = 'none';\n        this.element.style.position = 'relative';\n        for (var i = 0; i < document.getElementsByTagName('path').length - 1; i++) {\n            if (document.getElementsByTagName('path')[i].id.indexOf('shapeIndex') > -1) {\n                document.getElementsByTagName('path')[i].style.outline = 'none';\n            }\n        }\n        this.zoomingChange();\n        if (this.zoomModule && this.isDevice) {\n            this.zoomModule.removeToolbarOpacity(this.isTileMap ? Math.round(this.tileZoomLevel) : this.mapScaleValue, this.element.id + '_Zooming_');\n        }\n        if (!this.isZoomByPosition && !this.zoomNotApplied) {\n            this.triggerZoomEvent();\n        }\n        this.isResize = false;\n    };\n    Maps.prototype.triggerZoomEvent = function () {\n        var loadedArgs;\n        var minMaxLatitudeLongitude = this.getMinMaxLatitudeLongitude();\n        // eslint-disable-next-line prefer-const\n        loadedArgs = {\n            maps: this, isResized: this.isResize, minLatitude: minMaxLatitudeLongitude.minLatitude,\n            maxLatitude: minMaxLatitudeLongitude.maxLatitude, minLongitude: minMaxLatitudeLongitude.minLongitude,\n            maxLongitude: minMaxLatitudeLongitude.maxLongitude, cancel: false, name: 'Loaded'\n        };\n        this.trigger('loaded', loadedArgs);\n        //eslint-enable @typescript-eslint/prefer-const\n    };\n    /**\n     * To apply color to the initial selected marker.\n     *\n     * @param {SelectionSettingsModel} selectionSettings - Specifies the selection settings\n     * @param {Maps} map - Specifies the instance of the maps\n     * @param {Element} targetElement - Specifies the target element\n     * @param {object} data - Specifies the data\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.markerSelection = function (selectionSettings, map, targetElement, data) {\n        var border = {\n            color: selectionSettings.border.color,\n            width: selectionSettings.border.width / map.scale,\n            opacity: selectionSettings.border.opacity\n        };\n        var markerSelectionProperties = {\n            opacity: selectionSettings.opacity,\n            fill: selectionSettings.fill,\n            border: border,\n            target: targetElement.id,\n            cancel: false,\n            data: data,\n            maps: map\n        };\n        if (!(0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElement)('MarkerselectionMap')) {\n            document.body.appendChild((0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.createStyle)('MarkerselectionMap', 'MarkerselectionMapStyle', markerSelectionProperties));\n        }\n        else {\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.customizeStyle)('MarkerselectionMap', 'MarkerselectionMapStyle', markerSelectionProperties);\n        }\n        if (this.selectedMarkerElementId.length === 0 || selectionSettings.enableMultiSelect) {\n            if (targetElement.tagName === 'g') {\n                targetElement.children[0].setAttribute('class', 'MarkerselectionMapStyle');\n                this.selectedMarkerElementId.push(targetElement.children[0].id);\n            }\n            else {\n                targetElement.setAttribute('class', 'MarkerselectionMapStyle');\n                this.selectedMarkerElementId.push(targetElement.id);\n            }\n        }\n    };\n    /**\n     * initial selection of marker.\n     *\n     * @param {number} layerIndex - Specifies the layer index\n     * @param {number} markerIndex - Specifies the marker index\n     * @param {MarkerSettingsModel} markerSettings - Specifies the marker settings\n     * @param {number} latitude - Specifies hte latitude\n     * @param {number} longitude - Specifies the longitude\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.markerInitialSelection = function (layerIndex, markerIndex, markerSettings, latitude, longitude) {\n        var selectionSettings = markerSettings.selectionSettings;\n        if (selectionSettings.enable) {\n            for (var i = 0; i < markerSettings.dataSource['length']; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var data = markerSettings.dataSource[i];\n                if (data['latitude'] === latitude && data['longitude'] === longitude) {\n                    var targetId = this.element.id + '_' + 'LayerIndex_' + layerIndex + '_MarkerIndex_' + markerIndex +\n                        '_dataIndex_' + i;\n                    this.markerSelection(selectionSettings, this, (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElement)(targetId), data);\n                }\n            }\n        }\n    };\n    /**\n     * Render the map area border.\n     *\n     * @returns {void}\n     */\n    Maps.prototype.renderArea = function () {\n        var width = this.mapsArea.border.width;\n        var background = this.mapsArea.background;\n        if (width > 0 || (background || this.themeStyle.areaBackgroundColor)) {\n            var mapBorder = {\n                opacity: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.mapsArea.border.opacity) ? 1 : this.mapsArea.border.opacity,\n                color: this.mapsArea.border.color, width: this.mapsArea.border.width\n            };\n            var rect = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.RectOption(this.element.id + '_MapAreaBorder', background || this.themeStyle.areaBackgroundColor, mapBorder, 1, this.mapAreaRect);\n            this.svgObject.appendChild(this.renderer.drawRectangle(rect));\n        }\n    };\n    /**\n     * To add tab index for map element.\n     *\n     * @returns {void}\n     */\n    Maps.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'Maps Element');\n        this.element.setAttribute('role', 'region');\n        this.element.tabIndex = this.tabIndex;\n    };\n    Maps.prototype.setSecondaryElementPosition = function () {\n        var element = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(this.element.id + '_Secondary_Element');\n        var rect = this.element.getBoundingClientRect();\n        var svgElement = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(this.element.id + '_svg');\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(svgElement)) {\n            var svgRect = svgElement.getBoundingClientRect();\n            element.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n            element.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n        }\n    };\n    Maps.prototype.zoomingChange = function () {\n        var left;\n        var top;\n        if ((0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(this.element.id + '_Layer_Collections') && this.zoomModule) {\n            this.zoomModule.layerCollectionEle = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(this.element.id + '_Layer_Collections');\n        }\n        if (this.isTileMap && (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(this.element.id + '_Tile_SVG') && (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(this.element.id + '_tile_parent')) {\n            var tileElement = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(this.element.id + '_tile_parent');\n            var tileSvgElement = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(this.element.id + '_Tile_SVG');\n            var tileSvgParentElement = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(this.element.id + '_Tile_SVG_Parent');\n            var tileRect = tileElement.getBoundingClientRect();\n            var tileSvgRect = tileSvgElement.getBoundingClientRect();\n            left = (tileRect.left - tileSvgRect.left);\n            top = (tileRect.top - tileSvgRect.top);\n            tileSvgParentElement.style.left = left + 'px';\n            tileSvgParentElement.style.top = top + 'px';\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.legendModule) && this.legendModule.totalPages.length > 0) {\n                tileElement.style.width = tileSvgElement.style.width =\n                    this.legendModule.legendTotalRect.width.toString();\n                tileElement.style.height = tileSvgElement.style.height =\n                    this.legendModule.legendTotalRect.height.toString();\n                tileSvgParentElement.style.width = this.legendModule.legendTotalRect.width + 'px';\n                tileSvgParentElement.style.height = this.legendModule.legendTotalRect.height + 'px';\n            }\n            var markerTemplateElements = document.getElementsByClassName('template');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(markerTemplateElements) && markerTemplateElements.length > 0) {\n                for (var i = 0; i < markerTemplateElements.length; i++) {\n                    var templateGroupEle = markerTemplateElements[i];\n                    templateGroupEle.style.left = left + 'px';\n                    templateGroupEle.style.top = top + 'px';\n                }\n            }\n        }\n        if (this.zoomSettings.zoomFactor >= 0) {\n            if (this.zoomModule && this.zoomModule.toolBarGroup && this.zoomSettings.enable) {\n                this.zoomModule.alignToolBar();\n            }\n            var elements = document.getElementById(this.element.id + '_Layer_Collections');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(elements) && elements.childElementCount > 0) {\n                for (var i = 0; i < elements.childNodes.length; i++) {\n                    var childElement = elements.childNodes[i];\n                    if (childElement.tagName === 'g' && childElement.id.indexOf('_Legend_Group') === -1) {\n                        var layerIndex = parseFloat(childElement.id.split('_LayerIndex_')[1].split('_')[0]);\n                        for (var j = 0; j < childElement.childNodes.length; j++) {\n                            var childNode = childElement.childNodes[j];\n                            if (!(childNode.id.indexOf('_Markers_Group') > -1) &&\n                                (!(childNode.id.indexOf('_bubble_Group') > -1)) &&\n                                (!(childNode.id.indexOf('_dataLableIndex_Group') > -1))) {\n                                (0,_index__WEBPACK_IMPORTED_MODULE_8__.changeBorderWidth)(childNode, layerIndex, this.scale, this);\n                            }\n                        }\n                    }\n                }\n            }\n            if (this.zoomModule && ((this.previousScale !== this.scale) || this.zoomNotApplied || this.isZoomByPosition)) {\n                this.zoomModule.applyTransform(this, false, true);\n            }\n        }\n    };\n    Maps.prototype.createSecondaryElement = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                id: this.element.id + '_Secondary_Element'\n            });\n            secondaryElement.style.cssText = 'position: relative;z-index:2;';\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    /**\n     * @returns {void}\n     */\n    Maps.prototype.getMinMaxLatitudeLongitude = function () {\n        var mapsElement = document.getElementById(this.element.id);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(mapsElement)) {\n            var element = mapsElement.getBoundingClientRect();\n            var marginLeft = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getProcessedMarginValue)(this.margin.left);\n            var minPosition = this.isTileMap ?\n                this.pointToLatLong((this.mapAreaRect.x - marginLeft), -this.mapAreaRect.y) :\n                this.getGeoLocation(0, (this.mapAreaRect.x + element.left), this.mapAreaRect.y);\n            var maxPosition = this.isTileMap ? this.pointToLatLong(this.mapAreaRect.width, (this.mapAreaRect.height - this.mapAreaRect.y)) :\n                this.getGeoLocation(0, (this.mapAreaRect.x + element.left + this.mapAreaRect.width), (this.mapAreaRect.y + this.mapAreaRect.height));\n            var MinMaxLatitudeLongitude = {\n                minLatitude: minPosition.latitude, maxLatitude: maxPosition.latitude, minLongitude: minPosition.longitude,\n                maxLongitude: maxPosition.longitude\n            };\n            return MinMaxLatitudeLongitude;\n        }\n        else {\n            return { minLatitude: 0, maxLatitude: 0, minLongitude: 0,\n                maxLongitude: 0 };\n        }\n    };\n    /**\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.arrangeTemplate = function () {\n        var _this = this;\n        if (document.getElementById(this.element.id + '_Legend_Border')) {\n            document.getElementById(this.element.id + '_Legend_Border').style.pointerEvents = 'none';\n        }\n        var templateElements = document.getElementsByClassName(this.element.id + '_template');\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(templateElements) && templateElements.length > 0 &&\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(this.element.id + '_Layer_Collections') && !this.isTileMap) {\n            Array.prototype.forEach.call(templateElements, function (templateGroupEle) {\n                var offSetLetValue = 0;\n                var offSetTopValue = 0;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(templateGroupEle) && templateGroupEle.childElementCount > 0) {\n                    var layerOffset = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(_this.element.id + '_Layer_Collections').getBoundingClientRect();\n                    var elementOffset = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(templateGroupEle.id).getBoundingClientRect();\n                    if (templateGroupEle.id.indexOf('Marker') === -1) {\n                        offSetLetValue = _this.isTileMap ? 0 : (layerOffset.left < elementOffset.left) ?\n                            -(Math.abs(elementOffset.left - layerOffset.left)) : (Math.abs(elementOffset.left - layerOffset.left));\n                        offSetTopValue = _this.isTileMap ? 0 : (layerOffset.top < elementOffset.top) ?\n                            -(Math.abs(elementOffset.top - layerOffset.top)) : Math.abs(elementOffset.top - layerOffset.top);\n                    }\n                    Array.prototype.forEach.call(templateGroupEle.childNodes, function (currentTemplate) {\n                        if (currentTemplate.id.indexOf('Marker') === -1) {\n                            currentTemplate.style.left = parseFloat(currentTemplate.style.left) + offSetLetValue + 'px';\n                            currentTemplate.style.top = parseFloat(currentTemplate.style.top) + offSetTopValue + 'px';\n                            currentTemplate.style.transform = 'translate(-50%, -50%)';\n                        }\n                    });\n                }\n            });\n        }\n    };\n    Maps.prototype.createTile = function () {\n        var mainLayer = this.layersCollection[0];\n        var padding = 0;\n        if (mainLayer.isBaseLayer && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(mainLayer.urlTemplate) && mainLayer.urlTemplate !== '' && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(mainLayer.shapeData))) {\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeElement)(this.element.id + '_tile_parent');\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeElement)(this.element.id + '_tiles');\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeElement)('animated_tiles');\n            var ele = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                id: this.element.id + '_tile_parent'\n            });\n            var marginRight = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getProcessedMarginValue)(this.margin.right);\n            ele.style.cssText = 'position: absolute; left: ' +\n                (this.mapAreaRect.x) + 'px; right: ' + (marginRight) + 'px; top: '\n                + (this.mapAreaRect.y + padding) + 'px; height: ' +\n                (this.mapAreaRect.height) + 'px; width: '\n                + (this.mapAreaRect.width) + 'px; overflow: hidden;';\n            var ele1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                id: this.element.id + '_tiles'\n            });\n            ele1.style.cssText = 'position: absolute; left: ' +\n                (this.mapAreaRect.x) + 'px;  right: ' + (marginRight) + 'px; top: '\n                + (this.mapAreaRect.y + padding) + 'px; height: ' + (this.mapAreaRect.height) + 'px; width: '\n                + (this.mapAreaRect.width) + 'px; overflow: hidden;';\n            this.element.appendChild(ele);\n            this.element.appendChild(ele1);\n        }\n    };\n    /**\n     * To initilize the private varibales of maps.\n     *\n     * @returns {void}\n     */\n    Maps.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-maps').length;\n            this.element.id = 'maps_control_' + collection;\n        }\n        this.renderer = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__.SvgRenderer(this.element.id);\n        this.mapLayerPanel = new _layers_layer_panel__WEBPACK_IMPORTED_MODULE_6__.LayerPanel(this);\n    };\n    Maps.prototype.findBaseAndSubLayers = function () {\n        var _this = this;\n        var baseIndex = this.baseLayerIndex;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var mainLayers = [];\n        var subLayers = [];\n        this.layersCollection = [];\n        Array.prototype.forEach.call(this.layers, function (layer) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            (layer.type === 'Layer') ? mainLayers.push(layer) : subLayers.push(layer);\n        });\n        for (var i = 0; i < mainLayers.length; i++) {\n            var baseLayer = mainLayers[i];\n            if (baseLayer.visible && baseIndex === i) {\n                baseLayer.isBaseLayer = true;\n                this.isTileMap = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(baseLayer.shapeData) ? false : true;\n                this.layersCollection.push(baseLayer);\n                break;\n            }\n            else if (i === mainLayers.length - 1) {\n                this.layersCollection.push(mainLayers[0]);\n                break;\n            }\n        }\n        subLayers.map(function (subLayer) {\n            if (subLayer.visible) {\n                _this.layersCollection.push(subLayer);\n            }\n        });\n    };\n    /**\n     * Render the map border.\n     *\n     * @private\n     * @returns {void}\n     */\n    Maps.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_MapBorder');\n        if ((width > 0 || (this.background || this.themeStyle.backgroundColor)) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(borderElement)) {\n            var border = {\n                opacity: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.border.opacity) ? 1 : this.border.opacity,\n                color: this.border.color, width: this.border.width\n            };\n            var borderRect = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.RectOption(this.element.id + '_MapBorder', this.background || this.themeStyle.backgroundColor, border, 1, new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    /**\n     * Render the title and subtitle.\n     *\n     * @param {TitleSettingsModel} title - Specifies the title\n     * @param {string} type - Specifies the type\n     * @param {Rect} bounds - Specifies the bounds\n     * @param {Element} groupEle - Specifies the group element\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = {\n            size: title.textStyle.size,\n            color: title.textStyle.color,\n            fontFamily: title.textStyle.fontFamily,\n            fontWeight: title.textStyle.fontWeight,\n            fontStyle: title.textStyle.fontStyle,\n            opacity: title.textStyle.opacity\n        };\n        var height;\n        var marginTop = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getProcessedMarginValue)(this.margin.top);\n        var marginBottom = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getProcessedMarginValue)(this.margin.bottom);\n        var marginLeft = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getProcessedMarginValue)(this.margin.left);\n        var marginRight = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getProcessedMarginValue)(this.margin.right);\n        var width = Math.abs((marginLeft + marginRight) - this.availableSize.width);\n        style.fontFamily = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(style.fontFamily) ? style.fontFamily : this.themeStyle.fontFamily;\n        style.fontWeight = type === 'title' ? style.fontWeight || this.themeStyle.titleFontWeight : style.fontWeight || this.themeStyle.titleFontWeight;\n        style.size = type === 'title' ? (style.size || this.themeStyle.titleFontSize) : (style.size || this.themeStyle.subTitleFontSize || _model_theme__WEBPACK_IMPORTED_MODULE_5__.Theme.mapsSubTitleFont.size);\n        if (title.text) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.textTrim)(width, title.text, style);\n            var elementSize = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.measureText)(trimmedTitle, style);\n            var rect = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bounds)) ? new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Rect(marginLeft, marginTop, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.findPosition)(rect, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(title.alignment) ? title.alignment : 'Center', elementSize, type);\n            var options = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.TextOption(this.element.id + '_Map_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.renderTextElement)(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.text);\n            element.setAttribute('role', 'region');\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = Math.abs((titleBounds.y + marginBottom) - this.availableSize.height);\n                this.mapAreaRect = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Rect(marginLeft, titleBounds.y + 10, width, height - 10);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = Math.abs((marginTop + marginBottom) - this.availableSize.height);\n            this.mapAreaRect = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Rect(marginLeft, marginTop, width, height);\n        }\n    };\n    /**\n     * To create svg element for maps.\n     *\n     * @returns {void}\n     */\n    Maps.prototype.createSVG = function () {\n        this.removeSvg();\n        (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.createSvg)(this);\n    };\n    /**\n     * To Remove the SVG.\n     *\n     * @returns {void}\n     */\n    Maps.prototype.removeSvg = function () {\n        (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeElement)(this.element.id + '_Secondary_Element');\n        (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeElement)(this.element.id + '_tile_parent');\n        (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeElement)(this.element.id + '_tiles');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.svgObject);\n            }\n        }\n        this.clearTemplate();\n    };\n    /**\n     * To bind event handlers for maps.\n     *\n     * @returns {void}\n     */\n    Maps.prototype.wireEVents = function () {\n        //let cancelEvent: string = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'click', this.mapsOnClick, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'contextmenu', this.mapsOnRightClick, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'dblclick', this.mapsOnDoubleClick, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent, this.mouseDownOnMap, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent, this.mouseMoveOnMap, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent, this.mouseEndOnMap, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnMap, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keydown', this.keyDownHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keyup', this.keyUpHandler, this);\n        //  EventHandler.add(this.element, cancelEvent, this.mouseLeaveOnMap, this);\n        this.resizeEvent = this.mapsOnResize.bind(this);\n        window.addEventListener((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n    };\n    /**\n     * To unbind event handlers from maps.\n     *\n     * @returns {void}\n     */\n    Maps.prototype.unWireEVents = function () {\n        //let cancelEvent: string = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'click', this.mapsOnClick);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'contextmenu', this.mapsOnRightClick);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'dblclick', this.mapsOnDoubleClick);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent, this.mouseDownOnMap);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent, this.mouseMoveOnMap);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent, this.mouseEndOnMap);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnMap);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keydown', this.keyDownHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keyup', this.keyUpHandler);\n        //EventHandler.remove(this.element, cancelEvent, this.mouseLeaveOnMap);\n        window.removeEventListener((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n    };\n    /**\n     * This method is used to perform operations when mouse pointer leave from maps.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event on maps.\n     * @returns {void}\n     * @private\n     */\n    //eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Maps.prototype.mouseLeaveOnMap = function (e) {\n        if (document.getElementsByClassName('highlightMapStyle').length > 0 && this.legendModule) {\n            this.legendModule.removeShapeHighlightCollection();\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeClass)(document.getElementsByClassName('highlightMapStyle')[0]);\n        }\n    };\n    /**\n     * This method is used to perform operations when keyboard key from maps.\n     *\n     * @param {KeyboardEvent} event - Specifies the keyboard event on maps.\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.keyUpHandler = function (event) {\n        var id = event.target['id'];\n        if (this.isTileMap) {\n            this.removeTileMap();\n        }\n        if (event.code === 'Tab' && id.indexOf('_LayerIndex_') > -1 && id.indexOf('shapeIndex') > -1) {\n            this.keyboardHighlightSelection(id, event);\n        }\n        else if (id.indexOf('_LayerIndex_') === -1 && id.indexOf('shapeIndex') === -1 &&\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementsByClassName)('highlightMapStyle').length > 0) {\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeClass)((0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementsByClassName)('highlightMapStyle')[0]);\n            if (this.legendSettings.visible && this.legendModule) {\n                this.legendModule.removeShapeHighlightCollection();\n            }\n        }\n    };\n    Maps.prototype.keyboardHighlightSelection = function (id, event) {\n        var key = event.type;\n        var layerIndex = parseInt(id.split('_LayerIndex_')[1].split('_')[0], 10);\n        var shapeIndex = parseInt(id.split('_shapeIndex_')[1].split('_')[0], 10);\n        //eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var shapeData = this.layers[layerIndex].shapeData['features']['length'] > shapeIndex ?\n            this.layers[layerIndex].shapeData['features'][shapeIndex]['properties'] : null;\n        var dataIndex = parseInt(id.split('_dataIndex_')[1].split('_')[0], 10);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var data = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dataIndex) ? null : this.layers[layerIndex].dataSource[dataIndex];\n        if (this.layers[layerIndex].selectionSettings.enable && key === 'keydown' && this.selectionModule) {\n            this.selectionModule.selectionsettings = this.layers[layerIndex].selectionSettings;\n            this.selectionModule.selectionType = 'Shape';\n            this.selectionModule.selectElement(event.target, layerIndex, data, shapeData);\n        }\n        else if (this.highlightModule && (this.layers[layerIndex].highlightSettings.enable && key === 'keyup' &&\n            !event.target.classList.contains('ShapeselectionMapStyle'))) {\n            this.highlightModule.highlightSettings = this.layers[layerIndex].highlightSettings;\n            this.highlightModule.handleHighlight(event.target, layerIndex, data, shapeData);\n        }\n    };\n    /**\n     * This method is used to perform operations when keyboard down from maps.\n     *\n     * @param {KeyboardEvent} event - Specifies the keyboard event on maps.\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.keyDownHandler = function (event) {\n        var zoom = this.zoomModule;\n        var id = event.target['id'];\n        if ((event.code === 'ArrowUp' || event.code === 'ArrowDown' || event.code === 'ArrowLeft'\n            || event.code === 'ArrowRight') && zoom) {\n            var animatedTiles = document.getElementById(this.element.id + '_animated_tiles');\n            if (this.isTileMap && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(animatedTiles)) {\n                this.currentTiles = animatedTiles.cloneNode(true);\n            }\n        }\n        if (this.zoomSettings.enable && zoom && (event.key === '+' || event.code === 'Equal')) {\n            zoom.performZoomingByToolBar('zoomin');\n        }\n        else if (this.zoomSettings.enable && zoom && (event.key === '-' || event.code === 'Minus')) {\n            zoom.performZoomingByToolBar('zoomout');\n        }\n        else if (this.zoomSettings.enable && zoom && event['keyCode'] === 82) {\n            zoom.performZoomingByToolBar('reset');\n            zoom.isPanModeEnabled = false;\n        }\n        else if (this.zoomSettings.enable && this.zoomSettings.enablePanning && zoom\n            && (event.code === 'ArrowUp' || event.code === 'ArrowDown')) {\n            event.preventDefault();\n            zoom.mouseDownLatLong['x'] = 0;\n            zoom.mouseMoveLatLong['y'] = this.mapAreaRect.height / 7;\n            zoom.panning('None', zoom.mouseDownLatLong['x'], event.code === 'ArrowUp' ? -(zoom.mouseMoveLatLong['y']) :\n                zoom.mouseMoveLatLong['y'], event);\n            zoom.mouseDownLatLong['y'] = zoom.mouseMoveLatLong['y'];\n        }\n        else if (this.zoomSettings.enable && this.zoomSettings.enablePanning && zoom\n            && (event.code === 'ArrowLeft' || event.code === 'ArrowRight')) {\n            event.preventDefault();\n            zoom.mouseDownLatLong['y'] = 0;\n            zoom.mouseMoveLatLong['x'] = this.mapAreaRect.width / 7;\n            zoom.panning('None', event.code === 'ArrowLeft' ? -(zoom.mouseMoveLatLong['x']) : zoom.mouseMoveLatLong['x'], zoom.mouseDownLatLong['y'], event);\n            zoom.mouseDownLatLong['x'] = zoom.mouseMoveLatLong['x'];\n        }\n        else if (event.code === 'Enter') {\n            id = event.target['id'];\n            event.preventDefault();\n            if (this.legendModule && (id.indexOf('_Left_Page_Rect') > -1 || id.indexOf('_Right_Page_Rect') > -1)) {\n                this.mapAreaRect = this.legendModule.initialMapAreaRect;\n                this.legendModule.currentPage = (id.indexOf('_Left_Page_') > -1) ? (this.legendModule.currentPage - 1) :\n                    (this.legendModule.currentPage + 1);\n                this.legendModule.legendGroup = this.renderer.createGroup({ id: this.element.id + '_Legend_Group' });\n                this.legendModule.drawLegendItem(this.legendModule.currentPage);\n                var textContent = (document.getElementById(this.element.id + '_Paging_Text')).textContent;\n                var text = textContent.split('/').map(Number);\n                if (id.indexOf('_Left_Page_Rect') > -1) {\n                    if (text[0] !== 1) {\n                        event.target.focus();\n                    }\n                    event.target.style.outlineColor = text[0] - 1 !== text[1] ? '' : 'transparent';\n                }\n                else if (id.indexOf('_Right_Page_Rect') > -1) {\n                    if (text[0] !== text[1]) {\n                        event.target.focus();\n                    }\n                    event.target.style.outlineColor = text[0] !== text[1] + 1 ? '' : 'transparent';\n                }\n                if ((0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.querySelector)(this.element.id + '_Legend_Border', this.element.id)) {\n                    (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.querySelector)(this.element.id + '_Legend_Border', this.element.id).style.pointerEvents = 'none';\n                }\n            }\n            if (id.indexOf('shapeIndex') > -1) {\n                this.keyboardHighlightSelection(id, event);\n            }\n        }\n        if (this.zoomModule) {\n            this.zoomModule.removeToolbarOpacity(this.isTileMap ? Math.round(this.tileZoomLevel) : this.mapScaleValue, this.mouseMoveId);\n        }\n    };\n    /**\n     * Gets the selected element to be maintained or not.\n     *\n     * @param {Element} targetEle - Specifies the target element\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    Maps.prototype.SelectedElement = function (targetEle) {\n        var isSelect = false;\n        if (targetEle.getAttribute('class') === 'ShapeselectionMapStyle') {\n            isSelect = true;\n        }\n        return isSelect;\n    };\n    /**\n     * This method is used to perform the operations when a click operation is performed on maps.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event on maps.\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.mapsOnClick = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var latitude = null;\n        var longitude = null;\n        this.mouseClickEvent = { x: e.x, y: e.y };\n        if (targetEle.id.indexOf('_ToolBar') === -1) {\n            var latLongValue = this.getClickLocation(targetId, e.pageX, e.pageY, targetEle, e['layerX'], e['layerY']);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(latLongValue)) {\n                latitude = latLongValue.latitude;\n                longitude = latLongValue.longitude;\n            }\n            var eventArgs_1 = {\n                cancel: false, name: _model_constants__WEBPACK_IMPORTED_MODULE_4__.click, target: targetId, x: e.clientX, y: e.clientY,\n                latitude: latitude, longitude: longitude,\n                isShapeSelected: this.SelectedElement(targetEle)\n            };\n            if (this.onclick) {\n                eventArgs_1.name = _model_constants__WEBPACK_IMPORTED_MODULE_4__.onclick;\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                this.trigger('onclick', eventArgs_1, function (mouseArgs) {\n                    _this.clickHandler(e, eventArgs_1, targetEle);\n                });\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                this.trigger('click', eventArgs_1, function (mouseArgs) {\n                    _this.clickHandler(e, eventArgs_1, targetEle);\n                });\n            }\n        }\n        if (this.zoomModule) {\n            this.zoomModule.removeToolbarOpacity(this.isTileMap ? Math.round(this.tileZoomLevel) : this.mapScaleValue, targetId);\n            if (this.isDevice) {\n                this.zoomModule.removeToolbarClass('', '', '', '', '');\n            }\n        }\n    };\n    Maps.prototype.clickHandler = function (e, eventArgs, targetEle) {\n        if (targetEle.id.indexOf('shapeIndex') > -1) {\n            this.mergeCluster();\n            if ((0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElement)(this.element.id + '_mapsTooltip') &&\n                this.mapsTooltipModule.tooltipTargetID.indexOf('_MarkerIndex_') > -1) {\n                (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeElement)(this.element.id + '_mapsTooltip');\n            }\n        }\n        if (this.markerModule) {\n            this.markerModule.markerClusterClick(e);\n        }\n        if (!eventArgs.cancel) {\n            this.notify(_model_constants__WEBPACK_IMPORTED_MODULE_4__.click, targetEle);\n        }\n        if (!eventArgs.cancel && targetEle.id.indexOf('shapeIndex') !== -1) {\n            this.triggerShapeSelection(targetEle);\n        }\n    };\n    Maps.prototype.triggerShapeSelection = function (targetEle) {\n        var layerIndex = parseInt(targetEle.id.split('_LayerIndex_')[1].split('_')[0], 10);\n        var shapeSelectedEventArgs = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.triggerShapeEvent)(targetEle.id, this.layers[layerIndex].selectionSettings, this, _model_constants__WEBPACK_IMPORTED_MODULE_4__.shapeSelected);\n        if (!shapeSelectedEventArgs.cancel && this.selectionModule && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.shapeSelected)) {\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.customizeStyle)(this.selectionModule.selectionType + 'selectionMap', this.selectionModule.selectionType + 'selectionMapStyle', shapeSelectedEventArgs);\n        }\n        else if (shapeSelectedEventArgs.cancel && this.selectionModule\n            && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapeSelectedEventArgs['data'])) {\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeClass)(targetEle);\n            this.selectionModule.removedSelectionList(targetEle);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Maps.prototype.getMarkerClickLocation = function (pageX, pageY, x, y, marker, isDragEnd) {\n        document.getElementById(this.element.id + '_svg').style.cursor = 'grabbing';\n        var targetElement = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElement)(marker.targetId);\n        var latLongValue = this.getClickLocation(marker.targetId, pageX, pageY, targetElement, x, y);\n        var location = (this.isTileMap) ? (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.convertTileLatLongToPoint)(new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.MapLocation(latLongValue.longitude, latLongValue.latitude), this.tileZoomLevel, this.tileTranslatePoint, true) : (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.convertGeoToPoint)(latLongValue.latitude, latLongValue.longitude, this.mapLayerPanel.currentFactor, this.layersCollection[marker.layerIndex], this);\n        var transPoint = this.translatePoint;\n        var translateX = (this.isTileMap ? location.x : (location.x + transPoint.x) * this.scale);\n        var translateY = (this.isTileMap ? location.y : (location.y + transPoint.y) * this.scale);\n        if (this.markerDragArgument.shape !== 'Balloon') {\n            targetElement.setAttribute('transform', 'translate( ' + translateX + ' ' + translateY + ' )');\n        }\n        else {\n            targetElement.parentElement.setAttribute('transform', 'translate( ' + translateX + ' ' + translateY + ' )');\n        }\n        if (isDragEnd) {\n            var markerSettings = this.layers[marker.layerIndex].markerSettings[marker.markerIndex];\n            latLongValue = this.getClickLocation(marker.targetId, (pageX - markerSettings.offset.x), (pageY - markerSettings.offset.y), targetElement, (x - markerSettings.offset.x), (y - markerSettings.offset.y));\n        }\n        return latLongValue;\n    };\n    /**\n     * Gets the location of the mouse click.\n     *\n     * @param {string} targetId - Specifies the ID for the target.\n     * @param {number} pageX - Defines the page X position.\n     * @param {number} pageY - Defines the page Y position.\n     * @param {HTMLElement} targetElement - Specifies the target element on the event.\n     * @param  {number} x - Defines the x position in pixel.\n     * @param {number} y - Defines the y position in pixel.\n     * @param {string} type -  Specifies the type.\n     * @returns {GeoPosition} -  Returns the position of the event.\n     * @private\n     */\n    Maps.prototype.getClickLocation = function (targetId, pageX, pageY, targetElement, x, y, type) {\n        var layerIndex = 0;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var latLongValue;\n        if (targetId.indexOf('_LayerIndex_') !== -1 && !this.isTileMap && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(type) ||\n            ((parseInt(this.mouseDownEvent['x'], 10) === parseInt(this.mouseClickEvent['x'], 10)) &&\n                (parseInt(this.mouseDownEvent['y'], 10) === parseInt(this.mouseClickEvent['y'], 10))))) {\n            layerIndex = parseFloat(targetId.split('_LayerIndex_')[1].split('_')[0]);\n            if (this.layers[layerIndex].geometryType === 'Normal') {\n                if (targetId.indexOf('_shapeIndex_') > -1) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var immediateParent = targetElement.parentElement;\n                    var parentElement = immediateParent.id.indexOf('_Point_Group') > -1 || immediateParent.id.indexOf('_LineString_Group') > -1\n                        || immediateParent.id.indexOf('_MultiLineString_Group') > -1 || immediateParent.id.indexOf('_Polygon_Group') > -1 ?\n                        immediateParent.parentElement : immediateParent;\n                    var location_2 = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getMousePosition)(pageX, pageY, parentElement);\n                    var zoomScaleValue = this.mapLayerPanel.currentFactor * this.mapScaleValue;\n                    var minLongitude = Math.abs((-this.baseMapBounds.longitude.min) * zoomScaleValue);\n                    var minLatitude = Math.abs(this.baseMapBounds.latitude.max * zoomScaleValue);\n                    latLongValue = {\n                        latitude: Math.abs(this.baseMapBounds.latitude.max - (location_2.y / zoomScaleValue)),\n                        longitude: Math.abs((location_2.x / zoomScaleValue) + this.baseMapBounds.longitude.min)\n                    };\n                    if (this.baseMapBounds.longitude.min < 0 && minLongitude > location_2.x) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        latLongValue.longitude = -latLongValue.longitude;\n                    }\n                    if (this.baseMapBounds.latitude.min < 0 && minLatitude > location_2.y) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        latLongValue.latitude = -latLongValue.latitude;\n                    }\n                }\n                else if (targetId.indexOf('_MarkerIndex_') > -1 && this.markerModule && !this.markerDragArgument) {\n                    var markerIndex = parseInt(targetId.split('_MarkerIndex_')[1].split('_')[0], 10);\n                    var dataIndex = parseInt(targetId.split('_dataIndex_')[1].split('_')[0], 10);\n                    if (!isNaN(markerIndex) && !isNaN(dataIndex)) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        var dataObject = this.layers[layerIndex].markerSettings[markerIndex].dataSource[dataIndex];\n                        latLongValue = { latitude: dataObject['latitude'], longitude: dataObject.longitude };\n                    }\n                    else {\n                        latLongValue = { latitude: null, longitude: null };\n                    }\n                }\n                else if (targetId.indexOf('_MarkerIndex_') > -1 && this.markerModule && this.markerDragArgument) {\n                    var element = document.getElementById(this.element.id + '_LayerIndex_' + this.markerDragArgument.layerIndex);\n                    var elementRect = element.getBoundingClientRect();\n                    var location_3 = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.MapLocation(pageX > elementRect.left ? Math.abs(elementRect.left - pageX) : 0, pageY > elementRect.top ? Math.abs(elementRect.top - pageY) : 0);\n                    var minLongitude = Math.abs((-this.baseMapBounds.longitude.min) * this.mapLayerPanel.currentFactor);\n                    var minLatitude = Math.abs(this.baseMapBounds.latitude.max * this.mapLayerPanel.currentFactor);\n                    latLongValue = {\n                        latitude: Math.abs(this.baseMapBounds.latitude.max\n                            - (location_3.y / (this.mapLayerPanel.currentFactor * this.scale))),\n                        longitude: Math.abs((location_3.x / (this.mapLayerPanel.currentFactor * this.scale))\n                            + this.baseMapBounds.longitude.min)\n                    };\n                    if (this.baseMapBounds.longitude.min < 0 && minLongitude > location_3.x) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        latLongValue.longitude = -latLongValue.longitude;\n                    }\n                    if (this.baseMapBounds.latitude.min < 0 && minLatitude > location_3.y) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        latLongValue.latitude = -latLongValue.latitude;\n                    }\n                }\n                else {\n                    latLongValue = { latitude: null, longitude: null };\n                }\n            }\n            else {\n                latLongValue = this.getGeoLocation(layerIndex, pageX, pageY);\n            }\n        }\n        else if (this.isTileMap && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(type) ||\n            ((parseInt(this.mouseDownEvent['x'], 10) === parseInt(this.mouseClickEvent['x'], 10)) &&\n                (parseInt(this.mouseDownEvent['y'], 10) === parseInt(this.mouseClickEvent['y'], 10))))) {\n            latLongValue = this.getTileGeoLocation(x, y);\n        }\n        return latLongValue;\n    };\n    Maps.prototype.removeTileMap = function () {\n        var animateElement = document.getElementById(this.element.id + '_animated_tiles');\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentTiles) && animateElement.childElementCount < this.currentTiles.childElementCount) {\n            for (var l = animateElement.childElementCount - 1; l >= this.currentTiles.childElementCount; l--) {\n                animateElement.removeChild(animateElement.children[l]);\n            }\n        }\n        this.currentTiles = null;\n    };\n    /**\n     * This method is used to perform operations when mouse click on maps.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event on maps.\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    Maps.prototype.mouseEndOnMap = function (e) {\n        var pageX;\n        var pageY;\n        var touchArg;\n        var layerX = 0;\n        var layerY = 0;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            layerX = pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            layerY = pageY - (this.isTileMap ? 10 : 0);\n            this.mouseClickEvent = { x: pageX, y: pageY };\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            layerX = e['layerX'];\n            layerY = e['layerY'] - (this.isTileMap ? 10 : 0);\n        }\n        if (this.isTileMap) {\n            this.removeTileMap();\n        }\n        if (this.isTouch) {\n            this.titleTooltip(e, pageX, pageY, true);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.legendModule)) {\n                this.legendTooltip(e, e.pageX, e.pageY, true);\n            }\n        }\n        this.notify(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent, e);\n        if (e.cancelable && !this.isTouch) {\n            e.preventDefault();\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.markerDragArgument)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var marker = this.markerDragArgument;\n            this.mouseClickEvent['x'] = this.mouseDownEvent['x'];\n            this.mouseClickEvent['y'] = this.mouseDownEvent['y'];\n            var latLongValue = this.getMarkerClickLocation(pageX, pageY, layerX, layerY, this.markerDragArgument, true);\n            var markerObject = this.layers[marker.layerIndex].markerSettings[marker.markerIndex];\n            document.getElementById(this.element.id + '_svg').style.cursor = markerObject.enableDrag ? 'pointer' : 'grabbing';\n            var dragEventArgs = {\n                name: 'markerDragEnd', x: pageX, y: pageY,\n                latitude: latLongValue.latitude, longitude: latLongValue.longitude,\n                layerIndex: marker.layerIndex, markerIndex: marker.markerIndex,\n                dataIndex: marker.dataIndex\n            };\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(markerObject.latitudeValuePath) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(markerObject.longitudeValuePath)) {\n                var data = markerObject.dataSource[marker.dataIndex];\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(data['Longitude']) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(data['Latitude'])) {\n                    markerObject.dataSource[marker.dataIndex].Latitude = dragEventArgs.latitude;\n                    markerObject.dataSource[marker.dataIndex].Longitude = dragEventArgs.longitude;\n                }\n                else {\n                    markerObject.dataSource[marker.dataIndex].latitude = dragEventArgs.latitude;\n                    markerObject.dataSource[marker.dataIndex].longitude = dragEventArgs.longitude;\n                }\n            }\n            else {\n                markerObject.dataSource[marker.dataIndex][markerObject.latitudeValuePath] = dragEventArgs.latitude;\n                markerObject.dataSource[marker.dataIndex][markerObject.longitudeValuePath] = dragEventArgs.longitude;\n            }\n            this.markerDragId = '';\n            this.markerDragArgument = null;\n            this.trigger('markerDragEnd', dragEventArgs);\n        }\n        else {\n            document.getElementById(this.element.id + '_svg').style.cursor = 'auto';\n        }\n        if (this.zoomModule && this.isDevice) {\n            this.zoomModule.removeToolbarOpacity(this.isTileMap ? Math.round(this.tileZoomLevel) : this.scale, this.element.id + '_Zooming_');\n            this.zoomModule.removeToolbarClass('', '', '', '', '');\n        }\n        return false;\n    };\n    /**\n     * This method is used to perform operations when mouse is clicked down on maps.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event on maps\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.mouseDownOnMap = function (e) {\n        this.mouseDownEvent = { x: e.x, y: e.y };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (e.type.indexOf('touch') !== -1 && e.changedTouches) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.mouseDownEvent = { x: e.changedTouches[0].pageX, y: e.changedTouches[0].pageY };\n        }\n        if (this.isDevice && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.mapsTooltipModule)) {\n            this.mapsTooltipModule.renderTooltip(e);\n        }\n        var element = e.target;\n        this.markerDragId = element.id;\n        var animatedTiles = document.getElementById(this.element.id + '_animated_tiles');\n        if (this.isTileMap && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(animatedTiles)) {\n            this.currentTiles = animatedTiles.cloneNode(true);\n        }\n        if (element.id.indexOf('_ToolBar') === -1) {\n            var markerModule = this.markerModule;\n            if (element.id.indexOf('shapeIndex') > -1 || element.id.indexOf('Tile') > -1) {\n                this.mergeCluster();\n            }\n            if (markerModule) {\n                markerModule.markerClick(e);\n                markerModule.markerClusterClick(e);\n            }\n            if (this.bubbleModule) {\n                this.bubbleModule.bubbleClick(e);\n            }\n        }\n        this.notify(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent, e);\n    };\n    /**\n     * Merges the marker clusters.\n     *\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.mergeCluster = function () {\n        if (this.markerModule && (this.markerModule.sameMarkerData.length > 0) &&\n            (this.zoomModule ? this.zoomModule.isSingleClick : true)) {\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.mergeSeparateCluster)(this.markerModule.sameMarkerData, this);\n            this.markerModule.sameMarkerData = [];\n        }\n    };\n    /**\n     * @param {PointerEvent} e - Specifies the pointer event.\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.mapsOnRightClick = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var latitude = null;\n        var longitude = null;\n        this.mouseClickEvent = this.mouseDownEvent = { x: e.x, y: e.y };\n        if (targetEle.id.indexOf('_ToolBar') === -1) {\n            var latLongValue = this.getClickLocation(targetId, e.pageX, e.pageY, targetEle, e['layerX'], e['layerY']);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(latLongValue)) {\n                latitude = latLongValue.latitude;\n                longitude = latLongValue.longitude;\n            }\n            var eventArgs = {\n                cancel: false, name: _model_constants__WEBPACK_IMPORTED_MODULE_4__.rightClick, target: targetId, x: e.clientX, y: e.clientY,\n                latitude: latitude, longitude: longitude,\n                isShapeSelected: false\n            };\n            this.trigger('rightClick', eventArgs);\n        }\n    };\n    /**\n     * This method is used to perform operations when performing the double click operation on maps.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event.\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.mapsOnDoubleClick = function (e) {\n        this.notify('dblclick', e);\n        var targetElement = e.target;\n        var targetId = targetElement.id;\n        var layerIndex = 0;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var latLongValue;\n        var latitude = null;\n        var longitude = null;\n        if (targetElement.id.indexOf('_ToolBar') === -1) {\n            if (targetElement.id.indexOf('_LayerIndex_') !== -1 && !this.isTileMap && (this.mouseDownEvent['x'] === e.clientX)\n                && (this.mouseDownEvent['y'] === e.clientY)) {\n                layerIndex = parseFloat(targetElement.id.split('_LayerIndex_')[1].split('_')[0]);\n                latLongValue = this.getGeoLocation(layerIndex, e['layerX'], e['layerY']);\n                latitude = latLongValue['latitude'];\n                longitude = latLongValue['longitude'];\n            }\n            else if (this.isTileMap && (this.mouseDownEvent['x'] === e.clientX)\n                && (this.mouseDownEvent['y'] === e.clientY)) {\n                latLongValue = this.getTileGeoLocation(e['layerX'], e['layerY']);\n                latitude = latLongValue['latitude'];\n                longitude = latLongValue['longitude'];\n            }\n            var doubleClickArgs = {\n                cancel: false, name: _model_constants__WEBPACK_IMPORTED_MODULE_4__.doubleClick, x: e.clientX, y: e.clientY,\n                target: targetId, latitude: latitude, longitude: longitude, isShapeSelected: null\n            };\n            this.trigger('doubleClick', doubleClickArgs);\n        }\n    };\n    /**\n     * This method is used to perform operations while performing mouse over on maps.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event on maps.\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.mouseMoveOnMap = function (e) {\n        var target;\n        target = (e.type === 'touchmove') ? e.target :\n            target = e.target;\n        // if (target.id.indexOf('shapeIndex') !== -1 && !this.highlightSettings.enable) {\n        //     triggerShapeEvent(target.id, this.highlightSettings, this, shapeHighlight);\n        // }\n        this.mouseMoveEvent(e);\n        if (this.markerModule) {\n            this.markerModule.markerMove(e);\n            this.markerModule.markerClusterMouseMove(e);\n        }\n        if (this.bubbleModule) {\n            this.bubbleModule.bubbleMove(e);\n        }\n        if (target.id.indexOf('MarkerIndex') === -1) {\n            document.getElementById(this.element.id + '_svg').style.cursor = 'auto';\n        }\n        this.onMouseMove(e);\n        this.notify(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent, e);\n    };\n    /**\n     * To check and trigger mouse move event on maps.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event on maps.\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.mouseMoveEvent = function (e) {\n        var targetId = e.target.id;\n        var layerIndex;\n        var eventArgs;\n        if (this.isTileMap) {\n            var latLongValue = this.getTileGeoLocation(e['layerX'], e['layerY']);\n            eventArgs = {\n                x: e.clientX, y: e.clientY, latitude: latLongValue.latitude,\n                longitude: latLongValue.longitude, target: e.target\n            };\n        }\n        else {\n            layerIndex = targetId.indexOf('_LayerIndex_') > -1 ? parseInt(targetId.split('_LayerIndex_')[1].split('_')[0], 10) : this.baseLayerIndex;\n            var latLongValue = this.getGeoLocation(layerIndex, e.clientX, e.clientY);\n            eventArgs = {\n                x: e.clientX, y: e.clientY, latitude: latLongValue.latitude,\n                longitude: latLongValue.longitude, target: e.target\n            };\n        }\n        this.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_4__.mouseMove, eventArgs);\n    };\n    /**\n     * This method is used to perform operations when mouse move event is performed on maps.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event on maps.\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.onMouseMove = function (e) {\n        var element = e.target;\n        this.mouseMoveId = element['id'];\n        var pageX;\n        var pageY;\n        var touches = null;\n        var layerX = 0;\n        var layerY = 0;\n        if (e.type.indexOf('touch') === -1) {\n            pageX = e.pageX;\n            pageY = e.pageY;\n            layerX = e['layerX'];\n            layerY = e['layerY'] - (this.isTileMap ? 10 : 0);\n            this.titleTooltip(e, e.pageX, e.pageY);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.legendModule)) {\n                this.legendTooltip(e, e.pageX, e.pageY, true);\n            }\n        }\n        else {\n            touches = e.touches;\n            layerX = pageX = touches[0].clientX;\n            layerY = pageY = touches[0].clientY - (this.isTileMap ? 10 : 0);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.markerDragArgument)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var marker = this.markerDragArgument;\n            this.mouseClickEvent['x'] = this.mouseDownEvent['x'];\n            this.mouseClickEvent['y'] = this.mouseDownEvent['y'];\n            this.getMarkerClickLocation(pageX, pageY, layerX, layerY, marker, false);\n        }\n        if (this.zoomModule) {\n            this.zoomModule.removeToolbarOpacity(this.isTileMap ? Math.round(this.tileZoomLevel) : this.scale, e.target.id);\n        }\n        return false;\n    };\n    Maps.prototype.legendTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        var legendText;\n        var page = this.legendModule.currentPage;\n        var legendIndex = event.target.id.split('_Index_')[1];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var collection;\n        page = this.legendModule.totalPages.length <= this.legendModule.currentPage\n            ? this.legendModule.totalPages.length - 1 : this.legendModule.currentPage < 0 ?\n            0 : this.legendModule.currentPage;\n        var count = this.legendModule.totalPages.length !== 0 ?\n            this.legendModule.totalPages[page]['Collection'].length : this.legendModule.totalPages.length;\n        for (var i = 0; i < count; i++) {\n            collection = this.legendModule.totalPages[page]['Collection'][i];\n            legendText = collection['DisplayText'];\n            targetId = event.target['id'];\n            legendIndex = event.target['id'].split('_Index_')[1];\n            if ((targetId === (this.element.id + '_Legend_Text_Index_' + legendIndex)) &&\n                (event.target.textContent.indexOf('...') > -1) && collection['idIndex'] === parseInt(legendIndex, 10)) {\n                (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.showTooltip)(legendText, this.legendSettings.textStyle.size, x, y, this.element.offsetWidth, this.element.offsetHeight, this.element.id + '_EJ2_Legend_Text_Tooltip', (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElement)(this.element.id + '_Secondary_Element'), isTouch);\n            }\n        }\n        if ((targetId !== (this.element.id + '_Legend_Text_Index_' + legendIndex))) {\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeElement)(this.element.id + '_EJ2_Legend_Text_Tooltip');\n        }\n    };\n    Maps.prototype.titleTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if (targetId === (this.element.id + '_LegendTitle') && (event.target.textContent.indexOf('...') > -1)) {\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.showTooltip)(this.legendSettings.title.text, this.legendSettings.titleStyle.size, x, y, this.element.offsetWidth, this.element.offsetHeight, this.element.id + '_EJ2_LegendTitle_Tooltip', (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElement)(this.element.id + '_Secondary_Element'), isTouch);\n        }\n        else {\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeElement)(this.element.id + '_EJ2_LegendTitle_Tooltip');\n        }\n        if ((targetId === (this.element.id + '_Map_title')) && (event.target.textContent.indexOf('...') > -1)) {\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.showTooltip)(this.titleSettings.text, this.titleSettings.textStyle.size || this.themeStyle.titleFontSize, x, y, this.element.offsetWidth, this.element.offsetHeight, this.element.id + '_EJ2_Title_Tooltip', (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElement)(this.element.id + '_Secondary_Element'), isTouch);\n        }\n        else {\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeElement)(this.element.id + '_EJ2_Title_Tooltip');\n        }\n    };\n    /*\n\n    /**\n     * This method is used to perform operations while resizing the window.\n     *\n     * @param e - Specifies the arguments of window resize event.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Maps.prototype.mapsOnResize = function (e) {\n        var _this = this;\n        if (!this.isDestroyed && !this.isExportInitialTileMap) {\n            this.isResize = this.isReset = true;\n            var args = {\n                cancel: false,\n                name: _model_constants__WEBPACK_IMPORTED_MODULE_4__.resize,\n                previousSize: this.availableSize,\n                currentSize: (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.calculateSize)(this),\n                maps: this\n            };\n            this.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_4__.resize, args);\n            if (!args.cancel) {\n                if (this.resizeTo) {\n                    clearTimeout(this.resizeTo);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element) && this.element.classList.contains('e-maps')) {\n                    this.resizeTo = setTimeout(function () {\n                        _this.unWireEVents();\n                        _this.createSVG();\n                        _this.refreshing = true;\n                        _this.wireEVents();\n                        _this.render();\n                        _this.refreshing = false;\n                    }, 500);\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * This method is used to zoom the map by specifying the center position.\n     *\n     * @param {number} centerPosition - Specifies the location of the maps to be zoomed as geographical coordinates.\n     * @param {number} centerPosition.longitude - Specifies the longitude of the location to be zoomed.\n     * @param {number} centerPosition.latitude - Specifies the latitude of the location to be zoomed.\n     * @param {number} zoomFactor - Specifies the zoom factor for the maps.\n     * @returns {void}\n     */\n    Maps.prototype.zoomByPosition = function (centerPosition, zoomFactor) {\n        if (!this.isDestroyed) {\n            this.zoomNotApplied = this.isMarkerZoomCompleted = false;\n            var isRefresh = this.zoomSettings.zoomFactor === zoomFactor;\n            this.previousProjection = null;\n            if (!this.isTileMap && this.zoomModule) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(centerPosition)) {\n                    this.zoomSettings.zoomFactor = zoomFactor;\n                    isRefresh = this.centerPosition.latitude === centerPosition.latitude &&\n                        this.centerPosition.longitude === centerPosition.longitude ? true : isRefresh;\n                    this.centerPosition = centerPosition;\n                    this.isZoomByPosition = true;\n                    this.mapScaleValue = null;\n                }\n                else {\n                    this.zoomSettings.zoomFactor = zoomFactor;\n                    this.isZoomByPosition = true;\n                    this.mapScaleValue = null;\n                }\n            }\n            else if (this.zoomModule) {\n                this.tileZoomLevel = this.zoomSettings.zoomFactor = zoomFactor;\n                isRefresh = this.centerPosition.latitude === centerPosition.latitude &&\n                    this.centerPosition.longitude === centerPosition.longitude ? true : isRefresh;\n                this.centerPosition = centerPosition;\n                this.isZoomByPosition = true;\n            }\n            if (isRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * This method is used to perform panning by specifying the direction.\n     *\n     * @param {PanDirection} direction - Specifies the direction in which the panning must be performed.\n     * @param {PointerEvent | TouchEvent} mouseLocation - Specifies the location of the mouse pointer in maps in pixels.\n     * @returns {void}\n     */\n    Maps.prototype.panByDirection = function (direction, mouseLocation) {\n        if (!this.isDestroyed) {\n            var xDiff = 0;\n            var yDiff = 0;\n            switch (direction) {\n                case 'Left':\n                    xDiff = -(this.mapAreaRect.width / 7);\n                    break;\n                case 'Right':\n                    xDiff = (this.mapAreaRect.width / 7);\n                    break;\n                case 'Top':\n                    yDiff = -(this.mapAreaRect.height / 7);\n                    break;\n                case 'Bottom':\n                    yDiff = (this.mapAreaRect.height / 7);\n                    break;\n            }\n            if (this.zoomModule) {\n                this.zoomModule.panning(direction, xDiff, yDiff, mouseLocation);\n            }\n        }\n    };\n    /**\n     * This method is used to add the layers dynamically to the maps.\n     *\n     * @param {object} layer - Specifies the layer to be added in the maps.\n     * @returns {void}\n     */\n    Maps.prototype.addLayer = function (layer) {\n        if (!this.isDestroyed) {\n            var mapsLayer = this.layers;\n            mapsLayer.push(layer);\n            this.isAddLayer = true;\n            this.layers = mapsLayer;\n        }\n    };\n    /**\n     * This method is used to remove a layer from the maps.\n     *\n     * @param {number} index - Specifies the index number of the layer to be removed.\n     * @returns {void}\n     */\n    Maps.prototype.removeLayer = function (index) {\n        if (!this.isDestroyed) {\n            var mapsLayer = this.layers;\n            mapsLayer.splice(index, 1);\n            this.layers = mapsLayer;\n        }\n    };\n    /**\n     * This method is used to add markers dynamically in the maps.\n     * If we provide the index value of the layer in which the marker to be added and the settings\n     * of the marker as parameters, the marker will be added in the location.\n     *\n     * @param {number} layerIndex - Specifies the index number of the layer.\n     * @param {MarkerSettingsModel[]} markerCollection - Specifies the settings of the marker to be added.\n     * @returns {void}\n     */\n    Maps.prototype.addMarker = function (layerIndex, markerCollection) {\n        if (!this.isDestroyed && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.markerModule)) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(layerIndex) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(markerCollection)) {\n                var layerEle = document.getElementById(this.element.id + '_LayerIndex_' + layerIndex);\n                if (markerCollection.length > 0 && layerEle) {\n                    for (var _i = 0, markerCollection_1 = markerCollection; _i < markerCollection_1.length; _i++) {\n                        var newMarker = markerCollection_1[_i];\n                        this.layersCollection[layerIndex].markerSettings.push(new _index__WEBPACK_IMPORTED_MODULE_8__.MarkerSettings(this, 'markerSettings', newMarker));\n                    }\n                    this.markerModule.markerRender(this, layerEle, layerIndex, this.isTileMap ? this.tileZoomLevel : this.mapLayerPanel['currentFactor'], 'AddMarker');\n                    this.arrangeTemplate();\n                }\n            }\n            else {\n                for (var i = 0; i < this.layers.length; i++) {\n                    var layerEle = document.getElementById(this.element.id + '_LayerIndex_' + i);\n                    this.markerModule.zoomedMarkerCluster[i] = [];\n                    this.markerModule.initialMarkerCluster[i] = [];\n                    this.markerModule.markerRender(this, layerEle, i, this.isTileMap ? this.tileZoomLevel : this.mapLayerPanel['currentFactor'], null);\n                }\n                this.arrangeTemplate();\n            }\n        }\n    };\n    /**\n     * This method is used to select the geometric shape element in the maps.\n     *\n     * @param {number} layerIndex - Specifies the index of the layer in maps.\n     * @param {string | string[]} propertyName - Specifies the property name from the data source.\n     * @param {string} name - Specifies the name of the shape, which is mapped from the data source, that is selected.\n     * @param {boolean} enable - Specifies whether the shape should be selected or the selection should be removed.\n     * @returns {void}\n     */\n    Maps.prototype.shapeSelection = function (layerIndex, propertyName, name, enable) {\n        if (!this.isDestroyed && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.layers[layerIndex])) {\n            var targetEle = void 0;\n            var subLayerIndex = void 0;\n            var popertyNameArray = Array.isArray(propertyName) ? propertyName : Array(propertyName);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(enable)) {\n                enable = true;\n            }\n            var selectionsettings = this.layers[layerIndex].selectionSettings;\n            if (!selectionsettings.enableMultiSelect && this.legendSelection && enable) {\n                this.removeShapeSelection();\n            }\n            if (this.layers[layerIndex].type === 'SubLayer') {\n                for (var i = 0; i < this.layersCollection.length; i++) {\n                    if ((this.layersCollection[i].shapeData === this.layers[layerIndex].shapeData)) {\n                        subLayerIndex = i;\n                        break;\n                    }\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(selectionsettings) && selectionsettings.enable) {\n                var targetId = void 0;\n                var dataIndex = void 0;\n                var shapeIndex = void 0;\n                var indexValue = void 0;\n                /* eslint-disable @typescript-eslint/no-explicit-any */\n                var shapeDataValue = void 0;\n                var data = void 0;\n                var shapeData = this.layers[layerIndex].shapeData['features'];\n                /* eslint-enable @typescript-eslint/no-explicit-any */\n                for (var i = 0; i < shapeData.length; i++) {\n                    for (var j = 0; j < popertyNameArray.length; j++) {\n                        var propertyName_1 = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapeData[i]['properties'][popertyNameArray[j]])\n                            && isNaN(shapeData[i]['properties'][popertyNameArray[j]]) ?\n                            shapeData[i]['properties'][popertyNameArray[j]].toLowerCase() : shapeData[i]['properties'][popertyNameArray[j]];\n                        var shapeName = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(name) && typeof name === 'string' ? name.toLowerCase() : name;\n                        var k = void 0;\n                        if (propertyName_1 === shapeName) {\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.layers[layerIndex].shapeSettings.colorValuePath)) {\n                                k = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.checkShapeDataFields)(\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                this.layers[layerIndex].dataSource, shapeData[i]['properties'], this.layers[layerIndex].shapeDataPath, this.layers[layerIndex].shapePropertyPath, this.layers[layerIndex]);\n                            }\n                            var baseLayer = this.layers[layerIndex];\n                            if (this.baseLayerIndex >= 0 && baseLayer.isBaseLayer) {\n                                indexValue = 0;\n                            }\n                            else if (this.layers[layerIndex].type === 'SubLayer') {\n                                indexValue = subLayerIndex;\n                            }\n                            targetId = this.element.id + '_' + 'LayerIndex_' + indexValue + '_shapeIndex_' + i + '_dataIndex_' + k;\n                            targetEle = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElement)(targetId);\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(k) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(targetEle)) {\n                                targetId = this.element.id + '_' + 'LayerIndex_' + layerIndex + '_shapeIndex_' + i + '_dataIndex_null';\n                                targetEle = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElement)(targetId);\n                            }\n                            shapeIndex = parseInt(targetEle.id.split('_shapeIndex_')[1].split('_')[0], 10);\n                            shapeDataValue = this.layers[layerIndex].shapeData['features']['length'] > shapeIndex ?\n                                this.layers[layerIndex].shapeData['features'][shapeIndex]['properties'] : null;\n                            dataIndex = parseInt(targetEle.id.split('_dataIndex_')[1].split('_')[0], 10);\n                            data = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dataIndex) ? null : this.layers[layerIndex].dataSource[dataIndex];\n                            if (enable) {\n                                (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.triggerItemSelectionEvent)(selectionsettings, this, targetEle, shapeDataValue, data);\n                                this.shapeSelectionClass = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElement)('ShapeselectionMap');\n                                if (this.legendSettings.visible && targetEle.id.indexOf('_MarkerIndex_') === -1) {\n                                    this.legendModule.shapeHighLightAndSelection(targetEle, data, selectionsettings, 'selection', layerIndex);\n                                }\n                                var shapeToggled = this.legendSettings.visible ? this.legendModule.shapeToggled : true;\n                                if (shapeToggled) {\n                                    targetEle.setAttribute('class', 'ShapeselectionMapStyle');\n                                    if (this.selectedElementId.indexOf(targetEle.getAttribute('id')) === -1) {\n                                        this.selectedElementId.push(targetEle.getAttribute('id'));\n                                    }\n                                    if (!selectionsettings.enableMultiSelect) {\n                                        return;\n                                    }\n                                }\n                            }\n                            else {\n                                this.legendSelection = (!selectionsettings.enableMultiSelect && !this.legendSelection) ?\n                                    true : this.legendSelection;\n                                if (this.legendSettings.visible && targetEle.id.indexOf('_MarkerIndex_') === -1 &&\n                                    targetEle.getAttribute('class') === 'ShapeselectionMapStyle') {\n                                    this.legendModule.shapeHighLightAndSelection(targetEle, data, selectionsettings, 'selection', layerIndex);\n                                }\n                                var shapeToggled = this.legendSettings.visible ? this.legendModule.shapeToggled : true;\n                                if (shapeToggled) {\n                                    (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeClass)(targetEle);\n                                    var selectedElementIdIndex = this.selectedElementId.indexOf(targetEle.getAttribute('id'));\n                                    if (selectedElementIdIndex !== -1) {\n                                        this.selectedElementId.splice(selectedElementIdIndex, 1);\n                                        if (!selectionsettings.enableMultiSelect && this.legendSelection\n                                            && this.selectedElementId.length > 0) {\n                                            this.removeShapeSelection();\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * This method is used to zoom the maps based on the provided coordinates.\n     *\n     * @param {number} minLatitude - Specifies the minimum latitude of the location to be zoomed.\n     * @param {number} minLongitude - Specifies the minimum latitude of the location to be zoomed.\n     * @param {number} maxLatitude - Specifies the maximum latitude of the location to be zoomed.\n     * @param {number} maxLongitude - Specifies the maximum longitude of the location to be zoomed.\n     * @returns {void}\n     */\n    Maps.prototype.zoomToCoordinates = function (minLatitude, minLongitude, maxLatitude, maxLongitude) {\n        var _a, _b;\n        if (!this.isDestroyed) {\n            this.isMarkerZoomCompleted = false;\n            var centerLatitude = void 0;\n            var centerLongtitude = void 0;\n            var isTwoCoordinates = false;\n            this.centerPosition = {\n                latitude: null,\n                longitude: null\n            };\n            this.isZoomByPosition = false;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(maxLatitude) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(maxLongitude)\n                || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(minLatitude) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(minLongitude)) {\n                minLatitude = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(minLatitude) ? 0 : minLatitude;\n                minLongitude = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(minLatitude) ? 0 : minLongitude;\n                maxLatitude = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(maxLatitude) ? minLatitude : maxLatitude;\n                maxLongitude = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(maxLongitude) ? minLongitude : maxLongitude;\n                isTwoCoordinates = true;\n            }\n            if (minLatitude > maxLatitude) {\n                _a = [maxLatitude, minLatitude], minLatitude = _a[0], maxLatitude = _a[1];\n            }\n            if (minLongitude > maxLongitude) {\n                _b = [maxLongitude, minLongitude], minLongitude = _b[0], maxLongitude = _b[1];\n            }\n            if (!isTwoCoordinates) {\n                centerLatitude = (minLatitude + maxLatitude) / 2;\n                centerLongtitude = (minLongitude + maxLongitude) / 2;\n            }\n            else {\n                centerLatitude = (minLatitude + maxLatitude);\n                centerLongtitude = (minLongitude + maxLongitude);\n            }\n            this.centerLatOfGivenLocation = centerLatitude;\n            this.centerLongOfGivenLocation = centerLongtitude;\n            this.minLatOfGivenLocation = minLatitude;\n            this.minLongOfGivenLocation = minLongitude;\n            this.maxLatOfGivenLocation = maxLatitude;\n            this.maxLongOfGivenLocation = maxLongitude;\n            this.zoomNotApplied = true;\n            this.scaleOfGivenLocation = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.calculateZoomLevel)(minLatitude, maxLatitude, minLongitude, maxLongitude, this.mapAreaRect.width, this.mapAreaRect.height, this, true);\n            var minMaxLatitudeLongitude = this.getMinMaxLatitudeLongitude();\n            var zoomArgs = {\n                cancel: false, name: 'zoom', type: _model_constants__WEBPACK_IMPORTED_MODULE_4__.zoomIn, maps: this,\n                tileTranslatePoint: {}, translatePoint: {},\n                tileZoomLevel: this.isTileMap ? { previous: this.tileZoomLevel, current: this.scaleOfGivenLocation } : {},\n                scale: !this.isTileMap ? { previous: this.scale, current: this.scaleOfGivenLocation } :\n                    { previous: this.tileZoomLevel, current: this.scaleOfGivenLocation },\n                minLatitude: minMaxLatitudeLongitude.minLatitude, maxLatitude: minMaxLatitudeLongitude.maxLatitude,\n                minLongitude: minMaxLatitudeLongitude.minLongitude, maxLongitude: minMaxLatitudeLongitude.maxLongitude\n            };\n            this.trigger('zoom', zoomArgs);\n            this.refresh();\n        }\n    };\n    /**\n     * This method is used to remove multiple selected shapes in the maps.\n     *\n     * @returns {void}\n     */\n    Maps.prototype.removeShapeSelection = function () {\n        var selectedElements = this.selectedElementId.length;\n        for (var i = 0; i < selectedElements; i++) {\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeClass)((0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(this.selectedElementId[0]));\n            this.selectedElementId.splice(0, 1);\n        }\n        if (this.legendSettings.visible) {\n            var legendSelectedElements = this.legendSelectionCollection.length;\n            for (var i = 0; i < legendSelectedElements; i++) {\n                (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeClass)((0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(this.legendSelectionCollection[i]['legendElement']['id']));\n                this.selectedLegendElementId.splice(0, 1);\n            }\n        }\n        this.shapeSelectionItem = [];\n        this.legendSelectionCollection = [];\n    };\n    /**\n     * This method is used to set culture for maps.\n     *\n     * @returns {void}\n     */\n    Maps.prototype.setCulture = function () {\n        this.intl = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization();\n        this.setLocaleConstants();\n        this.localeObject = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n(this.getModuleName(), this.defaultLocalConstants, this.locale);\n    };\n    /**\n     * This method to set locale constants to the maps.\n     *\n     * @returns {void}\n     */\n    Maps.prototype.setLocaleConstants = function () {\n        // Need to modify after the api confirm\n        this.defaultLocalConstants = {\n            ZoomIn: 'Zoom in',\n            Zoom: 'Zoom',\n            ZoomOut: 'Zoom out',\n            Pan: 'Pan',\n            Reset: 'Reset',\n            ImageNotFound: 'Image Not Found'\n        };\n    };\n    /**\n     * This method destroys the maps. This method removes the events associated with the maps and disposes the objects created for rendering and updating the maps.\n     *\n     * @returns {void}\n     */\n    Maps.prototype.destroy = function () {\n        this.unWireEVents();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.mapsTooltipModule)) {\n            this.mapsTooltipModule.removeEventListener();\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.zoomModule)) {\n            this.zoomModule.removeEventListener();\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.legendModule)) {\n            this.legendModule.removeEventListener();\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.selectionModule)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.selectionModule.removeEventListener();\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.highlightModule)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.highlightModule.removeEventListener();\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.bingMap)) {\n            this.bingMap.destroy();\n        }\n        _super.prototype.destroy.call(this);\n        this.shapeSelectionItem = [];\n        this.toggledElementId = [];\n        this.toggledLegendId = [];\n        this.legendSelectionCollection = [];\n        this.selectedLegendElementId = [];\n        this.selectedNavigationElementId = [];\n        this.selectedBubbleElementId = [];\n        this.selectedMarkerElementId = [];\n        this.selectedElementId = [];\n        this.dataLabelShape = [];\n        this.zoomShapeCollection = [];\n        this.zoomLabelPositions = [];\n        this.mouseDownEvent = { x: null, y: null };\n        this.mouseClickEvent = { x: null, y: null };\n        this.formatFunction = null;\n        this.localeObject = null;\n        this.defaultLocalConstants = null;\n        this.intl = null;\n        this.mapAreaRect = null;\n        this.layersCollection = null;\n        this.themeStyle = null;\n        this.totalRect = null;\n        this.baseSize = null;\n        this.baseMapBounds = null;\n        this.baseMapRectBounds = null;\n        this.baseTranslatePoint = null;\n        this.baseTileTranslatePoint = null;\n        this.markerZoomCenterPoint = null;\n        this.currentTiles = null;\n        this.serverProcess = null;\n        this.toolbarProperties = null;\n        this.zoomLabelPositions = null;\n        this.resizeEvent = null;\n        this.availableSize = null;\n        if (document.getElementById('mapsmeasuretext')) {\n            document.getElementById('mapsmeasuretext').remove();\n        }\n        this.removeSvg();\n        this.svgObject = null;\n        this.mapLayerPanel = null;\n        this.renderer = null;\n        this.translatePoint = null;\n        this.tileTranslatePoint = null;\n        this.previousPoint = null;\n        this.dataLabelShape = [];\n        this.zoomShapeCollection = [];\n        this.selectedElementId = [];\n        this.selectedMarkerElementId = [];\n        this.selectedBubbleElementId = [];\n        this.shapeSelectionClass = null;\n        this.markerSelectionClass = null;\n        this.bubbleSelectionClass = null;\n        this.navigationSelectionClass = null;\n        this.selectedNavigationElementId = [];\n        this.polygonSelectionClass = null;\n        this.selectedPolygonElementId = [];\n        this.legendSelectionClass = null;\n        this.previousTranslate = null;\n        this.initialTileTranslate = null;\n        this.markerDragArgument = null;\n    };\n    /**\n     * Gets component name.\n     *\n     * @returns {string} - Returns the string value\n     * @private\n     */\n    Maps.prototype.getModuleName = function () {\n        return 'maps';\n    };\n    /**\n     * Gets the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string value\n     * @private\n     */\n    Maps.prototype.getPersistData = function () {\n        var keyEntity = ['translatePoint', 'zoomSettings', 'mapScaleValue', 'tileTranslatePoint', 'baseTranslatePoint',\n            'scale', 'zoomPersistence', 'defaultState', 'markerZoomedState', 'initialCheck', 'initialZoomLevel', 'initialTileTranslate',\n            'applyZoomReset', 'markerZoomFactor'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {MapsModel} newProp - Specifies the new property\n     * @param {MapsModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    Maps.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.isDestroyed) {\n            var render = false;\n            var isMarker = false;\n            var isLayer = false;\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'background':\n                        this.renderBorder();\n                        break;\n                    case 'height':\n                    case 'width':\n                    case 'layers':\n                    case 'projectionType':\n                    case 'centerPosition':\n                    case 'legendSettings':\n                    case 'baseLayerIndex':\n                        if (prop === 'layers') {\n                            isLayer = true;\n                            var layerPropLength = Object.keys(newProp.layers).length;\n                            for (var x = 0; x < layerPropLength; x++) {\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.layers[x])) {\n                                    var collection = Object.keys(newProp.layers[x]);\n                                    for (var _b = 0, collection_1 = collection; _b < collection_1.length; _b++) {\n                                        var collectionProp = collection_1[_b];\n                                        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.layers[x].shapeData)\n                                            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.layers[x].urlTemplate) && this.layers[x].urlTemplate !== '')) {\n                                            this.isReset = true;\n                                        }\n                                        else if (collectionProp === 'markerSettings') {\n                                            isMarker = true;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        render = true;\n                        break;\n                    case 'zoomSettings':\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(oldProp.zoomSettings)) {\n                            if (newProp.zoomSettings.zoomFactor !== oldProp.zoomSettings.zoomFactor && !isLayer) {\n                                render = false;\n                            }\n                            else if (newProp.zoomSettings.shouldZoomInitially !== oldProp.zoomSettings.shouldZoomInitially) {\n                                this.zoomSettings.zoomFactor = 1;\n                                this.previousProjection = null;\n                                this.scale = this.isMarkerZoomCompleted ? null : this.scale;\n                                this.isMarkerZoomCompleted = !newProp.zoomSettings.shouldZoomInitially;\n                                render = true;\n                            }\n                            else if (newProp.zoomSettings.enable !== oldProp.zoomSettings.enable) {\n                                this.zoomSettings.zoomFactor = 1;\n                                render = true;\n                            }\n                            else {\n                                render = true;\n                            }\n                        }\n                        break;\n                    case 'locale':\n                    case 'currencyCode':\n                        _super.prototype.refresh.call(this);\n                        break;\n                }\n            }\n            if (render) {\n                if (newProp.layers && isMarker) {\n                    (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeElement)(this.element.id + '_Markers_Group');\n                    if (this.isTileMap) {\n                        this.mapLayerPanel.renderTileLayer(this.mapLayerPanel, this.layers['currentFactor'], (this.layers.length - 1));\n                    }\n                    else {\n                        this.render();\n                    }\n                }\n                else {\n                    this.createSVG();\n                    this.renderElements();\n                }\n            }\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering.\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    Maps.prototype.requiredModules = function () {\n        var modules = [];\n        var isVisible = this.findVisibleLayers(this.layers);\n        var annotationEnable = false;\n        this.annotations.map(function (annotation) {\n            annotationEnable = annotation.content != null;\n        });\n        if (this.isBubbleVisible()) {\n            modules.push({\n                member: 'Bubble',\n                args: [this],\n                name: 'Bubble'\n            });\n        }\n        if (isVisible.highlight) {\n            modules.push({\n                member: 'Highlight',\n                args: [this],\n                name: 'Highlight'\n            });\n        }\n        if (isVisible.selection) {\n            modules.push({\n                member: 'Selection',\n                args: [this],\n                name: 'Selection'\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this],\n                name: 'Legend'\n            });\n        }\n        if (this.zoomSettings.enable || this.zoomSettings.zoomFactor > this.zoomSettings.minZoom) {\n            modules.push({\n                member: 'Zoom',\n                args: [this],\n                name: 'Zoom'\n            });\n        }\n        if (this.isMarkersVisible()) {\n            modules.push({\n                member: 'Marker',\n                args: [this],\n                name: 'Marker'\n            });\n        }\n        if (this.isDataLabelVisible()) {\n            modules.push({\n                member: 'DataLabel',\n                args: [this],\n                name: 'DataLabel'\n            });\n        }\n        if (this.isNavigationVisible()) {\n            modules.push({\n                member: 'NavigationLine',\n                args: [this],\n                name: 'NavigationLine'\n            });\n        }\n        if (this.isPolygonVisible()) {\n            modules.push({\n                member: 'Polygon',\n                args: [this],\n                name: 'Polygon'\n            });\n        }\n        if (isVisible.tooltip) {\n            modules.push({\n                member: 'MapsTooltip',\n                args: [this],\n                name: 'MapsTooltip'\n            });\n        }\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, _maps_user_interaction_annotation__WEBPACK_IMPORTED_MODULE_7__.Annotations],\n                name: 'Annotations'\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this],\n                name: 'Print'\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this],\n                name: 'ImageExport'\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this],\n                name: 'PdfExport'\n            });\n        }\n        return modules;\n    };\n    /**\n     * To find marker visibility.\n     *\n     * @returns {boolean} - Returns whether the markers are visible or not.\n     */\n    Maps.prototype.isMarkersVisible = function () {\n        var isVisible = false;\n        Array.prototype.forEach.call(this.layers, function (layer) {\n            for (var i = 0; i < layer.markerSettings.length; i++) {\n                if (layer.markerSettings[i].visible) {\n                    isVisible = true;\n                    break;\n                }\n            }\n        });\n        return isVisible;\n    };\n    /**\n     * To find DataLabel visibility.\n     *\n     * @returns {boolean} - Returns whether the data labels are visible or not.\n     */\n    Maps.prototype.isDataLabelVisible = function () {\n        var isVisible = false;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].dataLabelSettings.visible) {\n                isVisible = true;\n                break;\n            }\n        }\n        return isVisible;\n    };\n    /**\n     * To find navigation line visibility.\n     *\n     * @returns {boolean} - Returns whether the navigation lines are visible or not.\n     */\n    Maps.prototype.isNavigationVisible = function () {\n        var isVisible = false;\n        Array.prototype.forEach.call(this.layers, function (layer) {\n            for (var i = 0; i < layer.navigationLineSettings.length; i++) {\n                if (layer.navigationLineSettings[i].visible) {\n                    isVisible = true;\n                    break;\n                }\n            }\n        });\n        return isVisible;\n    };\n    /**\n     * To find navigation line visibility.\n     *\n     * @returns {boolean} - Returns whether the navigation lines are visible or not.\n     */\n    Maps.prototype.isPolygonVisible = function () {\n        var isVisible = false;\n        Array.prototype.forEach.call(this.layers, function (layer) {\n            for (var i = 0; i < layer.polygonSettings.polygons.length; i++) {\n                if (layer.polygonSettings.polygons.length > 0) {\n                    isVisible = true;\n                    break;\n                }\n            }\n        });\n        return isVisible;\n    };\n    /**\n     * To find marker visibility.\n     *\n     * @returns {boolean} - Returns whether the bubble is visible or not.\n     */\n    Maps.prototype.isBubbleVisible = function () {\n        var isVisible = false;\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            if (this.getBubbleVisible(layer)) {\n                isVisible = true;\n                break;\n            }\n        }\n        return isVisible;\n    };\n    /**\n     * To find the bubble visibility from layer.\n     *\n     * @param {LayerSettingsModel} layer - Spcifies the layer settings model\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    Maps.prototype.getBubbleVisible = function (layer) {\n        var isVisible = false;\n        for (var _i = 0, _a = layer.bubbleSettings; _i < _a.length; _i++) {\n            var bubble = _a[_i];\n            if (bubble.visible) {\n                isVisible = true;\n                break;\n            }\n        }\n        return isVisible;\n    };\n    /**\n     * This method handles the printing functionality for the maps.\n     *\n     * @param {string[] | string | Element} id - Specifies the element to be printed.\n     * @returns {void}\n     */\n    Maps.prototype.print = function (id) {\n        if ((this.allowPrint) && (this.printModule) && !this.isDestroyed) {\n            this.printModule.print(this, id);\n        }\n    };\n    /**\n     * This method handles the export functionality for the maps.\n     *\n     * @param {ExportType} type - Specifies the type of the exported file.\n     * @param {string} fileName - Specifies the name of the file with which the rendered maps need to be exported.\n     * @param {PdfPageOrientation} orientation - Specifies the orientation of the PDF document while exporting.\n     * @param {boolean} allowDownload - Specifies whether to download as a file or get as base64 string for the file.\n     * @returns {Promise<string>} - Specifies the base64 string of the exported image which is returned when the `allowDownload` is set to false.\n     */\n    Maps.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (!this.isDestroyed) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(allowDownload)) {\n                allowDownload = true;\n            }\n            if ((type !== 'PDF') && (this.allowImageExport) && (this.imageExportModule)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                return new Promise(function (resolve) {\n                    resolve(_this.imageExportModule.export(_this, type, fileName, allowDownload));\n                });\n            }\n            else if ((this.allowPdfExport) && (this.pdfExportModule)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                return new Promise(function (resolve) {\n                    resolve(_this.pdfExportModule.export(_this, type, fileName, allowDownload, orientation));\n                });\n            }\n        }\n        return null;\n    };\n    /**\n     * This method is used to get the Bing maps URL.\n     *\n     * @param {string} url - Specifies the URL of the Bing maps along with the API key.\n     * @returns {Promise<string>} - Returns the processed Bing URL as `Promise`.\n     */\n    Maps.prototype.getBingUrlTemplate = function (url) {\n        var promise;\n        if (!this.isDestroyed) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            promise = new Promise(function (resolve) {\n                var fetchApi = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Fetch({\n                    url: url\n                }); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                fetchApi.onSuccess = function (json) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var resource = json['resourceSets'][0]['resources'][0];\n                    resolve(resource['imageUrl']);\n                };\n                fetchApi.send();\n            });\n        }\n        return promise;\n    };\n    /**\n     * To find visibility of layers and markers for required modules load.\n     *\n     * @param {LayerSettingsModel[]} layers - Specifies the layers.\n     * @param {boolean} isLayerVisible - Specifies whether the layer is visible or not.\n     * @param {boolean} isBubblevisible - Specifies whether the bubble is visible or not.\n     * @param {boolean} istooltipVisible - Specifies whether the tooltip is visible or not.\n     * @param {boolean} isSelection - Specifies whether the shape is selectd or not.\n     * @param {boolean} isHighlight - Specfies whether the shape is highlighted or not.\n     * @returns {object} - Returns the boolean values in object.\n     */\n    Maps.prototype.findVisibleLayers = function (layers, isLayerVisible, isBubblevisible, istooltipVisible, isSelection, isHighlight) {\n        if (isLayerVisible === void 0) { isLayerVisible = false; }\n        if (isBubblevisible === void 0) { isBubblevisible = false; }\n        if (istooltipVisible === void 0) { istooltipVisible = false; }\n        if (isSelection === void 0) { isSelection = false; }\n        if (isHighlight === void 0) { isHighlight = false; }\n        var bubbles;\n        var markers;\n        var polygonSetting;\n        for (var _i = 0, layers_1 = layers; _i < layers_1.length; _i++) {\n            var layer = layers_1[_i];\n            isLayerVisible = layer.visible || isLayerVisible;\n            if (layer.visible) {\n                bubbles = layer.bubbleSettings;\n                markers = layer.markerSettings;\n                polygonSetting = layer.polygonSettings;\n                var navigationLine = layer.navigationLineSettings;\n                for (var _a = 0, navigationLine_1 = navigationLine; _a < navigationLine_1.length; _a++) {\n                    var navigation = navigationLine_1[_a];\n                    if (navigation.visible) {\n                        isSelection = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(navigation.highlightSettings) &&\n                            navigation.highlightSettings.enable) || isSelection;\n                        isHighlight = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(navigation.selectionSettings) &&\n                            navigation.selectionSettings.enable) || isHighlight;\n                    }\n                }\n                for (var _b = 0, _c = polygonSetting.polygons; _b < _c.length; _b++) {\n                    var polygon = _c[_b];\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(polygon.points) && polygon.points.length > 0) {\n                        isSelection = layer.polygonSettings.highlightSettings.enable || isSelection;\n                        isHighlight = layer.polygonSettings.selectionSettings.enable || isHighlight;\n                        istooltipVisible = layer.polygonSettings.tooltipSettings.visible || istooltipVisible;\n                    }\n                }\n                for (var _d = 0, markers_1 = markers; _d < markers_1.length; _d++) {\n                    var marker = markers_1[_d];\n                    if (marker.visible) {\n                        istooltipVisible = marker.tooltipSettings.visible || istooltipVisible;\n                        isSelection = marker.selectionSettings.enable || isSelection;\n                        isHighlight = marker.highlightSettings.enable || isHighlight;\n                    }\n                    if (istooltipVisible) {\n                        break;\n                    }\n                }\n                for (var _e = 0, bubbles_1 = bubbles; _e < bubbles_1.length; _e++) {\n                    var bubble = bubbles_1[_e];\n                    if (bubble.visible) {\n                        istooltipVisible = bubble.tooltipSettings.visible || istooltipVisible;\n                        isSelection = bubble.selectionSettings.enable || isSelection;\n                        isHighlight = bubble.highlightSettings.enable || isHighlight;\n                    }\n                    if (istooltipVisible) {\n                        break;\n                    }\n                }\n                istooltipVisible = layer.tooltipSettings.visible || istooltipVisible;\n                isSelection = layer.selectionSettings.enable || isSelection;\n                isHighlight = layer.highlightSettings.enable || isHighlight;\n            }\n            if (isLayerVisible && isBubblevisible && istooltipVisible) {\n                break;\n            }\n        }\n        return {\n            layer: isLayerVisible, bubble: isBubblevisible, tooltip: istooltipVisible,\n            selection: isSelection, highlight: isHighlight\n        };\n    };\n    /**\n     * This method is used to get the geographical coordinates for location points in pixels when shape maps are rendered in the maps.\n     *\n     * @param {number} layerIndex - Specifies the index number of the layer of the maps.\n     * @param {number} x - Specifies the x value in pixel.\n     * @param {number} y - Specifies the y value in pixel.\n     * @returns {GeoPosition}- Returns the geographical coordinates.\n     */\n    Maps.prototype.getGeoLocation = function (layerIndex, x, y) {\n        var latitude = null;\n        var longitude = null;\n        if (!this.isDestroyed && !this.isTileMap) {\n            var container = document.getElementById(this.element.id);\n            var elementClientRect = this.element.getBoundingClientRect();\n            var pageX = x - container.offsetLeft - (elementClientRect.left - container.offsetLeft) - window.scrollX;\n            var pageY = y - container.offsetTop - (elementClientRect.top - container.offsetTop) - window.scrollY;\n            var currentLayer = this.layersCollection[layerIndex];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var translate = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getTranslate)(this, currentLayer, false);\n            var translatePoint = translate['location'];\n            var translatePointX = translatePoint.x * this.scale;\n            var translatePointY = translatePoint.y * this.scale;\n            var mapSize = (Math.min(this.mapAreaRect.height, this.mapAreaRect.width)\n                * this.mapLayerPanel['currentFactor']) * this.scale;\n            var xx = (this.clip(pageX - translatePointX, 0, mapSize - 1) / mapSize) - 0.5;\n            var yy = 0.5 - (this.clip(pageY - translatePointY, 0, mapSize - 1) / mapSize);\n            latitude = 90 - 360 * Math.atan(Math.exp(-yy * 2 * Math.PI)) / Math.PI;\n            longitude = 360 * xx;\n        }\n        return { latitude: latitude, longitude: longitude };\n    };\n    Maps.prototype.clip = function (value, minVal, maxVal) {\n        return Math.min(Math.max(value, minVal), maxVal);\n    };\n    /**\n     * This method is used to get the geographical coordinates for location points in pixels when an online map provider is rendered in the maps.\n     *\n     * @param {number} x - Specifies the x value in pixel.\n     * @param {number} y - Specifies the y value in pixel.\n     * @returns {GeoPosition} - Returns the geographical coordinates.\n     */\n    Maps.prototype.getTileGeoLocation = function (x, y) {\n        var latitude = null;\n        var longitude = null;\n        if (this.isTileMap) {\n            var element = document.getElementById(this.element.id + '_tile_parent');\n            if (!this.isDestroyed && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var latLong = this.pointToLatLong(x + this.mapAreaRect.x - element.offsetLeft, y + this.mapAreaRect.y - element.offsetTop);\n                latitude = latLong['latitude'];\n                longitude = latLong['longitude'];\n            }\n        }\n        return { latitude: latitude, longitude: longitude };\n    };\n    /**\n     * This method is used to convert the point in pixels to latitude and longitude in maps.\n     *\n     * @param {number} pageX - Specifies the x position value in pixels.\n     * @param {number} pageY - Specifies the y position value in pixels.\n     * @returns {object} - Returns the latitude and longitude values.\n     */\n    Maps.prototype.pointToLatLong = function (pageX, pageY) {\n        var latitude = 0;\n        var longitude = 0;\n        if (!this.isDestroyed && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.translatePoint)) {\n            var padding = 10;\n            pageY = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.markerDragArgument) ? pageY + padding : pageY;\n            var mapSize = 256 * Math.pow(2, this.tileZoomLevel);\n            var x1 = (this.clip(pageX - (this.translatePoint.x * this.scale), 0, mapSize - 1) / mapSize) - 0.5;\n            var y1 = 0.5 - (this.clip(pageY - (this.translatePoint.y * this.scale), 0, mapSize - 1) / mapSize);\n            latitude = 90 - 360 * Math.atan(Math.exp(-y1 * 2 * Math.PI)) / Math.PI;\n            longitude = 360 * x1;\n        }\n        return { latitude: latitude, longitude: longitude };\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Maps.prototype, \"background\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Maps.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Maps.prototype, \"format\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Maps.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Maps.prototype, \"height\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('MouseMove')\n    ], Maps.prototype, \"tooltipDisplayMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Maps.prototype, \"allowPrint\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Maps.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Maps.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_base__WEBPACK_IMPORTED_MODULE_3__.TitleSettings)\n    ], Maps.prototype, \"titleSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_base__WEBPACK_IMPORTED_MODULE_3__.ZoomSettings)\n    ], Maps.prototype, \"zoomSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_base__WEBPACK_IMPORTED_MODULE_3__.LegendSettings)\n    ], Maps.prototype, \"legendSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([], _model_base__WEBPACK_IMPORTED_MODULE_3__.LayerSettings)\n    ], Maps.prototype, \"layers\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([], _model_base__WEBPACK_IMPORTED_MODULE_3__.Annotation)\n    ], Maps.prototype, \"annotations\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_base__WEBPACK_IMPORTED_MODULE_3__.Margin)\n    ], Maps.prototype, \"margin\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ color: '#DDDDDD', width: 0 }, _model_base__WEBPACK_IMPORTED_MODULE_3__.Border)\n    ], Maps.prototype, \"border\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Material')\n    ], Maps.prototype, \"theme\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Mercator')\n    ], Maps.prototype, \"projectionType\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], Maps.prototype, \"baseLayerIndex\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Maps.prototype, \"description\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], Maps.prototype, \"tabIndex\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ latitude: null, longitude: null }, _model_base__WEBPACK_IMPORTED_MODULE_3__.CenterPosition)\n    ], Maps.prototype, \"centerPosition\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_base__WEBPACK_IMPORTED_MODULE_3__.MapsAreaSettings)\n    ], Maps.prototype, \"mapsArea\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"load\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"beforePrint\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"loaded\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"click\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"onclick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"doubleClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"rightClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"resize\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"legendRendering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"tooltipRenderComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"shapeSelected\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"itemSelection\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"shapeHighlight\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"layerRendering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"shapeRendering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"markerRendering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"markerClusterRendering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"markerClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"markerDragStart\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"markerDragEnd\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"markerClusterClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"markerClusterMouseMove\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"markerMouseMove\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"mouseMove\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"dataLabelRendering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"bubbleRendering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"bubbleClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"bubbleMouseMove\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"animationComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"annotationRendering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"zoom\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"pan\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"panComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Maps.prototype, \"zoomComplete\", void 0);\n    Maps = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], Maps);\n    return Maps;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-maps/src/maps/maps.js?");

/***/ })

}]);