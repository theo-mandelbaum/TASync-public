"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_comments-8623c2cb"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/comments/comment.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/comments/comment.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CommentPane: () => (/* binding */ CommentPane),\n/* harmony export */   CommentReviewPane: () => (/* binding */ CommentReviewPane),\n/* harmony export */   CommentView: () => (/* binding */ CommentView)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _implementation_viewer_page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../implementation/viewer/page */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/viewer/page.js\");\n/* harmony import */ var _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-splitbuttons */ \"./node_modules/@syncfusion/ej2-splitbuttons/index.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\");\n/* harmony import */ var _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n/* harmony import */ var _base_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../base/index */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/index.js\");\n/* harmony import */ var _editor_editor_helper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../editor/editor-helper */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor/editor-helper.js\");\n/* harmony import */ var _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\");\n/* eslint-disable */\n\n\n\n\n\n\n\n\n\n/**\n * @private\n */\nvar CommentReviewPane = /** @class */ (function () {\n    function CommentReviewPane(owner) {\n        var _this = this;\n        this.isNewComment = false;\n        this.isUserClosed = false;\n        /**\n         * @private\n         */\n        this.postReply = false;\n        /**\n         * @private\n         */\n        this.selectedTab = 0;\n        /**\n         * @param {SelectEventArgs} arg - Specify the selection event args.\n         * @returns {void}\n         */\n        this.onTabSelection = function (arg) {\n            arg.preventFocus = true;\n            _this.selectedTab = arg.selectedIndex;\n            if (_this.selectedTab === 1) {\n                _this.owner.trackChangesPane.updateHeight();\n            }\n            else {\n                _this.commentPane.updateHeight();\n            }\n            setTimeout(function () {\n                if (_this.owner) {\n                    _this.owner.resize();\n                }\n            }, 10);\n        };\n        this.owner = owner;\n        var localObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', this.owner.defaultLocale);\n        localObj.setLocale(this.owner.locale);\n        this.initReviewPane(localObj);\n        this.parentPaneElement.style.display = 'none';\n    }\n    Object.defineProperty(CommentReviewPane.prototype, \"previousSelectedComment\", {\n        get: function () {\n            return this.previousSelectedCommentInt;\n        },\n        set: function (value) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value) && value !== this.previousSelectedCommentInt) {\n                if (this.commentPane.comments.containsKey(value)) {\n                    var commentStart = this.commentPane.getCommentStart(value);\n                    var commentMark = commentStart.commentMark;\n                    if (commentMark) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(commentMark, [], ['e-de-cmt-mark-selected']);\n                        this.commentPane.removeSelectionMark('e-de-cmt-selection');\n                        this.commentPane.removeSelectionMark('e-de-cmt-mark-selected');\n                    }\n                    var commentView = this.commentPane.comments.get(value);\n                    commentView.hideDrawer();\n                    for (var i = 0; i < value.replyComments.length; i++) {\n                        commentView = this.commentPane.comments.get(value.replyComments[i]);\n                        if (commentView) {\n                            commentView.hideDrawer();\n                            commentView.hideMenuItems();\n                        }\n                    }\n                }\n            }\n            this.previousSelectedCommentInt = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CommentReviewPane.prototype.selectReviewTab = function (tab) {\n        if (tab === 'Changes') {\n            this.reviewTab.select(1);\n        }\n        else {\n            this.reviewTab.select(0);\n        }\n    };\n    CommentReviewPane.prototype.showHidePane = function (show, tab) {\n        if (this.parentPaneElement) {\n            this.updateTabHeaderWidth();\n            if (show) {\n                this.parentPaneElement.style.display = 'block';\n                if (tab === 'Changes' && this.owner.showRevisions) {\n                    this.isCommentTabVisible = false;\n                    this.owner.notify('reviewPane', { comment: this.isCommentTabVisible, changes: true });\n                    this.reviewTab.select(1);\n                }\n                else {\n                    this.owner.trackChangesPane.isChangesTabVisible = false;\n                    this.owner.notify('reviewPane', { comment: true, changes: this.owner.trackChangesPane.isChangesTabVisible, isUserClosed: false });\n                    this.reviewTab.select(0);\n                }\n                this.owner.trackChangesPane.updateTrackChanges(this.owner.showRevisions);\n                this.commentPane.updateCommentStatus();\n            }\n            else {\n                this.parentPaneElement.style.display = 'none';\n            }\n            if (!this.owner.showRevisions) {\n                this.owner.trackChangesPane.isChangesTabVisible = false;\n                this.owner.notify('reviewPane', { comment: this.isCommentTabVisible, changes: this.owner.trackChangesPane.isChangesTabVisible });\n                this.reviewTab.hideTab(1, true);\n            }\n            if (!this.owner.showComments) {\n                this.isCommentTabVisible = false;\n                this.owner.notify('reviewPane', { comment: this.isCommentTabVisible, changes: this.owner.trackChangesPane.isChangesTabVisible });\n                this.reviewTab.hideTab(0, true);\n            }\n        }\n        if (show) {\n            this.enableDisableItems();\n            this.commentPane.updateHeight();\n        }\n        if (this.owner) {\n            this.owner.resize();\n            if (this.owner.enableAutoFocus) {\n                this.owner.documentHelper.updateFocus();\n            }\n        }\n    };\n    CommentReviewPane.prototype.reviewPaneHelper = function (args) {\n        var _this = this;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.isUserClosed)) {\n            if (args.isUserClosed !== this.isUserClosed) {\n                this.isUserClosed = args.isUserClosed;\n                if (this.owner) {\n                    setTimeout(function () {\n                        if (_this.owner) {\n                            _this.owner.resize();\n                        }\n                    }, 10);\n                }\n            }\n            else {\n                return;\n            }\n        }\n        else {\n            if (this.isUserClosed) {\n                return;\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.comment) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.changes)) {\n            if ((args.comment || args.changes)) {\n                if (this.parentPaneElement.style.display === 'none') {\n                    this.parentPaneElement.style.display = 'block';\n                }\n                if (this.owner) {\n                    setTimeout(function () {\n                        if (_this.owner) {\n                            _this.owner.resize();\n                        }\n                    }, 10);\n                }\n            }\n            else {\n                this.parentPaneElement.style.display = 'none';\n                if (this.owner) {\n                    setTimeout(function () {\n                        if (_this.owner) {\n                            _this.owner.resize();\n                        }\n                    }, 10);\n                }\n            }\n        }\n    };\n    CommentReviewPane.prototype.updateTabHeaderWidth = function () {\n        var reviewTabsEle = this.reviewTab.getRootElement().getElementsByClassName('e-tab-wrap');\n        reviewTabsEle[0].style.padding = '0 8px';\n        reviewTabsEle[1].style.padding = '0 8px';\n    };\n    CommentReviewPane.prototype.initReviewPane = function (localValue) {\n        var reviewContainer = this.owner.documentHelper.optionsPaneContainer;\n        reviewContainer.style.display = 'flex';\n        this.initPaneHeader(localValue);\n        reviewContainer.appendChild(this.addReviewTab(localValue));\n        this.initCommentPane();\n        this.owner.on('reviewPane', this.reviewPaneHelper, this);\n    };\n    CommentReviewPane.prototype.addReviewTab = function (localValue) {\n        var commentHeader = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { innerHTML: localValue.getConstant('Comments') });\n        var changesHeader = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { innerHTML: localValue.getConstant('Changes') });\n        this.parentPaneElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { styles: 'height:100%;overflow:auto;display:none', className: 'e-de-review-pane' });\n        this.element = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-property-tab', id: this.owner.element.id + 'Review_Tab' });\n        var items = [{ header: { text: commentHeader }, content: this.reviewPane }, { header: { text: changesHeader } }];\n        this.reviewTab = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_4__.Tab({ items: items, selected: this.onTabSelection, animation: { previous: { effect: 'None' }, next: { effect: 'None' } } });\n        this.reviewTab.appendTo(this.element);\n        if (this.owner.enableRtl) {\n            this.reviewTab.enableRtl = true;\n        }\n        this.reviewTab.enablePersistence = true;\n        this.parentPaneElement.appendChild(this.element);\n        return this.parentPaneElement;\n    };\n    CommentReviewPane.prototype.initPaneHeader = function (localValue) {\n        this.headerContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n        this.reviewPane = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-pane' });\n        if (this.owner.enableRtl) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.reviewPane, ['e-rtl'], []);\n        }\n        this.headerContainer.appendChild(this.initToolbar(localValue));\n        this.reviewPane.appendChild(this.headerContainer);\n        this.reviewPane.style.display = 'block';\n        return this.reviewPane;\n    };\n    CommentReviewPane.prototype.closePane = function () {\n        if (this.commentPane && this.commentPane.isEditMode) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.commentPane.currentEditingComment)\n                && this.commentPane.isInsertingReply && this.commentPane.currentEditingComment.replyViewTextBox.innerText === '') {\n                this.owner.documentHelper.currentSelectedComment = undefined;\n                this.commentPane.currentEditingComment.cancelReply();\n                this.owner.showComments = false;\n            }\n            else if (this.isNewComment || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.commentPane.currentEditingComment)\n                && this.commentPane.isInsertingReply && this.commentPane.currentEditingComment.replyViewTextBox.innerText !== '' ||\n                !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.commentPane.currentEditingComment) && !this.commentPane.isInsertingReply &&\n                    this.commentPane.currentEditingComment.textArea.innerText !== this.commentPane.currentEditingComment.comment.text) {\n                var localObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', this.owner.defaultLocale);\n                localObj.setLocale(this.owner.locale);\n                this.confirmDialog = _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_5__.DialogUtility.confirm({\n                    title: localObj.getConstant('Un-posted comments'),\n                    content: localObj.getConstant('Discard Comment'),\n                    okButton: {\n                        text: localObj.getConstant('Discard'), click: this.discardButtonClick.bind(this)\n                    },\n                    cancelButton: {\n                        text: localObj.getConstant('Cancel'), click: this.closeDialogUtils.bind(this)\n                    },\n                    showCloseIcon: true,\n                    closeOnEscape: true,\n                    animationSettings: { effect: 'Zoom' },\n                    position: { X: 'center', Y: 'center' }\n                });\n            }\n            else {\n                this.owner.documentHelper.currentSelectedComment = undefined;\n                this.commentPane.currentEditingComment.cancelEditing();\n                this.owner.showComments = false;\n            }\n        }\n        else {\n            this.owner.showComments = false;\n            //this.owner.showRevisions = false;\n            this.owner.documentHelper.currentSelectedComment = undefined;\n            this.owner.documentHelper.currentSelectedRevision = undefined;\n            this.owner.notify('reviewPane', { changes: false, comment: false, isUserClosed: true });\n        }\n    };\n    CommentReviewPane.prototype.discardButtonClick = function () {\n        if (this.commentPane.currentEditingComment) {\n            var isNewComment = this.isNewComment;\n            if (this.commentPane.currentEditingComment && this.commentPane.isInsertingReply) {\n                this.commentPane.currentEditingComment.cancelReply();\n            }\n            else {\n                this.commentPane.currentEditingComment.cancelEditing();\n            }\n            this.owner.documentHelper.currentSelectedComment = undefined;\n            this.closeDialogUtils();\n            this.owner.showComments = false;\n        }\n    };\n    CommentReviewPane.prototype.closeDialogUtils = function () {\n        this.confirmDialog.close();\n        this.confirmDialog = undefined;\n    };\n    CommentReviewPane.prototype.initToolbar = function (localValue) {\n        this.toolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n        this.toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_4__.Toolbar({\n            items: [\n                {\n                    prefixIcon: 'e-de-new-cmt e-de-cmt-tbr', tooltipText: localValue.getConstant('New Comment'),\n                    text: localValue.getConstant('New Comment'), click: this.insertComment.bind(this)\n                },\n                {\n                    prefixIcon: 'e-de-nav-left-arrow e-de-cmt-tbr', align: 'Right',\n                    tooltipText: localValue.getConstant('Previous Comment'), click: this.navigatePreviousComment.bind(this)\n                },\n                {\n                    prefixIcon: 'e-de-nav-right-arrow e-de-cmt-tbr', align: 'Right',\n                    tooltipText: localValue.getConstant('Next Comment'), click: this.navigateNextComment.bind(this)\n                }\n            ],\n            enableRtl: this.owner.enableRtl\n        });\n        this.toolbar.appendTo(this.toolbarElement);\n        return this.toolbarElement;\n    };\n    CommentReviewPane.prototype.insertComment = function () {\n        if (this.owner && this.owner.editorModule) {\n            this.owner.editorModule.isUserInsert = true;\n            this.owner.editorModule.insertComment('');\n            this.owner.editorModule.isUserInsert = false;\n        }\n    };\n    CommentReviewPane.prototype.addComment = function (comment, isNewComment, selectComment) {\n        this.isNewComment = isNewComment;\n        this.owner.documentHelper.currentSelectedComment = comment;\n        this.commentPane.insertComment(comment);\n        this.selectReviewTab('Comments');\n        if (!isNewComment) {\n            var commentView = this.commentPane.comments.get(comment);\n            commentView.cancelEditing();\n            this.enableDisableToolbarItem();\n        }\n        if (selectComment) {\n            this.selectComment(comment);\n        }\n    };\n    CommentReviewPane.prototype.deleteComment = function (comment) {\n        if (this.commentPane) {\n            this.commentPane.deleteComment(comment);\n        }\n    };\n    CommentReviewPane.prototype.selectComment = function (comment) {\n        if (this.commentPane.isEditMode) {\n            return;\n        }\n        if (comment.isReply) {\n            comment = comment.ownerComment;\n        }\n        if (this.owner && this.owner.viewer && this.owner.documentHelper.currentSelectedComment !== comment) {\n            this.owner.documentHelper.currentSelectedComment = comment;\n        }\n        this.commentPane.selectComment(comment);\n    };\n    CommentReviewPane.prototype.resolveComment = function (comment) {\n        this.commentPane.resolveComment(comment);\n    };\n    CommentReviewPane.prototype.reopenComment = function (comment) {\n        this.commentPane.reopenComment(comment);\n    };\n    CommentReviewPane.prototype.addReply = function (comment, newComment, selectComment) {\n        this.isNewComment = newComment;\n        this.postReply = true;\n        this.commentPane.insertReply(comment);\n        this.postReply = false;\n        if (!newComment) {\n            var commentView = this.commentPane.comments.get(comment);\n            commentView.cancelEditing();\n            this.enableDisableToolbarItem();\n        }\n        if (selectComment) {\n            this.selectComment(comment.ownerComment);\n        }\n    };\n    CommentReviewPane.prototype.navigatePreviousComment = function () {\n        if (this.owner && this.owner.editorModule) {\n            this.owner.selectionModule.navigatePreviousComment();\n        }\n    };\n    CommentReviewPane.prototype.navigateNextComment = function () {\n        if (this.owner && this.owner.editorModule) {\n            this.owner.selectionModule.navigateNextComment();\n        }\n    };\n    CommentReviewPane.prototype.enableDisableItems = function () {\n        this.enableDisableToolbarItem();\n        var keys = this.commentPane.comments.keys;\n        for (var i = 0; i < keys.length; i++) {\n            var commentView = this.commentPane.comments.get(keys[i]);\n            if (this.owner.isReadOnly) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(commentView.replyViewTextBox)) {\n                    commentView.replyViewTextBox.style.display = 'none';\n                }\n                commentView.menuBar.style.display = 'none';\n                if (commentView.resolveView) {\n                    commentView.resolveView.style.display = 'none';\n                }\n            }\n            else {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(commentView.replyViewTextBox)) {\n                    commentView.replyViewTextBox.style.display = 'block';\n                }\n                commentView.menuBar.style.display = 'block';\n                if (commentView.resolveView) {\n                    commentView.resolveView.style.display = '';\n                }\n            }\n        }\n    };\n    CommentReviewPane.prototype.enableDisableToolbarItem = function () {\n        if (this.toolbar) {\n            var enable = true;\n            if (this.commentPane.isEditMode) {\n                enable = !this.commentPane.isEditMode;\n            }\n            if (this.owner.isReadOnly) {\n                enable = !this.owner.isReadOnly;\n            }\n            var elements = this.toolbar.element.querySelectorAll('.' + 'e-de-cmt-tbr');\n            this.toolbar.enableItems(elements[0].parentElement.parentElement, enable);\n            if (enable && this.owner && this.owner.viewer) {\n                enable = !(this.owner.documentHelper.comments.length === 0);\n            }\n            this.toolbar.enableItems(elements[1].parentElement.parentElement, enable);\n            this.toolbar.enableItems(elements[2].parentElement.parentElement, enable);\n        }\n    };\n    CommentReviewPane.prototype.initCommentPane = function () {\n        this.commentPane = new CommentPane(this.owner, this);\n        this.commentPane.initCommentPane();\n    };\n    CommentReviewPane.prototype.layoutComments = function (commentCollection) {\n        for (var i = 0; i < commentCollection.length; i++) {\n            var comment = commentCollection[i];\n            if (this.isUnreferredComment(comment)) {\n                commentCollection.splice(i, 1);\n                i--;\n                continue;\n            }\n            for (var j = 0; j < comment.replyComments.length; j++) {\n                if (this.isUnreferredComment(comment.replyComments[j])) {\n                    comment.replyComments.splice(j, 1);\n                    j--;\n                }\n            }\n            this.commentPane.addComment(comment);\n        }\n    };\n    CommentReviewPane.prototype.isUnreferredComment = function (comment) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(comment.commentStart)\n            || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(comment.commentEnd)) {\n            return true;\n        }\n        return false;\n    };\n    CommentReviewPane.prototype.clear = function () {\n        this.previousSelectedCommentInt = undefined;\n        this.isNewComment = false;\n        this.isUserClosed = false;\n        this.isNewComment = false;\n        this.commentPane.clear();\n    };\n    CommentReviewPane.prototype.discardComment = function (comment) {\n        if (comment) {\n            if (this.owner.editorHistoryModule) {\n                if (this.owner.editorHistoryModule.undoStack.length > 0\n                    && this.owner.editorHistoryModule.undoStack[this.owner.editorHistoryModule.undoStack.length - 1].action === 'InsertComment') {\n                    this.owner.editorHistoryModule.undo();\n                    this.owner.editorHistoryModule.redoStack.pop();\n                }\n                this.owner.editorModule.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n                this.owner.editorModule.deleteCommentInternal(comment);\n                this.owner.editorModule.isSkipOperationsBuild = false;\n            }\n            else if (this.owner.editorModule) {\n                this.owner.editorModule.deleteCommentInternal(comment);\n            }\n        }\n    };\n    CommentReviewPane.prototype.destroy = function () {\n        if (this.commentPane) {\n            this.commentPane.destroy();\n        }\n        this.commentPane = undefined;\n        if (this.toolbar) {\n            this.toolbar.destroy();\n        }\n        this.toolbar = undefined;\n        if (this.toolbarElement && this.toolbarElement.parentElement) {\n            this.toolbarElement.parentElement.removeChild(this.toolbarElement);\n        }\n        this.toolbarElement = undefined;\n        if (this.headerContainer && this.headerContainer.parentElement) {\n            this.headerContainer.parentElement.removeChild(this.headerContainer);\n        }\n        this.headerContainer = undefined;\n        this.previousSelectedCommentInt = undefined;\n        if (this.reviewPane && this.reviewPane.parentElement) {\n            this.reviewPane.parentElement.removeChild(this.reviewPane);\n        }\n        if (!this.owner.isDestroyed) {\n            this.owner.off('reviewPane', this.reviewPaneHelper);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.reviewTab)) {\n            this.reviewTab.destroy();\n        }\n        this.reviewTab = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.confirmDialog)) {\n            this.confirmDialog.destroy();\n        }\n        this.confirmDialog = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.previousSelectedCommentInt)) {\n            this.previousSelectedCommentInt.destroy();\n        }\n        this.previousSelectedCommentInt = undefined;\n        if (this.reviewPane) {\n            this.reviewPane.innerHTML = '';\n            if (this.reviewPane.parentElement) {\n                this.reviewPane.parentElement.removeChild(this.reviewPane);\n            }\n        }\n        this.reviewPane = undefined;\n        if (this.parentPaneElement) {\n            this.parentPaneElement.innerHTML = '';\n            if (this.parentPaneElement.parentElement) {\n                this.parentPaneElement.parentElement.removeChild(this.parentPaneElement);\n            }\n        }\n        this.parentPaneElement = undefined;\n        this.owner = undefined;\n    };\n    return CommentReviewPane;\n}());\n\n/**\n * @private\n */\nvar CommentPane = /** @class */ (function () {\n    function CommentPane(owner, pane) {\n        this.isEditModeInternal = false;\n        this.isInsertingReply = false;\n        this.owner = owner;\n        this.parentPane = pane;\n        this.parent = pane.reviewPane;\n        this.comments = new _base_index__WEBPACK_IMPORTED_MODULE_6__.Dictionary();\n    }\n    Object.defineProperty(CommentPane.prototype, \"isEditMode\", {\n        get: function () {\n            return this.isEditModeInternal;\n        },\n        set: function (value) {\n            this.isEditModeInternal = value;\n            var keys = this.comments.keys;\n            for (var i = 0; i < keys.length; i++) {\n                var commentView = this.comments.get(keys[i]);\n                if (value) {\n                    commentView.menuBar.style.display = 'none';\n                }\n                else if (!commentView.comment.isReply) {\n                    commentView.menuBar.style.display = 'block';\n                }\n            }\n            if (this.parentPane) {\n                this.parentPane.enableDisableToolbarItem();\n            }\n            if (this.owner) {\n                if (this.isEditModeInternal) {\n                    this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.commentBeginEvent);\n                }\n                else {\n                    this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.commentEndEvent);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CommentPane.prototype.initCommentPane = function () {\n        this.commentPane = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-container e-de-scrollbar-hide' });\n        var localObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', this.owner.defaultLocale);\n        localObj.setLocale(this.owner.locale);\n        this.noCommentIndicator = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: 'e-de-cmt-no-cmt',\n            innerHTML: localObj.getConstant('No comments in this document')\n        });\n        this.commentPane.appendChild(this.noCommentIndicator);\n        this.parent.appendChild(this.commentPane);\n    };\n    CommentPane.prototype.addComment = function (comment) {\n        var commentView = new CommentView(this.owner, this, comment);\n        var commentParent = commentView.layoutComment(false);\n        this.comments.add(comment, commentView);\n        this.commentPane.appendChild(commentParent);\n        for (var i = 0; i < comment.replyComments.length; i++) {\n            var replyView = new CommentView(this.owner, this, comment.replyComments[i]);\n            this.comments.add(comment.replyComments[i], replyView);\n            commentParent.insertBefore(replyView.layoutComment(true), commentView.replyViewContainer);\n        }\n        this.updateCommentStatus();\n        commentView.hideDrawer();\n    };\n    CommentPane.prototype.updateHeight = function () {\n        var tabHeaderHeight = this.parentPane.reviewTab.getRootElement().getElementsByClassName('e-tab-header')[0].getBoundingClientRect().height;\n        this.commentPane.style.height = this.parentPane.parentPaneElement.clientHeight - this.parentPane.headerContainer.clientHeight - tabHeaderHeight + 'px';\n    };\n    CommentPane.prototype.insertReply = function (replyComment) {\n        var parentComment = replyComment.ownerComment;\n        var parentView = this.comments.get(parentComment);\n        var replyView = new CommentView(this.owner, this, replyComment);\n        this.comments.add(replyComment, replyView);\n        var replyElement = replyView.layoutComment(true);\n        var replyIndex = parentComment.replyComments.indexOf(replyComment);\n        if (replyIndex === parentComment.replyComments.length - 1) {\n            parentView.parentElement.insertBefore(replyElement, parentView.replyViewContainer);\n        }\n        else {\n            var nextReply = parentComment.replyComments[replyIndex + 1];\n            parentView.parentElement.insertBefore(replyElement, this.comments.get(nextReply).parentElement);\n        }\n        replyView.editComment();\n    };\n    CommentPane.prototype.insertComment = function (comment) {\n        var commentView = new CommentView(this.owner, this, comment);\n        var commentParent = commentView.layoutComment(false);\n        this.comments.add(comment, commentView);\n        if (this.owner.documentHelper.comments.indexOf(comment) === this.owner.documentHelper.comments.length - 1) {\n            this.commentPane.appendChild(commentParent);\n        }\n        else {\n            var index = this.owner.documentHelper.comments.indexOf(comment);\n            var element = this.comments.get(this.owner.documentHelper.comments[index + 1]).parentElement;\n            this.commentPane.insertBefore(commentParent, element);\n            commentParent.focus();\n        }\n        this.updateCommentStatus();\n        commentView.editComment();\n    };\n    CommentPane.prototype.removeSelectionMark = function (className) {\n        if (this.parent) {\n            var elements = this.parent.getElementsByClassName(className);\n            for (var i = 0; i < elements.length; i++) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(elements[i], [], [className]);\n            }\n        }\n    };\n    CommentPane.prototype.selectComment = function (comment) {\n        this.removeSelectionMark('e-de-cmt-selection');\n        if (comment.isReply) {\n            comment = comment.ownerComment;\n        }\n        if (comment) {\n            this.owner.notify('reviewPane', { comment: true, changes: this.owner.trackChangesPane.isChangesTabVisible });\n            var commentView = this.comments.get(comment);\n            var selectedElement = commentView.parentElement;\n            if (selectedElement) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(selectedElement, ['e-de-cmt-selection'], []);\n                selectedElement.focus();\n            }\n            var commentStart = this.getCommentStart(comment);\n            if (!commentStart.commentMark) {\n                commentStart.renderCommentMark();\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(commentStart.commentMark, ['e-de-cmt-mark-selected'], []);\n            commentView.showDrawer();\n        }\n    };\n    CommentPane.prototype.getCommentStart = function (comment) {\n        var localValue = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', this.owner.defaultLocale);\n        localValue.setLocale(this.owner.locale);\n        var commentStart = undefined;\n        if (comment && comment.commentStart) {\n            commentStart = comment.commentStart;\n        }\n        if (commentStart.commentMark !== undefined) {\n            commentStart.commentMark.title = localValue.getConstant('Click to see this comment');\n        }\n        return this.getFirstCommentInLine(commentStart);\n    };\n    CommentPane.prototype.getFirstCommentInLine = function (commentStart) {\n        for (var i = 0; i < commentStart.line.children.length; i++) {\n            var startComment = commentStart.line.children[i];\n            if (startComment instanceof _implementation_viewer_page__WEBPACK_IMPORTED_MODULE_1__.CommentCharacterElementBox && startComment.commentType === 0) {\n                return startComment;\n            }\n        }\n        return commentStart;\n    };\n    CommentPane.prototype.deleteComment = function (comment) {\n        var commentView = this.comments.get(comment);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(commentView)) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentEditingComment)\n                && commentView.comment.commentId == this.currentEditingComment.comment.commentId) {\n                this.isEditMode = false;\n                this.currentEditingComment = undefined;\n            }\n            if (commentView.parentElement && commentView.parentElement.parentElement) {\n                commentView.parentElement.parentElement.removeChild(commentView.parentElement);\n            }\n            //this.commentPane.removeChild();\n            for (var i = 0; i < comment.replyComments.length; i++) {\n                var replyCmt = comment.replyComments[i];\n                if (this.comments.containsKey(replyCmt)) {\n                    this.comments.remove(replyCmt);\n                }\n            }\n            this.comments.remove(comment);\n            commentView.destroy();\n        }\n        this.updateCommentStatus();\n    };\n    CommentPane.prototype.resolveComment = function (comment) {\n        var commentView = this.comments.get(comment);\n        if (commentView) {\n            commentView.resolveComment();\n        }\n    };\n    CommentPane.prototype.reopenComment = function (comment) {\n        var commentView = this.comments.get(comment);\n        if (commentView) {\n            commentView.reopenComment();\n        }\n    };\n    CommentPane.prototype.updateCommentStatus = function () {\n        if (this.owner.documentHelper.comments.length === 0) {\n            if (!this.noCommentIndicator.parentElement) {\n                this.commentPane.appendChild(this.noCommentIndicator);\n            }\n            this.noCommentIndicator.style.display = 'block';\n            this.parentPane.isCommentTabVisible = false;\n            this.owner.notify('reviewPane', { comment: false, changes: this.owner.trackChangesPane.isChangesTabVisible });\n            this.parentPane.reviewTab.hideTab(0);\n        }\n        else if (this.owner.showComments) {\n            this.parentPane.isCommentTabVisible = true;\n            this.noCommentIndicator.style.display = 'none';\n            this.owner.notify('reviewPane', { comment: true, changes: this.owner.trackChangesPane.isChangesTabVisible });\n            this.parentPane.reviewTab.hideTab(0, false);\n        }\n        if (this.parentPane) {\n            this.parentPane.enableDisableToolbarItem();\n        }\n    };\n    CommentPane.prototype.clear = function () {\n        this.isEditMode = false;\n        this.currentEditingComment = undefined;\n        this.isInsertingReply = false;\n        this.removeChildElements();\n        this.commentPane.innerHTML = '';\n        this.updateCommentStatus();\n    };\n    CommentPane.prototype.removeChildElements = function () {\n        var comments = this.comments.keys;\n        for (var i = 0; i < comments.length; i++) {\n            this.comments.get(comments[i]).destroy();\n        }\n        this.comments.clear();\n    };\n    CommentPane.prototype.destroy = function () {\n        this.removeChildElements();\n        if (this.noCommentIndicator && this.noCommentIndicator) {\n            this.noCommentIndicator.parentElement.removeChild(this.noCommentIndicator);\n        }\n        this.noCommentIndicator = undefined;\n        if (this.commentPane) {\n            this.commentPane.innerHTML = '';\n            if (this.commentPane.parentElement) {\n                this.commentPane.parentElement.removeChild(this.commentPane);\n            }\n        }\n        this.commentPane = undefined;\n        if (this.parent) {\n            this.parent.innerHTML = '';\n            if (this.parent.parentElement) {\n                this.parent.parentElement.removeChild(this.parent);\n            }\n        }\n        this.parent = undefined;\n        this.parentPane = undefined;\n        this.currentEditingComment = undefined;\n        this.owner = undefined;\n    };\n    return CommentPane;\n}());\n\n/**\n * @private\n */\nvar CommentView = /** @class */ (function () {\n    function CommentView(owner, commentPane, comment) {\n        this.isReply = false;\n        this.isDrawerExpand = false;\n        this.itemData = [];\n        this.owner = owner;\n        this.comment = comment;\n        this.commentPane = commentPane;\n    }\n    CommentView.prototype.layoutComment = function (isReply) {\n        this.isReply = isReply;\n        var classList = 'e-de-cmt-sub-container';\n        if (isReply) {\n            classList += ' e-de-cmt-reply';\n        }\n        var localObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', this.owner.defaultLocale);\n        localObj.setLocale(this.owner.locale);\n        this.parentElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: classList });\n        this.initCommentHeader(localObj);\n        this.initCommentView(localObj);\n        this.initDateView();\n        if (!this.comment.isReply) {\n            this.parentElement.tabIndex = 0;\n            this.initReplyView(localObj);\n            this.initResolveOption(localObj);\n            this.initDrawer();\n            if (this.comment.isResolved) {\n                this.resolveComment();\n            }\n        }\n        else {\n            this.menuBar.style.display = 'none';\n        }\n        this.commentView.addEventListener('mouseenter', this.showMenuItems.bind(this));\n        this.commentView.addEventListener('mouseleave', this.hideMenuItemOnMouseLeave.bind(this));\n        return this.parentElement;\n    };\n    CommentView.prototype.initCommentHeader = function (localObj) {\n        var commentDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-view' });\n        this.resolveDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-view' });\n        var wrapperDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-view' });\n        var roundIcon = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-resolve-mark' });\n        var span = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', { className: 'e-de e-icons e-check' });\n        var resolveText = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', { className: '' });\n        resolveText.innerHTML = \"Resolved\";\n        span.style.display = 'inline-block';\n        roundIcon.style.display = 'flex';\n        roundIcon.style.justifyContent = 'center';\n        roundIcon.style.alignItems = 'center';\n        roundIcon.style.width = \"20px\";\n        roundIcon.style.height = \"20px\";\n        roundIcon.style.borderRadius = \"100%\";\n        roundIcon.style.marginRight = \"6px\";\n        roundIcon.appendChild(span);\n        wrapperDiv.appendChild(roundIcon);\n        wrapperDiv.appendChild(resolveText);\n        this.resolveDiv.appendChild(wrapperDiv);\n        wrapperDiv.style.display = \"flex\";\n        wrapperDiv.style.justifyContent = \"center\";\n        wrapperDiv.style.alignItems = \"center\";\n        this.resolveDiv.style.display = \"none\";\n        var commentUserInfo = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-author' });\n        commentUserInfo.style.marginTop = \"8px\";\n        var userName = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-author-name' });\n        userName.textContent = this.comment.author;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.comment.author)) {\n            commentUserInfo.style.display = 'flex';\n            this.owner.documentHelper.getAvatar(commentUserInfo, userName, this.comment, undefined);\n        }\n        // commentUserInfo.appendChild(this.resolveDiv);\n        //if (this.comment.author === this.owner.currentUser) {\n        this.menuBar = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', { className: 'e-de-cp-option', attrs: { type: 'button' } });\n        var userOption = [{ text: localObj.getConstant('Edit') },\n            { text: localObj.getConstant('Delete') },\n            { text: localObj.getConstant('Reply') },\n            { text: localObj.getConstant('Resolve') }];\n        var menuItem = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_2__.DropDownButton({\n            items: this.isReply ? userOption.splice(0, 2) : userOption,\n            select: this.userOptionSelectEvent.bind(this),\n            iconCss: 'e-de-menu-icon',\n            cssClass: 'e-caret-hide',\n            enableRtl: this.owner.enableRtl\n        });\n        this.menuBar.title = localObj.getConstant('More Options') + '...';\n        menuItem.appendTo(this.menuBar);\n        commentUserInfo.appendChild(this.menuBar);\n        this.dropDownButton = menuItem;\n        commentDiv.appendChild(commentUserInfo);\n        this.commentView = commentDiv;\n        this.parentElement.appendChild(commentDiv);\n        commentDiv.addEventListener('click', this.selectComment.bind(this));\n    };\n    CommentView.prototype.selectComment = function () {\n        if (this.commentPane) {\n            if (!this.commentPane.isEditMode) {\n                this.owner.selectionModule.selectComment(this.comment);\n            }\n            else if (this.commentPane.isEditMode && this.commentPane.isInsertingReply\n                && this.commentPane.currentEditingComment && this.commentPane.currentEditingComment.replyViewTextBox.innerText === '') {\n                var comment = this.comment;\n                if (comment && comment.isReply) {\n                    comment = this.comment.ownerComment;\n                }\n                if (comment && this.owner.documentHelper.currentSelectedComment === comment) {\n                    return;\n                }\n                this.commentPane.currentEditingComment.cancelReply();\n                this.owner.selectionModule.selectComment(this.comment);\n            }\n        }\n    };\n    CommentView.prototype.initCommentView = function (localObj) {\n        this.commentText = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-readonly e-mention' });\n        this.commentText.innerHTML = this.comment.text;\n        this.commentView.appendChild(this.commentText);\n        this.initEditView(localObj);\n    };\n    CommentView.prototype.initEditView = function (localObj) {\n        var _this = this;\n        this.textAreaContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { styles: 'display:none' });\n        this.textArea = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-textarea e-input' });\n        this.textArea.addEventListener('paste', function (event) {\n            _this.updatePastedText(event, _this.textArea);\n        });\n        this.textArea.style.borderWidth = '0 0 2px 0';\n        this.textArea.setAttribute('placeholder', localObj.getConstant('Type your comment here'));\n        this.editMention = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_8__.Mention({\n            dataSource: this.owner.documentEditorSettings.mentionSettings.dataSource,\n            fields: this.owner.documentEditorSettings.mentionSettings.fields,\n            select: this.onSelect.bind(this),\n        });\n        this.textArea.innerHTML = this.comment.text;\n        this.textArea.addEventListener('keydown', this.updateTextAreaHeight.bind(this));\n        this.textArea.addEventListener('keyup', this.enableDisablePostButton.bind(this));\n        var editRegionFooter = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-action-button' });\n        var postButton = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', { className: 'e-de-cmt-post-btn e-btn e-flat', attrs: { type: 'button' } });\n        this.postButton = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__.Button({ cssClass: 'e-btn e-flat e-primary e-de-overlay', iconCss: 'e-de-cmt-post', disabled: true }, postButton);\n        postButton.addEventListener('click', this.postComment.bind(this));\n        postButton.title = localObj.getConstant('Post');\n        postButton.setAttribute('aria-label', localObj.getConstant('Post'));\n        var cancelButton = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', {\n            className: 'e-de-cmt-cancel-btn e-btn e-flat',\n            attrs: { type: 'button' }\n        });\n        this.cancelButton = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__.Button({ cssClass: 'e-btn e-flat', iconCss: 'e-de-cmt-cancel' }, cancelButton);\n        cancelButton.title = localObj.getConstant('Cancel');\n        cancelButton.setAttribute('aria-label', localObj.getConstant('Cancel'));\n        cancelButton.addEventListener('click', this.cancelEditing.bind(this));\n        editRegionFooter.appendChild(postButton);\n        editRegionFooter.appendChild(cancelButton);\n        editRegionFooter.style.marginTop = \"8px\";\n        this.textAreaContainer.appendChild(this.textArea);\n        this.textAreaContainer.appendChild(editRegionFooter);\n        this.commentView.appendChild(this.textAreaContainer);\n        this.editMention.appendTo(this.textArea);\n    };\n    CommentView.prototype.updatePastedText = function (event, element) {\n        // Prevent the default paste action\n        event.preventDefault();\n        // Get the pasted content from the clipboard\n        var clipboardData = (event.clipboardData);\n        var plainText = clipboardData.getData('text/plain');\n        if (plainText) {\n            var htmlString = this.convertToHtml(plainText);\n            element.innerHTML = element.innerHTML + htmlString;\n        }\n        this.enableDisableReplyPostButton();\n    };\n    CommentView.prototype.convertToHtml = function (input) {\n        // Split the input string by \\r\\n or \\r\n        var lines = input.split(/(?:\\r?\\n|\\r)/);\n        // Map each line to a <div> element, adding <br> if the line is empty\n        var htmlLines = lines.map(function (line) { return line ? \"<div>\" + line + \"</div>\" : \"<div><br></div>\"; });\n        // Join the array back into a single string\n        var output = htmlLines.join('');\n        return output;\n    };\n    CommentView.prototype.onSelect = function (e) {\n        this.owner.documentEditorSettings.mentionSettings.fields;\n        var data = {};\n        var item = e.itemData;\n        data.text = item[this.owner.documentEditorSettings.mentionSettings.fields.text];\n        data.value = item[this.owner.documentEditorSettings.mentionSettings.fields.value];\n        this.itemData.push(data);\n    };\n    CommentView.prototype.initDateView = function () {\n        this.commentDate = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-date' });\n        this.commentDate.innerText = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_7__.HelperMethods.getModifiedDate(this.comment.date);\n        this.commentView.appendChild(this.commentDate);\n    };\n    CommentView.prototype.initDrawer = function () {\n        this.drawerElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { styles: 'display:none;', className: 'e-de-cmt-drawer-cnt' });\n        var leftPane = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-drawer' });\n        var spanElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('span');\n        leftPane.appendChild(spanElement);\n        this.drawerElement.appendChild(leftPane);\n        this.drawerSpanElement = spanElement;\n        this.drawerAction = leftPane;\n        this.drawerAction.addEventListener('click', this.showOrHideDrawer.bind(this));\n        this.parentElement.appendChild(this.drawerElement);\n    };\n    CommentView.prototype.initReplyView = function (localObj) {\n        var _this = this;\n        this.replyViewContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-rply-view' });\n        if (this.commentPane.parentPane.isNewComment) {\n            this.replyViewContainer.style.display = 'none';\n        }\n        this.replyViewTextBox = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-textarea e-input' });\n        this.replyViewTextBox.addEventListener('paste', function (event) {\n            _this.updatePastedText(event, _this.replyViewTextBox);\n        });\n        this.replyViewTextBox.style.borderWidth = '0 0 1px 0';\n        this.replyViewTextBox.setAttribute(\"placeholder\", localObj.getConstant('Reply'));\n        this.replyViewTextBox.addEventListener('click', this.enableReplyView.bind(this));\n        this.replyViewTextBox.addEventListener('keydown', this.updateReplyTextAreaHeight.bind(this));\n        this.replyViewTextBox.addEventListener('keyup', this.enableDisableReplyPostButton.bind(this));\n        var editRegionFooter = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { styles: 'display:none', className: 'e-de-cmt-action-button' });\n        var postButton = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', { className: 'e-de-cmt-post-btn e-de-overlay e-btn e-flat', attrs: { type: 'button' } });\n        this.replyPostButton = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__.Button({ cssClass: 'e-btn e-flat e-primary', iconCss: 'e-de-cmt-post', disabled: true }, postButton);\n        this.replyMention = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_8__.Mention({\n            dataSource: this.owner.documentEditorSettings.mentionSettings.dataSource,\n            fields: this.owner.documentEditorSettings.mentionSettings.fields,\n            select: this.onSelect.bind(this),\n        });\n        postButton.addEventListener('click', this.postReply.bind(this));\n        postButton.title = localObj.getConstant('Post');\n        var cancelButton = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', {\n            className: 'e-de-cmt-cancel-btn e-btn e-flat',\n            attrs: { type: 'button' }\n        });\n        cancelButton.setAttribute('aria-label', localObj.getConstant('Cancel'));\n        this.replyCancelButton = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__.Button({ cssClass: 'e-btn e-flat', iconCss: 'e-de-cmt-cancel' }, cancelButton);\n        cancelButton.addEventListener('click', this.cancelReply.bind(this));\n        cancelButton.title = localObj.getConstant('Cancel');\n        editRegionFooter.appendChild(postButton);\n        editRegionFooter.appendChild(cancelButton);\n        editRegionFooter.style.marginTop = \"8px\";\n        this.replyFooter = editRegionFooter;\n        this.replyViewContainer.appendChild(this.replyViewTextBox);\n        this.replyViewContainer.appendChild(editRegionFooter);\n        this.parentElement.appendChild(this.replyViewContainer);\n        this.replyMention.appendTo(this.replyViewTextBox);\n    };\n    CommentView.prototype.initResolveOption = function (localObj) {\n        var editRegionFooter = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-resolve-btn' });\n        var wrapperFooterDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-resolve-btn' });\n        var reopenDeleteWrapper = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-cmt-resolve-btn' });\n        var postButton = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', { className: 'e-de-cmt-post-btn e-btn e-flat', attrs: { type: 'button' } });\n        this.reopenButton = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__.Button({ cssClass: 'e-btn e-flat', iconCss: 'e-de-cmt-reopen' }, postButton);\n        postButton.title = localObj.getConstant('Reopen');\n        postButton.setAttribute('aria-label', localObj.getConstant('Reopen'));\n        postButton.addEventListener('click', this.reopenButtonClick.bind(this));\n        var cancelButton = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', {\n            className: 'e-de-cmt-cancel-btn e-btn e-flat',\n            attrs: { type: 'button' }\n        });\n        cancelButton.title = localObj.getConstant('Delete');\n        cancelButton.setAttribute('aria-label', localObj.getConstant('Delete'));\n        this.deleteButton = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__.Button({ cssClass: 'e-btn e-flat', iconCss: 'e-de-cmt-delete' }, cancelButton);\n        cancelButton.addEventListener('click', this.deleteComment.bind(this));\n        editRegionFooter.appendChild(postButton);\n        editRegionFooter.appendChild(cancelButton);\n        wrapperFooterDiv.appendChild(this.resolveDiv);\n        reopenDeleteWrapper.appendChild(postButton);\n        reopenDeleteWrapper.appendChild(cancelButton);\n        editRegionFooter.appendChild(wrapperFooterDiv);\n        wrapperFooterDiv.appendChild(reopenDeleteWrapper);\n        wrapperFooterDiv.style.display = \"flex\";\n        wrapperFooterDiv.style.justifyContent = \"space-between\";\n        wrapperFooterDiv.style.alignItems = \"center\";\n        reopenDeleteWrapper.style.display = \"flex\";\n        reopenDeleteWrapper.style.justifyContent = \"center\";\n        reopenDeleteWrapper.style.alignItems = \"center\";\n        reopenDeleteWrapper.style.marginTop = \"0px\";\n        this.resolveView = editRegionFooter;\n        this.parentElement.appendChild(editRegionFooter);\n    };\n    CommentView.prototype.reopenButtonClick = function () {\n        this.owner.editorModule.reopenComment(this.comment);\n    };\n    CommentView.prototype.deleteComment = function () {\n        var eventArgs = { author: this.comment.author, cancel: false };\n        this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.commentDeleteEvent, eventArgs);\n        var eventActionArgs = { author: this.comment.author, cancel: eventArgs.cancel, type: 'Delete', mentions: this.comment.mentions };\n        this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.beforeCommentActionEvent, eventActionArgs);\n        if (eventActionArgs.cancel) {\n            return;\n        }\n        this.owner.editorModule.deleteCommentInternal(this.comment);\n        if (eventArgs.cancel) {\n            return;\n        }\n    };\n    CommentView.prototype.updateReplyTextAreaHeight = function (event) {\n        var _this = this;\n        if (event) {\n            this.preventKeyboardShortcuts(event);\n        }\n        setTimeout(function () {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.replyViewTextBox)) {\n                _this.replyViewTextBox.style.height = 'auto';\n                var scrollHeight = _this.replyViewTextBox.scrollHeight;\n                _this.replyViewTextBox.style.height = scrollHeight + 'px';\n            }\n        });\n    };\n    CommentView.prototype.preventKeyboardShortcuts = function (event) {\n        var key = event.which || event.keyCode;\n        var ctrl = (event.ctrlKey || event.metaKey) ? true : ((key === 17) ? true : false); // ctrl detection       \n        var shift = event.shiftKey ? event.shiftKey : ((key === 16) ? true : false); // Shift Key detection        \n        var alt = event.altKey ? event.altKey : ((key === 18) ? true : false); // alt key detection\n        // Define the keyboard shortcuts to prevent\n        var prevent = false;\n        // Bold: Ctrl + B or Cmd + B (Mac)\n        if (ctrl && key === 66)\n            prevent = true;\n        // Italic: Ctrl + I or Cmd + I (Mac)\n        else if (ctrl && key === 73)\n            prevent = true;\n        // Underline: Ctrl + U or Cmd + U (Mac)\n        else if (ctrl && key === 85)\n            prevent = true;\n        // Strikethrough: Alt + Shift + 5 (may vary by browser)\n        else if (alt && shift && key === 53)\n            prevent = true;\n        // Superscript: Ctrl + . or Cmd + . (Mac)\n        else if (ctrl && key === 190)\n            prevent = true;\n        // Subscript: Ctrl + , or Cmd + , (Mac)\n        else if (ctrl && key === 188)\n            prevent = true;\n        // Insert Unordered List: Ctrl + Shift + L or Cmd + Shift + L (Mac)\n        else if (ctrl && shift && key === 76)\n            prevent = true;\n        // Insert Ordered List: Ctrl + Shift + 7 or Cmd + Shift + 7 (Mac)\n        else if (ctrl && shift && key === 55)\n            prevent = true;\n        // Remove Formatting: Ctrl + \\ or Cmd + \\ (Mac)\n        else if (ctrl && key === 220)\n            prevent = true;\n        // Align Left: Ctrl + Shift + L or Cmd + Shift + L (Mac)\n        else if (ctrl && shift && key === 76)\n            prevent = true;\n        // Align Center: Ctrl + Shift + E or Cmd + Shift + E (Mac)\n        else if (ctrl && shift && key === 69)\n            prevent = true;\n        // Align Right: Ctrl + Shift + R or Cmd + Shift + R (Mac)\n        else if (ctrl && shift && key === 82)\n            prevent = true;\n        // Align Justify: Ctrl + Shift + J or Cmd + Shift + J (Mac)\n        else if (ctrl && shift && key === 74)\n            prevent = true;\n        // Outdent: Shift + Tab (may vary by browser)\n        else if (shift && key === 9)\n            prevent = true;\n        // Heading Levels: Ctrl + Alt + 1 to Ctrl + Alt + 6 (may vary by browser) or Cmd + Alt + 1 to Cmd + Alt + 6 (Mac)\n        else if (ctrl && alt && (key >= 49 && key <= 54))\n            prevent = true;\n        // Quote: Ctrl + Shift + Q or Cmd + Shift + Q (Mac) (may vary by browser)\n        else if (ctrl && shift && key === 81)\n            prevent = true;\n        if (prevent) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    CommentView.prototype.enableDisableReplyPostButton = function () {\n        this.replyPostButton.disabled = this.replyViewTextBox.innerText === '';\n        if (this.replyPostButton.disabled) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.replyPostButton.element, ['e-de-overlay'], []);\n        }\n        else if (this.replyPostButton.element.classList.contains('e-de-overlay')) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.replyPostButton.element, [], ['e-de-overlay']);\n        }\n    };\n    CommentView.prototype.enableReplyView = function () {\n        var _this = this;\n        if (this.commentPane.isEditMode) {\n            return;\n        }\n        var eventArgs = { author: this.comment.author, cancel: false, type: 'Reply', mentions: this.comment.mentions };\n        this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.beforeCommentActionEvent, eventArgs);\n        if (eventArgs.cancel && eventArgs.type === 'Reply') {\n            return;\n        }\n        this.commentPane.currentEditingComment = this;\n        this.commentPane.isInsertingReply = true;\n        if (this.owner.documentHelper.currentSelectedComment !== this.comment) {\n            this.owner.selectionModule.selectComment(this.comment);\n        }\n        this.commentPane.isEditMode = true;\n        //this.replyViewTextBox.readOnly = false;\n        this.replyFooter.style.display = 'block';\n        setTimeout(function () {\n            _this.replyViewTextBox.focus();\n        });\n    };\n    CommentView.prototype.postReply = function () {\n        var replyText = (this.replyViewTextBox.innerText);\n        this.cancelReply();\n        this.updateReplyTextAreaHeight();\n        this.owner.editorModule.replyComment(this.comment, replyText, this.itemData);\n        if (this.itemData) {\n            this.itemData = [];\n        }\n        if (!this.owner.editorModule.isSkipOperationsBuild && !this.owner.editorModule.isRemoteAction) {\n            this.owner.fireContentChange();\n        }\n        this.owner.editorModule.isSkipOperationsBuild = false;\n    };\n    CommentView.prototype.cancelReply = function () {\n        this.commentPane.currentEditingComment = undefined;\n        this.commentPane.isInsertingReply = true;\n        this.commentPane.isEditMode = false;\n        this.replyPostButton.disabled = true;\n        this.replyViewTextBox.innerText = '';\n        // this.replyViewTextBox.readOnly = true;\n        this.replyFooter.style.display = 'none';\n    };\n    CommentView.prototype.updateTextAreaHeight = function (event) {\n        var _this = this;\n        if (event) {\n            this.preventKeyboardShortcuts(event);\n        }\n        setTimeout(function () {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.textArea)) {\n                _this.textArea.style.height = 'auto';\n                var scrollHeight = _this.textArea.scrollHeight;\n                _this.textArea.style.height = scrollHeight + 'px';\n            }\n        });\n    };\n    CommentView.prototype.showMenuItems = function () {\n        if (this.comment.isReply && !this.owner.isReadOnly) {\n            if (!this.commentPane.isEditMode && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.comment) && !this.comment.isResolved)) {\n                this.menuBar.style.display = 'block';\n            }\n        }\n        var commentStart = this.commentPane.getCommentStart(this.comment);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(commentStart) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(commentStart.commentMark)) {\n            commentStart.commentMark.classList.add('e-de-cmt-mark-hover');\n        }\n    };\n    CommentView.prototype.hideMenuItemOnMouseLeave = function () {\n        if (this.comment.isReply) {\n            if (this.owner.documentHelper.currentSelectedComment !== this.comment.ownerComment) {\n                this.hideMenuItems();\n            }\n        }\n        if (this.commentPane) {\n            var commentStart = this.commentPane.getCommentStart(this.comment);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(commentStart) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(commentStart.commentMark)) {\n                commentStart.commentMark.classList.remove('e-de-cmt-mark-hover');\n            }\n        }\n    };\n    CommentView.prototype.hideMenuItems = function () {\n        this.menuBar.style.display = 'none';\n    };\n    CommentView.prototype.enableDisablePostButton = function () {\n        this.postButton.disabled = this.textArea.innerText === '';\n        if (this.postButton.disabled) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.postButton.element, ['e-de-overlay'], []);\n        }\n        else if (this.postButton.element.classList.contains('e-de-overlay')) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.postButton.element, [], ['e-de-overlay']);\n        }\n    };\n    CommentView.prototype.editComment = function () {\n        var _this = this;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.commentPane.parentPane) && !this.commentPane.parentPane.postReply) {\n            var eventArgs = { author: this.comment.author, cancel: false, type: 'Edit', mentions: this.comment.mentions };\n            this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.beforeCommentActionEvent, eventArgs);\n            if (eventArgs.cancel && eventArgs.type === 'Edit') {\n                return;\n            }\n        }\n        this.commentPane.currentEditingComment = this;\n        this.commentPane.isInsertingReply = false;\n        this.commentPane.isEditMode = true;\n        this.commentText.style.display = 'none';\n        this.textAreaContainer.style.display = 'block';\n        this.commentDate.style.display = 'none';\n        this.menuBar.style.display = 'none';\n        this.updateTextAreaHeight();\n        setTimeout(function () {\n            if (_this.textArea) {\n                _this.textArea.focus();\n            }\n        });\n    };\n    CommentView.prototype.resolveComment = function () {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.parentElement, ['e-de-cmt-resolved'], []);\n        this.resolveDiv.style.display = \"inline\";\n        var localObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', this.owner.defaultLocale);\n        localObj.setLocale(this.owner.locale);\n        this.dropDownButton.items = [{ text: localObj.getConstant('Reopen') }, { text: localObj.getConstant('Delete') }];\n    };\n    CommentView.prototype.reopenComment = function () {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.parentElement, [], ['e-de-cmt-resolved']);\n        this.resolveDiv.style.display = \"none\";\n        var localObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', this.owner.defaultLocale);\n        localObj.setLocale(this.owner.locale);\n        this.dropDownButton.items = [{ text: localObj.getConstant('Edit') },\n            { text: localObj.getConstant('Delete') },\n            { text: localObj.getConstant('Reply') },\n            { text: localObj.getConstant('Resolve') }];\n        this.showDrawer();\n    };\n    CommentView.prototype.postComment = function () {\n        this.comment.isPosted = true;\n        if (this.itemData) {\n            this.comment.mentions = this.itemData;\n            this.itemData = [];\n        }\n        var eventArgs = { author: this.comment.author, cancel: false, type: 'Post', text: this.textArea.innerText, mentions: this.comment.mentions };\n        this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.beforeCommentActionEvent, eventArgs);\n        if (eventArgs.cancel && eventArgs.type === 'Post') {\n            return;\n        }\n        var updatedText = this.textArea.innerHTML;\n        if (this.owner.editorModule && this.comment.text != '' && (this.comment.text != updatedText)) {\n            this.owner.editorModule.initHistory('EditComment');\n            var modifiedObject = {\n                commentId: this.comment.commentId,\n                text: this.comment.text\n            };\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.modifiedProperties.push(modifiedObject);\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.removedNodes.push(this.comment);\n            this.owner.editorHistoryModule.updateHistory();\n        }\n        this.commentText.innerHTML = updatedText;\n        this.comment.text = updatedText;\n        this.showCommentView();\n        if (this.commentPane && this.commentPane.parentPane) {\n            this.commentPane.parentPane.isNewComment = false;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.replyViewContainer)) {\n            this.replyViewContainer.style.display = '';\n        }\n        if (!this.owner.editorModule.isSkipOperationsBuild && !this.owner.editorModule.isRemoteAction) {\n            this.owner.fireContentChange();\n        }\n    };\n    CommentView.prototype.showCommentView = function () {\n        this.commentPane.isEditMode = false;\n        this.textAreaContainer.style.display = 'none';\n        this.commentText.style.display = 'block';\n        this.commentDate.style.display = 'block';\n        this.menuBar.style.display = 'block';\n    };\n    CommentView.prototype.cancelEditing = function () {\n        this.showCommentView();\n        this.textArea.innerHTML = this.comment.text.trim();\n        if (this.commentPane.parentPane.isNewComment) {\n            if (this.commentPane && this.commentPane.parentPane) {\n                this.commentPane.parentPane.isNewComment = false;\n            }\n            var documentEditor = this.owner;\n            documentEditor.editorModule.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n            this.commentPane.parentPane.discardComment(this.comment);\n            documentEditor.editorModule.isSkipOperationsBuild = false;\n        }\n    };\n    CommentView.prototype.showOrHideDrawer = function () {\n        if (this.isDrawerExpand) {\n            this.hideDrawer();\n        }\n        else {\n            this.showDrawer();\n        }\n    };\n    CommentView.prototype.hideDrawer = function () {\n        if (this.parentElement) {\n            var localObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', this.owner.defaultLocale);\n            localObj.setLocale(this.owner.locale);\n            var elements = this.parentElement.getElementsByClassName('e-de-cmt-sub-container');\n            if (elements.length > 1) {\n                for (var i = 1; i < elements.length; i++) {\n                    elements[i].style.display = 'none';\n                }\n                this.drawerElement.style.display = 'block';\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.drawerSpanElement, [], ['e-de-nav-up']);\n                this.drawerSpanElement.innerText = '+' + (elements.length - 1) + ' ' + localObj.getConstant('more') + '...';\n            }\n            this.isDrawerExpand = false;\n        }\n    };\n    CommentView.prototype.showDrawer = function () {\n        if (this.parentElement) {\n            var elements = this.parentElement.getElementsByClassName('e-de-cmt-sub-container');\n            if (elements.length > 1) {\n                for (var i = 0; i < elements.length; i++) {\n                    elements[i].style.display = 'block';\n                }\n                this.drawerElement.style.display = 'block';\n                this.drawerSpanElement.innerText = '';\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.drawerSpanElement, ['e-de-nav-up'], []);\n            }\n            this.isDrawerExpand = true;\n        }\n    };\n    CommentView.prototype.userOptionSelectEvent = function (event) {\n        var selectedItem = event.item.text;\n        var localObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', this.owner.defaultLocale);\n        localObj.setLocale(this.owner.locale);\n        switch (selectedItem) {\n            case localObj.getConstant('Edit'):\n                this.editComment();\n                break;\n            case localObj.getConstant('Reply'):\n                this.enableReplyView();\n                break;\n            case localObj.getConstant('Delete'):\n                this.deleteComment();\n                break;\n            case localObj.getConstant('Resolve'):\n                this.owner.editorModule.resolveComment(this.comment);\n                break;\n            case localObj.getConstant('Reopen'):\n                this.owner.editorModule.reopenComment(this.comment);\n        }\n    };\n    CommentView.prototype.unwireEvent = function () {\n        if (this.drawerAction) {\n            this.drawerAction.removeEventListener('click', this.showOrHideDrawer.bind(this));\n        }\n        if (this.textArea) {\n            this.textArea.removeEventListener('keydown', this.updateTextAreaHeight.bind(this));\n            this.textArea.removeEventListener('keyup', this.enableDisablePostButton.bind(this));\n        }\n        if (this.postButton) {\n            this.postButton.removeEventListener('click', this.postComment.bind(this));\n        }\n        if (this.cancelButton) {\n            this.cancelButton.removeEventListener('click', this.cancelEditing.bind(this));\n        }\n        if (this.commentView) {\n            this.commentView.removeEventListener('click', this.selectComment.bind(this));\n            this.commentView.removeEventListener('mouseenter', this.showMenuItems.bind(this));\n            this.commentView.removeEventListener('mouseleave', this.hideMenuItemOnMouseLeave.bind(this));\n        }\n    };\n    CommentView.prototype.destroy = function () {\n        this.unwireEvent();\n        if (this.comment) {\n            this.comment = undefined;\n        }\n        if (this.dropDownButton) {\n            this.dropDownButton.destroy();\n        }\n        this.dropDownButton = undefined;\n        if (this.postButton) {\n            this.postButton.destroy();\n        }\n        this.postButton = undefined;\n        if (this.cancelButton) {\n            this.cancelButton.destroy();\n        }\n        this.cancelButton = undefined;\n        if (this.replyPostButton) {\n            this.replyPostButton.destroy();\n            this.replyPostButton = undefined;\n        }\n        if (this.replyCancelButton) {\n            this.replyCancelButton.destroy();\n            this.replyCancelButton = undefined;\n        }\n        if (this.reopenButton) {\n            this.reopenButton.destroy();\n            this.reopenButton = undefined;\n        }\n        if (this.deleteButton) {\n            this.deleteButton.destroy();\n            this.deleteButton = undefined;\n        }\n        if (this.parentElement) {\n            this.parentElement.innerHTML = '';\n            if (this.parentElement.parentElement) {\n                this.parentElement.parentElement.removeChild(this.parentElement);\n            }\n        }\n        this.parentElement = undefined;\n        if (this.commentView) {\n            this.commentView.innerHTML = '';\n            if (this.commentView.parentElement) {\n                this.commentView.parentElement.removeChild(this.commentView);\n            }\n        }\n        this.commentView = undefined;\n        if (this.replyViewContainer) {\n            this.replyViewContainer.innerHTML = '';\n            this.replyViewContainer.remove();\n            this.replyViewContainer = null;\n        }\n        this.replyViewTextBox = undefined;\n        this.replyFooter = undefined;\n        if (this.resolveView) {\n            this.resolveView.innerHTML = '';\n            this.resolveView.remove();\n            this.resolveView = null;\n        }\n        this.menuBar = undefined;\n        this.drawerAction = undefined;\n        this.commentText = undefined;\n        this.commentDate = undefined;\n        if (this.textAreaContainer) {\n            this.textAreaContainer.innerHTML = '';\n            this.textAreaContainer.remove();\n            this.textAreaContainer = null;\n        }\n        this.drawerElement = undefined;\n        this.drawerSpanElement = undefined;\n        this.commentPane = undefined;\n        this.owner = undefined;\n    };\n    return CommentView;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/comments/comment.js?");

/***/ })

}]);