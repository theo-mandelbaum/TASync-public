"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-charts_src_sparkline_sparkline_js-1a4af408"],{

/***/ "./node_modules/@syncfusion/ej2-charts/src/sparkline/sparkline.js":
/*!************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-charts/src/sparkline/sparkline.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Sparkline: () => (/* binding */ Sparkline)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _model_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./model/base */ \"./node_modules/@syncfusion/ej2-charts/src/sparkline/model/base.js\");\n/* harmony import */ var _utils_helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/helper */ \"./node_modules/@syncfusion/ej2-charts/src/sparkline/utils/helper.js\");\n/* harmony import */ var _rendering_sparkline_renderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rendering/sparkline-renderer */ \"./node_modules/@syncfusion/ej2-charts/src/sparkline/rendering/sparkline-renderer.js\");\n/* harmony import */ var _common_utils_helper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/utils/helper */ \"./node_modules/@syncfusion/ej2-charts/src/common/utils/helper.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\n\n\n/**\n * Represents the Sparkline control.\n * ```html\n * <div id=\"sparkline\"/>\n * <script>\n *   var sparkline = new Sparkline();\n *   sparkline.appendTo(\"#sparkline\");\n * </script>\n * ```\n */\nvar Sparkline = /** @class */ (function (_super) {\n    __extends(Sparkline, _super);\n    // Sparkline rendering starts from here.\n    /**\n     * Constructor for creating the Sparkline widget.\n     *\n     * @param {SparklineModel} options - The options to configure the Sparkline widget.\n     * @param {string | HTMLElement} element - The target element to render the Sparkline widget.\n     */\n    function Sparkline(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isDevice = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice;\n        /** @private */\n        _this.intervalDivs = [10, 5, 2, 1];\n        _this.previousTargetId = '';\n        _this.currentPointIndex = 0;\n        return _this;\n    }\n    /**\n     * Initializing pre-required values for sparkline.\n     *\n     * @returns {void}\n     */\n    Sparkline.prototype.preRender = function () {\n        this.allowServerDataBinding = false;\n        this.unWireEvents();\n        this.trigger('load', { sparkline: this });\n        this.sparkTheme = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getThemeColor)(this.theme);\n        this.sparklineRenderer = new _rendering_sparkline_renderer__WEBPACK_IMPORTED_MODULE_3__.SparklineRenderer(this);\n        this.setTheme();\n        this.createSVG();\n        this.wireEvents();\n        this.setCulture();\n    };\n    /**\n     * Sparkline Elements rendering starting.\n     *\n     * @returns {void}\n     */\n    Sparkline.prototype.render = function () {\n        // Sparkline rendering splitted into rendering and calculations\n        this.sparklineRenderer.processDataManager();\n        this.renderComplete();\n        this.allowServerDataBinding = true;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Sparkline.prototype.processSparklineData = function () {\n        this.sparklineRenderer.processData();\n        this.renderSparkline();\n        this.element.appendChild(this.svgObject);\n        this.setSecondaryElementPosition();\n        this.trigger('loaded', { sparkline: this });\n    };\n    /**\n     * To render sparkline elements.\n     *\n     * @returns {void}\n     */\n    Sparkline.prototype.renderSparkline = function () {\n        // To render the sparkline elements\n        this.renderBorder();\n        this.createDiv();\n        this.sparklineRenderer.renderSeries();\n    };\n    /**\n     * Create secondary element for the tooltip.\n     *\n     * @returns {void}\n     */\n    Sparkline.prototype.createDiv = function () {\n        var tooltipDiv = document.createElement('div');\n        tooltipDiv.id = this.element.id + '_Secondary_Element';\n        tooltipDiv.style.position = 'relative';\n        this.element.appendChild(tooltipDiv);\n        this.element.setAttribute('tabindex', '0');\n        this.element.style.outline = 'none';\n        this.element.style.display = 'block';\n        this.element.style.position = 'relative';\n    };\n    /**\n     * To set the left and top position for data label template for sparkline.\n     *\n     * @returns {void}\n     */\n    Sparkline.prototype.setSecondaryElementPosition = function () {\n        var element = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getIdElement)(this.element.id + '_Secondary_Element');\n        if (!element) {\n            return;\n        }\n        var rect = this.element.getBoundingClientRect();\n        var svgRect = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getIdElement)(this.element.id + '_svg').getBoundingClientRect();\n        element.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n        element.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n    };\n    /**\n     * Render the sparkline border.\n     *\n     * @private\n     * @returns {void}\n     */\n    Sparkline.prototype.renderBorder = function () {\n        var width = this.containerArea.border.width;\n        var borderRect;\n        if (width > 0 || this.containerArea.background !== 'transparent') {\n            borderRect = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.RectOption(this.element.id + '_SparklineBorder', this.sparkTheme.background, this.containerArea.border, 1, new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild((0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.drawRectangle)(this, borderRect));\n        }\n        // Used to create clip path sparkline\n        var padding = this.padding;\n        if (this.markerSettings.visible.length) {\n            padding.left = 0;\n            padding.right = 0;\n            padding.bottom = 0;\n            padding.top = 0;\n        }\n        borderRect = new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.RectOption(this.element.id + '_sparkline_clip_rect', 'transparent', { color: 'transparent', width: 0 }, 1, new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Rect(padding.left, padding.top, this.availableSize.width - (padding.left + padding.right), this.availableSize.height - (padding.top + padding.bottom)));\n        var clipPath = this.renderer.createClipPath({ id: this.element.id + '_sparkline_clip_path' });\n        (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.drawRectangle)(this, borderRect, clipPath);\n        this.svgObject.appendChild(clipPath);\n    };\n    /**\n     * To create svg element for sparkline.\n     *\n     * @returns {void}\n     */\n    Sparkline.prototype.createSVG = function () {\n        this.removeSvg();\n        (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.createSvg)(this);\n    };\n    /**\n     * To Remove the Sparkline SVG object.\n     *\n     * @returns {void}\n     */\n    Sparkline.prototype.removeSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.svgObject);\n            }\n        }\n        (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeElement)(this.element.id + '_Secondary_Element');\n        if (this.sparklineTooltipModule) {\n            this.sparklineTooltipModule.removeTooltipElements();\n        }\n    };\n    /**\n     * Method to set culture for sparkline.\n     *\n     * @returns {void}\n     */\n    Sparkline.prototype.setCulture = function () {\n        this.intl = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization();\n        this.localeObject = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n(this.getModuleName(), this.defaultLocalConstants, this.locale);\n    };\n    /**\n     * Keyboard navigation is used to set the tab theme color for the sparkline.\n     *\n     * @returns {void}\n     */\n    Sparkline.prototype.setTheme = function () {\n        /** Set theme */\n        this.sparkTheme = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getThemeColor)(this.theme);\n    };\n    /**\n     * To provide the array of modules needed for sparkline rendering.\n     *\n     * @returns {ModuleDeclaration[]} - The array of modules required for Sparkline rendering.\n     * @private\n     */\n    Sparkline.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible || this.tooltipSettings.trackLineSettings.visible) {\n            modules.push({\n                member: 'SparklineTooltip',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Method to unbind events for sparkline chart.\n     *\n     * @returns {void}\n     */\n    Sparkline.prototype.unWireEvents = function () {\n        var cancel = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /** UnBind the Event handler */\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent, this.sparklineMove);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, cancel, this.sparklineMouseLeave);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent, this.sparklineMouseEnd);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keyup', this.chartKeyUp);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keydown', this.chartKeyDown);\n        window.removeEventListener((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.sparklineResize);\n    };\n    /**\n     * Method to bind events for the sparkline.\n     *\n     * @returns {void}\n     */\n    Sparkline.prototype.wireEvents = function () {\n        var cancel = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /** Bind the Event handler */\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent, this.sparklineMove, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'click', this.sparklineClick, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, cancel, this.sparklineMouseLeave, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent, this.sparklineMouseEnd, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keyup', this.chartKeyUp, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keydown', this.chartKeyDown, this);\n        window.addEventListener((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.sparklineResize.bind(this));\n        new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Touch(this.element);\n    };\n    /**\n     * Sparkline resize event.\n     *\n     * @private\n     * @returns {boolean} - false\n     */\n    Sparkline.prototype.sparklineResize = function () {\n        var _this = this;\n        var args = {\n            name: 'resize',\n            previousSize: this.availableSize,\n            sparkline: this,\n            currentSize: new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Size(0, 0)\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = +setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTo);\n                return;\n            }\n            _this.unWireEvents();\n            _this.createSVG();\n            _this.refreshing = true;\n            _this.wireEvents();\n            args.currentSize = _this.availableSize;\n            _this.trigger('resize', args);\n            _this.render();\n            _this.refreshing = false;\n        }, 500);\n        return false;\n    };\n    /**\n     * Handles the mouse move on sparkline.\n     *\n     * @param {PointerEvent} e - The pointer event.\n     * @returns {boolean} - false\n     * @private\n     */\n    Sparkline.prototype.sparklineMove = function (e) {\n        this.setSparklineMouseXY(e);\n        this.notify(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent, e);\n        var args = {\n            name: 'sparklineMouseMove', cancel: false,\n            sparkline: this, event: e\n        };\n        this.trigger(args.name, args);\n        var pointClick = this.isPointRegion(e);\n        if (pointClick.isPointRegion) {\n            var pointArgs = {\n                name: 'pointRegionMouseMove', cancel: false,\n                event: e, sparkline: this,\n                pointIndex: pointClick.pointIndex\n            };\n            this.trigger(pointArgs.name, pointArgs);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse click on sparkline.\n     *\n     * @param {PointerEvent} e - The pointer event.\n     * @returns {boolean} - false\n     * @private\n     */\n    Sparkline.prototype.sparklineClick = function (e) {\n        this.setSparklineMouseXY(e);\n        var args = {\n            name: 'sparklineMouseClick', cancel: false,\n            sparkline: this, event: e\n        };\n        this.trigger(args.name, args);\n        var pointClick = this.isPointRegion(e);\n        if (pointClick.isPointRegion) {\n            var pointArgs = {\n                name: 'pointRegionMouseClick', cancel: false,\n                event: e, sparkline: this,\n                pointIndex: pointClick.pointIndex\n            };\n            this.trigger(pointArgs.name, pointArgs);\n        }\n        this.removeNavigationStyle();\n        return false;\n    };\n    /**\n     * To check mouse event target is point region or not.\n     *\n     * @param {PointerEvent} e - The pointer event.\n     * @returns {{isPointRegion: boolean, pointIndex: number}} - Object containing whether the target is within a point region and the index of the point.\n     */\n    Sparkline.prototype.isPointRegion = function (e) {\n        var _this = this;\n        var startId = this.element.id + '_';\n        var id = e.target.id.replace(startId, '').split('_');\n        if (id[1] === this.type.toLowerCase()) {\n            var index_1 = parseInt(id[2], 10);\n            if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(index_1) || isNaN(index_1)) && (this.type === 'Line' || this.type === 'Area')) {\n                this.sparklineRenderer.visiblePoints.forEach(function (point, i) {\n                    if ((0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.withInBounds)(_this.mouseX, _this.mouseY, new _utils_helper__WEBPACK_IMPORTED_MODULE_2__.Rect(point.x - 5, point.y - 5, 10, 10))) {\n                        index_1 = i;\n                        return;\n                    }\n                });\n            }\n            return { isPointRegion: true, pointIndex: index_1 };\n        }\n        return { isPointRegion: false, pointIndex: null };\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - The pointer event.\n     * @returns {boolean} - false\n     * @private\n     */\n    Sparkline.prototype.sparklineMouseEnd = function (e) {\n        this.setSparklineMouseXY(e);\n        this.notify(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave on sparkline.\n     *\n     * @param {PointerEvent} e - The pointer event.\n     * @returns {boolean} - false\n     * @private\n     */\n    Sparkline.prototype.sparklineMouseLeave = function (e) {\n        this.setSparklineMouseXY(e);\n        this.notify(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer ? 'pointerleave' : 'mouseleave', e);\n        return false;\n    };\n    /**\n     * Handles the keyboard onkeydown on sparkline.\n     *\n     * @param {KeyboardEvent} e - The keyboard event.\n     * @returns {boolean} - false\n     * @private\n     */\n    Sparkline.prototype.chartKeyDown = function (e) {\n        var actionKey = '';\n        if (this.tooltipSettings.visible && ((e.code === 'Tab' && this.previousTargetId.indexOf('_sparkline_') > -1) || e.code === 'Escape')) {\n            actionKey = 'ESC';\n        }\n        if (actionKey !== '') {\n            this.sparklineKeyboardNavigations(e, e.target.id, actionKey);\n        }\n        if (e.code === 'Tab' || e.code === 'Enter' || e.code.indexOf('Arrow') > -1) {\n            this.removeNavigationStyle();\n        }\n        return false;\n    };\n    /**\n     * Handles the keyboard onkeydown on sparkline.\n     *\n     * @param {KeyboardEvent} e - The keyboard event.\n     * @returns {boolean} - false\n     * @private\n     */\n    Sparkline.prototype.chartKeyUp = function (e) {\n        var actionKey = '';\n        var targetId = e.target['id'];\n        var groupElement;\n        var targetElement = e.target;\n        var seriesElement = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_4__.getElement)(this.element.id + '_sparkline_g');\n        var seriesChildElement = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_4__.getElement)(this.element.id + '_sparkline_line');\n        this.removeNavigationStyle();\n        this.setNavigationStyle(targetId);\n        if (seriesChildElement) {\n            seriesChildElement.removeAttribute('tabindex');\n        }\n        if (seriesElement && seriesElement.firstElementChild) {\n            var firstChild = seriesElement.firstElementChild;\n            var className = firstChild.getAttribute('class');\n            if (className && className.indexOf('e-sparkline-focused') === -1) {\n                className = className + ' e-sparkline-focused';\n            }\n            else if (!className) {\n                className = 'e-sparkline-focused';\n            }\n            firstChild.setAttribute('class', className);\n        }\n        if (e.code === 'Tab') {\n            if (this.previousTargetId !== '') {\n                if (this.previousTargetId.indexOf('_sparkline_') > -1 && targetId.indexOf('_sparkline_') === -1) {\n                    groupElement = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_4__.getElement)(this.element.id + '_sparkline_g');\n                    this.setTabIndex(groupElement.children[this.currentPointIndex], groupElement.firstElementChild);\n                }\n            }\n            this.previousTargetId = targetId;\n            actionKey = this.tooltipSettings.visible ? 'Tab' : '';\n        }\n        else if (e.code.indexOf('Arrow') > -1) {\n            e.preventDefault();\n            this.previousTargetId = targetId;\n            if (targetId.indexOf('_sparkline_') > -1) {\n                groupElement = targetElement.parentElement;\n                var currentPoint = e.target;\n                targetElement.removeAttribute('tabindex');\n                targetElement.blur();\n                if ((e.code === 'ArrowUp' || e.code === 'ArrowDown')) {\n                    this.currentPointIndex += e.code === 'ArrowUp' ? 1 : -1;\n                }\n                if (targetId.indexOf('_marker') > -1) {\n                    this.currentPointIndex = this.getActualIndex(this.currentPointIndex, (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_4__.getElement)(this.element.id + '_sparkline_marker_g').childElementCount);\n                    currentPoint = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_4__.getElement)(this.element.id + '_sparkline_marker_' +\n                        this.currentPointIndex);\n                }\n                else if (targetId.indexOf('_column') > -1) {\n                    this.currentPointIndex = this.getActualIndex(this.currentPointIndex, (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_4__.getElement)(this.element.id + '_sparkline_g').childElementCount);\n                    currentPoint = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_4__.getElement)(this.element.id + '_sparkline_column_' + this.currentPointIndex);\n                }\n                else if (targetId.indexOf('_winloss') > -1) {\n                    this.currentPointIndex = this.getActualIndex(this.currentPointIndex, (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_4__.getElement)(this.element.id + '_sparkline_g').childElementCount);\n                    currentPoint = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_4__.getElement)(this.element.id + '_sparkline_winloss_' + this.currentPointIndex);\n                }\n                else if (targetId.indexOf('_pie') > -1) {\n                    this.currentPointIndex = this.getActualIndex(this.currentPointIndex, (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_4__.getElement)(this.element.id + '_sparkline_g').childElementCount);\n                    currentPoint = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_4__.getElement)(this.element.id + '_sparkline_pie_' + this.currentPointIndex);\n                }\n                targetId = this.focusChild(currentPoint);\n                actionKey = this.tooltipSettings.visible ? 'ArrowMove' : '';\n            }\n        }\n        if (actionKey !== '') {\n            this.sparklineKeyboardNavigations(e, targetId, actionKey);\n        }\n        return false;\n    };\n    /**\n     * Handles to set style for key event on the document.\n     *\n     * @param {target} target - element which currently focused.\n     * @returns {void}\n     * @private\n     */\n    Sparkline.prototype.setNavigationStyle = function (target) {\n        var currentElement = document.getElementById(target);\n        if (currentElement) {\n            currentElement.style.setProperty('outline', \"1.5px solid \" + this.sparkTheme.tabColor);\n        }\n    };\n    /**\n     * Handles to remove style for key event on the document.\n     *\n     * @returns {void}\n     * @private\n     */\n    Sparkline.prototype.removeNavigationStyle = function () {\n        var currentElement = document.querySelectorAll(\"path[id*=_sparkline_], [id*=\" + this.element.id + \"]\");\n        if (currentElement) {\n            currentElement.forEach(function (element) {\n                if (element instanceof HTMLElement || element instanceof SVGElement) {\n                    element.style.setProperty('outline', 'none');\n                    element.style.setProperty('margin', '');\n                }\n            });\n        }\n    };\n    Sparkline.prototype.sparklineKeyboardNavigations = function (e, targetId, actionKey) {\n        switch (actionKey) {\n            case 'Tab':\n            case 'ArrowMove':\n                if (targetId.indexOf('_sparkline_') > -1) {\n                    var pointIndex = void 0;\n                    if ((this.type.indexOf('Line') > -1) || (this.type.indexOf('Area') > -1)) {\n                        pointIndex = +(targetId.split('_sparkline_')[1].split('marker_')[1]);\n                    }\n                    else if (this.type.indexOf('WinLoss') > -1) {\n                        pointIndex = +(targetId.split('_sparkline_')[1].split('winloss_')[1]);\n                    }\n                    else if (this.type.indexOf('Pie') > -1) {\n                        pointIndex = +(targetId.split('_sparkline_')[1].split('pie_')[1]);\n                    }\n                    else {\n                        pointIndex = +(targetId.split('_sparkline_')[1].split('column_')[1]);\n                    }\n                    if (this.sparklineTooltipModule) {\n                        this.sparklineTooltipModule.renderTooltip(this.sparklineRenderer.visiblePoints[pointIndex]);\n                    }\n                }\n                break;\n            case 'ESC':\n                this.sparklineTooltipModule.removeTooltipElements();\n                break;\n        }\n    };\n    /**\n     * Sets the tab index for the specified elements.\n     *\n     * @param {HTMLElement} previousElement - The previous element whose tab index needs to be removed.\n     * @param {HTMLElement} currentElement - The current element to which the tab index needs to be set.\n     * @returns {void}\n     * @private\n     */\n    Sparkline.prototype.setTabIndex = function (previousElement, currentElement) {\n        if (previousElement) {\n            previousElement.removeAttribute('tabindex');\n        }\n        if (currentElement) {\n            currentElement.setAttribute('tabindex', '0');\n        }\n    };\n    /**\n     * Gets the actual index based on the provided index and the total length.\n     *\n     * @param {number} index - The provided index.\n     * @param {number} totalLength - The total length of the collection.\n     * @returns {number} - The actual index, ensuring it is within the valid range.\n     * @private\n     */\n    Sparkline.prototype.getActualIndex = function (index, totalLength) {\n        return index > totalLength - 1 ? 0 : (index < 0 ? totalLength - 1 : index);\n    };\n    Sparkline.prototype.focusChild = function (element) {\n        element.setAttribute('tabindex', '0');\n        var className = element.getAttribute('class');\n        element.setAttribute('tabindex', '0');\n        if (className && className.indexOf('e-sparkline-focused') === -1) {\n            className = 'e-sparkline-focused ' + className;\n        }\n        else if (!className) {\n            className = 'e-sparkline-focused';\n        }\n        element.setAttribute('class', className);\n        element.focus();\n        return element.id;\n    };\n    /**\n     * Method to set mouse x, y from events.\n     *\n     * @param {PointerEvent} e - The pointer event.\n     * @returns {void}\n     */\n    Sparkline.prototype.setSparklineMouseXY = function (e) {\n        var pageY;\n        var pageX;\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageY = e.clientY;\n            pageX = e.clientX;\n        }\n        var rect = this.element.getBoundingClientRect();\n        var svgRect = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getIdElement)(this.element.id + '_svg').getBoundingClientRect();\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * To change rendering while property value modified.\n     *\n     * @private\n     * @param {SparklineModel} newProp - new SparklineModel.\n     * @returns {void}\n     */\n    Sparkline.prototype.onPropertyChanged = function (newProp) {\n        var render = false;\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'xName':\n                case 'yName':\n                case 'axisSettings':\n                case 'rangeBandSettings':\n                case 'type':\n                case 'valueType':\n                case 'enableRtl':\n                    refresh = true;\n                    break;\n                case 'dataSource':\n                    refresh = true;\n                    break;\n                case 'border':\n                case 'markerSettings':\n                case 'dataLabelSettings':\n                case 'tooltipSettings':\n                case 'startPointColor':\n                case 'highPointColor':\n                case 'lowPointColor':\n                case 'endPointColor':\n                case 'negativePointColor':\n                case 'theme':\n                    render = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.createSVG();\n            this.sparklineRenderer.processData();\n            this.refreshSparkline();\n        }\n        else if (render) {\n            this.createSVG();\n            this.refreshSparkline();\n        }\n    };\n    /**\n     * To render sparkline series and appending.\n     *\n     * @returns {void}\n     */\n    Sparkline.prototype.refreshSparkline = function () {\n        // Issue fix. React had native render method. So OnProperty change used render method won't wrok.\n        this.renderSparkline();\n        this.element.appendChild(this.svgObject);\n        this.setSecondaryElementPosition();\n    };\n    /**\n     * Get component name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Sparkline.prototype.getModuleName = function () {\n        return 'sparkline';\n    };\n    /**\n     * Destroy the component.\n     *\n     * @returns {void}\n     */\n    Sparkline.prototype.destroy = function () {\n        this.sparklineData = [];\n        // let element: HTMLElement = document.getElementById(this.element.id + 'Keyboard_chart_focus');\n        // if (element) { element.remove(); }\n        var element = document.getElementById(this.element.id + 'Keyboard_sparkline_focus');\n        if (element) {\n            element.remove();\n        }\n        (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeElement)('sparklinesmeasuretext');\n        if (this.element) {\n            this.unWireEvents();\n            _super.prototype.destroy.call(this);\n            this.removeSvg();\n            this.svgObject = null;\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @private\n     * @returns {string} -  The properties to be maintained in the persisted state.\n     */\n    Sparkline.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Sparkline.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Sparkline.prototype, \"height\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_base__WEBPACK_IMPORTED_MODULE_1__.SparklineBorder)\n    ], Sparkline.prototype, \"border\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Line')\n    ], Sparkline.prototype, \"type\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('None')\n    ], Sparkline.prototype, \"rangePadding\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Sparkline.prototype, \"dataSource\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Sparkline.prototype, \"query\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Numeric')\n    ], Sparkline.prototype, \"valueType\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Sparkline.prototype, \"xName\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Sparkline.prototype, \"yName\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('#00bdae')\n    ], Sparkline.prototype, \"fill\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Sparkline.prototype, \"highPointColor\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Sparkline.prototype, \"lowPointColor\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Sparkline.prototype, \"startPointColor\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Sparkline.prototype, \"endPointColor\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Sparkline.prototype, \"negativePointColor\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Sparkline.prototype, \"tiePointColor\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])\n    ], Sparkline.prototype, \"palette\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1)\n    ], Sparkline.prototype, \"lineWidth\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1)\n    ], Sparkline.prototype, \"opacity\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Sparkline.prototype, \"format\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Sparkline.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_base__WEBPACK_IMPORTED_MODULE_1__.SparklineTooltipSettings)\n    ], Sparkline.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_base__WEBPACK_IMPORTED_MODULE_1__.ContainerArea)\n    ], Sparkline.prototype, \"containerArea\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([], _model_base__WEBPACK_IMPORTED_MODULE_1__.RangeBandSettings)\n    ], Sparkline.prototype, \"rangeBandSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_base__WEBPACK_IMPORTED_MODULE_1__.AxisSettings)\n    ], Sparkline.prototype, \"axisSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_base__WEBPACK_IMPORTED_MODULE_1__.SparklineMarkerSettings)\n    ], Sparkline.prototype, \"markerSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_base__WEBPACK_IMPORTED_MODULE_1__.SparklineDataLabelSettings)\n    ], Sparkline.prototype, \"dataLabelSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_base__WEBPACK_IMPORTED_MODULE_1__.Padding)\n    ], Sparkline.prototype, \"padding\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Material')\n    ], Sparkline.prototype, \"theme\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Sparkline.prototype, \"loaded\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Sparkline.prototype, \"load\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Sparkline.prototype, \"tooltipInitialize\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Sparkline.prototype, \"seriesRendering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Sparkline.prototype, \"axisRendering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Sparkline.prototype, \"pointRendering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Sparkline.prototype, \"pointRegionMouseMove\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Sparkline.prototype, \"pointRegionMouseClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Sparkline.prototype, \"sparklineMouseMove\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Sparkline.prototype, \"sparklineMouseClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Sparkline.prototype, \"dataLabelRendering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Sparkline.prototype, \"markerRendering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Sparkline.prototype, \"resize\", void 0);\n    Sparkline = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], Sparkline);\n    return Sparkline;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-charts/src/sparkline/sparkline.js?");

/***/ })

}]);