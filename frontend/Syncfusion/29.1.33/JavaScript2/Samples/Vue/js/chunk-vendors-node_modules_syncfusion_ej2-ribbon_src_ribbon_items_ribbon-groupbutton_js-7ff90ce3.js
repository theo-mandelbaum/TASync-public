"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-ribbon_src_ribbon_items_ribbon-groupbutton_js-7ff90ce3"],{

/***/ "./node_modules/@syncfusion/ej2-ribbon/src/ribbon/items/ribbon-groupbutton.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-ribbon/src/ribbon/items/ribbon-groupbutton.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RibbonGroupButton: () => (/* binding */ RibbonGroupButton)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/constant */ \"./node_modules/@syncfusion/ej2-ribbon/src/ribbon/base/constant.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\");\n/* harmony import */ var _base_interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/interface */ \"./node_modules/@syncfusion/ej2-ribbon/src/ribbon/base/interface.js\");\n/* harmony import */ var _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-splitbuttons */ \"./node_modules/@syncfusion/ej2-splitbuttons/index.js\");\n/* harmony import */ var _base_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../base/utils */ \"./node_modules/@syncfusion/ej2-ribbon/src/ribbon/base/utils.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n\n\n\n\n\n\n\n/**\n * Defines the items of Ribbon.\n */\nvar RibbonGroupButton = /** @class */ (function () {\n    function RibbonGroupButton(parent) {\n        this.parent = parent;\n        this.isSelected = false;\n    }\n    RibbonGroupButton.prototype.getModuleName = function () {\n        return 'ribbonGroupButton';\n    };\n    RibbonGroupButton.prototype.destroy = function () {\n        this.parent = null;\n    };\n    /**\n     * Creates Group Button\n     *\n     * @param {RibbonItemModel} item - Gets the ribbon item model.\n     * @param {HTMLElement} itemElement - Gets the ribbon item element.\n     * @returns {void}\n     * @hidden\n     */\n    RibbonGroupButton.prototype.createGroupButton = function (item, itemElement) {\n        var _this = this;\n        var groupBtnSettings = item.groupButtonSettings;\n        this.count = 0;\n        var btnContainerEle = this.parent.createElement('div', {\n            id: item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID,\n            className: 'e-btn-group'\n        });\n        itemElement.appendChild(btnContainerEle);\n        for (var i = 0; i < groupBtnSettings.items.length; i++) {\n            if ((groupBtnSettings.items[parseInt(i.toString(), 10)].iconCss)) {\n                var groupButtonEle = this.parent.createElement('button', {\n                    id: item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + i,\n                    className: _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON\n                });\n                btnContainerEle.appendChild(groupButtonEle);\n                new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__.Button({\n                    iconCss: groupBtnSettings.items[parseInt(i.toString(), 10)].iconCss,\n                    disabled: item.disabled,\n                    enableRtl: this.parent.enableRtl,\n                    content: item.activeSize === _base_interface__WEBPACK_IMPORTED_MODULE_3__.RibbonItemSize.Small ? '' : groupBtnSettings.items[parseInt(i.toString(), 10)].content,\n                    iconPosition: item.activeSize === _base_interface__WEBPACK_IMPORTED_MODULE_3__.RibbonItemSize.Large ? 'Top' : 'Left'\n                }, groupButtonEle);\n                if (groupBtnSettings.items[parseInt(i.toString(), 10)].htmlAttributes) {\n                    (0,_base_utils__WEBPACK_IMPORTED_MODULE_5__.setCustomAttributes)(groupButtonEle, groupBtnSettings.items[parseInt(i.toString(), 10)].htmlAttributes);\n                }\n                if (groupBtnSettings.items[parseInt(i.toString(), 10)].content) {\n                    groupButtonEle.classList.add(_base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_CONTENT);\n                    groupButtonEle.setAttribute('aria-label', groupBtnSettings.items[parseInt(i.toString(), 10)].content);\n                }\n                else {\n                    groupButtonEle.setAttribute('aria-label', 'groupbuttonitem');\n                }\n                var buttonEle = itemElement.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + i);\n                if (groupBtnSettings.selection === _base_interface__WEBPACK_IMPORTED_MODULE_3__.RibbonGroupButtonSelection.Single) {\n                    btnContainerEle.classList.add(_base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_SINGLE_BUTTON_SELECTION);\n                }\n                else {\n                    btnContainerEle.classList.add(_base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_MULTIPLE_BUTTON_SELECTION);\n                }\n                if (groupBtnSettings.items[parseInt(i.toString(), 10)].selected) {\n                    if (groupBtnSettings.selection === _base_interface__WEBPACK_IMPORTED_MODULE_3__.RibbonGroupButtonSelection.Multiple) {\n                        buttonEle.classList.add('e-active');\n                    }\n                    else {\n                        if (this.count < 1) {\n                            buttonEle.classList.add('e-active');\n                            this.count++;\n                        }\n                    }\n                }\n                if (groupBtnSettings.items[parseInt(i.toString(), 10)].ribbonTooltipSettings &&\n                    (0,_base_utils__WEBPACK_IMPORTED_MODULE_5__.isTooltipPresent)(groupBtnSettings.items[parseInt(i.toString(), 10)].ribbonTooltipSettings)) {\n                    groupButtonEle.classList.add(_base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_TOOLTIP_TARGET);\n                    this.parent.tooltipData.push({\n                        id: groupButtonEle.id, data: groupBtnSettings.items[parseInt(i.toString(), 10)].ribbonTooltipSettings\n                    });\n                }\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(buttonEle, 'click', this.groupButtonClicked.bind(this, i, item, groupBtnSettings), this);\n            }\n        }\n        if (this.parent.activeLayout === 'Simplified') {\n            var dropdownIcon = void 0;\n            var activeEleCount = 0;\n            var count = 0;\n            var buttonEle = this.parent.createElement('button', {\n                id: item.id\n            });\n            itemElement.appendChild(buttonEle);\n            for (var i = 0; i < groupBtnSettings.items.length; i++) {\n                if (item.groupButtonSettings.items[parseInt(i.toString(), 10)].selected &&\n                    !this.isSelected && groupBtnSettings.selection === _base_interface__WEBPACK_IMPORTED_MODULE_3__.RibbonGroupButtonSelection.Single) {\n                    dropdownIcon = item.groupButtonSettings.items[parseInt(i.toString(), 10)].iconCss;\n                    this.isSelected = true;\n                }\n                else if (item.groupButtonSettings.items[parseInt(i.toString(), 10)].selected &&\n                    groupBtnSettings.selection === _base_interface__WEBPACK_IMPORTED_MODULE_3__.RibbonGroupButtonSelection.Multiple) {\n                    activeEleCount++;\n                    if (activeEleCount === 1) {\n                        dropdownIcon = item.groupButtonSettings.items[parseInt(i.toString(), 10)].iconCss;\n                    }\n                    else {\n                        dropdownIcon = null;\n                    }\n                }\n            }\n            while (count < item.groupButtonSettings.items.length && !this.isSelected && !dropdownIcon) {\n                if (item.groupButtonSettings.items[parseInt(count.toString(), 10)].iconCss) {\n                    dropdownIcon = item.groupButtonSettings.items[parseInt(count.toString(), 10)].iconCss;\n                    this.isSelected = true;\n                }\n                count++;\n            }\n            var dropdown = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({\n                iconCss: dropdownIcon,\n                target: btnContainerEle,\n                enableRtl: this.parent.enableRtl,\n                cssClass: 'e-ribbon-dropdown-group-button',\n                disabled: item.disabled\n            }, buttonEle);\n            if (groupBtnSettings.header) {\n                var dropDownPopup = dropdown.dropDown;\n                this.addGroupButtonHeader(item.id, groupBtnSettings, dropDownPopup.element);\n            }\n            buttonEle.onclick = buttonEle.onkeydown = function () {\n                _this.handleFocusState(item, itemElement);\n            };\n            btnContainerEle.onkeydown = function (e) {\n                if (_this.parent.activeLayout === 'Simplified') {\n                    _this.handleGroupButtonNavigation(e, item);\n                }\n            };\n            (0,_base_utils__WEBPACK_IMPORTED_MODULE_5__.createTooltip)(btnContainerEle, this.parent);\n            this.isSelected = false;\n        }\n    };\n    RibbonGroupButton.prototype.groupButtonClicked = function (itemIndex, item, grpBtnSettings) {\n        var previousItems = [];\n        var selectingItems = [];\n        var selectedItems = [];\n        var groupButtonEle;\n        var dropdown;\n        for (var j = 0; j < grpBtnSettings.items.length; j++) {\n            if (document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + j)) {\n                if (document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + j).classList.contains('e-active')) {\n                    previousItems.push(grpBtnSettings.items[parseInt(j.toString(), 10)]);\n                }\n            }\n        }\n        if (!(document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + itemIndex).classList.contains('e-active'))) {\n            selectingItems.push(grpBtnSettings.items[parseInt(itemIndex.toString(), 10)]);\n        }\n        var eventArgs = {\n            cancel: false, previousItems: previousItems, selectingItems: selectingItems\n        };\n        if (grpBtnSettings.items[parseInt(itemIndex.toString(), 10)].beforeClick) {\n            grpBtnSettings.items[parseInt(itemIndex.toString(), 10)].beforeClick.call(this, eventArgs);\n        }\n        if (eventArgs.cancel) {\n            return;\n        }\n        else {\n            if (grpBtnSettings.selection === _base_interface__WEBPACK_IMPORTED_MODULE_3__.RibbonGroupButtonSelection.Single) {\n                if (document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID).classList.contains(_base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_MULTIPLE_BUTTON_SELECTION)) {\n                    document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID).classList.remove(_base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_MULTIPLE_BUTTON_SELECTION);\n                    document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID).classList.add(_base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_SINGLE_BUTTON_SELECTION);\n                }\n                for (var j = 0; j < grpBtnSettings.items.length; j++) {\n                    if (document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + j) && document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + j).classList.contains('e-active')) {\n                        document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + j).classList.remove('e-active');\n                        grpBtnSettings.items[parseInt(j.toString(), 10)].\n                            setProperties({ selected: false }, true);\n                    }\n                }\n                document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + itemIndex).classList.toggle('e-active');\n                grpBtnSettings.items[parseInt(itemIndex.toString(), 10)].setProperties({ selected: true }, true);\n                if (document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + itemIndex).classList.contains('e-active') && this.parent.activeLayout === 'Simplified') {\n                    this.grpBtnIndex = itemIndex;\n                    groupButtonEle = document.querySelector('#' + item.id);\n                    dropdown = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(groupButtonEle, _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton);\n                    dropdown.setProperties({\n                        iconCss: grpBtnSettings.items[parseInt(itemIndex.toString(), 10)].iconCss\n                    });\n                }\n            }\n            else {\n                if (document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID).classList.contains(_base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_SINGLE_BUTTON_SELECTION)) {\n                    document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID).classList.remove(_base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_SINGLE_BUTTON_SELECTION);\n                    document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID).classList.add(_base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_MULTIPLE_BUTTON_SELECTION);\n                }\n                document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + itemIndex).classList.toggle('e-active');\n                if (document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + itemIndex).classList.contains('e-active')) {\n                    grpBtnSettings.items[parseInt(itemIndex.toString(), 10)].\n                        setProperties({ selected: true }, true);\n                }\n                else {\n                    grpBtnSettings.items[parseInt(itemIndex.toString(), 10)].\n                        setProperties({ selected: false }, true);\n                }\n                var activeEleCount = 0;\n                for (var n = 0; n < grpBtnSettings.items.length; n++) {\n                    if (document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + n) && document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + n).classList.contains('e-active') && this.parent.activeLayout === 'Simplified' && n !== itemIndex) {\n                        this.isSelected = true;\n                        activeEleCount++;\n                    }\n                }\n                if (this.parent.activeLayout === 'Simplified') {\n                    var dropdownIcon = null;\n                    var itemsCount = 0;\n                    groupButtonEle = document.querySelector('#' + item.id);\n                    dropdown = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(groupButtonEle, _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton);\n                    if (!this.isSelected) {\n                        if (document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + itemIndex).classList.contains('e-active')) {\n                            dropdownIcon = grpBtnSettings.items[parseInt(itemIndex.toString(), 10)].iconCss;\n                        }\n                    }\n                    else {\n                        if (activeEleCount === 1 && !(document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + itemIndex).classList.contains('e-active'))) {\n                            for (var n = 0; n < grpBtnSettings.items.length; n++) {\n                                if (document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + n) && document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + n).classList.contains('e-active')) {\n                                    dropdownIcon = grpBtnSettings.items[parseInt(n.toString(), 10)].iconCss;\n                                }\n                            }\n                        }\n                    }\n                    while (itemsCount < grpBtnSettings.items.length && !dropdownIcon) {\n                        if (grpBtnSettings.items[parseInt(itemsCount.toString(), 10)].iconCss) {\n                            dropdownIcon = grpBtnSettings.items[parseInt(itemsCount.toString(), 10)].iconCss;\n                        }\n                        itemsCount++;\n                    }\n                    dropdown.setProperties({ iconCss: dropdownIcon });\n                    this.grpBtnIndex = itemIndex;\n                }\n                this.isSelected = false;\n            }\n            if (document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + itemIndex).classList.contains('e-active')) {\n                selectedItems.push(grpBtnSettings.items[parseInt(itemIndex.toString(), 10)]);\n            }\n            var eventArgs_1 = { previousItems: previousItems, selectedItems: selectedItems };\n            if (grpBtnSettings.items[parseInt(itemIndex.toString(), 10)].click) {\n                grpBtnSettings.items[parseInt(itemIndex.toString(), 10)].click.call(this, eventArgs_1);\n            }\n        }\n    };\n    /**\n     * updates group button in mode switching\n     *\n     * @param {RibbonItemModel} item - Gets the ribbon item model.\n     * @param {HTMLElement} itemElement - Gets the ribbon item element.\n     * @returns {void}\n     * @hidden\n     */\n    RibbonGroupButton.prototype.switchGroupButton = function (item, itemElement) {\n        var _this = this;\n        var groupBtnSettings = item.groupButtonSettings;\n        var dropdownIcon = null;\n        var activeEleCount = 0;\n        var itemsCount = 0;\n        if (this.parent.activeLayout === 'Simplified') {\n            var containerEle = itemElement.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID);\n            var buttonEle = this.parent.createElement('button', {\n                id: item.id\n            });\n            itemElement.appendChild(buttonEle);\n            for (var i = 0; i < groupBtnSettings.items.length; i++) {\n                if (document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + i)) {\n                    if (document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + i).classList.contains('e-active') && groupBtnSettings.selection === _base_interface__WEBPACK_IMPORTED_MODULE_3__.RibbonGroupButtonSelection.Single) {\n                        dropdownIcon = groupBtnSettings.items[parseInt(i.toString(), 10)].iconCss;\n                    }\n                    else if (document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + i).classList.contains('e-active') && groupBtnSettings.selection === _base_interface__WEBPACK_IMPORTED_MODULE_3__.RibbonGroupButtonSelection.Multiple) {\n                        activeEleCount++;\n                        if (activeEleCount === 1) {\n                            dropdownIcon = groupBtnSettings.items[parseInt(i.toString(), 10)].iconCss;\n                        }\n                        else if (activeEleCount > 1) {\n                            dropdownIcon = null;\n                        }\n                    }\n                }\n            }\n            while (itemsCount < groupBtnSettings.items.length && !dropdownIcon) {\n                if (groupBtnSettings.items[parseInt(itemsCount.toString(), 10)].iconCss) {\n                    dropdownIcon = groupBtnSettings.items[parseInt(itemsCount.toString(), 10)].iconCss;\n                }\n                itemsCount++;\n            }\n            var dropdown = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({\n                iconCss: dropdownIcon,\n                target: containerEle,\n                enableRtl: this.parent.enableRtl,\n                cssClass: 'e-ribbon-dropdown-group-button',\n                disabled: item.disabled\n            }, buttonEle);\n            if (groupBtnSettings.header) {\n                var dropDownPopup = dropdown.dropDown;\n                this.addGroupButtonHeader(item.id, groupBtnSettings, dropDownPopup.element);\n            }\n            buttonEle.onclick = buttonEle.onkeydown = function () {\n                _this.handleFocusState(item, itemElement);\n            };\n            containerEle.onkeydown = function (e) {\n                if (_this.parent.activeLayout === 'Simplified') {\n                    _this.handleGroupButtonNavigation(e, item);\n                }\n            };\n            (0,_base_utils__WEBPACK_IMPORTED_MODULE_5__.createTooltip)(containerEle, this.parent);\n        }\n        else {\n            var groupButtonEle = itemElement.querySelector('#' + item.id);\n            var dropdown = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(groupButtonEle, _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton);\n            itemElement.appendChild(dropdown.target);\n            if (groupButtonEle) {\n                dropdown.destroy();\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(groupButtonEle);\n            }\n        }\n    };\n    RibbonGroupButton.prototype.handleFocusState = function (item, itemElement) {\n        if (itemElement.querySelector('#' + item.id).classList.contains('e-active')) {\n            var defaultSelectedBtn = document.querySelector('#' + item.id + '_grpbtn').querySelector('.' + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON + '.e-active');\n            if (defaultSelectedBtn) {\n                defaultSelectedBtn.focus();\n            }\n            else {\n                document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + 0).focus();\n            }\n            this.grpBtnIndex = 0;\n        }\n    };\n    RibbonGroupButton.prototype.addGroupButtonHeader = function (itemID, groupBtnSettings, popupEle) {\n        var groupButtonHeader = this.parent.createElement('div', {\n            className: 'e-ribbon-groupbutton-header',\n            id: itemID + _base_constant__WEBPACK_IMPORTED_MODULE_1__.HEADER_ID,\n            innerHTML: groupBtnSettings.header\n        });\n        popupEle.insertBefore(groupButtonHeader, popupEle.firstChild);\n    };\n    RibbonGroupButton.prototype.handleGroupButtonNavigation = function (e, item) {\n        var groupButtonEle = document.querySelector('#' + item.id);\n        var dropdown = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(groupButtonEle, _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton);\n        var targetEle = dropdown.target;\n        var isOverflowPopup = false;\n        if (this.parent.activeLayout === 'Simplified' && targetEle.closest('.e-ribbon-dropdown-group-button').classList.contains(_base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_OVERFLOW_POPUP)) {\n            isOverflowPopup = true;\n        }\n        if (e.key === 'Tab') {\n            e.preventDefault();\n        }\n        var groupBtnSettings = item.groupButtonSettings;\n        if ((e.key === 'ArrowRight' && !isOverflowPopup) || (e.key === 'ArrowDown' && isOverflowPopup)) {\n            if (!this.parent.enableRtl || (e.key === 'ArrowDown' && isOverflowPopup)) {\n                this.grpBtnIndex++;\n                if (this.grpBtnIndex < groupBtnSettings.items.length) {\n                    document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + (this.grpBtnIndex)).focus();\n                }\n                else {\n                    this.grpBtnIndex = 0;\n                    document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + (this.grpBtnIndex)).focus();\n                }\n            }\n            else {\n                if (this.grpBtnIndex === 0) {\n                    this.grpBtnIndex = groupBtnSettings.items.length - 1;\n                    document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + (this.grpBtnIndex)).focus();\n                }\n                else {\n                    this.grpBtnIndex--;\n                    document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + (this.grpBtnIndex)).focus();\n                }\n            }\n        }\n        else if ((e.key === 'ArrowLeft' && !isOverflowPopup) || (e.key === 'ArrowUp' && isOverflowPopup)) {\n            if (!this.parent.enableRtl || (e.key === 'ArrowUp' && isOverflowPopup)) {\n                if (this.grpBtnIndex === 0) {\n                    this.grpBtnIndex = groupBtnSettings.items.length - 1;\n                    document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + (this.grpBtnIndex)).focus();\n                }\n                else {\n                    this.grpBtnIndex--;\n                    document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + (this.grpBtnIndex)).focus();\n                }\n            }\n            else {\n                this.grpBtnIndex++;\n                if (this.grpBtnIndex < groupBtnSettings.items.length) {\n                    document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + (this.grpBtnIndex)).focus();\n                }\n                else {\n                    this.grpBtnIndex = 0;\n                    document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + (this.grpBtnIndex)).focus();\n                }\n            }\n        }\n    };\n    /**\n     * Adds the additional event handlers as the item moved into overflow popup.\n     *\n     * @param {RibbonItemModel} item - Gets the ribbon item model.\n     * @param {HTMLElement} itemEle - Gets the ribbon item element.\n     * @param {DropDownButton} overflowButton - Gets the overflow button.\n     * @returns {void}\n     * @hidden\n     */\n    RibbonGroupButton.prototype.addOverFlowEvents = function (item, itemEle, overflowButton) {\n        var _this = this;\n        var groupBtnSettings = item.groupButtonSettings;\n        var isIconOnly = true;\n        var groupButtonEle = itemEle.querySelector('#' + item.id);\n        var dropdown = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(groupButtonEle, _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton);\n        dropdown.setProperties({ cssClass: dropdown.cssClass + _base_constant__WEBPACK_IMPORTED_MODULE_1__.SPACE + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_OVERFLOW_POPUP, content: groupBtnSettings.header ? groupBtnSettings.header : '' });\n        var targetEle = dropdown.target;\n        if (targetEle.children.length) {\n            for (var i = 0; i < targetEle.children.length; i++) {\n                if (groupBtnSettings.items[parseInt(i.toString(), 10)].content) {\n                    isIconOnly = false;\n                    break;\n                }\n            }\n            if (isIconOnly) {\n                targetEle.classList.add('e-icon-btn');\n            }\n        }\n        targetEle.onclick = function () {\n            if (_this.parent.activeLayout === 'Simplified' && targetEle.closest('.e-ribbon-dropdown-group-button').classList.contains(_base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_OVERFLOW_POPUP)) {\n                dropdown.toggle();\n                if (overflowButton.element.classList.contains('e-active')) {\n                    overflowButton.toggle();\n                }\n            }\n        };\n    };\n    /**\n     * Removes the additional event handlers as the item moved into overflow popup.\n     *\n     * @param {RibbonItemModel} item - Gets the ribbon item model.\n     * @param {HTMLElement} itemEle - Gets the ribbon item element.\n     * @returns {void}\n     * @hidden\n     */\n    RibbonGroupButton.prototype.removeOverFlowEvents = function (item, itemEle) {\n        var groupButtonEle = itemEle.querySelector('#' + item.id);\n        if (groupButtonEle) {\n            var dropdown = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(groupButtonEle, _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton);\n            var targetEle = dropdown.target;\n            if (targetEle.classList.contains('e-icon-btn')) {\n                targetEle.classList.remove('e-icon-btn');\n            }\n            var cssClass = dropdown.cssClass.split(_base_constant__WEBPACK_IMPORTED_MODULE_1__.SPACE);\n            cssClass = cssClass.filter(function (value) { return value !== _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_OVERFLOW_POPUP; });\n            dropdown.setProperties({ cssClass: cssClass.join(_base_constant__WEBPACK_IMPORTED_MODULE_1__.SPACE), content: '' });\n        }\n    };\n    /**\n     * Removes DropDown.\n     *\n     * @param {RibbonItemModel} item - Gets the ribbon item.\n     * @returns {void}\n     * @hidden\n     */\n    RibbonGroupButton.prototype.destroyDropDown = function (item) {\n        var groupButtonEle = document.querySelector('#' + item.id);\n        if (groupButtonEle) {\n            var dropdown = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(groupButtonEle, _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton);\n            var tooltip = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(dropdown.target, _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.Tooltip);\n            tooltip.destroy();\n            dropdown.destroy();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(groupButtonEle);\n        }\n    };\n    /**\n     * Updates the group button size.\n     *\n     * @param {HTMLElement} itemElement - Gets the group button container element.\n     * @param {RibbonItemModel} item - Gets the ribbon item.\n     * @returns {void}\n     * @hidden\n     */\n    RibbonGroupButton.prototype.updateGroupButtonSize = function (itemElement, item) {\n        var groupBtnSettings = item.groupButtonSettings;\n        var buttonEle;\n        for (var i = 0; i < groupBtnSettings.items.length; i++) {\n            if (this.parent.activeLayout === 'Classic') {\n                buttonEle = itemElement.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + i);\n            }\n            else {\n                buttonEle = document.querySelector('#' + item.id + _base_constant__WEBPACK_IMPORTED_MODULE_1__.RIBBON_GROUP_BUTTON_ID + i);\n            }\n            if (buttonEle) {\n                var buttonObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(buttonEle, _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__.Button);\n                buttonObj.setProperties({\n                    iconPosition: item.activeSize === _base_interface__WEBPACK_IMPORTED_MODULE_3__.RibbonItemSize.Large ? 'Top' : 'Left',\n                    content: item.activeSize === _base_interface__WEBPACK_IMPORTED_MODULE_3__.RibbonItemSize.Small ? '' : groupBtnSettings.items[parseInt(i.toString(), 10)].content\n                });\n            }\n        }\n    };\n    return RibbonGroupButton;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-ribbon/src/ribbon/items/ribbon-groupbutton.js?");

/***/ })

}]);