"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-gantt_src_gantt_export_pdf-ti"],{

/***/ "./node_modules/@syncfusion/ej2-gantt/src/gantt/export/pdf-timeline.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-gantt/src/gantt/export/pdf-timeline.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PdfTimeline: () => (/* binding */ PdfTimeline)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-pdf-export */ \"./node_modules/@syncfusion/ej2-pdf-export/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/utils */ \"./node_modules/@syncfusion/ej2-gantt/src/gantt/base/utils.js\");\n\n\n\n/**\n */\nvar PdfTimeline = /** @class */ (function () {\n    function PdfTimeline(gantt) {\n        this.holidayCompleted = false;\n        this.holidayWidth = 0;\n        this.fitHolidayCompleted = false;\n        this.timelineWidth = 0;\n        this.lastWidth = 0;\n        this.topTierValueLeftPadding = 8;\n        this.width = 0;\n        this.gantt = gantt;\n        this.parent = gantt.parent;\n        this.topTierPoint = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF();\n        this.bottomTierPoint = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF();\n        this.topTierIndex = 0;\n        this.bottomTierIndex = 0;\n        this.prevTopTierIndex = 0;\n        this.prevBottomTierIndex = 0;\n    }\n    /**\n     * @private\n     * @param {PdfPage} page .\n     * @param {PointF} startPoint .\n     * @param {TimelineDetails} detail .\n     * @returns {void}\n     */\n    PdfTimeline.prototype.drawTimeline = function (page, startPoint, detail) {\n        this.detailsTimeline = detail;\n        var remainWidth = (this.parent.pdfExportModule.gantt.taskbar.isAutoFit()) ?\n            (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pointToPixel)(Math.floor(detail.totalWidth)) : Math.round(detail.totalWidth);\n        var renderWidth = 0;\n        this.topTierPoint.x = startPoint.x;\n        this.topTierPoint.y = startPoint.y;\n        this.prevTopTierIndex = this.topTierIndex;\n        this.prevBottomTierIndex = this.bottomTierIndex;\n        while (remainWidth > 0) {\n            var pHeader = this.topTier[this.topTierIndex];\n            if (this.topTier.length > this.topTierIndex) {\n                var isCompleted = false;\n                if (!this.topTier[this.topTierIndex].isFinished) {\n                    if (remainWidth >= pHeader.width) {\n                        renderWidth = pHeader.width;\n                        pHeader.isFinished = true;\n                        pHeader.completedWidth = renderWidth;\n                        isCompleted = true;\n                    }\n                    else {\n                        renderWidth = remainWidth;\n                        isCompleted = false;\n                        pHeader.isFinished = false;\n                        pHeader.width = pHeader.width - remainWidth;\n                        pHeader.completedWidth = renderWidth;\n                    }\n                }\n                //Primary header Event Arguments\n                var reWidth = (this.parent.pdfExportModule.gantt.taskbar.isAutoFit()) ? renderWidth : (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(renderWidth);\n                /* eslint-disable-next-line */\n                this.triggerQueryTimelinecell(page, this.topTierPoint.x, this.topTierPoint.y, this.topTierHeight, reWidth, pHeader.value, true, this.parent.timelineModule.isSingleTier &&\n                    this.parent.timelineSettings.topTier.unit === 'Day' ? pHeader.startDate : null);\n                this.topTierPoint.x += reWidth;\n                remainWidth -= renderWidth;\n                if (isCompleted) {\n                    this.topTierIndex++;\n                }\n            }\n            else {\n                remainWidth = 0;\n            }\n        }\n        remainWidth = Math.round(detail.totalWidth);\n        var height = this.parent.timelineModule.isSingleTier ? 0 : this.topTierHeight;\n        this.bottomTierPoint = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x, (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(startPoint.y + height));\n        while (remainWidth > 0) {\n            var secondHeader = this.bottomTier[this.bottomTierIndex];\n            if (this.bottomTier.length > this.bottomTierIndex) {\n                var isCompleted = true;\n                var width = secondHeader.width;\n                if (remainWidth < width) {\n                    width = remainWidth;\n                    /* eslint-disable-next-line */\n                    isCompleted = false;\n                    secondHeader.completedWidth = width;\n                }\n                //Secondary header Event Arguments\n                this.triggerQueryTimelinecell(page, this.bottomTierPoint.x, this.bottomTierPoint.y, this.bottomTierHeight, (this.parent.pdfExportModule.gantt.taskbar.isAutoFit()) ? width : (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(width), secondHeader.value, false, secondHeader.startDate);\n                this.bottomTierPoint.x = (this.parent.pdfExportModule.gantt.taskbar.isAutoFit()) ?\n                    this.bottomTierPoint.x + width : this.bottomTierPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(width);\n                remainWidth -= width;\n                secondHeader.completedWidth = width;\n                // if (isCompleted) {\n                this.bottomTierIndex++;\n                // }\n                if (remainWidth > 0 && remainWidth < width) {\n                    remainWidth = secondHeader.width - 1;\n                }\n            }\n            else {\n                remainWidth = 0;\n            }\n        }\n        this.timelineWidth = this.lastWidth;\n    };\n    /**\n     *\n     * @param {PdfPage} page .\n     * @param {PointF} startPoint .\n     * @param {TimelineDetails}  detail .\n     * @returns {void} .\n     * Draw the specific gantt chart side header when the taskbar exceeds the page\n     * @private\n     */\n    /* eslint-disable-next-line */\n    PdfTimeline.prototype.drawPageTimeline = function (page, startPoint, detail) {\n        this.topTierPoint = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.extend)({}, {}, startPoint, true);\n        for (var index = this.prevTopTierIndex; index <= this.topTierIndex; index++) {\n            if (this.topTier.length > index) {\n                var pHeader = this.topTier[index];\n                if (pHeader.completedWidth > 0) {\n                    //Primary header Event Arguments\n                    /* eslint-disable-next-line */\n                    this.triggerQueryTimelinecell(page, this.topTierPoint.x, this.topTierPoint.y, this.topTierHeight, (this.parent.pdfExportModule.gantt.taskbar.isAutoFit()) ? pHeader.completedWidth : (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(pHeader.completedWidth), pHeader.value, true, this.parent.timelineModule.isSingleTier &&\n                        this.parent.timelineSettings.topTier.unit === 'Day' ? pHeader.startDate : null);\n                    this.topTierPoint.x += (this.parent.pdfExportModule.gantt.taskbar.isAutoFit()) ?\n                        pHeader.completedWidth : (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(pHeader.completedWidth);\n                }\n            }\n        }\n        this.bottomTierPoint.x = startPoint.x;\n        this.bottomTierPoint.y = (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(startPoint.y + this.topTierHeight);\n        for (var index = this.prevBottomTierIndex; index <= this.bottomTierIndex; index++) {\n            if (this.bottomTier.length > index) {\n                var secondHeader = this.bottomTier[index];\n                if (secondHeader.completedWidth > 0) {\n                    //Secondary header Event Arguments\n                    /* eslint-disable-next-line */\n                    this.triggerQueryTimelinecell(page, this.bottomTierPoint.x, this.bottomTierPoint.y, this.bottomTierHeight, (this.parent.pdfExportModule.gantt.taskbar.isAutoFit()) ? secondHeader.width : (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(secondHeader.width), secondHeader.value, false, secondHeader.startDate);\n                    this.bottomTierPoint.x = (this.parent.pdfExportModule.gantt.taskbar.isAutoFit()) ?\n                        this.bottomTierPoint.x + secondHeader.width : this.bottomTierPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(secondHeader.width);\n                }\n            }\n        }\n    };\n    /**\n     * Method to trigger pdf query timelinecell event\n     */\n    /* eslint-disable-next-line */\n    PdfTimeline.prototype.triggerQueryTimelinecell = function (page, x, y, height, width, value, isTopTier, currentDate) {\n        var _this = this;\n        var days = new Date(currentDate).getDay();\n        var graphics = page.graphics;\n        var timelineStyle = {};\n        var ganttStyle = this.gantt.ganttStyle;\n        timelineStyle.borderColor = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(ganttStyle.timeline.borderColor);\n        timelineStyle.fontColor = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(ganttStyle.timeline.fontColor);\n        timelineStyle.fontSize = ganttStyle.timeline.fontSize;\n        timelineStyle.fontStyle = ganttStyle.timeline.fontStyle;\n        timelineStyle.backgroundColor = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(ganttStyle.timeline.backgroundColor);\n        if (ganttStyle.timeline.padding) {\n            timelineStyle.padding = ganttStyle.timeline.padding;\n        }\n        var format = this.initializePdfStringFormat(ganttStyle, isTopTier);\n        timelineStyle.format = format;\n        var eventArgs = {\n            timelineCell: timelineStyle,\n            value: value\n        };\n        if (this.parent.pdfQueryTimelineCellInfo) {\n            this.parent.trigger('pdfQueryTimelineCellInfo', eventArgs);\n        }\n        var e = eventArgs.timelineCell;\n        var cellBackgroundColor = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(eventArgs.timelineCell.backgroundColor);\n        var nonWorkingDays = this.parent.nonWorkingDayIndex;\n        var isHoliday = false;\n        var holidayContainerColor = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(ganttStyle.holiday.backgroundColor);\n        if (this.parent.highlightWeekends && nonWorkingDays.indexOf(days) !== -1 && (this.parent.timelineModule.bottomTier === 'Day' || this.parent.timelineModule.bottomTier === 'None' && this.parent.timelineModule.topTier === 'Day')) {\n            cellBackgroundColor = holidayContainerColor;\n            isHoliday = true;\n        }\n        this.parent.holidays.map(function (item) {\n            var fromDate = new Date(item.from);\n            var toDate = new Date(item.to);\n            var timelinedate = new Date(currentDate);\n            if (fromDate <= timelinedate && toDate >= timelinedate && (_this.parent.timelineModule.bottomTier === 'Day' || (_this.parent.timelineModule.bottomTier === 'None' && _this.parent.timelineModule.topTier === 'Day'))) {\n                cellBackgroundColor = holidayContainerColor;\n                if (fromDate.getTime() === timelinedate.getTime()) {\n                    _this.holidayWidth = x;\n                }\n                if (toDate.getTime() === timelinedate.getTime()) {\n                    _this.holidayLabel = item.label;\n                    var changeDate = new Date(item.to);\n                    changeDate.setDate(changeDate.getDate() + 1);\n                    var day = _this.parent.dataOperation.getTaskWidth(fromDate, changeDate);\n                    _this.holidayNumberOfDays = (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(day) / width;\n                    _this.holidayCompleted = true;\n                }\n                isHoliday = true;\n            }\n            else if (_this.parent.timelineModule.bottomTier !== 'Day') {\n                if (_this.detailsTimeline.startDate <= fromDate && _this.detailsTimeline.endDate >= fromDate) {\n                    _this.parent.timelineModule.bottomTierCollection.map(function (items) {\n                        if (items.startDate <= fromDate && items.endDate >= fromDate) {\n                            if (items.startDate === currentDate) {\n                                _this.fitHolidayCompleted = true;\n                                _this.fromDataHoliday = item.from;\n                                _this.holidayLabel = item.label;\n                            }\n                        }\n                    });\n                }\n            }\n        });\n        var timelineborder = isHoliday && ganttStyle.holiday && ganttStyle.holiday.borders\n            ? ganttStyle.holiday.borders.left\n            : isHoliday && ganttStyle.holiday && ganttStyle.holiday.borderColor\n                ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(ganttStyle.holiday.borderColor)\n                : new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(eventArgs.timelineCell.borderColor);\n        if (!this.parent.pdfExportModule.gantt.taskbar.isAutoFit()) {\n            this.lastWidth = x + width;\n        }\n        var adjustedWidth = isHoliday && (ganttStyle.holiday.borderColor || ganttStyle.holiday.borders) ? width - 2 : width;\n        // rectangle for timeline header\n        graphics.drawRectangle(timelineborder, cellBackgroundColor, x, y, adjustedWidth, (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(height));\n        var rectPen = (!isTopTier && (this.parent.gridLines === 'Both' || this.parent.gridLines === 'Vertical')) ?\n            new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(ganttStyle.chartGridLineColor) : null;\n        var gridLineColor = isHoliday && (ganttStyle.holiday.borderColor || ganttStyle.holiday.borders) ?\n            timelineborder : rectPen;\n        // rectangle for chart side timeline\n        graphics.drawRectangle(gridLineColor, cellBackgroundColor, x, y + (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(height), adjustedWidth, page.getClientSize().height);\n        var font1 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(ganttStyle.fontFamily, e.fontSize, e.fontStyle);\n        if (ganttStyle.font) {\n            font1 = ganttStyle.font;\n        }\n        var customizedFont = this.getPdfFont(ganttStyle);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(customizedFont)) {\n            font1 = customizedFont;\n        }\n        var fontColor = (ganttStyle.holiday && ganttStyle.holiday.fontColor) ?\n            new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(ganttStyle.holiday.fontColor) : new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(0, 0, 0));\n        var fontBrush = (ganttStyle.holiday && ganttStyle.holiday.fontBrush) ?\n            new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(ganttStyle.holiday.fontBrush)) : null;\n        var textFormat = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStringFormat();\n        textFormat = (ganttStyle.holiday && ganttStyle.holiday.format) ? ganttStyle.holiday.format : null;\n        var padding = { left: 0, right: 0, top: 0, bottom: 0 };\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(ganttStyle) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(ganttStyle.holiday) &&\n            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(ganttStyle.holiday.padding)) {\n            padding = ganttStyle.holiday.padding;\n        }\n        var strSize;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.holidayLabel)) {\n            strSize = font1.measureString(this.holidayLabel);\n        }\n        if (this.holidayCompleted) {\n            var state_1 = graphics.save();\n            var fontHieght = font1.height;\n            var fontSize = font1.size;\n            graphics.translateTransform(this.holidayWidth + width - ((fontSize / 2) * this.holidayNumberOfDays) -\n                fontHieght + (fontHieght / 2) + (width * this.holidayNumberOfDays) / 2, 40);\n            graphics.rotateTransform(-90);\n            graphics.translateTransform(-(page.getClientSize().height / 2), -((this.holidayWidth + width + fontSize) / ((this.holidayWidth + width) / width)));\n            graphics.drawString(this.holidayLabel, font1, fontBrush, fontColor, 5 - (padding.left + padding.right), 5 - (padding.top + padding.bottom), strSize.width + 10, strSize.height + 10, textFormat);\n            graphics.restore(state_1);\n            this.holidayCompleted = false;\n        }\n        if (this.fitHolidayCompleted) {\n            var holidayBrush = holidayContainerColor;\n            var fontSize = font1.size;\n            graphics.drawRectangle(gridLineColor, holidayBrush, x + (width / 2) - fontSize, y +\n                (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(height), fontSize, page.getClientSize().height);\n            var state_2 = graphics.save();\n            graphics.translateTransform(x + width + (width / 2) - fontSize, 40);\n            graphics.rotateTransform(-90);\n            graphics.translateTransform(-(page.getClientSize().height / 2), -((this.holidayWidth + width + fontSize) / ((this.holidayWidth + width) / width)));\n            graphics.drawString(this.holidayLabel, font1, fontBrush, fontColor, 5 - (padding.left + padding.right), 5 - (padding.top + padding.bottom), strSize.width + 10, strSize.height + 10, textFormat);\n            graphics.restore(state_2);\n            this.fitHolidayCompleted = false;\n        }\n        var font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(ganttStyle.fontFamily, e.fontSize, e.fontStyle);\n        if (ganttStyle.font) {\n            font = ganttStyle.font;\n        }\n        var textBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(ganttStyle.timeline.fontBrush)\n            ? ganttStyle.timeline.fontBrush : eventArgs.timelineCell.fontColor);\n        var pLeft = ganttStyle.timeline.padding ? eventArgs.timelineCell.padding.left : 0;\n        var pTop = ganttStyle.timeline.padding ? eventArgs.timelineCell.padding.top : 0;\n        /* eslint-disable-next-line */\n        var state = graphics.save();\n        graphics.setClip(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.RectangleF(x, y, width, (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(height)));\n        if (isTopTier) {\n            x = x + pLeft + this.topTierValueLeftPadding;\n        }\n        else {\n            x = x + pLeft;\n        }\n        graphics.drawString(eventArgs.value, font, null, textBrush, x, y + pTop, (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_2__.pixelToPoint)(height), e.format);\n        graphics.restore(state);\n    };\n    /**\n     * Initializes and returns a PdfStringFormat based on the provided Gantt style and tier level.\n     *\n     * @param {IGanttStyle} ganttStyle - The style settings for the Gantt chart which include the timeline format.\n     * @param {boolean} isTopTier - A flag indicating whether the format is for the top tier of the timeline.\n     * @returns {PdfStringFormat} The initialized PdfStringFormat with appropriate line alignment, text alignment,\n     * and word wrap type, as determined by the ganttStyle and isTopTier flag.\n     */\n    PdfTimeline.prototype.initializePdfStringFormat = function (ganttStyle, isTopTier) {\n        var format = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStringFormat();\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(ganttStyle.timeline.format)) {\n            if (isTopTier) {\n                format.lineAlignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfVerticalAlignment.Middle;\n                format.alignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfTextAlignment.Left;\n            }\n            else {\n                format.lineAlignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfVerticalAlignment.Middle;\n                format.alignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfTextAlignment.Center;\n                format.wordWrap = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfWordWrapType.Character;\n            }\n        }\n        else {\n            format = ganttStyle.timeline.format;\n        }\n        return format;\n    };\n    PdfTimeline.prototype.getPdfFont = function (ganttStyle) {\n        var font;\n        if (ganttStyle && ganttStyle.holiday && (ganttStyle.holiday.fontSize || ganttStyle.holiday.fontStyle ||\n            ganttStyle.holiday.fontFamily)) {\n            var fontSize = ganttStyle.holiday.fontSize ? ganttStyle.holiday.fontSize : 9;\n            var fontFamily = ganttStyle.holiday.fontFamily ?\n                ganttStyle.holiday.fontFamily : this.fontFamily;\n            var fontStyle = ganttStyle.holiday.fontStyle ?\n                ganttStyle.holiday.fontStyle : _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontStyle.Regular;\n            font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(fontFamily, fontSize, fontStyle);\n        }\n        return font;\n    };\n    return PdfTimeline;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-gantt/src/gantt/export/pdf-timeline.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-gantt/src/gantt/export/pdf-treegrid.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-gantt/src/gantt/export/pdf-treegrid.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PdfTreeGrid: () => (/* binding */ PdfTreeGrid)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _pdf_base_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pdf-base/index */ \"./node_modules/@syncfusion/ej2-gantt/src/gantt/export/pdf-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-pdf-export */ \"./node_modules/@syncfusion/ej2-pdf-export/index.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n/**\n * PdfTreeGrid Class for EJ2-PDF\n */\nvar PdfTreeGrid = /** @class */ (function (_super) {\n    __extends(PdfTreeGrid, _super);\n    function PdfTreeGrid() {\n        var _this = _super.call(this) || this;\n        _this.treeGridSize = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__.SizeF(0, 0);\n        _this.treeColumnIndex = 0;\n        _this.allowRowBreakAcrossPages = true;\n        _this.enableHeader = true;\n        _this.isFitToWidth = false;\n        _this.columns = new _pdf_base_index__WEBPACK_IMPORTED_MODULE_1__.PdfTreeGridColumnCollection(_this);\n        _this.rows = new _pdf_base_index__WEBPACK_IMPORTED_MODULE_1__.PdfTreeGridRowCollection(_this);\n        _this.headers = new _pdf_base_index__WEBPACK_IMPORTED_MODULE_1__.PdfTreeGridHeaderCollection(_this);\n        _this.style = new _pdf_base_index__WEBPACK_IMPORTED_MODULE_1__.PdfTreeGridStyle();\n        _this.rowHeight = 0;\n        return _this;\n    }\n    Object.defineProperty(PdfTreeGrid.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         *\n         * @returns {boolean} .\n         * @private\n         */\n        // public get raiseBeginCellDraw(): boolean {\n        //     // eslint-disable-next-line\n        //     return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        // }\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         *\n         * @returns {boolean} .\n         * @private\n         */\n        // public get raiseEndCellDraw(): boolean {\n        //     // eslint-disable-next-line\n        //     return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        // }\n        get: function () {\n            if ((this.treeGridSize.width === 0 && this.treeGridSize.height === 0)) {\n                this.treeGridSize = this.calculateTreeGridSize();\n            }\n            return this.treeGridSize;\n        },\n        set: function (value) {\n            this.treeGridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Draws` the element on the page with the specified page, 'RectangleF' class and layout format\n     *\n     * @private\n     */\n    /* eslint-disable-next-line */\n    PdfTreeGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__.PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__.RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__.PointF && typeof arg2.width === 'undefined' && arg3 instanceof _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__.PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__.PdfLayoutFormat || arg4 === null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__.RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__.RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    PdfTreeGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            var widths = this.columns.getDefaultWidths(bounds.width - bounds.x);\n            for (var i = 0; i < this.columns.count; i++) {\n                if (this.columns.getColumn(i).width < 0) {\n                    this.columns.getColumn(i).width = widths[i];\n                }\n            }\n        }\n        else {\n            var widths = [];\n            var cellWidth = 0;\n            var totalWidth = 0;\n            var rowLevel = 0;\n            // if(this.headers.count > 0){\n            //     let colCount: number = this.headers.getHeader(0).cells.count;\n            //     for(let i: number = 0; i < colCount; i++){\n            //         let rowCount: number = this.headers.count;\n            //         for(let j: number = 0; j < rowCount; j++){\n            //             let tempWidth: number = this.headers.getHeader(j).cells.getCell(i).width;\n            //             let rowWidth: number = this.initialWidth > 0 ? Math.min(this.initialWidth, tempWidth) :\n            //                 tempWidth;\n            //             cellWidth = Math.max(cellWidth, rowWidth);\n            //         }\n            //         widths.push(cellWidth);\n            //     }\n            // }\n            var colCount = this.columns.count;\n            for (var i = 0; i < colCount; i++) {\n                var rowCount = this.rows.count;\n                for (var j = 0; j < rowCount; j++) {\n                    var tempWidth = this.rows.getRow(j).cells.getCell(i).width;\n                    var rowWidth = this.initialWidth > 0 ? Math.min(this.initialWidth, tempWidth) : tempWidth;\n                    cellWidth = Math.max(cellWidth, rowWidth);\n                    cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    if (this.columns.getColumn(i).isTreeColumn) {\n                        rowLevel = Math.max(rowLevel, this.rows.getRow(j).level);\n                    }\n                }\n                if (this.columns.getColumn(i).isTreeColumn) {\n                    widths.push(cellWidth + (rowLevel * 10));\n                }\n                else {\n                    widths.push(cellWidth);\n                }\n                // eslint-disable-next-line\n                totalWidth += cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0; i < this.columns.count; i++) {\n                if (this.columns.getColumn(i).width < 0) {\n                    this.columns.getColumn(i).width = widths[i];\n                }\n            }\n        }\n    };\n    PdfTreeGrid.prototype.calculateTreeGridSize = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__.SizeF(width, height);\n    };\n    PdfTreeGrid.prototype.drawGrid = function (page, x, y, format) {\n        this.initialWidth = page.graphics.clientSize.width;\n        var layout = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__.RectangleF(0, 0, page.getClientSize().height, 0);\n        return this.draw(page, layout, format);\n    };\n    PdfTreeGrid.prototype.layout = function (param) {\n        if (this.rows.count !== 0) {\n            var style = (this.rows.getRow(0).cells.count !== 0) ? this.rows.getRow(0).cells.getCell(0).style : null;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(style) && style.borders.left.width !== 1) {\n                var x = style.borders.left.width / 2;\n                var y = style.borders.top.width / 2;\n                if (param.bounds.x === _pdf_base_index__WEBPACK_IMPORTED_MODULE_1__.PdfBorders.default.right.width / 2 &&\n                    param.bounds.y === _pdf_base_index__WEBPACK_IMPORTED_MODULE_1__.PdfBorders.default.right.width / 2) {\n                    var newBound = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__.RectangleF(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__.PointF(x, y), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__.SizeF(this.size.width, this.size.height));\n                    param.bounds = newBound;\n                }\n            }\n        }\n        //  this.setSpan();\n        this.layouter = new _pdf_base_index__WEBPACK_IMPORTED_MODULE_1__.PdfTreeGridLayouter(this);\n        var result = this.layouter.layoutInternal(param);\n        return result;\n    };\n    return PdfTreeGrid;\n}(_syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_2__.PdfLayoutElement));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-gantt/src/gantt/export/pdf-treegrid.js?");

/***/ })

}]);