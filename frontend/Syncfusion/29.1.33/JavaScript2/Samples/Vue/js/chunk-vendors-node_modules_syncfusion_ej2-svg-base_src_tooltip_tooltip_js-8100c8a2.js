"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-svg-base_src_tooltip_tooltip_js-8100c8a2"],{

/***/ "./node_modules/@syncfusion/ej2-svg-base/src/tooltip/tooltip.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-svg-base/src/tooltip/tooltip.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AreaBounds: () => (/* binding */ AreaBounds),\n/* harmony export */   TextStyle: () => (/* binding */ TextStyle),\n/* harmony export */   ToolLocation: () => (/* binding */ ToolLocation),\n/* harmony export */   Tooltip: () => (/* binding */ Tooltip),\n/* harmony export */   TooltipBorder: () => (/* binding */ TooltipBorder)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _svg_render_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../svg-render/index */ \"./node_modules/@syncfusion/ej2-svg-base/src/svg-render/index.js\");\n/* harmony import */ var _interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interface */ \"./node_modules/@syncfusion/ej2-svg-base/src/tooltip/interface.js\");\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helper */ \"./node_modules/@syncfusion/ej2-svg-base/src/tooltip/helper.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable security/detect-object-injection */\n/* eslint-disable no-useless-escape */\n/* eslint-disable security/detect-non-literal-regexp */\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable valid-jsdoc */\n\n\n\n\n\n\n\n/**\n * Configures the fonts in charts.\n *\n * @private\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], TextStyle.prototype, \"size\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Segoe UI')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Normal')\n    ], TextStyle.prototype, \"fontWeight\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Normal')\n    ], TextStyle.prototype, \"fontStyle\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1)\n    ], TextStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], TextStyle.prototype, \"headerTextSize\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], TextStyle.prototype, \"boldTextSize\", void 0);\n    return TextStyle;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the borders in the chart.\n *\n * @private\n */\nvar TooltipBorder = /** @class */ (function (_super) {\n    __extends(TooltipBorder, _super);\n    function TooltipBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], TooltipBorder.prototype, \"color\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1)\n    ], TooltipBorder.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], TooltipBorder.prototype, \"dashArray\", void 0);\n    return TooltipBorder;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the borders in the chart.\n *\n * @private\n */\nvar AreaBounds = /** @class */ (function (_super) {\n    __extends(AreaBounds, _super);\n    function AreaBounds() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], AreaBounds.prototype, \"x\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], AreaBounds.prototype, \"y\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], AreaBounds.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], AreaBounds.prototype, \"height\", void 0);\n    return AreaBounds;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the borders in the chart.\n *\n * @private\n */\nvar ToolLocation = /** @class */ (function (_super) {\n    __extends(ToolLocation, _super);\n    function ToolLocation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], ToolLocation.prototype, \"x\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], ToolLocation.prototype, \"y\", void 0);\n    return ToolLocation;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Represents the Tooltip control.\n * ```html\n * <div id=\"tooltip\"/>\n * <script>\n *   var tooltipObj = new Tooltip({ isResponsive : true });\n *   tooltipObj.appendTo(\"#tooltip\");\n * </script>\n * ```\n *\n * @private\n */\nvar Tooltip = /** @class */ (function (_super) {\n    __extends(Tooltip, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @hidden\n     */\n    function Tooltip(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     * Initialize the event handler.\n     *\n     * @private\n     */\n    Tooltip.prototype.preRender = function () {\n        this.allowServerDataBinding = false;\n        this.initPrivateVariable();\n        if (!this.isCanvas) {\n            this.removeSVG();\n        }\n        this.createTooltipElement();\n    };\n    Tooltip.prototype.initPrivateVariable = function () {\n        this.renderer = new _svg_render_index__WEBPACK_IMPORTED_MODULE_1__.SvgRenderer(this.element.id);\n        this.themeStyle = (0,_interface__WEBPACK_IMPORTED_MODULE_2__.getTooltipThemeColor)(this.theme);\n        this.formattedText = [];\n        this.padding = 5;\n        this.highlightPadding = 3;\n        this.areaMargin = 10;\n        this.isFirst = true;\n        this.markerPoint = [];\n    };\n    Tooltip.prototype.removeSVG = function () {\n        var svgObject = document.getElementById(this.element.id + '_svg');\n        var templateObject = document.getElementById(this.element.id + 'parent_template');\n        if (this.blazorTemplate) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.resetBlazorTemplate)(this.element.id + 'parent_template' + '_blazorTemplate');\n        }\n        if (svgObject && svgObject.parentNode) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(svgObject);\n        }\n        if (templateObject && templateObject.parentNode) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(templateObject);\n        }\n    };\n    /**\n     * To Initialize the control rendering.\n     */\n    Tooltip.prototype.render = function () {\n        this.fadeOuted = false;\n        if (!this.template) {\n            this.renderText(this.isFirst);\n            var argsData = {\n                cancel: false, name: 'tooltipRender', tooltip: this\n            };\n            this.trigger('tooltipRender', argsData);\n            var markerSide = this.renderTooltipElement(this.areaBounds, this.location);\n            this.drawMarker(markerSide.isBottom, markerSide.isRight, this.markerSize);\n        }\n        else {\n            this.updateTemplateFn();\n            this.createTemplate(this.areaBounds, this.location);\n        }\n        this.trigger('loaded', { tooltip: this });\n        var element = document.getElementById('chartmeasuretext');\n        if (element) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(element);\n        }\n        this.allowServerDataBinding = true;\n    };\n    Tooltip.prototype.createTooltipElement = function () {\n        this.textElements = [];\n        if (!this.template || this.shared) {\n            // SVG element for tooltip\n            if (this.enableRTL) {\n                this.element.setAttribute('dir', 'ltr');\n            }\n            var svgObject = this.renderer.createSvg({ id: this.element.id + '_svg' });\n            this.element.appendChild(svgObject);\n            // Group to hold text and path.\n            var groupElement = document.getElementById(this.element.id + '_group');\n            if (!groupElement) {\n                groupElement = this.renderer.createGroup({ id: this.element.id + '_group' });\n                groupElement.setAttribute('transform', 'translate(0,0)');\n            }\n            svgObject.appendChild(groupElement);\n            var pathElement = this.renderer.drawPath({\n                'id': this.element.id + '_path', 'stroke-width': ((this.theme === 'Fabric' || this.theme === 'Fluent' || this.theme === 'Fluent2' || this.theme === 'Fluent2HighContrast') && !this.border.width) ? 1 : this.border.width,\n                'fill': this.fill || this.themeStyle.tooltipFill, 'opacity': ((this.theme === 'TailwindDark' || this.theme === 'Tailwind' || this.theme === 'Tailwind3Dark' || this.theme === 'Tailwind3' || this.theme === 'Bootstrap5' || this.theme === 'Bootstrap5Dark' || this.theme.indexOf('Fluent2') > -1) && this.opacity === 0.75) ?\n                    1 : this.opacity,\n                'stroke': this.border.color || (this.theme === 'Fabric' || this.theme === 'Fluent' || this.theme === 'Fluent2' ? '#D2D0CE' : this.border.color)\n            });\n            groupElement.appendChild(pathElement);\n        }\n    };\n    Tooltip.prototype.drawMarker = function (isBottom, isRight, size) {\n        if (this.shapes.length <= 0) {\n            return null;\n        }\n        var shapeOption;\n        var count = 0;\n        var markerGroup = this.renderer.createGroup({ id: this.element.id + '_trackball_group' });\n        var groupElement = (0,_helper__WEBPACK_IMPORTED_MODULE_3__.getElement)(this.element.id + '_group');\n        if (!groupElement) {\n            return null;\n        }\n        var x = ((this.enableRTL) ? this.elementSize.width - (size / 2) :\n            (this.marginX * 2) + (size / 2)) + (isRight ? this.arrowPadding : 0);\n        for (var _i = 0, _a = this.shapes; _i < _a.length; _i++) {\n            var shape = _a[_i];\n            if (shape !== 'None') {\n                shapeOption = new _helper__WEBPACK_IMPORTED_MODULE_3__.PathOption(this.element.id + '_Trackball_' + count, this.palette[count], 1, '#cccccc', 1, null);\n                if (this.markerPoint[count]) {\n                    var padding = 0;\n                    if (this.header.indexOf('<br') > -1) {\n                        padding = this.header.split(/<br.*?>/g).length + count;\n                    }\n                    var tooltipContent = (this.formattedText && this.formattedText.length >= 2)\n                        ? this.getTooltipTextContent(this.formattedText[1]) + \", \" + this.getTooltipTextContent(this.formattedText[0])\n                        : '';\n                    markerGroup.appendChild((0,_helper__WEBPACK_IMPORTED_MODULE_3__.drawSymbol)(new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(x, this.markerPoint[count] - this.padding + (isBottom ? this.arrowPadding : padding)), shape, new _helper__WEBPACK_IMPORTED_MODULE_3__.Size(size, size), '', shapeOption, 'img', tooltipContent));\n                }\n                count++;\n            }\n        }\n        groupElement.appendChild(markerGroup);\n    };\n    Tooltip.prototype.renderTooltipElement = function (areaBounds, location) {\n        var tooltipDiv = (0,_helper__WEBPACK_IMPORTED_MODULE_3__.getElement)(this.element.id);\n        var arrowLocation = new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(0, 0);\n        var tipLocation = new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(0, 0);\n        var svgObject = (0,_helper__WEBPACK_IMPORTED_MODULE_3__.getElement)(this.element.id + '_svg');\n        var groupElement = (0,_helper__WEBPACK_IMPORTED_MODULE_3__.getElement)(this.element.id + '_group');\n        var pathElement = (0,_helper__WEBPACK_IMPORTED_MODULE_3__.getElement)(this.element.id + '_path');\n        var rect;\n        var isTop = false;\n        var isLeft = false;\n        var isBottom = false;\n        var x = 0;\n        var y = 0;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(groupElement)) {\n            if (this.header !== '' && this.showHeaderLine) {\n                this.elementSize.height += this.marginY;\n            }\n            if (this.isFixed) {\n                var width = this.elementSize.width + (2 * this.marginX);\n                var height = this.elementSize.height + (2 * this.marginY);\n                rect = new _helper__WEBPACK_IMPORTED_MODULE_3__.Rect(location.x, location.y, width, height);\n            }\n            else if (this.content.length > 1) {\n                rect = this.sharedTooltipLocation(areaBounds, this.location.x, this.location.y);\n                isTop = true;\n            }\n            else {\n                rect = this.tooltipLocation(areaBounds, location, arrowLocation, tipLocation);\n                if (!this.inverted) {\n                    isTop = (rect.y < (location.y + this.clipBounds.y));\n                    isBottom = !isTop;\n                    y = (isTop ? 0 : this.arrowPadding);\n                }\n                else {\n                    isLeft = (rect.x < (location.x + this.clipBounds.x));\n                    x = (isLeft ? 0 : this.arrowPadding);\n                    if (this.allowHighlight) {\n                        rect.x += isLeft ? this.highlightPadding : -(2 * this.highlightPadding);\n                    }\n                }\n            }\n            if (this.header !== '' && this.showHeaderLine) {\n                var wrapPadding = 2;\n                var padding = 0;\n                var wrapHeader = this.isWrap ? this.wrappedText : this.header;\n                if (this.isWrap && typeof (wrapHeader) === 'string' && (wrapHeader.indexOf('<') > -1 || wrapHeader.indexOf('>') > -1)) {\n                    var textArray = wrapHeader.split('<br>');\n                    wrapPadding = textArray.length;\n                }\n                if (this.header.indexOf('<br') > -1) {\n                    padding = 5 * (this.header.split(/<br.*?>/g).length - 1);\n                }\n                var key = 'properties';\n                var font = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.textStyle, null, true)[key];\n                var headerSize = (0,_helper__WEBPACK_IMPORTED_MODULE_3__.measureText)(this.isWrap ? this.wrappedText : this.header, font, this.themeStyle.textStyle).height\n                    + (this.marginY * wrapPadding) + (isBottom ? this.arrowPadding : 0) + (this.isWrap ? 5 : padding); //header padding;\n                var xLength = (this.marginX * 3) + (!isLeft && !isTop && !isBottom ? this.arrowPadding : 0);\n                var direction = 'M ' + xLength + ' ' + headerSize +\n                    'L ' + (rect.width + (!isLeft && !isTop && !isBottom ? this.arrowPadding : 0) - (this.marginX * 2)) +\n                    ' ' + headerSize;\n                var pathElement_1 = this.renderer.drawPath({\n                    'id': this.element.id + '_header_path', 'stroke-width': 1,\n                    'fill': null, 'opacity': this.theme === 'Material3' || this.theme === 'Material3Dark' ? 0.2 : 0.8, 'stroke': this.themeStyle.tooltipHeaderLine, 'd': direction\n                });\n                groupElement.appendChild(pathElement_1);\n            }\n            var start = this.border.width / 2;\n            var pointRect = new _helper__WEBPACK_IMPORTED_MODULE_3__.Rect(start + x, start + y, rect.width - start, rect.height - start);\n            groupElement.setAttribute('opacity', '1');\n            if (this.enableAnimation && !this.isFirst && !this.crosshair) {\n                this.animateTooltipDiv(tooltipDiv, rect);\n            }\n            else {\n                this.updateDiv(tooltipDiv, rect.x, rect.y);\n            }\n            // eslint-disable-next-line no-extra-boolean-cast\n            svgObject.setAttribute('height', (rect.height + this.border.width + (!((!this.inverted)) ? 0 : this.arrowPadding) + 5).toString());\n            svgObject.setAttribute('width', (rect.width + this.border.width + (((!this.inverted)) ? 0 : this.arrowPadding) + 5).toString());\n            svgObject.setAttribute('opacity', '1');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.tooltipPlacement)) {\n                isTop = this.tooltipPlacement.indexOf('Top') > -1;\n                isBottom = this.tooltipPlacement.indexOf('Bottom') > -1;\n                isLeft = this.tooltipPlacement.indexOf('Left') > -1;\n            }\n            pathElement.setAttribute('d', (0,_helper__WEBPACK_IMPORTED_MODULE_3__.findDirection)(this.rx, this.ry, pointRect, arrowLocation, this.arrowPadding, isTop, isBottom, isLeft, tipLocation.x, tipLocation.y, this.controlName));\n            if ((this.enableShadow && this.theme !== 'Bootstrap4') || this.theme.indexOf('Fluent2') > -1) {\n                // To fix next chart initial tooltip opacity issue in tab control\n                var shadowId = this.element.id + '_shadow';\n                if (this.theme === 'Tailwind' || this.theme === 'TailwindDark' || this.theme === 'Tailwind3' || this.theme === 'Tailwind3Dark'\n                    || this.theme === 'Bootstrap5' || this.theme === 'Bootstrap5Dark') {\n                    pathElement.setAttribute('box-shadow', '0px 1px 2px rgba(0, 0, 0, 0.06), 0px 1px 3px rgba(0, 0, 0, 0.1)');\n                }\n                else {\n                    pathElement.setAttribute('filter', _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isIE ? '' : 'url(#' + shadowId + ')');\n                }\n                var shadow = '<filter id=\"' + shadowId + '\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/>';\n                if (this.theme.indexOf('Fluent2') > -1) {\n                    shadow += '<feOffset dx=\"-1\" dy=\"3.6\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"0.2\"/>';\n                }\n                else {\n                    shadow += '<feOffset dx=\"3\" dy=\"3\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"0.5\"/>';\n                }\n                shadow += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\n                var defElement = this.renderer.createDefs();\n                defElement.setAttribute('id', this.element.id + 'SVG_tooltip_definition');\n                groupElement.appendChild(defElement);\n                defElement.innerHTML = shadow;\n            }\n            var borderColor = ((this.theme === 'Fabric' || this.theme === 'Fluent' || this.theme === 'Fluent2') && !this.border.color) ? '#D2D0CE' : this.theme === 'Fluent2HighContrast' ? '#FFFFFF' : this.border.color;\n            pathElement.setAttribute('stroke', borderColor);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.border.dashArray)) {\n                pathElement.setAttribute('stroke-dasharray', this.border.dashArray);\n            }\n            this.changeText(new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(x, y), isBottom, !isLeft && !isTop && !isBottom);\n            if (this.revert) {\n                this.inverted = !this.inverted;\n                this.revert = false;\n            }\n        }\n        return new _helper__WEBPACK_IMPORTED_MODULE_3__.Side(isBottom, !isLeft && !isTop && !isBottom);\n    };\n    Tooltip.prototype.changeText = function (point, isBottom, isRight) {\n        var element = document.getElementById(this.element.id + '_text');\n        if (isBottom) {\n            element.setAttribute('transform', 'translate(0,' + this.arrowPadding + ')');\n        }\n        if (isRight) {\n            element.setAttribute('transform', 'translate(' + this.arrowPadding + ' 0)');\n        }\n    };\n    Tooltip.prototype.findFormattedText = function () {\n        this.formattedText = [];\n        if (this.header.replace(/<b>/g, '').replace(/<\\/b>/g, '').trim() !== '') {\n            this.formattedText = this.formattedText.concat(this.header);\n        }\n        this.formattedText = this.formattedText.concat(this.content);\n    };\n    // tslint:disable-next-line:max-func-body-length\n    Tooltip.prototype.renderText = function (isRender) {\n        var height = 0;\n        var width = 0; // Padding for text;\n        var subWidth = 0;\n        var lines;\n        var key = 'properties';\n        var font = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.textStyle, null, true)[key];\n        var groupElement = (0,_helper__WEBPACK_IMPORTED_MODULE_3__.getElement)(this.element.id + '_group');\n        var tspanElement;\n        var textCollection;\n        var tspanStyle = '';\n        var line;\n        var tspanOption;\n        this.findFormattedText();\n        this.isWrap = false;\n        var isRtlEnabled = document.body.getAttribute('dir') === 'rtl';\n        var anchor = isRtlEnabled && !this.enableRTL ? 'end' : 'start';\n        this.leftSpace = this.areaBounds.x + this.location.x;\n        this.rightSpace = (this.areaBounds.x + this.areaBounds.width) - this.leftSpace;\n        var headerContent = this.header.replace(/<b>/g, '').replace(/<\\/b>/g, '').trim();\n        var isBoldTag = this.header.indexOf('<b>') > -1 && this.header.indexOf('</b>') > -1;\n        var headerWidth = (0,_helper__WEBPACK_IMPORTED_MODULE_3__.measureText)(this.formattedText[0], font, this.themeStyle.textStyle).width\n            + (2 * this.marginX) + this.arrowPadding;\n        var isLeftSpace = (this.location.x - headerWidth) < this.location.x;\n        var isRightSpace = (this.areaBounds.x + this.areaBounds.width) < (this.location.x + headerWidth);\n        var header;\n        var headerSpace = (headerContent !== '' && this.showHeaderLine) ? this.marginY : 0;\n        var isRow = true;\n        var isColumn = true;\n        this.markerPoint = [];\n        var markerSize = (this.shapes.length > 0) ? 10 : 0;\n        var markerPadding = (this.shapes.length > 0) ? 5 : 0;\n        var spaceWidth = 4;\n        var subStringLength;\n        var fontSize = '12px';\n        var fontWeight = '400';\n        var labelColor = this.themeStyle.tooltipLightLabel;\n        var dy = (22 / parseFloat(fontSize)) * (parseFloat(font.size || this.themeStyle.textStyle.size));\n        var contentWidth = [];\n        var textHeight = 0;\n        if (!isRender || this.isCanvas) {\n            (0,_helper__WEBPACK_IMPORTED_MODULE_3__.removeElement)(this.element.id + '_text');\n            (0,_helper__WEBPACK_IMPORTED_MODULE_3__.removeElement)(this.element.id + '_header_path');\n            (0,_helper__WEBPACK_IMPORTED_MODULE_3__.removeElement)(this.element.id + '_trackball_group');\n            (0,_helper__WEBPACK_IMPORTED_MODULE_3__.removeElement)(this.element.id + 'SVG_tooltip_definition');\n        }\n        // Condition to resolve the text size issue only in chart.\n        if (this.controlName === 'Chart' && parseFloat(fontSize) < parseFloat(font.size || this.themeStyle.textStyle.headerTextSize)) {\n            textHeight = (parseFloat(font.size || this.themeStyle.textStyle.size) - parseFloat(fontSize));\n        }\n        var options = new _helper__WEBPACK_IMPORTED_MODULE_3__.TextOption(this.element.id + '_text', this.marginX * 2, (textHeight + this.marginY * 2 + this.padding * 2 + (this.marginY === 2 ? this.controlName === 'RangeNavigator' ? 5 : 3 : 0)), anchor, '');\n        var parentElement = (0,_helper__WEBPACK_IMPORTED_MODULE_3__.textElement)(options, font, font.color || this.themeStyle.tooltipBoldLabel, groupElement, this.themeStyle.textStyle);\n        var withoutHeader = this.formattedText.length === 1 && this.formattedText[0].indexOf(' : <b>') > -1;\n        var isHeader = this.header !== '';\n        var size = isHeader && isBoldTag ? 16 : 13;\n        for (var k = 0, pointsLength = this.formattedText.length; k < pointsLength; k++) {\n            textCollection = this.formattedText[k].replace(/<(b|strong)>/g, '<b>')\n                .replace(/<\\/(b|strong)>/g, '</b>')\n                .split(/<br.*?>/g);\n            if (this.isTextWrap && this.header !== this.formattedText[k] && this.formattedText[k].indexOf('<br') === -1) {\n                subStringLength = Math.round(this.leftSpace > this.rightSpace ? (this.leftSpace / size) : (this.rightSpace / size));\n                textCollection = this.formattedText[k].match(new RegExp('.{1,' + subStringLength + '}', 'g'));\n            }\n            if (k === 0 && !withoutHeader && this.isTextWrap &&\n                (this.leftSpace < headerWidth || isLeftSpace) &&\n                (this.rightSpace < headerWidth || isRightSpace)) {\n                subStringLength = Math.round(this.leftSpace > this.rightSpace ? (this.leftSpace / size) : (this.rightSpace / size));\n                header = headerContent !== '' ? headerContent : this.formattedText[k];\n                textCollection = header.match(new RegExp('.{1,' + subStringLength + '}', 'g'));\n                this.wrappedText = isBoldTag ? '<b>' + textCollection.join('<br>') + '</b>' : textCollection.join('<br>');\n                this.isWrap = textCollection.length > 1;\n            }\n            if (textCollection[0] === '') {\n                continue;\n            }\n            if ((k !== 0) || (headerContent === '')) {\n                this.markerPoint.push(((headerContent !== '' && this.showHeaderLine) ? (this.marginY) : 0) + options.y + height - (textHeight !== 0 ? ((textHeight / this.markerSize) * (parseFloat(font.size || this.themeStyle.textStyle.headerTextSize) / this.markerSize)) : 0));\n            }\n            for (var i = 0, len = textCollection.length; i < len; i++) { // string value of unicode for LTR is \\u200E\n                lines = textCollection[i].replace(/<b>/g, '<br><b>').replace(/<\\/b>/g, '</b><br>').replace(/:/g, (this.enableRTL) ? '<br>\\u200E: <br>' : '<br>\\u200E:<br>')\n                    .split('<br>');\n                if (this.enableRTL && lines.length > 0 && textCollection[i].match(/:/g)) {\n                    lines[0] = lines[0].trim();\n                    lines.reverse();\n                }\n                subWidth = 0;\n                isColumn = true;\n                height += dy;\n                for (var j = 0, len_1 = lines.length; j < len_1; j++) {\n                    line = lines[j];\n                    if (this.enableRTL && line !== '' && this.isRTLText(line)) {\n                        line = line.concat('\\u200E');\n                    }\n                    if (!/\\S/.test(line) && line !== '') {\n                        line = ' '; //to trim multiple white spaces to single white space\n                    }\n                    if ((!isColumn && line === ' ') || (line.replace(/<b>/g, '').replace(/<\\/b>/g, '').trim() !== '')) {\n                        subWidth += line !== ' ' ? spaceWidth : 0;\n                        if (isColumn && !isRow) {\n                            if (this.header.indexOf('<br') > -1 && k !== 0) {\n                                headerSpace += this.header.split(/<br.*?>/g).length;\n                            }\n                            tspanOption = {\n                                x: (this.marginX * 2) + (markerSize + markerPadding),\n                                dy: dy + ((isColumn) ? headerSpace : 0), fill: ''\n                            };\n                            headerSpace = null;\n                        }\n                        else {\n                            if (isRow && isColumn) {\n                                tspanOption = {\n                                    x: (headerContent === '') ? ((this.marginX * 2) + (markerSize + markerPadding))\n                                        : (this.marginX * 2) + (this.isWrap ? (markerSize + markerPadding) : 0)\n                                };\n                            }\n                            else {\n                                tspanOption = {};\n                            }\n                        }\n                        isColumn = false;\n                        tspanElement = this.renderer.createTSpan(tspanOption, '');\n                        parentElement.appendChild(tspanElement);\n                        if (line.indexOf('<b>') > -1 || ((isBoldTag && j === 0 && k === 0) && (isHeader || this.isWrap))) {\n                            fontWeight = '600';\n                            labelColor = this.themeStyle.tooltipBoldLabel;\n                            tspanStyle = 'font-weight:' + fontWeight;\n                            font.fontWeight = fontWeight;\n                            (tspanElement).setAttribute('fill', this.textStyle.color || labelColor);\n                        }\n                        else {\n                            tspanStyle = fontWeight === '600' ? 'font-weight:' + fontWeight : '';\n                            font.fontWeight = fontWeight;\n                            (tspanElement).setAttribute('fill', this.textStyle.color || labelColor);\n                        }\n                        if (line.indexOf('</b>') > -1 || ((isBoldTag && j === len_1 - 1 && k === 0) && (isHeader || this.isWrap))) {\n                            fontWeight = 'Normal';\n                            labelColor = this.themeStyle.tooltipLightLabel;\n                        }\n                        // eslint-disable-next-line no-useless-escape\n                        if (tspanStyle !== '') {\n                            tspanElement.style.fontWeight = tspanStyle.split('font-weight:')[1];\n                            tspanElement.style.color = tspanElement.getAttribute('fill');\n                        }\n                        // 'inherit' will apply css style from parent element.\n                        tspanElement.style.fontFamily = 'inherit';\n                        tspanElement.style.fontStyle = 'inherit';\n                        tspanElement.style.fontSize = (this.header === this.formattedText[k]) ? font.size || this.themeStyle.textStyle.headerTextSize : (line.indexOf('<b>') > -1 || line.indexOf('</b>') > -1) ? font.size || this.themeStyle.textStyle.boldTextSize : font.size || this.themeStyle.textStyle.size;\n                        tspanElement.style.fontWeight = (this.header === this.formattedText[k] && (this.header.indexOf('<b>') === -1 || this.header.indexOf('</b>') === -1)) ? (this.textStyle.fontWeight || (this.theme.indexOf('Tailwind3') > -1 ? '500' : '600')) : line.indexOf('<b>') > -1 || line.indexOf('</b>') > -1 ? (this.theme.indexOf('Bootstrap5') > -1) ? (this.textStyle.fontWeight || '600') : 'bold' : ((line.indexOf('<b>') === -1 || line.indexOf('</b>') === -1) && (this.theme.indexOf('Bootstrap5') > -1 || this.theme.indexOf('Tailwind3') > -1)) ? this.textStyle.fontWeight || (this.theme.indexOf('Tailwind3') > -1 ? '500' : '600') : (this.textStyle.fontWeight || font.fontWeight);\n                        var textFont = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.textStyle, null, true)[key];\n                        textFont.fontWeight = tspanElement.style.fontWeight;\n                        textFont.size = tspanElement.style.fontSize;\n                        isRow = false;\n                        (tspanElement).textContent = line = this.getTooltipTextContent(line);\n                        subWidth += (0,_helper__WEBPACK_IMPORTED_MODULE_3__.measureText)(line, textFont, this.themeStyle.textStyle).width;\n                    }\n                }\n                subWidth -= spaceWidth;\n                width = Math.max(width, subWidth);\n                contentWidth.push(subWidth);\n            }\n        }\n        this.elementSize = new _helper__WEBPACK_IMPORTED_MODULE_3__.Size(width + (width > 0 ? (2 * this.marginX) : 0), height);\n        this.elementSize.width += (markerSize + markerPadding); // marker size + marker Spacing\n        var element = (parentElement.childNodes[0]);\n        if (headerContent !== '' && element && !this.isWrap) {\n            font.fontWeight = '600';\n            var width_1 = (this.elementSize.width + (2 * this.padding)) / 2 - (0,_helper__WEBPACK_IMPORTED_MODULE_3__.measureText)(headerContent, font, this.themeStyle.textStyle, true).width\n                / 2;\n            element.setAttribute('x', width_1.toString());\n        }\n        this.renderContentRTL(parentElement, isHeader, markerSize + markerPadding, contentWidth);\n    };\n    Tooltip.prototype.renderContentRTL = function (textElement, isHeader, markerSize, contentWidth) {\n        if (this.enableRTL) {\n            var tspanElement = void 0;\n            var contentWidthIndex = isHeader ? 1 : 0;\n            for (var i = 0; i < textElement.childNodes.length; i++) {\n                tspanElement = (textElement.childNodes[i]);\n                if ((!isHeader || i > 0) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tspanElement.getAttribute('x'))) {\n                    tspanElement.setAttribute('x', (this.elementSize.width - (markerSize + contentWidth[contentWidthIndex])).toString());\n                    contentWidthIndex++;\n                }\n            }\n        }\n    };\n    Tooltip.prototype.getTooltipTextContent = function (tooltipText) {\n        var characterCollection = tooltipText.match(/<[a-zA-Z\\/](.|\\n)*?>/g);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(characterCollection)) {\n            return tooltipText;\n        }\n        var isRtlText = this.isRTLText(tooltipText);\n        for (var i = 0; i < characterCollection.length; i++) {\n            if (this.isValidHTMLElement(characterCollection[i].replace('<', '').replace('/', '').replace('>', '').trim())) {\n                tooltipText = tooltipText.replace(characterCollection[i], isRtlText ? '\\u200E' : '');\n            }\n        }\n        return tooltipText;\n    };\n    Tooltip.prototype.isValidHTMLElement = function (element) {\n        return document.createElement(element).toString() !== '[object HTMLUnknownElement]';\n    };\n    Tooltip.prototype.isRTLText = function (tooltipContent) {\n        return /[\\u0590-\\u07FF\\u200F\\u202B\\u202E\\uFB1D-\\uFDFD\\uFE70-\\uFEFC]/.test(tooltipContent);\n    };\n    Tooltip.prototype.createTemplate = function (areaBounds, location) {\n        var argsData = { cancel: false, name: 'tooltipRender', tooltip: this };\n        this.trigger('tooltipRender', argsData);\n        var parent = document.getElementById(this.element.id);\n        if (this.isCanvas) {\n            this.removeSVG();\n        }\n        var firstElement = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent) ? parent.firstElementChild : null;\n        if (firstElement) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(firstElement);\n        }\n        if (!argsData.cancel) {\n            var elem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: this.element.id + 'parent_template' });\n            var templateElement = void 0;\n            if (this.controlName === 'Chart' && this.shared) {\n                for (var i = 0; i < this.data.length; i++) {\n                    var sharedTemplateElement = this.templateFn(this.data[i], this.controlInstance, elem.id, elem.id + '_blazorTemplate', '');\n                    if (i === 0) {\n                        templateElement = sharedTemplateElement;\n                    }\n                    else {\n                        if (sharedTemplateElement.length > 1) {\n                            templateElement[i].outerHTML = sharedTemplateElement[i].outerHTML || sharedTemplateElement[i].textContent;\n                        }\n                        else {\n                            templateElement[templateElement.length - 1].outerHTML += sharedTemplateElement[0].outerHTML;\n                        }\n                    }\n                }\n            }\n            else {\n                templateElement = this.templateFn(this.data, this.controlInstance, elem.id, elem.id + '_blazorTemplate', '');\n            }\n            while (templateElement && templateElement.length > 0) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() || templateElement.length === 1) {\n                    elem.appendChild(templateElement[0]);\n                    templateElement = null;\n                }\n                else {\n                    elem.appendChild(templateElement[0]);\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent)) {\n                parent.appendChild(elem);\n            }\n            var element = this.isCanvas ? elem : this.element;\n            var rect = element.getBoundingClientRect();\n            this.padding = 0;\n            this.elementSize = new _helper__WEBPACK_IMPORTED_MODULE_3__.Size(rect.width, rect.height);\n            var tooltipRect = this.shared ? this.sharedTooltipLocation(areaBounds, this.location.x, this.location.y)\n                : this.tooltipLocation(areaBounds, location, new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(0, 0), new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(0, 0));\n            if (this.enableAnimation && !this.isFirst && !this.crosshair) {\n                this.animateTooltipDiv(this.element, tooltipRect);\n            }\n            else {\n                this.updateDiv(element, tooltipRect.x, tooltipRect.y);\n            }\n            if (this.blazorTemplate) {\n                //Customer issue - F149037  Call back function to handle the blazor tooltip alignment issues\n                var tooltipRendered = function () {\n                    var rect1 = (0,_helper__WEBPACK_IMPORTED_MODULE_3__.getElement)(thisObject_1.element.id).getBoundingClientRect();\n                    thisObject_1.elementSize = new _helper__WEBPACK_IMPORTED_MODULE_3__.Size(rect1.width, rect1.height);\n                    var tooltipRect1 = thisObject_1.tooltipLocation(areaBounds, location, new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(0, 0), new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(0, 0));\n                    thisObject_1.updateDiv((0,_helper__WEBPACK_IMPORTED_MODULE_3__.getElement)(thisObject_1.element.id), tooltipRect1.x, tooltipRect1.y);\n                };\n                // eslint-disable-next-line @typescript-eslint/no-this-alias\n                var thisObject_1 = this;\n                tooltipRendered.bind(thisObject_1, areaBounds, location);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.updateBlazorTemplate)(this.element.id + 'parent_template' + '_blazorTemplate', this.blazorTemplate.name, this.blazorTemplate.parent, undefined, tooltipRendered);\n            }\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)((0,_helper__WEBPACK_IMPORTED_MODULE_3__.getElement)(this.element.id + '_tooltip'));\n        }\n    };\n    Tooltip.prototype.sharedTooltipLocation = function (bounds, x, y) {\n        var width = this.elementSize.width + (2 * this.marginX);\n        var height = this.elementSize.height + (2 * this.marginY);\n        var tooltipRect = new _helper__WEBPACK_IMPORTED_MODULE_3__.Rect(x + 2 * this.padding, y - height - this.padding, width, height);\n        if (tooltipRect.y < bounds.y) {\n            tooltipRect.y += (tooltipRect.height + 2 * this.padding);\n        }\n        if (tooltipRect.y + tooltipRect.height > bounds.y + bounds.height) {\n            tooltipRect.y = Math.max((bounds.y + bounds.height) - (tooltipRect.height + 2 * this.padding), bounds.y);\n        }\n        if (tooltipRect.x + tooltipRect.width > bounds.x + bounds.width) {\n            tooltipRect.x = (bounds.x + this.location.x) - (tooltipRect.width + 4 * this.padding);\n        }\n        if (tooltipRect.x < bounds.x) {\n            tooltipRect.x = bounds.x;\n        }\n        return tooltipRect;\n    };\n    /** @private */\n    Tooltip.prototype.getCurrentPosition = function (bounds, symbolLocation, arrowLocation, tipLocation) {\n        var position = this.tooltipPlacement;\n        var clipX = this.clipBounds.x;\n        var clipY = this.clipBounds.y;\n        var markerHeight = this.offset;\n        var width = this.elementSize.width + (2 * this.marginX);\n        var height = this.elementSize.height + (2 * this.marginY);\n        var location = new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(symbolLocation.x, symbolLocation.y);\n        if (position === 'Top' || position === 'Bottom') {\n            location = new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(location.x + clipX - this.elementSize.width / 2 - this.padding, location.y + clipY - this.elementSize.height - (2 * this.padding) - this.arrowPadding - markerHeight);\n            arrowLocation.x = tipLocation.x = width / 2;\n            if (position === 'Bottom') {\n                location.y = symbolLocation.y + clipY + markerHeight;\n            }\n            if (bounds.x + bounds.width < location.x + width) {\n                location.x = (bounds.width > width) ? ((bounds.x + bounds.width) - width + 6) : bounds.x;\n                arrowLocation.x = tipLocation.x = (bounds.width > width) ? (bounds.x + symbolLocation.x - location.x) : symbolLocation.x;\n            }\n            else if (bounds.x > location.x) {\n                location.x = bounds.x;\n                arrowLocation.x = tipLocation.x = symbolLocation.x;\n            }\n        }\n        else {\n            location = new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(location.x + clipX + markerHeight, location.y + clipY - this.elementSize.height / 2 - (this.padding));\n            arrowLocation.y = tipLocation.y = height / 2;\n            if (position === 'Left') {\n                location.x = symbolLocation.x + clipX - markerHeight - (width + this.arrowPadding);\n            }\n            if (bounds.y + bounds.height < location.y + height) {\n                location.y = (bounds.height > height) ? ((bounds.y + bounds.height) - height + 6) : bounds.y;\n                arrowLocation.y = tipLocation.y = (bounds.height > height) ? (bounds.y + symbolLocation.y - location.y) : symbolLocation.y;\n            }\n            else if (bounds.y > location.y) {\n                location.y = bounds.y;\n                arrowLocation.y = tipLocation.y = symbolLocation.y;\n            }\n        }\n        return new _helper__WEBPACK_IMPORTED_MODULE_3__.Rect(location.x, location.y, width, height);\n    };\n    // tslint:disable-next-line:max-func-body-length\n    /** @private */\n    Tooltip.prototype.tooltipLocation = function (bounds, symbolLocation, arrowLocation, tipLocation) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.tooltipPlacement)) {\n            var tooltipRect = this.getCurrentPosition(bounds, symbolLocation, arrowLocation, tipLocation);\n            return tooltipRect;\n        }\n        var location = new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(symbolLocation.x, symbolLocation.y);\n        var width = this.elementSize.width + (2 * this.marginX);\n        var height = this.elementSize.height + (2 * this.marginY);\n        var markerHeight = this.offset;\n        var clipX = this.clipBounds.x;\n        var clipY = this.clipBounds.y;\n        var boundsX = bounds.x;\n        var boundsY = bounds.y;\n        this.outOfBounds = false;\n        if (!this.inverted) {\n            location = new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(location.x + clipX - this.elementSize.width / 2 - this.padding, location.y + clipY - this.elementSize.height - (2 * (this.allowHighlight ? this.highlightPadding : this.padding)) -\n                this.arrowPadding - markerHeight);\n            arrowLocation.x = tipLocation.x = width / 2;\n            if ((location.y < boundsY || (this.isNegative)) && !(this.controlName === 'Progressbar')) {\n                location.y = (symbolLocation.y < 0 ? 0 : symbolLocation.y) + clipY + markerHeight;\n            }\n            if (location.y + height + this.arrowPadding > boundsY + bounds.height) {\n                location.y = Math.min(symbolLocation.y, boundsY + bounds.height) + clipY\n                    - this.elementSize.height - (2 * this.padding) - this.arrowPadding - markerHeight;\n            }\n            if (((location.x + width > boundsX + bounds.width) && location.y < boundsY || (this.isNegative)) && !(this.controlName === 'Progressbar')) {\n                location.y = (symbolLocation.y < 0 ? 0 : symbolLocation.y) + clipY + markerHeight;\n            }\n            tipLocation.x = width / 2;\n            if (location.x < boundsX && !(this.controlName === 'Progressbar')) {\n                arrowLocation.x -= (boundsX - location.x);\n                tipLocation.x -= (boundsX - location.x);\n                location.x = boundsX;\n            }\n            if (location.x + width > boundsX + bounds.width && !(this.controlName === 'Progressbar')) {\n                arrowLocation.x += ((location.x + width) - (boundsX + bounds.width));\n                tipLocation.x += ((location.x + width) - (boundsX + bounds.width));\n                location.x -= ((location.x + width) - (boundsX + bounds.width));\n            }\n            if (location.x < boundsX && !(this.controlName === 'Progressbar')) {\n                arrowLocation.x -= (boundsX - location.x);\n                tipLocation.x -= (boundsX - location.x);\n                location.x = boundsX;\n            }\n            if (arrowLocation.x + this.arrowPadding > width - this.rx) {\n                arrowLocation.x = width - this.rx - this.arrowPadding;\n                tipLocation.x = width - this.rx - this.arrowPadding;\n            }\n            if (arrowLocation.x - this.arrowPadding < this.rx) {\n                arrowLocation.x = tipLocation.x = this.rx + this.arrowPadding;\n            }\n            if (this.controlName === 'Chart') {\n                if (((bounds.x + bounds.width) - (location.x + arrowLocation.x)) < this.areaMargin + this.arrowPadding ||\n                    (location.x + arrowLocation.x) < this.areaMargin + this.arrowPadding) {\n                    this.outOfBounds = true;\n                }\n                if (this.template && (location.y < 0)) {\n                    location.y = symbolLocation.y + clipY + markerHeight;\n                }\n                if (!(0,_helper__WEBPACK_IMPORTED_MODULE_3__.withInAreaBounds)(location.x, location.y, bounds) || this.outOfBounds) {\n                    this.inverted = !this.inverted;\n                    this.revert = true;\n                    location = new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(symbolLocation.x + markerHeight + clipX, symbolLocation.y + clipY - this.elementSize.height / 2 - (this.padding));\n                    tipLocation.x = arrowLocation.x = 0;\n                    tipLocation.y = arrowLocation.y = height / 2;\n                    if ((location.x + this.arrowPadding + width > boundsX + bounds.width) || (this.isNegative)) {\n                        location.x = (symbolLocation.x > boundsX + bounds.width ? bounds.width : symbolLocation.x)\n                            + clipX - markerHeight - (this.arrowPadding + width);\n                    }\n                    if (location.x < boundsX) {\n                        location.x = (symbolLocation.x < 0 ? 0 : symbolLocation.x) + markerHeight + clipX;\n                    }\n                    if (location.y <= boundsY) {\n                        tipLocation.y -= (boundsY - location.y);\n                        arrowLocation.y -= (boundsY - location.y);\n                        location.y = boundsY;\n                    }\n                    if (location.y + height >= bounds.height + boundsY) {\n                        arrowLocation.y += ((location.y + height) - (bounds.height + boundsY));\n                        tipLocation.y += ((location.y + height) - (bounds.height + boundsY));\n                        location.y -= ((location.y + height) - (bounds.height + boundsY));\n                    }\n                    if ((this.arrowPadding) + arrowLocation.y > height - this.ry) {\n                        arrowLocation.y = height - this.arrowPadding - this.ry;\n                        tipLocation.y = height;\n                    }\n                    if (arrowLocation.y - this.arrowPadding < this.ry) {\n                        arrowLocation.y = (this.arrowPadding) + this.ry;\n                        tipLocation.y = 0;\n                    }\n                }\n            }\n        }\n        else {\n            location = new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(location.x + clipX + markerHeight, location.y + clipY - this.elementSize.height / 2 - (this.padding));\n            arrowLocation.y = tipLocation.y = height / 2;\n            if ((location.x + width + this.arrowPadding > boundsX + bounds.width) || (this.isNegative)) {\n                location.x = (symbolLocation.x > bounds.width + bounds.x ? bounds.width : symbolLocation.x)\n                    + clipX - markerHeight - (width + this.arrowPadding);\n            }\n            if (location.x < boundsX) {\n                location.x = (symbolLocation.x < 0 ? 0 : symbolLocation.x) + clipX + markerHeight;\n            }\n            if ((location.x + width + this.arrowPadding > boundsX + bounds.width)) {\n                location.x = (symbolLocation.x > bounds.width + bounds.x ? bounds.width : symbolLocation.x)\n                    + clipX - markerHeight - (width + this.arrowPadding);\n            }\n            if (location.y <= boundsY) {\n                arrowLocation.y -= (boundsY - location.y);\n                tipLocation.y -= (boundsY - location.y);\n                location.y = boundsY;\n            }\n            if (location.y + height >= boundsY + bounds.height) {\n                arrowLocation.y += ((location.y + height) - (boundsY + bounds.height));\n                tipLocation.y += ((location.y + height) - (boundsY + bounds.height));\n                location.y -= ((location.y + height) - (boundsY + bounds.height));\n            }\n            if (arrowLocation.y + this.arrowPadding > height - this.ry) {\n                arrowLocation.y = height - this.ry - this.arrowPadding;\n                tipLocation.y = height;\n            }\n            if (arrowLocation.y - this.arrowPadding < this.ry) {\n                arrowLocation.y = tipLocation.y = this.ry + this.arrowPadding;\n            }\n            if (this.controlName === 'Chart') {\n                if ((location.y + arrowLocation.y) < this.areaMargin + this.arrowPadding ||\n                    ((bounds.y + bounds.height) - (location.y + arrowLocation.y)) < this.areaMargin + this.arrowPadding) {\n                    this.outOfBounds = true;\n                }\n                if (!(0,_helper__WEBPACK_IMPORTED_MODULE_3__.withInAreaBounds)(location.x, location.y, bounds) || this.outOfBounds) {\n                    this.inverted = !this.inverted;\n                    location = new _helper__WEBPACK_IMPORTED_MODULE_3__.TooltipLocation(symbolLocation.x + clipX - this.padding - this.elementSize.width / 2, symbolLocation.y + clipY - this.elementSize.height - (2 * this.padding) - markerHeight - this.arrowPadding);\n                    this.revert = true;\n                    tipLocation.x = arrowLocation.x = width / 2;\n                    tipLocation.y = arrowLocation.y = 0;\n                    if (location.y < boundsY || (this.isNegative)) {\n                        location.y = (symbolLocation.y < 0 ? 0 : symbolLocation.y) + markerHeight + clipY;\n                    }\n                    if (location.y + this.arrowPadding + height > boundsY + bounds.height) {\n                        location.y = Math.min(symbolLocation.y, boundsY + bounds.height) + clipY\n                            - this.elementSize.height - (2 * this.padding) - markerHeight - this.arrowPadding;\n                    }\n                    tipLocation.x = width / 2;\n                    if (location.x < boundsX) {\n                        tipLocation.x -= (boundsX - location.x);\n                        arrowLocation.x -= (boundsX - location.x);\n                        location.x = boundsX;\n                    }\n                    if (location.x + width > bounds.width + boundsX) {\n                        arrowLocation.x += ((location.x + width) - (bounds.width + boundsX));\n                        tipLocation.x += ((location.x + width) - (bounds.width + boundsX));\n                        location.x -= ((location.x + width) - (bounds.width + boundsX));\n                    }\n                    if ((this.arrowPadding) + arrowLocation.x > width - this.rx) {\n                        tipLocation.x = width - this.rx - (this.arrowPadding);\n                        arrowLocation.x = width - this.rx - (this.arrowPadding);\n                    }\n                    if (arrowLocation.x - (this.arrowPadding) < this.rx) {\n                        arrowLocation.x = tipLocation.x = this.rx + (this.arrowPadding);\n                    }\n                }\n            }\n        }\n        return new _helper__WEBPACK_IMPORTED_MODULE_3__.Rect(location.x, location.y, width, height);\n    };\n    Tooltip.prototype.animateTooltipDiv = function (tooltipDiv, rect) {\n        var _this = this;\n        var x = parseFloat(tooltipDiv.style.left);\n        var y = parseFloat(tooltipDiv.style.top);\n        var duration = (this.duration === 0 && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.animationMode === 'Enable') ? 300 : this.duration;\n        if ((this.controlName === 'Chart' && this.shared) && !this.enableRTL) {\n            var transformValues = this.element.style.transform.split(/[(),\\s]+/);\n            x = parseFloat(transformValues[1]);\n            y = parseFloat(transformValues[2]);\n            tooltipDiv.style.transition = 'transform ' + duration + 'ms ease';\n        }\n        var currenDiff;\n        new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation({}).animate(tooltipDiv, {\n            duration: duration,\n            progress: function (args) {\n                currenDiff = (args.timeStamp / args.duration);\n                tooltipDiv.style.animation = null;\n                if ((_this.controlName === 'Chart' && _this.shared) && !_this.enableRTL) {\n                    tooltipDiv.style.transform = 'translate(' + (x + (rect.x - x)) + 'px,' + (y + rect.y - y) + 'px)';\n                    tooltipDiv.style.left = '';\n                    tooltipDiv.style.top = '';\n                }\n                else if (_this.controlName === 'Chart' && _this.showNearestTooltip) {\n                    tooltipDiv.style.transition = 'left ' + args.duration + 'ms ease-out, top ' + args.duration + 'ms ease-out';\n                    tooltipDiv.style.left = rect.x + 'px';\n                    tooltipDiv.style.top = rect.y + 'px';\n                }\n                else {\n                    tooltipDiv.style.left = (x + currenDiff * (rect.x - x)) + 'px';\n                    tooltipDiv.style.top = (y + currenDiff * (rect.y - y)) + 'px';\n                    tooltipDiv.style.transform = _this.controlName === 'RangeNavigator' ? tooltipDiv.style.transform : '';\n                }\n            },\n            end: function (model) {\n                _this.updateDiv(tooltipDiv, rect.x, rect.y);\n                _this.trigger('animationComplete', { tooltip: _this });\n            }\n        });\n    };\n    Tooltip.prototype.updateDiv = function (tooltipDiv, x, y) {\n        if ((this.controlName === 'Chart' && this.shared && !this.crosshair) && !this.enableRTL) {\n            tooltipDiv.style.transform = 'translate(' + x + 'px,' + y + 'px)';\n            tooltipDiv.style.left = '';\n            tooltipDiv.style.top = '';\n        }\n        else {\n            tooltipDiv.style.left = x + 'px';\n            tooltipDiv.style.top = y + 'px';\n            tooltipDiv.style.transform = this.controlName === 'RangeNavigator' ? tooltipDiv.style.transform : '';\n        }\n    };\n    Tooltip.prototype.updateTemplateFn = function () {\n        if (this.template) {\n            try {\n                if (typeof this.template !== 'function' && document.querySelectorAll(this.template).length) {\n                    this.templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(document.querySelector(this.template).innerHTML.trim());\n                }\n                else {\n                    this.templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(this.template);\n                }\n            }\n            catch (e) {\n                this.templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(this.template);\n            }\n        }\n    };\n    /** @private */\n    Tooltip.prototype.fadeOut = function () {\n        var _this = this;\n        var tooltipElement = (this.isCanvas && !this.template) ? (0,_helper__WEBPACK_IMPORTED_MODULE_3__.getElement)(this.element.id + '_svg') :\n            (0,_helper__WEBPACK_IMPORTED_MODULE_3__.getElement)(this.element.id);\n        var tooltipDiv = (0,_helper__WEBPACK_IMPORTED_MODULE_3__.getElement)(this.element.id);\n        if (tooltipElement) {\n            var tooltipGroup_1 = tooltipElement.firstChild;\n            if (tooltipGroup_1.nodeType !== Node.ELEMENT_NODE) {\n                tooltipGroup_1 = tooltipElement.firstElementChild;\n            }\n            if (this.isCanvas && !this.template) {\n                tooltipGroup_1 = document.getElementById(this.element.id + '_group') ? document.getElementById(this.element.id + '_group') :\n                    tooltipGroup_1;\n            }\n            if (!tooltipGroup_1) {\n                return null;\n            }\n            var opacity_1 = parseFloat(tooltipGroup_1.getAttribute('opacity'));\n            opacity_1 = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(opacity_1) ? opacity_1 : 1;\n            new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation({}).animate(tooltipGroup_1, {\n                duration: 200,\n                progress: function (args) {\n                    //  tooltipGroup.removeAttribute('e-animate');\n                    _this.progressAnimation(tooltipGroup_1, opacity_1, (args.timeStamp / args.duration));\n                },\n                end: function () {\n                    _this.fadeOuted = true;\n                    _this.endAnimation(tooltipGroup_1);\n                    tooltipDiv.style.transition = '';\n                }\n            });\n        }\n    };\n    Tooltip.prototype.progressAnimation = function (tooltipGroup, opacity, timeStamp) {\n        tooltipGroup.style.animation = '';\n        tooltipGroup.setAttribute('opacity', (opacity - timeStamp).toString());\n    };\n    /*\n     * @hidden\n     */\n    Tooltip.prototype.endAnimation = function (tooltipGroup) {\n        tooltipGroup.setAttribute('opacity', '0');\n        if (this.template) {\n            tooltipGroup.style.display = 'none';\n        }\n        this.trigger('animationComplete', { tooltip: this });\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @private\n     */\n    Tooltip.prototype.getPersistData = function () {\n        var keyEntity = [];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Get component name\n     *\n     *  @private\n     */\n    Tooltip.prototype.getModuleName = function () {\n        return 'tooltip';\n    };\n    /**\n     * To destroy the accumulationcharts\n     *\n     * @private\n     */\n    Tooltip.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-tooltip');\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @returns {void}\n     * @private\n     */\n    Tooltip.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (this.blazorTemplate) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.resetBlazorTemplate)(this.element.id + 'parent_template' + '_blazorTemplate');\n        }\n        this.isFirst = false;\n        this.render();\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Tooltip.prototype, \"enable\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Tooltip.prototype, \"shared\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Tooltip.prototype, \"crosshair\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Tooltip.prototype, \"enableShadow\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Tooltip.prototype, \"fill\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Tooltip.prototype, \"header\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0.75)\n    ], Tooltip.prototype, \"opacity\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ size: '12px', fontWeight: null, color: null, fontStyle: 'Normal', fontFamily: null }, TextStyle)\n    ], Tooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Tooltip.prototype, \"template\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Tooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(300)\n    ], Tooltip.prototype, \"duration\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Tooltip.prototype, \"inverted\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Tooltip.prototype, \"isNegative\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ color: null, width: null }, TooltipBorder)\n    ], Tooltip.prototype, \"border\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])\n    ], Tooltip.prototype, \"content\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(10)\n    ], Tooltip.prototype, \"markerSize\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ x: 0, y: 0 }, ToolLocation)\n    ], Tooltip.prototype, \"clipBounds\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])\n    ], Tooltip.prototype, \"palette\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])\n    ], Tooltip.prototype, \"shapes\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ x: 0, y: 0 }, ToolLocation)\n    ], Tooltip.prototype, \"location\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], Tooltip.prototype, \"offset\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(4)\n    ], Tooltip.prototype, \"rx\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(4)\n    ], Tooltip.prototype, \"ry\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(5)\n    ], Tooltip.prototype, \"marginX\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(5)\n    ], Tooltip.prototype, \"marginY\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(7)\n    ], Tooltip.prototype, \"arrowPadding\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Tooltip.prototype, \"data\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Material')\n    ], Tooltip.prototype, \"theme\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ x: 0, y: 0, width: 0, height: 0 }, AreaBounds)\n    ], Tooltip.prototype, \"areaBounds\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Tooltip.prototype, \"availableSize\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Tooltip.prototype, \"blazorTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Tooltip.prototype, \"isCanvas\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Tooltip.prototype, \"isTextWrap\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Tooltip.prototype, \"isFixed\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Tooltip.prototype, \"tooltipPlacement\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Tooltip.prototype, \"controlInstance\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Tooltip.prototype, \"controlName\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Tooltip.prototype, \"showNearestTooltip\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Tooltip.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Tooltip.prototype, \"loaded\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Tooltip.prototype, \"animationComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Tooltip.prototype, \"enableRTL\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Tooltip.prototype, \"allowHighlight\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Tooltip.prototype, \"showHeaderLine\", void 0);\n    Tooltip = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], Tooltip);\n    return Tooltip;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-svg-base/src/tooltip/tooltip.js?");

/***/ })

}]);