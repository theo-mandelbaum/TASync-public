"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-grids_src_grid_renderer_virtual-content-renderer_js-ac6ca9-212f60c2"],{

/***/ "./node_modules/@syncfusion/ej2-grids/src/grid/renderer/virtual-content-renderer.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-grids/src/grid/renderer/virtual-content-renderer.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VirtualContentRenderer: () => (/* binding */ VirtualContentRenderer),\n/* harmony export */   VirtualElementHandler: () => (/* binding */ VirtualElementHandler),\n/* harmony export */   VirtualHeaderRenderer: () => (/* binding */ VirtualHeaderRenderer)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"./node_modules/@syncfusion/ej2-data/index.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/constant */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/enum */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n/* harmony import */ var _content_renderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./content-renderer */ \"./node_modules/@syncfusion/ej2-grids/src/grid/renderer/content-renderer.js\");\n/* harmony import */ var _header_renderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./header-renderer */ \"./node_modules/@syncfusion/ej2-grids/src/grid/renderer/header-renderer.js\");\n/* harmony import */ var _services_intersection_observer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../services/intersection-observer */ \"./node_modules/@syncfusion/ej2-grids/src/grid/services/intersection-observer.js\");\n/* harmony import */ var _services_virtual_row_model_generator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../services/virtual-row-model-generator */ \"./node_modules/@syncfusion/ej2-grids/src/grid/services/virtual-row-model-generator.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../base/util */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../base/string-literals */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * VirtualContentRenderer\n *\n * @hidden\n */\nvar VirtualContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualContentRenderer, _super);\n    function VirtualContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.prevHeight = 0;\n        /** @hidden */\n        _this.startIndex = 0;\n        _this.preStartIndex = 0;\n        _this.preventEvent = false;\n        _this.actions = ['filtering', 'searching', 'grouping', 'ungrouping'];\n        /** @hidden */\n        _this.offsets = {};\n        _this.tmpOffsets = {};\n        /** @hidden */\n        _this.virtualEle = new VirtualElementHandler();\n        _this.offsetKeys = [];\n        _this.isFocused = false;\n        _this.isSelection = false;\n        _this.isBottom = false;\n        _this.isBottomNotify = false;\n        _this.diff = 0;\n        _this.heightChange = false;\n        /** @hidden */\n        _this.isTop = false;\n        _this.empty = undefined;\n        _this.isCancel = false;\n        _this.requestTypes = ['beginEdit', 'cancel', 'delete', 'add', 'save', 'sorting'];\n        _this.isNormaledit = _this.parent.editSettings.mode === 'Normal';\n        /** @hidden */\n        _this.virtualData = {};\n        _this.virtualInfiniteData = {};\n        _this.emptyRowData = {};\n        _this.isContextMenuOpen = false;\n        _this.isSelectionScroll = false;\n        _this.validationCheck = false;\n        /** @hidden */\n        _this.firstCellFocus = false;\n        _this.prevPage = 0;\n        _this.prevCurrentInfo = {};\n        _this.locator = locator;\n        _this.eventListener('on');\n        _this.widthServices = locator.getService('widthService');\n        _this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.columnVisibilityChanged, _this.setVisible, _this);\n        _this.vgenerator = _this.generator;\n        return _this;\n    }\n    VirtualContentRenderer.prototype.renderTable = function () {\n        this.header = this.locator.getService('rendererFactory').getRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_3__.RenderType.Header);\n        _super.prototype.renderTable.call(this);\n        this.virtualEle.table = this.getTable();\n        this.virtualEle.content = this.content = this.getPanel().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_9__.content);\n        this.virtualEle.renderWrapper(this.parent.height);\n        this.virtualEle.renderPlaceHolder();\n        if (!(!this.parent.enableVirtualization && this.parent.enableColumnVirtualization)) {\n            this.virtualEle.wrapper.style.position = 'absolute';\n        }\n        var debounceEvent = (this.parent.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.DataManager && !this.parent.dataSource.dataSource.offline);\n        var opt = {\n            container: this.content, pageHeight: this.getBlockHeight() * 2, debounceEvent: debounceEvent,\n            axes: this.parent.enableColumnVirtualization ? ['X', 'Y'] : ['Y']\n        };\n        this.observer = new _services_intersection_observer__WEBPACK_IMPORTED_MODULE_6__.InterSectionObserver(this.virtualEle.wrapper, opt);\n    };\n    VirtualContentRenderer.prototype.renderEmpty = function (tbody) {\n        this.getTable().appendChild(tbody);\n        if (this.parent.frozenRows) {\n            this.parent.getHeaderContent().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_9__.tbody).innerHTML = '';\n        }\n        this.virtualEle.adjustTable(0, 0);\n    };\n    VirtualContentRenderer.prototype.getReorderedFrozenRows = function (args) {\n        var blockIndex = args.virtualInfo.blockIndexes;\n        var colsIndex = args.virtualInfo.columnIndexes;\n        var page = args.virtualInfo.page;\n        args.virtualInfo.blockIndexes = [1, 2];\n        args.virtualInfo.page = 1;\n        args.virtualInfo.columnIndexes = [];\n        var recordslength = this.parent.getCurrentViewRecords().length;\n        var firstRecords = this.parent.renderModule.data.dataManager.dataSource.json.slice(0, recordslength);\n        var virtualRows = this.vgenerator.generateRows(firstRecords, args);\n        args.virtualInfo.blockIndexes = blockIndex;\n        args.virtualInfo.columnIndexes = colsIndex;\n        args.virtualInfo.page = page;\n        return virtualRows.splice(0, this.parent.frozenRows);\n    };\n    VirtualContentRenderer.prototype.scrollListener = function (scrollArgs) {\n        if ((!this.parent.enableVirtualization && this.parent.enableColumnVirtualization && (scrollArgs.direction === 'up'\n            || scrollArgs.direction === 'down')) || this.isBottomNotify) {\n            return;\n        }\n        this.scrollAfterEdit();\n        if (this.parent.enablePersistence) {\n            this.parent.scrollPosition = scrollArgs.offset;\n        }\n        if (this.preventEvent || this.parent.isDestroyed) {\n            this.preventEvent = false;\n            return;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.activeElement)) {\n            this.isFocused = false;\n        }\n        else {\n            this.isFocused = this.content === (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(document.activeElement, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_9__.content) || this.content === document.activeElement;\n        }\n        if (this.parent.islazyloadRequest && scrollArgs.direction === 'down') {\n            this.parent.removeMaskRow();\n            this.parent.islazyloadRequest = false;\n            return;\n        }\n        var info = scrollArgs.sentinel;\n        var viewInfo = this.currentInfo = this.getInfoFromView(scrollArgs.direction, info, scrollArgs.offset);\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(this.parent)) {\n            if (viewInfo.blockIndexes && this.prevInfo.blockIndexes.toString() === viewInfo.blockIndexes.toString()) {\n                this.parent.removeMaskRow();\n                return;\n            }\n            else {\n                viewInfo.event = 'refresh-virtual-block';\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(viewInfo.offsets)) {\n                    viewInfo.offsets.top = this.content.scrollTop;\n                }\n                this.parent.pageSettings.currentPage = viewInfo.page;\n                if (this.parent.enableVirtualMaskRow) {\n                    this.parent.showMaskRow(info.axis);\n                    this.parent.addShimmerEffect();\n                }\n                if (this.parent.editSettings.showAddNewRow) {\n                    this.parent.closeEdit();\n                }\n                this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n                return;\n            }\n        }\n        if (this.prevInfo && ((info.axis === 'Y' && this.prevInfo.blockIndexes.toString() === viewInfo.blockIndexes.toString())\n            || ((info.axis === 'X' && this.prevInfo.columnIndexes.toString() === viewInfo.columnIndexes.toString())\n                || (this.parent.isFrozenGrid() && info.axis === 'X' && this.parent.getVisibleFrozenLeftCount() >= viewInfo.columnIndexes[0]\n                    && this.prevInfo.columnIndexes.toString().includes(viewInfo.columnIndexes.toString()))))) {\n            this.parent.removeMaskRow();\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isIE) {\n                this.parent.hideSpinner();\n            }\n            this.requestType = this.requestType === 'virtualscroll' ? this.empty : this.requestType;\n            if (info.axis === 'Y') {\n                this.restoreEdit();\n            }\n            if (this.parent.groupSettings.enableLazyLoading && this.prevInfo.blockIndexes[0] === 1 && viewInfo.blockIndexes[0] === 1 &&\n                scrollArgs.direction === 'up') {\n                this.virtualEle.adjustTable(0, viewInfo.offsets.top < this.offsets[1] ? 0 : this.getBlockHeight());\n            }\n            return;\n        }\n        this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n        if (!(!this.parent.enableVirtualization && this.parent.enableColumnVirtualization)) {\n            this.parent.pageSettings.currentPage = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n        }\n        this.requestType = 'virtualscroll';\n        if (this.parent.enableVirtualMaskRow) {\n            this.parent.showMaskRow(info.axis);\n            this.parent.addShimmerEffect();\n        }\n        this.parent.islazyloadRequest = false;\n        if (this.parent.editSettings.showAddNewRow) {\n            this.parent.closeEdit();\n        }\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.renderResponsiveColumnChooserDiv, { action: 'clear' });\n        if (!(!this.parent.isInitialLoad && this.parent.enablePersistence)) {\n            if (this.prevPage === this.parent.pageSettings.currentPage && viewInfo.event === _base_constant__WEBPACK_IMPORTED_MODULE_2__.modelChanged) {\n                this.currentInfo = this.prevCurrentInfo;\n                return;\n            }\n            if (viewInfo.event === _base_constant__WEBPACK_IMPORTED_MODULE_2__.modelChanged) {\n                this.prevPage = this.parent.pageSettings.currentPage;\n                this.prevCurrentInfo = this.currentInfo;\n            }\n            this.isBottomNotify = this.isBottom && viewInfo.event === _base_constant__WEBPACK_IMPORTED_MODULE_2__.modelChanged;\n            this.parent.notify(viewInfo.event, {\n                requestType: 'virtualscroll', virtualInfo: viewInfo,\n                focusElement: scrollArgs.focusElement\n            });\n        }\n        if (this.parent.enableColumnVirtualization && !this.parent.getContentTable().querySelector('tr.e-row')) {\n            this.parent.removeMaskRow();\n            this.appendContent(undefined, undefined, {\n                requestType: 'virtualscroll', virtualInfo: viewInfo,\n                focusElement: scrollArgs.focusElement\n            });\n            this.prevInfo = viewInfo;\n        }\n    };\n    VirtualContentRenderer.prototype.block = function (blk) {\n        return this.vgenerator.isBlockAvailable(blk);\n    };\n    VirtualContentRenderer.prototype.getInfoFromView = function (direction, info, e) {\n        var isBlockAdded = false;\n        var tempBlocks = [];\n        var infoType = { direction: direction, sentinelInfo: info, offsets: e,\n            startIndex: this.preStartIndex, endIndex: this.preEndIndex };\n        infoType.page = this.getPageFromTop(e.top, infoType);\n        infoType.blockIndexes = tempBlocks = this.vgenerator.getBlockIndexes(infoType.page);\n        infoType.loadSelf = !this.vgenerator.isBlockAvailable(tempBlocks[infoType.block]);\n        var blocks = this.ensureBlocks(infoType);\n        if (this.activeKey === 'upArrow' && infoType.blockIndexes.toString() !== blocks.toString()) {\n            // To avoid dupilcate row index problem in key focus support\n            var newBlock = blocks[blocks.length - 1];\n            if (infoType.blockIndexes.indexOf(newBlock) === -1) {\n                isBlockAdded = true;\n            }\n        }\n        if (!(!this.parent.enableVirtualization && this.parent.enableColumnVirtualization)) {\n            infoType.blockIndexes = blocks;\n        }\n        infoType.loadNext = !blocks.filter(function (val) { return tempBlocks.indexOf(val) === -1; })\n            .every(this.block.bind(this));\n        infoType.event = (infoType.loadNext || infoType.loadSelf) ? _base_constant__WEBPACK_IMPORTED_MODULE_2__.modelChanged : _base_constant__WEBPACK_IMPORTED_MODULE_2__.refreshVirtualBlock;\n        infoType.nextInfo = infoType.loadNext ? { page: Math.max(1, infoType.page + (direction === 'down' ? 1 : -1)) } : {};\n        if (isBlockAdded) {\n            infoType.blockIndexes = [infoType.blockIndexes[0] - 1, infoType.blockIndexes[0], infoType.blockIndexes[0] + 1];\n        }\n        if (this.activeKey === 'downArrow' && !isNaN(this.rowIndex)) {\n            var firstBlock = Math.ceil(this.rowIndex / this.getBlockSize());\n            if (firstBlock !== 1 && (infoType.blockIndexes[1] !== firstBlock || infoType.blockIndexes.length < 3)) {\n                infoType.blockIndexes = [firstBlock - 1, firstBlock, firstBlock + 1];\n                if (infoType.loadNext) {\n                    var nextBlock = this.vgenerator.getBlockIndexes(infoType.nextInfo.page);\n                    var hasCommonValue = false;\n                    for (var i = 0; i < infoType.blockIndexes.length; i++) {\n                        for (var j = 0; j < nextBlock.length; j++) {\n                            if (infoType.blockIndexes[parseInt(i.toString(), 10)] === nextBlock[parseInt(j.toString(), 10)]) {\n                                hasCommonValue = true;\n                                break;\n                            }\n                        }\n                        if (hasCommonValue) {\n                            break;\n                        }\n                    }\n                    if (!hasCommonValue) {\n                        infoType.loadNext = false;\n                        infoType.nextInfo = {};\n                        infoType.event = _base_constant__WEBPACK_IMPORTED_MODULE_2__.refreshVirtualBlock;\n                    }\n                }\n            }\n        }\n        infoType.columnIndexes = info.axis === 'X' ? this.vgenerator.getColumnIndexes() : this.parent.getColumnIndexesInView();\n        if (this.parent.enableColumnVirtualization && info.axis === 'X') {\n            infoType.event = _base_constant__WEBPACK_IMPORTED_MODULE_2__.refreshVirtualBlock;\n        }\n        return infoType;\n    };\n    VirtualContentRenderer.prototype.ensureBlocks = function (info) {\n        var _this = this;\n        var index = info.blockIndexes[info.block];\n        var mIdx;\n        var old = index;\n        var max = Math.max;\n        var indexes = info.direction === 'down' ? [max(index, 1), ++index, ++index] : [max(index - 1, 1), index, index + 1];\n        this.prevInfo = this.prevInfo || this.vgenerator.getData();\n        indexes = indexes.filter(function (val, ind) { return indexes.indexOf(val) === ind; });\n        var preventSelf = false;\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.checkIsVirtual)(this.parent) && info.direction === 'up' && (((info.page + 1 === this.prevInfo.page\n            || info.page === this.prevInfo.page) && (info.block === 1 || (info.block === 0\n            && info.page === 1))) || (info.page === this.prevInfo.page && indexes.length === 2))\n            && this.vgenerator.isBlockAvailable(info.blockIndexes[1] + 1)) {\n            preventSelf = (info.page + 1) === this.prevInfo.page && info.block === 1;\n            index += 1;\n            indexes = [max(index - 1, 1), index, index + 1];\n        }\n        if (this.prevInfo.blockIndexes.toString() === indexes.toString()) {\n            return indexes;\n        }\n        if ((info.loadSelf && !preventSelf) || (info.direction === 'down' && this.isEndBlock(old))) {\n            indexes = this.vgenerator.getBlockIndexes(info.page);\n        }\n        indexes.some(function (val, ind) {\n            var result = val === ((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(_this.parent) ? _this.getGroupedTotalBlocks() : _this.getTotalBlocks());\n            if (result) {\n                mIdx = ind;\n            }\n            return result;\n        });\n        if (mIdx !== undefined) {\n            indexes = indexes.slice(0, mIdx + 1);\n            if (info.block === 0 && indexes.length === 1 && this.vgenerator.isBlockAvailable(indexes[0] - 1)) {\n                indexes = [indexes[0] - 1, indexes[0]];\n            }\n        }\n        return indexes;\n    };\n    // tslint:disable-next-line:max-func-body-length\n    VirtualContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var _this = this;\n        // currentInfo value will be used if there are multiple dom updates happened due to mousewheel\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && this.currentInfo.page &&\n            this.currentInfo.page !== e.virtualInfo.page ? this.currentInfo : e.virtualInfo;\n        this.prevInfo = this.prevInfo || e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        var width;\n        var blocks = info.blockIndexes;\n        if (this.parent.groupSettings.columns.length) {\n            this.refreshOffsets();\n        }\n        if (this.parent.height === '100%') {\n            this.parent.element.style.height = '100%';\n        }\n        var vHeight = this.parent.height.toString().indexOf('%') < 0 ? this.content.getBoundingClientRect().height :\n            this.parent.element.getBoundingClientRect().height;\n        if (!this.parent.enableVirtualization && this.parent.enableColumnVirtualization) {\n            vHeight = 0;\n        }\n        var reduceWidth = 0;\n        if (this.parent.enableColumnVirtualization && this.parent.isFrozenGrid()) {\n            var frzLeftWidth_1 = 0;\n            this.parent.getColumns().filter(function (col) {\n                if (col.visible) {\n                    reduceWidth += parseInt(col.width.toString(), 10);\n                    if (col.freeze === 'Left') {\n                        frzLeftWidth_1 += parseInt(col.width.toString(), 10);\n                    }\n                }\n            });\n            var cIndex = info.columnIndexes;\n            width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n            if (cBlock > this.parent.getVisibleFrozenLeftCount()) {\n                cOffset = cOffset - frzLeftWidth_1;\n            }\n            this.resetStickyLeftPos(cOffset, newChild);\n        }\n        if (!this.requestTypes.some(function (value) { return value === _this.requestType; })) {\n            var translate = this.getTranslateY(this.content.scrollTop, vHeight, info);\n            if (this.parent.groupSettings.enableLazyLoading && info && this.prevInfo && this.prevInfo.blockIndexes[0] === 1 &&\n                info.blockIndexes[0] === 1 && info.direction === 'up') {\n                this.virtualEle.adjustTable(0, this.content.scrollTop < this.offsets[1] ? 0 : this.getBlockHeight());\n            }\n            else {\n                this.virtualEle.adjustTable(cOffset, translate);\n            }\n        }\n        if (this.parent.enableColumnVirtualization) {\n            this.header.virtualEle.adjustTable(cOffset, 0);\n        }\n        if (this.parent.enableColumnVirtualization) {\n            var cIndex = info.columnIndexes;\n            width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n            if (this.parent.isFrozenGrid()) {\n                width = reduceWidth.toString();\n                if (this.parent.allowResizing) {\n                    this.parent.getHeaderTable().style.width = reduceWidth + 'px';\n                    this.parent.getContentTable().style.width = reduceWidth + 'Px';\n                }\n            }\n            this.header.virtualEle.setWrapperWidth(width);\n        }\n        this.virtualEle.setWrapperWidth(width, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isIE || _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'edge');\n        if (this.parent.enableColumnVirtualization && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newChild)) {\n            return;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target.parentNode)) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(target);\n        }\n        var tbody = this.parent.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_9__.content).querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_9__.tbody);\n        if (tbody) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(tbody);\n            target = null;\n        }\n        var isReact = this.parent.isReact && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.rowTemplate);\n        if (!isReact) {\n            target = this.parent.createElement(_base_string_literals__WEBPACK_IMPORTED_MODULE_9__.tbody, { attrs: { role: 'rowgroup' } });\n            target.appendChild(newChild);\n        }\n        else {\n            target = newChild;\n        }\n        if (this.parent.frozenRows && e.requestType === 'virtualscroll' && (this.parent.pageSettings.currentPage === 1\n            || this.isInfiniteColumnvirtualization())) {\n            for (var i = 0; i < this.parent.frozenRows; i++) {\n                target.children[0].remove();\n            }\n        }\n        this.getTable().appendChild(target);\n        this.requestType = this.requestType === 'virtualscroll' ? this.empty : this.requestType;\n        if (!this.parent.enableVirtualization && this.parent.enableColumnVirtualization && (info.direction === 'right' || info.direction === 'left')) {\n            this.content.scrollTop = this.currentInfo.offsets.top;\n            this.content.scrollLeft = this.currentInfo.offsets.left;\n        }\n        if (this.parent.groupSettings.columns.length) {\n            if (!(0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(this.parent) && info.direction === 'up') {\n                var blk = this.offsets[this.getTotalBlocks()] - this.prevHeight;\n                var sTop = this.content.scrollTop;\n                this.content.scrollTop = sTop + blk;\n            }\n            this.setVirtualHeight();\n            if (!this.parent.groupSettings.enableLazyLoading) {\n                this.observer.setPageHeight(this.getOffset(blocks[blocks.length - 1]) - this.getOffset(blocks[0] - 1));\n            }\n        }\n        if (!this.parent.groupSettings.enableLazyLoading && this.parent.groupSettings.columns.length === 0 &&\n            e.requestType === 'ungrouping') {\n            this.observer.setPageHeight(this.getBlockHeight() * 2);\n        }\n        this.prevInfo = info;\n        if (this.isFocused && this.activeKey !== 'downArrow' && this.activeKey !== 'upArrow') {\n            this.content.focus();\n        }\n        var lastPage = Math.ceil(this.getTotalBlocks() / 2);\n        if (this.isBottom) {\n            this.isBottom = false;\n            this.isBottomNotify = false;\n            this.parent.getContent().firstElementChild.scrollTop = this.offsets[this.offsetKeys.length - 1];\n        }\n        if ((this.parent.pageSettings.currentPage + 1 === lastPage || this.parent.pageSettings.currentPage === lastPage) &&\n            blocks.length === 2 && e.requestType === 'delete') {\n            this.parent.getContent().firstElementChild.scrollTop = this.offsets[this.offsetKeys.length - 1];\n        }\n        if ((this.parent.pageSettings.currentPage === lastPage) && blocks.length === 1) {\n            this.isBottom = true;\n            setTimeout(function () {\n                var scrollElement = _this.parent.getContent().firstElementChild;\n                scrollElement.scrollTop = _this.offsets[_this.offsetKeys.length - 2];\n                var scrollValues = { direction: 'up', sentinel: _this.observer.sentinelInfo.up,\n                    offset: { top: scrollElement.scrollTop, left: scrollElement.scrollLeft }, focusElement: _this.parent.element };\n                _this.scrollListener(scrollValues);\n            }, 0);\n        }\n        if (this.isTop) {\n            this.parent.getContent().firstElementChild.scrollTop = 0;\n            this.isTop = false;\n        }\n        if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.autoCol, {});\n        }\n        this.focusCell(e);\n        if (this.firstCellFocus) {\n            this.firstCellFocus = false;\n            var focusModule = this.parent.focusModule;\n            var current = focusModule.active.matrix.current;\n            var cell = this.parent.getContentTable().rows[current[0]].cells[current[1]];\n            focusModule.currentInfo.element = cell;\n            focusModule.currentInfo.elementToFocus = cell;\n            cell.classList.add('e-focus');\n            cell.classList.add('e-focused');\n            cell.tabIndex = 0;\n            cell.focus();\n        }\n        this.restoreEdit(e);\n        this.restoreAdd();\n        this.ensureSelectedRowPosition();\n        this.validationScrollLeft();\n        if (this.parent.isFrozenGrid() && this.parent.enableColumnVirtualization) {\n            this.widthServices.refreshFrozenScrollbar();\n        }\n        if (!this.initialRowTop) {\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (this.parent.getRowByIndex(0)) {\n                this.initialRowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n        }\n    };\n    VirtualContentRenderer.prototype.validationScrollLeft = function () {\n        if (this.validationCheck) {\n            if (this.validationCol) {\n                var offset = this.vgenerator.cOffsets[(this.validationCol.index - this.parent.getVisibleFrozenColumns()) - 1];\n                this.validationCol = null;\n                this.content.scrollLeft = offset;\n            }\n            else {\n                this.validationCheck = false;\n                this.parent.editModule.editFormValidate();\n            }\n        }\n    };\n    VirtualContentRenderer.prototype.ensureSelectedRowPosition = function () {\n        if (!this.isSelection && this.isSelectionScroll && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.selectRowIndex)) {\n            this.isSelectionScroll = false;\n            var row = this.parent.getRowByIndex(this.selectRowIndex);\n            if (row && !this.isRowInView(row)) {\n                this.rowSelected({ rowIndex: this.selectRowIndex, row: row }, true);\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    VirtualContentRenderer.prototype.focusCell = function (e) {\n        if (this.activeKey !== 'upArrow' && this.activeKey !== 'downArrow') {\n            return;\n        }\n        var row = this.parent.getRowByIndex(this.rowIndex);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var cell = row.cells[this.cellIndex];\n        cell.focus({ preventScroll: true });\n        if (!this.parent.selectionSettings.checkboxOnly) {\n            this.parent.selectRow(parseInt(row.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_9__.ariaRowIndex), 10) - 1);\n        }\n        this.activeKey = this.empty;\n    };\n    VirtualContentRenderer.prototype.restoreEdit = function (e) {\n        if (this.isNormaledit) {\n            if (this.parent.editSettings.allowEditing\n                && this.parent.editModule && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.editedRowIndex)) {\n                var row = this.getRowByIndex(this.editedRowIndex);\n                var content = this.content;\n                var keys = Object.keys(this.virtualData);\n                var isXaxis = e && e.virtualInfo && e.virtualInfo.sentinelInfo.axis === 'X';\n                if (keys.length && row && !content.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_9__.editedRow) &&\n                    ['sorting', 'filtering', 'grouping', 'refresh', 'searching', 'ungrouping', 'reorder'].indexOf(e.requestType) === -1) {\n                    var top_1 = row.getBoundingClientRect().top - this.parent.element.getBoundingClientRect().top;\n                    if (isXaxis || (top_1 < this.content.offsetHeight && top_1 > this.parent.getRowHeight())) {\n                        this.parent.isEdit = false;\n                        this.parent.editModule.startEdit(row);\n                    }\n                }\n                if (row && this.content.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_9__.editedRow) && !keys.length) {\n                    var rowData = (!this.parent.enableVirtualization && this.parent.enableColumnVirtualization) ?\n                        this.enableCacheOnInfiniteColumnVirtual() ? this.virtualInfiniteData :\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.parent.getCurrentViewRecords()[this.editedRowIndex]) :\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.getRowObjectByIndex(this.editedRowIndex));\n                    this.virtualData = this.getVirtualEditedData(rowData);\n                }\n            }\n            this.restoreAdd();\n        }\n    };\n    VirtualContentRenderer.prototype.getVirtualEditedData = function (rowData) {\n        var editForms = [].slice.call(this.parent.element.getElementsByClassName('e-gridform'));\n        var isFormDestroyed = this.parent.editModule && this.parent.editModule.formObj\n            && this.parent.editModule.formObj.isDestroyed;\n        if (!isFormDestroyed) {\n            for (var i = 0; i < editForms.length; i++) {\n                rowData = this.parent.editModule.getCurrentEditedData(editForms[parseInt(i.toString(), 10)], rowData);\n            }\n        }\n        return rowData;\n    };\n    VirtualContentRenderer.prototype.restoreAdd = function () {\n        var startAdd = !this.parent.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_9__.addedRow);\n        if (this.isNormaledit && this.isAdd && startAdd) {\n            var isTop = this.parent.editSettings.newRowPosition === 'Top' && this.content.scrollTop < this.parent.getRowHeight();\n            var isBottom = this.parent.editSettings.newRowPosition === 'Bottom'\n                && this.parent.pageSettings.currentPage === this.maxPage;\n            if (isTop || isBottom) {\n                this.parent.isEdit = false;\n                this.parent.addRecord();\n            }\n        }\n    };\n    VirtualContentRenderer.prototype.onDataReady = function (e) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.count)) {\n            this.count = e.count;\n            this.maxPage = Math.ceil((this.parent.groupSettings.columns.length && this.parent.vcRows.length ? this.parent.vcRows.length\n                : e.count) / this.parent.pageSettings.pageSize);\n        }\n        this.vgenerator.checkAndResetCache(e.requestType);\n        if (['refresh', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder', undefined]\n            .some(function (value) { return e.requestType === value; })) {\n            this.refreshOffsets();\n        }\n        this.setVirtualHeight();\n        this.resetScrollPosition(e.requestType);\n    };\n    /**\n     * @param {number} height - specifies the height\n     * @returns {void}\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    VirtualContentRenderer.prototype.setVirtualHeight = function (height) {\n        var width = this.parent.enableColumnVirtualization ?\n            this.getColumnOffset(this.parent.getVisibleColumns().length + this.parent.groupSettings.columns.length - 1) + 'px' : '100%';\n        var virtualHeight = (this.offsets[(0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(this.parent) && this.count !== 0 ? this.getGroupedTotalBlocks() :\n            this.getTotalBlocks()]);\n        if (!this.parent.enableVirtualization && this.parent.enableColumnVirtualization) {\n            virtualHeight = 0;\n        }\n        var totalBlocks = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(this.parent) && this.count !== 0 ? this.getGroupedTotalBlocks()\n            : this.getTotalBlocks();\n        var lastPage = Math.ceil(totalBlocks / 2);\n        var placeHolderBottom = Math.round(this.virtualEle.placeholder.getBoundingClientRect().bottom);\n        var wrapperBottom = Math.round(this.virtualEle.wrapper.getBoundingClientRect().bottom);\n        if ((this.currentInfo.page === lastPage || this.currentInfo.page + 1 === lastPage) && this.currentInfo.direction === 'down' &&\n            placeHolderBottom > wrapperBottom && !this.diff) {\n            this.diff = placeHolderBottom - wrapperBottom;\n        }\n        if (this.diff && (this.currentInfo.page === lastPage) && placeHolderBottom > wrapperBottom &&\n            !(this.isAdd && this.parent.editSettings.newRowPosition === 'Bottom')) {\n            virtualHeight -= this.diff;\n            this.heightChange = true;\n        }\n        else if (this.requestType === 'virtualscroll' && this.diff && this.heightChange) {\n            virtualHeight -= this.diff;\n            this.heightChange = false;\n        }\n        this.virtualEle.setVirtualHeight(virtualHeight, width);\n        if (this.virtualEle && this.virtualEle.wrapper) {\n            if (!this.parent.enableVirtualization && this.parent.enableColumnVirtualization) {\n                this.virtualEle.wrapper.style.minHeight = '';\n            }\n            else {\n                this.virtualEle.wrapper.style.minHeight = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(virtualHeight) ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.parent.height) : '0px';\n            }\n        }\n        if (this.parent.enableColumnVirtualization) {\n            this.header.virtualEle.setVirtualHeight(1, width);\n        }\n    };\n    /**\n     * @param {number} sTop - specifies the sTop\n     * @param {VirtualInfo} info - specifies the info\n     * @returns {number} - return the page\n     * @hidden\n     */\n    VirtualContentRenderer.prototype.getPageFromTop = function (sTop, info) {\n        var _this = this;\n        var total = ((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(this.parent)) ? this.getGroupedTotalBlocks() : this.getTotalBlocks();\n        var page = 0;\n        this.offsetKeys.some(function (offset) {\n            var iOffset = Number(offset);\n            var border = sTop <= _this.offsets[\"\" + offset] || (iOffset === total && sTop > _this.offsets[\"\" + offset]);\n            if (border) {\n                if (_this.offsetKeys.length % 2 !== 0 && iOffset.toString() === _this.offsetKeys[_this.offsetKeys.length - 2]\n                    && sTop <= _this.offsets[_this.offsetKeys.length - 1]) {\n                    iOffset = iOffset + 1;\n                }\n                info.block = iOffset % 2 === 0 ? 1 : 0;\n                page = Math.max(1, Math.min(_this.vgenerator.getPage(iOffset), _this.maxPage));\n            }\n            return border;\n        });\n        return page;\n    };\n    VirtualContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if (info === undefined) {\n            info = { page: this.getPageFromTop(sTop, {}) };\n            info.blockIndexes = this.vgenerator.getBlockIndexes(info.page);\n        }\n        var block = (info.blockIndexes[0] || 1) - 1;\n        var translate = this.getOffset(block);\n        var endTranslate = this.getOffset(info.blockIndexes[info.blockIndexes.length - 1]);\n        if (isOnenter) {\n            info = this.prevInfo;\n        }\n        var result = translate > sTop ?\n            this.getOffset(block - 1) : endTranslate < (sTop + cHeight) ? this.getOffset(block + 1) : translate;\n        var blockHeight = this.offsets[info.blockIndexes[info.blockIndexes.length - 1]] -\n            this.tmpOffsets[info.blockIndexes[0]];\n        var totalBlocks = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(this.parent) ? this.getGroupedTotalBlocks() : this.getTotalBlocks();\n        if (result + blockHeight > this.offsets[parseInt(totalBlocks.toString(), 10)]) {\n            result -= (result + blockHeight) - this.offsets[parseInt(totalBlocks.toString(), 10)];\n        }\n        if (info.page === 1 && info.block === 0 && info.direction === 'up') {\n            result = 0;\n        }\n        if (!this.parent.enableVirtualization && this.parent.enableColumnVirtualization) {\n            result = 0;\n        }\n        return result;\n    };\n    VirtualContentRenderer.prototype.getOffset = function (block) {\n        return Math.min(this.offsets[parseInt(block.toString(), 10)] | 0, this.offsets[this.maxBlock] | 0);\n    };\n    VirtualContentRenderer.prototype.onEntered = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            if ((direction === 'down' || direction === 'up') && !_this.parent.enableVirtualization && _this.parent.enableColumnVirtualization) {\n                return;\n            }\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isIE && !isWheel && check && !_this.preventEvent && !_this.parent.enableVirtualMaskRow) {\n                _this.parent.showSpinner();\n            }\n            _this.prevInfo = _this.prevInfo || _this.vgenerator.getData();\n            var viewInfo = _this.getInfoFromView(direction, current, e);\n            if (_this.parent.isFrozenGrid() && current.axis === 'X' && _this.parent.getVisibleFrozenLeftCount() >= viewInfo.columnIndexes[0]\n                && _this.prevInfo && _this.prevInfo.columnIndexes.toString().includes(viewInfo.columnIndexes.toString())) {\n                return;\n            }\n            if (_this.parent.enableVirtualMaskRow && !_this.preventEvent) {\n                var firstOffSetKey = parseInt(_this.offsetKeys[0], 10);\n                var lastOffSetKey = parseInt(_this.offsetKeys[_this.offsetKeys.length - 1], 10);\n                var blockIndex = _this.currentInfo.blockIndexes;\n                var disableShowMaskRow = (_this.prevInfo && current.axis === 'X'\n                    && _this.prevInfo.columnIndexes.toString() === viewInfo.columnIndexes.toString())\n                    || (direction === 'down' && _this.parent.allowGrouping && _this.parent.groupSettings.columns.length\n                        && ((_this.parent.allowFiltering && _this.parent.filterSettings.columns.length)\n                            || _this.parent.searchSettings.key.length) && _this.offsetKeys.length <= 2);\n                if (!((blockIndex && blockIndex[0] === firstOffSetKey && direction === 'up') ||\n                    (blockIndex && blockIndex[blockIndex.length - 1] === lastOffSetKey && direction === 'down') || disableShowMaskRow)) {\n                    setTimeout(function () {\n                        _this.parent.showMaskRow(current.axis);\n                    }, 0);\n                }\n            }\n            var xAxis = current.axis === 'X';\n            var top = _this.prevInfo.offsets ? _this.prevInfo.offsets.top : null;\n            var height = _this.content.getBoundingClientRect().height;\n            var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0] - 1);\n            if (_this.parent.isFrozenGrid() && _this.parent.enableColumnVirtualization && _this.currentInfo &&\n                _this.currentInfo.columnIndexes) {\n                var cBlock = _this.currentInfo.columnIndexes[0] - 1;\n                var frzLeftWidth_2 = 0;\n                _this.parent.getColumns().filter(function (col) {\n                    if (col.visible && col.freeze === 'Left') {\n                        frzLeftWidth_2 += parseInt(col.width.toString(), 10);\n                    }\n                });\n                if (cBlock > _this.parent.getVisibleFrozenLeftCount()) {\n                    x = x - frzLeftWidth_2;\n                }\n            }\n            if (xAxis) {\n                var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n            }\n            if (!_this.parent.enableVirtualization && _this.parent.enableColumnVirtualization) {\n                _this.virtualEle.adjustTable(x, 0);\n            }\n            else {\n                var y = _this.getTranslateY(e.top, height, xAxis && top === e.top ? _this.prevInfo : undefined, true);\n                _this.virtualEle.adjustTable(x, Math.min(y, _this.offsets[_this.maxBlock]));\n            }\n            if (_this.parent.enableColumnVirtualization) {\n                _this.header.virtualEle.adjustTable(x, 0);\n                if (_this.parent.isFrozenGrid()) {\n                    _this.resetStickyLeftPos(x);\n                }\n            }\n        };\n    };\n    VirtualContentRenderer.prototype.dataBound = function () {\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.refreshVirtualFrozenHeight, {});\n        if (this.isSelection && this.activeKey !== 'upArrow' && this.activeKey !== 'downArrow') {\n            this.parent.selectRow(this.selectedRowIndex);\n        }\n        else {\n            this.activeKey = this.empty;\n            this.requestType = this.empty;\n        }\n    };\n    /**\n     * To calculate the position of frozen cells\n     *\n     * @param {number} valueX - specifies the transform X value\n     * @param {DocumentFragment | HTMLElement} newChild - specifies the element to transform\n     * @returns {void}\n     * @hidden\n     */\n    VirtualContentRenderer.prototype.resetStickyLeftPos = function (valueX, newChild) {\n        var cells = [].slice.call(this.parent.getHeaderContent().querySelectorAll('.e-leftfreeze,.e-rightfreeze,.e-fixedfreeze')).concat([].slice.call((newChild ? newChild : this.parent.getContent()).querySelectorAll('.e-leftfreeze,.e-rightfreeze,.e-fixedfreeze')));\n        var frzLeftWidth = 0;\n        var frzRightWidth = 0;\n        if (this.parent.getHeaderContent().querySelectorAll('.e-fixedfreeze').length) {\n            frzLeftWidth = this.parent.leftrightColumnWidth('left');\n            frzRightWidth = this.parent.leftrightColumnWidth('right');\n        }\n        if (cells.length) {\n            for (var i = 0; i < cells.length; i++) {\n                var cell = cells[parseInt(i.toString(), 10)];\n                var col = void 0;\n                if (cell.classList.contains('e-rowcell')) {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.getAttribute('aria-colindex')) && cell.querySelector('[e-mappinguid]')) {\n                        var uid = cell.querySelector('[e-mappinguid]').getAttribute('e-mappinguid');\n                        col = this.parent.getColumnByUid(uid);\n                    }\n                    else {\n                        var idx = parseInt(cell.getAttribute('aria-colindex'), 10) - 1;\n                        col = this.parent.getColumnByIndex(parseInt(idx.toString(), 10));\n                    }\n                }\n                else {\n                    if (cell.classList.contains('e-headercell') || cell.classList.contains('e-filterbarcell')) {\n                        var uid = cell.classList.contains('e-filterbarcell') ? cell.getAttribute('e-mappinguid') :\n                            cell.querySelector('[e-mappinguid]').getAttribute('e-mappinguid');\n                        col = this.parent.getColumnByUid(uid);\n                    }\n                }\n                if (col.freeze === 'Left') {\n                    cell.style.left = (col.valueX - valueX) + 'px';\n                }\n                else if (col.freeze === 'Right') {\n                    cell.style.right = (col.valueX + valueX) + 'px';\n                }\n                else if (col.freeze === 'Fixed') {\n                    cell.style.left = (frzLeftWidth - valueX) + 'px';\n                    cell.style.right = (frzRightWidth + valueX) + 'px';\n                }\n            }\n        }\n        this.parent.translateX = valueX;\n    };\n    VirtualContentRenderer.prototype.rowSelected = function (args, isSelection) {\n        if ((this.isSelection || isSelection) && !this.isLastBlockRow(args.rowIndex)) {\n            var transform = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getTransformValues)(this.content.firstElementChild);\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            var rowTop = args.row.getBoundingClientRect().top - gridTop;\n            var height = this.content.getBoundingClientRect().height;\n            var isBottom = height < rowTop;\n            var remainHeight = isBottom ? rowTop - height : this.initialRowTop - rowTop;\n            var translateY = isBottom ? transform.height - remainHeight : transform.height + remainHeight;\n            this.virtualEle.adjustTable(transform.width, translateY);\n            var wrapperInfo = this.virtualEle.wrapper.getBoundingClientRect();\n            var contentInfo = this.content.getBoundingClientRect();\n            if (wrapperInfo.top > contentInfo.top) {\n                this.virtualEle.adjustTable(transform.width, translateY - (wrapperInfo.top - contentInfo.top));\n            }\n            var lastRowTop = this.content.querySelector('tbody').lastElementChild.getBoundingClientRect().top - gridTop;\n            if (lastRowTop < height) {\n                translateY = translateY + (height - (args.row.getBoundingClientRect().top - gridTop));\n                this.virtualEle.adjustTable(transform.width, translateY - (this.parent.getRowHeight() / 2));\n            }\n            else if (contentInfo.bottom > wrapperInfo.bottom) {\n                this.virtualEle.adjustTable(transform.width, translateY + (contentInfo.bottom - wrapperInfo.bottom));\n            }\n            if (this.parent.isFrozenGrid() && this.parent.enableColumnVirtualization) {\n                this.resetStickyLeftPos(transform.width);\n            }\n        }\n        this.isSelection = false;\n    };\n    VirtualContentRenderer.prototype.isLastBlockRow = function (index) {\n        var scrollEle = this.parent.getContent().firstElementChild;\n        var visibleRowCount = Math.floor(scrollEle.offsetHeight / this.parent.getRowHeight()) - 1;\n        var startIdx = (this.maxPage * this.parent.pageSettings.pageSize) - visibleRowCount;\n        return index >= startIdx;\n    };\n    VirtualContentRenderer.prototype.refreshMaxPage = function () {\n        if (this.parent.groupSettings.columns.length && this.parent.vcRows.length) {\n            this.maxPage = Math.ceil(this.parent.vcRows.length / this.parent.pageSettings.pageSize);\n        }\n    };\n    VirtualContentRenderer.prototype.setVirtualPageQuery = function (args) {\n        var visiblePage = [];\n        if (this.prevInfo && this.prevInfo.blockIndexes) {\n            visiblePage = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getVisiblePage)(this.prevInfo.blockIndexes);\n        }\n        if ((this.requestType === 'sorting' || this.requestType === 'delete') && visiblePage.length && (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.checkIsVirtual)(this.parent)) {\n            args.query.skip(this.parent.pageSettings.pageSize * (visiblePage[0] - 1));\n            args.query.take(this.parent.pageSettings.pageSize * visiblePage.length);\n            args.skipPage = true;\n            return;\n        }\n        var row = this.parent.getContent().querySelector('.e-row');\n        if (this.requestType === 'virtualscroll' && this.vgenerator.currentInfo.blockIndexes) {\n            this.vgenerator.currentInfo = {};\n        }\n        if (row && this.parent.isManualRefresh && this.currentInfo.blockIndexes\n            && (this.currentInfo.blockIndexes.length === 3 || visiblePage.length > 1)) {\n            this.vgenerator.startIndex = parseInt(row.getAttribute('aria-rowindex'), 10) - 1;\n            this.vgenerator.currentInfo = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.currentInfo);\n            this.vgenerator.currentInfo.blockIndexes = this.currentInfo.blockIndexes.slice();\n            var includePrevPage = this.vgenerator.includePrevPage = this.currentInfo.blockIndexes[0] % 2 === 0;\n            if (includePrevPage) {\n                this.vgenerator.startIndex = this.vgenerator.startIndex - this.getBlockSize();\n                this.vgenerator.currentInfo.blockIndexes.unshift(this.currentInfo.blockIndexes[0] - 1);\n            }\n            else {\n                this.vgenerator.currentInfo.blockIndexes.push(this.currentInfo.blockIndexes[this.currentInfo.blockIndexes.length - 1] + 1);\n            }\n            var skip = (this.vgenerator.currentInfo.blockIndexes[0] - 1) * this.getBlockSize();\n            var take = this.vgenerator.currentInfo.blockIndexes.length * this.getBlockSize();\n            args.query.skip(skip);\n            args.query.take(take);\n            args.skipPage = true;\n        }\n    };\n    VirtualContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.dataReady, this.onDataReady, this);\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_2__.dataBound, this.dataBound.bind(this));\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_2__.actionBegin, this.actionBegin.bind(this));\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_2__.actionComplete, this.actionComplete.bind(this));\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_2__.rowSelected, this.rowSelected.bind(this));\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.refreshVirtualBlock, this.refreshContentRows, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.refreshVirtualLazyLoadCache, this.refreshVirtualLazyLoadCache, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.selectVirtualRow, this.selectVirtualRow, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.virtaulCellFocus, this.virtualCellFocus, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.virtualScrollEditActionBegin, this.editActionBegin, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.virtualScrollAddActionBegin, this.addActionBegin, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.virtualScrollEdit, this.restoreEdit, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.virtualScrollEditSuccess, this.editSuccess, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.refreshVirtualCache, this.refreshCache, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.editReset, this.resetIsedit, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.getVirtualData, this.getVirtualData, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.virtualScrollEditCancel, this.editCancel, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.refreshVirtualMaxPage, this.refreshMaxPage, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.setVirtualPageQuery, this.setVirtualPageQuery, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.selectRowOnContextOpen, this.selectRowOnContextOpen, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.resetVirtualFocus, this.resetVirtualFocus, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.refreshVirtualEditFormCells, this.refreshCells, this);\n        this.parent[\"\" + action](_base_constant__WEBPACK_IMPORTED_MODULE_2__.scrollToEdit, this.scrollToEdit, this);\n        var event = this.actions;\n        for (var i = 0; i < event.length; i++) {\n            this.parent[\"\" + action](event[parseInt(i.toString(), 10)] + \"-begin\", this.onActionBegin, this);\n        }\n        var fn = function () {\n            _this.observer.observe(function (scrollArgs) { return _this.scrollListener(scrollArgs); }, _this.onEntered());\n            var gObj = _this.parent;\n            if (gObj.enablePersistence && gObj.scrollPosition) {\n                if (gObj.scrollPosition.top > 0) {\n                    _this.content.scrollTop = gObj.scrollPosition.top;\n                    var scrollValues = { direction: 'down', sentinel: _this.observer.sentinelInfo.down,\n                        offset: gObj.scrollPosition, focusElement: gObj.element };\n                    _this.scrollListener(scrollValues);\n                }\n                if (gObj.enableColumnVirtualization) {\n                    _this.content.scrollLeft = gObj.scrollPosition.left;\n                }\n            }\n            _this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_2__.contentReady, fn);\n        };\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.contentReady, fn, this);\n    };\n    VirtualContentRenderer.prototype.refreshVirtualLazyLoadCache = function (e) {\n        var blockIndex = this.currentInfo.blockIndexes;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentInfo.blockIndexes)) {\n            blockIndex = [1, 2];\n        }\n        var block;\n        var index;\n        var cache;\n        for (var i = 0; i < blockIndex.length; i++) {\n            var rows = this.vgenerator.cache[blockIndex[parseInt(i.toString(), 10)]];\n            for (var j = 0; j < rows.length; j++) {\n                if (rows[parseInt(j.toString(), 10)].uid === e.uid) {\n                    block = blockIndex[parseInt(i.toString(), 10)];\n                    index = j;\n                    cache = rows;\n                    break;\n                }\n            }\n        }\n        if (e.count) {\n            this.vgenerator.cache[parseInt(block.toString(), 10)].splice(index + 1, e.count);\n        }\n        else if (e.rows && e.rows.length) {\n            this.vgenerator.cache[parseInt(block.toString(), 10)] = ([].slice.call(cache.slice(0, index + 1)).concat([].slice.call(e.rows))).concat([].slice.call(cache.slice(index + 1, cache.length)));\n        }\n        this.refreshOffsets();\n    };\n    VirtualContentRenderer.prototype.scrollToEdit = function (col) {\n        var allowScroll = true;\n        this.validationCheck = true;\n        if (this.isAdd && this.content.scrollTop > 0) {\n            allowScroll = false;\n            var keys = Object.keys(this.offsets);\n            this.content.scrollTop = this.parent.editSettings.newRowPosition === 'Top' ? 0 : this.offsets[keys.length - 1];\n        }\n        var row = this.parent.getRowByIndex(this.editedRowIndex);\n        if (!row && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.editedRowIndex)) {\n            if (!row || !this.isRowInView(row)) {\n                var rowIndex = this.parent.getRowHeight();\n                var scrollTop = this.editedRowIndex * rowIndex;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(scrollTop)) {\n                    allowScroll = false;\n                    this.content.scrollTop = scrollTop;\n                }\n            }\n        }\n        if (col && allowScroll) {\n            var offset = this.vgenerator.cOffsets[(col.index - this.parent.getVisibleFrozenColumns()) - 1];\n            if (!this.parent.enableColumnVirtualization) {\n                var header = this.parent.getHeaderContent().querySelector('.e-headercelldiv[e-mappinguid=\"' + col.uid + '\"]');\n                offset = header.parentElement.offsetLeft;\n            }\n            if (this.parent.enableColumnVirtualization && this.parent.getVisibleFrozenLeftCount()) {\n                offset -= this.parent.leftrightColumnWidth('left');\n            }\n            this.content.scrollLeft = this.parent.enableRtl ? -Math.abs(offset) : offset;\n        }\n        if (col && !allowScroll) {\n            this.validationCol = col;\n        }\n    };\n    VirtualContentRenderer.prototype.refreshCells = function (rowObj) {\n        rowObj.cells = this.vgenerator.generateCells(rowObj.foreignKeyData);\n    };\n    VirtualContentRenderer.prototype.resetVirtualFocus = function (e) {\n        this.isCancel = e.isCancel;\n    };\n    /**\n     * @param {Object} data - specifies the data\n     * @param {Object} data.virtualData -specifies the data\n     * @param {boolean} data.isAdd - specifies isAdd\n     * @param {boolean} data.isCancel - specifies boolean in cancel\n     * @param {boolean} data.isScroll - specifies boolean for scroll\n     * @returns {void}\n     * @hidden\n     */\n    VirtualContentRenderer.prototype.getVirtualData = function (data) {\n        if (this.isNormaledit) {\n            var error = this.parent.element.querySelector('.e-griderror:not([style*=\"display: none\"])');\n            var keys = Object.keys(this.virtualData);\n            data.isScroll = keys.length !== 0 && this.currentInfo.sentinelInfo && this.currentInfo.sentinelInfo.axis === 'X';\n            if (error) {\n                return;\n            }\n            this.virtualData = keys.length ? this.virtualData : data.virtualData;\n            this.getVirtualEditedData(this.virtualData);\n            data.virtualData = this.virtualData;\n            data.isAdd = this.isAdd || this.parent.editSettings.showAddNewRow;\n            data.isCancel = this.isCancel;\n        }\n    };\n    VirtualContentRenderer.prototype.selectRowOnContextOpen = function (args) {\n        this.isContextMenuOpen = args.isOpen;\n    };\n    VirtualContentRenderer.prototype.editCancel = function (args) {\n        var dataIndex = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getEditedDataIndex)(this.parent, args.data);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dataIndex)) {\n            args.data = this.parent.getCurrentViewRecords()[parseInt(dataIndex.toString(), 10)];\n        }\n    };\n    VirtualContentRenderer.prototype.editSuccess = function (args) {\n        if (this.isNormaledit) {\n            if (!this.isAdd && args.data) {\n                this.updateCurrentViewData(args.data);\n            }\n            this.isAdd = false;\n        }\n    };\n    VirtualContentRenderer.prototype.updateCurrentViewData = function (data) {\n        var dataIndex = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getEditedDataIndex)(this.parent, data);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dataIndex)) {\n            this.parent.getCurrentViewRecords()[parseInt(dataIndex.toString(), 10)] = data;\n        }\n    };\n    VirtualContentRenderer.prototype.actionBegin = function (args) {\n        if (args.requestType !== 'virtualscroll') {\n            this.requestType = args.requestType;\n        }\n        if (!args.cancel) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.refreshVirtualFrozenRows, args);\n        }\n    };\n    VirtualContentRenderer.prototype.virtualCellFocus = function (e) {\n        // To decide the action (select or scroll), when using arrow keys for cell focus\n        var ele = document.activeElement;\n        if (!ele.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_9__.rowCell) && (ele instanceof HTMLInputElement\n            || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(ele.closest('.e-templatecell')))) {\n            ele = ele.closest('.e-rowcell');\n        }\n        if (this.parent.allowGrouping && this.parent.groupSettings.columns.length\n            && ele && (ele.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_9__.rowCell) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.parentsUntil)(ele, _base_string_literals__WEBPACK_IMPORTED_MODULE_9__.groupCaptionRow)))\n            && e && (e.action === 'shiftEnter' || e.action === 'upArrow' || e.action === 'downArrow')) {\n            var scrollEle = this.parent.getContent().firstElementChild;\n            var scrollEleInfo = scrollEle.getBoundingClientRect();\n            var row = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(ele, 'tr');\n            var nextFocusRow = e.action === 'downArrow' ? row.nextElementSibling : row.previousElementSibling;\n            var nextFocusRowInfo = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextFocusRow) ? nextFocusRow.getBoundingClientRect()\n                : undefined;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextFocusRow) || (e.action === 'downArrow' && nextFocusRowInfo.bottom > scrollEleInfo.bottom)\n                || ((e.action === 'upArrow' || e.action === 'shiftEnter') && nextFocusRowInfo.top < scrollEleInfo.top)) {\n                this.activeKey = e.action;\n                this.parent.focusModule.virtualSelectionInfo = { isPending: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextFocusRow),\n                    direction: e.action, event: e };\n                var viewDifference = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextFocusRow) ? this.parent.getRowHeight()\n                    : e.action === 'downArrow' ? nextFocusRowInfo.bottom - scrollEleInfo.bottom\n                        : scrollEleInfo.top - nextFocusRowInfo.top;\n                scrollEle.scrollTop = e.action === 'downArrow' ? scrollEle.scrollTop + viewDifference\n                    : scrollEle.scrollTop - viewDifference;\n            }\n            else {\n                this.activeKey = this.empty;\n            }\n            return;\n        }\n        if (ele && ele.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_9__.rowCell)\n            && e && (e.action === 'upArrow' || e.action === 'downArrow' || e.action === 'shiftEnter')) {\n            var rowIndex = parseInt(ele.parentElement.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_9__.ariaRowIndex), 10) - 1;\n            if (e && (e.action === 'upArrow' || e.action === 'shiftEnter' || e.action === 'downArrow')) {\n                var scrollEle = this.parent.getContent().firstElementChild;\n                if (e.action === 'downArrow') {\n                    rowIndex += 1;\n                }\n                else {\n                    rowIndex -= 1;\n                }\n                this.rowIndex = rowIndex;\n                this.cellIndex = parseInt(ele.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_9__.ariaColIndex), 10) - 1;\n                var row = this.parent.getRowByIndex(rowIndex);\n                var page = this.parent.pageSettings.currentPage;\n                var visibleRowCount = Math.floor(scrollEle.offsetHeight / this.parent.getRowHeight()) - 1;\n                var emptyRow = false;\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row)) {\n                    emptyRow = true;\n                    if ((e.action === 'downArrow' && page === this.maxPage - 1) || ((e.action === 'upArrow' || e.action === 'shiftEnter') && page === 1)) {\n                        emptyRow = false;\n                    }\n                }\n                if (emptyRow || ((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.ensureLastRow)(row, this.parent) && e.action === 'downArrow')\n                    || ((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.ensureFirstRow)(row, this.parent.getRowHeight() * 2) && (e.action === 'upArrow' || e.action === 'shiftEnter'))) {\n                    this.activeKey = e.action;\n                    scrollEle.scrollTop = e.action === 'downArrow' ?\n                        (rowIndex - visibleRowCount) * this.parent.getRowHeight() : rowIndex * this.parent.getRowHeight();\n                }\n                else {\n                    this.activeKey = this.empty;\n                }\n                if (!this.parent.selectionSettings.checkboxOnly) {\n                    this.parent.selectRow(rowIndex);\n                }\n            }\n        }\n    };\n    VirtualContentRenderer.prototype.editActionBegin = function (e) {\n        this.editedRowIndex = e.index;\n        var rowData = (!this.parent.enableVirtualization && this.parent.enableColumnVirtualization) ?\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.parent.getCurrentViewRecords()[e.index]) : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.getRowObjectByIndex(e.index));\n        var keys = Object.keys(this.virtualData);\n        e.data = keys.length && !this.parent.editSettings.showAddNewRow ? this.virtualData : this.isInfiniteColumnvirtualization() ?\n            e.data : rowData;\n        if (this.enableCacheOnInfiniteColumnVirtual()) {\n            this.virtualInfiniteData = e.data;\n        }\n        e.isScroll = keys.length !== 0 && this.currentInfo.sentinelInfo && this.currentInfo.sentinelInfo.axis === 'X';\n    };\n    VirtualContentRenderer.prototype.getEditedRowObject = function () {\n        var rowObjects = this.parent.vcRows;\n        var editedrow;\n        for (var i = 0; i < rowObjects.length; i++) {\n            if (rowObjects[parseInt(i.toString(), 10)].index === this.editedRowIndex) {\n                editedrow = rowObjects[parseInt(i.toString(), 10)];\n            }\n        }\n        return editedrow;\n    };\n    VirtualContentRenderer.prototype.refreshCache = function (args) {\n        if (this.isInfiniteColumnvirtualization()) {\n            return;\n        }\n        var block = Math.ceil((this.editedRowIndex + 1) / this.getBlockSize());\n        if (this.parent.allowPaging && this.parent.enableColumnVirtualization) {\n            block = Math.ceil((this.editedRowIndex + 1 + ((this.parent.pageSettings.currentPage - 1) *\n                this.parent.pageSettings.pageSize)) / this.getBlockSize());\n        }\n        var index = (this.parent.allowPaging && this.parent.enableColumnVirtualization) ?\n            this.editedRowIndex % this.getBlockSize() : this.editedRowIndex - ((block - 1) * this.getBlockSize());\n        if (this.parent.groupSettings.columns.length) {\n            var editRowObject = this.getEditedRowObject();\n            if (editRowObject) {\n                editRowObject.data = args.data;\n            }\n        }\n        else {\n            this.vgenerator.cache[parseInt(block.toString(), 10)][parseInt(index.toString(), 10)].data = args.data;\n        }\n    };\n    VirtualContentRenderer.prototype.actionComplete = function (args) {\n        if (!(this.parent.enableVirtualization || this.parent.enableColumnVirtualization)) {\n            return;\n        }\n        var editRequestTypes = ['delete', 'save', 'cancel'];\n        var dataActionRequestTypes = ['sorting', 'filtering', 'grouping', 'refresh', 'searching', 'ungrouping', 'reorder'];\n        if (editRequestTypes.some(function (value) { return value === args.requestType; })) {\n            this.refreshOffsets();\n            this.refreshVirtualElement();\n        }\n        if (this.isNormaledit && (dataActionRequestTypes.some(function (value) { return value === args.requestType; })\n            || editRequestTypes.some(function (value) { return value === args.requestType; }))) {\n            this.isCancel = true;\n            this.isAdd =  false || this.parent.editSettings.showAddNewRow;\n            this.editedRowIndex = this.empty;\n            this.virtualData = {};\n            this.virtualInfiniteData = {};\n            if (this.parent.editModule) {\n                this.parent.editModule.editModule.previousData = undefined;\n            }\n        }\n        if (this.parent.enableColumnVirtualization && args.requestType === 'filterAfterOpen'\n            && this.currentInfo.columnIndexes && this.currentInfo.columnIndexes[0] > 0) {\n            this.parent.resetFilterDlgPosition(args.columnName);\n        }\n    };\n    VirtualContentRenderer.prototype.resetIsedit = function () {\n        if (this.parent.enableVirtualization && this.isNormaledit) {\n            if ((this.parent.editSettings.allowEditing && Object.keys(this.virtualData).length)\n                || (this.parent.editSettings.allowAdding && this.isAdd)) {\n                this.parent.isEdit = true;\n            }\n        }\n    };\n    VirtualContentRenderer.prototype.scrollAfterEdit = function () {\n        if (this.parent.editModule && this.parent.editSettings.allowEditing && this.isNormaledit) {\n            if (this.parent.element.querySelector('.e-gridform')) {\n                var editForm = this.parent.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_9__.editedRow);\n                var addForm = this.parent.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_9__.addedRow);\n                if (editForm || addForm) {\n                    var rowData = editForm ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.getRowObjectByIndex(this.editedRowIndex))\n                        : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.emptyRowData);\n                    var keys = Object.keys(this.virtualData);\n                    this.virtualData = keys.length ? this.getVirtualEditedData(this.virtualData) : this.getVirtualEditedData(rowData);\n                }\n            }\n        }\n    };\n    VirtualContentRenderer.prototype.createEmptyRowdata = function () {\n        var _this = this;\n        this.parent.columnModel.filter(function (e) {\n            _this.emptyRowData[e.field] = _this.empty;\n        });\n    };\n    VirtualContentRenderer.prototype.addActionBegin = function (args) {\n        if (this.isNormaledit) {\n            if (!Object.keys(this.emptyRowData).length) {\n                this.createEmptyRowdata();\n            }\n            this.isAdd = true;\n            var page = this.parent.pageSettings.currentPage;\n            if (!this.parent.frozenRows && this.content.scrollTop > 0 && this.parent.editSettings.newRowPosition === 'Top') {\n                this.isAdd = true;\n                this.onActionBegin();\n                args.startEdit = false;\n                this.content.scrollTop = 0;\n            }\n            if (page < this.maxPage - 1 && this.parent.editSettings.newRowPosition === 'Bottom') {\n                this.isAdd = true;\n                this.parent.setProperties({ pageSettings: { currentPage: this.maxPage - 1 } }, true);\n                args.startEdit = false;\n                this.content.scrollTop = this.offsets[this.offsetKeys.length];\n            }\n        }\n    };\n    /**\n     * @param {number} index - specifies the index\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    VirtualContentRenderer.prototype.getRowObjectByIndex = function (index) {\n        var data = this.getRowCollection(index, true);\n        return data;\n    };\n    VirtualContentRenderer.prototype.getBlockSize = function () {\n        return this.parent.pageSettings.pageSize >> 1;\n    };\n    VirtualContentRenderer.prototype.getBlockHeight = function () {\n        return this.getBlockSize() * this.parent.getRowHeight();\n    };\n    VirtualContentRenderer.prototype.isEndBlock = function (index) {\n        var totalBlocks = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(this.parent) ? this.getGroupedTotalBlocks() : this.getTotalBlocks();\n        return index >= totalBlocks || index === totalBlocks - 1;\n    };\n    VirtualContentRenderer.prototype.isOddPageSize = function () {\n        return this.parent.pageSettings.pageSize % 2 !== 0;\n    };\n    VirtualContentRenderer.prototype.getOddBlockSize = function () {\n        return this.isOddPageSize() ? this.parent.pageSettings.pageSize / 2 : this.getBlockSize();\n    };\n    VirtualContentRenderer.prototype.getGroupedTotalBlocks = function () {\n        var rows = this.parent.vcRows;\n        return Math.floor((rows.length / this.getOddBlockSize()) < 1 ? 1 : rows.length / this.getOddBlockSize());\n    };\n    VirtualContentRenderer.prototype.getTotalBlocks = function () {\n        return Math.ceil(this.count / this.getOddBlockSize());\n    };\n    VirtualContentRenderer.prototype.getColumnOffset = function (block) {\n        return this.vgenerator.cOffsets[parseInt(block.toString(), 10)] | 0;\n    };\n    VirtualContentRenderer.prototype.getModelGenerator = function () {\n        return new _services_virtual_row_model_generator__WEBPACK_IMPORTED_MODULE_7__.VirtualRowModelGenerator(this.parent);\n    };\n    VirtualContentRenderer.prototype.resetScrollPosition = function (action) {\n        if (this.actions.some(function (value) { return value === action; })) {\n            this.preventEvent = this.content.scrollTop !== 0;\n            this.content.scrollTop = 0;\n        }\n        if (action !== 'virtualscroll') {\n            this.isAdd = false;\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    VirtualContentRenderer.prototype.onActionBegin = function (e) {\n        //Update property silently..\n        this.parent.setProperties({ pageSettings: { currentPage: 1 } }, true);\n    };\n    VirtualContentRenderer.prototype.getRows = function () {\n        return this.isInfiniteColumnvirtualization() ? this.getInfiniteRows() : this.vgenerator.getRows();\n    };\n    VirtualContentRenderer.prototype.getRowByIndex = function (index) {\n        var row;\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(this.parent)) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(index) && this.parent.enableVirtualization && this.parent.groupSettings.columns.length) {\n                for (var i = 0; i < this.parent.getDataRows().length; i++) {\n                    if (parseInt(this.parent.getDataRows()[parseInt(i.toString(), 10)].getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_9__.ariaRowIndex), 10) - 1 ===\n                        index) {\n                        row = this.parent.getDataRows()[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            else {\n                row = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(index) ? this.parent.getDataRows()[parseInt(index.toString(), 10)] : undefined;\n            }\n        }\n        else if (!this.parent.enableVirtualization && this.parent.enableColumnVirtualization) {\n            row = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(index) ? this.enableCacheOnInfiniteColumnVirtual() ? this.parent.getDataRows()\n                .find(function (element) { return parseInt(element.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_9__.ariaRowIndex), 10) - 1 === index; }) :\n                this.parent.getDataRows()[parseInt(index.toString(), 10)] : undefined;\n        }\n        else if (this.prevInfo) {\n            row = this.getRowCollection(index, false);\n        }\n        return row;\n    };\n    VirtualContentRenderer.prototype.getMovableVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, false);\n    };\n    VirtualContentRenderer.prototype.getFrozenRightVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, false);\n    };\n    VirtualContentRenderer.prototype.getRowCollection = function (index, isRowObject) {\n        var prev = this.prevInfo.blockIndexes;\n        var startIdx = (prev[0] - 1) * this.getBlockSize();\n        if (this.parent.pageSettings.pageSize % 2 !== 0) {\n            startIdx += Math.floor((startIdx / this.getBlockSize()) / 2);\n        }\n        var rowCollection = this.parent.getDataRows();\n        var collection = isRowObject ? this.parent.getCurrentViewRecords() : rowCollection;\n        if (isRowObject && this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n            startIdx = parseInt(this.parent.getRows()[0].getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_9__.ariaRowIndex), 10) - 1;\n            collection = collection.filter(function (m) { return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(m.items); });\n        }\n        if (!isRowObject && this.parent.allowGrouping && this.parent.groupSettings.columns.length && rowCollection.length) {\n            startIdx = parseInt(rowCollection[0].getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_9__.ariaRowIndex), 10) - 1;\n        }\n        var selectedRow = collection[index - startIdx];\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n            if (!isRowObject) {\n                selectedRow = index <= this.parent.frozenRows ? rowCollection[parseInt(index.toString(), 10)]\n                    : rowCollection[(index - startIdx) + this.parent.frozenRows];\n            }\n            else {\n                selectedRow = index <= this.parent.frozenRows ? this.parent.getRowsObject()[parseInt(index.toString(), 10)].data\n                    : selectedRow;\n            }\n        }\n        return selectedRow;\n    };\n    VirtualContentRenderer.prototype.getVirtualRowIndex = function (index) {\n        var prev = this.prevInfo.blockIndexes;\n        var startIdx = (prev[0] - 1) * this.getBlockSize();\n        if (this.parent.enableVirtualization && this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n            var vGroupedRows = this.vgenerator.cache[prev[0]];\n            for (var i = 0; i < vGroupedRows.length; i++) {\n                if (vGroupedRows[\"\" + i].isDataRow) {\n                    startIdx = vGroupedRows[\"\" + i].index;\n                    break;\n                }\n            }\n        }\n        return startIdx + index;\n    };\n    /**\n     * @returns {void}\n     * @hidden */\n    VirtualContentRenderer.prototype.refreshOffsets = function () {\n        var gObj = this.parent;\n        var row = 0;\n        var blockSize = this.getBlockSize();\n        var oddBlockSize = this.getOddBlockSize();\n        var total = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(this.parent) ? this.getGroupedTotalBlocks() : this.getTotalBlocks();\n        this.prevHeight = this.offsets[parseInt(total.toString(), 10)];\n        this.maxBlock = total % 2 === 0 ? total - 2 : total - 1;\n        this.offsets = {};\n        //Row offset update\n        // eslint-disable-next-line prefer-spread\n        var blocks = Array.apply(null, Array(total)).map(function () { return ++row; });\n        for (var i = 0; i < blocks.length; i++) {\n            var tmp = (this.vgenerator.cache[blocks[parseInt(i.toString(), 10)]] || []).length;\n            var rem = !(0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(this.parent) ? this.isOddPageSize() ?\n                Math.ceil(this.count % oddBlockSize) : this.count % blockSize : this.isOddPageSize() ?\n                Math.ceil(gObj.vcRows.length % oddBlockSize) : (gObj.vcRows.length % blockSize);\n            var size = !(0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(this.parent) && blocks[parseInt(i.toString(), 10)] in this.vgenerator.cache ?\n                tmp * this.parent.getRowHeight() : rem && blocks[parseInt(i.toString(), 10)] === total ? rem * this.parent.getRowHeight() :\n                this.getBlockHeight();\n            if (this.isOddPageSize() && !(blocks[parseInt(i.toString(), 10)] in this.vgenerator.cache)\n                && !(rem && blocks[parseInt(i.toString(), 10)] === total)) {\n                size = (blocks[parseInt(i.toString(), 10)] % 2 !== 0 ? Math.floor(oddBlockSize)\n                    : Math.ceil(oddBlockSize)) * this.parent.getRowHeight();\n            }\n            // let size: number = this.parent.groupSettings.columns.length && block in this.vgenerator.cache ?\n            // tmp * getRowHeight() : this.getBlockHeight();\n            this.offsets[blocks[parseInt(i.toString(), 10)]] = (this.offsets[blocks[parseInt(i.toString(), 10)] - 1] | 0) + size;\n            this.tmpOffsets[blocks[parseInt(i.toString(), 10)]] = this.offsets[blocks[parseInt(i.toString(), 10)] - 1] | 0;\n        }\n        this.offsetKeys = Object.keys(this.offsets);\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(this.parent)) {\n            this.parent.vGroupOffsets = this.offsets;\n        }\n        //Column offset update\n        if (this.parent.enableColumnVirtualization) {\n            this.vgenerator.refreshColOffsets();\n        }\n    };\n    VirtualContentRenderer.prototype.refreshVirtualElement = function () {\n        this.vgenerator.refreshColOffsets();\n        this.setVirtualHeight();\n    };\n    VirtualContentRenderer.prototype.setVisible = function (columns) {\n        var gObj = this.parent;\n        var rows = [];\n        rows = this.getRows();\n        var testRow;\n        rows.some(function (r) { if (r.isDataRow) {\n            testRow = r;\n        } return r.isDataRow; });\n        var isRefresh = true;\n        if (!gObj.groupSettings.columns.length && testRow) {\n            isRefresh = false;\n        }\n        var tr = gObj.getDataRows();\n        for (var c = 0, clen = columns.length; c < clen; c++) {\n            var column = columns[parseInt(c.toString(), 10)];\n            var idx = gObj.getNormalizedColumnIndex(column.uid);\n            var displayVal = column.visible === true ? '' : 'none';\n            var colGrp = this.getColGroup().children;\n            if (idx !== -1 && testRow && idx < testRow.cells.length) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(colGrp[parseInt(idx.toString(), 10)], { 'display': displayVal });\n            }\n            if (!isRefresh) {\n                var width = void 0;\n                if (column.width) {\n                    if (column.visible) {\n                        width = this.virtualEle.wrapper.offsetWidth + parseInt(column.width.toString(), 10);\n                    }\n                    else {\n                        width = this.virtualEle.wrapper.offsetWidth - parseInt(column.width.toString(), 10);\n                    }\n                }\n                if (width > gObj.width) {\n                    this.setDisplayNone(tr, idx, displayVal, rows);\n                    if (this.parent.enableColumnVirtualization) {\n                        this.virtualEle.setWrapperWidth(width + '');\n                    }\n                    this.refreshVirtualElement();\n                }\n                else {\n                    isRefresh = true;\n                }\n            }\n            if (!this.parent.invokedFromMedia && column.hideAtMedia) {\n                this.parent.updateMediaColumns(column);\n            }\n            this.parent.invokedFromMedia = false;\n        }\n        if (isRefresh) {\n            this.refreshContentRows({ requestType: 'refresh' });\n        }\n        else {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.partialRefresh, { rows: rows, args: { isFrozen: false, rows: rows } });\n        }\n    };\n    VirtualContentRenderer.prototype.selectVirtualRow = function (args) {\n        var _this = this;\n        var count = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(this.parent) ? this.vgenerator.recordsCount : this.count;\n        args.isAvailable = args.selectedIndex < count;\n        if (args.isAvailable && !this.isContextMenuOpen && this.activeKey !== 'upArrow'\n            && this.activeKey !== 'downArrow' && !this.isSelection && !this.requestTypes.some(function (value) { return value === _this.requestType; })\n            && !this.parent.selectionModule.isInteracted) {\n            var selectedRow = this.parent.getRowByIndex(args.selectedIndex);\n            var rowHeight = this.parent.getRowHeight();\n            if (!selectedRow || !this.isRowInView(selectedRow)) {\n                this.isSelection = true;\n                this.selectedRowIndex = args.selectedIndex;\n                var scrollTop = args.selectedIndex * rowHeight;\n                if ((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(this.parent)) {\n                    var selectedRowObjectIndex = this.parent.vcRows\n                        .findIndex(function (row) { return row.index === args.selectedIndex; });\n                    scrollTop = selectedRowObjectIndex !== -1 ? selectedRowObjectIndex * rowHeight : undefined;\n                    this.isSelection = selectedRowObjectIndex !== -1 ? this.isSelection : false;\n                }\n                else if (this.parent.groupSettings.columns.length && this.parent.getDataModule().isRemote()) {\n                    var page = Math.ceil((args.selectedIndex + 1) / this.parent.pageSettings.pageSize);\n                    var blockIndexes = this.vgenerator.getBlockIndexes(page);\n                    scrollTop = this.offsets[blockIndexes[0]];\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(scrollTop)) {\n                    var direction = this.content.scrollTop < scrollTop ? 'down' : 'up';\n                    this.selectRowIndex = args.selectedIndex;\n                    this.content.scrollTop = scrollTop;\n                    this.isSelectionScroll = this.observer.check(direction);\n                }\n            }\n        }\n        this.requestType = this.empty;\n    };\n    VirtualContentRenderer.prototype.isRowInView = function (row) {\n        var top = row.getBoundingClientRect().top;\n        var bottom = row.getBoundingClientRect().bottom;\n        return (top >= this.content.getBoundingClientRect().top && bottom <= this.content.getBoundingClientRect().bottom);\n    };\n    return VirtualContentRenderer;\n}(_content_renderer__WEBPACK_IMPORTED_MODULE_4__.ContentRender));\n\n/**\n * @hidden\n */\nvar VirtualHeaderRenderer = /** @class */ (function (_super) {\n    __extends(VirtualHeaderRenderer, _super);\n    function VirtualHeaderRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.virtualEle = new VirtualElementHandler();\n        _this.isMovable = false;\n        _this.gen = new _services_virtual_row_model_generator__WEBPACK_IMPORTED_MODULE_7__.VirtualRowModelGenerator(_this.parent);\n        _this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.columnVisibilityChanged, _this.setVisible, _this);\n        _this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.refreshVirtualBlock, function (e) { return e.virtualInfo.sentinelInfo.axis === 'X' ? _this.refreshUI() : null; }, _this);\n        return _this;\n    }\n    VirtualHeaderRenderer.prototype.renderTable = function () {\n        this.gen.refreshColOffsets();\n        this.parent.setColumnIndexesInView(this.gen.getColumnIndexes(this.getPanel().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_9__.headerContent)));\n        _super.prototype.renderTable.call(this);\n        this.virtualEle.table = this.getTable();\n        this.virtualEle.content = this.getPanel().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_9__.headerContent);\n        this.virtualEle.content.style.position = 'relative';\n        this.virtualEle.renderWrapper();\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        (!(this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && this.parent.enableColumnVirtualization) ?\n            this.virtualEle.renderPlaceHolder() : this.virtualEle.renderPlaceHolder('absolute');\n    };\n    VirtualHeaderRenderer.prototype.appendContent = function (table) {\n        this.virtualEle.wrapper.appendChild(table);\n    };\n    VirtualHeaderRenderer.prototype.refreshUI = function () {\n        this.gen.refreshColOffsets();\n        this.parent.setColumnIndexesInView(this.gen.getColumnIndexes(this.getPanel().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_9__.headerContent)));\n        _super.prototype.refreshUI.call(this);\n    };\n    VirtualHeaderRenderer.prototype.setVisible = function (columns) {\n        var gObj = this.parent;\n        var displayVal;\n        var idx;\n        var needFullRefresh;\n        for (var c = 0, clen = columns.length; c < clen; c++) {\n            var column = columns[parseInt(c.toString(), 10)];\n            idx = gObj.getNormalizedColumnIndex(column.uid);\n            displayVal = column.visible ? '' : 'none';\n            var colGrp = this.getColGroup().children;\n            if (gObj.getColumnByField(column.field)) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(colGrp[parseInt(idx.toString(), 10)], { 'display': displayVal });\n            }\n            if (gObj.enableColumnVirtualization && !gObj.groupSettings.columns.length) {\n                var tablewidth = void 0;\n                if (column.visible) {\n                    tablewidth = this.virtualEle.wrapper.offsetWidth + parseInt(column.width.toString(), 10);\n                }\n                else {\n                    tablewidth = this.virtualEle.wrapper.offsetWidth - parseInt(column.width.toString(), 10);\n                }\n                if (tablewidth > gObj.width) {\n                    this.setDisplayNone(column, displayVal);\n                    this.virtualEle.setWrapperWidth(tablewidth + '');\n                    this.gen.refreshColOffsets();\n                }\n                else {\n                    needFullRefresh = true;\n                }\n            }\n            else {\n                needFullRefresh = true;\n            }\n            if (needFullRefresh) {\n                this.refreshUI();\n            }\n        }\n    };\n    VirtualHeaderRenderer.prototype.setDisplayNone = function (col, displayVal) {\n        var table = this.getTable();\n        for (var _i = 0, _a = [].slice.apply(table.querySelectorAll('th.e-headercell')); _i < _a.length; _i++) {\n            var ele = _a[_i];\n            if (ele.querySelector('[e-mappinguid]') &&\n                ele.querySelector('[e-mappinguid]').getAttribute('e-mappinguid') === col.uid) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(ele, { 'display': displayVal });\n                if (displayVal === '') {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([ele], 'e-hide');\n                }\n                break;\n            }\n        }\n    };\n    return VirtualHeaderRenderer;\n}(_header_renderer__WEBPACK_IMPORTED_MODULE_5__.HeaderRender));\n\n/**\n * @hidden\n */\nvar VirtualElementHandler = /** @class */ (function () {\n    function VirtualElementHandler() {\n    }\n    VirtualElementHandler.prototype.renderWrapper = function (height) {\n        this.wrapper = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-virtualtable' });\n        this.wrapper.style.minHeight = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(height);\n        this.wrapper.appendChild(this.table);\n        this.content.appendChild(this.wrapper);\n    };\n    VirtualElementHandler.prototype.renderPlaceHolder = function (position) {\n        if (position === void 0) { position = 'relative'; }\n        this.placeholder = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-virtualtrack' });\n        this.placeholder.style.position = position;\n        this.content.appendChild(this.placeholder);\n    };\n    VirtualElementHandler.prototype.renderFrozenWrapper = function (height) {\n        this.wrapper = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-virtualtable' });\n        this.wrapper.style.cssText = \"min-height:\" + (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(height) + \"; display: flex;\";\n        this.content.appendChild(this.wrapper);\n    };\n    VirtualElementHandler.prototype.renderFrozenPlaceHolder = function () {\n        this.placeholder = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-virtualtrack' });\n        this.content.appendChild(this.placeholder);\n    };\n    VirtualElementHandler.prototype.adjustTable = function (xValue, yValue) {\n        this.wrapper.style.transform = \"translate(\" + xValue + \"px, \" + yValue + \"px)\";\n    };\n    VirtualElementHandler.prototype.setWrapperWidth = function (width, full) {\n        if (width && width.indexOf('%') === -1 && !(this.content.getBoundingClientRect().width < parseInt(width, 10))) {\n            width = undefined;\n            full = true;\n        }\n        this.wrapper.style.width = width ? width + \"px\" : full ? '100%' : '';\n    };\n    VirtualElementHandler.prototype.setVirtualHeight = function (height, width) {\n        this.placeholder.style.height = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(height) ? height + \"px\" : '0px';\n        if (width && width.indexOf('%') === -1 && !(this.content.getBoundingClientRect().width < parseInt(width, 10))) {\n            width = '100%';\n        }\n        this.placeholder.style.width = width;\n    };\n    VirtualElementHandler.prototype.setFreezeWrapperWidth = function (wrapper, width, full) {\n        wrapper.style.width = width ? width + \"px\" : full ? '100%' : '';\n    };\n    return VirtualElementHandler;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-grids/src/grid/renderer/virtual-content-renderer.js?");

/***/ })

}]);