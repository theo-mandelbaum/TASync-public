"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_base_unique-format_js-d-2e7ff96f"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/unique-format.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/unique-format.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WUniqueFormat: () => (/* binding */ WUniqueFormat)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dictionary */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/dictionary.js\");\n/* eslint-disable */\n\n\n/**\n * @private\n */\nvar WUniqueFormat = /** @class */ (function () {\n    function WUniqueFormat(type) {\n        this.referenceCount = 0;\n        this.uniqueFormatType = type;\n        this.propertiesHash = new _dictionary__WEBPACK_IMPORTED_MODULE_1__.Dictionary();\n    }\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.isEqual = function (source, property, modifiedValue) {\n        var isEqual = false;\n        switch (this.uniqueFormatType) {\n            case 1:\n                isEqual = this.isBorderEqual(source, property, modifiedValue);\n                break;\n            case 2:\n                isEqual = this.isCharacterFormatEqual(source, property, modifiedValue);\n                break;\n            case 3:\n                isEqual = this.isParagraphFormatEqual(source, property, modifiedValue);\n                break;\n            case 4:\n                isEqual = this.isCellFormatEqual(source, property, modifiedValue);\n                break;\n            case 5:\n                isEqual = this.isShadingEqual(source, property, modifiedValue);\n                break;\n            case 6:\n                isEqual = this.isRowFormatEqual(source, property, modifiedValue);\n                break;\n            case 7:\n                isEqual = this.isListFormatEqual(source, property, modifiedValue);\n                break;\n            case 8:\n                isEqual = this.isTableFormatEqual(source, property, modifiedValue);\n                break;\n            case 9:\n                isEqual = this.isListLevelEqual(source, property, modifiedValue);\n                break;\n            case 10:\n                isEqual = this.isSectionFormatEqual(source, property, modifiedValue);\n                break;\n            case 11:\n                isEqual = this.isColumnFormatEqual(source, property, modifiedValue);\n                break;\n            default:\n                break;\n        }\n        return isEqual;\n    };\n    WUniqueFormat.prototype.isNotEqual = function (property, source, modifiedProperty, modifiedValue, uniqueFormatType) {\n        var targetValue = undefined;\n        var propertyType = WUniqueFormat.getPropertyType(uniqueFormatType, property);\n        if (this.propertiesHash.containsKey(propertyType)) {\n            targetValue = this.propertiesHash.get(propertyType);\n        }\n        var sourceValue = undefined;\n        if (property === modifiedProperty) {\n            sourceValue = modifiedValue;\n        }\n        else if (source.containsKey(propertyType)) {\n            sourceValue = source.get(propertyType);\n        }\n        if (!(targetValue === sourceValue || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(targetValue) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(sourceValue) && targetValue === sourceValue))) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    WUniqueFormat.getPropertyType = function (uniqueFormatType, property) {\n        var type = 0;\n        switch (uniqueFormatType) {\n            case 1:\n                type = this.getBorderPropertyType(property);\n                break;\n            case 2:\n                type = this.getCharacterFormatPropertyType(property);\n                break;\n            case 3:\n                type = this.getParaFormatPropertyType(property);\n                break;\n            case 4:\n                type = this.getCellFormatPropertyType(property);\n                break;\n            case 5:\n                type = this.getShadingPropertyType(property);\n                break;\n            case 6:\n                type = this.getRowFormatType(property);\n                break;\n            case 7:\n                type = this.getListFormatType(property);\n                break;\n            case 8:\n                type = this.getTableFormatType(property);\n                break;\n            case 9:\n                type = this.getListLevelType(property);\n                break;\n            case 10:\n                type = this.getSectionFormatType(property);\n                break;\n            case 11:\n                type = this.getColumnFormatType(property);\n                break;\n            default:\n                break;\n        }\n        return type;\n    };\n    WUniqueFormat.getRowFormatType = function (property) {\n        switch (property) {\n            case 'allowBreakAcrossPages': return 1;\n            case 'isHeader': return 2;\n            case 'height': return 3;\n            case 'heightType': return 4;\n            case 'gridBefore': return 5;\n            case 'gridBeforeWidth': return 6;\n            case 'gridBeforeWidthType': return 7;\n            case 'gridAfter': return 8;\n            case 'gridAfterWidth': return 9;\n            case 'gridAfterWidthType': return 10;\n            case 'leftMargin': return 11;\n            case 'topMargin': return 12;\n            case 'bottomMargin': return 13;\n            case 'rightMargin': return 14;\n            case 'leftIndent': return 15;\n            default: return 0;\n        }\n    };\n    WUniqueFormat.getListFormatType = function (property) {\n        switch (property) {\n            case 'listId': return 1;\n            case 'listLevelNumber': return 2;\n            case 'nsid': return 3;\n            default: return 0;\n        }\n    };\n    WUniqueFormat.getTableFormatType = function (property) {\n        switch (property) {\n            case 'leftMargin': return 1;\n            case 'rightMargin': return 2;\n            case 'topMargin': return 3;\n            case 'bottomMargin': return 4;\n            case 'cellSpacing': return 5;\n            case 'leftIndent': return 6;\n            case 'tableAlignment': return 7;\n            case 'preferredWidth': return 8;\n            case 'preferredWidthType': return 9;\n            case 'bidi': return 10;\n            case 'allowAutoFit': return 11;\n            case 'horizontalPositionAbs': return 12;\n            case 'horizontalPosition': return 13;\n            default: return 0;\n        }\n    };\n    WUniqueFormat.getListLevelType = function (property) {\n        switch (property) {\n            case 'listLevelPattern': return 1;\n            case 'startAt': return 2;\n            case 'followCharacter': return 3;\n            case 'numberFormat': return 4;\n            case 'restartLevel': return 5;\n            case 'isLegalStyleNumbering': return 6;\n            case 'paraStyleName': return 7;\n            default: return 0;\n        }\n    };\n    WUniqueFormat.getShadingPropertyType = function (property) {\n        switch (property) {\n            case 'backgroundColor': return 1;\n            case 'foregroundColor': return 2;\n            case 'textureStyle': return 3;\n            default: return 0;\n        }\n    };\n    WUniqueFormat.getCellFormatPropertyType = function (property) {\n        switch (property) {\n            case 'leftMargin': return 1;\n            case 'rightMargin': return 2;\n            case 'topMargin': return 3;\n            case 'bottomMargin': return 4;\n            case 'columnSpan': return 5;\n            case 'rowSpan': return 6;\n            case 'verticalAlignment': return 7;\n            case 'preferredWidthType': return 8;\n            case 'preferredWidth': return 9;\n            case 'cellWidth': return 10;\n            default: return 0;\n        }\n    };\n    WUniqueFormat.getBorderPropertyType = function (property) {\n        switch (property) {\n            case 'color': return 1;\n            case 'lineStyle': return 2;\n            case 'lineWidth': return 3;\n            case 'shadow': return 4;\n            case 'space': return 5;\n            case 'hasNoneStyle': return 6;\n            default: return 0;\n        }\n    };\n    WUniqueFormat.getCharacterFormatPropertyType = function (property) {\n        switch (property) {\n            case 'fontColor': return 1;\n            case 'fontFamily': return 2;\n            case 'fontSize': return 3;\n            case 'bold': return 4;\n            case 'italic': return 5;\n            case 'underline': return 6;\n            case 'strikethrough': return 7;\n            case 'baselineAlignment': return 8;\n            case 'highlightColor': return 9;\n            case 'bidi': return 10;\n            case 'bdo': return 11;\n            case 'boldBidi': return 12;\n            case 'italicBidi': return 13;\n            case 'fontFamilyBidi': return 14;\n            case 'fontSizeBidi': return 15;\n            case 'allCaps': return 16;\n            case 'localeIdBidi': return 17;\n            case 'complexScript': return 18;\n            case 'fontFamilyFarEast': return 19;\n            case 'fontFamilyAscii': return 20;\n            case 'fontFamilyNonFarEast': return 21;\n            case 'localeIdAscii': return 22;\n            case 'localeIdFarEast': return 23;\n            case 'characterSpacing': return 24;\n            case 'scaling': return 25;\n            case 'hidden': return 26;\n            case 'underlineColor': return 27;\n            case 'fontHintType': return 28;\n            default: return 0;\n        }\n    };\n    WUniqueFormat.getParaFormatPropertyType = function (property) {\n        switch (property) {\n            case 'leftIndent': return 1;\n            case 'rightIndent': return 2;\n            case 'firstLineIndent': return 3;\n            case 'textAlignment': return 4;\n            case 'beforeSpacing': return 5;\n            case 'afterSpacing': return 6;\n            case 'lineSpacing': return 7;\n            case 'lineSpacingType': return 8;\n            case 'outlineLevel': return 9;\n            case 'bidi': return 10;\n            case 'contextualSpacing': return 11;\n            case 'keepWithNext': return 12;\n            case 'keepLinesTogether': return 13;\n            case 'widowControl': return 14;\n            case 'spaceBeforeAuto': return 15;\n            case 'spaceAfterAuto': return 16;\n            default: return 0;\n        }\n    };\n    WUniqueFormat.getColumnFormatType = function (property) {\n        switch (property) {\n            case 'width': return 1;\n            case 'space': return 2;\n            default: return 0;\n        }\n    };\n    WUniqueFormat.getSectionFormatType = function (property) {\n        switch (property) {\n            case 'headerDistance': return 1;\n            case 'footerDistance': return 2;\n            case 'differentFirstPage': return 3;\n            case 'differentOddAndEvenPages': return 4;\n            case 'pageWidth': return 5;\n            case 'pageHeight': return 6;\n            case 'leftMargin': return 7;\n            case 'topMargin': return 8;\n            case 'rightMargin': return 9;\n            case 'bottomMargin': return 10;\n            case 'bidi': return 11;\n            case 'restartPageNumbering': return 12;\n            case 'pageStartingNumber': return 13;\n            case 'endnoteNumberFormat': return 14;\n            case 'endnotePosition': return 15;\n            case 'footNoteNumberFormat': return 16;\n            case 'footnotePosition': return 17;\n            case 'restartIndexForEndnotes': return 18;\n            case 'restartIndexForFootnotes': return 19;\n            case 'initialFootNoteNumber': return 20;\n            case 'initialEndNoteNumber': return 21;\n            case 'pageNumberStyle': return 22;\n            case 'numberOfColumns': return 23;\n            case 'equalWidth': return 24;\n            case 'lineBetweenColumns': return 25;\n            case 'columns': return 26;\n            case 'breakCode': return 27;\n            default: return 0;\n        }\n    };\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.isBorderEqual = function (source, modifiedProperty, modifiedValue) {\n        if (this.isNotEqual('color', source, modifiedProperty, modifiedValue, 1)) {\n            return false;\n        }\n        if (this.isNotEqual('lineStyle', source, modifiedProperty, modifiedValue, 1)) {\n            return false;\n        }\n        if (this.isNotEqual('lineWidth', source, modifiedProperty, modifiedValue, 1)) {\n            return false;\n        }\n        if (this.isNotEqual('shadow', source, modifiedProperty, modifiedValue, 1)) {\n            return false;\n        }\n        if (this.isNotEqual('space', source, modifiedProperty, modifiedValue, 1)) {\n            return false;\n        }\n        if (this.isNotEqual('hasNoneStyle', source, modifiedProperty, modifiedValue, 1)) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.isCharacterFormatEqual = function (source, modifiedProperty, modifiedValue) {\n        if (this.isNotEqual('fontColor', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('fontFamily', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('fontSize', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('bold', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('italic', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('underline', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('strikethrough', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('baselineAlignment', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('highlightColor', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('bidi', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('bdo', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('fontColor', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('fontFamilyBidi', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('fontSizeBidi', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('boldBidi', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('italicBidi', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('allCaps', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('localeIdBidi', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('localeIdAscii', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('localeIdFarEast', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('complexScript', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('hidden', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('fontFamilyFarEast', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('fontFamilyAscii', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('fontFamilyNonFarEast', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('characterSpacing', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('scaling', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('underlineColor', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        if (this.isNotEqual('fontHintType', source, modifiedProperty, modifiedValue, 2)) {\n            return false;\n        }\n        return true;\n    };\n    WUniqueFormat.prototype.isParagraphFormatEqual = function (source, modifiedProperty, modifiedValue) {\n        if (this.isNotEqual('leftIndent', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('rightIndent', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('firstLineIndent', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('textAlignment', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('beforeSpacing', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('afterSpacing', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('spaceBeforeAuto', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('spaceAfterAuto', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('lineSpacing', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('lineSpacingType', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('outlineLevel', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('bidi', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('contextualSpacing', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('keepWithNext', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('keepLinesTogether', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        if (this.isNotEqual('widowControl', source, modifiedProperty, modifiedValue, 3)) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.isCellFormatEqual = function (source, modifiedProperty, modifiedValue) {\n        if (this.isNotEqual('leftMargin', source, modifiedProperty, modifiedValue, 4)) {\n            return false;\n        }\n        if (this.isNotEqual('rightMargin', source, modifiedProperty, modifiedValue, 4)) {\n            return false;\n        }\n        if (this.isNotEqual('topMargin', source, modifiedProperty, modifiedValue, 4)) {\n            return false;\n        }\n        if (this.isNotEqual('bottomMargin', source, modifiedProperty, modifiedValue, 4)) {\n            return false;\n        }\n        if (this.isNotEqual('columnSpan', source, modifiedProperty, modifiedValue, 4)) {\n            return false;\n        }\n        if (this.isNotEqual('rowSpan', source, modifiedProperty, modifiedValue, 4)) {\n            return false;\n        }\n        if (this.isNotEqual('verticalAlignment', source, modifiedProperty, modifiedValue, 4)) {\n            return false;\n        }\n        if (this.isNotEqual('preferredWidthType', source, modifiedProperty, modifiedValue, 4)) {\n            return false;\n        }\n        if (this.isNotEqual('preferredWidth', source, modifiedProperty, modifiedValue, 4)) {\n            return false;\n        }\n        if (this.isNotEqual('cellWidth', source, modifiedProperty, modifiedValue, 4)) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.isShadingEqual = function (source, modifiedProperty, modifiedValue) {\n        if (this.isNotEqual('backgroundColor', source, modifiedProperty, modifiedValue, 5)) {\n            return false;\n        }\n        if (this.isNotEqual('foregroundColor', source, modifiedProperty, modifiedValue, 5)) {\n            return false;\n        }\n        if (this.isNotEqual('textureStyle', source, modifiedProperty, modifiedValue, 5)) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.isRowFormatEqual = function (source, modifiedProperty, modifiedValue) {\n        if (this.isNotEqual('allowBreakAcrossPages', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        if (this.isNotEqual('isHeader', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        if (this.isNotEqual('height', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        if (this.isNotEqual('heightType', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        if (this.isNotEqual('gridBefore', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        if (this.isNotEqual('gridBeforeWidth', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        if (this.isNotEqual('gridBeforeWidthType', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        if (this.isNotEqual('gridAfter', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        if (this.isNotEqual('gridAfterWidth', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        if (this.isNotEqual('gridAfterWidthType', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        if (this.isNotEqual('leftMargin', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        if (this.isNotEqual('topMargin', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        if (this.isNotEqual('bottomMargin', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        if (this.isNotEqual('rightMargin', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        if (this.isNotEqual('leftIndent', source, modifiedProperty, modifiedValue, 6)) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.isListFormatEqual = function (source, modifiedProperty, modifiedValue) {\n        if (this.isNotEqual('listId', source, modifiedProperty, modifiedValue, 7)) {\n            return false;\n        }\n        if (this.isNotEqual('listLevelNumber', source, modifiedProperty, modifiedValue, 7)) {\n            return false;\n        }\n        if (this.isNotEqual('nsid', source, modifiedProperty, modifiedValue, 7)) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.isTableFormatEqual = function (source, modifiedProperty, modifiedValue) {\n        if (this.isNotEqual('leftMargin', source, modifiedProperty, modifiedValue, 8)) {\n            return false;\n        }\n        if (this.isNotEqual('rightMargin', source, modifiedProperty, modifiedValue, 8)) {\n            return false;\n        }\n        if (this.isNotEqual('topMargin', source, modifiedProperty, modifiedValue, 8)) {\n            return false;\n        }\n        if (this.isNotEqual('bottomMargin', source, modifiedProperty, modifiedValue, 8)) {\n            return false;\n        }\n        if (this.isNotEqual('cellSpacing', source, modifiedProperty, modifiedValue, 8)) {\n            return false;\n        }\n        if (this.isNotEqual('leftIndent', source, modifiedProperty, modifiedValue, 8)) {\n            return false;\n        }\n        if (this.isNotEqual('tableAlignment', source, modifiedProperty, modifiedValue, 8)) {\n            return false;\n        }\n        if (this.isNotEqual('preferredWidth', source, modifiedProperty, modifiedValue, 8)) {\n            return false;\n        }\n        if (this.isNotEqual('preferredWidthType', source, modifiedProperty, modifiedValue, 8)) {\n            return false;\n        }\n        if (this.isNotEqual('bidi', source, modifiedProperty, modifiedValue, 8)) {\n            return false;\n        }\n        if (this.isNotEqual('allowAutoFit', source, modifiedProperty, modifiedValue, 8)) {\n            return false;\n        }\n        if (this.isNotEqual('horizontalPositionAbs', source, modifiedProperty, modifiedValue, 8)) {\n            return false;\n        }\n        if (this.isNotEqual('horizontalPosition', source, modifiedProperty, modifiedValue, 8)) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.isListLevelEqual = function (source, modifiedProperty, modifiedValue) {\n        if (this.isNotEqual('listLevelPattern', source, modifiedProperty, modifiedValue, 9)) {\n            return false;\n        }\n        if (this.isNotEqual('startAt', source, modifiedProperty, modifiedValue, 9)) {\n            return false;\n        }\n        if (this.isNotEqual('followCharacter', source, modifiedProperty, modifiedValue, 9)) {\n            return false;\n        }\n        if (this.isNotEqual('numberFormat', source, modifiedProperty, modifiedValue, 9)) {\n            return false;\n        }\n        if (this.isNotEqual('paraStyleName', source, modifiedProperty, modifiedValue, 9)) {\n            return false;\n        }\n        if (this.isNotEqual('restartLevel', source, modifiedProperty, modifiedValue, 9)) {\n            return false;\n        }\n        if (this.isNotEqual('isLegalStyleNumbering', source, modifiedProperty, modifiedValue, 9)) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.isSectionFormatEqual = function (source, modifiedProperty, modifiedValue) {\n        if (this.isNotEqual('headerDistance', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('footerDistance', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('differentFirstPage', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('differentOddAndEvenPages', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('pageWidth', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('pageHeight', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('leftMargin', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('topMargin', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('rightMargin', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('bottomMargin', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('bidi', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('restartPageNumbering', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('pageStartingNumber', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('endnoteNumberFormat', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('endnotePosition', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('footNoteNumberFormat', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('footnotePosition', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('restartIndexForEndnotes', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('restartIndexForFootnotes', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('initialFootNoteNumber', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('initialEndNoteNumber', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('pageNumberStyle', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('numberOfColumns', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('equalWidth', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('lineBetweenColumns', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        if (this.isNotEqual('breakCode', source, modifiedProperty, modifiedValue, 10)) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.isColumnFormatEqual = function (source, modifiedProperty, modifiedValue) {\n        if (this.isNotEqual('width', source, modifiedProperty, modifiedValue, 11)) {\n            return false;\n        }\n        if (this.isNotEqual('space', source, modifiedProperty, modifiedValue, 11)) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.cloneItems = function (format, property, value, uniqueFormatType) {\n        var propertyType = WUniqueFormat.getPropertyType(uniqueFormatType, property);\n        var keys = format.propertiesHash.keys;\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === propertyType) {\n                this.propertiesHash.add(propertyType, value);\n            }\n            else {\n                this.propertiesHash.add(keys[i], format.propertiesHash.get(keys[i]));\n            }\n        }\n        if (!format.propertiesHash.containsKey(propertyType)) {\n            this.propertiesHash.add(propertyType, value);\n        }\n    };\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.mergeProperties = function (format) {\n        var hash = format.cloneProperties();\n        var keys = this.propertiesHash.keys;\n        for (var i = 0; i < keys.length; i++) {\n            if (!hash.containsKey(keys[i])) {\n                hash.add(keys[i], this.propertiesHash.get(keys[i]));\n            }\n        }\n        return hash;\n    };\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.cloneProperties = function () {\n        var hash = new _dictionary__WEBPACK_IMPORTED_MODULE_1__.Dictionary();\n        var keys = this.propertiesHash.keys;\n        for (var i = 0; i < keys.length; i++) {\n            hash.add(keys[i], this.propertiesHash.get(keys[i]));\n        }\n        return hash;\n    };\n    // public cloneItemsInternal(format: WUniqueFormat): void {\n    //     let keys: number[] = format.propertiesHash.getItem();\n    //     for (let i: number = 0; i < keys.length; i++) {\n    //         this.propertiesHash.add(keys[i], format.propertiesHash.get(keys[i]));\n    //     }\n    //     this.referenceCount = format.referenceCount;\n    // }\n    /**\n     * @private\n     */\n    WUniqueFormat.prototype.destroy = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.propertiesHash)) {\n            this.propertiesHash.destroy();\n        }\n        this.propertiesHash = undefined;\n        this.referenceCount = undefined;\n        this.uniqueFormatType = undefined;\n    };\n    return WUniqueFormat;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/unique-format.js?");

/***/ })

}]);