"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_editor-h-a7785fef"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor-history/editor-history.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor-history/editor-history.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditorHistory: () => (/* binding */ EditorHistory)\n/* harmony export */ });\n/* harmony import */ var _base_dictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/dictionary */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/dictionary.js\");\n/* harmony import */ var _selection_selection_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selection/selection-helper */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/selection/selection-helper.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../index */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_history_info__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./base-history-info */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor-history/base-history-info.js\");\n/* harmony import */ var _history_helper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./history-helper */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor-history/history-helper.js\");\n/* harmony import */ var _history_info__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./history-info */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor-history/history-info.js\");\n/* harmony import */ var _format_paragraph_format__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../format/paragraph-format */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/format/paragraph-format.js\");\n/* harmony import */ var _editor_editor_helper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../editor/editor-helper */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor/editor-helper.js\");\n\n\n\n\n\n\n\n\n\n/**\n *  `EditorHistory` Module class is used to handle history preservation\n */\nvar EditorHistory = /** @class */ (function () {\n    /**\n     * @param {DocumentEditor} node - Specified the document editor.\n     * @private\n     */\n    function EditorHistory(node) {\n        //Fields\n        this.undoStackIn = [];\n        this.redoStackIn = [];\n        /**\n         * @private\n         */\n        this.historyInfoStack = [];\n        this.isUndoGroupingEnded = true;\n        /**\n         * @private\n         */\n        this.isUndoing = false;\n        /**\n         * @private\n         */\n        this.isRedoing = false;\n        this.owner = node;\n        this.documentHelper = node.documentHelper;\n        this.modifiedParaFormats = new _base_dictionary__WEBPACK_IMPORTED_MODULE_0__.Dictionary();\n        this.undoLimitIn = 500;\n        this.redoLimitIn = 500;\n    }\n    Object.defineProperty(EditorHistory.prototype, \"currentHistoryInfo\", {\n        /**\n         * @private\n         * @returns {HistoryInfo} - Returns the history info.\n         */\n        get: function () {\n            return this.historyInfoStack && this.historyInfoStack.length > 0 ?\n                this.historyInfoStack[this.historyInfoStack.length - 1] : undefined;\n        },\n        /**\n         * @private\n         * @param {HistoryInfo} value - Specified the value.\n         */\n        set: function (value) {\n            if (value instanceof _history_info__WEBPACK_IMPORTED_MODULE_6__.HistoryInfo) {\n                this.historyInfoStack.push(value);\n            }\n            else {\n                this.historyInfoStack.pop();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorHistory.prototype, \"undoStack\", {\n        //Properties\n        /**\n         * gets undo stack\n         *\n         * @private\n         * @returns {BaseHistoryInfo[]} - Returns the undo stack.\n         */\n        get: function () {\n            return this.undoStackIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorHistory.prototype, \"redoStack\", {\n        /**\n         * gets redo stack\n         *\n         * @private\n         * @returns {BaseHistoryInfo[]} - Returns the redo stack.\n         */\n        get: function () {\n            return this.redoStackIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorHistory.prototype, \"undoLimit\", {\n        /**\n         * Gets the limit of undo operations can be done.\n         *\n         * @aspType int\n         * @returns {number} - Returns the redo limit\n         */\n        get: function () {\n            return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.undoLimitIn) ? 0 : this.undoLimitIn;\n        },\n        /**\n         * Sets the limit of undo operations can be done.\n         *\n         * @aspType int\n         * @param {number} value - Specifies the value to set undo limit.\n         */\n        set: function (value) {\n            if (value < 0) {\n                throw new Error('The limit should be greater than or equal to zero.');\n            }\n            this.undoLimitIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorHistory.prototype, \"redoLimit\", {\n        /**\n         * Gets the limit of redo operations can be done.\n         *\n         * @aspType int\n         * @returns {number} - Returns the redo limit.\n         */\n        get: function () {\n            return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.redoLimitIn) ? 0 : this.redoLimitIn;\n        },\n        /**\n         * Sets the limit of redo operations can be done.\n         *\n         * @aspType int\n         * @param {number} value Specifies the value to set redo limit.\n         */\n        set: function (value) {\n            if (value < 0) {\n                throw new Error('The limit should be greater than or equal to zero.');\n            }\n            this.redoLimitIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorHistory.prototype, \"viewer\", {\n        get: function () {\n            return this.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EditorHistory.prototype.getModuleName = function () {\n        return 'EditorHistory';\n    };\n    /**\n     * Determines whether the undo operation can be done.\n     *\n     * @returns {boolean} - Returns true if can undo; Otherwise, false.\n     */\n    EditorHistory.prototype.canUndo = function () {\n        return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.undoStack) && this.undoStack.length > 0;\n    };\n    /**\n     * Determines whether the redo operation can be done.\n     *\n     * @returns {boolean} - Returns true if can redo; Otherwise, false.\n     */\n    EditorHistory.prototype.canRedo = function () {\n        return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.redoStack) && this.redoStack.length > 0;\n    };\n    //EditorHistory Initialization\n    /**\n     * initialize EditorHistory\n     *\n     * @private\n     * @param {Action} action - Specifies the action.\n     * @returns {void}\n     */\n    EditorHistory.prototype.initializeHistory = function (action) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentBaseHistoryInfo)) {\n            this.currentBaseHistoryInfo.destroy();\n        }\n        this.currentBaseHistoryInfo = new _base_history_info__WEBPACK_IMPORTED_MODULE_4__.BaseHistoryInfo(this.owner);\n        this.currentBaseHistoryInfo.action = action;\n        if (action !== 'ModifyStyle') {\n            this.currentBaseHistoryInfo.updateSelection();\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.documentHelper.selection) && this.documentHelper.selection.isEmpty\n            && (action === 'BackSpace' || action === 'Delete' ||\n                (action === 'Insert' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.documentHelper.owner.editor) && this.documentHelper.owner.editor.handledTextInput))) {\n            this.currentBaseHistoryInfo.isEmptySelection = true;\n        }\n    };\n    /**\n     * Initialize complex history\n     *\n     * @private\n     * @param {Selection} selection - Specifies the selection.\n     * @param {Action} action - Specifies the action.\n     * @returns {void}\n     */\n    EditorHistory.prototype.initComplexHistory = function (selection, action) {\n        this.currentHistoryInfo = new _history_info__WEBPACK_IMPORTED_MODULE_6__.HistoryInfo(selection.owner, !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentHistoryInfo));\n        this.currentHistoryInfo.action = action;\n        switch (action) {\n            case 'PageBreak':\n                this.currentHistoryInfo.insertedText = _index__WEBPACK_IMPORTED_MODULE_2__.CONTROL_CHARACTERS.PageBreak;\n                this.currentHistoryInfo.insertPosition = selection.startOffset;\n                break;\n            case 'ColumnBreak':\n                this.currentHistoryInfo.insertedText = _index__WEBPACK_IMPORTED_MODULE_2__.CONTROL_CHARACTERS.ColumnBreak;\n                this.currentHistoryInfo.insertPosition = selection.startOffset;\n                break;\n        }\n        this.currentHistoryInfo.updateSelection();\n    };\n    /**\n     * @private\n     * @param {Point} startingPoint - Specifies the start point.\n     * @param {TableResizer} tableResize - Spcifies the table resizer.\n     * @returns {void}\n     */\n    EditorHistory.prototype.initResizingHistory = function (startingPoint, tableResize) {\n        if (tableResize.resizeNode === 1) {\n            this.initializeHistory('RowResizing');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentBaseHistoryInfo)) {\n                /* eslint-disable-next-line max-len */\n                tableResize.currentResizingTable = tableResize.currentResizingTable.combineWidget(this.viewer);\n                this.currentBaseHistoryInfo.modifiedProperties.push(new _history_helper__WEBPACK_IMPORTED_MODULE_5__.RowHistoryFormat(tableResize.currentResizingTable, startingPoint, tableResize.currentResizingTable.childWidgets[tableResize.resizerPosition].rowFormat, this.owner));\n                this.documentHelper.layout.reLayoutTable(tableResize.currentResizingTable);\n            }\n        }\n        else {\n            this.initializeHistory('CellResizing');\n            if (this.currentBaseHistoryInfo) {\n                tableResize.currentResizingTable = tableResize.currentResizingTable.combineWidget(this.viewer);\n                var tableHistoryInfo = new _history_helper__WEBPACK_IMPORTED_MODULE_5__.TableHistoryInfo(tableResize.currentResizingTable, this.owner);\n                tableHistoryInfo.startingPoint = startingPoint;\n                this.currentBaseHistoryInfo.modifiedProperties.push(tableHistoryInfo);\n                this.documentHelper.layout.reLayoutTable(tableResize.currentResizingTable);\n            }\n        }\n    };\n    /**\n     * Starts a new undo able action.\n     * > All editing and formatting changes made between `beginUndoAction` and `endUndoAction` will be grouped together as a single undo able action.\n     *\n     * @returns {void}\n     */\n    EditorHistory.prototype.beginUndoAction = function () {\n        if (this.isUndoGroupingEnded) {\n            this.owner.editorModule.initComplexHistory('Grouping');\n            this.isUndoGroupingEnded = false;\n            this.clearRedoStack();\n        }\n    };\n    /**\n     * Ends the current undo able action.\n     * > All editing and formatting changes made between `beginUndoAction` and `endUndoAction` will be grouped together as a single undo able action.\n     *\n     * @returns {void}\n     */\n    EditorHistory.prototype.endUndoAction = function () {\n        if (!this.isUndoGroupingEnded) {\n            this.updateComplexHistory();\n            this.isUndoGroupingEnded = true;\n        }\n    };\n    /**\n     * Update resizing history\n     *\n     * @private\n     * @param {Point} point - Specifies the point.\n     * @param {TableResizer} tableResize - Specifies the table resizer.\n     * @returns {void}\n     */\n    EditorHistory.prototype.updateResizingHistory = function (point, tableResize) {\n        if (tableResize.resizeNode === 1) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentBaseHistoryInfo)) {\n                var rowHistoryFormat = this.currentBaseHistoryInfo.modifiedProperties[0];\n                if (rowHistoryFormat.startingPoint.y === point.y) {\n                    this.currentBaseHistoryInfo.modifiedProperties.length = 0;\n                }\n                else {\n                    rowHistoryFormat.displacement = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_8__.HelperMethods.convertPixelToPoint(point.y - rowHistoryFormat.startingPoint.y);\n                    this.recordChanges(this.currentBaseHistoryInfo);\n                    this.owner.fireContentChange();\n                    this.currentBaseHistoryInfo = undefined;\n                }\n            }\n        }\n        else {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentBaseHistoryInfo)) {\n                var cellHistoryFormat = this.currentBaseHistoryInfo.modifiedProperties[0];\n                if (cellHistoryFormat.startingPoint.x === point.x) {\n                    this.currentBaseHistoryInfo.modifiedProperties.length = 0;\n                }\n                else {\n                    cellHistoryFormat.displacement = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_8__.HelperMethods.convertPixelToPoint(point.x - cellHistoryFormat.startingPoint.x);\n                    cellHistoryFormat.endIndex = tableResize.getCellReSizerPosition(point);\n                    this.owner.editorHistoryModule.recordChanges(this.currentBaseHistoryInfo);\n                    this.owner.fireContentChange();\n                    this.currentBaseHistoryInfo = undefined;\n                }\n            }\n        }\n    };\n    /**\n     * Record the changes\n     *\n     * @private\n     * @param {BaseHistoryInfo} baseHistoryInfo - Specified the base history info.\n     * @returns {void}\n     */\n    EditorHistory.prototype.recordChanges = function (baseHistoryInfo) {\n        if (!this.owner.enableHistoryMode) {\n            return;\n        }\n        if (this.isUndoing) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.redoStack)) {\n                this.redoStackIn = [];\n            }\n            if (this.redoStack.length === this.redoLimit && this.redoLimit > 0) {\n                var count = this.undoLimit > 20 ? 10 : 1;\n                this.redoStackIn.splice(0, count);\n            }\n            if (this.redoStack.length < this.redoLimit) {\n                this.redoStack.push(baseHistoryInfo);\n            }\n        }\n        else {\n            if (!this.isRedoing) {\n                this.clearRedoStack();\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.undoStack)) {\n                this.undoStackIn = [];\n            }\n            if (this.undoStack.length === this.undoLimit && this.undoLimit > 0) {\n                var count = this.undoLimit > 20 ? 10 : 1;\n                this.undoStackIn.splice(0, count);\n            }\n            if (this.undoStack.length < this.undoLimit) {\n                this.undoStackIn.push(baseHistoryInfo);\n            }\n        }\n        this.lastOperation = baseHistoryInfo;\n    };\n    /**\n     * update EditorHistory\n     *\n     * @private\n     * @returns {void}\n     */\n    EditorHistory.prototype.updateHistory = function () {\n        if (this.documentHelper.owner.enableHistoryMode && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentBaseHistoryInfo)) {\n            //Updates the current end position\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentBaseHistoryInfo)\n                && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentBaseHistoryInfo.endPosition)) {\n                this.currentBaseHistoryInfo.endPosition = this.currentBaseHistoryInfo.insertPosition;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentHistoryInfo)) {\n                this.currentHistoryInfo.addModifiedAction(this.currentBaseHistoryInfo);\n            }\n            else {\n                this.recordChanges(this.currentBaseHistoryInfo);\n            }\n            this.currentBaseHistoryInfo = undefined;\n        }\n    };\n    /**\n     * @private\n     * @returns {boolean} -Returns isHandleComplexHistory\n     */\n    EditorHistory.prototype.isHandledComplexHistory = function () {\n        var isHandledComplexHistory = false;\n        if (!(this.isUndoing || this.isRedoing)) {\n            if (this.owner.editorModule.removedBookmarkElements.length > 0\n                && this.owner.editorModule.insertRemoveBookMarkElements(isHandledComplexHistory)) {\n                isHandledComplexHistory = true;\n            }\n            if (this.owner.editorModule.removedEditRangeEndElements.length > 0\n                && this.owner.editorModule.insertRemovedEditRangeEndElements(isHandledComplexHistory)) {\n                isHandledComplexHistory = true;\n            }\n            if (this.owner.editorModule.removedEditRangeStartElements.length > 0\n                && this.owner.editorModule.insertRemovedEditRangeStartElements(isHandledComplexHistory)) {\n                isHandledComplexHistory = true;\n            }\n            if (this.owner.editorModule.removedContentControlElements.length > 0\n                && this.owner.editorModule.insertRemoveContentControlElements(isHandledComplexHistory)) {\n                isHandledComplexHistory = true;\n            }\n        }\n        if (this.documentHelper.owner.enableHistoryMode && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentHistoryInfo)) {\n            if (this.currentHistoryInfo.action !== 'Grouping') {\n                this.updateHistory();\n                isHandledComplexHistory = true;\n            }\n        }\n        else if (this.owner.editorModule.isHandledComplex) {\n            isHandledComplexHistory = true;\n        }\n        return isHandledComplexHistory;\n    };\n    /**\n     * Update complex history\n     *\n     * @private\n     * @returns {void}\n     */\n    EditorHistory.prototype.updateComplexHistory = function () {\n        var selection = this.documentHelper.selection;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentHistoryInfo) && this.currentHistoryInfo.hasAction) {\n            if (this.currentHistoryInfo.action === 'AutoFormatHyperlink' || this.currentHistoryInfo.action === 'SkipCommentInline'\n                || this.currentHistoryInfo.action === 'DeleteCommentInline' || this.currentHistoryInfo.action === 'RemoveComment') {\n                // this.reLayoutParagraph(startPosition.paragraph, 0);\n                if (selection.owner.editorHistoryModule.isUndoing) {\n                    this.owner.editorModule.setPositionForCurrentIndex(selection.start, this.currentHistoryInfo.selectionStart);\n                    this.owner.editorModule.setPositionForCurrentIndex(selection.end, this.currentHistoryInfo.selectionEnd);\n                }\n                else {\n                    this.owner.editorModule.setPositionForCurrentIndex(selection.start, this.currentHistoryInfo.endPosition);\n                    this.owner.editorModule.setPositionForCurrentIndex(selection.end, this.currentHistoryInfo.endPosition);\n                }\n            }\n            if (this.currentHistoryInfo.action === 'InsertHyperlink') {\n                var startPosition = new _selection_selection_helper__WEBPACK_IMPORTED_MODULE_1__.TextPosition(selection.owner);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentHistoryInfo.insertPosition)) {\n                    this.owner.editorModule.setPositionForCurrentIndex(startPosition, this.currentHistoryInfo.insertPosition);\n                    var endPosition = new _selection_selection_helper__WEBPACK_IMPORTED_MODULE_1__.TextPosition(selection.owner);\n                    this.owner.editorModule.setPositionForCurrentIndex(endPosition, this.currentHistoryInfo.endPosition);\n                    this.documentHelper.layout.reLayoutParagraph(startPosition.paragraph, 0, 0);\n                    if (endPosition.paragraph !== startPosition.paragraph) {\n                        this.documentHelper.layout.reLayoutParagraph(endPosition.paragraph, 0, 0);\n                    }\n                }\n            }\n            if (this.currentHistoryInfo.action === 'ReplaceAll') {\n                this.documentHelper.contentControlCollection = [];\n                this.owner.editorModule.layoutWholeDocument();\n            }\n            else if (selection.owner.isShiftingEnabled) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(selection.editRegionHighlighters)) {\n                    selection.editRegionHighlighters.clear();\n                }\n                this.documentHelper.layout.shiftLayoutedItems(false);\n                if (this.owner.enableHeaderAndFooter) {\n                    this.owner.editorModule.updateHeaderFooterWidget();\n                }\n                this.documentHelper.removeEmptyPages();\n            }\n        }\n        if (this.owner.showRevisions && !this.owner.editorModule.restrictLayout) {\n            this.owner.trackChangesPane.updateTrackChanges();\n        }\n        selection.owner.isShiftingEnabled = false;\n        selection.owner.isLayoutEnabled = true;\n        // // selection.addMultipleSelectionRanges();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentHistoryInfo) && this.currentHistoryInfo.action === 'ApplyStyle') {\n            this.owner.editorModule.getOffsetValue(selection);\n        }\n        else {\n            selection.start.updatePhysicalPosition(true);\n            if (selection.isEmpty) {\n                selection.end.setPositionInternal(selection.start);\n            }\n            else {\n                selection.end.updatePhysicalPosition(true);\n            }\n        }\n        selection.upDownSelectionLength = selection.end.location.x;\n        this.documentHelper.isScrollHandler = true;\n        if (!this.owner.editorModule.restrictLayout) {\n            this.viewer.updateScrollBars();\n        }\n        selection.fireSelectionChanged(true);\n        this.documentHelper.isScrollHandler = false;\n        if (this.owner.enableAutoFocus) {\n            this.documentHelper.updateFocus();\n        }\n        this.updateComplexHistoryInternal();\n        if (!this.owner.editorModule.isInsertingTOC) {\n            this.owner.editorModule.fireContentChange();\n        }\n    };\n    /**\n     * @private\n     *\n     * @returns {void}\n     */\n    EditorHistory.prototype.updateComplexHistoryInternal = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentHistoryInfo)) {\n            //Updates the current end position\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentHistoryInfo.endPosition)) {\n                this.currentHistoryInfo.endPosition = this.currentHistoryInfo.insertPosition;\n            }\n            if (this.historyInfoStack.length > 1) {\n                var historyInfo = this.historyInfoStack[this.historyInfoStack.length - 2];\n                historyInfo.addModifiedAction(this.currentHistoryInfo);\n            }\n            else {\n                this.recordChanges(this.currentHistoryInfo);\n            }\n            this.currentHistoryInfo = undefined;\n        }\n    };\n    //List history preservation undo API\n    /**\n     * update list changes for history preservation\n     *\n     * @private\n     * @param  {WAbstractList} currentAbstractList - Specfies the abstractlist.\n     * @param  {WList} list - Specifies the list.\n     * @returns {Dictionary<number, ModifiedLevel>} - Returns the modified action.\n     */\n    EditorHistory.prototype.updateListChangesInHistory = function (currentAbstractList, list) {\n        this.currentBaseHistoryInfo = new _base_history_info__WEBPACK_IMPORTED_MODULE_4__.BaseHistoryInfo(this.documentHelper.owner);\n        this.currentBaseHistoryInfo.action = 'List';\n        this.currentBaseHistoryInfo.updateSelection();\n        var collection = new _base_dictionary__WEBPACK_IMPORTED_MODULE_0__.Dictionary();\n        for (var i = 0; i < currentAbstractList.levels.length; i++) {\n            var levels = this.documentHelper.getAbstractListById(list.abstractListId).levels[parseInt(i.toString(), 10)];\n            this.currentBaseHistoryInfo.addModifiedPropertiesForList(levels);\n            var modifiedLevel = new _history_helper__WEBPACK_IMPORTED_MODULE_5__.ModifiedLevel(levels, currentAbstractList.levels[parseInt(i.toString(), 10)]);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(levels)) {\n                this.documentHelper.owner.editorModule.copyListLevel(levels, currentAbstractList.levels[parseInt(i.toString(), 10)]);\n            }\n            collection.add(i, modifiedLevel);\n        }\n        return collection;\n    };\n    /**\n     * Apply list changes\n     *\n     * @private\n     * @param  {Selection} selection - Specifies the selection.\n     * @param  {Dictionary<number, ModifiedLevel>} modifiedLevelsInternal - Specifies the modified levels.\n     * @returns {void}\n     */\n    EditorHistory.prototype.applyListChanges = function (selection, modifiedLevelsInternal) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.modifiedParaFormats)) {\n            this.modifiedParaFormats = new _base_dictionary__WEBPACK_IMPORTED_MODULE_0__.Dictionary();\n        }\n        var collection = [];\n        for (var i = 0; i < this.documentHelper.listParagraphs.length; i++) {\n            var paragraph = this.documentHelper.listParagraphs[parseInt(i.toString(), 10)];\n            var paraFormat = paragraph.paragraphFormat;\n            var currentList = this.documentHelper.getListById(paraFormat.listFormat.listId);\n            var listLevel = this.documentHelper.layout.getListLevel(currentList, paraFormat.listFormat.listLevelNumber);\n            if (modifiedLevelsInternal.containsKey(paraFormat.listFormat.listLevelNumber)\n                && modifiedLevelsInternal.get(paraFormat.listFormat.listLevelNumber).ownerListLevel === listLevel) {\n                var modifiedFormat = new _format_paragraph_format__WEBPACK_IMPORTED_MODULE_7__.WParagraphFormat(null);\n                modifiedFormat.leftIndent = paraFormat.leftIndent;\n                modifiedFormat.firstLineIndent = paraFormat.firstLineIndent;\n                var modified = new _history_helper__WEBPACK_IMPORTED_MODULE_5__.ModifiedParagraphFormat(paraFormat, modifiedFormat);\n                collection.push(modified);\n                this.owner.editorModule.copyFromListLevelParagraphFormat(paraFormat, listLevel.paragraphFormat);\n            }\n        }\n        this.modifiedParaFormats.add(this.currentBaseHistoryInfo, collection);\n    };\n    /**\n     * Update list changes\n     *\n     * @private\n     * @param  {Dictionary<number, ModifiedLevel>} modifiedCollection - Specifies the modified colection.\n     * @returns {void }\n     */\n    EditorHistory.prototype.updateListChanges = function (modifiedCollection) {\n        this.documentHelper.owner.isLayoutEnabled = false;\n        this.owner.editorModule.updateListParagraphs();\n        for (var i = 0; i < modifiedCollection.keys.length; i++) {\n            var levelNumber = modifiedCollection.keys[parseInt(i.toString(), 10)];\n            var modifiedLevel = modifiedCollection.get(levelNumber);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(this.currentBaseHistoryInfo)) {\n                modifiedLevel = this.currentBaseHistoryInfo.addModifiedPropertiesForList(modifiedLevel.ownerListLevel);\n            }\n            this.owner.editorModule.copyListLevel(modifiedLevel.ownerListLevel, modifiedLevel.modifiedListLevel);\n        }\n        this.documentHelper.owner.isLayoutEnabled = true;\n        this.documentHelper.renderedLists.clear();\n        this.documentHelper.renderedLevelOverrides = [];\n        this.owner.editorModule.layoutWholeDocument();\n        var selection = this.documentHelper.selection;\n        selection.start.updatePhysicalPosition(true);\n        if (selection.isEmpty) {\n            selection.end.setPositionInternal(selection.start);\n        }\n        else {\n            selection.end.updatePhysicalPosition(true);\n        }\n        selection.upDownSelectionLength = selection.end.location.x;\n        selection.fireSelectionChanged(false);\n        this.updateHistory();\n    };\n    /**\n     * Reverts the last editing action.\n     *\n     * @returns {void}\n     */\n    EditorHistory.prototype.undo = function () {\n        if ((this.owner.isReadOnlyMode && !this.owner.documentHelper.isCommentOnlyMode &&\n            (this.owner.documentHelper.protectionType !== 'FormFieldsOnly')) ||\n            !this.canUndo() || !this.owner.enableHistoryMode) {\n            return;\n        }\n        //this.owner.ClearTextSearchResults();\n        var historyInfo = this.undoStack.pop();\n        this.isUndoing = true;\n        historyInfo.revert();\n        this.isUndoing = false;\n        this.owner.selectionModule.checkForCursorVisibility();\n        this.owner.editorModule.isBordersAndShadingDialog = false;\n    };\n    /**\n     * Performs the last reverted action.\n     *\n     * @returns {void}\n     */\n    EditorHistory.prototype.redo = function () {\n        if ((this.owner.isReadOnlyMode && !this.owner.documentHelper.isCommentOnlyMode &&\n            (this.owner.documentHelper.protectionType !== 'FormFieldsOnly'))\n            || !this.canRedo() || !this.owner.enableHistoryMode) {\n            return;\n        }\n        //this.owner.ClearTextSearchResults();\n        var historyInfo = this.redoStack.pop();\n        if (historyInfo.action === 'BordersAndShading') {\n            this.owner.editorModule.isBordersAndShadingDialog = true;\n        }\n        this.isRedoing = true;\n        historyInfo.revert();\n        this.isRedoing = false;\n        this.owner.selectionModule.checkForCursorVisibility();\n        this.owner.editorModule.isBordersAndShadingDialog = false;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    EditorHistory.prototype.destroy = function () {\n        this.clearHistory();\n        this.undoStackIn = undefined;\n        this.redoStackIn = undefined;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    EditorHistory.prototype.clearHistory = function () {\n        this.clearUndoStack();\n        this.clearRedoStack();\n    };\n    EditorHistory.prototype.clearUndoStack = function () {\n        if (this.canUndo()) {\n            while (this.undoStack.length > 0) {\n                var historyInfo = this.undoStack.pop();\n                historyInfo.destroy();\n                historyInfo = undefined;\n            }\n        }\n    };\n    EditorHistory.prototype.clearRedoStack = function () {\n        if (this.canRedo()) {\n            while (this.redoStack.length > 0) {\n                var historyInfo = this.redoStack.pop();\n                historyInfo.destroy();\n                historyInfo = undefined;\n            }\n        }\n    };\n    return EditorHistory;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor-history/editor-history.js?");

/***/ })

}]);