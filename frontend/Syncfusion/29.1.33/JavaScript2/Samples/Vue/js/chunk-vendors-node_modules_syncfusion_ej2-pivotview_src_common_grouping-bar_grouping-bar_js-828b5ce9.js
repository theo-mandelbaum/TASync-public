"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-pivotview_src_common_grouping-bar_grouping-bar_js-828b5ce9"],{

/***/ "./node_modules/@syncfusion/ej2-pivotview/src/common/grouping-bar/grouping-bar.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pivotview/src/common/grouping-bar/grouping-bar.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GroupingBar: () => (/* binding */ GroupingBar)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _common_base_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/base/constant */ \"./node_modules/@syncfusion/ej2-pivotview/src/common/base/constant.js\");\n/* harmony import */ var _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/base/css-constant */ \"./node_modules/@syncfusion/ej2-pivotview/src/common/base/css-constant.js\");\n/* harmony import */ var _axis_field_renderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./axis-field-renderer */ \"./node_modules/@syncfusion/ej2-pivotview/src/common/grouping-bar/axis-field-renderer.js\");\n/* harmony import */ var _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\");\n\n\n\n\n\n\n\n/**\n * Module for GroupingBar rendering\n */\n/** @hidden */\nvar GroupingBar = /** @class */ (function () {\n    /** Constructor for GroupingBar module\n     *\n     * @param {PivotView} parent - Instance.\n     */\n    function GroupingBar(parent) {\n        this.rowAxisWidth = 0;\n        this.parent = parent;\n        this.parent.groupingBarModule = this;\n        this.resColWidth = (this.parent.isAdaptive ? 180 : 249);\n        this.addEventListener();\n        this.parent.axisFieldModule = new _axis_field_renderer__WEBPACK_IMPORTED_MODULE_3__.AxisFields(this.parent);\n        this.touchObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Touch(this.parent.element, {\n            tapHold: this.tapHoldHandler.bind(this)\n        });\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - Module name.\n     * @private\n     */\n    GroupingBar.prototype.getModuleName = function () {\n        return 'groupingBar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    GroupingBar.prototype.renderLayout = function () {\n        this.groupingTable = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUPING_BAR_CLASS });\n        var leftAxisPanel = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.LEFT_AXIS_PANEL_CLASS });\n        this.rightAxisPanel = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.RIGHT_AXIS_PANEL_CLASS });\n        var rowAxisPanel = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.AXIS_ROW_CLASS + ' ' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.AXIS_ICON_CLASS + 'container' });\n        var columnAxisPanel = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.AXIS_COLUMN_CLASS + ' ' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.AXIS_ICON_CLASS + 'container'\n        });\n        var valueAxisPanel = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.AXIS_VALUE_CLASS + ' ' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.AXIS_ICON_CLASS + 'container'\n        });\n        var filterAxisPanel = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.AXIS_FILTER_CLASS + ' ' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.AXIS_ICON_CLASS + 'container'\n        });\n        this.rowPanel = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_ROW_CLASS + ' ' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ROW_AXIS_CLASS + (this.parent.isTabular ?\n                ' ' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.TABULAR_GROUP_ROWS : '') });\n        var columnPanel = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_COLUMN_CLASS + ' ' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.COLUMN_AXIS_CLASS });\n        var valuePanel = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_VALUE_CLASS + ' ' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.VALUE_AXIS_CLASS });\n        var filterPanel = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_FILTER_CLASS + ' ' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.FILTER_AXIS_CLASS });\n        rowAxisPanel.appendChild(this.rowPanel);\n        columnAxisPanel.appendChild(columnPanel);\n        valueAxisPanel.appendChild(valuePanel);\n        filterAxisPanel.appendChild(filterPanel);\n        this.rowAxisPanel = rowAxisPanel;\n        leftAxisPanel.appendChild(valueAxisPanel);\n        leftAxisPanel.appendChild(rowAxisPanel);\n        this.rightAxisPanel.appendChild(filterAxisPanel);\n        this.rightAxisPanel.appendChild(columnAxisPanel);\n        this.groupingTable.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { styles: 'display:flex;' }));\n        this.groupingTable.firstElementChild.appendChild(leftAxisPanel);\n        this.groupingTable.firstElementChild.appendChild(this.rightAxisPanel);\n        if (this.parent.dataType === 'pivot' && this.parent.groupingBarSettings != null && this.parent.groupingBarSettings.showFieldsPanel) {\n            this.gridPanel = this.createToolbarUI(this.groupingTable);\n        }\n        this.groupingTable.classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GRID_GROUPING_BAR_CLASS);\n        this.groupingTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_ROW_CLASS).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_PIVOT_ROW);\n        var axisPanels = [this.rowPanel, columnPanel, valuePanel, filterPanel];\n        for (var _i = 0, axisPanels_1 = axisPanels; _i < axisPanels_1.length; _i++) {\n            var element = axisPanels_1[_i];\n            if (this.parent.groupingBarSettings.allowDragAndDrop) {\n                new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Droppable(element, {});\n            }\n            this.unWireEvent(element);\n            this.wireEvent(element);\n        }\n        if (this.parent.displayOption.view !== 'Table' && this.parent.groupingBarSettings.displayMode !== 'Table') {\n            this.groupingChartTable = this.groupingTable.cloneNode(true);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + this.parent.element.id + '_AllFields', this.groupingChartTable)) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + this.parent.element.id + '_AllFields', this.groupingChartTable).remove();\n                this.chartPanel = this.createToolbarUI(this.groupingChartTable);\n            }\n            this.groupingChartTable.classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.CHART_GROUPING_BAR_CLASS);\n            this.groupingChartTable.classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GRID_GROUPING_BAR_CLASS);\n            this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_ROW_CLASS).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_CHART_ROW);\n            this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_ROW_CLASS).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_PIVOT_ROW);\n            if (this.parent.chartSettings.enableMultipleAxis && this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) {\n                this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_VALUE_CLASS).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_CHART_MULTI_VALUE);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_VALUE_CLASS).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_CHART_VALUE);\n            }\n            if (this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n                this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_COLUMN_CLASS).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_CHART_COLUMN);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_COLUMN_CLASS).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_CHART_ACCUMULATION_COLUMN);\n            }\n            this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_FILTER_CLASS).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_CHART_FILTER);\n        }\n        else {\n            this.groupingChartTable = undefined;\n        }\n        if (this.parent.displayOption.view === 'Chart' || this.parent.groupingBarSettings.displayMode === 'Chart') {\n            this.groupingTable = undefined;\n        }\n    };\n    /**\n     * Appends the grouping table or chart table element to the DOM based on the display option and layout settings.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.appendToElement = function () {\n        var element = this.groupingTable ? this.groupingTable : this.groupingChartTable;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element)) {\n            return;\n        }\n        var leftAxisPanel = element.getElementsByClassName(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.LEFT_AXIS_PANEL_CLASS)[0];\n        var filterPanel = element.getElementsByClassName(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_FILTER_CLASS + ' ' +\n            _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.FILTER_AXIS_CLASS)[0];\n        var columnPanel = element.getElementsByClassName(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_COLUMN_CLASS + ' ' +\n            _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.COLUMN_AXIS_CLASS)[0];\n        var valuePanel = element.getElementsByClassName(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_VALUE_CLASS + ' ' +\n            _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.VALUE_AXIS_CLASS)[0];\n        if (this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GRID_CLASS) || this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOTCHART)) {\n            if (this.parent.showGroupingBar) {\n                if (this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUPING_BAR_CLASS)) {\n                    var elements = this.parent.element.querySelectorAll('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUPING_BAR_CLASS);\n                    for (var i = 0; i < elements.length; i++) {\n                        var element_1 = elements[i];\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(element_1);\n                    }\n                }\n                if (this.groupingChartTable) {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + this.parent.element.id + '_chart', this.parent.element)) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.groupingChartTable, {\n                            width: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                        });\n                        var chartLeftAxisPanel = this.groupingChartTable.getElementsByClassName(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.LEFT_AXIS_PANEL_CLASS)[0];\n                        var chartValuePanel = this.groupingChartTable.getElementsByClassName(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_VALUE_CLASS + ' ' +\n                            _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.VALUE_AXIS_CLASS)[0];\n                        if (this.parent.isAdaptive) {\n                            if (this.parent.isTabular) {\n                                chartLeftAxisPanel.style.minWidth = this.parent.dataSourceSettings.rows.length *\n                                    this.parent.gridSettings.columnWidth + 'px';\n                                chartValuePanel.style.minWidth = this.parent.dataSourceSettings.rows.length *\n                                    this.parent.gridSettings.columnWidth + 'px';\n                            }\n                            else {\n                                chartLeftAxisPanel.style.minWidth = '180px';\n                                chartValuePanel.style.minWidth = '180px';\n                            }\n                        }\n                        this.parent.element.insertBefore(this.groupingChartTable, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + this.parent.element.id + '_chart', this.parent.element));\n                        if (this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ALL_FIELDS_PANEL_CLASS) && this.chartPanel != null && !this.chartPanel.isDestroyed) {\n                            var chartPanelWidth = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) :\n                                (this.parent.getWidthAsNumber() - 2);\n                            this.chartPanel.width = this.parent.isAdaptive ? chartPanelWidth : chartPanelWidth < 400 ? (this.parent.minWidth || '398px') : chartPanelWidth;\n                            this.chartPanel.refreshOverflow();\n                            if (this.parent.showFieldList && this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.element) {\n                                clearTimeout(this.timeOutObj);\n                                this.timeOutObj = setTimeout(this.alignIcon.bind(this));\n                            }\n                        }\n                    }\n                    else {\n                        this.groupingChartTable = undefined;\n                    }\n                }\n                if (this.parent.displayOption.view !== 'Chart' && this.groupingTable) {\n                    if (this.parent.isAdaptive) {\n                        if (this.parent.isTabular) {\n                            leftAxisPanel.style.minWidth = this.parent.dataSourceSettings.rows.length *\n                                this.parent.gridSettings.columnWidth + 'px';\n                            valuePanel.style.minWidth = this.parent.dataSourceSettings.rows.length *\n                                this.parent.gridSettings.columnWidth + 'px';\n                        }\n                        else {\n                            leftAxisPanel.style.minWidth = '180px';\n                            valuePanel.style.minWidth = '180px';\n                        }\n                    }\n                    if (this.parent.firstColWidth) {\n                        leftAxisPanel.style.minWidth = 'auto';\n                        valuePanel.style.minWidth = 'auto';\n                    }\n                    filterPanel.removeAttribute('style');\n                    columnPanel.removeAttribute('style');\n                    this.rowPanel.removeAttribute('style');\n                    var emptyRowCount = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        emptyRowCount = this.parent.olapEngineModule.headerContent ?\n                            Object.keys(this.parent.olapEngineModule.headerContent).length : 0;\n                    }\n                    else {\n                        emptyRowCount = this.parent.engineModule.headerContent ?\n                            Object.keys(this.parent.engineModule.headerContent).length : 0;\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(emptyRowCount)) {\n                        var emptyHeader = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).querySelector('.e-columnheader');\n                        emptyHeader.removeAttribute('style');\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([emptyHeader.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCELL)], 'e-group-row');\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv').style.display = 'none';\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv').style.display = 'none';\n                    }\n                    this.parent.element.insertBefore(this.groupingTable, this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GRID_CLASS));\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.groupingTable, {\n                        width: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                    });\n                    if (this.groupingTable && this.groupingTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ALL_FIELDS_PANEL_CLASS) && this.gridPanel != null && !this.gridPanel.isDestroyed) {\n                        var gridPanelWidth = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) :\n                            (this.parent.getWidthAsNumber() - 2);\n                        this.gridPanel.width = this.parent.isAdaptive ? gridPanelWidth : gridPanelWidth < 400 ? (this.parent.minWidth || '398px') : gridPanelWidth;\n                        this.gridPanel.refreshOverflow();\n                    }\n                    this.groupingTable.style.minWidth = this.parent.minWidth ? this.parent.minWidth + 'px' : '400px';\n                    this.parent.axisFieldModule.render();\n                    this.setGridRowWidth();\n                    var colGroupElement = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).querySelector('colgroup').children[0];\n                    var valuePanelWidth = this.parent.isTabular ? this.rowAxisWidth :\n                        parseInt(colGroupElement.style.width, 10);\n                    var rightAxisPanelWidth = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.groupingTable.offsetWidth - valuePanelWidth);\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(valuePanel, { width: valuePanelWidth + 'px' });\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.rightAxisPanel, { width: rightAxisPanelWidth });\n                    this.groupingTable.style.display = '';\n                    var rightPanelHeight = (valuePanel.offsetHeight / 2);\n                    if (this.parent.displayOption.primary === 'Chart') {\n                        this.groupingTable.style.display = 'none';\n                    }\n                    if (rightPanelHeight > columnPanel.offsetHeight) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(filterPanel, { height: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(rightPanelHeight) });\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(columnPanel, { height: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(rightPanelHeight + 2) });\n                    }\n                    var topLeftHeight = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).offsetHeight;\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.rowPanel, {\n                        height: topLeftHeight + 'px'\n                    });\n                    if (this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).querySelector('.e-rhandler')) {\n                        this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).querySelector('.e-rhandler').style.height =\n                            topLeftHeight + 'px';\n                    }\n                    var colRows = [].slice.call(this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).querySelector('thead').querySelectorAll('tr'));\n                    var columnRows = colRows.filter(function (trCell) {\n                        return (trCell.childNodes.length > 0);\n                    });\n                    var colHeight = topLeftHeight / columnRows.length;\n                    for (var _i = 0, columnRows_1 = columnRows; _i < columnRows_1.length; _i++) {\n                        var element_2 = columnRows_1[_i];\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(element_2, { 'height': colHeight + 'px' });\n                        var rowHeader = [].slice.call(element_2.querySelectorAll('.e-rhandler'));\n                        for (var _a = 0, rowHeader_1 = rowHeader; _a < rowHeader_1.length; _a++) {\n                            var rhElement = rowHeader_1[_a];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(rhElement, { 'height': colHeight + 'px' });\n                        }\n                    }\n                }\n                else {\n                    this.parent.axisFieldModule.render();\n                    this.updateChartAxisHeight();\n                }\n                if (this.parent.showToolbar && this.parent.displayOption.view === 'Both') {\n                    var groupingBarSelector = this.parent.currentView === 'Table' ? '.e-chart-grouping-bar'\n                        : '.e-pivot-grouping-bar';\n                    var groupingBar = this.parent.element.querySelector(groupingBarSelector);\n                    if (groupingBar) {\n                        groupingBar.style.display = 'none';\n                    }\n                }\n            }\n        }\n    };\n    GroupingBar.prototype.updateChartAxisHeight = function () {\n        if (this.groupingChartTable && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + this.parent.element.id + '_chart', this.parent.element)) {\n            var rightAxisPanel = this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.RIGHT_AXIS_PANEL_CLASS);\n            var leftAxisPanel = this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.LEFT_AXIS_PANEL_CLASS);\n            var rowPanel = this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_ROW_CLASS);\n            var valuePanel = this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_VALUE_CLASS);\n            var filterPanel = this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_FILTER_CLASS);\n            var columnPanel = this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_COLUMN_CLASS);\n            if (rowPanel && columnPanel) {\n                rowPanel.style.height = 'auto';\n                columnPanel.style.height = 'auto';\n                if (rowPanel.offsetHeight > 0 && columnPanel.offsetHeight > 0) {\n                    var maxHeight = rowPanel.offsetHeight > columnPanel.offsetHeight ? rowPanel.offsetHeight :\n                        columnPanel.offsetHeight;\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(rowPanel, { height: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(maxHeight) });\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(columnPanel, { height: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(maxHeight) });\n                }\n            }\n            if (valuePanel && filterPanel) {\n                valuePanel.style.height = 'auto';\n                filterPanel.style.height = 'auto';\n                if (valuePanel.offsetHeight > 0 && filterPanel.offsetHeight > 0) {\n                    var maxHeight = valuePanel.offsetHeight > filterPanel.offsetHeight ? valuePanel.offsetHeight :\n                        filterPanel.offsetHeight;\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(valuePanel, { height: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(maxHeight) });\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(filterPanel, { height: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(maxHeight) });\n                }\n            }\n            var rightAxisPanelWidth = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.groupingChartTable.offsetWidth - Math.ceil(leftAxisPanel.getBoundingClientRect().width));\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(valuePanel, { width: Math.ceil(valuePanel.getBoundingClientRect().width) + 'px' });\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(rightAxisPanel, { width: rightAxisPanelWidth });\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    GroupingBar.prototype.refreshUI = function () {\n        if (this.groupingChartTable) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.groupingChartTable, {\n                width: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n            if (this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ALL_FIELDS_PANEL_CLASS) && this.chartPanel != null && !this.chartPanel.isDestroyed) {\n                var chartPanelWidth = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) :\n                    (this.parent.getWidthAsNumber() - 2);\n                this.chartPanel.width = this.parent.isAdaptive ? chartPanelWidth : chartPanelWidth < 400 ? (this.parent.minWidth || '398px') : chartPanelWidth;\n                this.chartPanel.refreshOverflow();\n            }\n            this.updateChartAxisHeight();\n            if (this.parent.showFieldList && this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.element) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.alignIcon.bind(this));\n            }\n        }\n        if (this.groupingTable) {\n            var valuePanel = this.groupingTable.getElementsByClassName(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_VALUE_CLASS + ' ' +\n                _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.VALUE_AXIS_CLASS)[0];\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.groupingTable, {\n                width: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n            if (this.groupingTable && this.groupingTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ALL_FIELDS_PANEL_CLASS) && this.gridPanel != null && !this.gridPanel.isDestroyed) {\n                var gridPanelWidth = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) :\n                    (this.parent.getWidthAsNumber() - 2);\n                this.gridPanel.width = this.parent.isAdaptive ? gridPanelWidth : gridPanelWidth < 400 ? (this.parent.minWidth || '398px') : gridPanelWidth;\n                this.gridPanel.refreshOverflow();\n            }\n            this.groupingTable.style.minWidth = this.parent.minWidth ? this.parent.minWidth + 'px' : '400px';\n            var colGroupElement = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).querySelector('colgroup').children[0];\n            var valuePanelWidth = this.parent.isTabular ? this.rowAxisWidth : parseInt(colGroupElement.style.width, 10);\n            var rightAxisWidth = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.groupingTable.offsetWidth - valuePanelWidth);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(valuePanel, { width: valuePanelWidth + 'px' });\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.rightAxisPanel, { width: rightAxisWidth });\n            if (this.parent.showFieldList && this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.element) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.alignIcon.bind(this));\n            }\n            if (!this.parent.grid.element.querySelector('.e-group-row')) {\n                var emptyRowHeader = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).querySelector('.e-columnheader');\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([emptyRowHeader.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCELL)], 'e-group-row');\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.rowPanel, {\n                    height: this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).offsetHeight + 'px'\n                });\n                emptyRowHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv'), {\n                    display: 'none'\n                });\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv'), {\n                    display: 'none'\n                });\n                var groupHeight = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).offsetHeight;\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.rowPanel, {\n                    height: groupHeight + 'px'\n                });\n                if (this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).querySelector('.e-rhandler')) {\n                    this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).querySelector('.e-rhandler').style.height =\n                        groupHeight + 'px';\n                }\n                var colRowElements = [].slice.call(this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).querySelector('thead').querySelectorAll('tr'));\n                var columnRows = colRowElements.filter(function (trCell) {\n                    return (trCell.childNodes.length > 0);\n                });\n                var colHeight = groupHeight / columnRows.length;\n                for (var _i = 0, columnRows_2 = columnRows; _i < columnRows_2.length; _i++) {\n                    var element = columnRows_2[_i];\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(element, { 'height': colHeight + 'px' });\n                    var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                    for (var _a = 0, rowHeader_2 = rowHeader; _a < rowHeader_2.length; _a++) {\n                        var handlerElement = rowHeader_2[_a];\n                        if (!handlerElement.parentElement.parentElement.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.FREEZED_CELL)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(handlerElement, { 'height': colHeight + 'px' });\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.alignIcon = function () {\n        if (this.parent.pivotFieldListModule) {\n            var element = this.parent.pivotFieldListModule.element;\n            var currentWidth = void 0;\n            if (this.parent.currentView === 'Table') {\n                currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n            }\n            else {\n                currentWidth = this.parent.chart ? this.parent.pivotChartModule.getCalulatedWidth() : currentWidth;\n            }\n            if (currentWidth) {\n                var minWidth = this.parent.minWidth ? this.parent.minWidth : !this.parent.isAdaptive ? 400 : 300;\n                var actWidth = currentWidth < minWidth ? minWidth : currentWidth;\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.TOGGLE_FIELD_LIST_CLASS), {\n                    left: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.parent.enableRtl ?\n                        -Math.abs((actWidth) -\n                            element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                        (actWidth) -\n                            element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n                });\n            }\n        }\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.setGridRowWidth = function () {\n        var emptyRowHeader = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).querySelector('.e-columnheader');\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([emptyRowHeader.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCELL)], 'e-group-row');\n        emptyRowHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n        var colGroupElement = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).querySelector('colgroup').children[0];\n        if (this.rowPanel.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_BUTTON_CLASS)) {\n            if (!this.parent.isAdaptive) {\n                var pivotButtons = [].slice.call(this.rowPanel.querySelectorAll('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_BUTTON_WRAPPER_CLASS));\n                var lastButton = pivotButtons[pivotButtons.length - 1];\n                var indentWidth = this.parent.isTabular ? 0 : lastButton.querySelector('.e-indent-div').offsetWidth + 20;\n                var lastButtonWidth = (lastButton.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_BUTTON_CLASS).offsetWidth +\n                    indentWidth);\n                var buttonWidth = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(lastButtonWidth < this.resColWidth ? this.resColWidth : lastButtonWidth);\n                var rowHeaderTable = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCELL);\n                //const rowContentTable: HTMLElement =\n                //this.parent.element.querySelector('.' + cls.CONTENT_CLASS).querySelector('tbody').querySelector('.' + cls.FREEZED_CELL);\n                var rowContent = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.CONTENT_CLASS).querySelector('colgroup').children[0];\n                var colwidth = parseInt(buttonWidth, 10);\n                var hasPivotColumns = this.parent.pivotColumns.length > 0;\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = gridColumn[0].autoFit ?\n                        gridColumn[0].width : (colwidth > this.resColWidth ? colwidth : this.resColWidth);\n                }\n                var valueColWidth = void 0;\n                if (this.parent.dataType === 'olap') {\n                    valueColWidth = this.parent.renderModule.calculateColWidth(this.parent.olapEngineModule.pivotValues.length > 0 ?\n                        this.parent.olapEngineModule.pivotValues[0].length : 2);\n                }\n                else {\n                    valueColWidth = this.parent.renderModule.calculateColWidth((this.parent.dataSourceSettings.values.length > 0 &&\n                        this.parent.engineModule.pivotValues.length > 0) ?\n                        this.parent.engineModule.pivotValues[0].length : 2);\n                }\n                for (var cCnt = 0; cCnt < gridColumn.length; cCnt++) {\n                    if (cCnt !== 0) {\n                        if (gridColumn[cCnt].columns) {\n                            this.parent.setCommonColumnsWidth(this.parent.renderModule.pivotColumns[cCnt].columns, valueColWidth);\n                        }\n                        else {\n                            if (gridColumn[cCnt].width !== 'auto') {\n                                var levelName = gridColumn[cCnt].customAttributes ?\n                                    gridColumn[cCnt].customAttributes.cell.valueSort.levelName : '';\n                                var columnWidth = this.parent.renderModule.setSavedWidth(levelName, valueColWidth);\n                                gridColumn[cCnt].width = (gridColumn[cCnt].autoFit || (hasPivotColumns\n                                    && this.parent.pivotColumns[cCnt].autoFit)) ? gridColumn[cCnt].width :\n                                    ((this.parent.renderModule.lastColumn &&\n                                        this.parent.renderModule.lastColumn.field === gridColumn[cCnt].field) ?\n                                        (columnWidth - 3) : columnWidth);\n                            }\n                            else {\n                                gridColumn[cCnt].minWidth = valueColWidth;\n                            }\n                        }\n                    }\n                }\n                if (this.parent.isTabular) {\n                    if (this.parent.dataSourceSettings.valueAxis === 'row') {\n                        this.rowAxisWidth = this.rowAxisPanel.querySelector('.e-tabular-group-rows').getBoundingClientRect().width;\n                    }\n                    else {\n                        var pivotButtons_1 = this.rowAxisPanel.querySelectorAll('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_BUTTON_WRAPPER_CLASS);\n                        this.rowAxisWidth = this.getPivotButtonsTotalWidth(pivotButtons_1);\n                        if (this.parent.engineModule.rowMaxLevel === 0 && pivotButtons_1.length === 1) {\n                            this.rowAxisWidth = 250;\n                        }\n                        if ((this.parent.element.getBoundingClientRect().width * 0.8) <= this.rowAxisWidth) {\n                            this.rowAxisWidth = pivotButtons_1.length * this.parent.gridSettings.columnWidth;\n                        }\n                    }\n                }\n                this.parent.posCount = 0;\n                this.parent.setGridColumns(this.parent.grid.columns);\n                this.parent.grid.headerModule.refreshUI();\n                if (!this.parent.firstColWidth) {\n                    buttonWidth = gridColumn[0].autoFit ? gridColumn[0].width.toString() : buttonWidth;\n                    colGroupElement.style.width = buttonWidth;\n                    rowContent.style.width = buttonWidth;\n                    rowHeaderTable.style.width = buttonWidth;\n                    //rowContentTable.style.width = buttonWidth;\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(rowHeaderTable, { 'width': buttonWidth });\n                    //setStyleAttribute(rowContentTable, { 'width': buttonWidth });\n                }\n            }\n            else {\n                if (!this.parent.firstColWidth) {\n                    var gridColumn = this.parent.grid.columns;\n                    if (gridColumn && gridColumn.length > 0) {\n                        if (this.parent.isTabular) {\n                            this.rowAxisWidth = this.parent.dataSourceSettings.rows.length * this.parent.gridSettings.columnWidth;\n                            for (var i = 0; i < this.parent.engineModule.rowMaxLevel; i++) {\n                                gridColumn[i].width = this.parent.gridSettings.columnWidth;\n                            }\n                        }\n                        else {\n                            gridColumn[0].width = this.resColWidth;\n                        }\n                    }\n                    this.parent.posCount = 0;\n                    this.parent.grid.headerModule.refreshUI();\n                }\n            }\n        }\n        else {\n            if (this.parent.grid.columns && this.parent.grid.columns.length > 0) {\n                this.parent.grid.columns[0].width = this.parent.grid.columns[0].width > this.resColWidth\n                    ? this.parent.grid.columns[0].width : this.resColWidth;\n            }\n            this.parent.grid.headerModule.refreshUI();\n        }\n        if (this.groupingTable || this.groupingChartTable) {\n            this.refreshUI();\n        }\n    };\n    GroupingBar.prototype.wireEvent = function (element) {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(element, 'mouseover', this.dropIndicatorUpdate, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(element, 'mouseleave', this.dropIndicatorUpdate, this);\n    };\n    GroupingBar.prototype.unWireEvent = function (element) {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(element, 'mouseover', this.dropIndicatorUpdate);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(element, 'mouseleave', this.dropIndicatorUpdate);\n    };\n    GroupingBar.prototype.dropIndicatorUpdate = function (e) {\n        if ((this.parent.isDragging && e.target.classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.DROPPABLE_CLASS) && e.type === 'mouseover') ||\n            (!this.parent.isDragging || (!e.target.classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.DROPPABLE_CLASS) && e.type === 'mouseleave'))) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([].slice.call(this.parent.element.querySelectorAll('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.DROP_INDICATOR_CLASS)), _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.INDICATOR_HOVER_CLASS);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([].slice.call(this.parent.element.querySelectorAll('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.DROP_INDICATOR_CLASS + '-last')), _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.INDICATOR_HOVER_CLASS);\n        }\n    };\n    GroupingBar.prototype.tapHoldHandler = function (e) {\n        var target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.originalEvent.target, '.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_BUTTON_CLASS);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target) && this.parent.isAdaptive) {\n            var pos = target.getBoundingClientRect();\n            this.parent.contextMenuModule.fieldElement = target;\n            this.parent.contextMenuModule.menuObj.open(pos.top, pos.left);\n            return;\n        }\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.RefreshFieldsPanel = function () {\n        if (this.parent.dataType === 'pivot' && this.parent.groupingBarSettings != null) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('#' + this.parent.element.id + '_AllFields', this.parent.element).length > 0) {\n                for (var _i = 0, _a = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('#' + this.parent.element.id + '_AllFields', this.parent.element); _i < _a.length; _i++) {\n                    var element = _a[_i];\n                    element.remove();\n                }\n            }\n            if (this.parent.groupingBarSettings.showFieldsPanel) {\n                if (this.groupingChartTable && this.parent.displayOption.view !== 'Table' && this.parent.groupingBarSettings.displayMode !== 'Table') {\n                    this.chartPanel = this.createToolbarUI(this.groupingChartTable);\n                }\n                if (this.groupingTable) {\n                    this.gridPanel = this.createToolbarUI(this.groupingTable);\n                }\n                this.parent.axisFieldModule.render();\n                this.refreshUI();\n            }\n        }\n    };\n    GroupingBar.prototype.createToolbarUI = function (element) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + this.parent.element.id + '_AllFields', element)) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + this.parent.element.id + '_AllFields', element).remove();\n        }\n        element.prepend((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: this.parent.element.id + '_AllFields' }));\n        var toolbarObj = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_4__.Toolbar({\n            cssClass: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ALL_FIELDS_PANEL_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            enableRtl: this.parent.enableRtl, enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            items: [{ template: '<div class=' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_ALL_FIELDS_CLASS + '></div>' }],\n            allowKeyboard: false,\n            width: !this.parent.gridSettings.allowAutoResizing ? (this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2)) : 'auto'\n        });\n        toolbarObj.appendTo((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + this.parent.element.id + '_AllFields', element));\n        return toolbarObj;\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(_common_base_constant__WEBPACK_IMPORTED_MODULE_1__.initSubComponent, this.renderLayout, this); //For initial rendering\n        this.parent.on(_common_base_constant__WEBPACK_IMPORTED_MODULE_1__.uiUpdate, this.appendToElement, this);\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(_common_base_constant__WEBPACK_IMPORTED_MODULE_1__.uiUpdate, this.appendToElement);\n        this.parent.off(_common_base_constant__WEBPACK_IMPORTED_MODULE_1__.initSubComponent, this.renderLayout);\n    };\n    /**\n     * To destroy the groupingbar\n     *\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotButtonModule) {\n            this.parent.pivotButtonModule.destroy();\n            this.parent.pivotButtonModule = null;\n        }\n        if (this.groupingTable && this.groupingTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ALL_FIELDS_PANEL_CLASS) && this.gridPanel != null && !this.gridPanel.isDestroyed) {\n            this.gridPanel.destroy();\n            this.gridPanel = null;\n        }\n        if (this.groupingChartTable && this.groupingChartTable.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ALL_FIELDS_PANEL_CLASS) && this.chartPanel != null && !this.chartPanel.isDestroyed) {\n            this.chartPanel.destroy();\n            this.chartPanel = null;\n        }\n        if (this.touchObj && !this.touchObj.isDestroyed) {\n            this.touchObj.destroy();\n        }\n        if (this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUPING_BAR_CLASS)) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUPING_BAR_CLASS));\n        }\n    };\n    GroupingBar.prototype.getPivotButtonsTotalWidth = function (pivotButtons) {\n        var totalWidth = 0;\n        for (var i = 0; i < pivotButtons.length; i++) {\n            var buttonWidth = pivotButtons[i].getBoundingClientRect().width < this.parent.gridSettings.columnWidth ?\n                this.parent.gridSettings.columnWidth : pivotButtons[i].getBoundingClientRect().width;\n            totalWidth += buttonWidth + 6;\n        }\n        return totalWidth;\n    };\n    return GroupingBar;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pivotview/src/common/grouping-bar/grouping-bar.js?");

/***/ })

}]);