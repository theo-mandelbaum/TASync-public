"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_viewer_l-80c5e085"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/viewer/layout.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/viewer/layout.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Layout: () => (/* binding */ Layout)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../base/dictionary */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/dictionary.js\");\n/* harmony import */ var _base_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../base/types */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/types.js\");\n/* harmony import */ var _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../editor/editor-helper */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor/editor-helper.js\");\n/* harmony import */ var _format_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../format/index */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/format/index.js\");\n/* harmony import */ var _list_list_level__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../list/list-level */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/list/list-level.js\");\n/* harmony import */ var _page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./page */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/viewer/page.js\");\n/* harmony import */ var _viewer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./viewer */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/viewer/viewer.js\");\n/* harmony import */ var _text_helper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./text-helper */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/viewer/text-helper.js\");\n/* eslint-disable */\n\n\n\n\n\n\n\n\n\n// Check box character is rendered smaller when compared to MS Word\n// So, mutiplied the font side by below factor to render check box character large.\nvar CHECK_BOX_FACTOR = 1.35;\n/**\n * @private\n */\nvar Layout = /** @class */ (function () {\n    function Layout(documentHelper) {\n        /**\n         * @private\n         */\n        this.islayoutFootnote = false;\n        /**\n         * @private\n         */\n        this.isMultiColumnDoc = false;\n        /**\n         * @private\n         */\n        this.allowLayout = true;\n        /**\n         * @private\n         */\n        this.isReplaceAll = false;\n        /**\n         * @private\n         */\n        this.isTextFormat = false;\n        /**\n        * @private\n        */\n        this.isSectionBreakCont = false;\n        /**\n         * @private\n         */\n        this.isReplacingAll = false;\n        /**\n         * @private\n         */\n        this.footHeight = 0;\n        /**\n         * @private\n         */\n        this.existFootnoteHeight = 0;\n        /**\n         * @private\n         */\n        this.isfootMove = false;\n        /**\n         * @private\n         */\n        this.footnoteHeight = 0;\n        /**\n         * @private\n         */\n        this.isTableFootNote = false;\n        /**\n         * @private\n         */\n        this.isRelayout = false;\n        /**\n         * @private\n         */\n        this.isRelayoutneed = false;\n        /**\n         * @private\n         */\n        this.isOverlapFloatTable = false;\n        this.isInitialLoad = true;\n        /**\n          * @private\n          */\n        this.isInsertFormField = false;\n        this.fieldBegin = undefined;\n        this.maxTextHeight = 0;\n        this.maxBaseline = 0;\n        this.maxTextBaseline = 0;\n        this.isFieldCode = false;\n        this.isRtlFieldCode = false;\n        this.isRTLLayout = false;\n        this.isSkipFirstLineIndent = false;\n        this.currentCell = undefined;\n        this.isFootnoteContentChanged = false;\n        this.isEndnoteContentChanged = false;\n        this.keepWithNext = false;\n        this.is2013Justification = false;\n        this.nextElementToLayout = undefined;\n        this.endNoteHeight = 0;\n        this.isMultiColumnSplit = false;\n        this.isMultiColumnLayout = false;\n        this.skipUpdateContainerWidget = false;\n        this.isIFfield = false;\n        this.isLayoutWhole = false;\n        /**\n         * @private\n         */\n        this.isBidiReLayout = false;\n        /**\n         * @private\n         */\n        this.defaultTabWidthPixel = 48;\n        /**\n         * @private\n         */\n        this.isRelayoutFootnote = false;\n        this.isRelayoutOverlap = false;\n        this.skipRelayoutOverlap = false;\n        this.isWrapText = false;\n        this.isYPositionUpdated = false;\n        this.isXPositionUpdated = false;\n        this.hasFloatingElement = false;\n        this.isFootNoteLayoutStart = false;\n        this.wrapPosition = [];\n        this.shiftedFloatingItemsFromTable = [];\n        this.isDocumentContainsRtl = false;\n        /**\n         * @private\n         */\n        this.isPastingContent = false;\n        this.layoutedFootnoteElement = [];\n        /**\n         * @private\n         */\n        this.isAllColumnHasAutoWidthType = false;\n        this.documentHelper = documentHelper;\n    }\n    Layout.prototype.isSameStyle = function (currentParagraph, isAfterSpacing) {\n        var nextOrPrevSibling = undefined;\n        if (isAfterSpacing) {\n            if (currentParagraph.nextWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                nextOrPrevSibling = currentParagraph.nextWidget;\n            }\n        }\n        else {\n            if (currentParagraph.previousWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                nextOrPrevSibling = currentParagraph.previousWidget;\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextOrPrevSibling)) {\n            //Need to skip contextual spacing behavior when document is not Word 2013 and paragraph preserved inside the table cell with AllowSpaceOfSameStyleInTable compatiblity options.\n            if (currentParagraph.paragraphFormat.contextualSpacing && (currentParagraph.isInsideTable ? (!this.documentHelper.allowSpaceOfSameStyleInTable || this.documentHelper.compatibilityMode === 'Word2013') : false)) {\n                if (currentParagraph.index === 0) {\n                    nextOrPrevSibling = this.updateFirstParagraphSpacingBasedOnContextualSpacing(currentParagraph, isAfterSpacing);\n                }\n                else if (currentParagraph.index === currentParagraph.associatedCell.childWidgets.length - 1) {\n                    nextOrPrevSibling = this.updateLastParagraphSpacingBasedOnContextualSpacing(currentParagraph);\n                    if (nextOrPrevSibling === currentParagraph) {\n                        return true;\n                    }\n                }\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextOrPrevSibling)) {\n                return false;\n            }\n        }\n        if (nextOrPrevSibling instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && currentParagraph.paragraphFormat.baseStyle === nextOrPrevSibling.paragraphFormat.baseStyle && (currentParagraph.isInsideTable ? !this.documentHelper.allowSpaceOfSameStyleInTable : true)) {\n            if (currentParagraph.paragraphFormat.listFormat.listId >= 0 && nextOrPrevSibling.paragraphFormat.listFormat.listId >= 0) {\n                if (!currentParagraph.paragraphFormat.contextualSpacing) {\n                    if (isAfterSpacing && currentParagraph.paragraphFormat.spaceAfterAuto) {\n                        return true;\n                    }\n                    else if (!isAfterSpacing && currentParagraph.paragraphFormat.spaceBeforeAuto) {\n                        return true;\n                    }\n                }\n            }\n            return currentParagraph.paragraphFormat.contextualSpacing;\n        }\n        return false;\n    };\n    Layout.prototype.updateFirstParagraphSpacingBasedOnContextualSpacing = function (paragraph, isAfterSpacing) {\n        var ownerCell = paragraph.associatedCell;\n        var ownerRow = ownerCell.ownerRow;\n        var ownerTable = ownerRow.ownerTable;\n        var nextOrPrevSibling;\n        if (isAfterSpacing) {\n            nextOrPrevSibling = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.nextRenderedWidget) ? (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(ownerCell.nextRenderedWidget) ? ownerCell.nextRenderedWidget.firstChild : undefined) : paragraph.nextRenderedWidget;\n        }\n        else {\n            nextOrPrevSibling = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.previousRenderedWidget) ? (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(ownerCell.previousRenderedWidget) ? ownerCell.previousRenderedWidget.firstChild : undefined) : paragraph.previousRenderedWidget;\n        }\n        if (ownerCell.index === 0 && paragraph.index === 0) {\n            if (ownerRow.index === 0) {\n                if (ownerTable.isInsideTable && ownerTable.index == 0) {\n                    nextOrPrevSibling = this.checkOwnerTablePrevItem(ownerTable, paragraph);\n                }\n                else {\n                    //If paragraph is preserved in first row first cell means, need to check owner table previous sibling.\n                    var ownerTablePrevSibling = ownerTable.previousRenderedWidget;\n                    return ownerTablePrevSibling;\n                }\n            }\n            else {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextOrPrevSibling) && paragraph.paragraphFormat.baseStyle.name === \"Normal\" && paragraph.paragraphFormat.listFormat.listId < 0) {\n                    return paragraph;\n                }\n                return nextOrPrevSibling;\n            }\n        }\n        else if (paragraph.index === 0 && !isAfterSpacing) {\n            //If para is first item in any cell excluding first cell, need to check previous cell last item.\n            var prevCell = ownerRow.childWidgets[ownerCell.index - 1];\n            var prevCelllastItem = prevCell.childWidgets[prevCell.childWidgets.length - 1];\n            //if previous cell last item is table means skip before spacing value no need to check any paragraph styles.\n            if (prevCelllastItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && paragraph.paragraphFormat.baseStyle.name === \"Normal\" && paragraph.paragraphFormat.listFormat.listId < 0) {\n                return paragraph;\n            }\n        }\n        return nextOrPrevSibling;\n    };\n    Layout.prototype.updateLastParagraphSpacingBasedOnContextualSpacing = function (paragraph) {\n        var ownerCell = paragraph.associatedCell;\n        var ownerRow = ownerCell.ownerRow;\n        var nextCellFirstItem;\n        if (ownerCell.index === ownerRow.childWidgets.length - 1 && paragraph.index === ownerCell.childWidgets.length - 1) {\n            if (paragraph.paragraphFormat.baseStyle.name === \"Normal\" && paragraph.paragraphFormat.listFormat.listId < 0) {\n                //If para preserved in last item in cell and cell is last cell in current row means its after spacing value not considered.\n                return paragraph;\n            }\n        }\n        else if (paragraph.index === ownerCell.childWidgets.length - 1) {\n            //If current para is last item in current cell then need to check next cell first item.\n            var nextCell = ownerRow.childWidgets[ownerCell.index + 1];\n            nextCellFirstItem = nextCell.firstChild;\n            //If next cell first item is table then need to check inner table first para.\n            //This is applicable for multiple nested table so when first item is table it try to get its first paragraph.\n            while (nextCellFirstItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                nextCellFirstItem = nextCellFirstItem.childWidgets[0].childWidgets[0].childWidgets[0];\n            }\n        }\n        return nextCellFirstItem;\n    };\n    Layout.prototype.checkOwnerTablePrevItem = function (ownerTable, paragraph) {\n        var row = ownerTable.associatedCell.ownerRow;\n        var prevSibling;\n        if (row.index > 0) {\n            if (paragraph.paragraphFormat.baseStyle.name === \"Normal\" && paragraph.paragraphFormat.listFormat.listId < 0) {\n                return paragraph;\n            }\n        }\n        else {\n            if (row.ownerTable.isInsideTable && row.ownerTable.index === 0) {\n                this.checkOwnerTablePrevItem(row.ownerTable, paragraph);\n            }\n            else {\n                var prevSibling_1 = row.ownerTable.previousRenderedWidget;\n                return prevSibling_1;\n            }\n        }\n        return prevSibling;\n    };\n    Object.defineProperty(Layout.prototype, \"viewer\", {\n        get: function () {\n            return this.documentHelper.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Layout.prototype.layout = function () {\n        // Todo: Need to handle complete document layout(relayout).\n        //const page: Page = this.documentHelper.pages[0];\n        //const body: BodyWidget = page.bodyWidgets[0];\n    };\n    /**\n     * Releases un-managed and - optionally - managed resources.\n     *\n     * @returns {void}\n     */\n    Layout.prototype.destroy = function () {\n        this.documentHelper = undefined;\n        this.value = undefined;\n        this.allowLayout = undefined;\n        this.isInitialLoad = undefined;\n        this.fieldBegin = undefined;\n        this.maxTextHeight = undefined;\n        this.maxBaseline = undefined;\n        this.maxTextBaseline = undefined;\n        this.isSkipFirstLineIndent = undefined;\n        this.isFieldCode = undefined;\n        this.footnoteHeight = undefined;\n        this.isMultiColumnDoc = undefined;\n        this.isIFfield = undefined;\n        this.isPastingContent = undefined;\n    };\n    Layout.prototype.layoutItems = function (sections, isReLayout, isContinuousSection) {\n        var _this = this;\n        var page;\n        var height = 0;\n        var width = 0;\n        for (var i = 0; i < sections.length; i++) {\n            var section = sections[i];\n            if (section.sectionFormat.numberOfColumns > 1) {\n                this.isMultiColumnDoc = true;\n            }\n            var nextSection = sections[i + 1];\n            this.viewer.columnLayoutArea.setColumns(section.sectionFormat);\n            var lastpage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n            var bodyWidget = void 0;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastpage) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1]) && lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1].childWidgets.length === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1].previousSplitWidget)) {\n                bodyWidget = lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1].previousSplitWidget;\n            }\n            /* eslint-disable-next-line max-len */\n            // If page break next para is section last para and it is empty then ms word will layout in the section break in previous para. So checking the next para into existing behaviour.\n            if (i > 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bodyWidget) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bodyWidget.lastChild) && !(bodyWidget.lastChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget)) {\n                var lastChild_1 = bodyWidget.lastChild;\n                var previousWidget = lastChild_1.previousRenderedWidget;\n                if (lastChild_1.isSectionBreak && previousWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && previousWidget.isEndsWithPageBreak) {\n                    lastChild_1 = previousWidget;\n                }\n                if ((this.documentHelper.compatibilityMode === 'Word2013' && (lastChild_1.isEndsWithPageBreak || lastChild_1.isEndsWithColumnBreak)) && lastpage.bodyWidgets[0].childWidgets.length === 0) {\n                    var removedPages = this.documentHelper.pages.splice(this.documentHelper.pages.length - 1, 1);\n                    removedPages[0].destroy();\n                    lastpage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n                }\n            }\n            var breakCode = section.sectionFormat.breakCode;\n            var prevSection = undefined;\n            if (i !== 0 && this.documentHelper.compatibilityMode === 'Word2010' && breakCode === 'NewColumn') {\n                var splitWidgets = sections[i - 1].getSplitWidgets();\n                prevSection = splitWidgets[splitWidgets.length - 1];\n                if (prevSection.sectionFormat.columns.length > 1 && section.sectionFormat.columns.length > 1 && prevSection.sectionFormat.columns.length === section.sectionFormat.columns.length && prevSection.sectionFormat.columns.length - 1 !== prevSection.columnIndex && !(prevSection.lastChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && prevSection.lastChild.isEndsWithPageBreak)) {\n                    var nextColumn = this.viewer.columnLayoutArea.getNextColumnByBodyWidget(prevSection);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextColumn)) {\n                        section.columnIndex = nextColumn.index;\n                        section.isWord2010NextColumn = true;\n                        section.y = prevSection.y;\n                        this.viewer.clientActiveArea.height -= section.y - this.viewer.clientActiveArea.y;\n                        this.viewer.clientActiveArea.y = section.y;\n                    }\n                }\n            }\n            if (!section.isWord2010NextColumn && breakCode !== 'NoBreak') {\n                breakCode = 'NewPage';\n            }\n            // We are layouting the section last paragraph in previous paragraph if its empty So if previous paragraph is page break then we need to create new page.\n            var lastChild = void 0;\n            if (i !== 0) {\n                lastChild = lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1].lastChild;\n                if (lastChild) {\n                    var previousWidget = lastChild.previousRenderedWidget;\n                    if (lastChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && lastChild.isSectionBreak && previousWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                        lastChild = previousWidget;\n                    }\n                }\n            }\n            if ((i === 0 && !isContinuousSection) || (i !== 0 && !section.isWord2010NextColumn && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(breakCode) || breakCode === 'NewPage' || height !== section.sectionFormat.pageHeight || width !== section.sectionFormat.pageWidth || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastChild) && lastChild.isEndsWithPageBreak)))) {\n                page = this.viewer.createNewPage(section);\n            }\n            else {\n                var clientY = this.documentHelper.viewer.clientActiveArea.y;\n                var clientHeight = this.documentHelper.viewer.clientActiveArea.height;\n                if (isContinuousSection) {\n                    var section_1 = this.getBodyWidget(lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1], true);\n                    var height_1 = this.getNextWidgetHeight(section_1);\n                    this.viewer.updateClientArea(section_1, section_1.page);\n                    clientHeight = this.viewer.clientActiveArea.height - (height_1 - this.viewer.clientActiveArea.y);\n                    clientY = height_1;\n                    isContinuousSection = false;\n                }\n                //if (i - 1 > 0) {\n                page = lastpage;\n                //}\n                page.bodyWidgets.push(section);\n                page.bodyWidgets[page.bodyWidgets.length - 1].page = page;\n                this.documentHelper.viewer.updateClientArea(section, page);\n                this.documentHelper.viewer.clientActiveArea.y = clientY;\n                this.documentHelper.viewer.clientActiveArea.height = clientHeight;\n            }\n            height = section.sectionFormat.pageHeight;\n            width = section.sectionFormat.pageWidth;\n            this.addBodyWidget(this.viewer.clientActiveArea, section);\n            if (this.documentHelper.pages.length > 1) {\n                var pageIndex = 0;\n                for (var i_1 = 0; i_1 < this.documentHelper.pages.length; i_1++) {\n                    var prevPage = this.documentHelper.pages[i_1];\n                    var prevSectionIndex = prevPage.sectionIndex;\n                    var index = section.index;\n                    if (prevSectionIndex > index || prevPage === page) {\n                        break;\n                    }\n                    pageIndex++;\n                }\n                if (pageIndex < this.documentHelper.pages.length - 1) {\n                    this.documentHelper.insertPage(pageIndex, page);\n                }\n            }\n            this.layoutSection(section, 0, nextSection);\n            if (section.isWord2010NextColumn && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevSection)) {\n                var sectionHeight = this.getNextWidgetHeight(prevSection);\n                if (this.viewer.clientActiveArea.y < sectionHeight) {\n                    this.viewer.updateClientArea(prevSection, prevSection.page);\n                    this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.height - (sectionHeight - this.viewer.clientActiveArea.y);\n                    this.viewer.clientActiveArea.y = sectionHeight;\n                }\n            }\n        }\n        if (!isReLayout) {\n            this.layoutComments(this.documentHelper.comments);\n        }\n        this.updateFieldElements();\n        if (this.documentHelper.owner.layoutType === 'Pages') {\n            this.layoutEndNoteElement();\n        }\n        /* tslint:disable:align */\n        setTimeout(function () {\n            if (_this.documentHelper) {\n                _this.documentHelper.isScrollHandler = true;\n                // if (this.documentHelper.owner.isSpellCheck && this.documentHelper.owner.spellChecker.enableOptimizedSpellCheck) {\n                //     this.documentHelper.triggerElementsOnLoading = true;\n                // }\n                _this.documentHelper.clearContent();\n                _this.viewer.updateScrollBars();\n                _this.documentHelper.isScrollHandler = false;\n                _this.isInitialLoad = false;\n            }\n        }, 50);\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.layoutComments = function (comments) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(comments)) {\n            this.viewer.owner.commentReviewPane.layoutComments(comments);\n        }\n    };\n    Layout.prototype.layoutSection = function (section, index, nextSection) {\n        var block = section.firstChild;\n        var nextBlock;\n        var prevBlock;\n        do {\n            if (!this.isLayoutWhole && block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && block.tableFormat.preferredWidthType === 'Auto'\n                && !block.tableFormat.allowAutoFit) {\n                block.calculateGrid();\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(block)) {\n                this.viewer.updateClientAreaForBlock(block, true, undefined, true, true);\n                var bodyIndex = block.containerWidget.indexInOwner;\n                nextBlock = this.layoutBlock(block, index);\n                index = 0;\n                this.viewer.updateClientAreaForBlock(block, false);\n                prevBlock = block;\n                block = nextBlock;\n            }\n        } while (block);\n        block = section.firstChild;\n        if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer && section.sectionFormat.numberOfColumns > 1 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextSection) && nextSection.sectionFormat.breakCode === 'NoBreak' && (section.sectionFormat.breakCode === 'NoBreak' || (section.sectionIndex === section.page.bodyWidgets[0].sectionIndex))) {\n            if (this.getColumnBreak(section)) {\n                var splittedSection = section.getSplitWidgets();\n                var bodyWidget = splittedSection[splittedSection.length - 1];\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.page.nextPage)) {\n                    this.splitBodyWidgetBasedOnColumn(bodyWidget);\n                }\n                else {\n                    var firstBody = this.getBodyWidget(bodyWidget, true);\n                    this.viewer.updateClientArea(firstBody, firstBody.page);\n                    var height = this.getNextWidgetHeight(firstBody);\n                    this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n                    this.viewer.clientActiveArea.y = height;\n                }\n            }\n            else {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.page.nextPage)) {\n                    section = this.documentHelper.pages[this.documentHelper.pages.length - 1].bodyWidgets[0];\n                }\n                this.splitBodyWidgetBasedOnColumn(section);\n            }\n        }\n        var page;\n        if (block && block.bodyWidget && block.bodyWidget.page) {\n            page = block.bodyWidget.page;\n        }\n        while (page) {\n            if (page.footnoteWidget) {\n                this.layoutfootNote(page.footnoteWidget);\n                page = page.nextPage;\n            }\n            else {\n                page = page.nextPage;\n            }\n        }\n        page = undefined;\n        block = undefined;\n    };\n    /**\n     * @private\n     *\n     */\n    Layout.prototype.reLayoutMultiColumn = function (section, isFirstBlock, blockIndex) {\n        this.isInitialLoad = true;\n        section = section.getSplitWidgets()[0];\n        this.combineMultiColumnForRelayout(section);\n        if (section.sectionFormat.numberOfColumns > 1) {\n            this.isMultiColumnDoc = true;\n        }\n        this.isMultiColumnSplit = false;\n        var previousSection = section.previousRenderedWidget;\n        var nextSection = section.nextRenderedWidget;\n        var isUpdatedClientArea = false;\n        // Section's Y position is not updated properly when the two sections combined and layouted.\n        if (!isFirstBlock && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.firstChild) && section.firstChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && section.y !== section.firstChild.y) {\n            section.y = section.firstChild.y;\n        }\n        if (isFirstBlock && nextSection && section.page !== nextSection.page && section.firstChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n            var paragraph = section.firstChild;\n            var lineHeight = 0;\n            if (paragraph.isEmpty()) {\n                lineHeight = this.documentHelper.textHelper.getParagraphMarkSize(paragraph.characterFormat).Height;\n            }\n            else {\n                var firstLine = paragraph.childWidgets[0];\n                lineHeight = this.getMaxElementHeight(firstLine);\n            }\n            var previousBlock = paragraph.previousRenderedWidget;\n            if (section.y === this.viewer.clientActiveArea.y && lineHeight > this.viewer.clientActiveArea.height) {\n                previousBlock = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(previousBlock) ? paragraph : previousBlock;\n                this.moveBlocksToNextPage(previousBlock);\n                this.viewer.columnLayoutArea.setColumns(section.sectionFormat);\n                this.viewer.updateClientArea(section, section.page);\n                isUpdatedClientArea = true;\n            }\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(previousSection) && previousSection.page !== section.page && section.firstChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && previousSection.lastChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n            var previousParagraph = previousSection.lastChild;\n            var paragraph = section.firstChild;\n            if (section instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget && previousSection.lastChild && previousParagraph instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && previousSection.sectionFormat.breakCode === 'NoBreak' && section.page.index !== previousSection.page.index && section.index !== previousSection.index) {\n                var bodyWidget = previousSection;\n                if (bodyWidget.sectionFormat.columns.length > 1) {\n                    bodyWidget = this.getBodyWidget(bodyWidget, true);\n                }\n                var bottom = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round((this.getNextWidgetHeight(bodyWidget) + paragraph.height), 2);\n                // Bug 858530: Shift the widgets to previous container widget if the client height is not enough to place this widget.\n                if (!previousSection.lastChild.isEndsWithPageBreak && !previousSection.lastChild.isEndsWithColumnBreak\n                    && bottom <= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(this.viewer.clientActiveArea.bottom, 2)) {\n                    var page = previousSection.page;\n                    var nextPage = section.page;\n                    for (var j = 0; j < nextPage.bodyWidgets.length; j++) {\n                        var nextBodyWidget = nextPage.bodyWidgets[j];\n                        nextPage.bodyWidgets.splice(nextPage.bodyWidgets.indexOf(nextBodyWidget), 1);\n                        page.bodyWidgets.splice(page.bodyWidgets.length, 0, nextBodyWidget);\n                        nextBodyWidget.page = page;\n                        j--;\n                    }\n                    section.y = this.viewer.clientActiveArea.y;\n                    this.documentHelper.removeEmptyPages();\n                }\n            }\n        }\n        if (!isUpdatedClientArea) {\n            this.viewer.columnLayoutArea.setColumns(section.sectionFormat);\n            this.viewer.updateClientArea(section, section.page);\n            this.viewer.clientActiveArea.height -= section.y - this.viewer.clientActiveArea.y;\n            this.viewer.clientActiveArea.y = section.y;\n        }\n        this.addBodyWidget(this.viewer.clientActiveArea, section);\n        this.clearBlockWidget(section.childWidgets, true, true, true);\n        this.isMultiColumnLayout = true;\n        this.reLayoutMultiColumnBlock(section, nextSection, blockIndex);\n        this.isMultiColumnLayout = false;\n        this.isInitialLoad = false;\n        var splitSections = section.getSplitWidgets();\n        var lastSection = splitSections[splitSections.length - 1];\n        var firstBody = this.getBodyWidget(lastSection, true);\n        this.viewer.updateClientArea(firstBody, firstBody.page);\n        var height = this.getNextWidgetHeight(firstBody);\n        this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n        this.viewer.clientActiveArea.y = height;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastSection) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastSection.nextRenderedWidget)) {\n            nextSection = lastSection.nextRenderedWidget;\n            var clientY = this.documentHelper.viewer.clientActiveArea.y;\n            var clientHeight = this.documentHelper.viewer.clientActiveArea.height;\n            this.documentHelper.viewer.updateClientArea(nextSection, nextSection.page);\n            this.documentHelper.viewer.clientActiveArea.y = clientY;\n            this.documentHelper.viewer.clientActiveArea.height = clientHeight;\n            this.documentHelper.blockToShift = nextSection.firstChild;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastSection.nextRenderedWidget) ||\n            (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastSection.nextRenderedWidget) && lastSection.sectionFormat.breakCode !== 'NoBreak' && lastSection.nextRenderedWidget.sectionFormat.pageHeight !== lastSection.sectionFormat.pageHeight && lastSection.nextRenderedWidget.sectionFormat.pageWidth !== lastSection.sectionFormat.pageWidth)) {\n            this.documentHelper.blockToShift = undefined;\n        }\n    };\n    Layout.prototype.combineMultiColumnForRelayout = function (section) {\n        var splitSections = section.getSplitWidgets();\n        var firstSection = splitSections[0];\n        section = splitSections[splitSections.length - 1];\n        while (section !== firstSection) {\n            var prevSection = section.previousRenderedWidget;\n            var isPreviousSplit = false;\n            for (var i = 0; i < section.childWidgets.length; i++) {\n                if (section.childWidgets[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BlockWidget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.childWidgets[i].previousSplitWidget)\n                    && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.childWidgets[i].previousSplitWidget.previousSplitWidget)\n                    && section.childWidgets[i].previousSplitWidget.bodyWidget.page !== section.childWidgets[i].previousSplitWidget.previousSplitWidget.bodyWidget.page) {\n                    isPreviousSplit = true;\n                }\n                if ((section.childWidgets[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BlockWidget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.childWidgets[i].previousSplitWidget) && section.childWidgets[i].previousSplitWidget.bodyWidget.page === section.childWidgets[i].bodyWidget.page && !isPreviousSplit)) {\n                    section.childWidgets[i].combineWidget(this.viewer);\n                    if (prevSection.lastChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                        this.updateCellHeightInCombinedTable(prevSection.lastChild);\n                    }\n                    i--;\n                    continue;\n                }\n                prevSection.childWidgets.push(section.childWidgets[i]);\n                section.childWidgets[i].containerWidget = prevSection;\n                section.childWidgets[i].containerWidget.page = prevSection.page;\n                section.childWidgets.splice(0, 1);\n                i--;\n            }\n            section = section.previousRenderedWidget;\n        }\n        this.documentHelper.removeEmptyPages();\n    };\n    Layout.prototype.reLayoutMultiColumnBlock = function (section, nextSection, blockIndex) {\n        var block = section.firstChild;\n        var nextBlock;\n        do {\n            if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && block.tableFormat.preferredWidthType === 'Auto'\n                && !block.tableFormat.allowAutoFit) {\n                block.calculateGrid();\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(block)) {\n                this.viewer.updateClientAreaForBlock(block, true, undefined, true);\n                nextBlock = this.layoutBlock(block, 0, block.index < blockIndex ? true : false);\n                this.viewer.updateClientAreaForBlock(block, false);\n                block = nextBlock;\n            }\n        } while (block && section.getSplitWidgets().indexOf(block.bodyWidget) !== -1);\n        block = section.firstChild;\n        if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer && section.sectionFormat.numberOfColumns > 1 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextSection) && nextSection.sectionFormat.breakCode === 'NoBreak' && (section.sectionFormat.breakCode === 'NoBreak' || (section.sectionIndex === section.page.bodyWidgets[0].sectionIndex))) {\n            var splittedSection = section.getSplitWidgets();\n            var bodyWidget = splittedSection[splittedSection.length - 1];\n            if (this.getColumnBreak(section)) {\n                if (section.page !== bodyWidget.page) {\n                    this.splitBodyWidgetBasedOnColumn(bodyWidget);\n                }\n                else {\n                    var firstBody = this.getBodyWidget(bodyWidget, true);\n                    this.viewer.updateClientArea(firstBody, firstBody.page);\n                    var height = this.getNextWidgetHeight(firstBody);\n                    this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n                    this.viewer.clientActiveArea.y = height;\n                }\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.page.nextPage)) {\n                this.splitBodyWidgetBasedOnColumn(bodyWidget);\n            }\n        }\n    };\n    Layout.prototype.splitBodyWidgetBasedOnColumn = function (section) {\n        section = this.getBodyWidget(section, true);\n        var firstSection = section;\n        this.isMultiColumnSplit = true;\n        if (!this.isInitialLoad && section.sectionFormat.equalWidth) {\n            var previousStartIndex = this.documentHelper.selection.startOffset;\n            var previousEndIndex = this.documentHelper.selection.endOffset;\n            this.combineMultiColumn(section);\n            this.layoutMultiColumnBody(section, false);\n            if (previousStartIndex !== this.documentHelper.selection.startOffset) {\n                this.documentHelper.selection.select(previousStartIndex, previousEndIndex);\n            }\n        }\n        this.combineMultiColumn(section);\n        var lineCountInfo = this.getCountOrLine(section, undefined, undefined, true);\n        var totalHeight = lineCountInfo.lineCount;\n        var lineToBeSplit = Math.round(totalHeight / section.sectionFormat.numberOfColumns);\n        while (section) {\n            var lineCountInfo_1 = this.getCountOrLine(section, lineToBeSplit, true, false);\n            var line = lineCountInfo_1.lineWidget;\n            var lineIndexInCell = lineCountInfo_1.lineCount;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(line)) {\n                if (line.paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) {\n                    this.moveToNextLine(line, true, line.indexInOwner);\n                }\n                else if (line.paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget) {\n                    var table = [line.paragraph.containerWidget.ownerTable];\n                    var rows = [line.paragraph.containerWidget.ownerRow];\n                    var index = line.paragraph.containerWidget.index;\n                    if (table[table.length - 1].isInsideTable) {\n                        table[table.length - 1] = this.getParentTable(table[table.length - 1]);\n                        rows[rows.length - 1] = this.getParentRow(rows[rows.length - 1]);\n                    }\n                    this.updateWidgetsToTable(table, rows, rows[rows.length - 1], false, lineIndexInCell, index, true);\n                    var tableWidget = table[table.length - 1];\n                    var rowWidget = rows[rows.length - 1];\n                    var nextRow = rowWidget.nextRenderedWidget;\n                    while (nextRow) {\n                        this.clearRowWidget(nextRow, true, true, false);\n                        nextRow = this.layoutRow(table, nextRow);\n                        nextRow = nextRow.nextRenderedWidget;\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tableWidget.nextRenderedWidget) && section.sectionFormat.equalWidth) {\n                        this.documentHelper.blockToShift = tableWidget.nextRenderedWidget;\n                        this.documentHelper.layout.shiftLayoutedItems(false);\n                    }\n                }\n                var firstBody = this.getBodyWidget(line.paragraph.bodyWidget, true);\n                var lastBody = this.getBodyWidget(firstBody, false);\n                if (!firstBody.sectionFormat.equalWidth && lastBody.sectionFormat.numberOfColumns - 1 === lastBody.columnIndex && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastBody.nextSplitWidget)) {\n                    var nonEqualBody = firstBody;\n                    var initialCount = (this.getCountOrLine(firstBody)).lineCount;\n                    this.layoutMultiColumnBody(nonEqualBody, true);\n                    var finalCount = (this.getCountOrLine(firstBody)).lineCount;\n                    if (initialCount !== finalCount) {\n                        this.splitBodyWidgetBasedOnColumn(firstBody);\n                    }\n                }\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastBody.nextSplitWidget)) {\n                    this.viewer.updateClientArea(firstBody, firstBody.page);\n                    var height = this.getNextWidgetHeight(firstBody);\n                    this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n                    this.viewer.clientActiveArea.y = height;\n                    this.viewer.clientArea.y = this.viewer.clientActiveArea.y;\n                    this.viewer.clientArea.height = this.viewer.clientActiveArea.height;\n                }\n            }\n            section = section.nextRenderedWidget;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section) && section.columnIndex === section.sectionFormat.numberOfColumns - 1) {\n                break;\n            }\n        }\n        this.isMultiColumnSplit = false;\n        if (!this.isInitialLoad) {\n            section = this.getBodyWidget(firstSection, false);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.nextRenderedWidget)) {\n                this.documentHelper.blockToShift = section.nextRenderedWidget.firstChild;\n            }\n        }\n    };\n    /**\n   * @private\n   */\n    Layout.prototype.getColumnBreak = function (section) {\n        var firstBody = this.getBodyWidget(section, true);\n        if (firstBody.sectionFormat.numberOfColumns <= 1) {\n            return false;\n        }\n        while (firstBody) {\n            if (firstBody.lastChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && firstBody.lastChild.isEndsWithColumnBreak) {\n                return true;\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(firstBody.nextRenderedWidget) || firstBody.index !== firstBody.nextRenderedWidget.index) {\n                break;\n            }\n            firstBody = firstBody.nextRenderedWidget;\n        }\n        return false;\n    };\n    Layout.prototype.layoutMultiColumnBody = function (nonEqualBody, updatePosition) {\n        var skipPosition = false;\n        while (nonEqualBody) {\n            if (!skipPosition) {\n                this.viewer.updateClientArea(nonEqualBody, nonEqualBody.page);\n                this.viewer.clientActiveArea.height -= nonEqualBody.y - this.viewer.clientActiveArea.y;\n                if (nonEqualBody instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) {\n                    this.viewer.clientArea.height = Number.POSITIVE_INFINITY;\n                    this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n                }\n                else {\n                    this.viewer.clientActiveArea.y = nonEqualBody.y;\n                }\n            }\n            skipPosition = updatePosition ? false : true;\n            for (var i = 0; i < nonEqualBody.childWidgets.length; i++) {\n                var block = nonEqualBody.childWidgets[i];\n                if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                    this.clearTableWidget(block, true, true, true);\n                }\n                this.viewer.updateClientAreaForBlock(block, true);\n                var isUpdatedList = false;\n                if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(block.paragraphFormat)\n                    && block.paragraphFormat.listFormat.listId !== -1) {\n                    isUpdatedList = block.paragraphFormat.listFormat.listLevelNumber === 0 ? true : false;\n                }\n                this.layoutBlock(block, 0, isUpdatedList);\n                this.viewer.updateClientAreaForBlock(block, false);\n            }\n            if (nonEqualBody.columnIndex === nonEqualBody.sectionFormat.numberOfColumns - 1 || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nonEqualBody.nextRenderedWidget) && nonEqualBody.sectionIndex !== nonEqualBody.nextRenderedWidget.sectionIndex)) {\n                break;\n            }\n            nonEqualBody = nonEqualBody.nextRenderedWidget;\n        }\n    };\n    Layout.prototype.getNextWidgetHeight = function (body) {\n        var height = 0;\n        var updatedHeight = 0;\n        while (body && body.childWidgets.length > 0) {\n            var lastChild = body.lastChild;\n            if (lastChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && lastChild.isSectionBreak && lastChild.previousRenderedWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && this.documentHelper.compatibilityMode !== 'Word2013') {\n                lastChild = lastChild.previousRenderedWidget;\n            }\n            height = lastChild.height;\n            if (lastChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                height = this.getHeight(lastChild);\n            }\n            height += lastChild.y;\n            if (height > updatedHeight) {\n                updatedHeight = height;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(body) && body.columnIndex === body.sectionFormat.numberOfColumns - 1 || body.sectionFormat.numberOfColumns === 0 || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(body.nextRenderedWidget) && body.sectionIndex !== body.nextRenderedWidget.sectionIndex)) {\n                break;\n            }\n            body = body.nextRenderedWidget;\n        }\n        return updatedHeight;\n    };\n    Layout.prototype.getHeight = function (block) {\n        var height = 0;\n        for (var i = 0; i < block.childWidgets.length; i++) {\n            height += block.childWidgets[i].height;\n        }\n        return height;\n    };\n    Layout.prototype.getBookmarkMargin = function (lineWidget) {\n        var height = 0;\n        for (var i = 0; i < lineWidget.children.length; i++) {\n            var element = lineWidget.children[i];\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.margin) && element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BookmarkElementBox) {\n                height = element.margin.top + element.margin.bottom;\n                break;\n            }\n        }\n        return height;\n    };\n    Layout.prototype.getCountOrLine = function (section, lineToBeSplit, isSplit, getHeight) {\n        var totalNoOflines = 0;\n        var line;\n        var count = 0;\n        var skip = false;\n        var maxHeight = 0;\n        var lineIndexInCell = 0;\n        var splitCountLine;\n        var lineMargin = 0;\n        while (section) {\n            for (var i = 0; i < section.childWidgets.length; i++) {\n                var block = section.childWidgets[i];\n                if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                    //In ms word last paragraph of body widget is renderd in previous paragraph. So no need to calculate the last para\n                    if (block.isSectionBreak) {\n                        continue;\n                    }\n                    for (var j = 0; j < block.childWidgets.length; j++) {\n                        var lineWidget = block.childWidgets[j];\n                        lineMargin = 0;\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lineWidget.margin)) {\n                            lineMargin = lineWidget.margin.top + lineWidget.margin.bottom + this.getBookmarkMargin(lineWidget);\n                        }\n                        if (!isSplit) {\n                            totalNoOflines++;\n                            maxHeight += lineWidget.height - lineMargin;\n                        }\n                        else {\n                            maxHeight += lineWidget.height - lineMargin;\n                            if (Math.round(lineToBeSplit) < Math.round(maxHeight)) {\n                                line = block.childWidgets[j];\n                                skip = true;\n                                count = 0;\n                                break;\n                            }\n                            else {\n                                count++;\n                            }\n                        }\n                    }\n                }\n                else if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                    splitCountLine = this.getCountOrLineTable(block, lineToBeSplit, isSplit, maxHeight, false, getHeight);\n                    if (getHeight) {\n                        maxHeight += splitCountLine.lineCount;\n                    }\n                    else if (!isSplit) {\n                        totalNoOflines += splitCountLine.lineCount;\n                    }\n                    else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splitCountLine.lineWidget)) {\n                        //  count = splitCountLine.lineCount;\n                        maxHeight = splitCountLine.lineCount;\n                    }\n                    else {\n                        line = splitCountLine.lineWidget;\n                        lineIndexInCell = splitCountLine.lineCount;\n                        skip = true;\n                    }\n                }\n                if (skip && isSplit) {\n                    break;\n                }\n            }\n            if (skip && isSplit) {\n                break;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.nextRenderedWidget) && section.index !== section.nextRenderedWidget.index) {\n                break;\n            }\n            section = section.nextRenderedWidget;\n        }\n        if (getHeight) {\n            return { lineWidget: undefined, lineCount: maxHeight };\n        }\n        else if (!isSplit) {\n            return { lineWidget: undefined, lineCount: totalNoOflines };\n        }\n        else {\n            return { lineWidget: line, lineCount: lineIndexInCell };\n        }\n    };\n    Layout.prototype.getCountOrLineTable = function (block, lineToBeSplit, isSplit, maxSplitHeight, isNested, getHeight) {\n        var lineIndexInCell = 0;\n        var skip = false;\n        var line;\n        var totalNoOflines = 0;\n        var totalHeight = 0;\n        var minCount = 0;\n        var maxCount = 0;\n        var minHeight = 0;\n        var maxHeight = 0;\n        var splitCountLine;\n        for (var i = 0; i < block.childWidgets.length; i++) {\n            var row = block.childWidgets[i];\n            var minCountCell = void 0;\n            var maxCountCell = void 0;\n            minCount = 0;\n            maxCount = 0;\n            minHeight = 0;\n            maxHeight = 0;\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[j];\n                for (var k = 0; k < cell.childWidgets.length; k++) {\n                    var blocks = cell.childWidgets[k];\n                    if (blocks instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && blocks.childWidgets.length > 0) {\n                        for (var l = 0; l < blocks.childWidgets.length; l++) {\n                            minCount++;\n                            minCountCell = cell;\n                            minHeight += blocks.childWidgets[l].height;\n                        }\n                    }\n                    else {\n                        splitCountLine = this.getCountOrLineTable(blocks, lineToBeSplit, isSplit, maxSplitHeight, true, getHeight);\n                        minCount += splitCountLine.lineCount;\n                        minHeight += splitCountLine.lineCount;\n                    }\n                }\n                if (maxCount < minCount) {\n                    maxCount = minCount;\n                    // maxCountCell = minCountCell;\n                }\n                if (maxHeight < minHeight) {\n                    maxHeight = minHeight;\n                    maxCountCell = minCountCell;\n                }\n                minCount = 0;\n                minHeight = 0;\n            }\n            if (!isSplit || isNested) {\n                totalNoOflines = totalNoOflines + maxCount;\n                totalHeight += maxHeight;\n            }\n            else {\n                var countInCell = 0;\n                for (var i_2 = 0; i_2 < maxCountCell.childWidgets.length; i_2++) {\n                    var blocks = maxCountCell.childWidgets[i_2];\n                    if (blocks instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                        for (var j = 0; j < blocks.childWidgets.length; j++) {\n                            maxSplitHeight += blocks.childWidgets[j].height;\n                            if (Math.round(lineToBeSplit) < Math.round(maxSplitHeight)) {\n                                line = blocks.childWidgets[j];\n                                skip = true;\n                                maxSplitHeight = 0;\n                                lineIndexInCell = countInCell;\n                                break;\n                            }\n                            else {\n                                countInCell++;\n                            }\n                            if (skip && isSplit) {\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        splitCountLine = this.getCountOrLineTable(blocks, lineToBeSplit, isSplit, maxSplitHeight, false, getHeight);\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splitCountLine.lineWidget)) {\n                            countInCell += splitCountLine.lineCount;\n                            // count = splitCountLine.lineCount;\n                            maxSplitHeight += blocks.height;\n                        }\n                        else {\n                            skip = true;\n                            maxSplitHeight = 0;\n                            line = splitCountLine.lineWidget;\n                            countInCell += splitCountLine.lineCount;\n                            lineIndexInCell = countInCell;\n                            break;\n                        }\n                    }\n                    if (skip && isSplit) {\n                        break;\n                    }\n                }\n            }\n            maxCount = 0;\n            if (skip && isSplit) {\n                break;\n            }\n        }\n        if (getHeight) {\n            return { lineWidget: undefined, lineCount: totalHeight };\n        }\n        else if (!isSplit) {\n            return { lineWidget: undefined, lineCount: totalNoOflines };\n        }\n        else if (isSplit && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(line) && isNested) {\n            return { lineWidget: undefined, lineCount: totalNoOflines };\n        }\n        else if (isSplit && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(line) && !isNested) {\n            return { lineWidget: undefined, lineCount: maxSplitHeight };\n        }\n        else {\n            return { lineWidget: line, lineCount: lineIndexInCell };\n        }\n    };\n    /**\n       * @private\n       */\n    Layout.prototype.combineMultiColumn = function (section) {\n        section = this.getBodyWidget(section, false);\n        while (section && section.columnIndex !== 0) {\n            var prevSection = section.previousRenderedWidget;\n            if (prevSection.lastChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && prevSection.lastChild.isEndsWithColumnBreak) {\n                break;\n            }\n            var isPreviousSplit = false;\n            for (var i = 0; i < section.childWidgets.length; i++) {\n                if (section.childWidgets[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BlockWidget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.childWidgets[i].previousSplitWidget)\n                    && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.childWidgets[i].previousSplitWidget.previousSplitWidget)\n                    && section.childWidgets[i].previousSplitWidget.bodyWidget.page !== section.childWidgets[i].previousSplitWidget.previousSplitWidget.bodyWidget.page) {\n                    isPreviousSplit = true;\n                }\n                if ((section.childWidgets[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BlockWidget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.childWidgets[i].previousSplitWidget) && section.childWidgets[i].previousSplitWidget.bodyWidget.page === section.childWidgets[i].bodyWidget.page && !isPreviousSplit)) {\n                    section.childWidgets[i].combineWidget(this.viewer);\n                    if (prevSection.lastChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                        this.updateCellHeightInCombinedTable(prevSection.lastChild);\n                    }\n                    i--;\n                    continue;\n                }\n                prevSection.childWidgets.push(section.childWidgets[i]);\n                section.childWidgets[i].containerWidget = prevSection;\n                section.childWidgets[i].containerWidget.page = prevSection.page;\n                section.childWidgets.splice(0, 1);\n                i--;\n            }\n            section = section.previousRenderedWidget;\n        }\n        this.documentHelper.removeEmptyPages();\n    };\n    Layout.prototype.updateCellHeightInCombinedTable = function (tableWidget) {\n        var maxCellHeight = 0;\n        var minCellHeight = 0;\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            var row = tableWidget.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[j];\n                for (var k = 0; k < cell.childWidgets.length; k++) {\n                    minCellHeight += cell.childWidgets[k].height;\n                }\n                if (minCellHeight > maxCellHeight) {\n                    maxCellHeight = minCellHeight;\n                }\n                minCellHeight = 0;\n                for (var a = 0; a < row.childWidgets.length; a++) {\n                    row.childWidgets[a].height = maxCellHeight;\n                }\n            }\n            maxCellHeight = 0;\n        }\n    };\n    Layout.prototype.layoutHeaderFooter = function (section, viewer, page) {\n        //Header layout\n        var headerFooterWidget = viewer.getCurrentPageHeaderFooter(section, true);\n        if (headerFooterWidget) {\n            var parentHeader = headerFooterWidget;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(headerFooterWidget.page)) {\n                headerFooterWidget.page = page;\n                headerFooterWidget.height = 0;\n                this.clearBlockWidget(headerFooterWidget.childWidgets, true, true, true);\n                viewer.updateHFClientArea(section.sectionFormat, true);\n                this.layoutHeaderFooterItems(viewer, headerFooterWidget);\n            }\n            headerFooterWidget = parentHeader.clone();\n            headerFooterWidget.parentHeaderFooter = parentHeader;\n            this.clearBlockWidget(headerFooterWidget.childWidgets, true, true, true);\n            var header = headerFooterWidget;\n            header.page = page;\n            header.height = 0;\n            this.updateRevisionsToHeaderFooter(header, page);\n            viewer.updateHFClientArea(section.sectionFormat, true);\n            page.headerWidget = this.layoutHeaderFooterItems(viewer, header);\n            //this.updateHeaderFooterToParent(header);\n            //When the vertical position is related to margin, then it should be adjusted based on the layouted header height. Not default header height.\n            if (section.sectionFormat.topMargin < page.boundingRectangle.bottom && page.headerWidget.floatingElements.length > 0 && page.headerWidget.floatingElements[0].textWrappingStyle !== \"Behind\") {\n                page.headerWidget = this.shiftItemsForVerticalAlignment(header);\n            }\n        }\n        //Footer Layout\n        headerFooterWidget = viewer.getCurrentPageHeaderFooter(section, false);\n        if (headerFooterWidget) {\n            var parentHeader = headerFooterWidget;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(headerFooterWidget.page)) {\n                headerFooterWidget.page = page;\n                headerFooterWidget.height = 0;\n                this.clearBlockWidget(headerFooterWidget.childWidgets, true, true, true);\n                viewer.updateHFClientArea(section.sectionFormat, false);\n                this.layoutHeaderFooterItems(viewer, headerFooterWidget);\n            }\n            headerFooterWidget = parentHeader.clone();\n            headerFooterWidget.parentHeaderFooter = parentHeader;\n            this.clearBlockWidget(headerFooterWidget.childWidgets, true, true, true);\n            var footer = headerFooterWidget;\n            footer.page = page;\n            footer.height = 0;\n            viewer.updateHFClientArea(section.sectionFormat, false);\n            this.updateRevisionsToHeaderFooter(footer, page);\n            page.footerWidget = this.layoutHeaderFooterItems(viewer, footer);\n        }\n    };\n    Layout.prototype.shiftItemsForVerticalAlignment = function (headerWidget) {\n        var floatingElements = headerWidget.floatingElements;\n        for (var i = 0; i < floatingElements.length; i++) {\n            var floatingItem = floatingElements[i];\n            var verticalOrigin = floatingItem.verticalOrigin;\n            var paragraph = floatingItem.paragraph;\n            // When a owner paragraph is inside the table, we have to skip the vertical alignment of the floating entity.\n            if (verticalOrigin === 'Margin' && !paragraph.isInsideTable) {\n                var yPosition = floatingItem.verticalPosition;\n                if (yPosition != 0) {\n                    yPosition += this.viewer.clientActiveArea.y;\n                    var diff = yPosition - floatingItem.y;\n                    floatingItem.y = yPosition;\n                    if (floatingItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) {\n                        for (var j = 0; j < floatingItem.textFrame.childWidgets.length; j++) {\n                            var block = floatingItem.textFrame.childWidgets[j];\n                            if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                                block.y = block.y + diff;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return headerWidget;\n    };\n    Layout.prototype.updateHeaderFooterToParent = function (node) {\n        var sectionIndex = node.page.sectionIndex;\n        var typeIndex = this.viewer.getHeaderFooter(node.headerFooterType);\n        var clone = node.clone();\n        this.documentHelper.headersFooters[sectionIndex][typeIndex] = clone;\n        for (var j = 0; j < clone.childWidgets.length; j++) {\n            var child = clone.childWidgets[j];\n            if (child instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                this.clearTableWidget(child, false, true);\n            }\n        }\n        return clone;\n    };\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Layout.prototype.updateRevisionsToHeaderFooter = function (clone, page) {\n        var childWidge = clone.childWidgets;\n        if (clone instanceof _page__WEBPACK_IMPORTED_MODULE_6__.HeaderFooterWidget && childWidge.length > 0) {\n            for (var i = 0; i < childWidge.length; i++) {\n                if (childWidge[i].childWidgets.length > 0) {\n                    var lineWidge = childWidge[i].childWidgets;\n                    for (var j = 0; j < lineWidge.length; j++) {\n                        var childrens = lineWidge[j].children;\n                        if (childrens) {\n                            for (var k = 0; k < childrens.length; k++) {\n                                if (childrens[k].removedIds.length > 0) {\n                                    var removeId = childrens[k].removedIds;\n                                    for (var l = 0; l < removeId.length; l++) {\n                                        var revision = this.documentHelper.revisionsInternal.get(removeId[l]);\n                                        childrens[k].revisions[l] = revision;\n                                        this.updateRevisionRange(revision, page);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Layout.prototype.updateRevisionRange = function (revision, page) {\n        for (var i = 0; i < revision.range.length; i++) {\n            var inline = revision.range[i];\n            if (inline instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(inline.line.paragraph.bodyWidget.page)) {\n                    inline.line.paragraph.bodyWidget.page = page;\n                }\n            }\n            else if (inline instanceof _format_index__WEBPACK_IMPORTED_MODULE_4__.WCharacterFormat) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(inline.ownerBase.bodyWidget.page)) {\n                    inline.ownerBase.bodyWidget.page = page;\n                }\n            }\n        }\n    };\n    Layout.prototype.linkFieldInHeaderFooter = function (widget) {\n        var firstChild = widget.firstChild;\n        do {\n            if (firstChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                this.linkFieldInParagraph(firstChild);\n            }\n            else {\n                this.linkFieldInTable(firstChild);\n            }\n            /* eslint-disable no-cond-assign */\n        } while (firstChild = firstChild.nextWidget);\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.linkFieldInParagraph = function (widget) {\n        for (var j = 0; j < widget.childWidgets.length; j++) {\n            var line = widget.childWidgets[j];\n            for (var i = 0; i < line.children.length; i++) {\n                var element = line.children[i];\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox && (element.fieldType !== 0 || (element.fieldType === 0 &&\n                    this.documentHelper.fields.indexOf(element) === -1))) {\n                    element.linkFieldCharacter(this.documentHelper);\n                }\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldTextElementBox &&\n                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.previousElement) &&\n                    element.previousElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox &&\n                    element.fieldBegin !== element.previousElement.fieldBegin) {\n                    element.fieldBegin = element.previousElement.fieldBegin;\n                }\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) {\n                    var firstBlock = element.textFrame.firstChild;\n                    if (firstBlock) {\n                        do {\n                            if (firstBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                                this.linkFieldInParagraph(firstBlock);\n                            }\n                            else {\n                                this.linkFieldInTable(firstBlock);\n                            }\n                            /* eslint-disable no-cond-assign */\n                        } while (firstBlock = firstBlock.nextWidget);\n                    }\n                }\n                else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.CommentCharacterElementBox) {\n                    var comment = this.getCommentById(this.documentHelper.comments, element.commentId);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(comment)) {\n                        if (element.commentType === 0) {\n                            comment.commentStart = element;\n                        }\n                        else {\n                            comment.commentEnd = element;\n                        }\n                        element.comment = comment;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.getCommentById = function (commentsCollection, commentId) {\n        for (var i = 0; i < commentsCollection.length; i++) {\n            var comment = commentsCollection[i];\n            if (comment.commentId === commentId) {\n                return comment;\n            }\n        }\n        return undefined;\n    };\n    Layout.prototype.linkFieldInTable = function (widget) {\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            var row = widget.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[j];\n                for (var k = 0; k < cell.childWidgets.length; k++) {\n                    var block = cell.childWidgets[k];\n                    if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                        this.linkFieldInParagraph(block);\n                    }\n                    else {\n                        this.linkFieldInTable(block);\n                    }\n                }\n            }\n        }\n    };\n    Layout.prototype.layoutHeaderFooterItems = function (viewer, widget) {\n        this.viewer.updateClientAreaLocation(widget, viewer.clientActiveArea);\n        if (widget.childWidgets.length === 0) {\n            var pargaraph = new _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget();\n            var line = new _page__WEBPACK_IMPORTED_MODULE_6__.LineWidget(pargaraph);\n            pargaraph.childWidgets.push(line);\n            widget.childWidgets.push(pargaraph);\n            pargaraph.containerWidget = widget;\n        }\n        this.linkFieldInHeaderFooter(widget);\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            var block = widget.childWidgets[i];\n            if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && block.tableFormat.preferredWidthType === 'Auto'\n                && !block.tableFormat.allowAutoFit && !block.isGridUpdated) {\n                block.calculateGrid();\n            }\n            viewer.updateClientAreaForBlock(block, true);\n            this.layoutBlock(block, 0);\n            viewer.updateClientAreaForBlock(block, false);\n        }\n        var type = widget.headerFooterType;\n        if (type === 'OddFooter' || type === 'EvenFooter' || type === 'FirstPageFooter') {\n            this.shiftChildLocation(viewer.clientArea.y - viewer.clientActiveArea.y, widget);\n        }\n        return widget;\n    };\n    Layout.prototype.shiftChildLocation = function (shiftTop, bodyWidget) {\n        var widgetTop = bodyWidget.y + shiftTop;\n        var footerMaxHeight = bodyWidget.page.boundingRectangle.height - (bodyWidget.page.boundingRectangle.height / 100) * 40;\n        widgetTop = Math.max(widgetTop, footerMaxHeight);\n        shiftTop = widgetTop - bodyWidget.y;\n        var childTop = bodyWidget.y = widgetTop;\n        for (var i = 0; i < bodyWidget.childWidgets.length; i++) {\n            var childWidget = bodyWidget.childWidgets[i];\n            if (childWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                childWidget.x = childWidget.x;\n                childWidget.y = i === 0 ? childWidget.y + shiftTop : childTop;\n                childTop += childWidget.height;\n                for (var j = 0; j < childWidget.childWidgets.length; j++) {\n                    var widget = childWidget.childWidgets[j];\n                    for (var k = 0; k < widget.children.length; k++) {\n                        var element = widget.children[k];\n                        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && element.textWrappingStyle !== \"Inline\") {\n                            if (element.verticalOrigin === \"Paragraph\" || element.verticalOrigin === \"Line\") {\n                                element.y = childWidget.y + element.verticalPosition;\n                            }\n                            else {\n                                var position = this.getFloatingItemPoints(element);\n                                element.y = position.y;\n                            }\n                            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) {\n                                var topMargin = element.textFrame.marginTop;\n                                this.updateChildLocationForCellOrShape(element.y + topMargin, element);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                this.shiftChildLocationForTableWidget(childWidget, shiftTop);\n                childTop += childWidget.height;\n            }\n        }\n    };\n    Layout.prototype.shiftChildLocationForTableWidget = function (tableWidget, shiftTop) {\n        tableWidget.y = tableWidget.y + shiftTop;\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            var childWidget = tableWidget.childWidgets[i];\n            if (childWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget) {\n                this.shiftChildLocationForTableRowWidget(childWidget, shiftTop);\n            }\n        }\n    };\n    Layout.prototype.shiftChildLocationForTableRowWidget = function (rowWidget, shiftTop) {\n        rowWidget.y = rowWidget.y + shiftTop;\n        for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n            this.shiftChildLocationForTableCellWidget(rowWidget.childWidgets[i], shiftTop);\n        }\n    };\n    Layout.prototype.shiftChildLocationForTableCellWidget = function (cellWidget, shiftTop) {\n        cellWidget.y = cellWidget.y + shiftTop;\n        for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n            if (cellWidget.childWidgets[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                cellWidget.childWidgets[i].x = cellWidget.childWidgets[i].x;\n                cellWidget.childWidgets[i].y = cellWidget.childWidgets[i].y + shiftTop;\n            }\n            else {\n                this.shiftChildLocationForTableWidget(cellWidget.childWidgets[i], shiftTop);\n            }\n        }\n    };\n    Layout.prototype.layoutBlock = function (block, index, isUpdatedList) {\n        var nextBlock;\n        if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n            if (this.isInitialLoad || (!this.isRelayout && block.paragraphFormat.bidi && this.isDocumentContainsRtl)) {\n                block.splitTextRangeByScriptType(0);\n                block.splitLtrAndRtlText(0);\n                block.combineconsecutiveRTL(0);\n            }\n            nextBlock = this.layoutParagraph(block, index, isUpdatedList);\n            var nextBlockToLayout = this.checkAndRelayoutPreviousOverlappingBlock(block);\n            if (nextBlockToLayout) {\n                nextBlock = nextBlockToLayout;\n            }\n            // this.updateLinearIndex(block);\n            // if (block != nextBlock) {\n            //     this.updateLinearIndex(nextBlock);\n            // }\n        }\n        else {\n            nextBlock = this.layoutTable(block, index);\n            this.checkAndRelayoutPreviousOverlappingBlock(block);\n            this.updateTableYPositionBasedonTextWrap(nextBlock);\n        }\n        return nextBlock.nextRenderedWidget;\n    };\n    // /**\n    //  * @private\n    //  */\n    // private updateLinearIndex(block: BlockWidget, skipParaMark?: boolean): void {\n    //     if (!isNullOrUndefined(block) && block instanceof ParagraphWidget) {\n    //         let splittedWidgets = block.getSplitWidgets();\n    //         (splittedWidgets[0] as ParagraphWidget).length = block.getTotalLength();\n    //     }\n    // }\n    Layout.prototype.updateTableYPositionBasedonTextWrap = function (table) {\n        var _this = this;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table.bodyWidget) && !(table.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame)) {\n            var tableY_1 = table.y;\n            var tableRect_1 = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(table.x, table.y, table.width, table.height);\n            table.bodyWidget.floatingElements.forEach(function (shape) {\n                if (shape instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && !shape.paragraph.isInsideTable) {\n                    var shapeRect = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(shape.x, shape.y, shape.width, shape.height);\n                    var considerShape = (shape.textWrappingStyle === 'TopAndBottom' || shape.textWrappingStyle === 'Square');\n                    if (considerShape && tableRect_1.isIntersecting(shapeRect)) {\n                        table.y = shape.y + shape.height + shape.distanceBottom;\n                        _this.updateChildLocationForTable(table.y, table);\n                        var height = table.y - tableY_1;\n                        _this.viewer.cutFromTop(_this.viewer.clientActiveArea.y + height);\n                    }\n                }\n            });\n        }\n    };\n    Layout.prototype.shiftWrapStyle = function (element) {\n        return element.textWrappingStyle === 'InFrontOfText' || element.textWrappingStyle === 'Behind' || element.textWrappingStyle === 'Inline';\n    };\n    Layout.prototype.checkAndRelayoutPreviousOverlappingBlock = function (block) {\n        if (!(block.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame) && !this.isRelayoutOverlap) {\n            var preivousBlock = block.previousWidget;\n            if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                if (block.floatingElements.length > 0) {\n                    var height = 0;\n                    for (var i = 0; i < block.floatingElements.length; i++) {\n                        var element = block.floatingElements[i];\n                        if (this.shiftWrapStyle(element)) {\n                            continue;\n                        }\n                        var shapeRect = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(element.x, element.y, element.width, element.height);\n                        while (preivousBlock) {\n                            // if height exceeds the client area height. then the paragraph belongs to previous page.\n                            // So, we need to skip relayouting overlapping widgets.\n                            // Adding this condition for row splitting to multiple page scenario.\n                            if (block.isInsideTable && height > this.viewer.clientArea.height) {\n                                this.startOverlapWidget = undefined;\n                                this.endOverlapWidget = undefined;\n                                break;\n                            }\n                            if (preivousBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                                var paraRect = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(preivousBlock.x, preivousBlock.y, preivousBlock.width, preivousBlock.height);\n                                if (shapeRect.isIntersecting(paraRect) &&\n                                    this.startOverlapWidget !== preivousBlock) {\n                                    this.startOverlapWidget = preivousBlock;\n                                    this.endOverlapWidget = block;\n                                }\n                            }\n                            height += preivousBlock.height;\n                            preivousBlock = preivousBlock.previousWidget;\n                        }\n                        preivousBlock = block.previousWidget;\n                    }\n                }\n                else {\n                    var widget = block.getSplitWidgets();\n                    if (widget) {\n                        return widget[widget.length - 1];\n                    }\n                }\n            }\n            else {\n                var table = block;\n                if (!table.wrapTextAround) {\n                    return table;\n                }\n                var tableRect = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(table.x, table.y, table.getTableCellWidth(), table.height);\n                while (preivousBlock) {\n                    if (preivousBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                        var blockRect = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(preivousBlock.x, preivousBlock.y, preivousBlock.width, preivousBlock.height);\n                        if (tableRect.isIntersecting(blockRect) &&\n                            this.startOverlapWidget !== preivousBlock) {\n                            this.startOverlapWidget = preivousBlock;\n                            this.endOverlapWidget = block;\n                        }\n                    }\n                    preivousBlock = preivousBlock.previousWidget;\n                }\n                preivousBlock = block.previousWidget;\n            }\n            if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && block.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget && block.floatingElements.length > 0 && !this.shiftWrapStyle(block.floatingElements[0]) && block.containerWidget.firstChild != block && block.y + block.floatingElements[0].height > this.viewer.clientArea.bottom) {\n                var previousBlock = block.previousWidget;\n                if (previousBlock && previousBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && (previousBlock.y + previousBlock.height + this.getLineHeigth(block, block.floatingElements[0].line) + block.floatingElements[0].height) > this.viewer.clientArea.bottom) {\n                    this.moveToNextPage(this.viewer, block.floatingElements[0].line, false, false, true);\n                    this.startOverlapWidget = block;\n                    this.endOverlapWidget = block;\n                }\n            }\n            if (this.startOverlapWidget) {\n                this.isRelayoutOverlap = true;\n                this.skipRelayoutOverlap = true;\n                this.layoutStartEndBlocks(this.startOverlapWidget, block);\n                this.isRelayoutOverlap = false;\n                this.skipRelayoutOverlap = false;\n            }\n            this.startOverlapWidget = undefined;\n            this.endOverlapWidget = undefined;\n        }\n        return block;\n    };\n    Layout.prototype.getLineHeigth = function (paragraph, line) {\n        var height = 0;\n        for (var i = 0; i < paragraph.childWidgets.length; i++) {\n            if (line != paragraph.childWidgets[i]) {\n                height += paragraph.childWidgets[i].height;\n            }\n        }\n        return height;\n    };\n    Layout.prototype.addParagraphWidget = function (area, paragraphWidget) {\n        // const ownerParaWidget: ParagraphWidget = undefined;\n        if (paragraphWidget.isEmpty() && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.paragraphFormat) &&\n            (paragraphWidget.paragraphFormat.textAlignment === 'Center' || paragraphWidget.paragraphFormat.textAlignment === 'Right'\n                || (paragraphWidget.paragraphFormat.textAlignment === 'Justify' && paragraphWidget.paragraphFormat.bidi))\n            && paragraphWidget.paragraphFormat.listFormat.listId === -1) {\n            this.updateXPositionForEmptyParagraph(area, paragraphWidget);\n            paragraphWidget.y = area.y;\n        }\n        else {\n            if (this.viewer.clientActiveArea.width <= 0 && this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.WebLayoutViewer) {\n                paragraphWidget.x = this.previousPara;\n            }\n            else {\n                paragraphWidget.x = area.x;\n                this.previousPara = paragraphWidget.x;\n            }\n            paragraphWidget.width = area.width;\n            paragraphWidget.y = area.y;\n            paragraphWidget.clientX = undefined;\n            if (paragraphWidget.hasOwnProperty('absoluteXPosition')) {\n                delete paragraphWidget['absoluteXPosition'];\n            }\n        }\n        return paragraphWidget;\n    };\n    // update the x position for bidi empty paragraph.\n    Layout.prototype.updateXPositionForEmptyParagraph = function (area, paragraph) {\n        if (paragraph.isEmpty() && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.paragraphFormat)) {\n            // const top: number = 0;\n            // const bottom: number = 0;\n            var width = this.documentHelper.textHelper.getParagraphMarkWidth(paragraph.characterFormat);\n            paragraph.clientX = area.x;\n            var left = area.x;\n            paragraph['absoluteXPosition'] = { 'width': area.width, 'x': area.x };\n            if (paragraph.paragraphFormat.textAlignment === 'Center') {\n                left += (area.width - width) / 2;\n            }\n            else {\n                left += area.width - width;\n            }\n            paragraph.width = width;\n            paragraph.x = left;\n        }\n    };\n    Layout.prototype.addLineWidget = function (paragraphWidget) {\n        var line = undefined;\n        line = new _page__WEBPACK_IMPORTED_MODULE_6__.LineWidget(paragraphWidget);\n        line.width = paragraphWidget.width;\n        paragraphWidget.childWidgets.push(line);\n        line.paragraph = paragraphWidget;\n        return line;\n    };\n    Layout.prototype.isFirstElementWithPageBreak = function (paragraphWidget) {\n        var isPageBreak = false;\n        if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer) {\n            var lineWidget = paragraphWidget.childWidgets[0];\n            if (lineWidget) {\n                var element = lineWidget.children[0];\n                while (element) {\n                    if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BookmarkElementBox && element.name.indexOf('_') >= 0) {\n                        element = element.nextElement;\n                        continue;\n                    }\n                    if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && (element.text === '\\f' || element.text === String.fromCharCode(14))) {\n                        isPageBreak = true;\n                    }\n                    break;\n                }\n            }\n        }\n        return isPageBreak;\n    };\n    /**\n     * Layouts specified paragraph.\n     *\n     * @private\n     * @param footnote\n     */\n    Layout.prototype.layoutfootNote = function (footnote) {\n        if (this.documentHelper.owner.layoutType === 'Pages') {\n            var pageIndex = footnote.page.index;\n            var clientActiveArea = this.viewer.clientActiveArea.clone();\n            var clientArea = this.viewer.clientArea.clone();\n            if (footnote.footNoteType === 'Footnote' && footnote.sectionFormat.columns.length > 1 && !this.isInitialLoad) {\n                this.updateColumnIndex(footnote.bodyWidgets[0], false);\n                this.layoutMultiColumnBody(footnote.bodyWidgets[0], true);\n            }\n            if (footnote.footNoteType === 'Endnote' && footnote.bodyWidgets[0].sectionFormat.numberOfColumns > 1) {\n                if (!this.isInitialLoad) {\n                    this.updateColumnIndex(footnote.bodyWidgets[0], false);\n                }\n                this.layoutMultiColumnBody(footnote.bodyWidgets[0], true);\n                this.viewer.clientActiveArea = clientActiveArea;\n            }\n            var clientWidth = 0;\n            if (footnote.sectionFormat.columns.length > 1 && footnote.footNoteType === 'Footnote') {\n                this.viewer.updateClientArea(footnote, footnote.page);\n                clientWidth = this.viewer.clientActiveArea.width;\n            }\n            if (footnote.footNoteType === 'Footnote') {\n                this.viewer.updateFootnoteClientArea(footnote.sectionFormat, footnote);\n                if (footnote.sectionFormat.columns.length > 1) {\n                    this.viewer.clientActiveArea.width = clientWidth;\n                    this.viewer.clientArea.width = clientWidth;\n                }\n            }\n            footnote.height = 0;\n            var block = void 0;\n            var height = 0;\n            this.isRelayoutFootnote = false;\n            var index = 0;\n            //        this.isfoot = true;\n            /* eslint-disable-next-line max-len */\n            if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer && footnote.bodyWidgets.length > 0 && ((footnote.footNoteType === 'Footnote' && footnote.sectionFormat.columns.length > 1) || (footnote.footNoteType === 'Endnote' && footnote.bodyWidgets[0].sectionFormat.columns.length > 1))) {\n                if (this.isLayoutWhole) {\n                    this.updateColumnIndex(footnote.bodyWidgets[0], false);\n                }\n                this.splitFootNoteWidgetBasedOnColumn(footnote.bodyWidgets[0]);\n            }\n            var footBody = footnote.bodyWidgets[0];\n            var clientX = 0;\n            for (var i = 0; i < footnote.bodyWidgets.length; i++) {\n                if (footnote.bodyWidgets[i].columnIndex !== footBody.columnIndex && ((footnote.footNoteType === 'Footnote' && footnote.sectionFormat.columns.length > 1) || (footnote.footNoteType === 'Endnote' && footnote.bodyWidgets[i].sectionFormat.columns.length > 1))) {\n                    this.viewer.updateClientArea(footnote.bodyWidgets[i], footnote.bodyWidgets[i].page);\n                    clientWidth = this.viewer.clientActiveArea.width;\n                    clientX = this.viewer.clientActiveArea.x;\n                    if (footnote.footNoteType === 'Footnote') {\n                        this.viewer.updateFootnoteClientArea(footnote.sectionFormat, footnote);\n                    }\n                    this.viewer.clientActiveArea.x = clientX;\n                    this.viewer.clientArea.x = clientX;\n                    this.viewer.clientActiveArea.width = clientWidth;\n                    this.viewer.clientArea.width = clientWidth;\n                    this.viewer.cutFromTop(footnote.y + height);\n                }\n                if (i === 0) {\n                    var newPara = new _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget();\n                    newPara.characterFormat = new _format_index__WEBPACK_IMPORTED_MODULE_4__.WCharacterFormat();\n                    newPara.paragraphFormat = new _format_index__WEBPACK_IMPORTED_MODULE_4__.WParagraphFormat();\n                    newPara.index = 0;\n                    var lineWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.LineWidget(newPara);\n                    newPara.childWidgets.push(lineWidget);\n                    height = this.documentHelper.textHelper.getParagraphMarkSize(newPara.characterFormat).Height;\n                    footnote.height += height;\n                    footnote.y = this.viewer.clientActiveArea.y;\n                    if (footnote.footNoteType === 'Endnote') {\n                        this.viewer.updateClientArea(footnote.bodyWidgets[i], footnote.bodyWidgets[i].page, true);\n                    }\n                    this.viewer.cutFromTop(footnote.y + height);\n                    footnote.margin = new _page__WEBPACK_IMPORTED_MODULE_6__.Margin(0, height, 0, 0);\n                }\n                index = footnote.footNoteType === 'Endnote' ? 0 : index;\n                for (var j = 0; j < footnote.bodyWidgets[i].childWidgets.length; j++) {\n                    block = footnote.bodyWidgets[i].childWidgets[j];\n                    if (footnote.footNoteType === 'Footnote' || footnote.bodyWidgets[i].getSplitWidgets().length === 1) {\n                        block.index = index;\n                        index++;\n                    }\n                    block.containerWidget = footnote.bodyWidgets[i];\n                    block.containerWidget.page = footnote.page;\n                    block.containerWidget.containerWidget = footnote;\n                    // paragraph.index = i > 1 ? i - 1 : 0;\n                    this.viewer.updateClientAreaForBlock(block, true);\n                    if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                        this.clearTableWidget(block, true, true, true);\n                        this.isRelayoutFootnote = true;\n                        if (footnote.footNoteType === 'Footnote') {\n                            this.viewer.clientArea.height = Number.POSITIVE_INFINITY;\n                            this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n                        }\n                    }\n                    this.layoutBlock(block, 0);\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footnote.bodyWidgets[i])) {\n                        break;\n                    }\n                    if (footnote.bodyWidgets[i].columnIndex === footBody.columnIndex) {\n                        footnote.height += block.height;\n                    }\n                    this.viewer.updateClientAreaForBlock(block, false);\n                }\n                footBody = footnote.bodyWidgets[i];\n            }\n            if (footnote.sectionFormat.columns.length > 1) {\n                var footHeight = this.getFootNoteBodyHeight(footnote.bodyWidgets[0]);\n                footnote.height = footHeight + height;\n            }\n            if (footnote.footNoteType === 'Footnote') {\n                this.shiftChildWidgetInFootnote(footnote);\n            }\n            if (footnote.footNoteType === 'Footnote' && footnote.sectionFormat.columns.length > 1 && footnote.page.bodyWidgets[footnote.page.bodyWidgets.length - 1].sectionFormat.columns.length > 1) {\n                var section = this.getBodyWidget(footnote.page.bodyWidgets[footnote.page.bodyWidgets.length - 1], true);\n                var height_2 = this.getNextWidgetHeight(section);\n                if (height_2 > footnote.y) {\n                    this.footnoteHeight = footnote.height;\n                    var isLayoutWhole = this.isLayoutWhole;\n                    this.isLayoutWhole = false;\n                    this.layoutMultiColumnBody(section, true);\n                    this.isLayoutWhole = isLayoutWhole;\n                }\n            }\n            this.viewer.clientActiveArea = clientActiveArea;\n            this.viewer.clientArea = clientArea;\n            if (!this.islayoutFootnote) {\n                if (this.viewer.clientActiveArea.y + this.viewer.clientActiveArea.height > footnote.y) {\n                    this.viewer.clientActiveArea.height -= footnote.height;\n                    var sub = (this.viewer.clientActiveArea.y + this.viewer.clientActiveArea.height - footnote.y);\n                    this.viewer.clientActiveArea.height -= sub;\n                }\n            }\n            if (footnote.footNoteType === 'Endnote') {\n                var endnote = undefined;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footnote.page.nextPage) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footnote.page.nextPage.endnoteWidget)) {\n                    endnote = footnote.page.nextPage.endnoteWidget;\n                }\n                else if (footnote.page.index !== pageIndex) {\n                    endnote = footnote;\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(endnote)) {\n                    var lastBodyWidget = this.getBodyWidget(endnote.page.bodyWidgets[endnote.page.bodyWidgets.length - 1], true);\n                    this.viewer.updateClientArea(lastBodyWidget, lastBodyWidget.page);\n                    this.layoutfootNote(endnote);\n                }\n            }\n        }\n        this.footnoteHeight = 0;\n        return footnote;\n    };\n    Layout.prototype.getFootNoteBodyHeight = function (section) {\n        var height = 0;\n        while (section) {\n            if (section.columnIndex !== 0) {\n                break;\n            }\n            for (var i = 0; i < section.childWidgets.length; i++) {\n                height += section.childWidgets[i].height;\n            }\n            section = section.nextRenderedWidget;\n        }\n        return height;\n    };\n    Layout.prototype.splitFootNoteWidgetBasedOnColumn = function (section) {\n        var lineCountInfo = this.getCountOrLine(section, undefined, undefined, true);\n        var totalHeight = lineCountInfo.lineCount;\n        var lineToBeSplit = Math.round(totalHeight / section.sectionFormat.numberOfColumns);\n        while (section) {\n            var lineCountInfo_2 = this.getCountOrLine(section, lineToBeSplit, true, false);\n            var clientActiveArea = this.viewer.clientActiveArea.clone();\n            var clientArea = this.viewer.clientArea.clone();\n            if (lineCountInfo_2.lineWidget.paragraph.indexInOwner === 0 && lineCountInfo_2.lineWidget.indexInOwner === 0) {\n                this.updateColumnIndex(lineCountInfo_2.lineWidget.paragraph.bodyWidget, true);\n            }\n            else {\n                this.splitParagraph(lineCountInfo_2.lineWidget.paragraph, lineCountInfo_2.lineWidget.indexInOwner, undefined);\n                var nextBody = this.moveBlocksToNextPage(lineCountInfo_2.lineWidget.paragraph.previousRenderedWidget);\n                this.viewer.clientActiveArea = clientActiveArea;\n                this.viewer.clientArea = clientArea;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextBody.nextRenderedWidget)) {\n                    this.updateColumnIndex(nextBody.nextRenderedWidget, true);\n                }\n            }\n            if (lineCountInfo_2.lineWidget.paragraph.bodyWidget.columnIndex === lineCountInfo_2.lineWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns - 1) {\n                break;\n            }\n            section = section.nextRenderedWidget;\n        }\n    };\n    Layout.prototype.updateColumnIndex = function (section, increase) {\n        while (section) {\n            if (increase) {\n                section.columnIndex++;\n            }\n            else {\n                section.columnIndex = 0;\n            }\n            section = section.nextRenderedWidget;\n        }\n    };\n    Layout.prototype.shiftChildWidgetInFootnote = function (footnote) {\n        var page = footnote.page;\n        var yPosition = footnote.y - footnote.height;\n        if (page.bodyWidgets[0].childWidgets.length === 1 && page.bodyWidgets[0].firstChild) {\n            var startY = page.bodyWidgets[0].firstChild.y;\n            var bodyWidgetHeight = this.getBodyWidgetHeight(page.bodyWidgets[0]);\n            if (yPosition < startY + bodyWidgetHeight) {\n                yPosition = startY + bodyWidgetHeight;\n            }\n        }\n        footnote.y = yPosition;\n        yPosition += footnote.margin.top;\n        var multiColumnY = yPosition;\n        var columnBody = footnote.bodyWidgets[0];\n        for (var i = 0; i < footnote.bodyWidgets.length; i++) {\n            if (footnote.bodyWidgets[i].columnIndex !== columnBody.columnIndex) {\n                yPosition = multiColumnY;\n            }\n            columnBody = footnote.bodyWidgets[i];\n            for (var j = 0; j < footnote.bodyWidgets[i].childWidgets.length; j++) {\n                var childWidget = footnote.bodyWidgets[i].childWidgets[j];\n                if (childWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                    childWidget.y = yPosition;\n                    yPosition += childWidget.height;\n                }\n                else {\n                    this.shiftChildLocationForTableWidget(childWidget, yPosition - childWidget.y);\n                    yPosition += childWidget.height;\n                }\n            }\n        }\n    };\n    /**\n       * @private\n       */\n    Layout.prototype.getBodyWidgetHeight = function (bodyWidget) {\n        var height = 0;\n        for (var i = 0; i < bodyWidget.childWidgets.length; i++) {\n            height += bodyWidget.childWidgets[i].height;\n        }\n        return height;\n    };\n    // Check whether the block has the field separator or field end of the field begin.\n    Layout.prototype.checkBlockHasField = function (block) {\n        if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n            for (var _i = 0, _a = block.childWidgets; _i < _a.length; _i++) {\n                var lineWidget = _a[_i];\n                for (var _b = 0, _c = lineWidget.children; _b < _c.length; _b++) {\n                    var element = _c[_b];\n                    if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox && (element.fieldType === 2 || element.fieldType === 1)) {\n                        if (this.documentHelper.fieldStacks.length > 0 && element.fieldBegin === this.documentHelper.fieldStacks[this.documentHelper.fieldStacks.length - 1]) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return this.checkTableHasField(block);\n        }\n        return false;\n    };\n    // Check whether the table has the field separator or field end of the field begin.\n    Layout.prototype.checkTableHasField = function (table) {\n        for (var _i = 0, _a = table.childWidgets; _i < _a.length; _i++) {\n            var row = _a[_i];\n            for (var _b = 0, _c = row.childWidgets; _b < _c.length; _b++) {\n                var cell = _c[_b];\n                for (var _d = 0, _e = cell.childWidgets; _d < _e.length; _d++) {\n                    var block = _e[_d];\n                    if (this.checkBlockHasField(block)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    Layout.prototype.layoutParagraph = function (paragraph, lineIndex, isUpdatedList) {\n        if (this.isFieldCode && !this.checkBlockHasField(paragraph)) {\n            if (paragraph.childWidgets.length === 0) {\n                this.addLineWidget(paragraph);\n            }\n            paragraph.isFieldCodeBlock = true;\n            return paragraph;\n        }\n        else if (paragraph.isSectionBreak && paragraph.previousRenderedWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && this.documentHelper.compatibilityMode !== 'Word2013') {\n            // If compatibility mode is not 2013 the MS word will not render the last paragraph if the previous widget is table. \n            return paragraph;\n        }\n        paragraph.x = 0;\n        paragraph.textWrapWidth = false;\n        this.addParagraphWidget(this.viewer.clientActiveArea, paragraph);\n        var isListLayout = true;\n        var isFirstElmIsparagraph = this.isFirstElementWithPageBreak(paragraph);\n        if (!isFirstElmIsparagraph) {\n            this.layoutListItems(paragraph, isUpdatedList);\n            isListLayout = false;\n        }\n        if (paragraph.isEmptyInternal(true) && !this.checkIsFieldParagraph(paragraph)) {\n            this.layoutEmptyLineWidget(paragraph, true);\n        }\n        else {\n            var line = lineIndex < paragraph.childWidgets.length ?\n                paragraph.childWidgets[lineIndex] : undefined;\n            if (!this.isRelayoutOverlap && !(paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame)) {\n                this.layoutFloatElements(paragraph);\n            }\n            while (line instanceof _page__WEBPACK_IMPORTED_MODULE_6__.LineWidget) {\n                if (paragraph !== line.paragraph && line.indexInOwner === 0 && isListLayout) {\n                    if (line.previousLine.isEndsWithColumnBreak) {\n                        this.viewer.updateClientAreaForBlock(paragraph, true);\n                        this.layoutListItems(line.paragraph);\n                        this.viewer.updateClientAreaForBlock(paragraph, false);\n                    }\n                    else {\n                        this.layoutListItems(line.paragraph);\n                    }\n                }\n                if (line.isFirstLine() && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.fieldBegin)) {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.paragraphFormat)) {\n                        var firstLineIndent = -_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent);\n                        this.viewer.updateClientWidth(firstLineIndent);\n                    }\n                }\n                line.marginTop = 0;\n                //let bodyIndex: number = line.paragraph.bodyWidget.indexInOwner;\n                // if (!this.isInitialLoad && !this.isBidiReLayout && this.isContainsRtl(line)) {\n                //     this.reArrangeElementsForRtl(line, paragraph.paragraphFormat.bidi);\n                // }\n                line = this.layoutLine(line, 0);\n                // if (!line.paragraph.isInsideTable && bodyIndex !== line.paragraph.containerWidget.indexInOwner) {\n                //     line = undefined;\n                // }\n                // else {\n                paragraph = line.paragraph;\n                line = line.nextLine;\n                // }\n            }\n        }\n        this.updateWidgetToPage(this.viewer, paragraph);\n        paragraph.isLayouted = true;\n        // this.updateLinearIndex(paragraph);\n        paragraph.isFieldCodeBlock = false;\n        return paragraph;\n    };\n    Layout.prototype.checkIsFieldParagraph = function (paragraph) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.childWidgets) || paragraph.childWidgets.length === 0) {\n            return false;\n        }\n        for (var i = 0; i < paragraph.childWidgets.length; i++) {\n            var line = paragraph.childWidgets[i];\n            for (var j = 0; j < line.children.length; j++) {\n                var element = line.children[j];\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox && element.hasFieldEnd) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Layout.prototype.clearLineMeasures = function () {\n        this.maxBaseline = 0;\n        this.maxTextBaseline = 0;\n        this.maxTextHeight = 0;\n    };\n    Layout.prototype.layoutFloatElements = function (paragraph) {\n        var _this = this;\n        paragraph.floatingElements.forEach(function (shape) {\n            if (shape instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && shape.textWrappingStyle !== 'Inline') {\n                if (!_this.isRelayoutOverlap) {\n                    _this.layoutShape(shape);\n                }\n            }\n        });\n    };\n    Layout.prototype.layoutShape = function (element) {\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && element.isHorizontalRule) {\n            return;\n        }\n        if (element.textWrappingStyle !== 'Inline') {\n            var position = this.getFloatingItemPoints(element);\n            element.x = position.x;\n            element.y = position.y;\n            if (!element.paragraph.isInsideTable && element.paragraph.indexInOwner !== 0 && element.verticalPosition >= 0 && Math.round(element.paragraph.y) >= Math.round(element.y) && this.viewer.clientArea.bottom <= element.y + element.height && (element.verticalOrigin == \"Line\" || element.verticalOrigin == \"Paragraph\") && element.textWrappingStyle !== \"InFrontOfText\" && element.textWrappingStyle !== \"Behind\") {\n                this.moveToNextPage(this.viewer, element.line);\n                this.updateShapeBaseLocation(element.line.paragraph);\n            }\n            var bodyWidget = element.paragraph.bodyWidget;\n            if (bodyWidget.floatingElements.indexOf(element) === -1) {\n                bodyWidget.floatingElements.push(element);\n                /* eslint:disable */\n                bodyWidget.floatingElements.sort(function (a, b) { return a.y - b.y; });\n            }\n            if (element.paragraph.floatingElements.indexOf(element) === -1) {\n                element.paragraph.floatingElements.push(element);\n            }\n        }\n        else {\n            if (element.width === 0 && element.widthScale !== 0) {\n                var containerWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(element.line.paragraph.getContainerWidth());\n                element.width = (containerWidth / 100) * element.widthScale;\n            }\n        }\n        var clientArea = this.viewer.clientArea;\n        var clientActiveArea = this.viewer.clientActiveArea;\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) {\n            var blocks = element.textFrame.childWidgets;\n            this.viewer.updateClientAreaForTextBoxShape(element, true);\n            for (var i = 0; i < blocks.length; i++) {\n                var block = blocks[i];\n                this.viewer.updateClientAreaForBlock(block, true);\n                if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                    this.clearTableWidget(block, true, true);\n                }\n                this.layoutBlock(block, 0);\n                this.viewer.updateClientAreaForBlock(block, false);\n            }\n        }\n        this.viewer.clientActiveArea = clientActiveArea;\n        this.viewer.clientArea = clientArea;\n    };\n    Layout.prototype.moveElementFromNextLine = function (line) {\n        var nextLine = line.nextLine;\n        if (nextLine && !line.paragraph.bodyWidget.sectionFormat.equalWidth && line.paragraph.bodyWidget.columnIndex !== nextLine.paragraph.bodyWidget.columnIndex) {\n            nextLine = undefined;\n        }\n        while (nextLine instanceof _page__WEBPACK_IMPORTED_MODULE_6__.LineWidget) {\n            if (nextLine.children.length > 0) {\n                var element = nextLine.children.splice(0, 1)[0];\n                line.children.push(element);\n                element.line = line;\n                break;\n            }\n            else {\n                if (nextLine.paragraph.childWidgets.length === 1) {\n                    nextLine.paragraph.destroy();\n                }\n                else {\n                    nextLine.paragraph.childWidgets.splice(nextLine.paragraph.childWidgets.indexOf(nextLine), 1);\n                }\n                nextLine = line.nextLine;\n            }\n        }\n    };\n    Layout.prototype.layoutLine = function (line, count) {\n        var paragraph = line.paragraph;\n        if (line.children.length === 0) {\n            this.moveElementFromNextLine(line);\n        }\n        var element = line.children[count];\n        var isNotEmptyField = true;\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox && line.children[line.children.length - 1] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox) {\n            isNotEmptyField = false;\n            for (var i = 0; i < line.children.length; i++) {\n                if (line.children[i].fieldType == 2 && line.children[i].nextElement != undefined && !(line.children[i].nextElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox)) {\n                    isNotEmptyField = true;\n                    break;\n                }\n            }\n        }\n        this.clearLineMeasures();\n        line.marginTop = 0;\n        var bodyIndex = paragraph.bodyWidget.indexInOwner;\n        var lineIndex = line.indexInOwner;\n        while (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ElementBox) {\n            if (!(element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox)) {\n                element.padding.left = 0;\n            }\n            if (!isNotEmptyField) {\n                this.layoutElement(element, paragraph, true);\n                isNotEmptyField = true;\n            }\n            else {\n                this.layoutElement(element, paragraph);\n            }\n            line = element.line;\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n                var textElement = element;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(textElement.errorCollection) && textElement.errorCollection.length > 0) {\n                    textElement.ischangeDetected = true;\n                }\n            }\n            if (!this.isRTLLayout) {\n                var lineIndex_1 = paragraph.childWidgets.indexOf(element.line);\n                if (lineIndex_1 > 0 && this.hasFloatingElement) {\n                    this.hasFloatingElement = false;\n                    if (paragraph.bodyWidget.floatingElements.length > 0 && element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && !(paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget)) {\n                        element = paragraph.childWidgets[lineIndex_1].children[0];\n                    }\n                }\n                else {\n                    this.hasFloatingElement = false;\n                    if (this.is2013Justification && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.nextElementToLayout) && !(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.paragraph.containerWidget.containerShape) && element.paragraph.containerWidget.containerShape === this.nextElementToLayout)) {\n                        element = this.nextElementToLayout;\n                    }\n                    else {\n                        // if (!line.paragraph.isInsideTable && bodyIndex !== line.paragraph.containerWidget.indexInOwner && !isNullOrUndefined(element.nextElement)) {\n                        //     if (element.nextElement.line.children.indexOf(element.nextElement) !== element.nextElement.line.children.length - 1) {\n                        //         element = undefined;\n                        //     }\n                        // }\n                        // if (!isNullOrUndefined(element)) {\n                        element = element.nextElement;\n                        // }\n                        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && element.text.indexOf(\" \") == 0 && element.text.length > 2) {\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextElement) && element.text.trim().length > 0) {\n                                element.text = element.text.substring(1, element.text.length);\n                                element.isWidthUpdated = false;\n                                var elementIndex = element.line.children.indexOf(element);\n                                element.line.children.splice(elementIndex, 1);\n                                var textElement = new _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox();\n                                textElement.text = \" \";\n                                textElement.line = element.line;\n                                textElement.characterFormat.copyFormat(element.characterFormat);\n                                // Copy revisions\n                                if (element.revisions.length > 0) {\n                                    for (var m = 0; m < element.revisions.length; m++) {\n                                        var revision = element.revisions[m];\n                                        textElement.revisions.push(revision);\n                                        var rangeIndex = revision.range.indexOf(element);\n                                        if (rangeIndex < 0) {\n                                            revision.range.push(textElement);\n                                        }\n                                        else {\n                                            revision.range.splice(rangeIndex, 0, textElement);\n                                        }\n                                    }\n                                }\n                                element.line.children.splice(elementIndex, 0, textElement);\n                                element.line.children.splice(elementIndex + 1, 0, element);\n                                element = textElement;\n                            }\n                        }\n                    }\n                    this.nextElementToLayout = undefined;\n                }\n            }\n            else {\n                element = undefined;\n                this.isRTLLayout = false;\n            }\n        }\n        return line;\n    };\n    /* eslint-disable  */\n    Layout.prototype.layoutElement = function (element, paragraph, isEmptyField) {\n        if (((element.isColumnBreak || element.isPageBreak) && paragraph.isInHeaderFooter) || (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && element.isHorizontalRule)) {\n            return;\n        }\n        var line = element.line;\n        var text = '';\n        var index = element.indexInOwner;\n        if (this.viewer.owner.editorModule && this.viewer.owner.editorHistoryModule && this.viewer.owner.editorHistoryModule.isRedoing && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.paragraph.containerWidget.footNoteReference) && this.viewer.owner.enableTrackChanges && element.removedIds.length > 0) {\n            this.viewer.owner.editorModule.constructRevisionFromID(element, true);\n        }\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox) {\n            if (element.fieldType === 0) {\n                if (this.documentHelper.fields.indexOf(element) === -1) {\n                    this.documentHelper.fields.push(element);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.formFieldData) &&\n                    this.documentHelper.formFields.indexOf(element) === -1 && !this.isInsertFormField) {\n                    this.documentHelper.formFields.push(element);\n                }\n            }\n            this.layoutFieldCharacters(element);\n            if (element.line.isLastLine() && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextNode) && !this.isFieldCode) {\n                // If a pargraph has a floating element and the line widget doesn't contain a valid element based on the element's width, then consider it an empty line.\n                // Because the clientActiveArea position will be updated based on adjusted Rect in the adjustPoition method.\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.containerWidget) && paragraph.floatingElements.length > 0 &&\n                    !(paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame) && this.isConsiderAsEmptyLineWidget(element.line)) {\n                    this.layoutEmptyLineWidget(paragraph, false, element.line);\n                }\n                this.moveToNextLine(line);\n            }\n            else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextElement) && this.viewer.clientActiveArea.width > 0 && !element.line.isLastLine()) {\n                this.moveElementFromNextLine(line);\n                if (element.line.isLastLine() && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextNode) && !this.isFieldCode) {\n                    if (element.fieldType !== 2 && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.fieldSeparator)) {\n                        this.layoutEmptyLineWidget(paragraph, false, element.line);\n                    }\n                    this.moveToNextLine(line);\n                }\n            }\n            else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextElement) && this.viewer.clientActiveArea.width === 0) {\n                this.moveToNextLine(line);\n                if (line.paragraph.lastChild === line && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(line.nextLine) &&\n                    this.viewer.clientActiveArea.height >= 0) {\n                    this.moveFromNextPage(line);\n                }\n            }\n            else if (isEmptyField) {\n                var textHelper = this.documentHelper.textHelper.getHeight(paragraph.characterFormat);\n                element.height = textHelper.Height;\n            }\n            return;\n        }\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox || this.isFieldCode || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BookmarkElementBox ||\n            element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeEndElementBox || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeStartElementBox\n            || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ContentControl ||\n            (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && element.textWrappingStyle !== 'Inline')) {\n            if (!this.isInitialLoad && element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ContentControl && element.type === 0 && element.contentControlWidgetType === 'Block') {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.paragraph) && element.paragraph.firstChild.children[0] === element && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.reference)\n                    && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.reference.paragraph)\n                    && element.reference.paragraph.lastChild.children[element.reference.paragraph.lastChild.children.length - 1] !== element.reference) {\n                    element.contentControlWidgetType = 'Inline';\n                    element.reference.contentControlWidgetType = 'Inline';\n                    element.contentControlProperties.contentControlWidgetType = 'Inline';\n                    var block = element.paragraph;\n                    if (block === element.reference.paragraph && element.reference.paragraph.contentControlProperties) {\n                        element.reference.paragraph.contentControlProperties = undefined;\n                    }\n                    while (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && block && block.contentControlProperties && block !== element.reference.paragraph) {\n                        block.contentControlProperties = undefined;\n                        block = block.nextRenderedWidget;\n                    }\n                }\n            }\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BookmarkElementBox) {\n                if (element.bookmarkType === 0 && !this.documentHelper.bookmarks.containsKey(element.name)) {\n                    this.documentHelper.bookmarks.add(element.name, element);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.properties)) {\n                        var columnFirst = parseInt(element.properties[\"columnFirst\"]);\n                        if (element.paragraph.isInsideTable) {\n                            var row = element.paragraph.associatedCell.ownerRow;\n                            var cell = row.getCellUsingColumnIndex(row.rowIndex, columnFirst);\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell)) {\n                                cell.isRenderBookmarkStart = true;\n                            }\n                        }\n                    }\n                }\n                else if (element.bookmarkType === 1 && this.documentHelper.bookmarks.containsKey(element.name)) {\n                    var bookmrkElement = this.documentHelper.bookmarks.get(element.name);\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bookmrkElement.reference)\n                        || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bookmrkElement.reference.paragraph)\n                        || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bookmrkElement.reference.paragraph.bodyWidget)) {\n                        bookmrkElement.reference = element;\n                        element.reference = bookmrkElement;\n                    }\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bookmrkElement.properties)) {\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentHelper.selection)) {\n                            var cell = bookmrkElement.reference.paragraph.associatedCell;\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell)) {\n                                cell.isRenderBookmarkEnd = false;\n                                if (this.documentHelper.selection.isRenderBookmarkAtEnd(bookmrkElement.reference)) {\n                                    cell.isRenderBookmarkEnd = true;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.paragraph.associatedCell)) {\n                            var lastPara = this.documentHelper.selection.getLastParagraph(element.paragraph.associatedCell);\n                            var lastLine = lastPara.lastChild;\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastLine)) {\n                                var lastElement = lastLine.children[lastLine.children.length - 1];\n                                if (lastElement == element) {\n                                    var columnLast = parseInt(element.reference.properties['columnLast']);\n                                    var endRow = element.paragraph.associatedCell.ownerRow;\n                                    var endCell = undefined;\n                                    var cellIndex = columnLast;\n                                    while ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(endCell) && cellIndex > -1) {\n                                        endCell = endRow.getCellUsingColumnIndex(endRow.rowIndex, cellIndex);\n                                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(endCell)) {\n                                            cellIndex--;\n                                        }\n                                    }\n                                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(endCell)) {\n                                        endRow.isRenderBookmarkEnd = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (element.bookmarkType === 0 && this.documentHelper.bookmarks.containsKey(element.name)) {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.reference)) {\n                        this.documentHelper.bookmarks.remove(element.name);\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.properties)) {\n                        var columnFirst = parseInt(element.properties[\"columnFirst\"]);\n                        if (element.paragraph.isInsideTable) {\n                            var row = element.paragraph.associatedCell.ownerRow;\n                            var cell = row.getCellUsingColumnIndex(row.rowIndex, columnFirst);\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell)) {\n                                cell.isRenderBookmarkStart = true;\n                            }\n                        }\n                    }\n                }\n            }\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeStartElementBox || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeEndElementBox) {\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeStartElementBox) {\n                    var user = element.user !== '' ? element.user : element.group;\n                    if (this.documentHelper.editRanges.containsKey(user)) {\n                        var editStartCollection = this.documentHelper.editRanges.get(user);\n                        if (editStartCollection.indexOf(element) === -1) {\n                            editStartCollection.push(element);\n                        }\n                    }\n                    else {\n                        var newEditStartCollection = [];\n                        newEditStartCollection.push(element);\n                        this.documentHelper.editRanges.add(user, newEditStartCollection);\n                    }\n                }\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeStartElementBox && (this.documentHelper.owner.currentUser === element.user || (element.group === \"Everyone\" && element.user === \"\"))) {\n                    if (element.columnFirst != -1 && element.columnLast != -1) {\n                        var row = element.paragraph.associatedCell.ownerRow;\n                        var cell = row.getCellUsingColumnIndex(row.rowIndex, element.columnFirst);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell)) {\n                            cell.isRenderEditRangeStart = true;\n                            row.editRangeID.add(element.editRangeId, element);\n                        }\n                    }\n                }\n                else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeEndElementBox && (this.documentHelper.owner.currentUser === element.editRangeStart.user || (element.editRangeStart.group === \"Everyone\" && element.editRangeStart.user === \"\"))) {\n                    if (element.editRangeStart.columnFirst != -1 && element.editRangeStart.columnLast != -1) {\n                        var row = element.paragraph.associatedCell.ownerRow;\n                        if (row.editRangeID.containsKey(element.editRangeStart.editRangeId)) {\n                            var cell = row.getCellUsingColumnIndex(row.rowIndex, element.editRangeStart.columnFirst);\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell)) {\n                                if (cell.isRenderEditRangeStart) {\n                                    cell.isRenderEditRangeEnd = true;\n                                }\n                            }\n                        }\n                        else {\n                            var table = element.paragraph.associatedCell.ownerTable;\n                            for (var i = row.rowIndex - 1; i >= 0; i--) {\n                                var previousRow = table.childWidgets[i];\n                                if (previousRow.editRangeID.containsKey(element.editRangeStart.editRangeId)) {\n                                    var previousCell = previousRow.getCellUsingColumnIndex(previousRow.rowIndex, element.editRangeStart.columnFirst);\n                                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(previousCell)) {\n                                        if (previousCell.isRenderEditRangeStart) {\n                                            previousCell.isRenderEditRangeEnd = true;\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && element.textWrappingStyle !== 'Inline' && paragraph.floatingElements.indexOf(element) == -1) {\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) {\n                    if (paragraph.floatingElements.indexOf(element) === -1) {\n                        paragraph.floatingElements.push(element);\n                    }\n                    if (paragraph.bodyWidget.floatingElements.indexOf(element) === -1) {\n                        paragraph.bodyWidget.floatingElements.push(element);\n                    }\n                }\n            }\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ContentControl && this.documentHelper.contentControlCollection.indexOf(element) === -1) {\n                if (element.type === 0) {\n                    if (this.isInitialLoad) {\n                        this.documentHelper.contentControlCollection.push(element);\n                    }\n                    else {\n                        this.documentHelper.owner.editorModule.insertContentControlInCollection(element);\n                    }\n                }\n                else if (element.type === 1) {\n                    var endPage = element.paragraph.bodyWidget.page;\n                    for (var i = 0; i < this.documentHelper.contentControlCollection.length; i++) {\n                        var cCStart = this.documentHelper.contentControlCollection[i];\n                        var isInHeaderFooter = cCStart.line.paragraph.isInHeaderFooter;\n                        // Link content control present in same header.\n                        if (isInHeaderFooter && element.contentControlProperties === cCStart.contentControlProperties\n                            && endPage === cCStart.line.paragraph.bodyWidget.page) {\n                            element.reference = cCStart;\n                            cCStart.reference = element;\n                        }\n                        else if (!isInHeaderFooter && element.contentControlProperties === cCStart.contentControlProperties) {\n                            element.reference = cCStart;\n                            cCStart.reference = element;\n                        }\n                    }\n                }\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ContentControl && paragraph.bodyWidget.floatingElements.length > 0) {\n                    this.adjustPosition(element, element.line.paragraph.bodyWidget);\n                }\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextElement) && this.viewer.clientActiveArea.width > 0 && !element.line.isLastLine()) {\n                this.moveElementFromNextLine(line);\n            }\n            if (element.line.isLastLine() && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextElement)) {\n                if (this.hasValidElement(line.paragraph) && !paragraph.isContainsShapeAlone()) {\n                    this.moveToNextLine(line);\n                }\n                else if (!this.isInitialLoad && !this.hasValidElement(line.paragraph) && line.paragraph.paragraphFormat.bidi && line.paragraph.paragraphFormat.listFormat.listId !== -1) {\n                    this.moveToNextLine(line);\n                }\n                else {\n                    this.layoutEmptyLineWidget(line.paragraph, false, line, false);\n                }\n            }\n            return;\n        }\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && element.characterFormat.highlightColor != \"NoColor\" && element.text.trim() != \"\" && element.text != element.text.trim()) {\n            var firstLine = paragraph.firstChild;\n            var lastLine = paragraph.lastChild;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(firstLine) && firstLine instanceof _page__WEBPACK_IMPORTED_MODULE_6__.LineWidget && firstLine.children.length > 0 && element === firstLine.children[0]) {\n                _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.splitSpaceInTextElementBox(element, true);\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastLine) && lastLine instanceof _page__WEBPACK_IMPORTED_MODULE_6__.LineWidget && lastLine.children.length > 0 && element === lastLine.children[lastLine.children.length - 1]) {\n                _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.splitSpaceInTextElementBox(element, false);\n            }\n        }\n        var width = element.width;\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldTextElementBox && !this.isTocField(element.fieldBegin)) {\n            text = this.documentHelper.getFieldResult(element.fieldBegin, element.paragraph.bodyWidget.page);\n            if (text !== '') {\n                element.text = text;\n            }\n            else {\n                text = element.text;\n            }\n        }\n        else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootnoteElementBox) {\n            text = this.startAt(element, text);\n            if (text !== '') {\n                element.text = text;\n            }\n        }\n        else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n            // skip when cliked enter in first footnote element\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.paragraph.containerWidget.footNoteReference)\n                && element.line.isFirstLine()\n                && element.paragraph.index === 0\n                && element.indexInOwner === 0\n                && !this.documentHelper.owner.editorModule.handledEnter\n                && element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootnoteEndnoteMarkerElementBox) {\n                element.text = element.paragraph.containerWidget.footNoteReference.text;\n            }\n            this.checkAndSplitTabOrLineBreakCharacter(element.text, element);\n            //TODO: Need to update revision\n            // if (element.text.length > 1 && element.line.paragraph.bidi) {\n            //     let splittedText: string[] = this.splitTextByConsecutiveLtrAndRtl(element);\n            //     this.updateSplittedText(element, splittedText);\n            // }\n            text = element.text;\n        }\n        // Here field code width and height update need to skipped based on the hidden property.\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n            if (!element.isWidthUpdated || element.width === 0 || this.isInitialLoad\n                || (this.viewer.owner.editorModule && this.viewer.owner.editorModule.isMeasureParaWidth)) {\n                width = this.documentHelper.textHelper.getTextSize(element, element.characterFormat);\n                element.isWidthUpdated = true;\n            }\n            else {\n                width = element.trimEndWidth;\n            }\n            if (element.text === '\\t') {\n                width = this.getTabWidth(paragraph, this.viewer, index, line, element);\n                element.width = width;\n            }\n            // As per MS word behavior, optional hyper Or column break is shown only when show paragraph mark properly is enabled\n            // We need to show this special character based on property `showHiddenMark`\n            else if (element.text === String.fromCharCode(31) || element.text === String.fromCharCode(14)) {\n                element.width = width = 0;\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.containerWidget) && paragraph.bodyWidget.floatingElements.length > 0 &&\n            !(element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && element.textWrappingStyle == 'Inline') && !(paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame) && !(element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.CommentCharacterElementBox) &&\n            !(paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget && paragraph.containerWidget.ownerTable.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame)) {\n            this.adjustPosition(element, element.line.paragraph.bodyWidget);\n            if (paragraph.textWrapWidth) {\n                paragraph.x -= element.padding.left;\n                paragraph.textWrapWidth = false;\n            }\n        }\n        var beforeSpacing = line.isFirstLine() && element.indexInOwner === 0 ? this.getBeforeSpacing(paragraph) : 0;\n        if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer &&\n            ((element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && element.textWrappingStyle === 'Inline') || !(element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox))\n            && this.viewer.clientActiveArea.height < beforeSpacing + element.height && this.viewer.clientActiveArea.y !== this.viewer.clientArea.y) {\n            if ((element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && (element.text !== '\\f' && element.text !== String.fromCharCode(14) || (element.text === '\\f' && paragraph.isPageBreak() && this.documentHelper.compatibilityMode === 'Word2013'))) || !(element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox)) {\n                //let bodyIndex: number = line.paragraph.containerWidget.indexInOwner;\n                this.moveToNextPage(this.viewer, line);\n                // if (bodyIndex !== line.paragraph.containerWidget.indexInOwner) {\n                //     return;\n                // }\n            }\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldTextElementBox) {\n                this.updateFieldText(element);\n            }\n            if (element.previousElement &&\n                ((element.previousElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && element.previousElement.textWrappingStyle === 'Inline') ||\n                    !(element.previousElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox))) {\n                this.cutClientWidth(element.previousElement, undefined, (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && element.text === '\\f') ? true : false);\n            }\n        }\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && element.textWrappingStyle === 'Inline') {\n            if (paragraph.floatingElements.indexOf(element) === -1) {\n                paragraph.floatingElements.push(element);\n            }\n            if (element.width > this.viewer.clientActiveArea.width) {\n                this.splitElementForClientArea(paragraph, element);\n                this.checkLineWidgetWithClientArea(line, element);\n            }\n            var is2013Justification = this.is2013Justification;\n            this.layoutShape(element);\n            this.is2013Justification = is2013Justification;\n        }\n        // tslint:disable-next-line:max-line-length\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootnoteElementBox && (!element.isLayout || this.isLayoutWhole) && this.documentHelper.owner.layoutType === 'Pages') {\n            this.layoutFootEndNoteElement(element);\n        }\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootnoteElementBox) {\n            if (this.isfootMove) {\n                this.moveToNextPage(this.viewer, element.line);\n                if (element.previousElement &&\n                    ((element.previousElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && element.previousElement.textWrappingStyle === 'Inline') ||\n                        !(element.previousElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox))) {\n                    this.cutClientWidth(element.previousElement);\n                }\n                this.isfootMove = false;\n            }\n            if (paragraph.paragraphFormat.keepWithNext && paragraph.paragraphFormat.keepLinesTogether && !(!element.isLayout || this.isLayoutWhole)) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.bodyWidget.page.footnoteWidget) && paragraph.bodyWidget.page.footnoteWidget.y !== 0 && paragraph.bodyWidget.page.footnoteWidget.y < this.viewer.clientActiveArea.y + this.viewer.clientActiveArea.height) {\n                    var findDiff = this.viewer.clientActiveArea.y + this.viewer.clientActiveArea.height - paragraph.bodyWidget.page.footnoteWidget.y;\n                    this.viewer.clientActiveArea.height -= findDiff;\n                }\n            }\n        }\n        if (parseFloat(width.toFixed(4)) <= parseFloat(this.viewer.clientActiveArea.width.toFixed(4)) || !this.viewer.textWrap) {\n            //Fits the text in current line.\n            this.addElementToLine(paragraph, element);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextElement) && !element.line.isLastLine()) {\n                var nextLine = element.line.nextLine;\n                var nextElement = nextLine.children[0];\n                if (nextElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && nextElement.text.indexOf(\" \") == 0) {\n                    this.moveElementFromNextLine(line);\n                }\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextElement) && this.viewer.clientActiveArea.width > 0 && !element.line.isLastLine()) {\n                this.moveElementFromNextLine(line);\n            }\n            else if (!element.line.isLastLine() && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextElement) && this.viewer.clientActiveArea.width === 0) {\n                this.moveToNextLine(line);\n                if (line.paragraph.lastChild === line && this.viewer.clientActiveArea.height >= 0) {\n                    this.moveFromNextPage(line);\n                }\n            }\n        }\n        else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n            if (element.text === '\\t') {\n                var currentLine = element.line;\n                var isElementMoved = false;\n                // Added the condition to check While the tab element width is greater then clientActiveArea width and while it was first element of line should not move to next line\n                if (element.indexInOwner !== 0 && element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TabElementBox) {\n                    isElementMoved = true;\n                    this.addSplittedLineWidget(currentLine, currentLine.children.indexOf(element) - 1);\n                }\n                else {\n                    if (this.isWrapText && this.viewer.clientActiveArea.x + this.viewer.clientActiveArea.width === this.viewer.clientActiveArea.right) {\n                        this.isWrapText = false;\n                    }\n                    this.addSplittedLineWidget(currentLine, currentLine.children.indexOf(element));\n                }\n                this.moveToNextLine(currentLine);\n                if (currentLine.paragraph.bodyWidget.floatingElements.length > 0 && isElementMoved) {\n                    this.nextElementToLayout = element;\n                    this.hasFloatingElement = true;\n                    return;\n                }\n                else {\n                    // Recalculates tab width based on new client active area X position\n                    element.width = this.getTabWidth(paragraph, this.viewer, index, element.line, element);\n                    if (isElementMoved) {\n                        this.addElementToLine(paragraph, element);\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextElement) && this.viewer.clientActiveArea.width > 0\n                            && !element.line.isLastLine()) {\n                            this.moveElementFromNextLine(element.line);\n                        }\n                    }\n                }\n            }\n            else {\n                //Splits the text and arrange line by line, till end of text.\n                do {\n                    line = element.line;\n                    //Added the condition to skip line split while layouting dropDownFormField \n                    if (!(element.previousElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox && element.previousElement.fieldType == 2\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.previousElement.fieldBeginInternal)\n                        && element.previousElement.fieldBeginInternal.formFieldData instanceof _page__WEBPACK_IMPORTED_MODULE_6__.DropDownFormField)) {\n                        this.splitTextForClientArea(line, element, element.text, element.trimEndWidth, element.characterFormat);\n                    }\n                    this.checkLineWidgetWithClientArea(line, element);\n                    if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldTextElementBox && !this.isInitialLoad) {\n                        this.updateFieldText(element);\n                    }\n                    if (element.line !== line && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.nextElementToLayout) && this.is2013Justification) {\n                        return;\n                    }\n                } while (element.line !== line && this.cutClientWidth(element));\n            }\n        }\n        else {\n            do {\n                line = element.line;\n                this.splitElementForClientArea(paragraph, element);\n                this.checkLineWidgetWithClientArea(line, element);\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldTextElementBox) {\n                    this.updateFieldText(element);\n                }\n            } while (element.line !== line && this.cutClientWidth(element, true));\n        }\n        var contentControl;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextNode) && element.nextNode instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ContentControl) {\n            contentControl = element.nextNode;\n        }\n        if ((text === '\\v' || text === '\\f' || text === '\\r' || text === String.fromCharCode(14)) && !contentControl) {\n            var elementIndex = line.children.indexOf(element);\n            if (elementIndex > -1) {\n                this.addSplittedLineWidget(line, elementIndex);\n            }\n        }\n        if (element.line.isLastLine() && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextElement) || text === '\\v' || text === '\\f' || text === '\\r' || text === String.fromCharCode(14)) {\n            if (this.isXPositionUpdated) {\n                this.isXPositionUpdated = false;\n                return;\n            }\n            this.moveToNextLine(element.line);\n            if (text === '\\v' && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextNode)) {\n                this.layoutEmptyLineWidget(paragraph, true, line, true);\n            }\n            else if ((text === '\\f' || text === String.fromCharCode(14)) && this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer && !(element.line.paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget)) {\n                var isRTLLayout = this.isRTLLayout;\n                this.isRTLLayout = false;\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextNode) || element.nextNode instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ContentControl) {\n                    if (text === String.fromCharCode(14)) {\n                        this.moveToNextPage(this.viewer, element.line.nextLine, false);\n                        this.layoutEmptyLineWidget(element.line.nextLine.paragraph, false, element.line.nextLine, true);\n                    }\n                    else {\n                        // We are layouting the section last paragraph and if previous widget is page break then we need to move the create new page.\n                        var nextWidget = paragraph.nextWidget;\n                        if (!(text === '\\f' && nextWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && nextWidget.isSectionBreak)) {\n                            this.moveToNextPage(this.viewer, element.line, true);\n                        }\n                    }\n                }\n                else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.line.nextLine)) {\n                    this.moveToNextPage(this.viewer, element.line.nextLine, false);\n                }\n                this.isRTLLayout = isRTLLayout;\n            }\n        }\n        this.isXPositionUpdated = false;\n    };\n    /**\n    * @private\n    */\n    Layout.prototype.adjustPosition = function (element, bodyWidget) {\n        var clientArea = this.viewer.clientActiveArea;\n        var previousLeft = this.viewer.clientActiveArea.x;\n        var previousTop = this.viewer.clientActiveArea.y;\n        var previousWidth = this.viewer.clientActiveArea.width;\n        var adjustedRect = this.adjustClientAreaBasedOnTextWrap(element, new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(clientArea.x, clientArea.y, clientArea.width, clientArea.height));\n        this.viewer.clientActiveArea.width = adjustedRect.width;\n        //Updated element padding for wrapping.\n        // if (this.isWrapText) {\n        var wrapDiff = this.viewer.clientActiveArea.x - previousLeft;\n        // if (element.indexInOwner === 0 && element.line.isFirstLine()) {\n        //     wrapDiff -= HelperMethods.convertPointToPixel(element.line.paragraph.paragraphFormat.firstLineIndent);\n        // }\n        if (element.line.isFirstLine() && this.getFirstElement(element.line) === element && wrapDiff > 0 && !this.isSkipFirstLineIndent) {\n            var firstLineIndent = element.line.paragraph.paragraphFormat.firstLineIndent;\n            wrapDiff += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(firstLineIndent > 0 ? firstLineIndent : 0);\n        }\n        this.isSkipFirstLineIndent = false;\n        element.padding.left = wrapDiff > 0 ? wrapDiff : 0;\n        if (previousWidth !== this.viewer.clientActiveArea.width) {\n            var wrapPos = new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.WrapPosition(this.viewer.clientActiveArea.x, this.viewer.clientActiveArea.width);\n            this.updateWrapPosition(wrapPos);\n        }\n        //this.isWrapText = false;\n        // }\n        if (this.viewer.clientActiveArea.width === 0) {\n            this.isWrapText = false;\n        }\n        if (this.isYPositionUpdated) {\n            if (element.line.isFirstLine()) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.line.paragraph.associatedCell)) {\n                    var previousRenderedWidget = element.line.paragraph.previousRenderedWidget;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(previousRenderedWidget)) {\n                        element.line.paragraph.associatedCell.height += (this.viewer.clientActiveArea.y - previousRenderedWidget.y + previousRenderedWidget.height);\n                    }\n                    else {\n                        element.line.paragraph.associatedCell.height += (this.viewer.clientActiveArea.y - previousTop);\n                    }\n                }\n                element.line.paragraph.y = this.viewer.clientActiveArea.y;\n            }\n            else if (element.line.children[0] === element) {\n                element.line.marginTop += (this.viewer.clientActiveArea.y - previousTop);\n            }\n            if (element.line.paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.HeaderFooterWidget) {\n                element.line.paragraph.containerWidget.height += (this.viewer.clientActiveArea.y - previousTop);\n            }\n            if (!(element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox)) {\n                this.isYPositionUpdated = false;\n            }\n        }\n    };\n    Layout.prototype.getFirstElement = function (line) {\n        for (var j = 0; j < line.children.length; j++) {\n            var element = line.children[j];\n            if (!(element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && element.textWrappingStyle !== 'Inline')) {\n                return element;\n            }\n        }\n        return undefined;\n    };\n    Layout.prototype.updateWrapPosition = function (wrapPos) {\n        for (var i = 0; i < this.wrapPosition.length; i++) {\n            var previousWrapPos = this.wrapPosition[i];\n            if (Math.abs(previousWrapPos.right - wrapPos.right) > 1) {\n                continue;\n            }\n            else {\n                return;\n            }\n        }\n        this.wrapPosition.push(wrapPos);\n    };\n    Layout.prototype.isFirstitemInPage = function (element, yposition) {\n        if (!element.line.paragraph.isInHeaderFooter && Math.round(yposition) === this.viewer.clientArea.y) {\n            return true;\n        }\n        return false;\n    };\n    Layout.prototype.isTextFitBelow = function (rect, top, element) {\n        //TODO: After shape implementation.\n        return false;\n    };\n    Layout.prototype.isNeedToWrapForTopAndBottom = function (currWidgetOwnerPara, elementBox, wrapOwnerIndex, wrapItemIndex, textWrappingStyle, textWrappingBounds, allowOverlap, wrapCollectionIndex, floatingEntity, isTextRangeInTextBox, rect, width, height) {\n        if (currWidgetOwnerPara.isInsideTable && textWrappingStyle === \"TopAndBottom\" && !(floatingEntity instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget)) {\n            var floatingItemOwnerPara = floatingEntity.paragraph;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(floatingItemOwnerPara) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(floatingItemOwnerPara.associatedCell)) {\n                var isLayoutInCell = floatingItemOwnerPara.isInsideTable;\n                var floatingItemOwnerCell = floatingItemOwnerPara.associatedCell;\n                var currParaOwnerCell = currWidgetOwnerPara.associatedCell;\n                if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(floatingItemOwnerCell) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currParaOwnerCell) && floatingItemOwnerCell !== currParaOwnerCell)\n                    || (!isLayoutInCell && this.documentHelper.compatibilityMode !== \"Word2013\"))\n                    return false;\n            }\n        }\n        return (wrapOwnerIndex !== wrapCollectionIndex\n            && wrapItemIndex !== wrapCollectionIndex\n            && textWrappingStyle === \"TopAndBottom\"\n            && ((rect.y >= textWrappingBounds.y\n                && rect.y < (textWrappingBounds.bottom))\n                || ((rect.y + height > textWrappingBounds.y\n                    || this.isTextFitBelow(textWrappingBounds, rect.y + height, floatingEntity))\n                    && (rect.y + height < (textWrappingBounds.bottom)))\n                || (rect.y < textWrappingBounds.y && rect.y + height > textWrappingBounds.bottom && textWrappingBounds.height > 0))\n            && !(allowOverlap && (isTextRangeInTextBox || ((elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ImageElementBox)\n                && elementBox.textWrappingStyle !== 'Inline' && elementBox.allowOverlap))));\n    };\n    Layout.prototype.isNeedToWrapForSquareTightAndThrough = function (bodyWidget, elementBox, wrapOwnerIndex, wrapItemIndex, textWrappingStyle, textWrappingBounds, allowOverlap, wrapCollectionIndex, floatingEntity, isTextRangeInTextBox, rect, width, height) {\n        return (bodyWidget.floatingElements.length > 0\n            && wrapOwnerIndex !== wrapCollectionIndex\n            && wrapItemIndex !== wrapCollectionIndex\n            && textWrappingStyle !== 'Inline'\n            && textWrappingStyle !== 'Behind'\n            && textWrappingStyle !== 'TopAndBottom'\n            && textWrappingStyle !== 'InFrontOfText'\n            && (Math.round((rect.y + height)) > Math.round(textWrappingBounds.y) ||\n                this.isTextFitBelow(textWrappingBounds, rect.y + height, floatingEntity))\n            && Math.round(rect.y) < Math.round((textWrappingBounds.y + textWrappingBounds.height))\n            && !(allowOverlap && (isTextRangeInTextBox || ((elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ImageElementBox)\n                && elementBox.textWrappingStyle !== 'Inline' && elementBox.allowOverlap))));\n    };\n    Layout.prototype.isNeedToWrapForSquareTightAndThroughForTable = function (container, table, wrapIndex, wrapItemIndex, wrappingStyle, textWrappingBounds, allowOverlap, wrapCollectionIndex, floatingElemnt, isInTextBox, rect, width, height) {\n        return (container.floatingElements.length > 0 && wrapIndex !== wrapCollectionIndex\n            && wrapItemIndex !== wrapCollectionIndex && wrappingStyle !== 'Inline'\n            && wrappingStyle !== 'Behind' && wrappingStyle !== 'TopAndBottom'\n            && wrappingStyle !== 'InFrontOfText'\n            && ((Math.round(rect.y + height) >= Math.round(textWrappingBounds.y)\n                && Math.round(rect.y) < Math.round(textWrappingBounds.bottom))\n                //Checks whether the bottom of the table intersects with floating item.\n                || Math.round(rect.y + height) <= Math.round(textWrappingBounds.bottom)\n                    && Math.round(rect.y + height) >= Math.round(textWrappingBounds.y))\n            && !(allowOverlap && (isInTextBox)));\n    };\n    Layout.prototype.isNeedToWrapLeafWidget = function (pargaraph, elementBox) {\n        var IsNeedToWrap = true;\n        return (pargaraph.bodyWidget.floatingElements.length > 0\n            && (IsNeedToWrap || pargaraph.associatedCell)\n            && !(elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && (elementBox.textWrappingStyle === 'InFrontOfText' || elementBox.textWrappingStyle === 'Behind')));\n    };\n    Layout.prototype.getMinWidth = function (currTextRange, width, height, rect) {\n        var text = currTextRange.text;\n        var split = text.split(' ');\n        // Gets the minimum width from the text when it contains only empty space.\n        if (text !== '' && text.trim() === ''\n            && currTextRange && currTextRange.line.paragraph\n            && currTextRange.previousNode && currTextRange.nextNode\n            && currTextRange.line.paragraph.isEmpty) {\n            split = [''];\n        }\n        // Initialized the text with additional empty string.\n        // It avoids the minimum width calculation from next sibling (GetNextTextRangeWidth).\n        var minwidth = this.documentHelper.textHelper.measureText(split[0], currTextRange.characterFormat, currTextRange.scriptType).Width;\n        //Need to layout the unicode characters (chinese) character by character.\n        // if (DrawingContext.IsUnicodeText(text)) {\n        //     minwidth = DrawingContext.MeasureTextRange(currTextRange, text[0].ToString()).Width;\n        // }\n        var nextSibling = this.getNextSibling(currTextRange);\n        if (split.length === 1 && nextSibling) {\n            var nextSiblingText = nextSibling.text;\n            minwidth += this.getNextTextRangeWidth(nextSibling, nextSiblingText, width, height, rect);\n        } // Add the minimum character width of that paragraph, if this text range is para mark\n        return minwidth;\n    };\n    Layout.prototype.getNextTextRangeWidth = function (nextSiblingTextRange, nextSiblingText, width, height, rect) {\n        var nextsibling = nextSiblingTextRange;\n        // if (nextSiblingTextRange instanceof WFootnote)\n        //     nextsibling = ((nextSiblingTextRange as IWidget).LayoutInfo as LayoutFootnoteInfoImpl).TextRange;\n        var sizeNext = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(0, 0, 0, 0);\n        var isNextSiblingSizeNeedToBeMeasure = this.isNextSibligSizeNeedToBeMeasure(sizeNext, nextSiblingTextRange, rect, width, height);\n        while (isNextSiblingSizeNeedToBeMeasure\n            && this.isLeafWidgetNextSiblingIsTextRange(nextsibling)\n            && width + sizeNext.width < rect.width) {\n            nextsibling = this.getNextSibling(nextsibling);\n            if (!this.isNextSibligSizeNeedToBeMeasure(sizeNext, nextsibling, rect, width, height)) {\n                break;\n            }\n            nextSiblingText += nextsibling.text;\n        }\n        return sizeNext.width;\n    };\n    Layout.prototype.isLeafWidgetNextSiblingIsTextRange = function (textRange) {\n        var nextSiblingTextRange = this.getNextSibling(textRange);\n        if (nextSiblingTextRange && nextSiblingTextRange instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n            return true;\n        }\n        return false;\n    };\n    Layout.prototype.isNextSibligSizeNeedToBeMeasure = function (sizeNext, nextSiblingwidget, rect, width, height) {\n        var text = null;\n        var nextSiblingTextRange = nextSiblingwidget;\n        if (nextSiblingTextRange) {\n            text = nextSiblingTextRange.text;\n            if (text.indexOf(' ') !== -1 || (text.indexOf('-') !== -1 || (text.indexOf('_') !== -1)\n                && ((width + sizeNext.width + (this.documentHelper.textHelper.measureText(text.split('-')[0], nextSiblingTextRange.characterFormat, nextSiblingTextRange.scriptType)).Width) < rect.width))\n                || ((nextSiblingTextRange).text === '\\t')) {\n                var elementWidth = nextSiblingTextRange.width;\n                if (text !== text.split(' ')[0]) {\n                    elementWidth = this.documentHelper.textHelper.measureText(text.split(' ')[0], nextSiblingTextRange.characterFormat, nextSiblingTextRange.scriptType).Width;\n                }\n                if ((width + sizeNext.width + elementWidth) > rect.width && text.indexOf('-')) {\n                    if (text !== text.split('-')[0] + '-') {\n                        elementWidth = this.documentHelper.textHelper.measureText(text.split('-')[0] + '-', nextSiblingTextRange.characterFormat, nextSiblingTextRange.scriptType).Width;\n                    }\n                }\n                sizeNext.width += elementWidth;\n                return false;\n            }\n            else {\n                if (nextSiblingTextRange.text.length > 0) {\n                    var textInfo = this.documentHelper.textHelper.measureText(nextSiblingTextRange.text, nextSiblingTextRange.characterFormat, nextSiblingTextRange.scriptType);\n                    sizeNext.height += textInfo.Height;\n                    sizeNext.width += textInfo.Width;\n                }\n            }\n        }\n        return true;\n    };\n    Layout.prototype.isNeedDoIntermediateWrapping = function (remainingClientWidth, textWrappingStyle, rect, width, paragraph, textWrappingBounds, leafWidget, minwidth, minimumWidthRequired) {\n        return (((remainingClientWidth > minimumWidthRequired)\n            && (((Math.round(rect.width) <= Math.round(minwidth)\n                || (rect.width < width && leafWidget.paragraph.isInsideTable))\n                && textWrappingStyle !== 'Left' // Skip to update width when the wrap type as left\n                && textWrappingStyle !== 'Largest')\n                || textWrappingStyle === 'Right' //To layout right side when the wrap type as right\n                || (rect.width < remainingClientWidth && textWrappingStyle === 'Largest'))) // Check whether the right side width is greater than the left side when the wrap type as largest\n            || ((Math.round(textWrappingBounds.x - paragraph.x + paragraph.leftIndent) < minimumWidthRequired // Check whether the left side of text wrap object is have minimum width to layout or not\n                || (leafWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && this.isFloatingItemOnLeft(rect, minwidth, textWrappingBounds)))\n                && (textWrappingStyle !== 'Left' || remainingClientWidth < minimumWidthRequired)));\n    };\n    Layout.prototype.isFloatingItemOnLeft = function (rect, minWidth, bounds) {\n        return false;\n    };\n    Layout.prototype.getNextSibling = function (currentElementBox) {\n        var nextSibling = currentElementBox.nextNode;\n        var isFieldCode = false;\n        while (nextSibling) {\n            if ((nextSibling instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox) || (nextSibling instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BookmarkElementBox) || isFieldCode || nextSibling instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox) {\n                if (nextSibling instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox) {\n                    if (nextSibling.fieldType === 0) {\n                        isFieldCode = true;\n                    }\n                    else if (nextSibling.fieldType === 2) {\n                        isFieldCode = false;\n                    }\n                }\n            }\n            else if (nextSibling instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n                break;\n            }\n            nextSibling = nextSibling.nextNode;\n        }\n        return nextSibling;\n    };\n    Layout.prototype.adjustClientAreaBasedOnTextWrap = function (elementBox, rect) {\n        var ownerPara = elementBox.line.paragraph;\n        var bodyWidget = ownerPara.bodyWidget;\n        var yValue = 0;\n        var layouter = this.viewer;\n        var yposition = rect.y;\n        var isFirstItem = this.isFirstitemInPage(elementBox, yposition);\n        if (isFirstItem) {\n            yValue = yposition;\n        }\n        isFirstItem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(ownerPara.previousWidget);\n        //Update Layout area based on text wrap\n        if (this.isNeedToWrapLeafWidget(ownerPara, elementBox)) {\n            var clientLayoutArea = layouter.clientArea;\n            //Need to handle sorting floating items.\n            // Sort based on Y position\n            bodyWidget.floatingElements.sort(function (a, b) { return a.y - b.y; });\n            // Sort based on X position\n            bodyWidget.floatingElements.sort(function (a, b) { return a.x - b.x; });\n            for (var i = 0; i < bodyWidget.floatingElements.length; i++) {\n                var floatingItem = bodyWidget.floatingElements[i];\n                var allowOverlap = false;\n                if (floatingItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase) {\n                    allowOverlap = floatingItem.allowOverlap;\n                }\n                else {\n                    allowOverlap = floatingItem.positioning.allowOverlap;\n                }\n                if (ownerPara.isInsideTable) {\n                    if (floatingItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && !floatingItem.isInsideTable) {\n                        continue;\n                    }\n                }\n                if (this.isRelayout && !this.isRelayoutOverlap &&\n                    this.viewer.documentHelper.selection.isExistAfter(floatingItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget ? floatingItem : floatingItem.line.paragraph, elementBox.line.paragraph)\n                    || this.isRelayout && this.isRelayoutOverlap && this.viewer.documentHelper.selection.isExistAfter(floatingItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget ? floatingItem : floatingItem.line.paragraph, this.endOverlapWidget)) {\n                    continue;\n                }\n                // if (ownerPara.isInsideTable && allowOverlap\n                //     && (ownerPara.associatedCell.ownerTable.positioning.allowOverlap))\n                // {\n                //     WParagraph ownerParagraph = (m_lcOperator as Layouter).FloatingItems[i].OwnerParagraph;\n                //     if (!(ownerParagraph !== null\n                //         && ownerParagraph.IsInCell\n                //         && ownerPara.GetOwnerEntity() === ownerParagraph.GetOwnerEntity()))\n                //     {\n                //         continue;\n                //     }\n                // }\n                var xPosition = floatingItem.x;\n                var distanceLeft = 0;\n                var distanceTop = 0;\n                var distanceRight = 0;\n                var distanceBottom = 0;\n                var width = 0;\n                if (floatingItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase) {\n                    distanceLeft = floatingItem.distanceLeft;\n                    distanceTop = floatingItem.distanceTop;\n                    distanceRight = floatingItem.distanceRight;\n                    distanceBottom = floatingItem.distanceBottom;\n                    width = floatingItem.width;\n                }\n                else {\n                    width = floatingItem.getTableCellWidth();\n                    distanceLeft = floatingItem.positioning.distanceLeft;\n                    distanceTop = floatingItem.positioning.distanceTop;\n                    distanceRight = floatingItem.positioning.distanceRight;\n                    distanceBottom = floatingItem.positioning.distanceBottom;\n                }\n                var textWrappingBounds = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(floatingItem.x - distanceLeft, floatingItem.y - distanceTop, width + distanceLeft + distanceRight, floatingItem.height + distanceTop + distanceBottom);\n                var textWrappingStyle = floatingItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget ? 'Square' : floatingItem.textWrappingStyle;\n                var textWrappingType = floatingItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget ? 'Both' : floatingItem.textWrappingType;\n                //  //Need to skip the wrapping for line break when it is first item of corresponding paragraph and that paragraph contains First line indent as per Word 2010 and its lower version behavior.\n                //  if (IsLineBreakIntersectOnFloatingItem(leafWidget, textWrappingStyle, textWrappingBounds, rect, size, ownerPara))\n                //  continue;\n                var minimumWidthRequired = 24;\n                var bottom = layouter.clientArea.y + floatingItem.height;\n                // if (this.isNeedToWrapParaMarkToRightSide(elementBox, ownerPara, textWrappingBounds, bottom, layouter, this.viewer.clientArea, textWrappingType, minimumWidthRequired)) {\n                //     if (lineBreakPosition !== 0) {\n                //         this.viewer.clientArea.y = lineBreakPosition;\n                //         //m_layoutArea.UpdateBoundsBasedOnTextWrap(lineBreakPosition);\n                //     }\n                //     this.viewer.clientArea.x += textWrappingBounds.width;\n                //     //(LeafWidget as IWidget).LayoutInfo.IsLineBreak = false;\n                //     elementBox.height = 0;\n                //     elementBox.width = textWrappingBounds.width;\n                //     return;\n                // }\n                if (!(clientLayoutArea.x > (textWrappingBounds.right + minimumWidthRequired) || clientLayoutArea.right < textWrappingBounds.x - minimumWidthRequired)) {\n                    if (this.isNeedToWrapForSquareTightAndThrough(bodyWidget, elementBox, -1, -1, textWrappingStyle, textWrappingBounds, allowOverlap, 1, floatingItem, false, rect, elementBox.width, elementBox.height)) {\n                        var rightIndent = 0;\n                        var leftIndent = 0;\n                        var listLeftIndent = 0;\n                        var firstLineIndent = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(elementBox.paragraph.paragraphFormat.firstLineIndent);\n                        var paragraphLeftIndent = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(ownerPara.paragraphFormat.leftIndent);\n                        var paragarphRightIndent = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(ownerPara.paragraphFormat.rightIndent);\n                        firstLineIndent = ((elementBox.indexInOwner === 0 && elementBox.line.isFirstLine()) && firstLineIndent > 0) ? firstLineIndent : 0;\n                        var currTextRange = elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox || elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox ? elementBox : null;\n                        var containerWidget = floatingItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget ? floatingItem.containerWidget : floatingItem.line.paragraph.containerWidget;\n                        var isnewline = false;\n                        if (elementBox.line.paragraph) {\n                            //Right indent is considered only if the rect.X greater than the floating item's X position and\n                            //Text wrapping style should not be left\n                            if (rect.x >= textWrappingBounds.x && textWrappingType !== 'Left') {\n                                rightIndent = paragarphRightIndent;\n                            }\n                            //Left indent is considered only if the rect.X less than the floating item's X position and\n                            //Text wrapping style should not be right\n                            if (rect.x < textWrappingBounds.x && textWrappingType !== 'Right') {\n                                leftIndent = paragraphLeftIndent;\n                            }\n                            var listFormat = ownerPara.paragraphFormat.listFormat;\n                            var listLevel = this.getListLevel(listFormat.list, listFormat.listLevelNumber);\n                            if (rect.x === (clientLayoutArea.x + paragraphLeftIndent)\n                                && listFormat && listFormat.baseStyle\n                                && listLevel && listLevel.paragraphFormat.leftIndent !== 0) {\n                                listLeftIndent = paragraphLeftIndent;\n                                isnewline = true; // to denote the current line is new line of the paragraph\n                            }\n                        }\n                        // if (this.isXPositionUpdated && textWrappingType === 'Both' && this.layoutState === 'Splitted') {\n                        //     rect.width = bodyWidget.width - this.viewer.clientActiveArea.x;\n                        //     rect.x = textWrappingBounds.right;\n                        //     this.viewer.updateClientAreaForTextWrap(rect);\n                        //     return rect;\n                        // }\n                        /* Since the Microsoft Word has different behavior to calculate minimum width required to fit a word to a side of Table,\n                        the minimum width required changes based upon table border value and table alignment.\n                        And this value even differ for different word version, such that 2013, will have different minimum required value, where all other version shares the same logic to calculate minimum width required */\n                        var border = 0;\n                        var isBorderValueZero = false;\n                        var table = void 0;\n                        var borderThickness = 0;\n                        var tableHorizontalPosition = void 0;\n                        if (floatingItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                            table = floatingItem;\n                            tableHorizontalPosition = floatingItem.positioning.horizontalAlignment;\n                            border = this.getMaximumRightCellBorderWidth(floatingItem);\n                            isBorderValueZero = this.getDefaultBorderSpacingValue(border, isBorderValueZero, tableHorizontalPosition);\n                            borderThickness = floatingItem.tableFormat.borders.left.lineWidth / 2;\n                        }\n                        // Skip to update when the wrap type as left\n                        if (rect.x + borderThickness >= textWrappingBounds.x && rect.x < textWrappingBounds.right && textWrappingType !== 'Left') // Skip to update when the wrap type as left\n                         {\n                            rect.width = rect.width - (textWrappingBounds.right - rect.x) - rightIndent;\n                            this.isWrapText = true;\n                            var isEntityFitInCurrentLine = true;\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table)) {\n                                minimumWidthRequired = this.getMinimumWidthRequiredForTable(isBorderValueZero, tableHorizontalPosition, border);\n                            }\n                            //checks minimum width\n                            if (!isEntityFitInCurrentLine || Math.round(rect.width) < minimumWidthRequired || (rect.width < elementBox.width && elementBox.text === '\\t')\n                                || (textWrappingBounds.x < ownerPara.x + paragraphLeftIndent)) // check whether the TextWrap X position is less than the paragraph X position\n                             {\n                                //TODO\n                                rect.width = this.viewer.clientArea.right - textWrappingBounds.right - (isnewline ? listLeftIndent : 0);\n                                //checks minimum width of the single word\n                                var minwidth = 0;\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currTextRange)) {\n                                    minwidth = this.getMinWidth(elementBox, elementBox.width, elementBox.height, rect);\n                                }\n                                else {\n                                    minwidth = elementBox.width;\n                                }\n                                if (Math.round(rect.width) < minimumWidthRequired || rect.width < minwidth) {\n                                    if (isEntityFitInCurrentLine && (textWrappingBounds.x - (ownerPara.x + ownerPara.leftIndent)) > minimumWidthRequired\n                                        && (this.viewer.clientArea.right - textWrappingBounds.right) > minimumWidthRequired) {\n                                        rect.width = 0;\n                                    }\n                                    else {\n                                        var topMarginValue = 0;\n                                        //topMarginValue = GetTopMarginValueForFloatingTable(ownerPara,\n                                        //layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                                        var isPositionsUpdated = false;\n                                        //Check whether left side of current floating item has enoush place to fit current widget.\n                                        //If it has, need to fit left side of the floating item, instead of moving to bottom.\n                                        // if (layouter.clientArea.x + elementBox.width < floatingItem.x) {\n                                        //     //Current item should preserve below to the floating item,which preserved left side of the floating item.\n                                        //     //If left side has multiple items or none of items this may fail, need to handle this cases.\n                                        //     let tempBounds: Rect = GetIntersectingItemBounds(floatingItem, yposition);\n                                        //     if (tempBounds.bottom !== 0 && tempBounds.bottom <= textWrappingBounds.bottom) {\n                                        //         rect.x = clientLayoutArea.x;\n                                        //         rect.width = clientLayoutArea.width;\n                                        //         rect.y = tempBounds.bottom + topMarginValue;\n                                        //         rect.height = clientLayoutArea.bottom - tempBounds.bottom;\n                                        //         this.isYPositionUpdated = true;\n                                        //         isPositionsUpdated = true;\n                                        //     }\n                                        // }\n                                        if (!isPositionsUpdated) {\n                                            this.isYPositionUpdated = true;\n                                            rect.width = this.viewer.clientArea.width;\n                                            rect.height -= (textWrappingBounds.bottom + topMarginValue - rect.y);\n                                            rect.y = textWrappingBounds.bottom + topMarginValue;\n                                        }\n                                    }\n                                    this.viewer.updateClientAreaForTextWrap(rect);\n                                    this.isWrapText = false;\n                                }\n                                else {\n                                    var xposition = rect.x;\n                                    //TabsLayoutInfo tabsInfo = null;\n                                    rect.x = textWrappingBounds.right + (isnewline ? listLeftIndent : 0) + firstLineIndent;\n                                    rect.width -= firstLineIndent;\n                                    this.isSkipFirstLineIndent = true;\n                                    //When there is no space to fit the content in right, then update the y position.\n                                    if (textWrappingStyle === 'Square' && rect.width < 0 && elementBox.width > 0) {\n                                        // let topMarginValue = GetTopMarginValueForFloatingTable(ownerPara, layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                                        var topMarginValue = 0;\n                                        this.isYPositionUpdated = true;\n                                        rect.width = this.viewer.clientArea.width;\n                                        rect.height -= (textWrappingBounds.bottom + topMarginValue - rect.y);\n                                        rect.y = textWrappingBounds.bottom + topMarginValue;\n                                        rect.x = xposition;\n                                    }\n                                    else {\n                                        // this.isXPositionUpdated = true;\n                                    }\n                                    this.viewer.updateClientAreaForTextWrap(rect); //\n                                    // if (!(leafWidget is Break))\n                                    // AdjustClientAreaBasedOnExceededTab(leafWidget, size, ref rect, ownerPara);\n                                    // if (leafWidget != null)\n                                    //     tabsInfo = (leafWidget as ILeafWidget).LayoutInfo as TabsLayoutInfo;\n                                    //if (tabsInfo == null) {\n                                    //this.isWrapText = true;\n                                    //this.viewer.updateClientAreaForTextWrap(rect);//\n                                    // if (layouter.FloatingItems[i].FloatingEntity is WTable)\n                                    // layouter.FloatingTableBottom = textWrappingBounds.Bottom;\n                                    //}\n                                }\n                            }\n                            else {\n                                //Check whether the RightPositionOfTabStopInterSectingFloattingItems have the value or not.\n                                //if contains value means continue the layouting even x position exceeds the page right position.\n                                var xposition = rect.x;\n                                rect.x = textWrappingBounds.right + (isnewline ? listLeftIndent : 0) + firstLineIndent;\n                                rect.width = this.viewer.clientArea.right - textWrappingBounds.right - (isnewline ? listLeftIndent : 0) - firstLineIndent;\n                                this.isSkipFirstLineIndent = true;\n                                //When there is no space to fit the content in right, then update the y position.\n                                if (textWrappingStyle === 'Square' && rect.width < 0 && elementBox.width > 0) {\n                                    // float topMarginValue = GetTopMarginValueForFloatingTable(ownerPara,\n                                    //     layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                                    var topMarginValue = 0;\n                                    this.isYPositionUpdated = true;\n                                    rect.width = this.viewer.clientArea.width;\n                                    rect.height -= (textWrappingBounds.bottom + topMarginValue - rect.y);\n                                    rect.y = textWrappingBounds.bottom + topMarginValue;\n                                    rect.x = xposition;\n                                }\n                                //else\n                                // this.isXPositionUpdated = true;\n                                // if (!(leafWidget is Break))\n                                //     AdjustClientAreaBasedOnExceededTab(leafWidget, size, ref rect, ownerPara);\n                                // //Microsoft Word 2013 doesn't split text character by character, when current line has floating item.\n                                // if (ownerPara != null && ownerPara.Document.Settings.CompatibilityMode == CompatibilityMode.Word2013)\n                                //     layouter.m_canSplitbyCharacter = false;\n                                this.isWrapText = true;\n                                this.viewer.updateClientAreaForTextWrap(rect); //\n                            }\n                        }\n                        else if (textWrappingBounds.x >= rect.x && rect.right > textWrappingBounds.x) {\n                            rect.width = textWrappingBounds.x - rect.x - rightIndent;\n                            //Remaining right side width\n                            var remainingClientWidth = this.viewer.clientArea.right - textWrappingBounds.right;\n                            remainingClientWidth = remainingClientWidth > 0 ? remainingClientWidth : 0;\n                            this.isWrapText = true;\n                            var isUpdateClientArea = false;\n                            //checks minimum width\n                            var minwidth = 0;\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currTextRange)) {\n                                minwidth = this.getMinWidth(currTextRange, elementBox.width, elementBox.height, rect);\n                            }\n                            else {\n                                minwidth = elementBox.width;\n                            }\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table)) {\n                                minimumWidthRequired = this.getMinimumWidthRequiredForTable(isBorderValueZero, tableHorizontalPosition, border);\n                            }\n                            if (this.isNeedDoIntermediateWrapping(remainingClientWidth, textWrappingType, rect, elementBox.width, elementBox.paragraph, textWrappingBounds, elementBox, minwidth, minimumWidthRequired)) {\n                                var leftMinimumWidthRequired = 24;\n                                rect.width = remainingClientWidth;\n                                this.isWrapText = true;\n                                if (rect.x + minwidth > textWrappingBounds.x || textWrappingType === 'Right' || clientLayoutArea.x > textWrappingBounds.x - leftMinimumWidthRequired) //Update X position when the wrap type as largest or right or the minimum width + rect.X > wrap x position\n                                 {\n                                    rect.x = textWrappingBounds.right;\n                                    // let listFormat: WListFormat = null;\n                                    // let listLevel: WListLevel = null;\n                                    // if (elementBox.line.isFirstLine\n                                    //    && (listFormat = ownerPara.GetListFormatValue()) != null\n                                    //    && listFormat.CurrentListStyle != null\n                                    //    && (listLevel = ownerPara.GetListLevel(listFormat)) != null\n                                    //    && listLevel.ParagraphFormat.LeftIndent != 0)\n                                    // {\n                                    //     float x = 0;\n                                    //     float width = rect.Width;\n                                    //     //Updates the paragraph firstline horizontal positions, such as first line indent and listtab value\n                                    //     UpdateParaFirstLineHorizontalPositions(paragraphLayoutInfo, ownerPara, ref x, ref width);\n                                    //     rect.X += (x + (float)paragraphLayoutInfo.Margins.Left);\n                                    //     rect.Width -= (x + (float)paragraphLayoutInfo.Margins.Left);\n                                    // }\n                                    // this.isXPositionUpdated = true;\n                                    // if (textWrappingStyle == TextWrappingStyle.Through\n                                    //     && layouter.FloatingItems[i].IsDoesNotDenotesRectangle) {\n                                    //     UpdateXposition(textWrappingBounds, i, ref rect, size, minwidth);\n                                    // }\n                                    if (rect.width > minwidth || textWrappingType === 'Right') {\n                                        this.viewer.updateClientAreaForTextWrap(rect);\n                                    }\n                                    else if (rect.width < minwidth && elementBox.line.children[0] !== elementBox && textWrappingType === 'Both' && floatingItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase) {\n                                        this.viewer.updateClientAreaForTextWrap(rect);\n                                        isUpdateClientArea = true;\n                                    }\n                                }\n                                if ((rect.width < minimumWidthRequired && !(minwidth < remainingClientWidth && ('Tight' === textWrappingStyle)))\n                                    || (rect.width < minwidth && Math.round(rect.right) === Math.round(this.viewer.clientArea.right)\n                                        && textWrappingType === 'Both')) {\n                                    var rect1 = textWrappingBounds;\n                                    if (Math.round(rect.x) === Math.round(bodyWidget.sectionFormat.leftMargin + ownerPara.paragraphFormat.leftIndent)) {\n                                        //Updates top margin of the paragraph when paragraph mark not wrap based on the floating table.\n                                        var topMarginValue = 0;\n                                        //topMarginValue = GetTopMarginValueForFloatingTable(ownerPara, floatingItem, rect.y);\n                                        rect.y = rect1.bottom + topMarginValue;\n                                        this.isYPositionUpdated = true;\n                                        rect.width = this.viewer.clientArea.width;\n                                        rect.height = rect.height - (rect1.height + topMarginValue);\n                                        this.viewer.updateClientAreaForTextWrap(rect);\n                                        this.isWrapText = false;\n                                    }\n                                    // Reset the rectangle position when the rectangle right position is equialent to layout area right position\n                                    else if (!isUpdateClientArea && Math.round(rect.right) >= Math.round(this.viewer.clientArea.right) && textWrappingType === 'Both') {\n                                        //Updates top margin of the paragraph when paragraph mark not wrap based on the floating table.\n                                        var topMarginValue = 0;\n                                        // topMarginValue = GetTopMarginValueForFloatingTable(ownerPara, floatingItem, rect.y);\n                                        rect.y = rect1.bottom + topMarginValue;\n                                        rect.width = this.viewer.clientArea.width;\n                                        rect.height = rect.height - (rect1.height + topMarginValue);\n                                        rect.x = this.viewer.clientArea.x + leftIndent;\n                                        this.viewer.updateClientAreaForTextWrap(rect);\n                                        // this.isXPositionUpdated = true;\n                                        this.isYPositionUpdated = true;\n                                        this.isWrapText = false;\n                                    }\n                                    else {\n                                        rect.width = 0;\n                                        this.viewer.updateClientAreaForTextWrap(rect);\n                                    }\n                                }\n                            }\n                            else {\n                                //While text intersecting with SQUARE type floating item and there is no space\n                                //available to fit this text in current line then move the text to bottom\n                                //of the floating item and this behavior is applicable only for Word 2013.\n                                //Lower versions split the text character by character.\n                                if ((elementBox.line.isFirstLine() && elementBox.indexInOwner === 0 || remainingClientWidth === 0 && elementBox.line.children[0] === elementBox) && textWrappingStyle === 'Square'\n                                    && Math.round(rect.width) <= Math.round(minwidth)\n                                    && ownerPara.containerWidget === containerWidget) {\n                                    rect.x = clientLayoutArea.x;\n                                    rect.y = textWrappingBounds.bottom;\n                                    rect.width = clientLayoutArea.width;\n                                    rect.height -= (textWrappingBounds.bottom - rect.y);\n                                    this.isYPositionUpdated = true;\n                                }\n                                else if (Math.round(rect.width) <= Math.round(minwidth) && Math.round(rect.x - leftIndent) !== Math.round(this.viewer.clientArea.x)) {\n                                    rect.width = 0;\n                                }\n                                this.viewer.updateClientAreaForTextWrap(rect); //\n                            }\n                        }\n                        if (textWrappingType !== 'Both') {\n                            this.isWrapText = false;\n                        }\n                    }\n                    else if (this.isNeedToWrapForTopAndBottom(ownerPara, elementBox, -1, -1, textWrappingStyle, textWrappingBounds, allowOverlap, 1, floatingItem, false, rect, elementBox.width, elementBox.height)) {\n                        // if ((textWrappingStyle === TextWrappingStyle.Tight || textWrappingStyle === TextWrappingStyle.Through)\n                        //     && !(this.getBaseEntity(layouter.floatingItems[i].floatingEntity) instanceof HeaderFooter)\n                        //     && !layouter.floatingItems[i].isDoesNotDenotesRectangle) {\n                        //     //Gets the exact tight and throught floatting item's bottom position.\n                        //     let floattingItemBottomPosition = this.getFloattingItemBottom(layouter.floatingItems[i].floatingEntity, textWrappingBounds.bottom);\n                        //     textWrappingBounds = this.getBottomPositionForTightAndThrough(floattingItemBottomPosition, textWrappingBounds, ownerPara, rect.y, size.height);\n                        // }\n                        //Updates top margin of the paragraph when paragraph mark not wrap based on the floating table.\n                        var topMarginValue = 0;\n                        // topMarginValue = this.getTopMarginValueForFloatingTable(ownerPara,\n                        //     layouter.floatingItems[i].floatingEntity, rect.y);\n                        //previous floating item y position.\n                        var prevY = rect.y;\n                        rect.y = textWrappingBounds.bottom + topMarginValue;\n                        this.isYPositionUpdated = true;\n                        //Updating the rectangle height by reducing the previous floating item's y from the current floating item's bottom.\n                        rect.height = rect.height - (textWrappingBounds.bottom - prevY + topMarginValue);\n                        //Update the before spacing value once sets the floating item bottom position as paragraph y position\n                        if (rect.y !== yposition && elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && !(floatingItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget)\n                            && elementBox.line.isFirstLine()) {\n                            rect.y += elementBox.margin.top;\n                            yposition = rect.y;\n                        }\n                        this.viewer.updateClientAreaForTextWrap(rect);\n                    }\n                }\n            }\n        }\n        return rect;\n    };\n    Layout.prototype.adjustClientAreaBasedOnTextWrapForTable = function (table, rect) {\n        //let ownerPara: ParagraphWidget = elementBox.line.paragraph;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table.containerWidget) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table.bodyWidget)) {\n            return rect;\n        }\n        var bodyWidget = table.bodyWidget;\n        var yValue = 0;\n        var layouter = this.viewer;\n        var yposition = rect.y;\n        var isFirstItem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table.previousWidget);\n        if (isFirstItem) {\n            yValue = yposition;\n        }\n        if (bodyWidget.floatingElements.length > 0) {\n            var clientLayoutArea = layouter.clientActiveArea;\n            bodyWidget.floatingElements.sort(function (a, b) { return a.y - b.y; });\n            bodyWidget.floatingElements.sort(function (a, b) { return a.x - b.x; });\n            for (var i = 0; i < bodyWidget.floatingElements.length; i++) {\n                var floatingElement = bodyWidget.floatingElements[i];\n                var allowOverlap = false;\n                if (floatingElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase) {\n                    allowOverlap = floatingElement.allowOverlap;\n                }\n                else {\n                    allowOverlap = floatingElement.positioning.allowOverlap;\n                }\n                if (table.isInsideTable) {\n                    if (floatingElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && !floatingElement.isInsideTable) {\n                        continue;\n                    }\n                }\n                if (floatingElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && floatingElement.wrapTextAround && floatingElement.positioning.allowOverlap) {\n                    if (table.wrapTextAround && table.positioning.allowOverlap) {\n                        continue;\n                    }\n                }\n                var tableWidth = table.getTableCellWidth();\n                var isShape = floatingElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase;\n                var distanceLeft = isShape ? floatingElement.distanceLeft : floatingElement.positioning.distanceLeft;\n                var distanceTop = isShape ? floatingElement.distanceTop : floatingElement.positioning.distanceTop;\n                var distanceRight = isShape ? floatingElement.distanceRight : floatingElement.positioning.distanceRight;\n                var distanceBottom = isShape ? floatingElement.distanceBottom : floatingElement.positioning.distanceBottom;\n                var width = isShape ? floatingElement.width : floatingElement.getTableCellWidth();\n                var wrappingBounds = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(floatingElement.x - distanceLeft, floatingElement.y - distanceTop, width + distanceLeft + distanceRight, floatingElement.height + distanceTop + distanceBottom);\n                var textWrappingStyle = floatingElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget ? 'Square' : floatingElement.textWrappingStyle;\n                var textWrappingType = floatingElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget ? 'Both' : floatingElement.textWrappingType;\n                var minimumWidthRequired = 24;\n                var tableHeight = table.childWidgets.length > 0 ? table.childWidgets[0].rowFormat.height : 0;\n                var lastNestedTable = this.getNestedTable(table);\n                var characterFormat = lastNestedTable.firstChild.firstChild.firstChild.characterFormat;\n                var size = this.documentHelper.textHelper.measureText(\" \", characterFormat);\n                if (tableHeight < size.Height) {\n                    tableHeight = size.Height;\n                }\n                if (!(clientLayoutArea.x > (wrappingBounds.right + minimumWidthRequired) || clientLayoutArea.right < wrappingBounds.x - minimumWidthRequired)) {\n                    if (this.isNeedToWrapForSquareTightAndThroughForTable(bodyWidget, table, -1, -1, textWrappingStyle, wrappingBounds, allowOverlap, 1, floatingElement, false, rect, tableWidth, tableHeight) && !(this.isRelayout && floatingElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && floatingElement.positioning.verticalOrigin === 'Paragraph' && table.index < floatingElement.index)) {\n                        // Skip to update when the wrap type as left\n                        if (rect.x >= wrappingBounds.x && rect.x < wrappingBounds.right && textWrappingType !== 'Left') // Skip to update when the wrap type as left\n                         {\n                            rect.width = rect.width - (wrappingBounds.right - rect.x);\n                            this.isWrapText = true;\n                            var isEntityFitInCurrentLine = true;\n                            if (!isEntityFitInCurrentLine || Math.round(rect.width) < minimumWidthRequired || (rect.width < tableWidth)\n                                || (wrappingBounds.x < table.x)) // check whether the TextWrap X position is less than the paragraph X position\n                             {\n                                rect.width = this.viewer.clientArea.right - wrappingBounds.right;\n                                var minwidth = tableWidth;\n                                if (Math.round(rect.width) < minimumWidthRequired || rect.width < minwidth) {\n                                    if (isEntityFitInCurrentLine && (wrappingBounds.x - (table.x)) > minimumWidthRequired\n                                        && (this.viewer.clientArea.right - wrappingBounds.right) > minimumWidthRequired) {\n                                        rect.width = 0;\n                                    }\n                                    else {\n                                        var topMarginValue = 0;\n                                        var isPositionsUpdated = false;\n                                        if (!isPositionsUpdated) {\n                                            this.isYPositionUpdated = true;\n                                            rect.width = this.viewer.clientArea.width;\n                                            rect.height -= (wrappingBounds.bottom + topMarginValue - rect.y);\n                                            rect.y = wrappingBounds.bottom + topMarginValue;\n                                        }\n                                    }\n                                    this.viewer.updateClientAreaForTextWrap(rect);\n                                    this.isWrapText = false;\n                                }\n                                else {\n                                    var xposition = rect.x;\n                                    //TabsLayoutInfo tabsInfo = null;\n                                    rect.x = wrappingBounds.right;\n                                    //When there is no space to fit the content in right, then update the y position.\n                                    if (textWrappingStyle === 'Square' && rect.width < 0 && tableWidth > 0) {\n                                        // let topMarginValue = GetTopMarginValueForFloatingTable(ownerPara, layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                                        var marginTop = 0;\n                                        this.isYPositionUpdated = true;\n                                        rect.height -= (wrappingBounds.bottom + marginTop - rect.y);\n                                        rect.width = this.viewer.clientArea.width;\n                                        rect.y = wrappingBounds.bottom + marginTop;\n                                        rect.x = xposition;\n                                    }\n                                    this.viewer.updateClientAreaForTextWrap(rect); //\n                                }\n                            }\n                            else {\n                                var xposition = rect.x;\n                                rect.x = wrappingBounds.right + table.firstChild.firstChild.leftMargin;\n                                rect.width = this.viewer.clientArea.right - wrappingBounds.right;\n                                //When there is no space to fit the content in right, then update the y position.\n                                if (textWrappingStyle === 'Square' && rect.width < 0 && tableWidth > 0) {\n                                    // float topMarginValue = GetTopMarginValueForFloatingTable(ownerPara,\n                                    //     layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                                    var topMarginValue = 0;\n                                    this.isYPositionUpdated = true;\n                                    rect.width = this.viewer.clientArea.width;\n                                    rect.height -= (wrappingBounds.bottom + topMarginValue - rect.y);\n                                    rect.y = wrappingBounds.bottom + topMarginValue;\n                                    rect.x = xposition;\n                                }\n                                this.viewer.updateClientAreaForTextWrap(rect); //\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return rect;\n    };\n    Layout.prototype.getNestedTable = function (tableWidget) {\n        var table = tableWidget;\n        while (table.firstChild.firstChild.firstChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n            table = table.firstChild.firstChild.firstChild;\n        }\n        return table;\n    };\n    Layout.prototype.startAt = function (element, text) {\n        if (element.footnoteType === 'Footnote') {\n            this.startat = element.paragraph.bodyWidget.sectionFormat.initialFootNoteNumber;\n            text = this.getFootEndNote(element.paragraph.bodyWidget.sectionFormat.footNoteNumberFormat, this.documentHelper.footnoteCollection.indexOf(element) + this.startat);\n        }\n        else {\n            this.startat = element.paragraph.bodyWidget.sectionFormat.initialEndNoteNumber;\n            text = this.getFootEndNote(element.paragraph.bodyWidget.sectionFormat.endnoteNumberFormat, this.documentHelper.endnoteCollection.indexOf(element) + this.startat);\n        }\n        return text;\n    };\n    Layout.prototype.layoutFootEndNoteElement = function (element) {\n        this.isFootnoteContentChanged = true;\n        var footnote;\n        var positionchanged = false;\n        var footIndex = this.documentHelper.footnoteCollection.indexOf(element);\n        var insertIndex = 1;\n        this.islayoutFootnote = true;\n        var isFitted;\n        var clientArea = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(this.viewer.clientArea.x, this.viewer.clientArea.y, this.viewer.clientArea.width, this.viewer.clientArea.height);\n        var clientActiveArea = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(this.viewer.clientActiveArea.x, this.viewer.clientActiveArea.y, this.viewer.clientActiveArea.width, this.viewer.clientActiveArea.height);\n        var bodyWidget = element.paragraph.bodyWidget;\n        var isCreated = false;\n        var height = 0;\n        if (bodyWidget.page.footnoteWidget) {\n            for (var j = 0; j < bodyWidget.page.footnoteWidget.bodyWidgets.length; j++) {\n                insertIndex = bodyWidget.page.footnoteWidget.bodyWidgets.length;\n                var currentIndex = this.documentHelper.footnoteCollection.indexOf((bodyWidget.page.footnoteWidget.bodyWidgets[j]).footNoteReference);\n                if (currentIndex > footIndex) {\n                    if (currentIndex - footIndex === 1) {\n                        insertIndex = j;\n                        positionchanged = true;\n                        break;\n                    }\n                }\n            }\n        }\n        element.isLayout = true;\n        if (element.footnoteType === 'Footnote') {\n            if (bodyWidget.page.footnoteWidget && bodyWidget.page.footnoteWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) {\n                footnote = bodyWidget.page.footnoteWidget;\n            }\n            else {\n                isCreated = true;\n                footnote = new _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget();\n                footnote.footNoteType = 'Footnote';\n                footnote.page = bodyWidget.page;\n                var newParagraph = new _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget();\n                newParagraph.characterFormat = new _format_index__WEBPACK_IMPORTED_MODULE_4__.WCharacterFormat();\n                newParagraph.paragraphFormat = new _format_index__WEBPACK_IMPORTED_MODULE_4__.WParagraphFormat();\n                newParagraph.index = 0;\n                var lineWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.LineWidget(newParagraph);\n                newParagraph.childWidgets.push(lineWidget);\n                height = this.documentHelper.textHelper.getParagraphMarkSize(newParagraph.characterFormat).Height;\n                footnote.margin = new _page__WEBPACK_IMPORTED_MODULE_6__.Margin(0, height, 0, 0);\n            }\n            this.isFootNoteLayoutStart = true;\n            if (isCreated) {\n                bodyWidget.page.footnoteWidget = footnote;\n            }\n            var body = element.bodyWidget;\n            this.viewer.updateClientArea(footnote, footnote.page);\n            this.viewer.clientArea.y = clientArea.y;\n            this.viewer.clientActiveArea.y = clientActiveArea.y;\n            for (var i = 0; i < element.bodyWidget.childWidgets.length; i++) {\n                var block = element.bodyWidget.childWidgets[i];\n                block.containerWidget = body;\n                body.page = bodyWidget.page;\n                body.sectionFormat = footnote.sectionFormat;\n                block.containerWidget.containerWidget = footnote;\n                this.viewer.updateClientAreaForBlock(block, true);\n                if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                    this.clearTableWidget(block, true, true);\n                }\n                this.layoutBlock(block, 0);\n                height += block.height;\n                block.y = 0;\n                this.viewer.updateClientAreaForBlock(block, false);\n                body.height += block.height;\n            }\n            if (footnote.sectionFormat.columns.length > 1 && !(footnote.bodyWidgets.length === 0 && body.childWidgets.length <= 1 && body.childWidgets[0].childWidgets.length <= 1)) {\n                height = (height / footnote.sectionFormat.numberOfColumns);\n            }\n            this.isFootNoteLayoutStart = false;\n            isFitted = false;\n            if (height >= clientActiveArea.height) {\n                this.isfootMove = true;\n            }\n            if (positionchanged) {\n                footnote.bodyWidgets.splice(insertIndex, 0, body);\n            }\n            else {\n                footnote.bodyWidgets.push(body);\n            }\n            if (element.line.paragraph.isInsideTable) {\n                var table = this.getParentTable(element.line.paragraph.associatedCell.ownerTable);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table.footnoteElement)) {\n                    table.footnoteElement = [];\n                }\n                if (table.footnoteElement.indexOf(element) == -1) {\n                    table.footnoteElement.push(element);\n                    this.layoutedFootnoteElement.push(element);\n                    var currentTable = element.line.paragraph.containerWidget.ownerTable;\n                    if (currentTable.footnoteElement.indexOf(element) == -1) {\n                        currentTable.footnoteElement.push(element);\n                    }\n                }\n            }\n            footnote.height += height;\n            isFitted = true;\n            this.viewer.clientActiveArea = clientActiveArea;\n            this.viewer.clientActiveArea.height -= height;\n            this.footnoteHeight += height;\n            this.viewer.clientArea = clientArea;\n        }\n        return isFitted;\n    };\n    Layout.prototype.layoutEndNoteElement = function () {\n        var totalPage = this.documentHelper.pages.length;\n        if (this.documentHelper.endnoteCollection.length > 0) {\n            var foot = void 0;\n            var endNote = void 0;\n            var isCreated = void 0;\n            var lastPage = this.documentHelper.pages[totalPage - 1];\n            var bodyWidget = lastPage.bodyWidgets[0];\n            var lastSection = lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1];\n            if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer && lastSection.sectionFormat.numberOfColumns > 1) {\n                var firstSection = this.getBodyWidget(lastSection, true);\n                this.splitBodyWidgetBasedOnColumn(firstSection);\n            }\n            for (var i = 0; i < this.documentHelper.endnoteCollection.length; i++) {\n                foot = this.documentHelper.endnoteCollection[i];\n                if (bodyWidget.page.endnoteWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget && bodyWidget.page.endnoteWidget.footNoteType === 'Endnote') {\n                    endNote = bodyWidget.page.endnoteWidget;\n                }\n                else {\n                    isCreated = true;\n                    endNote = new _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget();\n                    endNote.footNoteType = 'Endnote';\n                    endNote.page = bodyWidget.page;\n                }\n                var body = foot.bodyWidget;\n                body.page = endNote.page;\n                for (var j = 0; j < foot.bodyWidget.childWidgets.length; j++) {\n                    var block = foot.bodyWidget.childWidgets[j];\n                    block.containerWidget = body;\n                    block.containerWidget.containerWidget = endNote;\n                }\n                if (endNote.bodyWidgets.indexOf(body) === -1) {\n                    body.index = endNote.bodyWidgets.length;\n                    endNote.bodyWidgets.push(body);\n                    body.sectionFormat = endNote.page.bodyWidgets[endNote.page.bodyWidgets.length - 1].sectionFormat;\n                }\n                if (isCreated) {\n                    bodyWidget.page.endnoteWidget = endNote;\n                }\n            }\n            this.layoutfootNote(endNote);\n        }\n    };\n    Layout.prototype.hasValidElement = function (paragraph) {\n        var line = paragraph.firstChild;\n        if (line) {\n            var elementBox = line.children[0];\n            while (elementBox) {\n                if (elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox) {\n                    elementBox = this.documentHelper.getNextValidElementForField(elementBox);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(elementBox) && !elementBox.line.paragraph.equals(paragraph)) {\n                        return false;\n                    }\n                }\n                if (elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox || elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ImageElementBox) {\n                    return true;\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(elementBox)) {\n                    elementBox = elementBox.nextNode;\n                }\n            }\n        }\n        return false;\n    };\n    Layout.prototype.isConsiderAsEmptyLineWidget = function (lineWidget) {\n        for (var i = 0; i < lineWidget.children.length; i++) {\n            var element = lineWidget.children[i];\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && element.textWrappingStyle !== 'Inline') {\n                continue;\n            }\n            if (element.width > 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Layout.prototype.updateFieldText = function (element) {\n        var text = this.documentHelper.getFieldResult(element.fieldBegin, element.paragraph.bodyWidget.page);\n        if (text !== '') {\n            element.text = text;\n            this.documentHelper.textHelper.getTextSize(element, element.characterFormat);\n        }\n    };\n    Layout.prototype.checkLineWidgetWithClientArea = function (line, element) {\n        if (line !== element.line || element.line === line && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextElement)\n            && !element.line.isLastLine()) {\n            this.moveToNextLine(line);\n            if (this.documentHelper.compatibilityMode !== 'Word2013' && this.isOverlapFloatTable) {\n                var table = void 0;\n                if (element.line.paragraph.previousRenderedWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && element.line.paragraph.previousRenderedWidget.wrapTextAround) {\n                    table = element.line.paragraph.previousRenderedWidget;\n                    this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x -\n                        _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n                }\n                this.viewer.clientActiveArea.x += line.paragraph.leftIndent;\n                this.isOverlapFloatTable = false;\n            }\n            if (line !== element.line) {\n                this.isRTLLayout = false;\n            }\n        }\n        if (element.line !== line && this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer\n            && this.viewer.clientActiveArea.height < element.height &&\n            this.viewer.clientActiveArea.y !== this.viewer.clientArea.y) {\n            this.moveToNextPage(this.viewer, element.line);\n        }\n        else if (element.line === line && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextElement)\n            && line.paragraph.lastChild === line && !line.isLastLine() && this.viewer.clientActiveArea.height >= 0) {\n            this.moveFromNextPage(line);\n        }\n    };\n    Layout.prototype.checkAndSplitTabOrLineBreakCharacter = function (text, element) {\n        var char = ['\\t', '\\v', '\\f'];\n        var index = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.indexOfAny(text, char);\n        if (index > -1) {\n            var character = text[index];\n            if ((character === '\\t' && text !== '\\t') || (character === '\\v' && text !== '\\v')\n                || (character === '\\f' && text !== '\\f')) {\n                this.splitByLineBreakOrTab(this.viewer, element, index, character);\n            }\n        }\n    };\n    Layout.prototype.moveFromNextPage = function (line) {\n        var nextLine = line.nextLine;\n        if (nextLine && line.paragraph.childWidgets.indexOf(nextLine) === -1) {\n            var splittedParagraph = nextLine.paragraph;\n            nextLine.paragraph.childWidgets.splice(nextLine.indexInOwner, 1);\n            line.paragraph.childWidgets.push(nextLine);\n            nextLine.paragraph = line.paragraph;\n            // this.updateLinearIndex(nextLine.paragraph);\n            if (splittedParagraph.childWidgets.length === 0) {\n                splittedParagraph.destroy();\n            }\n            else {\n                //     this.updateLinearIndex(splittedParagraph);\n            }\n        }\n    };\n    Layout.prototype.cutClientWidth = function (currentElement, isNeedToLayoutShape, skipXPositionUpdate) {\n        if (this.is2013Justification) {\n            return false;\n        }\n        this.clearLineMeasures();\n        var line = currentElement.line;\n        line.marginTop = 0;\n        var width = 0;\n        for (var i = 0; i < line.children.length; i++) {\n            var element = line.children[i];\n            if (isNeedToLayoutShape && element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && element.textWrappingStyle === 'Inline') {\n                this.layoutShape(element);\n            }\n            if (!this.isRelayoutOverlap && element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TabElementBox && element.text === '\\t') {\n                element.width = this.getTabWidth(line.paragraph, this.viewer, 0, line, element);\n            }\n            width += element.width;\n            if (currentElement === element) {\n                break;\n            }\n        }\n        var splitCurrentWidget = this.viewer.clientActiveArea.width - width < 0;\n        var paragarph = currentElement.line.paragraph;\n        var bodyWidget = paragarph.bodyWidget;\n        if (bodyWidget && bodyWidget.floatingElements.length > 0) {\n            this.hasFloatingElement = true;\n            if (!skipXPositionUpdate) {\n                this.isXPositionUpdated = true;\n            }\n            return false;\n        }\n        if (!splitCurrentWidget) {\n            this.viewer.cutFromLeft(this.viewer.clientActiveArea.x + width);\n            if (currentElement.line.paragraph.paragraphFormat.textAlignment === 'Justify' &&\n                currentElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n                this.splitTextElementWordByWord(currentElement);\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentElement.nextElement) && this.viewer.clientActiveArea.width > 0\n                && !currentElement.line.isLastLine()) {\n                this.moveElementFromNextLine(line);\n            }\n        }\n        else if (currentElement.previousElement) {\n            this.cutClientWidth(currentElement.previousElement);\n        }\n        return splitCurrentWidget;\n    };\n    Layout.prototype.layoutFieldCharacters = function (element) {\n        if (element.fieldType === 0) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.formFieldData) && this.isInitialLoad) {\n                this.checkAndUpdateFieldData(element);\n            }\n            if (!this.isFieldCode && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.fieldEnd) || element.hasFieldEnd)) {\n                if (this.documentHelper.fieldStacks.indexOf(element) === -1) {\n                    this.documentHelper.fieldStacks.push(element);\n                }\n                if (this.isRelayout) {\n                    var fieldCode = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimEnd(this.documentHelper.selection.getFieldCode(element));\n                    this.isIFfield = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.startsWith(fieldCode, 'IF');\n                }\n                this.isFieldCode = true;\n                element.hasFieldEnd = true;\n            }\n        }\n        else if (this.documentHelper.fieldStacks.length > 0) {\n            if (element.fieldType === 2) {\n                var field = this.documentHelper.fieldStacks[this.documentHelper.fieldStacks.length - 1];\n                if (field.fieldSeparator === element && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(field.fieldEnd) || field.hasFieldEnd)) {\n                    this.isFieldCode = false;\n                }\n            }\n            else {\n                var field = this.documentHelper.fieldStacks[this.documentHelper.fieldStacks.length - 1];\n                if (element === field.fieldEnd) {\n                    this.documentHelper.fieldStacks.pop();\n                    this.isFieldCode = false;\n                    this.isIFfield = false;\n                }\n            }\n        }\n    };\n    Layout.prototype.checkAndUpdateFieldData = function (fieldBegin) {\n        if (fieldBegin.hasFieldEnd && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(fieldBegin.fieldEnd)) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(fieldBegin.fieldSeparator)) {\n                var seperator = new _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox(2);\n                seperator.fieldBegin = fieldBegin;\n                seperator.fieldEnd = fieldBegin.fieldEnd;\n                seperator.line = fieldBegin.line;\n                fieldBegin.line.children.splice(fieldBegin.fieldEnd.indexInOwner, 0, seperator);\n                fieldBegin.fieldSeparator = seperator;\n                fieldBegin.fieldEnd.fieldSeparator = seperator;\n            }\n            var previousNode = fieldBegin.fieldEnd.previousNode;\n            if (previousNode instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox && previousNode.fieldType === 2) {\n                var formFieldData = fieldBegin.formFieldData;\n                if (formFieldData instanceof _page__WEBPACK_IMPORTED_MODULE_6__.CheckBoxFormField) {\n                    var checkBoxTextElement = new _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox();\n                    checkBoxTextElement.skipformFieldLength = true;\n                    checkBoxTextElement.line = fieldBegin.line;\n                    var index = fieldBegin.line.children.indexOf(fieldBegin.fieldEnd);\n                    fieldBegin.line.children.splice(index, 0, checkBoxTextElement);\n                    checkBoxTextElement.characterFormat.copyFormat(fieldBegin.characterFormat);\n                    if (formFieldData.checked) {\n                        checkBoxTextElement.text = String.fromCharCode(9745);\n                    }\n                    else {\n                        checkBoxTextElement.text = String.fromCharCode(9744);\n                    }\n                    this.setCheckBoxFontSize(formFieldData, checkBoxTextElement.characterFormat);\n                }\n                else if (formFieldData instanceof _page__WEBPACK_IMPORTED_MODULE_6__.DropDownFormField) {\n                    var dropDownTextElement = new _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox();\n                    dropDownTextElement.characterFormat.copyFormat(fieldBegin.characterFormat);\n                    dropDownTextElement.skipformFieldLength = true;\n                    dropDownTextElement.line = fieldBegin.line;\n                    if (formFieldData.dropdownItems.length > 0) {\n                        dropDownTextElement.text = formFieldData.dropdownItems[formFieldData.selectedIndex];\n                    }\n                    else {\n                        dropDownTextElement.text = this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5);\n                    }\n                    var index = fieldBegin.line.children.indexOf(fieldBegin.fieldEnd);\n                    fieldBegin.line.children.splice(index, 0, dropDownTextElement);\n                }\n            }\n        }\n    };\n    /**\n     * Set the checkbox font size\n     * @returns {void}\n     */\n    Layout.prototype.setCheckBoxFontSize = function (formFieldData, format) {\n        if (formFieldData.sizeType !== 'Auto') {\n            format.fontSize = formFieldData.size * CHECK_BOX_FACTOR;\n        }\n        else {\n            format.fontSize = format.fontSize * CHECK_BOX_FACTOR;\n        }\n    };\n    Layout.prototype.layoutEmptyLineWidget = function (paragraph, isEmptyLine, line, isShiftEnter) {\n        this.clearLineMeasures();\n        var paraFormat = paragraph.paragraphFormat;\n        var subWidth = 0;\n        var whiteSpaceCount = 0;\n        isShiftEnter = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isShiftEnter) ? false : isShiftEnter;\n        var borders = paraFormat.borders;\n        var canRenderParagraphBorders = this.documentHelper.canRenderBorder(paragraph);\n        //Calculate line height and descent based on formatting defined in paragraph.\n        var paragraphMarkSize = this.documentHelper.textHelper.getParagraphMarkSize(paragraph.characterFormat);\n        var maxHeight = paragraphMarkSize.Height;\n        var beforeSpacing = 0;\n        var lineWidget;\n        if (paragraph.childWidgets.length > 0 && !isShiftEnter) {\n            this.isUpdateMarginForCurrentLine(line);\n            lineWidget = paragraph.childWidgets[0];\n            if (lineWidget.children.length > 0) {\n                if ((paraFormat.bidi || this.isContainsRtl(lineWidget))) {\n                    this.shiftElementsForRTLLayouting(lineWidget, paraFormat.bidi);\n                }\n                var isParagraphStart = lineWidget.isFirstLine();\n                var isParagraphEnd = lineWidget.isLastLine();\n                var firstLineIndent = 0;\n                if (isParagraphStart) {\n                    beforeSpacing = this.getBeforeSpacing(paragraph);\n                    firstLineIndent = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paraFormat.firstLineIndent);\n                }\n                var textAlignment = paraFormat.textAlignment;\n                if (textAlignment !== 'Left' && this.viewer.textWrap\n                    && (!(textAlignment === 'Justify' && isParagraphEnd)\n                        || (textAlignment === 'Justify' && paraFormat.bidi))) {\n                    var getWidthAndSpace = this.getSubWidth(lineWidget, textAlignment === 'Justify', whiteSpaceCount, firstLineIndent, isParagraphEnd);\n                    subWidth = getWidthAndSpace[0].subWidth;\n                    whiteSpaceCount = getWidthAndSpace[0].spaceCount;\n                }\n            }\n        }\n        else {\n            lineWidget = isEmptyLine ? this.addLineWidget(paragraph) : line;\n        }\n        if (lineWidget.isFirstLine()) {\n            beforeSpacing = this.getBeforeSpacing(paragraph);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.containerWidget) && paragraph.bodyWidget.floatingElements.length > 0 &&\n            !(paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame) && !(paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget && paragraph.containerWidget.ownerTable.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame)) {\n            var elementBox = new _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox();\n            elementBox.line = lineWidget;\n            lineWidget.children.push(elementBox);\n            elementBox.text = '¶';\n            elementBox.characterFormat = paragraph.characterFormat;\n            elementBox.width = this.documentHelper.textHelper.getTextSize(elementBox, elementBox.characterFormat);\n            this.adjustPosition(elementBox, paragraph.bodyWidget);\n            paragraph.x += elementBox.padding.left;\n            if (elementBox.padding.left !== 0) {\n                paragraph.textWrapWidth = true;\n            }\n            if (isEmptyLine) {\n                this.checkInbetweenShapeOverlap(lineWidget);\n            }\n            lineWidget.children.splice(elementBox.indexInOwner, 1);\n        }\n        //isNullOrUndefined(this.viewer.currentHeaderFooter) &&\n        if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer\n            && this.viewer.clientActiveArea.height < beforeSpacing + maxHeight\n            && this.viewer.clientActiveArea.y !== this.viewer.clientArea.y\n            && (!(lineWidget.isFirstLine() && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lineWidget.paragraph.previousWidget))\n                || lineWidget.isEndnoteLineWidget()) && !paragraph.isSectionBreak) {\n            this.moveToNextPage(this.viewer, lineWidget);\n        }\n        //Gets line spacing.\n        var lineSpacing = this.getLineSpacing(paragraph, maxHeight);\n        //let maxDescent: number = maxHeight - paragraphMarkSize.BaselineOffset;\n        //Calculate the bottom position of current line - max height + line spacing.\n        if (!isNaN(this.maxTextHeight)\n            && maxHeight < this.maxTextHeight) {\n            maxHeight = this.maxTextHeight;\n            //maxDescent = maxHeight - this.maxTextBaseline;\n        }\n        var topMargin = 0;\n        var bottomMargin = 0;\n        var leftMargin = 0;\n        var height = maxHeight;\n        var lineSpacingType = paragraph.paragraphFormat.lineSpacingType;\n        if (lineSpacingType === 'Multiple') {\n            if (lineSpacing > maxHeight) {\n                bottomMargin += lineSpacing - maxHeight;\n            }\n            else {\n                topMargin += lineSpacing - maxHeight;\n            }\n        }\n        else if (lineSpacingType === 'Exactly') {\n            topMargin += lineSpacing - (topMargin + height + bottomMargin);\n        }\n        else if (lineSpacing > topMargin + height + bottomMargin) {\n            topMargin += lineSpacing - (topMargin + height + bottomMargin);\n        }\n        topMargin += beforeSpacing;\n        bottomMargin += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(this.getAfterSpacing(paragraph));\n        if (borders.top.lineStyle != 'None') {\n            if (lineWidget.isFirstLine() && !canRenderParagraphBorders.skipTopBorder) {\n                topMargin += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(borders.top.lineWidth + borders.top.space);\n            }\n        }\n        if (borders.bottom.lineStyle != 'None') {\n            if (lineWidget.isLastLine() && !canRenderParagraphBorders.skipBottomBorder) {\n                bottomMargin += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(borders.bottom.lineWidth + borders.bottom.space);\n            }\n        }\n        var renderedElements = lineWidget.renderedElements;\n        for (var i = 0; i < renderedElements.length; i++) {\n            var element = renderedElements[i];\n            if (i === 0 && element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox || (paragraph.paragraphFormat.bidi && renderedElements[renderedElements.length - 1] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox)) {\n                var textAlignment = paragraph.paragraphFormat.textAlignment;\n                if (textAlignment === 'Right') { //Aligns the text as right justified.\n                    leftMargin = subWidth;\n                }\n                else if (textAlignment === 'Center') { //Aligns the text as center justified.\n                    leftMargin = subWidth / 2;\n                }\n                element.margin = new _page__WEBPACK_IMPORTED_MODULE_6__.Margin(leftMargin, topMargin, 0, bottomMargin);\n                element.line = lineWidget;\n                lineWidget.height = topMargin + height + bottomMargin;\n                break;\n            }\n        }\n        lineWidget.margin = new _page__WEBPACK_IMPORTED_MODULE_6__.Margin(0, topMargin, 0, bottomMargin);\n        lineWidget.height = topMargin + height + bottomMargin;\n        this.adjustPositionBasedOnTopAndBottom(lineWidget);\n        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.nextRenderedWidget) && paragraph.isInsideTable\n            && paragraph.previousRenderedWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && paragraph.childWidgets.length == 1) || paragraph.characterFormat.hidden) {\n            //Special behavior for empty cell mark after nested table, preserved with zero height by default.\n            //Empty line is displayed in cell for the last empty paragraph (Cell mark - last paragraph in cell) after a nested table.\n            lineWidget.height = 0;\n        }\n        var previousWidget = paragraph.previousRenderedWidget;\n        // In MS word behaviour if the section break last para is empty. Then they will render in the last para in the previous para. \n        if (paragraph.isSectionBreak && previousWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && paragraph.index > 0) {\n            this.layoutSectionBreakParagraph(paragraph, previousWidget);\n            if (previousWidget.isEndsWithPageBreak) {\n                // If pagebreak next para is section last para and it empty then will render next to the page break. \n                // In layout element method skipped to movetonext page and now it will move to next page.\n                this.moveToNextPage(this.viewer, lineWidget, true);\n            }\n        }\n        else {\n            this.viewer.cutFromTop(this.viewer.clientActiveArea.y + lineWidget.height);\n            var previousWidget_1 = paragraph.previousRenderedWidget;\n            if (previousWidget_1) {\n                var previousSplitWidget = previousWidget_1.getSplitWidgets();\n                if (paragraph.isSectionBreak && previousSplitWidget.length > 0 && previousSplitWidget[previousSplitWidget.length - 1] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && previousSplitWidget[previousSplitWidget.length - 1].wrapTextAround) {\n                    this.viewer.cutFromTop(previousSplitWidget[previousSplitWidget.length - 1].y + previousSplitWidget[previousSplitWidget.length - 1].height);\n                }\n            }\n        }\n        this.wrapPosition = [];\n        //Clears the previous line elements from collection.\n    };\n    Layout.prototype.layoutSectionBreakParagraph = function (paragraph, previousParagraph) {\n        var lastLine = previousParagraph.lastChild;\n        var lineWidget = paragraph.firstChild;\n        if (lastLine.margin) {\n            lineWidget.margin = new _page__WEBPACK_IMPORTED_MODULE_6__.Margin(0, lastLine.margin.top, 0, lastLine.margin.bottom);\n        }\n        lineWidget.height = lastLine.height;\n        paragraph.height = lastLine.height;\n        paragraph.y = this.getLineYPosition(previousParagraph);\n        paragraph.width = previousParagraph.width;\n        paragraph.x = this.getLineXPosition(previousParagraph);\n    };\n    Layout.prototype.getLineYPosition = function (paragraph) {\n        var yPosition = paragraph.y;\n        for (var i = 0; i < paragraph.childWidgets.length - 1; i++) {\n            yPosition += paragraph.childWidgets[i].height;\n        }\n        return yPosition;\n    };\n    Layout.prototype.getLineXPosition = function (paragraph) {\n        var lastLine = paragraph.lastChild;\n        var paragraphMarkSize = this.documentHelper.textHelper.getParagraphMarkSize(paragraph.characterFormat);\n        return paragraph.x + this.getLineWidth(lastLine) + paragraphMarkSize.Width;\n    };\n    Layout.prototype.getLineWidth = function (linewidget) {\n        var width = 0;\n        for (var i = 0; i < linewidget.children.length; i++) {\n            if (!(linewidget.children[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox)) {\n                width += linewidget.children[i].width;\n            }\n        }\n        return width;\n    };\n    Layout.prototype.isUpdateMarginForCurrentLine = function (line) {\n        var isUpdate = true;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(line) && !line.isFirstLine()) {\n            for (var i = 0; i < line.children.length; i++) {\n                if (!(line.children[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeStartElementBox || line.children[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeEndElementBox)) {\n                    isUpdate = false;\n                    break;\n                }\n            }\n            if (isUpdate) {\n                line.margin = new _page__WEBPACK_IMPORTED_MODULE_6__.Margin(0, 0, 0, 0);\n            }\n        }\n    };\n    Layout.prototype.adjustPositionBasedOnTopAndBottom = function (lineWidget) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lineWidget.paragraph.bodyWidget) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lineWidget.paragraph.bodyWidget.page.headerWidget)\n            && lineWidget.paragraph.bodyWidget.page.headerWidget.floatingElements.length > 0\n            && lineWidget.paragraph === lineWidget.paragraph.bodyWidget.childWidgets[0]\n            && lineWidget.indexInOwner === 0) {\n            //To check whether first para in the page overlaps with shape in Header.\n            this.checkInbetweenShapeOverlap(lineWidget, lineWidget.paragraph.bodyWidget.page.headerWidget.floatingElements);\n        }\n    };\n    Layout.prototype.layoutListItems = function (paragraph, isUpdatedList) {\n        if (!this.isFieldCode) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.paragraphFormat)\n                && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.paragraphFormat.listFormat)\n                && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId)) &&\n                paragraph.paragraphFormat.listFormat.listLevelNumber >= 0\n                && paragraph.paragraphFormat.listFormat.listLevelNumber < 9 && !isUpdatedList) {\n                this.clearListElementBox(paragraph);\n                this.layoutList(paragraph, this.documentHelper);\n            }\n            else if (paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listId === -1) {\n                this.clearListElementBox(paragraph);\n            }\n        }\n    };\n    Layout.prototype.layoutList = function (paragraph, documentHelper) {\n        var list = documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId);\n        var listLevelNumber = paragraph.paragraphFormat.listFormat.listLevelNumber;\n        var currentListLevel = this.getListLevel(list, listLevelNumber);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentListLevel) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentListLevel.numberFormat)) {\n            return;\n        }\n        var lineWidget = paragraph.childWidgets[0];\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lineWidget)) {\n            lineWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.LineWidget(paragraph);\n            paragraph.childWidgets.push(lineWidget);\n        }\n        var element = new _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox(currentListLevel, false);\n        var considerAsHidden = false;\n        if (paragraph.characterFormat.hidden) {\n            if (paragraph.isEmpty()) {\n                considerAsHidden = true;\n            }\n            else {\n                var firstElement = lineWidget.children[0];\n                while (firstElement) {\n                    if (!firstElement.characterFormat.hidden) {\n                        considerAsHidden = false;\n                        break;\n                    }\n                    else {\n                        considerAsHidden = true;\n                    }\n                    firstElement = firstElement.nextNode;\n                }\n            }\n            if (considerAsHidden) {\n                element.characterFormat.hidden = true;\n            }\n        }\n        element.line = lineWidget;\n        if (currentListLevel.listLevelPattern === 'Bullet') {\n            element.text = currentListLevel.numberFormat;\n            this.updateListValues(list, listLevelNumber);\n        }\n        else {\n            element.text = this.getListNumber(paragraph.paragraphFormat.listFormat);\n        }\n        if (currentListLevel.numberFormat === '') {\n            return;\n        }\n        this.viewer.updateClientWidth(-_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent));\n        if (this.documentHelper.isIosDevice || this.documentHelper.isLinuxOS) {\n            var text = element.text;\n            text = text === String.fromCharCode(61623) ? String.fromCharCode(9679) : text === String.fromCharCode(61551) + String.fromCharCode(32) ? String.fromCharCode(9675) : text;\n            if (text !== element.text) {\n                element.text = text;\n            }\n        }\n        documentHelper.textHelper.updateTextSize(element, paragraph);\n        var moveToNextPage;\n        if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer\n            && this.viewer.clientActiveArea.height < element.height && this.viewer.clientActiveArea.y !== this.viewer.clientArea.y) {\n            moveToNextPage = true;\n        }\n        this.viewer.cutFromLeft(this.viewer.clientActiveArea.x + element.width);\n        var previousElement = element;\n        //Adds the text element to the line\n        lineWidget.children.splice(0, 0, element);\n        if (currentListLevel.followCharacter !== 'None') {\n            element = new _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox(currentListLevel, true);\n            if (considerAsHidden) {\n                element.characterFormat.hidden = true;\n            }\n            if (currentListLevel.followCharacter === 'Tab') {\n                element.text = '\\t';\n                var index = lineWidget.children.indexOf(element);\n                var tabWidth = this.getTabWidth(paragraph, this.viewer, index, lineWidget, element);\n                documentHelper.textHelper.updateTextSize(element, paragraph);\n                if (!considerAsHidden) {\n                    element.width = tabWidth;\n                }\n            }\n            else {\n                element.text = ' ';\n                documentHelper.textHelper.updateTextSize(element, paragraph);\n            }\n            this.viewer.cutFromLeft(this.viewer.clientActiveArea.x + element.width);\n            //Adds the tabSpace to the line\n            lineWidget.children.splice(1, 0, element);\n            element.line = lineWidget;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.containerWidget) && paragraph.bodyWidget.floatingElements.length > 0 &&\n            !(previousElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) && !(paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame)) {\n            this.adjustPosition(previousElement, previousElement.line.paragraph.bodyWidget);\n            if ((previousElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox) && previousElement.padding && previousElement.padding.left > 0 &&\n                paragraph.paragraphFormat.firstLineIndent < 0) {\n                previousElement.padding.left -= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(previousElement.line.paragraph.paragraphFormat.firstLineIndent);\n            }\n            if (this.isYPositionUpdated) {\n                if (this.viewer.clientActiveArea.width > (previousElement.width + element.width)) {\n                    this.viewer.clientActiveArea.width -= (previousElement.width + element.width);\n                }\n                this.isYPositionUpdated = false;\n            }\n        }\n        if (moveToNextPage) {\n            this.moveToNextPage(this.viewer, lineWidget, undefined, true);\n            this.cutClientWidth(element);\n            this.hasFloatingElement = false;\n            this.isXPositionUpdated = false;\n            return;\n        }\n        if (currentListLevel.followCharacter !== 'None') {\n            this.viewer.updateClientWidth(_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent));\n        }\n    };\n    Layout.prototype.addBodyWidget = function (area, widget) {\n        var bodyWidget;\n        if (widget) {\n            bodyWidget = widget;\n        }\n        else {\n            bodyWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget();\n        }\n        bodyWidget.width = area.width;\n        bodyWidget.x = area.x;\n        bodyWidget.y = area.y;\n        // this.addSectionInDictionary(this.viewer, section, bodyWidget);\n        return bodyWidget;\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.addListLevels = function (abstractList) {\n        for (var i = abstractList.levels.length; i < 9; i++) {\n            var listLevel = new _list_list_level__WEBPACK_IMPORTED_MODULE_5__.WListLevel(abstractList);\n            var val = i % 3;\n            if (abstractList.levels[0].listLevelPattern === 'Bullet') {\n                listLevel.listLevelPattern = 'Bullet';\n                listLevel.numberFormat = val === 0 ? String.fromCharCode(61623) : val === 1 ? String.fromCharCode(61551) + String.fromCharCode(32) : String.fromCharCode(61607);\n                listLevel.characterFormat.fontFamily = listLevel.numberFormat === String.fromCharCode(61607) ? 'Wingdings' : 'Symbol';\n            }\n            else {\n                listLevel.listLevelPattern = this.getListLevelPattern(val);\n                listLevel.numberFormat = '%' + (i + 1).toString() + '.';\n                listLevel.startAt = 1;\n                listLevel.restartLevel = i;\n            }\n            listLevel.paragraphFormat = new _format_index__WEBPACK_IMPORTED_MODULE_4__.WParagraphFormat(undefined);\n            listLevel.paragraphFormat.leftIndent = 48 * (i + 1);\n            listLevel.paragraphFormat.firstLineIndent = -24;\n            abstractList.levels.push(listLevel);\n        }\n    };\n    Layout.prototype.addSplittedLineWidget = function (lineWidget, elementIndex, splittedElementBox) {\n        var index = elementIndex;\n        if (this.isWrapText) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedElementBox)) {\n                lineWidget.children.splice(index + 1, 0, splittedElementBox);\n                splittedElementBox.line = lineWidget;\n            }\n            return;\n        }\n        var columneBreak = false;\n        var paragraph = lineWidget.paragraph;\n        var movedElementBox = [];\n        var lineIndex = paragraph.childWidgets.indexOf(lineWidget);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedElementBox)) {\n            movedElementBox.push(splittedElementBox);\n        }\n        var newLineWidget = undefined;\n        var previousElement = lineWidget.children[index];\n        if (previousElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.CommentCharacterElementBox && previousElement.commentType === 0 && index != 0) {\n            index = index - 1;\n        }\n        else if (previousElement.isColumnBreak && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(previousElement.nextNode)) {\n            columneBreak = true;\n        }\n        //Move Next element box to temp collection\n        for (var i = index + 1; i < lineWidget.children.length; i++) {\n            movedElementBox.push(lineWidget.children[i]);\n        }\n        if (movedElementBox.length > 0 || columneBreak) {\n            if (lineIndex === paragraph.childWidgets.length - 1) {\n                newLineWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.LineWidget(paragraph);\n            }\n            else {\n                newLineWidget = paragraph.childWidgets[lineIndex + 1];\n            }\n            for (var j = 0; j < movedElementBox.length; j++) {\n                movedElementBox[j].line = newLineWidget;\n            }\n            if (movedElementBox.length > 0) {\n                lineWidget.children.splice(index + 1, lineWidget.children.length - 1);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lineWidget.layoutedElements) && lineWidget.layoutedElements.length > 0) {\n                    lineWidget.layoutedElements.splice(index + 1, lineWidget.layoutedElements.length - 1);\n                }\n                newLineWidget.children = movedElementBox.concat(newLineWidget.children);\n            }\n            if (paragraph.childWidgets.indexOf(newLineWidget) === -1) {\n                paragraph.childWidgets.splice(lineIndex + 1, 0, newLineWidget);\n            }\n        }\n    };\n    Layout.prototype.addElementToLine = function (paragraph, element) {\n        if (!(element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && element.textWrappingStyle !== 'Inline')) {\n            if (this.isWrapText) {\n                this.isWrapText = false;\n                this.viewer.clientActiveArea.width = this.viewer.clientArea.right - this.viewer.clientActiveArea.x;\n            }\n            this.viewer.cutFromLeft(this.viewer.clientActiveArea.x + element.width);\n        }\n        if (paragraph.paragraphFormat.textAlignment === 'Justify' && element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n            this.splitTextElementWordByWord(element);\n        }\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ImageElementBox) {\n            element.line.skipClipImage = !element.isInlineImage;\n        }\n    };\n    Layout.prototype.splitElementForClientArea = function (paragraph, element) {\n        //const line: LineWidget = element.line;\n        if (element.line.children.length > 0) {\n            var previousElement = element.previousElement;\n            var index = element.indexInOwner;\n            // if line widget contain only single image element box need to skip this from splitting\n            // else move element to next line\n            if (element.line.children.length > 1) {\n                if (previousElement && this.viewer.clientActiveArea.x !== this.viewer.clientArea.x) {\n                    index -= 1;\n                }\n            }\n            this.addSplittedLineWidget(element.line, index);\n        }\n    };\n    Layout.prototype.splitByWord = function (lineWidget, paragraph, elementBox, text, width, characterFormat) {\n        var index = this.getSplitIndexByWord(this.viewer.clientActiveArea.width, text, width, characterFormat, elementBox.scriptType);\n        if (index > 0 && index < elementBox.length) {\n            var indexOf = lineWidget.children.indexOf(elementBox);\n            //const lineIndex: number = paragraph.childWidgets.indexOf(lineWidget);\n            var splittedElementBox = new _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox();\n            text = text.substring(index);\n            splittedElementBox.text = text;\n            if (text[0] === ' ') {\n                var prevLength = text.length;\n                text = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimStart(text); //To trim white space at starting of the text.\n                index += prevLength - text.length;\n            }\n            splittedElementBox.characterFormat.copyFormat(elementBox.characterFormat);\n            splittedElementBox.width = this.documentHelper.textHelper.getWidth(splittedElementBox.text, characterFormat, splittedElementBox.scriptType);\n            if (splittedElementBox.text[splittedElementBox.text.length - 1] === ' ') {\n                splittedElementBox.trimEndWidth = this.documentHelper.textHelper.getWidth(_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimEnd(splittedElementBox.text), characterFormat, splittedElementBox.scriptType);\n            }\n            else {\n                splittedElementBox.trimEndWidth = splittedElementBox.width;\n            }\n            splittedElementBox.characterRange = elementBox.characterRange;\n            splittedElementBox.scriptType = elementBox.scriptType;\n            //splittedElementBox.revisions = splittedElementBox.revisions;\n            elementBox.text = elementBox.text.substr(0, index);\n            if (elementBox.text !== ' ' && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.endsWith(elementBox.text) && characterFormat.bidi\n                && elementBox.characterRange === _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft && !this.isWrapText) {\n                var textElement = this.spitTextElementByWhitespace(elementBox, characterFormat);\n                indexOf = lineWidget.children.indexOf(textElement);\n            }\n            elementBox.width = this.documentHelper.textHelper.getWidth(elementBox.text, elementBox.characterFormat, elementBox.scriptType);\n            if (elementBox.text[elementBox.text.length - 1] === ' ') {\n                elementBox.trimEndWidth = this.documentHelper.textHelper.getWidth(_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimEnd(elementBox.text), elementBox.characterFormat, elementBox.scriptType);\n            }\n            else {\n                elementBox.trimEndWidth = elementBox.width;\n            }\n            if (elementBox.revisions.length > 0) {\n                this.updateRevisionForSplittedElement(elementBox, splittedElementBox, true);\n                splittedElementBox.isMarkedForRevision = elementBox.isMarkedForRevision;\n            }\n            splittedElementBox.height = elementBox.height;\n            splittedElementBox.baselineOffset = elementBox.baselineOffset;\n            this.splitErrorCollection(elementBox, splittedElementBox);\n            this.addSplittedLineWidget(lineWidget, indexOf, splittedElementBox);\n            this.addElementToLine(paragraph, elementBox);\n            if (elementBox.width === 0) {\n                lineWidget.children.splice(indexOf, 1);\n            }\n        }\n    };\n    Layout.prototype.spitTextElementByWhitespace = function (textElement, format) {\n        var lineWidget = textElement.line;\n        var indexOf = lineWidget.children.indexOf(textElement);\n        var text = textElement.text;\n        var elementBox = new _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox();\n        var index = text.length - 1;\n        textElement.text = text.substring(0, index);\n        elementBox.text = text.substring(index);\n        elementBox.characterFormat.copyFormat(textElement.characterFormat);\n        elementBox.line = lineWidget;\n        elementBox.characterRange = _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.WordSplit;\n        elementBox.scriptType = textElement.scriptType;\n        elementBox.height = textElement.height;\n        elementBox.baselineOffset = textElement.baselineOffset;\n        elementBox.width = this.documentHelper.textHelper.getWidth(elementBox.text, format, elementBox.scriptType);\n        lineWidget.children.splice(indexOf + 1, 0, elementBox);\n        if (textElement.revisions.length > 0) {\n            this.updateRevisionForSplittedElement(textElement, elementBox, index > 0, true);\n            elementBox.isMarkedForRevision = textElement.isMarkedForRevision;\n        }\n        return elementBox;\n    };\n    Layout.prototype.splitErrorCollection = function (elementBox, splittedBox) {\n        if (elementBox.errorCollection.length > 0) {\n            var errorCollection = [];\n            var ignoreItems = elementBox.ignoreOnceItems;\n            for (var i = 0; i < elementBox.errorCollection.length; i++) {\n                errorCollection.push(elementBox.errorCollection[i]);\n            }\n            for (var j = 0; j < elementBox.errorCollection.length; j++) {\n                var index = elementBox.text.indexOf(elementBox.errorCollection[j].text);\n                var textElement = elementBox.errorCollection[j];\n                if (index < 0) {\n                    errorCollection.splice(0, 1);\n                    splittedBox.errorCollection.push(textElement);\n                }\n                else if (splittedBox.text.indexOf(textElement.text) > 0) {\n                    splittedBox.errorCollection.push(textElement);\n                }\n            }\n            splittedBox.ignoreOnceItems = ignoreItems;\n            elementBox.ignoreOnceItems = [];\n            elementBox.errorCollection = errorCollection;\n        }\n    };\n    Layout.prototype.splitByCharacter = function (lineWidget, textElement, text, width, characterFormat) {\n        var paragraph = lineWidget.paragraph;\n        var atleastSpacing = paragraph.paragraphFormat.lineSpacingType === 'AtLeast' ? paragraph.paragraphFormat.afterSpacing : 0;\n        var index = this.getTextSplitIndexByCharacter(this.viewer.clientArea.width, this.viewer.clientActiveArea.width, text, width, characterFormat, textElement.scriptType);\n        // if the index is zero, no need to split text by character. so, we can avoid the empty text element creation.\n        if (index === 0 && textElement.previousNode instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ImageElementBox && textElement.previousNode.textWrappingType === \"Right\") {\n            return;\n        }\n        else if (index === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(textElement) && textElement.length > 0 && (Math.max(textElement.height, atleastSpacing) <= this.viewer.clientArea.height)\n            && this.viewer.clientActiveArea.width === 0 && lineWidget.children.indexOf(textElement) === 0) {\n            //Eventhough, there is zero remaining client area width and fit atleast one character of word in a line only if there is no item fitted in same line.\n            index = 1;\n        }\n        var splitWidth = 0;\n        if (index < textElement.length) {\n            splitWidth = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text.substring(0, index), characterFormat, textElement.scriptType);\n            text = text.substring(index);\n        }\n        if (splitWidth > this.viewer.clientActiveArea.width && textElement.indexInOwner > 0) {\n            this.addSplittedLineWidget(lineWidget, textElement.indexInOwner - 1);\n            return;\n        }\n        var indexOf = lineWidget.children.indexOf(textElement);\n        if (index < textElement.length) {\n            //const lineIndex: number = paragraph.childWidgets.indexOf(lineWidget);\n            var splittedElement = new _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox();\n            splittedElement.text = text;\n            splittedElement.errorCollection = textElement.errorCollection;\n            splittedElement.scriptType = textElement.scriptType;\n            textElement.text = textElement.text.substr(0, index);\n            splittedElement.characterFormat.copyFormat(textElement.characterFormat);\n            splittedElement.width = this.documentHelper.textHelper.getWidth(splittedElement.text, characterFormat, splittedElement.scriptType);\n            if (splittedElement.text[splittedElement.text.length - 1] === ' ') {\n                splittedElement.trimEndWidth = this.documentHelper.textHelper.getWidth(_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimEnd(splittedElement.text), characterFormat, splittedElement.scriptType);\n            }\n            else {\n                splittedElement.trimEndWidth = splittedElement.width;\n            }\n            splittedElement.characterRange = textElement.characterRange;\n            textElement.width = this.documentHelper.textHelper.getWidth(textElement.text, characterFormat, textElement.scriptType);\n            if (textElement.text[textElement.text.length - 1] === ' ') {\n                textElement.trimEndWidth = this.documentHelper.textHelper.getWidth(_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimEnd(textElement.text), characterFormat, textElement.scriptType);\n            }\n            else {\n                textElement.trimEndWidth = textElement.width;\n            }\n            splittedElement.height = textElement.height;\n            splittedElement.baselineOffset = textElement.baselineOffset;\n            lineWidget.children.splice(textElement.indexInOwner + 1, 0, splittedElement);\n            if (textElement.revisions.length > 0) {\n                this.updateRevisionForSplittedElement(textElement, splittedElement, index > 0);\n                splittedElement.isMarkedForRevision = textElement.isMarkedForRevision;\n            }\n            this.addElementToLine(paragraph, textElement);\n            this.addSplittedLineWidget(lineWidget, indexOf);\n            if (textElement.width === 0) {\n                lineWidget.children.splice(indexOf, 1);\n            }\n        }\n        else {\n            //Adds the last text element on inline to line elements collection\n            this.addSplittedLineWidget(lineWidget, indexOf);\n            this.addElementToLine(paragraph, textElement);\n        }\n    };\n    Layout.prototype.updateRevisionForSplittedElement = function (item, splittedElement, isSplitted, isJustify) {\n        if (item.revisions.length > 0) {\n            for (var i = 0; i < item.revisions.length; i++) {\n                var currentRevision = item.revisions[i];\n                if (isSplitted) {\n                    splittedElement.revisions.push(currentRevision);\n                    var rangeIndex = currentRevision.range.indexOf(item);\n                    if (rangeIndex < 0) {\n                        currentRevision.range.push(splittedElement);\n                    }\n                    else {\n                        if (isJustify) {\n                            currentRevision.range.splice(rangeIndex, 0, splittedElement);\n                        }\n                        else {\n                            currentRevision.range.splice(rangeIndex + 1, 0, splittedElement);\n                        }\n                    }\n                }\n                else {\n                    var rangeIndex = currentRevision.range.indexOf(item);\n                    currentRevision.range.splice(rangeIndex, 1);\n                    currentRevision.range.splice(rangeIndex, 0, splittedElement);\n                    splittedElement.revisions.push(currentRevision);\n                }\n            }\n        }\n    };\n    Layout.prototype.splitTextElementWordByWord = function (textElement) {\n        var lineWidget = textElement.line;\n        var indexOf = lineWidget.children.indexOf(textElement);\n        var startIndex = indexOf;\n        var paddingLeft = textElement.padding.left;\n        textElement.padding.left = 0;\n        var text = textElement.text;\n        var format;\n        var characterUptoWs = text.trim().indexOf(' ');\n        if (characterUptoWs >= 0) {\n            lineWidget.children.splice(indexOf, 1);\n            format = textElement.characterFormat;\n            //const fontSize: number = format.fontSize;\n            var index = textElement.length - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimStart(text).length; //Trim start\n            while (index < textElement.length) {\n                index = this.getTextIndexAfterSpace(text, index);\n                if (index === 0 || index === textElement.length) {\n                    break;\n                }\n                if (index < textElement.length) {\n                    var splittedElement = new _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox();\n                    var splittedText = text.substring(0, index);\n                    text = text.substring(index);\n                    if (text.substring(0, 1) === ' ') {\n                        // start of the text is trimmed and its length is reduced from text length.\n                        index += text.length - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimStart(text).length;\n                    }\n                    splittedElement.text = splittedText;\n                    splittedElement.characterFormat.copyFormat(textElement.characterFormat);\n                    splittedElement.line = lineWidget;\n                    splittedElement.height = textElement.height;\n                    splittedElement.baselineOffset = textElement.baselineOffset;\n                    splittedElement.characterRange = textElement.characterRange;\n                    splittedElement.scriptType = textElement.scriptType;\n                    lineWidget.children.splice(indexOf, 0, splittedElement);\n                    if (textElement.revisions.length > 0) {\n                        this.updateRevisionForSplittedElement(textElement, splittedElement, index > 0, true);\n                        splittedElement.isMarkedForRevision = textElement.isMarkedForRevision;\n                    }\n                    if (splittedElement.text !== ' ' && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.endsWith(splittedElement.text) && format.bidi && splittedElement.characterRange === _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft) {\n                        var elementBox = this.spitTextElementByWhitespace(splittedElement, format);\n                        indexOf = lineWidget.children.indexOf(elementBox);\n                    }\n                    splittedElement.width = this.documentHelper.textHelper.getWidth(splittedElement.text, format, splittedElement.scriptType);\n                    if (splittedElement.text[splittedElement.text.length - 1] === ' ') {\n                        splittedElement.trimEndWidth = this.documentHelper.textHelper.getWidth(_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimEnd(splittedElement.text), format, splittedElement.scriptType);\n                    }\n                    else {\n                        splittedElement.trimEndWidth = splittedElement.width;\n                    }\n                    textElement.text = text;\n                    textElement.width = this.documentHelper.textHelper.getWidth(textElement.text, textElement.characterFormat, textElement.scriptType);\n                    if (textElement.text[textElement.text.length - 1] === ' ') {\n                        textElement.trimEndWidth = this.documentHelper.textHelper.getWidth(_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimEnd(textElement.text), textElement.characterFormat, textElement.scriptType);\n                    }\n                    else {\n                        textElement.trimEndWidth = textElement.width;\n                    }\n                    if (textElement.width === 0 && lineWidget.children.indexOf(textElement) !== -1) {\n                        lineWidget.children.splice(lineWidget.children.indexOf(textElement), 1);\n                    }\n                    index = 0;\n                    indexOf++;\n                }\n            }\n            textElement.text = text;\n            lineWidget.children.splice(indexOf, 0, textElement);\n        }\n        lineWidget.children[startIndex].padding.left = paddingLeft;\n    };\n    Layout.prototype.isSplitByHyphen = function (element, text) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.previousElement)) {\n            if (element.previousElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox || element.previousElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox) {\n                var test = element.previousElement.text;\n                return (text.substring(0, 1) === '-') && (test.substring(test.length - 1, test.length) !== ' ');\n            }\n        }\n        return (text.substring(0, 1) === '-');\n    };\n    Layout.prototype.splitTextForClientArea = function (lineWidget, element, text, width, characterFormat) {\n        var paragraph = lineWidget.paragraph;\n        var isSplitByWord = true;\n        var index = -1;\n        if (!(text.substring(0, 1) === ' ') && !this.isSplitByHyphen(element, text)) {\n            var textWidth = width;\n            var characterUptoWS = 0;\n            characterUptoWS = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimEnd(text).indexOf(' ') + 1;\n            if (characterUptoWS == 0) {\n                characterUptoWS = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimEnd(text).indexOf('-') + 1;\n            }\n            index = characterUptoWS;\n            //Checks whether text not starts with white space. If starts with white space, no need to check previous text blocks.\n            if (index > 0) {\n                textWidth = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text.slice(0, index), characterFormat, element.scriptType);\n            }\n            if (this.viewer.clientActiveArea.width < textWidth && !this.documentHelper.textHelper.isUnicodeText(text, element.scriptType)\n                && !this.isWordFittedByJustification(element, textWidth)) {\n                //Check and split the previous text elements to next line.\n                isSplitByWord = this.checkPreviousElement(lineWidget, lineWidget.children.indexOf(element));\n                if (isSplitByWord) {\n                    //lineWidget = paragraph.childWidgets[paragraph.childWidgets.indexOf(lineWidget) + 1] as LineWidget;\n                    //isSplitByWord = textWidth <= this.viewer.clientActiveArea.width;\n                    return;\n                }\n            }\n        }\n        else {\n            index = 1;\n        }\n        var isSplitWordByWord = true;\n        if (this.documentHelper.textHelper.isUnicodeText(text, element.scriptType) && element.scriptType === 3 && text.length - 1 === text.indexOf(' ')) {\n            isSplitWordByWord = false;\n        }\n        if (width <= this.viewer.clientActiveArea.width) {\n            //Fits the text in current line.\n            this.addElementToLine(paragraph, element);\n        }\n        else if (isSplitByWord && (index > 0 || (text.indexOf(' ') !== -1 && isSplitWordByWord) || text.indexOf('-') !== -1)) {\n            this.splitByWord(lineWidget, paragraph, element, text, width, characterFormat);\n        }\n        else {\n            this.splitByCharacter(lineWidget, element, text, width, characterFormat);\n        }\n    };\n    Layout.prototype.splitByLineBreakOrTab = function (viewer, span, index, spiltBy) {\n        // Splits tab character to separate SpanAdv\n        var inlineIndex = span.line.children.indexOf(span);\n        var value = span.text;\n        var remainder = value.substring(index);\n        var newSpan = spiltBy === '\\t' ? new _page__WEBPACK_IMPORTED_MODULE_6__.TabElementBox() : new _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox();\n        newSpan.line = span.line;\n        this.updateRevisionForSplittedElement(span, newSpan, true);\n        newSpan.characterFormat.copyFormat(span.characterFormat);\n        newSpan.characterRange = span.characterRange;\n        span.line.children.splice(inlineIndex + 1, 0, newSpan);\n        span.isWidthUpdated = false;\n        if (index > 0 && remainder.length === 1) {\n            newSpan.text = value.substring(index);\n            span.text = value.substring(0, index);\n        }\n        else if (index > 0) {\n            newSpan.text = spiltBy;\n            var newText = new _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox();\n            newText.line = span.line;\n            newText.text = value.substring(index + 1);\n            this.updateRevisionForSplittedElement(span, newText, true);\n            newText.characterFormat.copyFormat(span.characterFormat);\n            newText.characterRange = span.characterRange;\n            span.line.children.splice(inlineIndex + 2, 0, newText);\n            span.text = value.substring(0, index);\n        }\n        else if (remainder !== '') {\n            newSpan.text = value.substring(index + 1);\n            span.text = spiltBy;\n        }\n    };\n    /* eslint-disable  */\n    Layout.prototype.moveToNextLine = function (line, isMultiColumnSplit, index) {\n        var paragraph = line.paragraph;\n        var paraFormat = paragraph.paragraphFormat;\n        var isParagraphStart = line.isFirstLine();\n        var isParagraphEnd = line.isLastLine();\n        var height = 0;\n        var maxDescent = 0;\n        var afterSpacing = 0;\n        var beforeSpacing = 0;\n        var lineSpacing = 0;\n        var firstLineIndent = 0;\n        var borders = paraFormat.borders;\n        this.updateLineWidget(line);\n        height = this.maxTextHeight;\n        maxDescent = height - this.maxTextBaseline;\n        var pageIndex = 0;\n        var skip2013Justification = false;\n        var canRenderParagraphBorders = this.documentHelper.canRenderBorder(paragraph);\n        if (paragraph.bodyWidget && !(paragraph.bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.HeaderFooterWidget)) {\n            pageIndex = this.documentHelper.pages.indexOf(paragraph.bodyWidget.page);\n        }\n        //Updates before spacing at the top of Paragraph first line.\n        if (isParagraphStart) {\n            beforeSpacing = this.getBeforeSpacing(paragraph, pageIndex);\n            firstLineIndent = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paraFormat.firstLineIndent);\n        }\n        //Updates after spacing at the bottom of Paragraph last line.\n        if (isParagraphEnd) {\n            afterSpacing = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(this.getAfterSpacing(paragraph));\n        }\n        if ((paraFormat.bidi || this.isContainsRtl(line))) {\n            this.shiftElementsForRTLLayouting(line, paraFormat.bidi);\n            // this.reArrangeElementsForRtl(line, paraFormat.bidi);\n            this.isRTLLayout = true;\n        }\n        if (isNaN(this.maxTextHeight)) {\n            //Calculate line height and descent based on formatting defined in paragraph.\n            var measurement = this.documentHelper.textHelper.measureText('a', paragraph.characterFormat);\n            height = measurement.Height;\n            maxDescent = height - measurement.BaselineOffset;\n        }\n        else {\n            height = this.maxTextHeight;\n            maxDescent = height - this.maxTextBaseline;\n        }\n        // Gets line spacing.\n        lineSpacing = this.getLineSpacing(paragraph, height);\n        if ((line.skipClipImage || paragraph.paragraphFormat.lineSpacing >= 14 || lineSpacing < 0) && paraFormat.lineSpacingType === 'Exactly'\n            && lineSpacing < maxDescent + this.maxBaseline) {\n            lineSpacing = maxDescent + this.maxBaseline;\n        }\n        var subWidth = 0;\n        var whiteSpaceCount = 0;\n        var getWidthAndSpace;\n        var textAlignment = paraFormat.textAlignment;\n        var totalSpaceCount = 0;\n        var trimmedSpaceWidth = 0;\n        // calculates the sub width, for text alignments - Center, Right, Justify.\n        // if the element is paragraph end and para bidi is true and text alignment is justify\n        // we need to calculate subwidth and add it to the left margin of the element.\n        if (textAlignment !== 'Left' && this.viewer.textWrap && (!(textAlignment === 'Justify' && isParagraphEnd)\n            || (textAlignment === 'Justify' && paraFormat.bidi) || (this.is2013Justification && isParagraphEnd))) {\n            getWidthAndSpace = this.getSubWidth(line, textAlignment === 'Justify', whiteSpaceCount, firstLineIndent, isParagraphEnd);\n            subWidth = getWidthAndSpace[0].subWidth;\n            whiteSpaceCount = getWidthAndSpace[0].spaceCount;\n            totalSpaceCount = getWidthAndSpace[0].totalSpaceCount;\n            trimmedSpaceWidth = getWidthAndSpace[0].trimmedSpaceWidth;\n            skip2013Justification = line.isEndsWithPageBreak || line.isEndsWithColumnBreak || line.isEndsWithLineBreak || line.paragraph.bidi || this.isRTLLayout;\n        }\n        if (!skip2013Justification && (getWidthAndSpace && getWidthAndSpace.length === 1) && this.viewer.clientActiveArea.width > 0 &&\n            !isParagraphEnd && !this.is2013Justification && textAlignment === 'Justify' && this.documentHelper.compatibilityMode === 'Word2013') {\n            var availableWidth = this.viewer.clientActiveArea.width;\n            var totalSpaceWidth = this.getTotalSpaceWidth(line);\n            var averageWidthOfSpace = totalSpaceWidth / totalSpaceCount;\n            var avgAvailableLineWidthForSpace = (availableWidth) / totalSpaceCount;\n            var diffFactor = (avgAvailableLineWidthForSpace / averageWidthOfSpace) * 100;\n            var widthForAdjustment = 0;\n            if (diffFactor <= 33) {\n                widthForAdjustment = totalSpaceWidth / 8;\n            }\n            else {\n                widthForAdjustment = totalSpaceWidth / 4;\n            }\n            this.viewer.clientActiveArea.x -= widthForAdjustment;\n            this.viewer.clientActiveArea.width += widthForAdjustment;\n            this.is2013Justification = true;\n            if (isMultiColumnSplit) {\n                this.splitParagraphForMultiColumn(line, index);\n            }\n            else {\n                this.moveElementFromNextLine(line);\n                this.nextElementToLayout = line.children[line.children.length - 1];\n            }\n            return;\n        }\n        else {\n            if (this.is2013Justification && isParagraphEnd) {\n                if (subWidth > 0) {\n                    subWidth = 0;\n                    whiteSpaceCount = 0;\n                }\n            }\n            this.is2013Justification = false;\n            this.nextElementToLayout = undefined;\n        }\n        var addSubWidth = false;\n        var wrapIndex = 0;\n        var lineSpacingType = paraFormat.lineSpacingType;\n        var isStarted = false;\n        var children = line.renderedElements;\n        var maxElementHeight = 0;\n        var maxElementBottomMargin = 0;\n        var maxElementTopMargin = 0;\n        var elementLeft = this.viewer.clientArea.x;\n        var isHidden = true;\n        for (var i = 0; i < children.length; i++) {\n            var topMargin = 0;\n            var bottomMargin = 0;\n            var leftMargin = 0;\n            var elementBox = children[i];\n            if (isHidden && !elementBox.characterFormat.hidden) {\n                isHidden = false;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(getWidthAndSpace) && isStarted && elementBox.padding.left > 0 &&\n                (getWidthAndSpace.length > wrapIndex + 1)) {\n                var previousWidth = subWidth;\n                if (textAlignment === \"Justify\") {\n                    previousWidth = subWidth * getWidthAndSpace[wrapIndex].spaceCount;\n                }\n                else if (textAlignment === \"Center\") {\n                    previousWidth = subWidth / 2;\n                }\n                elementBox.padding.left = elementBox.padding.left - previousWidth;\n                var subWidthInfo = getWidthAndSpace[++wrapIndex];\n                subWidth = subWidthInfo.subWidth;\n                whiteSpaceCount = subWidthInfo.spaceCount;\n            }\n            if (elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && elementBox.textWrappingStyle !== 'Inline') {\n                continue;\n            }\n            isStarted = true;\n            var alignElements = this.alignLineElements(elementBox, topMargin, bottomMargin, maxDescent, addSubWidth, subWidth, textAlignment, whiteSpaceCount, i === children.length - 1);\n            if (textAlignment === \"Justify\" && elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && elementBox.textWrappingStyle === 'Inline' && subWidth !== 0) {\n                elementBox.x = elementLeft;\n                if (elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) {\n                    for (var i_3 = 0; i_3 < elementBox.textFrame.childWidgets.length; i_3++) {\n                        var widget = elementBox.textFrame.childWidgets[i_3];\n                        var indent = widget.bidi ? widget.rightIndent : widget.leftIndent;\n                        widget.x = elementLeft + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(indent + elementBox.textFrame.marginLeft);\n                    }\n                }\n            }\n            elementLeft += elementBox.width;\n            line.maxBaseLine = this.maxBaseline;\n            topMargin = alignElements.topMargin;\n            bottomMargin = alignElements.bottomMargin;\n            addSubWidth = alignElements.addSubWidth;\n            whiteSpaceCount = alignElements.whiteSpaceCount;\n            //Updates line spacing, paragraph after/ before spacing and aligns the text to base line offset.\n            if (lineSpacingType === 'Multiple') {\n                if (lineSpacing > height) {\n                    bottomMargin += lineSpacing - height;\n                }\n                else {\n                    topMargin += lineSpacing - height;\n                }\n            }\n            else if (lineSpacingType === 'Exactly') {\n                topMargin += lineSpacing - (topMargin + elementBox.height + bottomMargin);\n            }\n            else if (lineSpacing > topMargin + elementBox.height + bottomMargin) {\n                topMargin += lineSpacing - (topMargin + elementBox.height + bottomMargin);\n            }\n            if (pageIndex > 0 && paragraph === paragraph.bodyWidget.childWidgets[0] && this.documentHelper.pages[pageIndex].sectionIndex === this.documentHelper.pages[pageIndex - 1].sectionIndex) {\n                topMargin += 0;\n            }\n            else {\n                topMargin += beforeSpacing;\n            }\n            if (borders.top.lineStyle != 'None') {\n                if (line.isFirstLine() && !canRenderParagraphBorders.skipTopBorder) {\n                    topMargin += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(borders.top.lineWidth + borders.top.space);\n                }\n            }\n            if (borders.bottom.lineStyle != 'None') {\n                if (line.isLastLine() && !canRenderParagraphBorders.skipBottomBorder) {\n                    bottomMargin += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(borders.bottom.lineWidth + borders.bottom.space);\n                }\n            }\n            bottomMargin += afterSpacing;\n            var previousElement = i > 0 ? children[i - 1] : undefined;\n            if (i === 0 || (!(elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && elementBox.textWrappingStyle !== 'Inline') &&\n                previousElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && previousElement.textWrappingStyle !== 'Inline' && previousElement.indexInOwner < elementBox.indexInOwner)\n                || elementBox.padding.left > 0) {\n                line.height = topMargin + elementBox.height + bottomMargin;\n                if (textAlignment === 'Right' || (textAlignment === 'Justify' && paraFormat.bidi && (isParagraphEnd || trimmedSpaceWidth < 0))) {\n                    //Aligns the text as right justified and consider subwidth for bidirectional paragrph with justify.\n                    if (trimmedSpaceWidth < 0) {\n                        leftMargin = trimmedSpaceWidth;\n                    }\n                    else {\n                        leftMargin = subWidth;\n                    }\n                }\n                else if (textAlignment === 'Center') {\n                    //Aligns the text as center justified.\n                    if (subWidth < 0) {\n                        leftMargin = subWidth;\n                    }\n                    else {\n                        leftMargin = subWidth / 2;\n                    }\n                }\n            }\n            elementBox.margin = new _page__WEBPACK_IMPORTED_MODULE_6__.Margin(leftMargin, topMargin, 0, bottomMargin);\n            elementBox.line = line;\n            if (maxElementHeight < elementBox.height) {\n                maxElementHeight = elementBox.height;\n                maxElementBottomMargin = elementBox.margin.bottom;\n                maxElementTopMargin = elementBox.margin.top;\n            }\n            if (elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && elementBox.textWrappingStyle === \"Inline\") {\n                if (i !== 0 || elementBox.margin.left > 0) {\n                    var elementLeftMargin = children[0].margin.left;\n                    elementBox.x += elementLeftMargin;\n                    for (var i_4 = 0; i_4 < elementBox.textFrame.childWidgets.length; i_4++) {\n                        var widget = elementBox.textFrame.childWidgets[i_4];\n                        if (widget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                            widget.updateChildWidgetLeft(widget.x + elementLeftMargin);\n                        }\n                        else {\n                            widget.x += elementLeftMargin;\n                        }\n                    }\n                }\n                this.updateShapeYPosition(elementBox);\n            }\n        }\n        if (isHidden) {\n            line.height = 0;\n        }\n        line.margin = new _page__WEBPACK_IMPORTED_MODULE_6__.Margin(0, maxElementTopMargin, 0, maxElementBottomMargin);\n        this.adjustPositionBasedOnTopAndBottom(line);\n        this.checkInbetweenShapeOverlap(line);\n        if (!isMultiColumnSplit && line.isLastLine() && line.indexInOwner === 0 && line.paragraph.paragraphFormat.widowControl) {\n            var previousSplitWidget = line.paragraph.previousSplitWidget;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(previousSplitWidget) && !previousSplitWidget.isEndsWithPageBreak && !previousSplitWidget.isEndsWithColumnBreak && previousSplitWidget.indexInOwner !== 0) {\n                var startLineIndex = previousSplitWidget.childWidgets.length - 1;\n                if (previousSplitWidget.childWidgets.length === 2) {\n                    startLineIndex = 0;\n                }\n                this.splitParagraph(previousSplitWidget, startLineIndex, line.paragraph);\n                this.updateClientAreaForNextBlock(line, line.paragraph);\n            }\n        }\n        else if (isMultiColumnSplit) {\n            this.splitParagraphForMultiColumn(line, index);\n        }\n        if (!isMultiColumnSplit) {\n            this.viewer.cutFromTop(this.viewer.clientActiveArea.y + line.height);\n        }\n        this.wrapPosition = [];\n    };\n    Layout.prototype.updateShapeYPosition = function (elementBox) {\n        if (elementBox.margin.top > 0) {\n            elementBox.y += elementBox.margin.top;\n            for (var j = 0; j < elementBox.textFrame.childWidgets.length; j++) {\n                elementBox.textFrame.childWidgets[j].y += elementBox.margin.top;\n            }\n        }\n    };\n    Layout.prototype.getBodyWidget = function (section, isFirstBody) {\n        if (isFirstBody) {\n            while (section && section.columnIndex !== 0) {\n                section = section.previousRenderedWidget;\n            }\n        }\n        else {\n            while (section) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.nextRenderedWidget) || section.columnIndex === section.sectionFormat.numberOfColumns - 1 || section.index !== section.nextRenderedWidget.index) {\n                    break;\n                }\n                section = section.nextRenderedWidget;\n            }\n        }\n        return section;\n    };\n    Layout.prototype.splitParagraphForMultiColumn = function (line, index) {\n        this.splitParagraph(line.paragraph, index, undefined);\n        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(line.paragraph.previousRenderedWidget) && index == 0) ||\n            (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(line.paragraph.previousRenderedWidget) && line.paragraph.previousRenderedWidget.bodyWidget.sectionIndex !== line.paragraph.bodyWidget.sectionIndex)) {\n            this.moveBlocksToNextPage(line.paragraph);\n        }\n        else {\n            this.moveBlocksToNextPage(line.paragraph.previousRenderedWidget);\n        }\n        var clientHeight = this.viewer.clientActiveArea.height;\n        this.viewer.updateClientArea(line.paragraph.bodyWidget, line.paragraph.bodyWidget.page);\n        this.viewer.clientActiveArea.y = line.paragraph.bodyWidget.y;\n        this.viewer.clientActiveArea.height = clientHeight;\n        if (line.paragraph.bodyWidget.sectionFormat.equalWidth || line.paragraph.bodyWidget.sectionFormat.numberOfColumns - 1 === line.paragraph.bodyWidget.columnIndex) {\n            var parawidget = line.paragraph;\n            this.documentHelper.blockToShift = parawidget;\n            this.shiftLayoutedItems(false, true);\n        }\n    };\n    //Checks Inbetween Overlap & Updates Line marginTop\n    Layout.prototype.checkInbetweenShapeOverlap = function (line, floatingElements) {\n        var _this = this;\n        if (!(line.paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame) && line.paragraph.bodyWidget) {\n            var overlapShape_1;\n            var lineY_1 = this.getLineY(line);\n            var isInsideTable_1 = line.paragraph.isInsideTable;\n            var emptyParaPosition_1 = line.paragraph.y;\n            var isFloatingElementPresent_1 = true;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(floatingElements)) {\n                isFloatingElementPresent_1 = false;\n                floatingElements = line.paragraph.bodyWidget.floatingElements;\n            }\n            /* eslint:disable */\n            floatingElements.sort(function (a, b) { return a.y - b.y; });\n            floatingElements.forEach(function (shape) {\n                if (isInsideTable_1 && shape.line && !shape.line.paragraph.isInsideTable || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shape.line)) {\n                    return;\n                }\n                var lineRect;\n                if (shape.textWrappingStyle === 'TopAndBottom' && shape instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ImageElementBox && !line.paragraph.isEmpty()) {\n                    lineRect = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(line.paragraph.x, _this.viewer.clientActiveArea.y, line.paragraph.width, line.children[0].height);\n                }\n                else {\n                    lineRect = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(line.paragraph.x, _this.viewer.clientActiveArea.y, line.paragraph.width, line.height);\n                }\n                var shapeRect = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(shape.x, shape.y - shape.distanceTop, shape.width, shape.height);\n                if (shape.line && _this.isRelayout && !_this.isRelayoutOverlap && _this.viewer.documentHelper.selection.isExistAfter(shape.line.paragraph, line.paragraph)\n                    || _this.isRelayout && _this.isRelayoutOverlap && _this.viewer.documentHelper.selection.isExistAfter(shape.line.paragraph, _this.endOverlapWidget)) {\n                    return;\n                }\n                var considerShape = (shape.textWrappingStyle === 'TopAndBottom');\n                var updatedFloatPosition = ((shape.y + shape.height + shape.distanceBottom) - lineY_1);\n                if (overlapShape_1 && considerShape &&\n                    overlapShape_1.y + overlapShape_1.height + overlapShape_1.distanceBottom + line.height > shape.y - shape.distanceTop &&\n                    overlapShape_1.y - overlapShape_1.distanceTop < shape.y - shape.distanceTop &&\n                    shape.y + shape.height + shape.distanceBottom > overlapShape_1.y + overlapShape_1.height + overlapShape_1.distanceBottom) {\n                    overlapShape_1 = shape;\n                    if (line.paragraph.isEmpty() && isFloatingElementPresent_1) {\n                        line.paragraph.y = emptyParaPosition_1;\n                        line.paragraph.y += updatedFloatPosition;\n                    }\n                    else {\n                        line.marginTop = updatedFloatPosition;\n                    }\n                }\n                else if (considerShape && !overlapShape_1 && lineRect.isIntersecting(shapeRect)) {\n                    overlapShape_1 = shape;\n                    if (line.paragraph.isEmpty() && isFloatingElementPresent_1) {\n                        line.paragraph.y += updatedFloatPosition;\n                    }\n                    else {\n                        line.marginTop = updatedFloatPosition;\n                    }\n                }\n            });\n            if (overlapShape_1) {\n                this.viewer.cutFromTop(overlapShape_1.y + overlapShape_1.height + overlapShape_1.distanceBottom);\n            }\n            else if (this.isRelayoutOverlap) {\n                line.marginTop = 0;\n            }\n        }\n    };\n    Layout.prototype.getLineY = function (line) {\n        var para = line.paragraph;\n        var lineY = para.y;\n        if (!para.isEmpty()) {\n            var lineWidget = para.firstChild;\n            while (lineWidget !== line) {\n                lineY = lineY + lineWidget.height + lineWidget.marginTop;\n                lineWidget = lineWidget.nextLine;\n            }\n        }\n        return lineY;\n    };\n    Layout.prototype.updateLineWidget = function (line) {\n        var spaceHeight = 0;\n        var spaceBaseline = 0;\n        var isContainsImage = false;\n        var isFieldCode = false;\n        for (var i = 0; i < line.children.length; i++) {\n            var element = line.children[i];\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox && element.fieldType === 2) {\n                isFieldCode = false;\n            }\n            if (isFieldCode || element.characterFormat.hidden) {\n                continue;\n            }\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox && element.fieldType === 0) {\n                isFieldCode = true;\n            }\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && element.textWrappingStyle !== 'Inline') {\n                continue;\n            }\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && element.text.replace(/\\s+/g, '').length === 0 && element.text !== String.fromCharCode(160)) {\n                if (spaceHeight < element.height) {\n                    spaceHeight = element.height;\n                    spaceBaseline = element.baselineOffset;\n                }\n                continue;\n            }\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox) {\n                var elementHeight = element.height;\n                var baselineOffset = element.baselineOffset;\n                var isCellContentControl = false;\n                //We have increased the checkbox form field font size using a constant factor `CHECK_BOX_FACTOR`\n                //To match the MS Word check box rendering size.\n                //Due to it line height also get increased. So, handled adjusting height while updating line height.\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && element.isCheckBoxElement && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.previousNode) && element.previousNode instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ContentControl && (element.previousNode.contentControlWidgetType === 'Cell' || element.previousNode.contentControlWidgetType === 'Inline')) {\n                    isCellContentControl = true;\n                }\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && element.isCheckBoxElement && !isCellContentControl) {\n                    elementHeight = elementHeight / CHECK_BOX_FACTOR;\n                    baselineOffset = baselineOffset / CHECK_BOX_FACTOR;\n                }\n                if (this.maxTextHeight < elementHeight) {\n                    this.maxTextHeight = elementHeight;\n                    this.maxTextBaseline = baselineOffset;\n                }\n                if (this.maxBaseline < this.maxTextBaseline) {\n                    this.maxBaseline = this.maxTextBaseline;\n                }\n            }\n            else if (this.maxBaseline < element.height) {\n                this.maxBaseline = element.height;\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ImageElementBox) {\n                    isContainsImage = true;\n                }\n            }\n        }\n        if (this.maxTextHeight === 0 && spaceHeight !== 0) {\n            if (isContainsImage) {\n                this.maxTextHeight = 0;\n                this.maxTextBaseline = 0;\n            }\n            else {\n                if (line.isLastLine() && this.documentHelper.selection) {\n                    var paragraphMarkSize = this.documentHelper.selection.getParagraphMarkSize(line.paragraph, 0, 0);\n                    this.maxTextHeight = paragraphMarkSize.height;\n                    this.maxTextBaseline = spaceBaseline;\n                }\n                else {\n                    this.maxTextHeight = spaceHeight;\n                    this.maxTextBaseline = spaceBaseline;\n                }\n                if (this.maxBaseline < this.maxTextBaseline) {\n                    this.maxBaseline = this.maxTextBaseline;\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.reLayoutEndnote = function () {\n        var lastPage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastPage) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastPage.endnoteWidget)) {\n            var clientActiveArea = this.viewer.clientActiveArea.clone();\n            var bodyWidget = this.getBodyWidget(lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1], true);\n            this.viewer.updateClientArea(bodyWidget, bodyWidget.page);\n            var height = this.getNextWidgetHeight(bodyWidget);\n            if (height > 0) {\n                this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n                this.viewer.clientActiveArea.y = height;\n            }\n            this.layoutfootNote(lastPage.endnoteWidget);\n            this.viewer.clientActiveArea = clientActiveArea;\n        }\n    };\n    Layout.prototype.moveEndnoteToNextPage = function (endnote, bodyWidget, isMoveEntireEndnote, currentBodyIndex) {\n        if (isMoveEntireEndnote) {\n            var newBodyWidget = this.createSplitBody(bodyWidget);\n            var nextPage = this.viewer.createNewPage(newBodyWidget);\n            this.viewer.updateClientArea(newBodyWidget, newBodyWidget.page);\n            newBodyWidget.y = bodyWidget.y = this.viewer.clientActiveArea.y;\n            for (var i = 0; i < endnote.bodyWidgets.length; i++) {\n                endnote.bodyWidgets[i].page = nextPage;\n                endnote.bodyWidgets[i].containerWidget = endnote;\n            }\n            endnote.page.endnoteWidget = undefined;\n            nextPage.endnoteWidget = endnote;\n            endnote.page = nextPage;\n        }\n        else {\n            var page = bodyWidget.page;\n            // if the page doesn't have a endNoteWidget, we create endNote, move the endnote to next page.\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(page.endnoteWidget)) {\n                var newEndnote = new _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget();\n                newEndnote.footNoteType = 'Endnote';\n                newEndnote.page = page;\n                newEndnote.bodyWidgets.push(bodyWidget);\n                bodyWidget.containerWidget = newEndnote;\n                for (var i = currentBodyIndex + 1; i < endnote.bodyWidgets.length; i++) {\n                    var currentBodyWidget = endnote.bodyWidgets[i];\n                    endnote.bodyWidgets.splice(i, 1);\n                    newEndnote.bodyWidgets.push(currentBodyWidget);\n                    currentBodyWidget.containerWidget = newEndnote;\n                    currentBodyWidget.page = page;\n                    i--;\n                }\n                page.endnoteWidget = newEndnote;\n            }\n            // if the page has a endNoteWidget, we move the endnote to next page.\n            else {\n                if (page.endnoteWidget.bodyWidgets.indexOf(bodyWidget) === -1) {\n                    page.endnoteWidget.bodyWidgets.splice(0, 0, bodyWidget);\n                    bodyWidget.containerWidget = page.endnoteWidget;\n                }\n                for (var i = endnote.bodyWidgets.length - 1; i > currentBodyIndex; i--) {\n                    var currentBodyWidget = endnote.bodyWidgets[i];\n                    page.endnoteWidget.bodyWidgets.unshift(currentBodyWidget);\n                    currentBodyWidget.containerWidget = page.endnoteWidget;\n                    currentBodyWidget.page = page;\n                    endnote.bodyWidgets.splice(i, 1);\n                }\n            }\n        }\n    };\n    Layout.prototype.moveToNextPage = function (viewer, line, isPageBreak, isList, skipFloat) {\n        if (this.isFootNoteLayoutStart) {\n            return;\n        }\n        var paragraphWidget = line.paragraph;\n        var startBlock;\n        var startIndex = 0;\n        var keepLinesTogether = false;\n        var keepWithNext = false;\n        var isEndnote = false;\n        var firstLineIndent = 0;\n        if (paragraphWidget && !(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.containerWidget) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.containerWidget.containerWidget) && paragraphWidget.containerWidget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget && paragraphWidget.containerWidget.containerWidget.footNoteType === 'Footnote')) {\n            var index = 0;\n            if (paragraphWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) {\n                return;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.containerWidget) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.containerWidget.containerWidget) && paragraphWidget.containerWidget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget && paragraphWidget.containerWidget.containerWidget.footNoteType === 'Endnote') {\n                isEndnote = true;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(line)) {\n                index = paragraphWidget.childWidgets.indexOf(line);\n                if (index !== 0) {\n                    if (paragraphWidget.paragraphFormat.keepLinesTogether && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.previousWidget) && !line.previousLine.isEndsWithColumnBreak) {\n                        index = 0;\n                        keepLinesTogether = true;\n                    }\n                    else if (index == 1 && !line.previousLine.isEndsWithPageBreak && !line.previousLine.isEndsWithColumnBreak && paragraphWidget.paragraphFormat.widowControl &&\n                        !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.previousWidget)) {\n                        index = 0;\n                        keepLinesTogether = true;\n                    }\n                }\n                if (index > 0 || isPageBreak) {\n                    paragraphWidget.height = viewer.clientActiveArea.y - paragraphWidget.y;\n                }\n                if (index === 0 && !paragraphWidget.isEndsWithPageBreak && !paragraphWidget.isEndsWithColumnBreak) {\n                    var blockInfo = this.alignBlockElement(paragraphWidget);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(blockInfo.node)) {\n                        startBlock = blockInfo.node instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget ? this.splitRow(blockInfo.node) : blockInfo.node;\n                        startIndex = startBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget ? 0 : parseInt(blockInfo.position.index, 10);\n                        paragraphWidget = startBlock;\n                        index = startIndex;\n                        keepLinesTogether = false;\n                        keepWithNext = true;\n                        if (paragraphWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                            if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule && !paragraphWidget.paragraphFormat.keepWithNext && !isList) {\n                                this.viewer.owner.editorModule.updateWholeListItems(paragraphWidget);\n                            }\n                        }\n                        else {\n                            if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule && !isList) {\n                                this.viewer.owner.editorModule.updateWholeListItems(paragraphWidget);\n                            }\n                        }\n                    }\n                }\n            }\n            /* eslint-disable-next-line max-len */\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.bodyWidget) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.bodyWidget.containerWidget) && !(paragraphWidget.bodyWidget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) && paragraphWidget.bodyWidget.page.footnoteWidget !== undefined) {\n                // this.viewer.updateClientAreaForBlock(paragraphWidget.bodyWidget.page.footnoteWidget.block, true);\n                this.layoutfootNote(paragraphWidget.bodyWidget.page.footnoteWidget);\n                // this.viewer.updateClientAreaForBlock(paragraphWidget.bodyWidget.page.footnoteWidget.block, false);\n            }\n            if (this.isMultiColumnSplit) {\n                var nextColumn = this.viewer.columnLayoutArea.getNextColumnByBodyWidget(paragraphWidget.bodyWidget);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextColumn)) {\n                    return;\n                }\n            }\n            var prevPage = paragraphWidget.bodyWidget.page;\n            if (isPageBreak && index === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.bodyWidget.lastChild) && paragraphWidget === paragraphWidget.bodyWidget.lastChild && this.endOverlapWidget) {\n                this.isRelayoutOverlap = false;\n            }\n            if (isEndnote && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevPage.nextPage) && paragraphWidget.bodyWidget.index === 0 && paragraphWidget.index === 0 && index === 0) {\n                var endnote = paragraphWidget.containerWidget.containerWidget;\n                this.moveEndnoteToNextPage(endnote, paragraphWidget.bodyWidget, true);\n                return;\n            }\n            var nextBody = this.moveBlocksToNextPage(paragraphWidget, index === 0, index, false, isEndnote);\n            if (isEndnote) {\n                var endnote = paragraphWidget.containerWidget.containerWidget;\n                var currentBodyIndex = endnote.bodyWidgets.indexOf(paragraphWidget.bodyWidget);\n                nextBody.footNoteReference = paragraphWidget.bodyWidget.footNoteReference;\n                this.moveEndnoteToNextPage(endnote, nextBody, false, currentBodyIndex);\n            }\n            if (prevPage !== nextBody.page) {\n                this.viewer.updateClientArea(nextBody, nextBody.page);\n            }\n            this.viewer.updateClientAreaForBlock(paragraphWidget, true);\n            if (index > 0) {\n                if (line.isLastLine() && isPageBreak) {\n                    return;\n                }\n                var nextParagraph = void 0;\n                if (nextBody.firstChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && nextBody.firstChild.equals(paragraphWidget)) {\n                    nextParagraph = nextBody.firstChild;\n                }\n                else {\n                    nextParagraph = new _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget();\n                }\n                nextParagraph = this.moveChildsToParagraph(paragraphWidget, index, nextParagraph);\n                // this.updateLinearIndex(paragraphWidget);\n                // this.updateLinearIndex(nextParagraph);\n                nextParagraph.containerWidget = nextBody;\n                for (var m = 0; m < nextParagraph.floatingElements.length; m++) {\n                    var element = nextParagraph.floatingElements[m];\n                    if (element.line.paragraph.bodyWidget !== paragraphWidget.bodyWidget && element.textWrappingStyle !== 'Inline') {\n                        paragraphWidget.bodyWidget.floatingElements.splice(paragraphWidget.bodyWidget.floatingElements.indexOf(element), 1);\n                    }\n                }\n                var footWidget = this.getFootNoteWidgetsOf(nextParagraph);\n                this.moveFootNotesToPage(footWidget, paragraphWidget.bodyWidget, nextBody);\n                paragraphWidget = nextParagraph;\n                this.viewer.clientActiveArea.height -= this.getFootNoteHeight(footWidget);\n            }\n            else if (!isPageBreak) {\n                paragraphWidget.containerWidget.removeChild(paragraphWidget.indexInOwner);\n                if (paragraphWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && paragraphWidget.floatingElements.length > 0) {\n                    this.addRemoveFloatElementsFromBody(paragraphWidget, paragraphWidget.containerWidget, false);\n                }\n                if (isEndnote && paragraphWidget.containerWidget.childWidgets.length === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.containerWidget.containerWidget) && paragraphWidget.containerWidget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) {\n                    var endnote = paragraphWidget.containerWidget.containerWidget;\n                    endnote.bodyWidgets.splice(endnote.bodyWidgets.indexOf(paragraphWidget.containerWidget), 1);\n                    nextBody.footNoteReference.bodyWidget = nextBody;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(endnote.page.endnoteWidget) && endnote.page.endnoteWidget.bodyWidgets.length === 0) {\n                        endnote.page.endnoteWidget = undefined;\n                    }\n                }\n            }\n            if (!isPageBreak) {\n                if (nextBody.childWidgets.indexOf(paragraphWidget) === -1) {\n                    nextBody.childWidgets.splice(0, 0, paragraphWidget);\n                    if (paragraphWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && paragraphWidget.floatingElements.length > 0) {\n                        this.addRemoveFloatElementsFromBody(paragraphWidget, nextBody, true);\n                    }\n                }\n                paragraphWidget.containerWidget = nextBody;\n                this.viewer.updateClientAreaLocation(paragraphWidget, this.viewer.clientActiveArea);\n                if (keepLinesTogether || keepWithNext) {\n                    if (paragraphWidget.bodyWidget.page.footnoteWidget) {\n                        this.layoutfootNote(paragraphWidget.bodyWidget.page.footnoteWidget);\n                    }\n                    if (line.paragraph !== paragraphWidget || (paragraphWidget.paragraphFormat.widowControl && this.isImagePresent(paragraphWidget))) {\n                        if (paragraphWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                            this.clearTableWidget(paragraphWidget, true, true, false);\n                        }\n                        this.layoutBlock(paragraphWidget, 0, true);\n                        viewer.updateClientAreaForBlock(paragraphWidget, false);\n                    }\n                    var lastBlock = line.paragraph;\n                    if (keepWithNext) {\n                        var nextBlock = paragraphWidget.nextWidget;\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextBlock)) {\n                            do {\n                                viewer.updateClientAreaForBlock(nextBlock, true);\n                                if (nextBlock !== lastBlock) {\n                                    if (nextBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                                        this.clearTableWidget(nextBlock, true, true, false);\n                                    }\n                                    this.layoutBlock(nextBlock, 0, true);\n                                    viewer.updateClientAreaForBlock(nextBlock, false);\n                                }\n                                else {\n                                    this.viewer.updateClientAreaLocation(nextBlock, this.viewer.clientActiveArea);\n                                    break;\n                                }\n                                nextBlock = nextBlock.nextWidget;\n                            } while (nextBlock);\n                        }\n                    }\n                    this.updateClientAreaForNextBlock(line, lastBlock);\n                }\n                if (line.isFirstLine() && line.indexInOwner === 0 && !(line.children[0] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox) && !skipFloat) {\n                    firstLineIndent = -_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(line.paragraph.paragraphFormat.firstLineIndent);\n                    this.viewer.updateClientWidth(firstLineIndent);\n                }\n            }\n        }\n        if (!isPageBreak) {\n            this.updateShapeBaseLocation(paragraphWidget);\n        }\n        if (skipFloat) {\n            this.viewer.updateClientWidth(firstLineIndent);\n        }\n        if (this.isRelayoutOverlap && this.endOverlapWidget && (!this.skipRelayoutOverlap || (this.endOverlapWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && this.endOverlapWidget.wrapTextAround))) {\n            var block_1 = this.endOverlapWidget.previousRenderedWidget;\n            var para = line.paragraph;\n            this.startOverlapWidget = para;\n            line = this.endOverlapWidget.childWidgets[0];\n            para = line.paragraph;\n            while (para) {\n                para.floatingElements.forEach(function (shape) {\n                    if (block_1.bodyWidget.floatingElements.indexOf(shape) !== -1 && shape.textWrappingStyle !== 'Inline') {\n                        block_1.bodyWidget.floatingElements.splice(block_1.bodyWidget.floatingElements.indexOf(shape), 1);\n                        line.paragraph.bodyWidget.floatingElements.push(shape);\n                    }\n                });\n                para = para !== this.endOverlapWidget ? para.nextWidget : undefined;\n            }\n            this.layoutStartEndBlocks(this.startOverlapWidget, this.endOverlapWidget);\n            this.startOverlapWidget = undefined;\n            this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - this.endOverlapWidget.y;\n            this.viewer.clientActiveArea.y = this.endOverlapWidget.y;\n        }\n    };\n    Layout.prototype.isImagePresent = function (paragraph) {\n        for (var i = 0; i < paragraph.childWidgets.length; i++) {\n            var line = paragraph.childWidgets[i];\n            for (var j = 0; j < line.children.length; j++) {\n                if (line.children[j] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ImageElementBox) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Layout.prototype.updateShapeBaseLocation = function (paragraphWidget) {\n        if (paragraphWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget &&\n            paragraphWidget.floatingElements.length > 0) {\n            for (var m = 0; m < paragraphWidget.floatingElements.length; m++) {\n                var shape = paragraphWidget.floatingElements[m];\n                var position = this.getFloatingItemPoints(shape);\n                shape.y = position.y;\n                shape.x = position.x;\n                if (shape instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox)\n                    this.updateChildLocationForCellOrShape(shape.y, shape);\n            }\n        }\n    };\n    Layout.prototype.moveChildsToParagraph = function (srcParagraph, childStartIndex, nextParagraph) {\n        nextParagraph = this.addParagraphWidget(this.viewer.clientActiveArea, nextParagraph);\n        var insertIndex = 0;\n        for (var i = childStartIndex; i < srcParagraph.childWidgets.length; i++) {\n            var lineWidget = srcParagraph.childWidgets[i];\n            lineWidget.paragraph = nextParagraph;\n            nextParagraph.childWidgets.splice(insertIndex, 0, lineWidget);\n            lineWidget.paragraph = nextParagraph;\n            insertIndex++;\n        }\n        nextParagraph.paragraphFormat = srcParagraph.paragraphFormat;\n        nextParagraph.characterFormat = srcParagraph.characterFormat;\n        nextParagraph.index = srcParagraph.index;\n        srcParagraph.childWidgets.splice(childStartIndex);\n        for (var i = 0; i < srcParagraph.floatingElements.length; i++) {\n            var element = srcParagraph.floatingElements[i];\n            if (element.line.paragraph !== srcParagraph) {\n                nextParagraph.floatingElements.push(element);\n                srcParagraph.floatingElements.splice(srcParagraph.floatingElements.indexOf(element), 1);\n                i--;\n            }\n        }\n        return nextParagraph;\n    };\n    /**\n     * @param {ParagraphWidget} paragarph - the paragraph\n     * @param {BodyWidget} body - the bodyWidget\n     * @param {boolean} add - to specify add or remove floating elements from body widget.\n     */\n    Layout.prototype.addRemoveFloatElementsFromBody = function (paragarph, body, add) {\n        if (paragarph.floatingElements.length > 0) {\n            for (var x = 0; x < paragarph.floatingElements.length; x++) {\n                if (add) {\n                    if (body.floatingElements.indexOf(paragarph.floatingElements[x]) === -1 && paragarph.floatingElements[x].textWrappingStyle !== 'Inline') {\n                        body.floatingElements.push(paragarph.floatingElements[x]);\n                    }\n                }\n                else {\n                    if (body.floatingElements.indexOf(paragarph.floatingElements[x]) !== -1) {\n                        body.floatingElements.splice(body.floatingElements.indexOf(paragarph.floatingElements[x]), 1);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Align block based on keep with next and keep lines together property.\n     */\n    Layout.prototype.alignBlockElement = function (block) {\n        if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && (block.isEndsWithPageBreak || block.isEndsWithColumnBreak)) {\n            return { node: undefined, position: { index: '' } };\n        }\n        var startBlock;\n        var startIndex = 0;\n        // Check previous block has keep with next property.\n        var previousBlock = this.getPreviousBlock(block);\n        while (previousBlock) {\n            if (previousBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                if (!previousBlock.paragraphFormat.keepWithNext || previousBlock.isEndsWithPageBreak || previousBlock.isEndsWithColumnBreak) {\n                    break;\n                }\n                startBlock = previousBlock;\n                if (previousBlock.paragraphFormat.keepLinesTogether) {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.getPreviousBlock(previousBlock))) {\n                        startBlock = undefined;\n                    }\n                    else {\n                        startIndex = 0;\n                    }\n                }\n                else {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.getPreviousBlock(previousBlock))\n                        && previousBlock.childWidgets.length === 1) {\n                        startBlock = undefined;\n                    }\n                    else {\n                        if (!previousBlock.paragraphFormat.widowControl) {\n                            startIndex = previousBlock.lastChild.indexInOwner;\n                            if (startIndex !== 0) {\n                                break;\n                            }\n                        }\n                        else {\n                            startIndex = previousBlock.lastChild.indexInOwner - 1;\n                            if (startIndex === 1 || startIndex < 0) {\n                                // Move entire block to next page based on widow control.\n                                startIndex = 0;\n                            }\n                            if (startIndex !== 0) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            else if (previousBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget) {\n                var childWidget = previousBlock.childWidgets[0];\n                if (childWidget.childWidgets.length > 0) {\n                    var firstBlock = this.documentHelper.getFirstParagraphInCell(childWidget);\n                    if (!firstBlock.paragraphFormat.keepWithNext) {\n                        break;\n                    }\n                    if (firstBlock.paragraphFormat.keepWithNext) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.getPreviousBlock(previousBlock))) {\n                            startBlock = undefined;\n                        }\n                        else {\n                            startBlock = previousBlock;\n                            startIndex = startBlock.indexInOwner;\n                        }\n                    }\n                }\n                else {\n                    break;\n                }\n                // TODO: Table row splitting case.\n            }\n            previousBlock = this.getPreviousBlock(previousBlock);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(startBlock) && startBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && startBlock.indexInOwner === 0 && startBlock.paragraphFormat.keepWithNext && startBlock.paragraphFormat.widowControl) {\n            startBlock = block;\n        }\n        return { node: startBlock, position: { index: startIndex.toString() } };\n    };\n    Layout.prototype.getPreviousBlock = function (block) {\n        var previousBlock;\n        if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n            previousBlock = block.previousWidget;\n            if (!this.isInitialLoad && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(previousBlock) && block.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(block.containerWidget.previousRenderedWidget) && block.containerWidget.sectionIndex === block.containerWidget.previousRenderedWidget.sectionIndex) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(block.previousRenderedWidget) && block.previousRenderedWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                    previousBlock = block.previousRenderedWidget;\n                }\n            }\n        }\n        else if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget) {\n            previousBlock = block.previousWidget;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(previousBlock)) {\n                previousBlock = block.ownerTable.previousWidget;\n            }\n        }\n        if (previousBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n            previousBlock = previousBlock.lastChild;\n        }\n        return previousBlock;\n    };\n    Layout.prototype.splitRow = function (startRow) {\n        var table = startRow.ownerTable;\n        if (startRow.indexInOwner === 0) {\n            return table;\n        }\n        var newTable = this.createTableWidget(table);\n        for (var i = startRow.indexInOwner; i < table.childWidgets.length;) {\n            var rowWidget = table.childWidgets.splice(i, 1)[0];\n            newTable.childWidgets.push(rowWidget);\n            rowWidget.containerWidget = newTable;\n            table.height -= rowWidget.height;\n            newTable.height += rowWidget.height;\n        }\n        table.containerWidget.childWidgets.splice(table.indexInOwner + 1, 0, newTable);\n        newTable.containerWidget = table.containerWidget;\n        return newTable;\n    };\n    Layout.prototype.splitParagraph = function (paragarph, index, nextParagraph) {\n        if (index === 0 && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextParagraph)) {\n            return paragarph;\n        }\n        var isMoveCurrentBlock = false;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextParagraph)) {\n            nextParagraph = new _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget();\n            nextParagraph.containerWidget = paragarph.containerWidget;\n            paragarph.containerWidget.childWidgets.splice(paragarph.indexInOwner + 1, 0, nextParagraph);\n            nextParagraph.paragraphFormat = paragarph.paragraphFormat;\n            nextParagraph.characterFormat = paragarph.characterFormat;\n            nextParagraph.index = paragarph.index;\n        }\n        else if (index === 0) {\n            isMoveCurrentBlock = true;\n            var temp = paragarph;\n            paragarph = nextParagraph;\n            nextParagraph = temp;\n        }\n        var insertIndex = 0;\n        for (var i = index; i < paragarph.childWidgets.length; i++) {\n            var lineWidget = paragarph.childWidgets[i];\n            lineWidget.paragraph = nextParagraph;\n            if (isMoveCurrentBlock) {\n                nextParagraph.childWidgets.push(lineWidget);\n            }\n            else {\n                nextParagraph.childWidgets.splice(insertIndex, 0, lineWidget);\n            }\n            nextParagraph.height += lineWidget.height;\n            paragarph.height -= lineWidget.height;\n            lineWidget.paragraph = nextParagraph;\n            insertIndex++;\n        }\n        nextParagraph.width = paragarph.width;\n        if (isMoveCurrentBlock) {\n            nextParagraph.containerWidget.childWidgets.splice(nextParagraph.indexInOwner, 1);\n            nextParagraph.y = paragarph.y;\n            nextParagraph.x = paragarph.x;\n            nextParagraph.containerWidget = paragarph.containerWidget;\n            paragarph.containerWidget.childWidgets.unshift(nextParagraph);\n        }\n        else {\n            paragarph.childWidgets.splice(index);\n        }\n        if (paragarph.childWidgets.length === 0 || isMoveCurrentBlock) {\n            paragarph.containerWidget.childWidgets.splice(paragarph.indexInOwner, 1);\n        }\n        // this.updateLinearIndex(paragarph);\n        // this.updateLinearIndex(nextParagraph);\n        return nextParagraph;\n    };\n    Layout.prototype.updateClientPositionForBlock = function (block, currentBlock) {\n        var startBlock = (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget) ? block.ownerTable : block;\n        var isClientAreaUpdated = false;\n        do {\n            if (startBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                if (currentBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && currentBlock.equals(startBlock)) {\n                    isClientAreaUpdated = true;\n                    break;\n                }\n                this.viewer.updateClientAreaForBlock(startBlock, true);\n                this.addParagraphWidget(this.viewer.clientActiveArea, startBlock);\n                this.viewer.cutFromTop(this.viewer.clientActiveArea.y + startBlock.height);\n                this.viewer.updateClientAreaForBlock(startBlock, false);\n            }\n            else if (startBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                this.viewer.updateClientAreaForBlock(startBlock, true);\n                if (this.documentHelper.compatibilityMode !== 'Word2013' && !startBlock.isInsideTable) {\n                    this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x -\n                        _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(startBlock.firstChild.firstChild.leftMargin);\n                }\n                this.addTableWidget(this.viewer.clientActiveArea, [startBlock]);\n                var nextRow = startBlock.firstChild;\n                if (currentBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget && startBlock.equals(currentBlock.ownerTable) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextRow)) {\n                    do {\n                        if (nextRow.equals(currentBlock)) {\n                            isClientAreaUpdated = true;\n                            break;\n                        }\n                        this.addTableRowWidget(this.viewer.clientActiveArea, [nextRow]);\n                        this.updateChildLocationForRow(this.viewer.clientActiveArea.y, nextRow);\n                        this.viewer.cutFromTop(this.viewer.clientActiveArea.y + nextRow.height);\n                        startBlock.height += nextRow.height;\n                        nextRow = nextRow.nextWidget;\n                    } while (nextRow);\n                }\n                else {\n                    this.updateChildLocationForTable(startBlock.y, startBlock);\n                    this.viewer.cutFromTop(this.viewer.clientActiveArea.y + startBlock.height);\n                    this.viewer.updateClientAreaForBlock(startBlock, false);\n                }\n            }\n            startBlock = startBlock.nextWidget;\n        } while (startBlock && !isClientAreaUpdated);\n    };\n    Layout.prototype.updateClientAreaForNextBlock = function (line, paragraphWidget) {\n        for (var m = 0; m < paragraphWidget.childWidgets.length; m++) {\n            var child = paragraphWidget.childWidgets[m];\n            if (line === child) {\n                break;\n            }\n            this.updateShapeBaseLocation(paragraphWidget);\n            this.checkInbetweenShapeOverlap(child);\n            this.viewer.cutFromTop(this.viewer.clientActiveArea.y + child.height);\n        }\n    };\n    Layout.prototype.layoutStartEndBlocks = function (startBlock, endBlock) {\n        var block = startBlock;\n        this.isOverlapFloatTable = true;\n        this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - startBlock.y;\n        this.viewer.clientActiveArea.y = startBlock.y;\n        var startParagaraph;\n        if (startBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n            startParagaraph = this.documentHelper.getFirstParagraphInFirstCell(startBlock);\n        }\n        else {\n            startParagaraph = startBlock;\n        }\n        if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule) {\n            this.viewer.owner.editorModule.updateWholeListItems(startParagaraph);\n        }\n        while (block) {\n            this.viewer.updateClientAreaForBlock(block, true);\n            if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                this.layoutParagraph(block, 0);\n            }\n            else {\n                this.clearTableWidget(block, true, true, true);\n                this.layoutTable(block, 0);\n            }\n            this.viewer.updateClientAreaForBlock(block, false);\n            var isTableHasParaVerticalOrigin = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(block.nextWidget) && block.nextWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && block.nextWidget === endBlock && (block.nextWidget.positioning.verticalOrigin === 'Paragraph'));\n            block = block !== endBlock && !isTableHasParaVerticalOrigin ? block.nextWidget : undefined;\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.alignLineElements = function (element, topMargin, bottomMargin, maxDescent, addSubWidth, subWidth, textAlignment, whiteSpaceCount, isLastElement) {\n        if (element.width > 0 && (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox)) {\n            var textElement = element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox ? element : undefined;\n            //Updates the text to base line offset.\n            var baselineOffset = element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox ? textElement.baselineOffset : element.baselineOffset;\n            topMargin += this.maxBaseline - baselineOffset;\n            bottomMargin += maxDescent - (element.height - baselineOffset);\n            //Updates the text to base line offset.\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(textElement) && textAlignment === 'Justify' && whiteSpaceCount > 0) {\n                //Aligns the text as Justified.\n                textElement.isWidthUpdated = false;\n                var width = textElement.width;\n                var text = textElement.text;\n                if (!addSubWidth) {\n                    text = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimStart(text); // trim start.\n                    addSubWidth = (text.length > 0);\n                }\n                if (addSubWidth) {\n                    var spaceCount = text.length - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.removeSpace(text).length;\n                    if (isLastElement) {\n                        spaceCount -= text.length - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimEnd(text).length;\n                    }\n                    if (whiteSpaceCount < spaceCount) {\n                        width = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text, textElement.characterFormat, textElement.scriptType);\n                        spaceCount = whiteSpaceCount;\n                    }\n                    if (spaceCount > 0) {\n                        textElement.width = width + subWidth * spaceCount;\n                        whiteSpaceCount -= spaceCount;\n                    }\n                }\n            }\n        }\n        else {\n            addSubWidth = true;\n            //Updates the Image/UIElement to base line offset.\n            topMargin += this.maxBaseline - element.height;\n            bottomMargin += maxDescent;\n        }\n        return { 'topMargin': topMargin, 'bottomMargin': bottomMargin, 'addSubWidth': addSubWidth, 'whiteSpaceCount': whiteSpaceCount };\n    };\n    Layout.prototype.updateWidgetToPage = function (viewer, paragraphWidget, skipCellContentHeightCalc) {\n        if (paragraphWidget.isInsideTable) {\n            var cellWidget = paragraphWidget.associatedCell;\n            paragraphWidget.height = viewer.clientActiveArea.y - paragraphWidget.y;\n            // if (viewer instanceof PageLayoutViewer) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.associatedCell) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.associatedCell.ownerRow)\n                || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.associatedCell.ownerRow.rowFormat)) {\n                return;\n            }\n            if (paragraphWidget.associatedCell.ownerRow.rowFormat.heightType === 'Exactly') {\n                cellWidget.height = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paragraphWidget.associatedCell.ownerRow.rowFormat.height);\n            }\n            else {\n                if ([cellWidget].length <= 1 && paragraphWidget.associatedCell.ownerRow.rowFormat.heightType === 'AtLeast' && !skipCellContentHeightCalc) {\n                    cellWidget.height = Math.max(_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paragraphWidget.associatedCell.ownerRow.rowFormat.height), this.getCellContentHeight(cellWidget, false, paragraphWidget.indexInOwner));\n                }\n                else {\n                    cellWidget.height = cellWidget.height + paragraphWidget.height;\n                }\n            }\n            // } else {\n            //     cellWidget.height = cellWidget.height + paragraphWidget.height;\n            // }\n            // cellWidget.childWidgets.push(paragraphWidget);\n            paragraphWidget.containerWidget = cellWidget;\n        }\n        else {\n            if (!paragraphWidget.isEndsWithPageBreak && !paragraphWidget.isEndsWithColumnBreak || viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.WebLayoutViewer) {\n                paragraphWidget.height = viewer.clientActiveArea.y - paragraphWidget.y;\n            }\n            //Adds the paragraph widget to the Header Footer/ Body widget.\n            // this.updateWidgetsToBody(paragraphWidget, viewer, paragraphWidget);\n            //For canvas no need to render paragraph widget here. In case of div, need to render paragraph here.\n            // this.render.renderParagraphWidget((paragraphWidget.containerWidget as BodyWidget).page, paragraphWidget);\n        }\n        if (this.isRelayoutFootnote && paragraphWidget.bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) {\n            if (!paragraphWidget.isInsideTable) {\n                paragraphWidget.containerWidget.height += paragraphWidget.height;\n            }\n            //this.isRelayoutFootnote = false;\n            this.shiftFootnoteChildLocation(paragraphWidget.bodyWidget, this.viewer);\n        }\n        if (paragraphWidget.bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.HeaderFooterWidget) {\n            if (!paragraphWidget.isInsideTable) {\n                paragraphWidget.containerWidget.height += paragraphWidget.height;\n            }\n            if (this.viewer.owner.enableHeaderAndFooter && paragraphWidget.bodyWidget.headerFooterType.indexOf('Footer') !== -1) {\n                this.shiftFooterChildLocation(paragraphWidget.bodyWidget, this.viewer);\n            }\n        }\n        if (viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.WebLayoutViewer && paragraphWidget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) {\n            paragraphWidget.containerWidget.height += paragraphWidget.height;\n        }\n    };\n    Layout.prototype.shiftFooterChildLocation = function (widget, viewer) {\n        var pageHeight = widget.page.bodyWidgets[0].sectionFormat.pageHeight;\n        if (widget.headerFooterType.indexOf('Footer') !== -1) {\n            var footerDistance = widget.page.bodyWidgets[0].sectionFormat.footerDistance;\n            var height = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(pageHeight - footerDistance);\n            var top_1;\n            if (widget.y + widget.height > height) {\n                top_1 = height - (widget.y + widget.height);\n            }\n            else if (widget.y + widget.height < height) {\n                top_1 = (widget.y + widget.height) - height;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(top_1)) {\n                top_1 = height - (widget.y + widget.height);\n                this.shiftChildLocation(top_1, widget);\n                viewer.clientActiveArea.y += top_1;\n            }\n        }\n    };\n    Layout.prototype.shiftFootnoteChildLocation = function (widget, viewer) {\n        var pageHeight = widget.page.bodyWidgets[0].sectionFormat.pageHeight;\n        var footerDistance = widget.page.bodyWidgets[0].sectionFormat.footerDistance;\n        var bottomMargin = widget.page.bodyWidgets[0].sectionFormat.bottomMargin;\n        var height = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(pageHeight - bottomMargin);\n        var top;\n        if (widget.y + widget.height > height) {\n            top = height - (widget.y + widget.height);\n        }\n        else if (widget.y + widget.height < height) {\n            top = (widget.y + widget.height) - height;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(top)) {\n            top = height - (widget.y + widget.height);\n            this.shiftChildLocation(top, widget);\n            viewer.clientActiveArea.y += top;\n        }\n    };\n    Layout.prototype.checkPreviousElement = function (line, index) {\n        var paragraph = line.paragraph;\n        var isSplitByWord = false;\n        var lastTextElement = 0;\n        var isJustifiedPara = paragraph.paragraphFormat.textAlignment === 'Justify' ? true : false;\n        for (var i = index - 1; i >= 0; i--) {\n            var textElement = line.children[i];\n            if (textElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && (textElement.width > 0 || (!isJustifiedPara && textElement.text === '\\t'))) {\n                var text = textElement.text;\n                lastTextElement = i;\n                if (text.length > 0 && (text[text.length - 1] === ' ' || text[text.length - 1] === '-')) {\n                    if (i === index - 1) {\n                        this.addSplittedLineWidget(line, index - 1);\n                        return true;\n                    }\n                    isSplitByWord = true;\n                    break;\n                }\n                else if (!this.isRelayoutOverlap && !isJustifiedPara && textElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TabElementBox && text === '\\t' && lastTextElement !== 0) {\n                    lastTextElement--;\n                    isSplitByWord = true;\n                    break;\n                }\n                else if (text === '\\t' || this.documentHelper.textHelper.isUnicodeText(text, textElement.scriptType)) {\n                    return false;\n                }\n                else if (text.indexOf(' ') >= 0) {\n                    isSplitByWord = true;\n                    var index_1 = text.lastIndexOf(' ') + 1;\n                    //Splits the text element by space.\n                    var splittedElement = new _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox();\n                    splittedElement.text = text.substr(index_1);\n                    splittedElement.characterFormat.copyFormat(textElement.characterFormat);\n                    splittedElement.characterRange = textElement.characterRange;\n                    if (textElement.revisions.length > 0) {\n                        this.updateRevisionForSplittedElement(textElement, splittedElement, index_1 > 0);\n                        splittedElement.isMarkedForRevision = textElement.isMarkedForRevision;\n                    }\n                    textElement.text = text.substr(0, index_1);\n                    this.documentHelper.textHelper.getTextSize(splittedElement, textElement.characterFormat);\n                    textElement.width -= splittedElement.width;\n                    if (textElement.text[textElement.text.length - 1] === ' ') {\n                        textElement.trimEndWidth = this.documentHelper.textHelper.getWidth(_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.trimEnd(textElement.text), textElement.characterFormat, textElement.scriptType);\n                    }\n                    else {\n                        textElement.trimEndWidth = textElement.width;\n                    }\n                    textElement.height = splittedElement.height;\n                    if (textElement.width === 0) {\n                        line.children.splice(i, 1);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(line.layoutedElements) && line.layoutedElements.length > 0) {\n                            line.layoutedElements.splice(i, 1);\n                        }\n                    }\n                    //Adds the text element to the line\n                    line.children.splice(i + 1, 0, splittedElement);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(line.layoutedElements)) {\n                        line.layoutedElements.splice(i + 1, 0, splittedElement);\n                    }\n                    break;\n                }\n            }\n            else if (!(textElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox || textElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox\n                // to skip field code\n                || textElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && textElement.width === 0 || textElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.CommentCharacterElementBox || textElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ContentControl)) {\n                //Handled for inline images/UIelements.\n                lastTextElement = i;\n                isSplitByWord = true;\n                break;\n            }\n        }\n        if (isSplitByWord) {\n            lastTextElement++;\n            if (lastTextElement < line.children.length) {\n                var splitWidth = 0;\n                for (var i = lastTextElement; i < line.children.length; i++) {\n                    splitWidth += line.children[i].width;\n                    this.addSplittedLineWidget(line, i - 1);\n                    i--;\n                }\n                var is2013Justification = paragraph.paragraphFormat.textAlignment === 'Justify' &&\n                    this.documentHelper.compatibilityMode === 'Word2013';\n                if (!is2013Justification) {\n                    this.viewer.updateClientWidth(splitWidth);\n                }\n            }\n        }\n        return isSplitByWord;\n    };\n    Layout.prototype.clearListElementBox = function (paragraph) {\n        if (paragraph.childWidgets.length === 0) {\n            return;\n        }\n        var line = paragraph.childWidgets[0];\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(line.children)) {\n            return;\n        }\n        for (var i = line.children.length - 1; i > 0; i--) {\n            if (line.children[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox) {\n                line.children.splice(i, 1);\n            }\n            else {\n                break;\n            }\n        }\n        for (var i = 0; i < line.children.length; i++) {\n            if (line.children[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox) {\n                line.children.splice(i, 1);\n                i--;\n            }\n            else {\n                break;\n            }\n        }\n    };\n    /**\n * @private\n */\n    Layout.prototype.clearInvalidList = function (list) {\n        if (list) {\n            if (list.abstractListId === -1 && this.documentHelper.abstractLists.indexOf(list.abstractList) !== -1) {\n                this.documentHelper.abstractLists.splice(this.documentHelper.abstractLists.indexOf(list.abstractList), 1);\n            }\n            if (list.listId === -1 && this.documentHelper.lists.indexOf(list) !== -1) {\n                this.documentHelper.lists.splice(this.documentHelper.lists.indexOf(list), 1);\n            }\n        }\n    };\n    Layout.prototype.getListNumber = function (listFormat, isAutoList) {\n        var list = this.documentHelper.getListById(listFormat.listId);\n        var levelNumber = listFormat.listLevelNumber;\n        var listLevel = this.getListLevel(list, listFormat.listLevelNumber);\n        var levelOverride = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(list.levelOverrides) ? list.levelOverrides[levelNumber] : undefined;\n        // If LevelOverride exists and have either override list level or StartAtOverride, then only list numbering will be restarted.\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(levelOverride) && this.documentHelper.renderedLevelOverrides.indexOf(list) === -1 && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(levelOverride.overrideListLevel)) {\n            //Add List Override style\n            this.documentHelper.renderedLevelOverrides.push(list);\n            var abstractList = this.documentHelper.getAbstractListById(list.abstractListId);\n            if (this.documentHelper.renderedLists.containsKey(abstractList)) {\n                var levels = this.documentHelper.renderedLists.get(abstractList);\n                if (levels.containsKey(levelNumber)) {\n                    levels.remove(levelNumber);\n                    this.ClearSubListLevelValues(list, abstractList, levelNumber);\n                }\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isAutoList)) {\n            this.updateListValues(list, levelNumber);\n        }\n        return this.getListText(list, levelNumber, listLevel);\n    };\n    Layout.prototype.ClearSubListLevelValues = function (list, abstractList, levelNumber) {\n        var levels = this.documentHelper.renderedLists.get(abstractList);\n        var levelNumberTemp = levelNumber + 1;\n        while (levelNumberTemp < abstractList.levels.length) {\n            var listLevel = this.getListLevel(list, levelNumberTemp);\n            if (levels.containsKey(levelNumberTemp) && listLevel.restartLevel > levelNumber) {\n                levels.remove(levelNumberTemp);\n            }\n            levelNumberTemp++;\n        }\n    };\n    Layout.prototype.getListStartValue = function (listLevelNumber, list) {\n        var levelOverride = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(list.levelOverrides) ? list.levelOverrides[listLevelNumber] : undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(levelOverride) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(levelOverride.overrideListLevel)) {\n            return levelOverride.startAt;\n        }\n        var listLevel = this.getListLevel(list, listLevelNumber);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(listLevel)) {\n            return 0;\n        }\n        else {\n            return listLevel.startAt;\n        }\n    };\n    Layout.prototype.updateListValues = function (list, listLevelNumber) {\n        var abstractList = this.documentHelper.getAbstractListById(list.abstractListId);\n        var currentListLevel = this.getListLevel(list, listLevelNumber);\n        if (!this.documentHelper.renderedLists.containsKey(abstractList)) {\n            var startVal = new _base_dictionary__WEBPACK_IMPORTED_MODULE_1__.Dictionary();\n            this.documentHelper.renderedLists.add(abstractList, startVal);\n            var listLevel = this.getListLevel(list, listLevelNumber);\n            for (var i = 0; i <= listLevelNumber; i++) {\n                startVal.add(i, this.getListStartValue(i, list));\n            }\n        }\n        else {\n            var levels = this.documentHelper.renderedLists.get(abstractList);\n            if (levels.containsKey(listLevelNumber)) {\n                var startAt = levels.get(listLevelNumber);\n                levels.set(listLevelNumber, startAt + 1);\n                var levelNumber = listLevelNumber + 1;\n                while (levelNumber < this.documentHelper.getAbstractListById(list.abstractListId).levels.length) {\n                    var listLevel = this.getListLevel(list, levelNumber);\n                    // if (!isNullOrUndefined(listLevel)) {\n                    if (levels.containsKey(levelNumber) && (listLevel.restartLevel > listLevelNumber || currentListLevel.listLevelPattern === \"Bullet\")) {\n                        levels.remove(levelNumber);\n                        // if (document.renderedListLevels.indexOf(listLevel) > -1) {\n                        //     document.renderedListLevels.pop();\n                        // }\n                    }\n                    // }\n                    levelNumber++;\n                }\n            }\n            else {\n                var levelNumber = listLevelNumber;\n                while (!levels.containsKey(levelNumber - 1) && levelNumber > 0) {\n                    var listLevel = this.getListLevel(list, levelNumber - 1);\n                    // if (!isNullOrUndefined(listLevel)) {\n                    levels.add(levelNumber - 1, this.getListStartValue(levelNumber - 1, list));\n                    // if (document.renderedListLevels.indexOf(listLevel) !== -1) {\n                    //     document.renderedListLevels.push(listLevel);\n                    // }\n                    // }\n                    levelNumber--;\n                }\n                var startAt = this.getListStartValue(listLevelNumber, list);\n                levels.add(listLevelNumber, startAt);\n            }\n        }\n    };\n    Layout.prototype.getListText = function (listAdv, listLevelNumber, currentListLevel) {\n        var listText = currentListLevel.numberFormat;\n        if (this.documentHelper.renderedLists.containsKey(this.documentHelper.getAbstractListById(listAdv.abstractListId))) {\n            var levels = this.documentHelper.renderedLists.get(this.documentHelper.getAbstractListById(listAdv.abstractListId));\n            var keys = levels.keys;\n            for (var i = 0; i < keys.length; i++) {\n                var levelNumber = keys[i];\n                var levelKey = '%' + (levelNumber + 1).toString();\n                // if isLegalStyleNumber boolean is true, consider the currentlistlevel for getting the replace text else use the levels from starting.\n                var listLevel = this.getListLevel(listAdv, levelNumber);\n                var pattern = i < listLevelNumber ? listLevel.listLevelPattern !== 'LeadingZero' ? 'Arabic' : listLevel.listLevelPattern : undefined;\n                if (listText.match(levelKey)) {\n                    if (levelNumber > listLevelNumber) {\n                        return '';\n                    }\n                    else if (levels.containsKey(levelNumber) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(listLevel)) {\n                        listText = listText.replace(levelKey, this.getListTextListLevel(listLevel, levels.get(levelNumber), currentListLevel.isLegalStyleNumbering ? pattern : undefined));\n                    }\n                    else {\n                        listText = listText.replace(levelKey, '0');\n                    }\n                }\n            }\n        }\n        return listText;\n    };\n    Layout.prototype.getAsLetter = function (number) {\n        // if (number <= 0) {\n        //     return '';\n        // }\n        var quotient = number / 26;\n        var remainder = number % 26;\n        if (remainder === 0) {\n            //If number denotes the factor of 26, then reduce quotient by 1 and set remainder as 26.\n            remainder = 26;\n            quotient--;\n        }\n        //Index of A char in the ASCII table.     \n        var letter = String.fromCharCode(65 - 1 + remainder);\n        var listValue = '';\n        while (quotient >= 0) {\n            listValue = listValue + letter.toString();\n            quotient--;\n        }\n        return listValue;\n    };\n    Layout.prototype.getListTextListLevel = function (listLevel, listValue, customPattern) {\n        switch (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(customPattern) ? customPattern : listLevel.listLevelPattern) {\n            case 'UpRoman':\n                return this.getAsRoman(listValue).toUpperCase();\n            case 'LowRoman':\n                return this.getAsRoman(listValue).toLowerCase();\n            case 'UpLetter':\n                return this.getAsLetter(listValue).toUpperCase();\n            case 'LowLetter':\n                return this.getAsLetter(listValue).toLowerCase();\n            case 'Arabic':\n                return (listValue).toString();\n            case 'LeadingZero':\n                return this.getAsLeadingZero(listValue);\n            case 'Number':\n                return (listValue).toString();\n            case 'OrdinalText':\n                if (listLevel.characterFormat.localeIdAscii === 3082 || this.documentHelper.characterFormat.localeIdAscii === 3082) {\n                    return this.getOrdinalTextInSpanish(true, listValue.toString()).toUpperCase();\n                }\n                else {\n                    return this.getOrdinalText(true, listValue.toString()).toUpperCase();\n                }\n            case 'Ordinal':\n                return this.getAsOrdinal(listValue, listLevel.characterFormat).toString();\n            case 'FarEast':\n                return (listValue).toString();\n            case 'Special':\n                return (listValue).toString();\n            default:\n                return '';\n        }\n    };\n    Layout.prototype.getFootEndNote = function (numberFormat, value) {\n        switch (numberFormat) {\n            case 'UpperCaseRoman':\n                return this.getAsRoman(value).toUpperCase();\n            case 'LowerCaseRoman':\n                return this.getAsRoman(value).toLowerCase();\n            case 'UpperCaseLetter':\n                return this.getAsLetter(value).toUpperCase();\n            case 'LowerCaseLetter':\n                return this.getAsLetter(value).toLowerCase();\n            default:\n                return (value).toString();\n        }\n    };\n    Layout.prototype.generateNumber = function (number, magnitude, letter) {\n        var numberstring = '';\n        while (number >= magnitude) {\n            number -= magnitude;\n            numberstring += letter;\n            this.value = number;\n        }\n        return numberstring.toString();\n    };\n    Layout.prototype.getAsLeadingZero = function (listValue) {\n        if (listValue < 10) {\n            return '0' + listValue.toString();\n        }\n        else {\n            return listValue.toString();\n        }\n    };\n    Layout.prototype.getAsRoman = function (number) {\n        var retval = '';\n        this.value = number;\n        retval += this.generateNumber(this.value, 1000, 'M');\n        retval += this.generateNumber(this.value, 900, 'CM');\n        retval += this.generateNumber(this.value, 500, 'D');\n        retval += this.generateNumber(this.value, 400, 'CD');\n        retval += this.generateNumber(this.value, 100, 'C');\n        retval += this.generateNumber(this.value, 90, 'XC');\n        retval += this.generateNumber(this.value, 50, 'L');\n        retval += this.generateNumber(this.value, 40, 'XL');\n        retval += this.generateNumber(this.value, 10, 'X');\n        retval += this.generateNumber(this.value, 9, 'IX');\n        retval += this.generateNumber(this.value, 5, 'V');\n        retval += this.generateNumber(this.value, 4, 'IV');\n        retval += this.generateNumber(this.value, 1, 'I');\n        return retval.toString();\n    };\n    Layout.prototype.getOrdinalText = function (ordinalString, text) {\n        //Check whether the text contain alphabet or not\n        if (ordinalString) {\n            text = text.trim();\n            for (var i = 0; i < text.length; i++) {\n                if (/[a-zA-Z]/.test(text.charAt(i))) {\n                    ordinalString = false;\n                    break;\n                }\n            }\n            //Get ordinal string\n            if (ordinalString) {\n                text = this.numberToWords(parseInt(text), false);\n            }\n        }\n        return text;\n    };\n    Layout.prototype.numberToWords = function (number, isCardText) {\n        if (number === 0)\n            return \"zero\";\n        var words = '';\n        if (Math.floor(number / 1000000) > 0) {\n            words += this.numberToWords(Math.floor(number / 1000000), isCardText) + \" million \";\n            if (!isCardText && number % 10 === 0)\n                words += \"th \";\n            number %= 1000000;\n        }\n        if (Math.floor(number / 1000) > 0) {\n            words += this.numberToWords(Math.floor(number / 1000), isCardText) + \" thousand \";\n            if (!isCardText && number % 10 === 0)\n                words += \"th \";\n            number %= 1000;\n        }\n        if (Math.floor(number / 100) > 0) {\n            words += this.numberToWords(Math.floor(number / 100), isCardText) + \" hundred \";\n            if (!isCardText && number % 10 === 0)\n                words += \"th \";\n            number %= 100;\n        }\n        if (number > 0) {\n            if (words !== '' && isCardText)\n                words += \"and \";\n            var unitsValue = null;\n            if (isCardText) {\n                unitsValue = [\n                    \"\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\",\n                    \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\"\n                ];\n            }\n            else {\n                unitsValue = [\n                    \"\", \"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\", \"seventh\", \"eighth\", \"ninth\",\n                    \"tenth\", \"eleventh\", \"twelfth\", \"thirteenth\", \"fourteenth\", \"fifteenth\", \"sixteenth\",\n                    \"seventeenth\", \"eighteenth\", \"nineteenth\"\n                ];\n            }\n            var tensValue = [\n                \"\", \"ten\", \"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\",\n                \"ninety\"\n            ];\n            var tensValue_ith = [\n                \"\", \"tenth\", \"twentieth\", \"thirtieth\", \"fortieth\", \"fiftieth\", \"sixtieth\", \"seventieth\",\n                \"eightieth\", \"ninetieth\"\n            ];\n            if (number < 20)\n                words += unitsValue[number];\n            else {\n                if (isCardText || number % 10 > 0)\n                    words += tensValue[Math.floor(number / 10)];\n                if (number % 10 === 0 && !isCardText)\n                    words += tensValue_ith[Math.floor(number / 10)];\n                else if (number % 10 > 0)\n                    words += \"-\" + unitsValue[number % 10];\n            }\n        }\n        return words;\n    };\n    Layout.prototype.getOrdinalTextInSpanish = function (ordinalString, text) {\n        //Check whether the text contain alphabet or not\n        if (ordinalString) {\n            text = text.trim();\n            for (var i = 0; i < text.length; i++) {\n                if (/[a-zA-Z]/.test(text.charAt(i))) {\n                    ordinalString = false;\n                    break;\n                }\n            }\n            //Get ordinal string\n            if (ordinalString) {\n                text = this.numberToSpanishWords(parseInt(text), false);\n            }\n        }\n        return text;\n    };\n    Layout.prototype.numberToSpanishWords = function (number, isCardText) {\n        if (number === 0 && isCardText)\n            return \"cero\";\n        var words = '';\n        if (Math.floor(number / 1000) > 0 && number <= 10000) {\n            var thousandCardinalValue = [\n                \"\", \"mil\", \"dos mil\", \"tres mil\", \"cuatro mil\", \"cinco mil\", \"seis mil\", \"siete mil\", \"ocho mil\",\n                \"nueve mil\", \"diez mil\"\n            ];\n            var thousandOrdinalValue = [\n                \"\", \"milésimo\", \"dosmilésimo\", \"tresmilésimo\", \"cuatromilésimo\", \"cincomilésimo\", \"seismilésimo\", \"sietemilésimo\",\n                \"ochomilésimo\", \"nuevemilésimo\", \"diezmilésimo\"\n            ];\n            if (isCardText)\n                words += thousandCardinalValue[Math.floor(number / 1000)];\n            else\n                words += thousandOrdinalValue[Math.floor(number / 1000)];\n            number %= 1000;\n        }\n        if (Math.floor(number / 100) > 0) {\n            if (words !== '')\n                words += \" \";\n            var cardinalHundredsValue = [\n                \"\", \"ciento\", \"doscientos\", \"trescientos\", \"cuatrocientos\", \"quinientos\", \"seiscientos\", \"setecientos\",\n                \"ochocientos\", \"novecientos\"\n            ];\n            var ordinalHundredsValue = [\n                \"\", \"centésimo\", \"ducentésimo\", \"tricentésimo\", \"cuadringentésimo\", \"quingentésimo\", \"sexcentésimo\",\n                \"septingentésimo\", \"octingentésimo\", \"noningentésimo\"\n            ];\n            if (isCardText)\n                words += cardinalHundredsValue[Math.floor(number / 100)];\n            else\n                words += ordinalHundredsValue[Math.floor(number / 100)];\n            number %= 100;\n        }\n        if (number > 0 && number < 100) {\n            if (words !== '')\n                words += \" \";\n            var unitsValue = null;\n            if (isCardText) {\n                unitsValue = [\n                    \"\", \"uno\", \"dos\", \"tres\", \"cuatro\", \"cinco\", \"seis\", \"siete\", \"ocho\", \"nueve\", \"diez\", \"once\",\n                    \"doce\", \"trece\", \"catorce\", \"quince\", \"dieciséis\", \"diecisiete\", \"dieciocho\", \"diecinueve\"\n                ];\n            }\n            else {\n                unitsValue = [\n                    \"\", \"primero\", \"segundo\", \"tercero\", \"cuarto\", \"quinto\", \"sexto\", \"séptimo\", \"octavo\",\n                    \"noveno\", \"décimo\", \"undécimo\", \"duodécimo\", \"decimotercero\", \"decimocuarto\", \"decimoquinto\",\n                    \"decimosexto\", \"decimoséptimo\", \"decimoctavo\", \"decimonoveno\"\n                ];\n            }\n            var tensValue = [\n                \"\", \"diez\", \"veinte\", \"treinta\", \"cuarenta\", \"cincuenta\", \"sesenta\", \"setenta\", \"ochenta\",\n                \"noventa\"\n            ];\n            var tensValue_Ordinal = [\n                \"\", \"décimo\", \"vigésimo\", \"trigésimo\", \"cuadragésimo\", \"quincuagésimo\", \"sexagésimo\", \"septuagésimo\",\n                \"octogésimo\", \"nonagésimo\"\n            ];\n            var cardNumberFrom21to29Value = [\n                \"\", \"veintiuno\", \"veintidós\", \"veintitrés\", \"veinticuatro\", \"veinticinco\", \"veintiséis\", \"veintisiete\",\n                \"veintiocho\", \"veintinueve\"\n            ];\n            if (number < 20)\n                words += unitsValue[number];\n            else if (number > 20 && number < 30 && isCardText) {\n                words += cardNumberFrom21to29Value[number % 10];\n            }\n            else {\n                if (isCardText && number % 10 > 0)\n                    words += tensValue[Math.floor(number / 10)];\n                else if (isCardText && number % 10 === 0)\n                    words += tensValue[Math.floor(number / 10)];\n                if (number % 10 > 0 && !isCardText)\n                    words += tensValue_Ordinal[Math.floor(number / 10)];\n                if (number % 10 === 0 && !isCardText)\n                    words += tensValue_Ordinal[Math.floor(number / 10)];\n                else if (number % 10 > 0)\n                    if (isCardText)\n                        words += \" y \" + unitsValue[number % 10];\n                    else\n                        words += \" \" + unitsValue[number % 10];\n            }\n        }\n        return words;\n    };\n    Layout.prototype.getAsOrdinal = function (number, characterFormat) {\n        switch (characterFormat.localeIdAscii) {\n            case 1069:\n            case 8218:\n            case 5146:\n            case 4122:\n            case 1050:\n            case 1029:\n            case 1061:\n            case 1035:\n            case 3079:\n            case 1031:\n            case 5127:\n            case 4103:\n            case 2055:\n            case 1038:\n            case 1060:\n            case 1055:\n            case 1044:\n            case 2068:\n            case 1045:\n            case 6170:\n            case 2074:\n                //Returns ordinal in Czech\n                return number.toString() + \".\";\n            case 2060:\n            case 11276:\n            case 3084:\n            case 9228:\n            case 12300:\n            case 1036:\n            case 15372:\n            case 5132:\n            case 13324:\n            case 6156:\n            case 14348:\n            case 8204:\n            case 10252:\n            case 4108:\n                //Returns Ordinal in French\n                if (number == 1)\n                    return number.toString() + \"er\";\n                else\n                    return number.toString() + \"e\";\n            case 2067:\n            case 1043:\n                //Returns Ordinal in Dutch\n                return number.toString() + \"e\";\n            case 1032:\n                //Returns Ordinal in Greek \n                return number.toString() + \"o\";\n            case 1040:\n            case 2064:\n                //Returns Ordinal in Italian\n                return number.toString() + String.fromCharCode(176);\n            case 5130:\n            case 7178:\n            case 12298:\n            case 17418:\n            case 4106:\n            case 1046:\n            case 2070:\n            case 11274:\n            case 16394:\n            case 13322:\n            case 9226:\n            case 18442:\n            case 2058:\n            case 19466:\n            case 6154:\n            case 15370:\n            case 10250:\n            case 20490:\n            case 3082:\n            case 1034:\n            case 21514:\n            case 14346:\n            case 8202:\n                //Returns Ordinal in Spanish\n                return number.toString() + String.fromCharCode(186);\n            case 1049:\n            case 2073:\n                //Returns Ordinal in Russian\n                return number.toString() + \"-\" + String.fromCharCode(1081);\n            case 2077:\n            case 1053:\n                //Returns Ordinal in Swedish\n                return this.getOrdinalInSwedish(number);\n            case 1027:\n                //Returns Ordinal in Catalan\n                return this.getOrdinalInCatalan(number);\n            case 1030:\n                //Returns Ordinal in Danish\n                return this.getOrdinalInDanish(number);\n            default:\n                //Returns Ordinal in English (Default)\n                return this.getOrdinalInEnglish(number);\n        }\n    };\n    Layout.prototype.getOrdinalInEnglish = function (number) {\n        switch (number % 100) {\n            case 11:\n            case 12:\n            case 13:\n                return number.toString() + \"th\";\n        }\n        switch (number % 10) {\n            case 1:\n                return number.toString() + \"st\";\n            case 2:\n                return number.toString() + \"nd\";\n            case 3:\n                return number.toString() + \"rd\";\n            default:\n                return number.toString() + \"th\";\n        }\n    };\n    Layout.prototype.getOrdinalInSwedish = function (number) {\n        if (number == 11 || number == 12) {\n            return number.toString() + \":e\";\n        }\n        else if ((number % 10) == 1 || (number % 10) == 2) {\n            return number.toString() + \":a\";\n        }\n        else\n            return number.toString() + \":e\";\n    };\n    Layout.prototype.getOrdinalInCatalan = function (number) {\n        switch (number) {\n            case 1:\n                return number.toString() + \".\";\n            case 2:\n                return number.toString() + \"n\";\n            case 3:\n                return number.toString() + \"r\";\n            case 4:\n                return number.toString() + \"t\";\n            case 14:\n                return number.toString() + String.fromCharCode(232) + \"h\";\n            default:\n                return number.toString() + String.fromCharCode(232);\n        }\n    };\n    Layout.prototype.getOrdinalInDanish = function (number) {\n        if (number == 0)\n            return number.toString() + \"te\";\n        switch (number % 100) {\n            case 0:\n                return number.toString() + \"ende\";\n            case 1:\n                return number.toString() + \"ste\";\n            case 2:\n                return number.toString() + \"nden\";\n            case 3:\n                return number.toString() + \"dje\";\n            case 4:\n                return number.toString() + \"rde\";\n            case 5:\n            case 6:\n            case 11:\n            case 12:\n            case 30:\n                return number.toString() + \"te\";\n            default:\n                return number.toString() + \"nde\";\n        }\n    };\n    Layout.prototype.getListLevel = function (list, listLevelNumber) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(list)) {\n            var abstractList = this.documentHelper.getAbstractListById(list.abstractListId);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(list) && abstractList.levels.length <= listLevelNumber\n                && listLevelNumber >= 0 && listLevelNumber < 9) {\n                this.addListLevels(abstractList);\n            }\n            var levelOverrideAdv = undefined;\n            var level = false;\n            level = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(list.levelOverrides))\n                && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((levelOverrideAdv = this.getOverrideListLevel(list.levelOverrides, listLevelNumber)))\n                && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(levelOverrideAdv.overrideListLevel));\n            if (level) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(levelOverrideAdv.startAt)) {\n                    levelOverrideAdv.overrideListLevel.startAt = abstractList.levels[listLevelNumber].startAt;\n                }\n                return levelOverrideAdv.overrideListLevel;\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(abstractList) && listLevelNumber >= 0 && listLevelNumber < abstractList.levels.length) {\n                return abstractList.levels[listLevelNumber];\n            }\n        }\n        return undefined;\n    };\n    Layout.prototype.getOverrideListLevel = function (levelOverrides, listLevelNumber) {\n        for (var i = 0; i < levelOverrides.length; i++) {\n            if (levelOverrides[i].levelNumber == listLevelNumber)\n                return levelOverrides[i];\n        }\n        return undefined;\n    };\n    Layout.prototype.getTabWidth = function (paragraph, viewer, index, lineWidget, element) {\n        if (element.characterFormat.hidden) {\n            return 0;\n        }\n        var fPosition = 0;\n        var isCustomTab = false;\n        var tabs = paragraph.paragraphFormat.getUpdatedTabs();\n        var isList = false;\n        var sectionFormat = paragraph.bodyWidget.sectionFormat;\n        var leftMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.leftMargin);\n        var tabBeforeLeftIndent = false;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.paragraphFormat.listFormat.listLevel) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.paragraphFormat.listFormat.listLevel.paragraphFormat)) {\n            var listFormat = paragraph.paragraphFormat.listFormat.listLevel.paragraphFormat;\n            if (paragraph.paragraphFormat.leftIndent !== listFormat.leftIndent) {\n                isList = true;\n            }\n        }\n        var clientWidth = 0;\n        var clientActiveX = viewer.clientActiveArea.x;\n        var firstLineIndent = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent);\n        var leftIndent = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paragraph.paragraphFormat.leftIndent);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element) && lineWidget.isFirstLine()) {\n            clientWidth = this.viewer.clientArea.x + firstLineIndent;\n            if (isList) {\n                clientActiveX = clientActiveX + firstLineIndent;\n            }\n        }\n        else {\n            clientWidth = this.viewer.clientArea.x;\n        }\n        if (clientActiveX < clientWidth && (this.documentHelper.compatibilityMode !== 'Word2003' || tabs.length === 0)) {\n            return viewer.clientArea.x - viewer.clientActiveArea.x;\n        }\n        var position = viewer.clientActiveArea.x -\n            (viewer.clientArea.x - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paragraph.paragraphFormat.leftIndent));\n        for (var i = 0; i < tabs.length; i++) {\n            var tabStop = tabs[i];\n            var tabStopPosition = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(tabStop.position);\n            if (tabStopPosition < leftIndent) {\n                if (parseFloat(position.toFixed(2)) < parseFloat(tabStopPosition.toFixed(2))) {\n                    tabBeforeLeftIndent = true;\n                }\n                else {\n                    tabBeforeLeftIndent = false;\n                }\n            }\n        }\n        if (lineWidget.isFirstLine() && leftIndent > 0 && firstLineIndent < 0\n            && (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox || !tabBeforeLeftIndent)) {\n            if ((viewer.clientArea.x - viewer.clientActiveArea.x) > 0) {\n                return viewer.clientArea.x - viewer.clientActiveArea.x;\n            }\n            else if (tabs.length === 0 && paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listLevel) {\n                tabs = paragraph.paragraphFormat.listFormat.listLevel.paragraphFormat.tabs;\n            }\n        }\n        // Calculates tabwidth based on pageleftmargin and defaulttabwidth property\n        var defaultTabWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(this.documentHelper.defaultTabWidth);\n        if (tabs.length === 0 && (position > 0 && defaultTabWidth > Math.round(position) && isList ||\n            defaultTabWidth === this.defaultTabWidthPixel && defaultTabWidth > Math.round(position) && position > 0)) {\n            return defaultTabWidth - position;\n        }\n        else {\n            var breaked = false;\n            if (tabs.length > 0) {\n                for (var i = tabs.length - 1; i > -1; i--) {\n                    var tabStop = tabs[i];\n                    var tabPosition = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(tabStop.position);\n                    if (!(parseFloat(tabPosition.toFixed(2)) > parseFloat(position.toFixed(2)))) {\n                        if (i > 0 && (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(tabs[i - 1].position) > parseFloat(position.toFixed(2)))) {\n                            continue;\n                        }\n                        if (i != tabs.length - 1) {\n                            var tabInfo = this.getJustificationTabWidth(tabs[i + 1], element, lineWidget, paragraph, defaultTabWidth, position, fPosition);\n                            defaultTabWidth = tabInfo.defaultTabWidth;\n                            fPosition = tabInfo.fPosition;\n                            position = tabInfo.position;\n                            isCustomTab = true;\n                        }\n                        breaked = true;\n                        break;\n                    }\n                }\n                if (!breaked) {\n                    var tabJustification = this.getJustificationTabWidth(tabs[0], element, lineWidget, paragraph, defaultTabWidth, position, fPosition);\n                    defaultTabWidth = tabJustification.defaultTabWidth;\n                    fPosition = tabJustification.fPosition;\n                    position = tabJustification.position;\n                    isCustomTab = true;\n                }\n            }\n            if (!isCustomTab) {\n                var diff = parseFloat(((position * 100) % (defaultTabWidth * 100) / 100).toFixed(2));\n                if (diff < 0 && isList) {\n                    diff += defaultTabWidth;\n                }\n                var cnt = (position - diff) / defaultTabWidth;\n                fPosition = (cnt + 1) * defaultTabWidth;\n            }\n            if (parseFloat(fPosition.toFixed(1)) === parseFloat(position.toFixed(1))) {\n                return defaultTabWidth;\n            }\n            return (fPosition - position) > 0 ? fPosition - position : defaultTabWidth;\n        }\n    };\n    Layout.prototype.getJustificationTabWidth = function (tab, element, lineWidget, paragraph, defaultTabWidth, position, fPosition) {\n        var elementWidth = element ? this.documentHelper.textHelper.getTextSize(element, element.characterFormat) : 0;\n        if (tab.tabJustification === 'Left' || tab.tabJustification === 'List') {\n            fPosition = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(tab.position);\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TabElementBox) {\n                element.tabLeader = tab.tabLeader;\n                element.tabText = '';\n            }\n        }\n        else {\n            var tabWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(tab.position) - position;\n            var width = this.getRightTabWidth(element.indexInOwner + 1, lineWidget, paragraph);\n            if (width < tabWidth && tab.tabJustification != 'Decimal') {\n                if (tab.tabJustification === 'Right') {\n                    defaultTabWidth = tabWidth - width;\n                    var rightIndent = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paragraph.rightIndent);\n                    var areaWidth = this.viewer.clientActiveArea.width + rightIndent - defaultTabWidth;\n                    this.viewer.clientActiveArea.width += rightIndent;\n                    if (areaWidth < 0) {\n                        defaultTabWidth += areaWidth - width;\n                    }\n                    else if (width > areaWidth) {\n                        defaultTabWidth -= width - areaWidth;\n                    }\n                }\n                else {\n                    defaultTabWidth = tabWidth - width / 2;\n                }\n            }\n            else if (tab.tabJustification === 'Center' && (width / 2) < tabWidth) {\n                defaultTabWidth = tabWidth - width / 2;\n            }\n            else if (tab.tabJustification === 'Decimal') {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.nextElement) && element.nextElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n                    var nextElement = element.nextElement;\n                    if (nextElement.text.indexOf(\".\") != -1) {\n                        var index = nextElement.text.indexOf(\".\");\n                        var text = nextElement.text.substring(0, index);\n                        var textWidth = this.documentHelper.textHelper.getWidth(text, nextElement.characterFormat, nextElement.scriptType);\n                        defaultTabWidth = tabWidth - textWidth;\n                    }\n                    else if (width < tabWidth) {\n                        defaultTabWidth = tabWidth - width;\n                    }\n                    else {\n                        defaultTabWidth = tabWidth;\n                    }\n                }\n                else {\n                    defaultTabWidth = tabWidth;\n                }\n            }\n            else {\n                defaultTabWidth = tab.tabJustification === 'Right' ? 0 : elementWidth;\n            }\n            fPosition = position;\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TabElementBox) {\n                element.tabLeader = tab.tabLeader;\n                element.tabText = '';\n            }\n        }\n        return {\n            defaultTabWidth: defaultTabWidth,\n            fPosition: fPosition,\n            position: position\n        };\n    };\n    Layout.prototype.getRightTabWidth = function (index, lineWidget, paragraph) {\n        var width = 0;\n        var isFieldCode = false;\n        var elementBox = lineWidget.children[index];\n        while (elementBox) {\n            if ((elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox) || (elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BookmarkElementBox) || isFieldCode) {\n                if (elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox) {\n                    if (elementBox.fieldType === 0) {\n                        isFieldCode = true;\n                    }\n                    else if (elementBox.fieldType === 2) {\n                        isFieldCode = false;\n                    }\n                }\n                elementBox.width = 0;\n            }\n            else {\n                if (elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldTextElementBox && !this.isTocField(elementBox.fieldBegin)) {\n                    var text = this.documentHelper.getFieldResult(elementBox.fieldBegin, elementBox.paragraph.bodyWidget.page);\n                    if (text !== '') {\n                        elementBox.text = text;\n                    }\n                }\n                if (elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n                    this.documentHelper.textHelper.getTextSize(elementBox, elementBox.characterFormat);\n                }\n            }\n            if (elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && elementBox.text === '\\t') {\n                return width;\n            }\n            else {\n                width = (elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && elementBox.textWrappingStyle !== \"Inline\") ? width : width + elementBox.width;\n            }\n            elementBox = elementBox.nextNode;\n        }\n        return width;\n    };\n    Layout.prototype.getSplitIndexByWord = function (clientActiveWidth, text, width, characterFormat, scriptType) {\n        var index = 0;\n        var length = text.length;\n        while (index < length) {\n            var nextIndex = this.getTextIndexAfterSpace(text, index);\n            if (nextIndex === 0 || nextIndex === length) {\n                nextIndex = length - 1;\n            }\n            var splitWidth = width;\n            if ((nextIndex < length - 1 || (nextIndex === length - 1 && text[nextIndex - 1] === ' ')) && index !== nextIndex) {\n                splitWidth = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text.slice(0, nextIndex), characterFormat, scriptType);\n            }\n            if (splitWidth <= clientActiveWidth) {\n                index = nextIndex;\n            }\n            else {\n                if (index === 0 && text[0] === ' ') {\n                    index = this.getTextIndexAfterSpace(text, 0);\n                }\n                break;\n            }\n        }\n        return index;\n    };\n    Layout.prototype.getTextSplitIndexByCharacter = function (totalClientWidth, clientActiveAreaWidth, text, width, characterFormat, scriptType) {\n        var length = text.length;\n        for (var i = 0; i < length; i++) {\n            var splitWidth = width;\n            if (i + 1 < length) {\n                splitWidth = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text.substring(0, i + 1), characterFormat, scriptType);\n            }\n            if (splitWidth > clientActiveAreaWidth) {\n                if (i === 0 && splitWidth > totalClientWidth) {\n                    //Handle for cell/section having client width less than a character's width.\n                    return (length > 1 && text[1] === ' ') ? this.getTextIndexAfterSpace(text, 1) : 1;\n                }\n                else if (text[i] === ' ') {\n                    // If the character is space, then split the text from next character.\n                    return this.getTextIndexAfterSpace(text, i);\n                }\n                return i;\n            }\n        }\n        return 0;\n    };\n    Layout.prototype.getSubWidth = function (lineWidget, justify, spaceCount, firstLineIndent, isParagraphEnd) {\n        var width = 0;\n        var trimSpace = true;\n        var lineText = '';\n        var trimmedSpaceWidth = 0;\n        var isBidi = lineWidget.paragraph.paragraphFormat.bidi;\n        if (this.wrapPosition.length > 0) {\n            var subWidths = this.getSubWidthBasedOnTextWrap(lineWidget, justify, spaceCount, firstLineIndent, isParagraphEnd);\n            if (subWidths.length > 0) {\n                return subWidths;\n            }\n        }\n        var renderElementBox = lineWidget.renderedElements;\n        for (var i = renderElementBox.length - 1; i >= 0; i--) {\n            var element = renderElementBox[i];\n            if (element.width > 0 && element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n                var elementText = element.text;\n                lineText = elementText + lineText;\n                if (justify && isBidi) {\n                    if (elementText === ' ' && i - 1 >= 0 && renderElementBox[i - 1].text === ' ') {\n                        trimSpace = true;\n                    }\n                    else {\n                        trimSpace = false;\n                    }\n                }\n                if (trimSpace && (elementText.trim() !== '' || elementText === '\\t')) {\n                    if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.endsWith(elementText)) {\n                        var widthExcludeSpace = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(elementText, element.characterFormat, element.scriptType);\n                        width += widthExcludeSpace;\n                        // Trimmed space width can be found by subtracting the actual width and width exclude end space.\n                        trimmedSpaceWidth += element.width - widthExcludeSpace;\n                    }\n                    else {\n                        width += element.width;\n                    }\n                    trimSpace = false;\n                }\n                else if (!trimSpace) {\n                    width += element.width;\n                }\n                else {\n                    ////Add the width of the textelement which contains space alone and present at end of the line.\n                    trimmedSpaceWidth += element.width;\n                }\n            }\n            else {\n                lineText = 'a' + lineText;\n                trimSpace = false;\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && element.textWrappingStyle !== 'Inline') {\n                    continue;\n                }\n                width += element.width;\n            }\n            if (!justify) {\n                width = Math.round(width);\n            }\n            else {\n                width = width;\n            }\n        }\n        var totalSpaceCount = lineText.length - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.removeSpace(lineText).length;\n        lineText = lineText.trim();\n        spaceCount = lineText.length - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.removeSpace(lineText).length;\n        var subWidth = (this.viewer.clientArea.width - firstLineIndent - width);\n        var totalSubWidth = (this.viewer.clientArea.width - firstLineIndent - (width + trimmedSpaceWidth));\n        if (isBidi && justify) {\n            if (totalSubWidth < 0) {\n                trimmedSpaceWidth = -trimmedSpaceWidth;\n            }\n            else {\n                subWidth = totalSubWidth;\n            }\n        }\n        if ((subWidth <= 0 && !this.is2013Justification) || (spaceCount === 0 && justify && !isBidi)) {\n            spaceCount = 0;\n            subWidth = 0;\n        }\n        else if (justify) {\n            // For justify alignment, element width will be updated based space count value.\n            // So when the element is paragraph end, need to set space count to zero.\n            if (!isParagraphEnd && spaceCount > 0 || (isParagraphEnd && this.is2013Justification && spaceCount > 0)) {\n                subWidth = subWidth / spaceCount;\n            }\n            else {\n                spaceCount = 0;\n            }\n        }\n        ////Generally, trailing space of line should get trimmed, if alignment type is Right or Left.\n        ////But, if right-to-left rendering is enabled and it is last line of paragraph than the trailing space should be preserved.\n        ////So, subtracted the trimmedSpaceWidth from subWidth.\n        else if (trimmedSpaceWidth > 0 && isBidi && isParagraphEnd) {\n            subWidth -= trimmedSpaceWidth;\n        }\n        // So set sub width to zero to layout the element in left alignment\n        // Need to remove is once after implementing subwidth update separatly\n        return [{ 'trimmedSpaceWidth': trimmedSpaceWidth, 'subWidth': subWidth, 'spaceCount': spaceCount, 'totalSpaceCount': totalSpaceCount }];\n    };\n    Layout.prototype.getSubWidthBasedOnTextWrap = function (lineWidget, justify, spaceCount, firstLineIndent, isParagraphEnd) {\n        var subWidths = [];\n        var width = 0;\n        var lineContent = '';\n        var wrapIndex = this.wrapPosition.length - 1;\n        var trimSpace = true;\n        for (var z = lineWidget.children.length - 1; z >= 0; z--) {\n            var elementBox = lineWidget.children[z];\n            if (elementBox.width > 0 && elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n                var elementText = elementBox.text;\n                lineContent = elementText + lineContent;\n                if (trimSpace && (elementText.trim() !== '' || elementText === '\\t')) {\n                    if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.endsWith(elementText)) {\n                        width += this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(elementText, elementBox.characterFormat, elementBox.scriptType);\n                    }\n                    else {\n                        width += elementBox.width;\n                    }\n                    trimSpace = false;\n                }\n                else if (!trimSpace) {\n                    width += elementBox.width;\n                }\n            }\n            else {\n                lineContent = 'a' + lineContent;\n                trimSpace = false;\n                if (!(elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && elementBox.textWrappingStyle !== 'Inline')) {\n                    width += elementBox.width;\n                }\n            }\n            if ((elementBox.padding.left > 0 || z === 0) && (wrapIndex >= 0)) {\n                var wrapPosition = this.wrapPosition[wrapIndex--];\n                while (wrapPosition.width <= 0 && (wrapIndex >= 0)) {\n                    wrapPosition = this.wrapPosition[wrapIndex--];\n                }\n                var info = this.getSubWidthInfo(lineWidget, wrapPosition.width, width, lineContent, spaceCount, justify, isParagraphEnd);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(info)) {\n                    width = 0;\n                    lineContent = '';\n                    subWidths.unshift(info);\n                }\n            }\n        }\n        return subWidths;\n    };\n    /* eslint-disable  */\n    Layout.prototype.isWordFittedByJustification = function (element, nextWordWidth) {\n        var line = element.line;\n        var paragraph = line.paragraph;\n        var paraFormat = paragraph.paragraphFormat;\n        var textAlignment = paraFormat.textAlignment;\n        var isParagraphEnd = line.isLastLine();\n        var firstLineIndent = 0;\n        if (line.isFirstLine()) {\n            firstLineIndent = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paraFormat.firstLineIndent);\n        }\n        var availableLineWidth = this.viewer.clientActiveArea.width;\n        if (nextWordWidth != 0 && availableLineWidth >= nextWordWidth / 2) {\n            var whiteSpaceCount = 0;\n            var widthInfo = void 0;\n            var totalSpaceCount = 0;\n            if (textAlignment !== 'Left' && this.viewer.textWrap && (!(textAlignment === 'Justify' && isParagraphEnd)\n                || (textAlignment === 'Justify' && paraFormat.bidi) || (this.is2013Justification && isParagraphEnd))) {\n                widthInfo = this.getSubWidth(line, textAlignment === 'Justify', whiteSpaceCount, firstLineIndent, isParagraphEnd);\n                whiteSpaceCount = widthInfo[0].spaceCount;\n                totalSpaceCount = widthInfo[0].totalSpaceCount;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widthInfo) && widthInfo.length == 1 && availableLineWidth > 0\n                && textAlignment === 'Justify' && this.documentHelper.compatibilityMode === 'Word2013' && !this.is2013Justification\n                && paraFormat.rightIndent === 0 && paraFormat.leftIndent === 0) {\n                var effectiveWidth = 0;\n                var totalSpaceWidth = this.getTotalSpaceWidth(line, totalSpaceCount);\n                var normalWidth = totalSpaceWidth / totalSpaceCount;\n                var justifyWidth = (availableLineWidth + totalSpaceWidth) / totalSpaceCount;\n                var diffFactor = ((justifyWidth - normalWidth) / normalWidth) * 100;\n                if (diffFactor <= 33) {\n                    effectiveWidth = totalSpaceWidth / 8;\n                }\n                else {\n                    effectiveWidth = totalSpaceWidth / 4;\n                }\n                if (availableLineWidth + effectiveWidth >= nextWordWidth) {\n                    this.viewer.clientActiveArea.x -= effectiveWidth;\n                    this.viewer.clientActiveArea.width += effectiveWidth;\n                    this.is2013Justification = true;\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Returns the total space width in line widget.\n     * @param {LineWidget} lineWidget - the line widget\n     * @param {number} count - the space count to be considered.\n     * @returns {number} the total space width.\n     */\n    Layout.prototype.getTotalSpaceWidth = function (lineWidget, count) {\n        var totalSpaceWidth = 0;\n        var totalSpaceCount = 0;\n        if (lineWidget) {\n            for (var i = 0; i < lineWidget.children.length; i++) {\n                var currentWidget = lineWidget.children[i];\n                if (currentWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n                    var spaceCount = currentWidget.text.length - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.removeSpace(currentWidget.text).length;\n                    if (spaceCount > 0) {\n                        var spaceWidth = this.documentHelper.textHelper.getWidth(' ', currentWidget.characterFormat, currentWidget.scriptType);\n                        totalSpaceWidth += spaceCount * spaceWidth;\n                        totalSpaceCount += spaceCount;\n                    }\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(count) && totalSpaceCount >= count) {\n                    break;\n                }\n            }\n        }\n        return totalSpaceWidth;\n    };\n    Layout.prototype.getSubWidthInfo = function (lineWidget, lastWrapPositionWidth, width, lineContent, spaceCount, justify, isParagraphEnd) {\n        if (lastWrapPositionWidth > 0) {\n            var wrappedSubWidth = lastWrapPositionWidth - width;\n            lineContent = lineContent.trim();\n            spaceCount = lineContent.length - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.removeSpace(lineContent).length;\n            // TODO: Consider first line indent.\n            var totalSubWidth = wrappedSubWidth;\n            if (totalSubWidth <= 0 || (spaceCount === 0 && justify && !lineWidget.paragraph.paragraphFormat.bidi)) {\n                spaceCount = 0;\n                totalSubWidth = 0;\n            }\n            else if (justify) {\n                // For justify alignment, element width will be updated based space count value.\n                // So when the element is paragraph end, need to set space count to zero.\n                if (!isParagraphEnd && spaceCount > 0) {\n                    totalSubWidth = totalSubWidth / spaceCount;\n                }\n                else {\n                    spaceCount = 0;\n                }\n            }\n            return { 'trimmedSpaceWidth': 0, 'subWidth': totalSubWidth, 'spaceCount': spaceCount, 'totalSpaceCount': spaceCount };\n        }\n        return undefined;\n    };\n    Layout.prototype.getBeforeSpacing = function (paragraph, pageIndex) {\n        var beforeSpacing = 0;\n        if (!this.documentHelper.dontUseHtmlParagraphAutoSpacing) {\n            var previousBlock = paragraph.previousWidget;\n            if (previousBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                var afterSpacing = this.getAfterSpacing(previousBlock);\n                var before = paragraph.paragraphFormat.beforeSpacing;\n                if (paragraph.paragraphFormat.spaceBeforeAuto) {\n                    before = 14;\n                }\n                if (afterSpacing < before) {\n                    beforeSpacing = before - afterSpacing;\n                }\n            }\n            else if (previousBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                if (paragraph.paragraphFormat.spaceBeforeAuto) {\n                    beforeSpacing = 14;\n                }\n                else {\n                    beforeSpacing = paragraph.paragraphFormat.beforeSpacing;\n                }\n            }\n            else {\n                if (pageIndex > 0 && paragraph === paragraph.bodyWidget.childWidgets[0]) {\n                    if (this.documentHelper.pages[pageIndex].sectionIndex !== this.documentHelper.pages[pageIndex - 1].sectionIndex) {\n                        if (paragraph.paragraphFormat.spaceBeforeAuto) {\n                            beforeSpacing = 14;\n                        }\n                        else {\n                            beforeSpacing = paragraph.paragraphFormat.beforeSpacing;\n                        }\n                    }\n                }\n                else {\n                    if (paragraph.paragraphFormat.spaceBeforeAuto) {\n                        beforeSpacing = 0;\n                    }\n                    else {\n                        beforeSpacing = paragraph.paragraphFormat.beforeSpacing;\n                    }\n                }\n            }\n        }\n        else {\n            beforeSpacing = paragraph.paragraphFormat.beforeSpacing;\n        }\n        if (this.isSameStyle(paragraph, false)) {\n            return 0;\n        }\n        else {\n            return _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(beforeSpacing);\n        }\n    };\n    Layout.prototype.getAfterSpacing = function (paragraph) {\n        var afterSpacing = paragraph.paragraphFormat.afterSpacing;\n        if (!this.documentHelper.dontUseHtmlParagraphAutoSpacing && paragraph.paragraphFormat.spaceAfterAuto) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.nextWidget) && paragraph.isInsideTable) {\n                afterSpacing = 0;\n            }\n            else {\n                afterSpacing = 14;\n            }\n        }\n        if (this.isSameStyle(paragraph, true)) {\n            return 0;\n        }\n        else {\n            return afterSpacing;\n        }\n    };\n    Layout.prototype.getLineSpacing = function (paragraph, maxHeight, alterLineSpacing) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.paragraphFormat)) {\n            return 0;\n        }\n        var lineSpacing = 0;\n        switch (paragraph.paragraphFormat.lineSpacingType) {\n            case 'AtLeast':\n            case 'Exactly':\n                lineSpacing = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paragraph.paragraphFormat.lineSpacing);\n                break;\n            default:\n                lineSpacing = paragraph.paragraphFormat.lineSpacing;\n                if (alterLineSpacing) {\n                    lineSpacing = lineSpacing - 1;\n                }\n                lineSpacing = lineSpacing * maxHeight;\n                break;\n        }\n        return lineSpacing;\n    };\n    Layout.prototype.isParagraphFirstLine = function (paragraph, line) {\n        var widget = paragraph;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widget.childWidgets) || widget.childWidgets.indexOf(line) === 0) {\n            //If the line elements conatins the elements from previous paragraph then need to retun false.\n            //Example scenario, Field start and field end in different paragraphs.\n            if (line.children.length > 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.previousWidget)\n                && paragraph.previousWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                return line.paragraph.index !== paragraph.previousWidget.index;\n            }\n            return true; //If the line elements count is zero then also need to return true.\n        }\n        return false;\n    };\n    Layout.prototype.isParagraphLastLine = function (element) {\n        var paragraph = element.line.paragraph;\n        var lastLineWidget = paragraph.childWidgets[paragraph.childWidgets.length - 1];\n        var lastInline = lastLineWidget.children[lastLineWidget.children.length - 1];\n        if (element === lastInline) {\n            return (lastInline instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox) || ((!(lastInline instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && lastInline.text === '\\v')));\n        }\n        return false;\n    };\n    Layout.prototype.getTextIndexAfterSpace = function (text, startIndex) {\n        var length = text.length;\n        var index = 0;\n        var hyphenIndex = 0;\n        index = text.indexOf(' ', startIndex) + 1;\n        hyphenIndex = text.indexOf('-', startIndex) + 1;\n        if (hyphenIndex == 1) {\n            hyphenIndex = text.indexOf('-', (hyphenIndex + 1)) + 1;\n        }\n        if (hyphenIndex > 0 && index > 0) {\n            index = Math.min(index, hyphenIndex);\n        }\n        else if (hyphenIndex > 0 && index == 0) {\n            index = hyphenIndex;\n        }\n        var nextIndex = index;\n        if (nextIndex === 0 || nextIndex === length) {\n            return nextIndex;\n        }\n        while (text[nextIndex] === ' ') {\n            nextIndex++;\n            if (nextIndex === length) {\n                break;\n            }\n        }\n        return nextIndex;\n    };\n    //#region Table\n    Layout.prototype.moveNextWidgetsToTable = function (tableWidget, currentRow, moveFromNext) {\n        var rowIndex = currentRow.indexInOwner;\n        var currentTable = tableWidget[tableWidget.length - 1];\n        if (moveFromNext) {\n            rowIndex += 1;\n        }\n        var nextWidgets = currentRow.containerWidget.childWidgets.splice(rowIndex);\n        for (var i = 0; i < nextWidgets.length; i++) {\n            currentTable.childWidgets.push(nextWidgets[i]);\n            nextWidgets[i].containerWidget = currentTable;\n        }\n    };\n    Layout.prototype.addTableCellWidget = function (cell, area, maxCellMarginTop, maxCellMarginBottom) {\n        //let tableCellWidget: TableCellWidget = new TableCellWidget(cell);\n        var prevColumnIndex = 0;\n        var cellspace = 0;\n        var left = 0;\n        var top = maxCellMarginTop;\n        var right = 0;\n        var bottom = maxCellMarginBottom;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.cellFormat)) {\n            if (cell.cellFormat.containsMargins()) {\n                left = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.cellFormat.leftMargin) ? _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.leftMargin) : _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.cellFormat.leftMargin);\n                right = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.cellFormat.rightMargin) ? _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.rightMargin) : _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.cellFormat.rightMargin);\n            }\n            else {\n                if (cell.columnIndex === 0 && cell.ownerRow.rowFormat.hasValue('leftMargin')) {\n                    left = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.ownerRow.rowFormat.leftMargin);\n                }\n                else {\n                    left = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.leftMargin);\n                }\n                if (cell.columnIndex === cell.ownerTable.tableHolder.columns.length - 1 &&\n                    cell.ownerRow.rowFormat.hasValue('rightMargin')) {\n                    right = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.ownerRow.rowFormat.rightMargin);\n                }\n                else {\n                    right = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.rightMargin);\n                }\n            }\n        }\n        cellspace = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.ownerTable) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.ownerTable.tableFormat) ? _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.cellSpacing) : 0;\n        if (cellspace === 0 && cell.ownerTable.isContainInsideTable && !cell.ownerTable.header) {\n            var topBorder = _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget.getCellTopBorder(cell);\n            if (cell.topMargin === 0 && topBorder.lineWidth === 0.75) {\n                top += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(0.5);\n            }\n            var leftBorder = _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget.getCellLeftBorder(cell);\n            if (cell.leftMargin <= 0.5 && leftBorder.lineWidth === 0.75) {\n                left += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(0.8);\n            }\n        }\n        cell.margin = new _page__WEBPACK_IMPORTED_MODULE_6__.Margin(left, top, right, bottom);\n        var autofit = cell.ownerTable.tableFormat.allowAutoFit;\n        var cellWidth = cell.cellFormat.cellWidth;\n        if (cell.cellFormat.preferredWidthType === 'Percent' && cell.cellFormat.preferredWidth !== 0 && cellWidth <= 0) {\n            var width = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.ownerTable.getTableClientWidth(cell.ownerTable.getContainerWidth()));\n            cellWidth = cell.ownerTable.getCellWidth(cell.cellFormat.preferredWidth, cell.cellFormat.preferredWidthType, width, cell);\n        }\n        // if (cellWidth > cell.cellFormat.preferredWidth && cell.cellFormat.preferredWidth !== 0 && cell.cellFormat.preferredWidthType !== 'Percent' && cell.ownerTable.tableFormat.preferredWidthType !== 'Percent' && isNullOrUndefined(cell.ownerTable.positioning) && (!cell.ownerTable.isContainInsideTable) && (!(cell.ownerTable.containerWidget instanceof TableCellWidget))) {\n        //     cellWidth = cell.cellFormat.preferredWidth;\n        // }\n        cell.width = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cellWidth);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.previousWidget)) {\n            prevColumnIndex = cell.previousWidget.columnIndex + cell.previousWidget.cellFormat.columnSpan;\n        }\n        var prevSpannedCellWidth = 0;\n        if (prevColumnIndex < cell.columnIndex) {\n            prevSpannedCellWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.ownerTable.tableHolder.getPreviousSpannedCellWidth(prevColumnIndex, cell.columnIndex));\n            if (prevColumnIndex === 0) {\n                prevSpannedCellWidth = prevSpannedCellWidth - cellspace / 2;\n            }\n        }\n        cell.x = area.x + prevSpannedCellWidth + cell.margin.left;\n        cell.y = area.y + cell.margin.top + cellspace;\n        cell.width = cell.width - cell.margin.left - cell.margin.right;\n        if (cellspace > 0) {\n            cell.x += cellspace;\n            if (cell.ownerTable.tableHolder.columns.length === 1) {\n                cell.width -= cellspace * 2;\n            }\n            else if (cell.columnIndex === 0 || cell.columnIndex === cell.ownerTable.tableHolder.columns.length - 1) {\n                cell.width -= ((cellspace * 2) - cellspace / 2);\n            }\n            else {\n                cell.width -= cellspace;\n            }\n        }\n        var leftBorderWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(_page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget.getCellLeftBorder(cell).getLineWidth());\n        var rightBorderWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(_page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget.getCellRightBorder(cell).getLineWidth());\n        // update the margins values respect to layouting of borders.\n        // for normal table cells only left border is rendred. for last cell left and right border is rendred.\n        // this border widths are not included in margins.\n        var linestyle = false;\n        cell.leftBorderWidth = !cell.ownerTable.isBidiTable ? leftBorderWidth : rightBorderWidth;\n        var isLeftStyleNone = (cell.cellFormat.borders.left.lineStyle === 'None');\n        var isRightStyleNone = (cell.cellFormat.borders.right.lineStyle === 'None');\n        cell.x += (!isLeftStyleNone) ? 0 : (cell.leftBorderWidth > 0) ? 0 : cell.leftBorderWidth;\n        cell.width -= (!isLeftStyleNone) ? 0 : (cell.leftBorderWidth > 0) ? 0 : cell.leftBorderWidth;\n        var lastCell = !cell.ownerTable.isBidiTable ? cell.cellIndex === cell.ownerRow.childWidgets.length - 1\n            : cell.cellIndex === 0;\n        if (cellspace > 0 || cell.columnIndex === cell.ownerTable.tableHolder.columns.length - 1 ||\n            cell.index === cell.containerWidget.childWidgets.length - 1) {\n            cell.rightBorderWidth = !cell.ownerTable.isBidiTable ? rightBorderWidth : leftBorderWidth;\n            if (!cell.ownerTable.tableFormat.allowAutoFit) {\n                cell.width -= cell.rightBorderWidth;\n            }\n            if (!this.isInsertTable()) {\n                linestyle = this.checkPreviousMargins(cell.ownerTable);\n            }\n        }\n        //Add the border widths to respective margin side.\n        //cell.margin.left += (isLeftStyleNone) ? 0 : (cell.leftBorderWidth);\n        cell.margin.right += (isRightStyleNone && !linestyle) ? 0 : (cell.rightBorderWidth);\n        //cell.ownerWidget = owner;\n        return cell;\n    };\n    Layout.prototype.checkPreviousMargins = function (table) {\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[row.childWidgets.length - 1];\n                if (cell.cellFormat.borders.right.lineStyle !== 'None') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Layout.prototype.addWidgetToTable = function (viewer, tableCollection, rowCollection, row, footnotes, endRowWidget, isInitialLayout, startRowIndex, isRepeatRowHeader) {\n        //Adds table row widget to owner table widget.\n        var tableWidget = tableCollection[0];\n        var index = tableWidget.childWidgets.length;\n        var prevWidget = undefined;\n        var rowWidgetIndex = rowCollection.indexOf(row);\n        var footnoteWidgets = [];\n        if (rowWidgetIndex > 0) {\n            prevWidget = rowCollection[rowWidgetIndex - 1];\n            // Need to update on this further\n        }\n        else if (row.previousRenderedWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget &&\n            row.previousRenderedWidget.ownerTable.equals(row.ownerTable)) {\n            // Need to update on this further\n            prevWidget = row.previousRenderedWidget;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevWidget)) {\n            tableWidget = prevWidget.containerWidget;\n            // index = tableWidget.childWidgets.length;\n            index = tableWidget.childWidgets.indexOf(prevWidget) + 1;\n            if (Math.round(row.y) !== Math.round(prevWidget.y + prevWidget.height)) {\n                var prevIndex = tableCollection.indexOf(tableWidget);\n                if (prevIndex + 1 >= tableCollection.length) {\n                    //Creates new table widget for splitted rows.\n                    this.addTableWidget(viewer.clientActiveArea, tableCollection, true);\n                }\n                tableWidget = tableCollection[prevIndex + 1];\n                index = tableWidget.childWidgets.length;\n            }\n            if (rowWidgetIndex > 0) {\n                index = 0;\n            }\n        }\n        this.updateRowHeightBySpannedCell(tableWidget, row, index);\n        this.updateRowHeightByCellSpacing(tableCollection, row, viewer);\n        //Remove widget from previous container after splitteing\n        if (row.containerWidget && row.containerWidget !== tableWidget &&\n            row.containerWidget.childWidgets.indexOf(row) !== -1) {\n            row.containerWidget.childWidgets.splice(row.containerWidget.childWidgets.indexOf(row), 1);\n        }\n        if (tableWidget.childWidgets.indexOf(row) === -1) {\n            tableWidget.childWidgets.splice(index, 0, row);\n            if (isRepeatRowHeader) {\n                tableWidget.bodyWidget.page.repeatHeaderRowTableWidget = true;\n            }\n        }\n        row.containerWidget = tableWidget;\n        if (!row.ownerTable.isInsideTable) {\n            if (footnotes.length > 0) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footnotes)) {\n                    footnoteWidgets = this.getFootnoteBody(footnotes);\n                }\n            }\n            else {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row)) {\n                    for (var i = 0; i < row.childWidgets.length; i++) {\n                        var cell = row.childWidgets[i];\n                        for (var j = 0; j < cell.childWidgets.length; j++) {\n                            var footnoteCollection = this.getFootNoteWidgetsOf(cell.childWidgets[j], true);\n                            for (var k = 0; k < footnoteCollection.length; k++) {\n                                footnoteWidgets.splice(footnoteWidgets.length, 0, footnoteCollection[k]);\n                            }\n                        }\n                    }\n                }\n            }\n            if (footnoteWidgets.length > 0 && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footnoteWidgets[0].containerWidget)) {\n                this.layoutFootnoteInSplittedRow(row, footnoteWidgets);\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footnoteWidgets) && footnoteWidgets.length > 0 && row.bodyWidget.previousRenderedWidget !== undefined && startRowIndex !== row.bodyWidget.page.index && footnoteWidgets[0].containerWidget.page.index !== row.bodyWidget.page.index) {\n                this.moveFootNotesToPage(footnoteWidgets, footnoteWidgets[0].containerWidget.page.bodyWidgets[0], row.bodyWidget);\n            }\n            else if (footnoteWidgets.length > 0 && !this.isInitialLoad && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.bodyWidget.page.footnoteWidget)) {\n                this.layoutfootNote(row.bodyWidget.page.footnoteWidget);\n            }\n            footnotes.length = 0;\n        }\n        tableWidget.height = tableWidget.height + row.height;\n        if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tableWidget.containerWidget)\n                && tableWidget.containerWidget.childWidgets.indexOf(tableWidget) >= 0 &&\n                !(tableWidget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.HeaderFooterWidget)) {\n                tableWidget.containerWidget.height += row.height;\n            }\n        }\n        this.updateHeightForRowWidget(viewer, false, tableCollection, rowCollection, row, false, endRowWidget, isInitialLayout);\n        viewer.cutFromTop(row.y + row.height);\n        this.viewer.clientActiveArea.height -= this.getFootNoteHeight(footnoteWidgets);\n        if (!row.ownerTable.isInsideTable) {\n            this.existFootnoteHeight = 0;\n        }\n    };\n    Layout.prototype.layoutFootnoteInSplittedRow = function (row, footnoteWidgets) {\n        if (footnoteWidgets && footnoteWidgets.length > 0) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.ownerTable.bodyWidget.page.footnoteWidget)) {\n                this.addEmptyFootNoteToBody(row.ownerTable.bodyWidget);\n            }\n            var footnoteWidget = row.ownerTable.bodyWidget.page.footnoteWidget;\n            if (footnoteWidget) {\n                for (var j = 0; j < footnoteWidgets.length; j++) {\n                    footnoteWidget.bodyWidgets.push(footnoteWidgets[j]);\n                    footnoteWidgets[j].containerWidget = footnoteWidget;\n                }\n                this.layoutfootNote(footnoteWidget);\n            }\n        }\n    };\n    Layout.prototype.getFootNoteHeight = function (footnoteWidgets) {\n        var height = 0;\n        if (Array.isArray(footnoteWidgets)) {\n            for (var i = 0; i < footnoteWidgets.length; i++) {\n                height += this.getFootnoteHeightInternal(footnoteWidgets[i], i);\n            }\n        }\n        else {\n            height = this.getFootnoteHeightInternal(footnoteWidgets, 0);\n        }\n        return height;\n    };\n    Layout.prototype.getFootnoteHeightInternal = function (footnoteWidgets, index) {\n        var height = 0;\n        for (var i = 0; i < footnoteWidgets.childWidgets.length; i++) {\n            height += footnoteWidgets.childWidgets[i].height;\n            if ((footnoteWidgets.indexInOwner === 0 || (footnoteWidgets.indexInOwner !== -1 && footnoteWidgets.containerWidget\n                && this.existFootnoteHeight === 0 && index === 0)) && i === 0) {\n                height += footnoteWidgets.containerWidget.margin.top;\n            }\n        }\n        return height;\n    };\n    Layout.prototype.updateRowHeightBySpannedCell = function (tableWidget, row, insertIndex) {\n        var rowSpan = 1;\n        if (tableWidget.childWidgets.length === 0 || insertIndex === 0) {\n            this.updateRowHeight(row, row);\n            return;\n        }\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cellWidget = row.childWidgets[i];\n            rowSpan = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget.cellFormat)) ? rowSpan : cellWidget.cellFormat.rowSpan;\n            this.updateSpannedRowCollection(rowSpan, row, cellWidget);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.ownerTable)) {\n            for (var i = 0; i < row.ownerTable.spannedRowCollection.length; i++) {\n                if (row.ownerTable.spannedRowCollection.keys[i] === row.index) {\n                    // Back track to previous table row widgets and update it height if vertical merge ends with this row.\n                    for (var j = 0; j < insertIndex; j++) {\n                        var prevRowWidget = tableWidget.childWidgets[j];\n                        this.updateRowHeight(prevRowWidget, row);\n                    }\n                    row.ownerTable.spannedRowCollection.remove(row.ownerTable.spannedRowCollection.keys[i]);\n                    break;\n                }\n            }\n        }\n    };\n    Layout.prototype.updateRowHeight = function (prevRowWidget, row) {\n        var rowIndex = row.index;\n        var rowSpan = 1;\n        for (var i = 0; i < prevRowWidget.childWidgets.length; i++) {\n            var cellWidget = prevRowWidget.childWidgets[i];\n            rowSpan = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget.cellFormat)) ? rowSpan : cellWidget.cellFormat.rowSpan;\n            //To update Row height- if row has row span value greater than 1, need to add it in spannedRowCollection            \n            this.updateSpannedRowCollection(rowSpan, row, cellWidget);\n            if (rowIndex - cellWidget.rowIndex === rowSpan - 1) {\n                var mergedCellHeight = cellWidget.y + cellWidget.height + cellWidget.margin.bottom - row.y;\n                if ((row.rowFormat.heightType !== 'Exactly' || (row.rowFormat.heightType === 'Exactly' && row.rowFormat.height > mergedCellHeight)) && row.height < mergedCellHeight) {\n                    row.height = mergedCellHeight;\n                }\n            }\n        }\n    };\n    //if row has row span value greater than 1, need to add it in spannedRowCollection\n    Layout.prototype.updateSpannedRowCollection = function (rowSpan, row, cellWidget) {\n        if (rowSpan > 1 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.ownerTable)) {\n            //Checks the rowspan is already exist in the list\n            if (!row.ownerTable.spannedRowCollection.containsKey(row.index + rowSpan - 1)) {\n                row.ownerTable.spannedRowCollection.add(row.index + rowSpan - 1, row.index);\n            }\n        }\n    };\n    Layout.prototype.updateRowHeightByCellSpacing = function (tableCollection, row, viewer) {\n        if (row.ownerTable.tableFormat.cellSpacing > 0) {\n            // In the Case of tableWidget is greater than one and rowWidget is start at the Top Position of the page. \n            // In such case we have update the row height with half of cell spacing.\n            // Remaining cases we have to update the entire hight\n            if (tableCollection.length > 1 && row.y === viewer.clientArea.y && viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer) {\n                row.height = row.height - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(row.ownerTable.tableFormat.cellSpacing) / 2;\n            }\n        }\n    };\n    Layout.prototype.isRowSpanEnd = function (row, viewer) {\n        var rowIndex = row.index;\n        var rowSpan = 1;\n        for (var i = 0; i < this.documentHelper.splittedCellWidgets.length; i++) {\n            var splittedCell = this.documentHelper.splittedCellWidgets[i];\n            rowSpan = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedCell) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedCell.cellFormat)) ? rowSpan : splittedCell.cellFormat.rowSpan;\n            if (rowIndex - splittedCell.rowIndex === rowSpan - 1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    Layout.prototype.isVerticalMergedCellContinue = function (row) {\n        var colIndex = 0;\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cell = row.childWidgets[i];\n            if (colIndex < cell.columnIndex) {\n                return true;\n            }\n            colIndex += cell.cellFormat.columnSpan;\n        }\n        return colIndex < row.ownerTable.tableHolder.columns.length;\n    };\n    Layout.prototype.splitWidgets = function (tableRowWidget, viewer, tableCollection, rowCollection, splittedWidget, isLastRow, footNoteCollection, lineIndexInCell, cellIndex, isMultiColumnSplit, isRowSpan) {\n        if (!(isMultiColumnSplit && lineIndexInCell === 0) && (this.isFirstLineFitForRow(viewer.clientArea.bottom, tableRowWidget) && tableRowWidget.childWidgets.length > 0)) {\n            splittedWidget = this.getSplittedWidgetForRow(viewer.clientArea.bottom, tableCollection, rowCollection, tableRowWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, undefined, isRowSpan);\n            footNoteCollection = [];\n            if (this.documentHelper.splittedCellWidgets.length > 0 || splittedWidget !== tableRowWidget) {\n                if (isLastRow) {\n                    for (var i = 0; i < splittedWidget.childWidgets.length; i++) {\n                        var cell = splittedWidget.childWidgets[i];\n                        if (cell.rowIndex !== splittedWidget.index) {\n                            splittedWidget.childWidgets.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n                //Adds the splitted widget of a vertical merged cell, to next row widget in the next page.\n                this.insertSplittedCellWidgets(viewer, tableCollection, splittedWidget, tableRowWidget.index - 1);\n            }\n        }\n        else {\n            //Adds the splitted widget of a vertical merged cell, to next row widget in the next page.\n            this.insertSplittedCellWidgets(viewer, tableCollection, splittedWidget, tableRowWidget.index - 1);\n        }\n        return splittedWidget;\n    };\n    Layout.prototype.getSplittedWidgetForRow = function (bottom, tableCollection, rowCollection, tableRowWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count, isRowSpan) {\n        var splittedWidget = undefined;\n        var rowIndex = tableRowWidget.index;\n        this.isRelayoutneed = false;\n        var issplit = false;\n        var cellHeight = tableRowWidget.height;\n        var previousHeight = cellHeight;\n        var maximumCellWidgetHeight = 0;\n        for (var i = 0; i < tableRowWidget.childWidgets.length; i++) {\n            var cellWidget = tableRowWidget.childWidgets[i];\n            if (i === 0 && cellWidget.childWidgets.length > 0 && cellWidget.columnIndex === 0\n                && cellWidget.cellFormat.rowSpan === 1 && this.documentHelper.compatibilityMode === 'Word2013'\n                && this.documentHelper.splittedCellWidgets.length === 0 && rowCollection.length === 1) {\n                var firstBlock = this.documentHelper.getFirstParagraphInCell(cellWidget);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(firstBlock) && firstBlock.paragraphFormat.keepWithNext && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.getPreviousBlock(tableRowWidget))) {\n                    return tableRowWidget;\n                }\n            }\n            var splittedCell = this.getSplittedWidget(bottom, true, tableCollection, rowCollection, cellWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count);\n            if (isMultiColumnSplit && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedCell) && splittedCell.childWidgets.length !== 0 && cellHeight > cellWidget.height) {\n                cellHeight = cellWidget.height;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footNoteCollection) && footNoteCollection.length > 0) {\n                for (var j = 0; j < footNoteCollection.length; j++) {\n                    if (footNoteCollection[j].paragraph.containerWidget.indexInOwner === -1) {\n                        footNoteCollection.splice(j, 1);\n                    }\n                }\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedCell) && cellWidget === tableRowWidget.childWidgets[tableRowWidget.childWidgets.length - 1] && this.isRowSpanEnd(tableRowWidget, this.viewer) && this.documentHelper.splittedCellWidgets.length > 0 && isRowSpan) {\n                splittedWidget = this.getSplittedWidgetForSpannedRow(bottom, tableRowWidget, tableCollection, rowCollection, footNoteCollection);\n                splittedCell = undefined;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedCell)) {\n                if (splittedCell === cellWidget) {\n                    // if the previous cell Widget is already splitted, in that case need to combine the splitted row widgets to single row widget.\n                    if (rowCollection.length > 1) {\n                        this.combineSplittedRowWidgets(rowCollection, previousHeight);\n                    }\n                    //Returns if the whole content of the row does not fit in current page.\n                    return tableRowWidget;\n                }\n                var nestedCellHeight = 0;\n                if (cellWidget.ownerTable.isInsideTable) {\n                    for (var k = 0; k < cellWidget.childWidgets.length; k++) {\n                        nestedCellHeight += cellWidget.childWidgets[k].height;\n                    }\n                }\n                if (cellWidget.ownerTable.isInsideTable) {\n                    if (maximumCellWidgetHeight < nestedCellHeight) {\n                        maximumCellWidgetHeight = nestedCellHeight;\n                    }\n                }\n                else if (cellWidget.height > maximumCellWidgetHeight) {\n                    maximumCellWidgetHeight = cellWidget.height;\n                }\n                if (tableRowWidget.childWidgets.indexOf(splittedCell) !== -1) {\n                    tableRowWidget.childWidgets.splice(tableRowWidget.childWidgets.indexOf(splittedCell), 1);\n                }\n                tableRowWidget.height -= splittedCell.height;\n                if (i === 0 || tableRowWidget.height < maximumCellWidgetHeight + cellWidget.margin.top + cellWidget.margin.bottom) {\n                    tableRowWidget.height = maximumCellWidgetHeight + cellWidget.margin.top + cellWidget.margin.bottom;\n                }\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget)) {\n                    //Creates new widget, to hold the splitted contents.\n                    splittedWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget();\n                    splittedWidget.containerWidget = tableRowWidget.containerWidget;\n                    splittedWidget.index = tableRowWidget.index;\n                    splittedWidget.rowFormat = tableRowWidget.rowFormat;\n                    splittedWidget.isRenderBookmarkEnd = tableRowWidget.isRenderBookmarkEnd;\n                    this.updateWidgetLocation(tableRowWidget, splittedWidget);\n                    // splittedWidget.height = 0;\n                    rowCollection.push(splittedWidget);\n                }\n                var rowSpan = 1;\n                rowSpan = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedCell) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedCell.cellFormat)) ? rowSpan : splittedCell.cellFormat.rowSpan;\n                if (rowIndex - splittedCell.rowIndex === rowSpan - 1\n                    && splittedWidget.height < splittedCell.height + splittedCell.margin.top + splittedCell.margin.bottom) {\n                    splittedWidget.height = splittedCell.height + splittedCell.margin.top + splittedCell.margin.bottom;\n                }\n                else {\n                    if (tableRowWidget.rowFormat.heightType === 'Exactly' || (tableRowWidget.rowFormat.heightType === 'AtLeast' &&\n                        splittedWidget.height < tableRowWidget.rowFormat.height)) {\n                        //Sets the height for row widget if height type is exact or at least.\n                        splittedWidget.height = tableRowWidget.rowFormat.height;\n                    }\n                }\n                splittedWidget.childWidgets.push(splittedCell);\n                splittedCell.containerWidget = splittedWidget;\n                this.isRelayoutneed = true;\n                var count_1 = i;\n                while (count_1 > 0 && !issplit) {\n                    var cellWidget_1 = tableRowWidget.childWidgets[count_1 - 1];\n                    splittedCell = this.getSplittedWidget(bottom, true, tableCollection, rowCollection, cellWidget_1, footNoteCollection);\n                    splittedWidget.childWidgets.splice(0, 0, splittedCell);\n                    splittedCell.containerWidget = splittedWidget;\n                    count_1--;\n                }\n                issplit = true;\n            }\n        }\n        if (isMultiColumnSplit && cellHeight !== previousHeight) {\n            for (var i = 0; i < tableRowWidget.childWidgets.length; i++) {\n                tableRowWidget.childWidgets[i].height = cellHeight;\n            }\n            tableRowWidget.height = cellHeight;\n        }\n        return splittedWidget;\n    };\n    Layout.prototype.combineSplittedRowWidgets = function (rowCollection, previousRowHeight) {\n        var existingRow = rowCollection[0];\n        for (var i = 1; i < rowCollection.length; i++) {\n            var row = rowCollection[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var existingCell = existingRow.childWidgets[j];\n                var cell = row.childWidgets[j];\n                if (cell.childWidgets.length > 0) {\n                    for (var k = 0; k < cell.childWidgets.length; k++) {\n                        var block = cell.childWidgets[k];\n                        if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                            var existingPara = existingCell.childWidgets[k];\n                            if (existingPara.index === block.index) {\n                                var paragraph = block;\n                                if (paragraph.childWidgets.length > 0) {\n                                    for (var l = 0; l < paragraph.childWidgets.length; l++) {\n                                        var line = paragraph.childWidgets[l];\n                                        existingPara.childWidgets.push(line);\n                                        line.paragraph = existingPara;\n                                        existingPara.height += line.height;\n                                    }\n                                }\n                            }\n                            else {\n                                existingCell.childWidgets.push(block);\n                                block.containerWidget = existingCell;\n                            }\n                            existingCell.height += block.height;\n                        }\n                        else if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                            existingCell.childWidgets.push(block);\n                            block.containerWidget = existingCell;\n                            existingCell.height += block.height;\n                        }\n                    }\n                }\n            }\n            rowCollection.splice(i, 1);\n        }\n        existingRow.height = previousRowHeight;\n    };\n    Layout.prototype.getSplittedWidgetForSpannedRow = function (bottom, tableRowWidget, tableCollection, rowCollection, footNoteCollection) {\n        var splittedWidget = undefined;\n        var splittedCell = undefined;\n        var issplit = false;\n        var isNeedToInsertNextCell = false;\n        for (var i = 0; i < this.documentHelper.splittedCellWidgets.length; i++) {\n            splittedCell = this.documentHelper.splittedCellWidgets[i];\n            var nextSplittedCell = this.documentHelper.splittedCellWidgets[i + 1];\n            var nextSplittedCellColumnIndex = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextSplittedCell) ? nextSplittedCell.columnIndex : 0;\n            // splitted cell widget column index\n            var previousColumnIndex = this.documentHelper.splittedCellWidgets[i].columnIndex;\n            var splitCell = this.documentHelper.splittedCellWidgets[i];\n            // previousColumnIndex value is updated based on the previous row spanned cell widgets.\n            while (splitCell && splitCell.cellFormat.rowSpan === this.documentHelper.splittedCellWidgets[i].cellFormat.rowSpan && previousColumnIndex > 0 && !issplit) {\n                previousColumnIndex = splitCell.columnIndex;\n                var row = splitCell.containerWidget;\n                splitCell = row.getCell(row.rowIndex, previousColumnIndex - 1);\n            }\n            // splitted cell widget column index\n            var nextColumnIndex = this.documentHelper.splittedCellWidgets[i].columnIndex;\n            splitCell = this.documentHelper.splittedCellWidgets[i];\n            // nextColumnIndex value is updated based on the next row spanned cell widgets.\n            while (splitCell && splitCell.cellFormat.rowSpan === this.documentHelper.splittedCellWidgets[i].cellFormat.rowSpan && nextColumnIndex < splitCell.containerWidget.childWidgets.length - 1 && (!issplit || isNeedToInsertNextCell)) {\n                nextColumnIndex = splitCell.columnIndex;\n                var row = splitCell.containerWidget;\n                splitCell = row.getCell(row.rowIndex, nextColumnIndex + 1);\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget)) {\n                splittedWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget();\n                splittedWidget.containerWidget = tableRowWidget.containerWidget;\n                splittedWidget.index = tableRowWidget.index;\n                splittedWidget.rowFormat = tableRowWidget.rowFormat;\n                splittedWidget.isRenderBookmarkEnd = tableRowWidget.isRenderBookmarkEnd;\n                this.updateWidgetLocation(tableRowWidget, splittedWidget);\n                rowCollection.push(splittedWidget);\n            }\n            splittedWidget.childWidgets.push(splittedCell);\n            splittedCell.containerWidget = splittedWidget;\n            this.isRelayoutneed = true;\n            // insert cell widgets to left of the splitted cell widget.\n            while (previousColumnIndex > 0 && !issplit) {\n                var cellWidget = tableRowWidget.getCell(tableRowWidget.index, previousColumnIndex - 1);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget)) {\n                    previousColumnIndex--;\n                    continue;\n                }\n                splittedCell = this.getSplittedWidget(bottom, true, tableCollection, rowCollection, cellWidget, footNoteCollection);\n                splittedWidget.childWidgets.splice(0, 0, splittedCell);\n                splittedCell.containerWidget = splittedWidget;\n                previousColumnIndex--;\n            }\n            // insert cell widgets to right of the splitted cell widget.\n            while (nextColumnIndex < tableRowWidget.childWidgets[tableRowWidget.childWidgets.length - 1].columnIndex && (!issplit || isNeedToInsertNextCell)) {\n                var cellWidget = tableRowWidget.getCell(tableRowWidget.index, nextColumnIndex + 1);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget)) {\n                    nextColumnIndex++;\n                    continue;\n                }\n                // check whether the cellWidget column index is greater than the next splitted cell widget column index.\n                // if so, then break the loop and insert the splitted cell widget and remaining cell widgets.\n                if (nextSplittedCell && cellWidget.columnIndex > nextSplittedCellColumnIndex) {\n                    isNeedToInsertNextCell = true;\n                    break;\n                }\n                splittedCell = this.getSplittedWidget(bottom, true, tableCollection, rowCollection, cellWidget, footNoteCollection);\n                splittedWidget.childWidgets.push(splittedCell);\n                splittedCell.containerWidget = splittedWidget;\n                nextColumnIndex++;\n            }\n            issplit = true;\n        }\n        return splittedWidget;\n    };\n    Layout.prototype.getFootNoteHeightInLine = function (line) {\n        var height = 0;\n        for (var i = 0; i < line.children.length; i++) {\n            var element = line.children[i];\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootnoteElementBox) {\n                height += this.getFootNoteHeight(element.bodyWidget);\n            }\n        }\n        return height;\n    };\n    Layout.prototype.getFootnoteFromLine = function (line, footNoteCollection) {\n        for (var i = 0; i < line.children.length; i++) {\n            if (line.children[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootnoteElementBox) {\n                footNoteCollection.push(line.children[i]);\n            }\n        }\n    };\n    Layout.prototype.updateWidgetsToTable = function (tableWidgets, rowWidgets, row, rearrangeRow, lineIndexInCell, cellIndex, isMultiColumnSplit) {\n        var startRowIndex = row.bodyWidget.page.index;\n        var rowHeight = this.getRowHeight(row, [row]);\n        var viewer = this.viewer;\n        //initializing row properties with default values.\n        var isHeader = row.rowFormat.isHeader;\n        var headerRow = undefined;\n        var isAllowBreakAcrossPages = row.rowFormat.allowBreakAcrossPages;\n        var heightType = row.rowFormat.heightType;\n        var cellSpacing = 0;\n        var count = 0;\n        var tableRowWidget = row;\n        var moveRowToNextTable = false;\n        var footnoteElements = this.layoutedFootnoteElement;\n        var isRepeatRowHeader = false;\n        if (tableRowWidget.bodyWidget.page.footnoteWidget !== undefined) {\n            this.footHeight = this.getFootNoteHeight(tableRowWidget.bodyWidget.page.footnoteWidget.bodyWidgets);\n            if (this.footnoteHeight === 0) {\n                this.footnoteHeight = this.footHeight;\n            }\n        }\n        else {\n            this.footHeight = 0;\n        }\n        if (row.ownerTable.continueHeader && !isHeader) {\n            row.ownerTable.continueHeader = false;\n        }\n        var isInitialLayout = row.ownerTable.isInsideTable;\n        var isLastRow = false;\n        cellSpacing = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.ownerTable) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.ownerTable.tableFormat)) ? _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(row.ownerTable.tableFormat.cellSpacing) : 0;\n        while (count < rowWidgets.length) {\n            count = rowWidgets.length;\n            if (this.isRowSpanEnd(row, viewer) && row.rowFormat.heightType === 'Exactly' && this.documentHelper.splittedCellWidgets.length === 1) {\n                this.documentHelper.splittedCellWidgets = [];\n            }\n            if (!isMultiColumnSplit && (row.ownerTable.isInsideTable || (this.documentHelper.splittedCellWidgets.length === 0 && tableRowWidget.y + tableRowWidget.height + cellSpacing + this.footHeight <= viewer.clientArea.bottom))) {\n                if (this.isVerticalMergedCellContinue(row) && (tableRowWidget.y === viewer.clientArea.y\n                    || tableRowWidget.y === this.viewer.clientArea.y + tableRowWidget.ownerTable.headerHeight)) {\n                    this.insertSplittedCellWidgets(viewer, tableWidgets, tableRowWidget, tableRowWidget.index - 1);\n                }\n                this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements, undefined, isInitialLayout, startRowIndex, isRepeatRowHeader);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.bodyWidget) && row.bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget && this.documentHelper.splittedCellWidgets.length > 0 && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidgets[rowWidgets.length - 1].nextRow)) {\n                    count--;\n                    isLastRow = true;\n                    // If the entire split cell widget does not fit on the current page, we should consider splitting the row again. This is why we check that the next row is not the end of a row span, and we decrease the count value accordingly.\n                }\n                else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.bodyWidget) && row.bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget && this.documentHelper.splittedCellWidgets.length > 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidgets[rowWidgets.length - 1].nextRow) && !this.isRowSpanEnd(rowWidgets[rowWidgets.length - 1].nextRow, viewer)) {\n                    count--;\n                }\n                isInitialLayout = false;\n            }\n            else {\n                footnoteElements = [];\n                isInitialLayout = false;\n                //Split widget for next page\n                if (this.documentHelper.splittedCellWidgets.length > 0 && tableRowWidget.y + tableRowWidget.height + this.footHeight <= viewer.clientArea.bottom) {\n                    var isRowSpanEnd = this.isRowSpanEnd(row, viewer);\n                    if (!isRowSpanEnd) {\n                        if (this.isVerticalMergedCellContinue(row) && (tableRowWidget.y === viewer.clientArea.y\n                            || tableRowWidget.y === this.viewer.clientArea.y + tableRowWidget.ownerTable.headerHeight)) {\n                            // Bug 918606: If the row is not the end of a row span, we need to skip updating the row height based on the height of the split cell. Therefore, we have added an additional parameter to the method below.\n                            this.insertSplittedCellWidgets(viewer, tableWidgets, tableRowWidget, tableRowWidget.index - 1, true);\n                            this.updateChildLocationForRow(tableRowWidget.y, tableRowWidget);\n                        }\n                        this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                        continue;\n                    }\n                }\n                var splittedWidget = tableRowWidget;\n                var tableWidget = tableWidgets[tableWidgets.length - 1];\n                if (isMultiColumnSplit || rowHeight + tableRowWidget.y + this.footHeight > viewer.clientArea.bottom) {\n                    if (!isAllowBreakAcrossPages || (isHeader && row.ownerTable.continueHeader) || (heightType === 'AtLeast' && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(row.rowFormat.height) < viewer.clientArea.bottom)) {\n                        var isSplitRow = !isAllowBreakAcrossPages && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tableRowWidget.previousWidget) && tableWidgets.length > 1;\n                        if ((heightType === 'AtLeast' && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(row.rowFormat.height) < viewer.clientActiveArea.height && (isAllowBreakAcrossPages || isSplitRow)) || (heightType !== 'Exactly' && tableRowWidget.y === viewer.clientArea.y) || (heightType === 'Auto' && isAllowBreakAcrossPages)) {\n                            splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, lineIndexInCell, cellIndex, isMultiColumnSplit);\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget) && tableRowWidget.y === viewer.clientArea.y) {\n                                this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                            }\n                            else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget) && heightType === 'AtLeast' && tableRowWidget.containerWidget.lastChild !== tableRowWidget) {\n                                splittedWidget = tableRowWidget;\n                            }\n                        }\n                        // If the row height type is \"At Least\" and the row height is greater than the height of the client active area, the row will be moved to the next page. Therefore, it is necessary to add the `splittedCellWidget` to the current row.\n                        else if (heightType === 'AtLeast' && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(row.rowFormat.height) > viewer.clientActiveArea.height && this.documentHelper.splittedCellWidgets.length > 0 && this.isRowSpanEnd(row, viewer)) {\n                            this.insertSplittedCellWidgets(viewer, tableWidgets, tableRowWidget, tableRowWidget.index - 1);\n                        }\n                        // if (heightType === 'AtLeast' && row.ownerTable.spannedRowCollection.keys.length > 0) {\n                        //     splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow);\n                        // }\n                        // if (heightType === 'AtLeast' && HelperMethods.convertPointToPixel(row.rowFormat.height) > viewer.clientActiveArea.height && isAllowBreakAcrossPages && tableRowWidget.ownerTable.tableHolder.columns.length > this.getTotalColumnSpan(tableRowWidget)) {\n                        //     tableRowWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow);\n                        //     splittedWidget = tableRowWidget;\n                        // }\n                        if (heightType === 'Exactly' && tableRowWidget.y === viewer.clientArea.y) {\n                            this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                            count++;\n                        }\n                        if (isHeader && row.ownerTable.continueHeader) {\n                            row.ownerTable.header = false;\n                            row.ownerTable.headerHeight = 0;\n                            var pages = undefined;\n                            if (viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer) {\n                                pages = this.documentHelper.pages;\n                            }\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pages)) {\n                                for (var i = 0; i < pages.length; i++) {\n                                    if (pages[i].repeatHeaderRowTableWidget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pages[i].bodyWidgets[0].firstChild) && !(pages[i].bodyWidgets[0].firstChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && pages[i].bodyWidgets[0].firstChild.header)) {\n                                        pages[i].repeatHeaderRowTableWidget = false;\n                                        row.ownerTable.continueHeader = false;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if ((heightType === 'Auto' || heightType === 'AtLeast') && isAllowBreakAcrossPages) {\n                            if (!(_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(row.rowFormat.height) > viewer.clientArea.bottom) || tableRowWidget.y === viewer.clientArea.y) {\n                                splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, lineIndexInCell, cellIndex, isMultiColumnSplit);\n                                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget) && tableRowWidget.y === viewer.clientArea.y) {\n                                    this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                                }\n                            }\n                            else if (heightType === 'AtLeast' && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(row.rowFormat.height) > viewer.clientArea.bottom && tableRowWidget.ownerTable.wrapTextAround && tableRowWidget.y - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(tableRowWidget.ownerTable.positioning.verticalPosition) === viewer.clientArea.y && tableRowWidget.bodyWidget.firstChild === tableRowWidget.ownerTable) {\n                                splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, lineIndexInCell, cellIndex, isMultiColumnSplit);\n                                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget)) {\n                                    this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                                    count++;\n                                    continue;\n                                }\n                            }\n                        }\n                        else if (heightType === 'Exactly' && tableRowWidget.y === viewer.clientArea.y) {\n                            this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                            count++;\n                        }\n                    }\n                }\n                else {\n                    var isInsertSplittedWidgets = false;\n                    var headerHeight = 0;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tableRowWidget.ownerTable.headerHeight)) {\n                        headerHeight = tableRowWidget.ownerTable.headerHeight;\n                    }\n                    // Splitting handled for the merged cell with allowRowBreakAcross pages. \n                    if (this.isVerticalMergedCellContinue(row) && (isAllowBreakAcrossPages ||\n                        (isInsertSplittedWidgets = (tableRowWidget.y === viewer.clientArea.y\n                            || tableRowWidget.y === this.viewer.clientArea.y + headerHeight)))) {\n                        if (isInsertSplittedWidgets) {\n                            this.insertSplittedCellWidgets(viewer, tableWidgets, splittedWidget, tableRowWidget.indexInOwner - 1);\n                        }\n                        else {\n                            splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, undefined, undefined, undefined, true);\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget)) {\n                                isInsertSplittedWidgets = (tableRowWidget.y === viewer.clientArea.y\n                                    || tableRowWidget.y === this.viewer.clientArea.y + headerHeight);\n                                if (isInsertSplittedWidgets) {\n                                    this.insertSplittedCellWidgets(viewer, tableWidgets, tableRowWidget, tableRowWidget.indexInOwner - 1);\n                                    count--;\n                                    continue;\n                                }\n                                if (this.isRowSpanEnd(row, viewer)) {\n                                    splittedWidget = tableRowWidget;\n                                }\n                            }\n                        }\n                    }\n                    else if (isLastRow && !isAllowBreakAcrossPages) {\n                        splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements);\n                    }\n                    else if (this.isRowSpanEnd(row, viewer) && !isAllowBreakAcrossPages) {\n                        if (heightType === 'AtLeast' && row.ownerTable.spannedRowCollection.keys.length > 0)\n                            splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, lineIndexInCell, cellIndex, isMultiColumnSplit, true);\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget)) {\n                            this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                        }\n                    }\n                }\n                //Create New table for splitted widget\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget) && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentHelper.owner.editorModule) || this.documentHelper.owner.editorModule && !this.documentHelper.owner.editorModule.isTableInsert) && !(splittedWidget.bodyWidget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget)) {\n                    if (splittedWidget !== tableRowWidget) {\n                        this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements, tableRowWidget.nextRow, undefined, undefined, isRepeatRowHeader);\n                        //Updates the fitted table rows to current page.\n                        this.updateWidgetsToPage(tableWidgets, rowWidgets, row.ownerTable, rearrangeRow, tableRowWidget.nextRow);\n                        var index_2 = tableWidgets.indexOf(tableRowWidget.containerWidget);\n                        if (index_2 + 1 >= tableWidgets.length) {\n                            //Creates new table widget for splitted rows.\n                            this.addTableWidget(viewer.clientActiveArea, tableWidgets, true);\n                        }\n                        tableRowWidget = splittedWidget;\n                    }\n                    else {\n                        if (row.index > 0) {\n                            //Updates the fitted table rows to current page.\n                            this.updateWidgetsToPage(tableWidgets, rowWidgets, row.ownerTable, rearrangeRow, row);\n                            // Need to update on this further\n                            if (row.previousRenderedWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget) {\n                                // Need to update on this further\n                                var prevWidget = row.previousRenderedWidget;\n                                if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(tableRowWidget.y, 2) === _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(prevWidget.y + prevWidget.height, 2)) {\n                                    var prevIndex = tableWidgets.indexOf(prevWidget.containerWidget);\n                                    if (prevIndex + 1 >= tableWidgets.length) {\n                                        //Creates new table widget for splitted rows.\n                                        this.addTableWidget(viewer.clientActiveArea, tableWidgets, true);\n                                    }\n                                }\n                                else {\n                                    //Creates new table widget for splitted rows.\n                                    this.addTableWidget(viewer.clientActiveArea, tableWidgets, true);\n                                }\n                            }\n                            else {\n                                //Creates new table widget for splitted rows.\n                                this.addTableWidget(viewer.clientActiveArea, tableWidgets, true);\n                            }\n                        }\n                        else if (heightType === 'Exactly' && rowHeight + tableRowWidget.y + this.footHeight < viewer.clientArea.bottom && tableRowWidget.y >= viewer.clientArea.y) {\n                            this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                            count++;\n                            continue;\n                        }\n                        moveRowToNextTable = true;\n                        count--;\n                    }\n                    tableWidget = tableWidgets[tableWidgets.length - 1];\n                    var rowToMove = row;\n                    var keepNext = false;\n                    var index = row.ownerTable.containerWidget.index;\n                    var isTableFirstRow = false;\n                    var bodyWidget = void 0;\n                    var block = void 0;\n                    if (moveRowToNextTable && tableWidgets.length === 1) {\n                        block = tableWidgets[tableWidgets.length - 1];\n                    }\n                    else {\n                        block = tableWidgets[tableWidgets.length - 2];\n                    }\n                    var removeTable = true;\n                    //Move Next RowWidge to next page\n                    if (moveRowToNextTable && rowWidgets.length === 1) {\n                        var prev = this.alignBlockElement(row);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prev.node)) {\n                            var previousRow = prev.node;\n                            if (previousRow instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget\n                                && previousRow.indexInOwner === 0) {\n                                if (tableWidgets.length > 1 && tableWidgets[tableWidgets.length - 1].childWidgets.length === 0) {\n                                    tableWidgets.pop();\n                                    tableWidget = tableWidgets[tableWidgets.length - 1];\n                                    tableWidget.height = 0;\n                                }\n                            }\n                            else if (prev.node instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                                var previousWidget = this.splitParagraph(prev.node, parseInt(prev.position.index, 10));\n                                block = previousWidget;\n                                if (tableWidgets.length > 1 && tableWidgets[tableWidgets.length - 1].childWidgets.length === 0) {\n                                    tableWidgets.pop();\n                                    tableWidget = tableWidgets[tableWidgets.length - 1];\n                                }\n                                removeTable = false;\n                            }\n                            if (previousRow instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget) {\n                                isTableFirstRow = previousRow.indexInOwner === 0;\n                                rowToMove = previousRow;\n                                if (!rowToMove.ownerTable.equals(row.ownerTable)) {\n                                    block = rowToMove.ownerTable;\n                                    removeTable = false;\n                                }\n                            }\n                            keepNext = true;\n                        }\n                    }\n                    bodyWidget = this.moveBlocksToNextPage(block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget ? block.previousWidget :\n                        (keepNext && isTableFirstRow) ? !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(block.previousWidget) ? block.previousWidget : block : block, keepNext, undefined, undefined, undefined, true);\n                    var curretTable = tableWidgets[tableWidgets.length - 1];\n                    //Move Next RowWidge to next page\n                    if (moveRowToNextTable && removeTable) {\n                        if (rowToMove.index === 0 && curretTable.containerWidget && curretTable.containerWidget.childWidgets.indexOf(curretTable) !== -1) {\n                            curretTable.containerWidget.childWidgets.splice(curretTable.containerWidget.childWidgets.indexOf(curretTable), 1);\n                        }\n                    }\n                    if (removeTable) {\n                        if (bodyWidget.childWidgets.indexOf(curretTable) !== -1) {\n                            bodyWidget.childWidgets.splice(bodyWidget.childWidgets.indexOf(curretTable), 1);\n                        }\n                        bodyWidget.childWidgets.unshift(curretTable);\n                        this.shiftFloatingItemsFromTable(curretTable, bodyWidget);\n                    }\n                    curretTable.containerWidget = bodyWidget;\n                    if (moveRowToNextTable && rowToMove.index > 0 || rowWidgets.length > 1) {\n                        var currentRow = !moveRowToNextTable ? rowWidgets[rowWidgets.length - 2] : rowWidgets[rowWidgets.length - 1];\n                        if (keepNext) {\n                            currentRow = rowToMove;\n                        }\n                        this.moveNextWidgetsToTable(tableWidgets, currentRow, !moveRowToNextTable);\n                        rowToMove = row;\n                    }\n                    if (keepNext) {\n                        this.updateClientPositionForBlock(removeTable ? curretTable : block, row);\n                    }\n                    moveRowToNextTable = false;\n                    var insertHeaderRow = false;\n                    var bottom = this.documentHelper.viewer.clientArea.bottom - tableRowWidget.bottomBorderWidth - cellSpacing;\n                    if (rowToMove.ownerTable.header) {\n                        //Checks if the splitted row widget can fit in along with header row.\n                        //Based on the result header row is repeated and infinite looping of not fitted state is avoided.\n                        splittedWidget.x = splittedWidget.x;\n                        splittedWidget.y = this.viewer.clientArea.y + tableWidget.headerHeight;\n                        this.updateChildLocationForRow(splittedWidget.y, splittedWidget);\n                        insertHeaderRow = this.isFirstLineFitForRow(bottom, splittedWidget);\n                    }\n                    if (insertHeaderRow && rowToMove.ownerTable.header && !keepNext) {\n                        if (viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer) {\n                            bodyWidget.page.repeatHeaderRowTableWidget = true;\n                            isRepeatRowHeader = true;\n                        }\n                        //Updates table widgets location.\n                        viewer.updateClientAreaForBlock(rowToMove.ownerTable, true, tableWidgets);\n                        //Update splitted row widget location. if header is repeated update the y position of splitted widget to header height.\n                        splittedWidget.x = splittedWidget.x;\n                        splittedWidget.y = tableWidget.y + rowToMove.ownerTable.headerHeight;\n                        // let cellspace: number = viewer instanceof PageLayoutViewer ? cellspacing / 2 : cellspacing;\n                        var cellspace = cellSpacing / 2;\n                        this.updateChildLocationForRow(tableWidget.y + rowToMove.ownerTable.headerHeight - cellspace, splittedWidget, tableWidget.containerWidget);\n                    }\n                    else {\n                        //Updates table widgets location.\n                        viewer.updateClientAreaForBlock(rowToMove.ownerTable, true, tableWidgets);\n                        //Update splitted row widget location. if header is repeated update the y position of splitted widget to header height.\n                        if (splittedWidget.bodyWidget.sectionFormat.columns.length > 1) {\n                            var clientArea = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(this.viewer.clientArea.x, this.viewer.clientArea.y, this.viewer.clientArea.width, this.viewer.clientArea.height);\n                            var clientActiveArea = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(this.viewer.clientActiveArea.x, this.viewer.clientActiveArea.y, this.viewer.clientActiveArea.width, this.viewer.clientActiveArea.height);\n                            splittedWidget.x = this.viewer.clientActiveArea.x;\n                            splittedWidget.y = this.viewer.clientActiveArea.y;\n                            var topMargin = this.getMaxTopCellMargin(splittedWidget);\n                            var bottomMargin = this.getMaxBottomCellMargin(splittedWidget);\n                            for (var i = 0; i < splittedWidget.childWidgets.length; i++) {\n                                var cell = splittedWidget.childWidgets[i];\n                                cell.height = 0;\n                                this.addTableCellWidget(cell, this.viewer.clientActiveArea, topMargin + splittedWidget.topBorderWidth, bottomMargin + splittedWidget.bottomBorderWidth);\n                                this.viewer.updateClientAreaForCell(cell, true);\n                                for (var j = 0; j < cell.childWidgets.length; j++) {\n                                    var block_2 = cell.childWidgets[j];\n                                    viewer.updateClientAreaForBlock(block_2, true);\n                                    block_2.containerWidget = cell;\n                                    this.layoutBlock(block_2, 0);\n                                    viewer.updateClientAreaForBlock(block_2, false);\n                                }\n                                this.viewer.updateClientAreaForCell(cell, false);\n                            }\n                            this.viewer.clientActiveArea = clientActiveArea;\n                            this.viewer.clientArea = clientArea;\n                        }\n                        splittedWidget.x = splittedWidget.x;\n                        splittedWidget.y = tableWidget.y;\n                        // let cellspace: number = viewer instanceof PageLayoutViewer ? cellspacing / 2 : cellspacing;\n                        var cellspace = cellSpacing / 2;\n                        this.updateChildLocationForRow(tableWidget.y - cellspace, splittedWidget, tableWidget.containerWidget, true);\n                    }\n                    if (removeTable && this.shiftedFloatingItemsFromTable.length > 0) {\n                        for (var i = 0; i < this.shiftedFloatingItemsFromTable.length; i++) {\n                            var floatingItem = this.shiftedFloatingItemsFromTable[i];\n                            var position = this.getFloatingItemPoints(floatingItem);\n                            floatingItem.y = position.y;\n                            floatingItem.x = position.x;\n                            if (floatingItem instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) {\n                                this.updateChildLocationForCellOrShape(floatingItem.y, floatingItem);\n                            }\n                        }\n                        this.shiftedFloatingItemsFromTable = [];\n                    }\n                }\n                isLastRow = false;\n            }\n            if (isHeader) {\n                if (row.ownerTable.continueHeader) {\n                    row.ownerTable.header = true;\n                    row.ownerTable.headerHeight = rowHeight + row.ownerTable.headerHeight;\n                }\n                headerRow = this.getHeader(row.ownerTable);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(headerRow) && row.index === headerRow.index) {\n                    var headerHeight = this.getHeaderHeight(row.ownerTable, row, rowWidgets);\n                    if (headerHeight > row.ownerTable.headerHeight || headerHeight > row.ownerTable.headerHeight) {\n                        row.ownerTable.headerHeight = headerHeight;\n                    }\n                    if (row.ownerTable.headerHeight > viewer.clientArea.height) {\n                        row.ownerTable.header = false;\n                        row.ownerTable.continueHeader = false;\n                        row.ownerTable.headerHeight = 0;\n                        var pages = this.documentHelper.pages;\n                        for (var i = 0; i < pages.length; i++) {\n                            if (pages[i].repeatHeaderRowTableWidget) {\n                                pages[i].repeatHeaderRowTableWidget = false;\n                            }\n                        }\n                    }\n                }\n            }\n            isMultiColumnSplit = false;\n            if (tableWidgets.length > 2 && row.ownerTable.header && tableRowWidget.height < viewer.clientActiveArea.bottom &&\n                !viewer.documentHelper.currentRenderingPage.repeatHeaderRowTableWidget) {\n                viewer.documentHelper.currentRenderingPage.repeatHeaderRowTableWidget = true;\n            }\n        }\n    };\n    Layout.prototype.getHeader = function (table) {\n        var header = undefined;\n        var flag = true;\n        table = table.getSplitWidgets()[0];\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            if (row.rowFormat.isHeader) {\n                header = row;\n            }\n            else {\n                flag = false;\n            }\n            if (!flag) {\n                break;\n            }\n        }\n        return header;\n    };\n    Layout.prototype.getHeaderHeight = function (ownerTable, row, rowCollection) {\n        var height = 0;\n        if (row.ownerTable.childWidgets.length > 0 && ownerTable.childWidgets[0].rowFormat.isHeader) {\n            for (var i = 0; i < ownerTable.childWidgets.length; i++) {\n                var row_1 = ownerTable.childWidgets[i];\n                if (row_1.rowFormat.isHeader) {\n                    height = height + row_1.height;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return height;\n    };\n    Layout.prototype.getHeaderHeightForSpannedRow = function (table) {\n        var height = 0;\n        var rowSpan = 1;\n        var headerRow = this.getHeader(table);\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            if (row.rowFormat.isHeader) {\n                height = height + row.height;\n                if (row == headerRow) {\n                    for (var j = 0; j < headerRow.childWidgets.length; j++) {\n                        var cell = headerRow.childWidgets[j];\n                        rowSpan = Math.max(rowSpan, cell.cellFormat.rowSpan);\n                    }\n                    if (rowSpan > 1 && i + rowSpan < table.childWidgets.length) {\n                        for (var k = 1; k < rowSpan; k++) {\n                            var nextRow = table.childWidgets[i + k];\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextRow)) {\n                                height = height + nextRow.height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return height;\n    };\n    Layout.prototype.updateWidgetToRow = function (cell) {\n        //const viewer: LayoutViewer = this.viewer;\n        //Adds table cell widget to owner row widget.\n        var rowWidget = cell.ownerRow;\n        // let cellLeft: number = rowWidget.x;\n        // if (rowWidget.childWidgets.length > 0) {\n        //     const lastWidget: TableCellWidget = rowWidget.childWidgets[rowWidget.childWidgets.length - 1] as TableCellWidget;\n        //     cellLeft = lastWidget.x + lastWidget.width + lastWidget.margin.right;\n        // }\n        // rowWidget.childWidgets.push(cell);\n        cell.containerWidget = rowWidget;\n        //If the row height is set as Atleast then height is set to atleast height for the first cell of the row.\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.ownerRow) && cell.ownerRow.rowFormat.heightType !== 'Exactly' && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.ownerRow.rowFormat.height) > 0 && cell.cellIndex === 0) {\n            rowWidget.height = rowWidget.height + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.ownerRow.rowFormat.height);\n        }\n        //Add condition not cell merged vertically.\n        if (cell.cellFormat.rowSpan === 1) {\n            var cellHeight = void 0;\n            if (rowWidget.rowFormat.heightType === 'Exactly') {\n                cellHeight = cell.height + cell.margin.bottom;\n            }\n            else {\n                cellHeight = cell.height + cell.margin.top + cell.margin.bottom;\n            }\n            if (rowWidget.height - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.cellSpacing) < cellHeight) {\n                rowWidget.height = cellHeight + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.cellSpacing);\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.updateHeightForRowWidget = function (viewer, isUpdateVerticalPosition, tableCollection, rowCollection, rowWidget, isLayouted, endRowWidget, isInitialLayout) {\n        for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n            var cellspacing = 0;\n            var cellWidget = undefined;\n            var childWidget = rowWidget.childWidgets[i];\n            // if (childWidget instanceof TableCellWidget) {\n            cellWidget = childWidget;\n            // }\n            var rowSpan = 1;\n            rowSpan = cellWidget.cellFormat.rowSpan;\n            cellspacing = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cellWidget.ownerTable.tableFormat.cellSpacing);\n            if (rowSpan > 1) {\n                var currentRowWidgetIndex = rowWidget.containerWidget.childWidgets.indexOf(rowWidget);\n                var rowSpanWidgetEndIndex = currentRowWidgetIndex + rowSpan - 1 - (rowWidget.index - cellWidget.rowIndex);\n                if (!isInitialLayout && (viewer.clientArea.bottom < cellWidget.y + cellWidget.height + cellWidget.margin.bottom\n                    || rowSpanWidgetEndIndex >= currentRowWidgetIndex + 1) && (rowCollection.length === 1\n                    || rowCollection.length >= 1 && rowWidget === rowCollection[rowCollection.length - 1])) {\n                    var footHeight = this.footHeight;\n                    this.footHeight = this.existFootnoteHeight = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.bodyWidget.page.footnoteWidget)\n                        ? rowWidget.bodyWidget.page.footnoteWidget.height : 0;\n                    this.splitSpannedCellWidget(cellWidget, tableCollection, rowCollection, viewer);\n                    this.footHeight = this.existFootnoteHeight = footHeight;\n                }\n                var spanEndRowWidget = rowWidget;\n                if (rowSpanWidgetEndIndex > 0) {\n                    if (rowSpanWidgetEndIndex < rowWidget.containerWidget.childWidgets.length) {\n                        var childWidget_1 = rowWidget.containerWidget.childWidgets[rowSpanWidgetEndIndex];\n                        if (childWidget_1 instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget) {\n                            spanEndRowWidget = childWidget_1;\n                            if (spanEndRowWidget === endRowWidget) {\n                                spanEndRowWidget = rowWidget;\n                            }\n                        }\n                    }\n                    else {\n                        /* eslint-disable-next-line max-len */\n                        spanEndRowWidget = rowWidget.containerWidget.childWidgets[rowWidget.containerWidget.childWidgets.length - 1];\n                    }\n                }\n                if (cellWidget.y + cellWidget.height + cellWidget.margin.bottom < spanEndRowWidget.y + spanEndRowWidget.height) {\n                    cellWidget.height = spanEndRowWidget.y + spanEndRowWidget.height - spanEndRowWidget.bottomBorderWidth - cellWidget.y - cellWidget.margin.bottom;\n                    /* eslint-disable-next-line max-len */\n                }\n                else if (isLayouted && spanEndRowWidget && (spanEndRowWidget.y !== 0 && spanEndRowWidget.height !== 0) && cellWidget.y + cellWidget.height + cellWidget.margin.bottom > spanEndRowWidget.y + spanEndRowWidget.height) {\n                    if (spanEndRowWidget.rowFormat.heightType !== 'Exactly' || (spanEndRowWidget.rowFormat.heightType === 'Exactly' && spanEndRowWidget.rowFormat.height > cellWidget.y + cellWidget.height + cellWidget.margin.bottom - spanEndRowWidget.y)) {\n                        spanEndRowWidget.height = cellWidget.y + cellWidget.height + cellWidget.margin.bottom - spanEndRowWidget.y;\n                    }\n                    else {\n                        cellWidget.height = (spanEndRowWidget.y - cellWidget.y) + spanEndRowWidget.height;\n                    }\n                    //Update the next rowlayout widget location. Reason for the updation is previous row height is updated when cell height is greater. So already layouted next row location has to be updated again.\n                    // if (rowWidget === spanEndRowWidget && rowWidget.nextWidget instanceof TableRowWidget) {\n                    //     let nextRow: TableRowWidget = rowWidget.nextWidget as TableRowWidget;\n                    //     // Need to update on this further\n                    //     // if (viewer.renderedElements.containsKey(nextRow)) {\n                    //     //     let nextWidget: TableRowWidget[] = viewer.renderedElements.get(nextRow) as TableRowWidget[];\n                    //     //     if (nextWidget.length > 0) {\n                    //     //         nextWidget[0].x = nextWidget[0].x;\n                    //     //         nextWidget[0].y = rowWidget.y + rowWidget.height;\n                    //     //     }\n                    //     // }\n                    // }\n                }\n            }\n            else {\n                if (cellspacing > 0) {\n                    // In the Case of tableWidget is greater than one and rowWidget is start at the Top Position of the page.\n                    // In such case we have update the cell height with half of cell spacing.\n                    // Remaining cases we have to update the entire hight\n                    if (tableCollection.length > 1 && rowWidget.y === viewer.clientArea.y && viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer) {\n                        cellspacing = cellspacing / 2;\n                    }\n                }\n                cellWidget.height = rowWidget.height - cellWidget.margin.top - cellWidget.margin.bottom - cellspacing;\n            }\n            this.updateHeightForCellWidget(viewer, tableCollection, rowCollection, cellWidget);\n            var widget = rowWidget.containerWidget;\n            while (widget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.Widget) {\n                widget = widget.containerWidget;\n            }\n            var page = undefined;\n            if (widget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) {\n                page = widget.page;\n            }\n            /* eslint-disable-next-line max-len */\n            if ((viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer && viewer.visiblePages.indexOf(page) !== -1) || isUpdateVerticalPosition) {\n                this.updateCellVerticalPosition(cellWidget, false, cellWidget.ownerTable.isInsideTable);\n            }\n            //Renders the current table row contents, after relayout based on editing.\n            // if (viewer instanceof PageLayoutViewer && (viewer as PageLayoutViewer).visiblePages.indexOf(page) !== -1) {\n            //     //Added proper undefined condition check for Asynchronous operation.\n            //     if (!isNullOrUndefined(rowWidget.tableRow) && !isNullOrUndefined(rowWidget.tableRow.rowFormat)) {\n            //         this.viewer.updateScrollBars();\n            //         //this.render.renderTableCellWidget(page, cellWidget);\n            //     }\n            // }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.updateHeightForCellWidget = function (viewer, tableWidget, rowCollection, cellWidget) {\n        for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n            if (cellWidget.childWidgets[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                this.updateHeightForTableWidget(tableWidget, rowCollection, cellWidget.childWidgets[i]);\n            }\n        }\n    };\n    Layout.prototype.getRowHeight = function (row, rowCollection) {\n        var height = 0;\n        if (row.rowFormat.heightType === 'Exactly') {\n            height = row.rowFormat.height;\n        }\n        else {\n            for (var i = 0; i < rowCollection.length; i++) {\n                if (rowCollection[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget) {\n                    height = rowCollection[i].height + height;\n                }\n            }\n            height = Math.max(height, row.rowFormat.height);\n        }\n        return height;\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.splitSpannedCellWidget = function (cellWidget, tableCollection, rowCollection, viewer) {\n        /* eslint-disable-next-line max-len */\n        var splittedCell = this.getSplittedWidget(viewer.clientArea.bottom, false, tableCollection, rowCollection, cellWidget, undefined, undefined, undefined, undefined, true);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedCell)) {\n            //Adds the splitted contents of a vertical merged cell, in order preserve in next page.\n            this.documentHelper.splittedCellWidgets.push(splittedCell);\n            splittedCell.isSplittedCell = true;\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.insertSplittedCellWidgets = function (viewer, tableCollection, rowWidget, previousRowIndex, isSkipUpdateHeight) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget)) {\n            var left = rowWidget.x;\n            var tableWidth = 0;\n            var cellspace = 0;\n            var linestyle = false;\n            tableWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(rowWidget.ownerTable.tableHolder.tableWidth);\n            for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n                var cellWidget = rowWidget.childWidgets[i];\n                var isRightStyleNone = (cellWidget.cellFormat.borders.right.lineStyle === 'None');\n                cellspace = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget.ownerTable) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget.ownerTable.tableFormat) ? _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cellWidget.ownerTable.tableFormat.cellSpacing) : 0;\n                if (Math.round(left) < Math.round(cellWidget.x - cellWidget.margin.left - cellspace)) {\n                    if (this.insertRowSpannedWidget(rowWidget, viewer, left, i, isSkipUpdateHeight)) {\n                        i--;\n                        continue;\n                    }\n                    // Bug 871725: Empty cell widget must be inserted if the table split into next page.\n                    if (tableCollection.length === 1 && this.documentHelper.splittedCellWidgets.length === 0) {\n                        break;\n                    }\n                    var length_1 = rowWidget.childWidgets.length;\n                    this.insertEmptySplittedCellWidget(rowWidget, tableCollection, left, i, previousRowIndex);\n                    if (length_1 < rowWidget.childWidgets.length) {\n                        i--;\n                        continue;\n                    }\n                }\n                left += cellWidget.margin.left + cellWidget.width + cellWidget.margin.right;\n                if (cellspace > 0 || cellWidget.columnIndex === cellWidget.ownerTable.tableHolder.columns.length - 1 ||\n                    cellWidget.index === cellWidget.containerWidget.childWidgets.length - 1) {\n                    if (!cellWidget.ownerTable.tableFormat.allowAutoFit) {\n                        var leftBorderWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(_page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget.getCellLeftBorder(cellWidget).getLineWidth());\n                        var rightBorderWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(_page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget.getCellRightBorder(cellWidget).getLineWidth());\n                        cellWidget.rightBorderWidth = !cellWidget.ownerTable.isBidiTable ? rightBorderWidth : leftBorderWidth;\n                        left += cellWidget.rightBorderWidth;\n                    }\n                    if (!this.isInsertTable()) {\n                        linestyle = this.checkPreviousMargins(cellWidget.ownerTable);\n                    }\n                }\n                left -= (isRightStyleNone && !linestyle) ? 0 : (cellWidget.rightBorderWidth);\n                if (i === rowWidget.childWidgets.length - 1 && Math.round(left) < Math.round(rowWidget.x + tableWidth)) {\n                    if (this.insertRowSpannedWidget(rowWidget, viewer, left, i + 1)) {\n                        continue;\n                    }\n                    this.insertEmptySplittedCellWidget(rowWidget, tableCollection, left, i + 1, previousRowIndex);\n                    continue;\n                }\n            }\n            // Special case: when the child widgets of row is equal to 0 then the splitted widgets in the viewer is added in the table row widgets.\n            /* eslint-disable-next-line max-len */\n            if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.childWidgets) || rowWidget.childWidgets.length === 0) && this.documentHelper.splittedCellWidgets.length > 0) {\n                for (var j = 0; j < this.documentHelper.splittedCellWidgets.length; j++) {\n                    var widget = this.documentHelper.splittedCellWidgets[j];\n                    if (Math.round(left) <= Math.round(widget.x - widget.margin.left)) {\n                        if (this.insertRowSpannedWidget(rowWidget, viewer, left, j)) {\n                            j--;\n                            continue;\n                        }\n                        var count = rowWidget.childWidgets.length;\n                        this.insertEmptySplittedCellWidget(rowWidget, tableCollection, left, j, previousRowIndex);\n                        if (count < rowWidget.childWidgets.length) {\n                            j--;\n                            continue;\n                        }\n                    }\n                    left += widget.margin.left + widget.width + widget.margin.right;\n                    if (j === rowWidget.childWidgets.length - 1 && Math.round(left) <\n                        Math.round(rowWidget.x + tableWidth)) {\n                        if (this.insertRowSpannedWidget(rowWidget, viewer, left, j + 1)) {\n                            continue;\n                        }\n                        this.insertEmptySplittedCellWidget(rowWidget, tableCollection, left, j + 1, previousRowIndex);\n                        continue;\n                    }\n                }\n            }\n            if (this.documentHelper.splittedCellWidgets.length > 0) {\n                this.documentHelper.splittedCellWidgets = [];\n            }\n        }\n    };\n    Layout.prototype.insertRowSpannedWidget = function (rowWidget, viewer, left, index, isSkipUpdateHeight) {\n        var cellSpacing = 0;\n        if (rowWidget.ownerTable.tableFormat.cellSpacing > 0) {\n            cellSpacing = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(rowWidget.ownerTable.tableFormat.cellSpacing);\n        }\n        for (var i = 0; i < this.documentHelper.splittedCellWidgets.length; i++) {\n            var splittedCell = this.documentHelper.splittedCellWidgets[i];\n            if (Math.round(left) === Math.round(splittedCell.x - splittedCell.margin.left)) {\n                rowWidget.childWidgets.splice(index, 0, splittedCell);\n                splittedCell.containerWidget = rowWidget;\n                if (!isSkipUpdateHeight && splittedCell.height > rowWidget.height) {\n                    rowWidget.height = splittedCell.height;\n                }\n                //If the splitted cell location differs from expected location update the location of row child widgets.\n                if (splittedCell.y !== rowWidget.y + splittedCell.margin.top + cellSpacing) {\n                    this.updateChildLocationForRow(rowWidget.y, rowWidget);\n                }\n                this.documentHelper.splittedCellWidgets.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.insertEmptySplittedCellWidget = function (currentRow, tableCollection, left, index, previousRowIndex) {\n        var tableWidget = tableCollection[tableCollection.length - 1];\n        var previousRow;\n        for (var j = tableCollection.length - 1; j >= 0; j--) {\n            var table = tableCollection[j];\n            for (var z = table.childWidgets.length - 1; z >= 0; z--) {\n                var row = table.childWidgets[z];\n                if (row.index === previousRowIndex) {\n                    previousRow = row;\n                    break;\n                }\n            }\n        }\n        if (previousRow) {\n            tableWidget = previousRow.ownerTable;\n            previousRowIndex = previousRow.indexInOwner;\n        }\n        for (var i = previousRowIndex; i >= 0; i--) {\n            var rowWidget = tableWidget.childWidgets[i];\n            var previousLeft = rowWidget.x;\n            for (var j = 0; j < rowWidget.childWidgets.length; j++) {\n                var rowSpan = 1;\n                var cellWidget = rowWidget.childWidgets[j];\n                var cellspace = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget.ownerTable) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget.ownerTable.tableFormat) ? _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cellWidget.ownerTable.tableFormat.cellSpacing) : 0;\n                if (Math.round(previousLeft) !== Math.round(cellWidget.x - cellWidget.margin.left - cellspace)) {\n                    previousLeft = (cellWidget.x - cellWidget.margin.left - cellspace);\n                }\n                if (Math.round(left) === Math.round(previousLeft)) {\n                    rowSpan = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget.cellFormat)) ? rowSpan :\n                        cellWidget.cellFormat.rowSpan;\n                    if (rowSpan > 1 && (rowWidget.firstChild.columnIndex === 0)\n                        && !this.isColumnExistsInCurrentRow(currentRow, cellWidget.columnIndex)) {\n                        if (this.isVerticalMergedCellContinue(currentRow) && currentRow.rowFormat.heightType !== \"Exactly\" && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentRow.previousRenderedWidget) && currentRow.previousRenderedWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget && currentRow.previousRenderedWidget.y + currentRow.previousRenderedWidget.height < cellWidget.y + cellWidget.height) {\n                            this.isRelayoutneed = true;\n                            var splittedCell = this.getSplittedWidget(currentRow.previousRenderedWidget.y + currentRow.previousRenderedWidget.height, true, tableCollection, undefined, cellWidget, undefined, undefined, undefined, undefined, true);\n                            this.isRelayoutneed = false;\n                            currentRow.childWidgets.splice(index, 0, splittedCell);\n                            splittedCell.containerWidget = currentRow;\n                            this.updateChildLocationForRow(currentRow.y, currentRow);\n                            return;\n                        }\n                        else {\n                            //if (!isNullOrUndefined(currentRow.childWidgets[index])) {\n                            var emptyCellWidget = this.createCellWidget(cellWidget);\n                            //if (emptyCellWidget.x < (currentRow.childWidgets[index] as TableCellWidget).x) {\n                            currentRow.childWidgets.splice(index, 0, emptyCellWidget);\n                            emptyCellWidget.containerWidget = currentRow;\n                            this.updateChildLocationForRow(currentRow.y, currentRow);\n                            return;\n                        }\n                        //}\n                        //}\n                    }\n                }\n                previousLeft += cellWidget.margin.left + cellWidget.width + cellWidget.margin.right;\n            }\n        }\n    };\n    Layout.prototype.isColumnExistsInCurrentRow = function (row, columnIndex) {\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cellWidget = row.childWidgets[i];\n            if (cellWidget.columnIndex === columnIndex) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.getSplittedWidget = function (bottom, splitMinimalWidget, tableCollection, rowCollection, cellWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, nestedCount, splitSpannedCellWidget) {\n        var splittedWidget = undefined;\n        var footnoteHeight = 0;\n        if (isMultiColumnSplit || cellWidget.y + cellWidget.height > bottom - this.footHeight - cellWidget.margin.bottom) {\n            var count = 0;\n            if (cellWidget.ownerTable.isInsideTable) {\n                count = nestedCount;\n            }\n            var isCellSplit = false;\n            for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n                if (cellWidget.childWidgets[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                    var paragraphWidget = cellWidget.childWidgets[i];\n                    var splittedPara = paragraphWidget;\n                    if (!isCellSplit) {\n                        splittedPara = this.getSplittedWidgetForPara(bottom - cellWidget.margin.bottom, paragraphWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count);\n                    }\n                    if (isMultiColumnSplit) {\n                        count = count + paragraphWidget.childWidgets.length;\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedPara)) {\n                        isCellSplit = true;\n                        if (i === 0 && splittedPara === paragraphWidget && !splitSpannedCellWidget) {\n                            //Returns if the whole content of the cell does not fit in current page.\n                            return cellWidget;\n                        }\n                        if (cellWidget.childWidgets.indexOf(splittedPara) !== -1) {\n                            cellWidget.childWidgets.splice(cellWidget.childWidgets.indexOf(splittedPara), 1);\n                            i--;\n                        }\n                        cellWidget.height -= splittedPara.height;\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget)) {\n                            //Creates new widget, to hold the splitted contents.\n                            splittedWidget = this.createCellWidget(cellWidget);\n                        }\n                        splittedWidget.height += splittedPara.height;\n                        splittedWidget.childWidgets.push(splittedPara);\n                        splittedPara.containerWidget = splittedWidget;\n                    }\n                }\n                else {\n                    var tableWidget = cellWidget.childWidgets[i];\n                    var tableCol = [tableWidget];\n                    var nextFootHeight = 0;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tableWidget.footnoteElement)) {\n                        for (var j = 0; j < tableWidget.footnoteElement.length; j++) {\n                            nextFootHeight += this.getFootNoteHeight(tableWidget.footnoteElement[j].bodyWidget);\n                        }\n                    }\n                    var existFootnoteHeight = this.existFootnoteHeight + nextFootHeight;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footNoteCollection)) {\n                        for (var j = 0; j < footNoteCollection.length; j++) {\n                            existFootnoteHeight += this.getFootNoteHeight(footNoteCollection[j].bodyWidget);\n                        }\n                    }\n                    //Check for nested table.\n                    if (isMultiColumnSplit || bottom - cellWidget.margin.bottom < tableWidget.y + tableWidget.height + existFootnoteHeight) {\n                        var tableHeight = tableWidget.height;\n                        /* eslint-disable-next-line max-len */\n                        var splittedTable = void 0;\n                        if (isCellSplit) {\n                            splittedTable = tableWidget;\n                        }\n                        else {\n                            splittedTable = this.getSplittedWidgetForTable(bottom - cellWidget.margin.bottom, tableCol, tableWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count);\n                        }\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedTable) &&\n                            !(tableWidget.childWidgets[0].rowFormat.allowBreakAcrossPages)) {\n                            splittedTable = tableWidget;\n                        }\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedTable)) {\n                            if (i === 0 && splittedTable === tableWidget) {\n                                //Returns if the whole table does not fit in current page.\n                                return cellWidget;\n                            }\n                            if (cellWidget.childWidgets.indexOf(splittedTable) !== -1) {\n                                cellWidget.childWidgets.splice(cellWidget.childWidgets.indexOf(splittedTable), 1);\n                                i--;\n                                cellWidget.height -= splittedTable.height;\n                            }\n                            else {\n                                cellWidget.height -= tableHeight - tableWidget.height;\n                            }\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget)) {\n                                //Creates new widget, to hold the splitted contents.\n                                splittedWidget = this.createCellWidget(cellWidget);\n                            }\n                            splittedWidget.height += splittedTable.height;\n                            splittedWidget.childWidgets.push(splittedTable);\n                            splittedTable.containerWidget = splittedWidget;\n                        }\n                    }\n                    else if (tableWidget.footnoteElement.length > 0) {\n                        for (var j = 0; j < tableWidget.footnoteElement.length; j++) {\n                            footNoteCollection.push(tableWidget.footnoteElement[j]);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.updateFootHeight(cellWidget, footNoteCollection);\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget) && splitMinimalWidget && this.isRelayoutneed) {\n            //Creates new widget, to hold the splitted contents.\n            splittedWidget = this.createCellWidget(cellWidget);\n        }\n        return splittedWidget;\n    };\n    Layout.prototype.getNextFootNoteHeight = function (cell, currentPosition) {\n        var height = 0;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.ownerTable.footnoteElement) && cell.ownerTable.footnoteElement.length > 0) {\n            for (var i = cell.indexInOwner + 1; i < cell.ownerRow.childWidgets.length; i++) {\n                var currentCell = cell.ownerRow.childWidgets[i];\n                for (var j = 0; j < currentCell.childWidgets.length; j++) {\n                    if (currentCell.childWidgets[j] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                        height += this.getFootHeightFromPara(currentCell.childWidgets[j], currentPosition);\n                    }\n                    else if (currentCell.childWidgets[j] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                        var table = currentCell.childWidgets[j];\n                        height += this.getFootHeightFromTable(table, currentPosition);\n                    }\n                }\n            }\n            if (cell.ownerTable.isInsideTable) {\n                height += this.getNextFootNoteHeight(cell.ownerTable.containerWidget, currentPosition);\n            }\n        }\n        return height;\n    };\n    Layout.prototype.getFootHeightFromTable = function (table, currentPosition) {\n        var height = 0;\n        for (var k = 0; k < table.childWidgets.length; k++) {\n            var row = table.childWidgets[k];\n            for (var m = 0; m < row.childWidgets.length; m++) {\n                var cell = row.childWidgets[m];\n                for (var n = 0; n < cell.childWidgets.length; n++) {\n                    if (cell.childWidgets[n] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                        height += this.getFootHeightFromPara(cell.childWidgets[n], currentPosition);\n                    }\n                    else if (cell.childWidgets[n] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                        height += this.getFootHeightFromTable(cell.childWidgets[n], currentPosition);\n                    }\n                }\n            }\n        }\n        return height;\n    };\n    Layout.prototype.getFootHeightFromPara = function (blockWidget, currentPosition) {\n        var height = 0;\n        for (var k = 0; k < blockWidget.childWidgets.length; k++) {\n            var lineWidget = blockWidget.childWidgets[k];\n            var footHeight = this.getFootNoteHeightInLine(lineWidget);\n            if (currentPosition > lineWidget.height + blockWidget.y) {\n                height += footHeight;\n            }\n        }\n        return height;\n    };\n    Layout.prototype.updateFootHeight = function (cellWidget, footNoteCollection) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footNoteCollection)) {\n            for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n                if (cellWidget.childWidgets[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                    var paragraphWidget = cellWidget.childWidgets[i];\n                    for (var j = 0; j < paragraphWidget.childWidgets.length; j++) {\n                        this.getFootnoteFromLine(paragraphWidget.childWidgets[j], footNoteCollection);\n                    }\n                }\n                else if (cellWidget.childWidgets[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                    this.updateFootHeightForTable(cellWidget.childWidgets[i], footNoteCollection);\n                }\n            }\n        }\n    };\n    Layout.prototype.updateFootHeightForTable = function (table, footNoteCollection) {\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var rowWidget = table.childWidgets[i];\n            for (var j = 0; j < rowWidget.childWidgets.length; j++) {\n                var cellWidget = rowWidget.childWidgets[j];\n                this.updateFootHeight(cellWidget, footNoteCollection);\n            }\n        }\n    };\n    Layout.prototype.getListLevelPattern = function (value) {\n        switch (value) {\n            case 0:\n                return 'Arabic';\n            case 1:\n                return 'LowLetter';\n            case 2:\n                return 'LowRoman';\n            case 3:\n                return 'UpLetter';\n            case 4:\n                return 'UpRoman';\n            case 5:\n                return 'Ordinal';\n            case 6:\n                return 'Number';\n            case 7:\n                return 'OrdinalText';\n            case 8:\n                return 'LeadingZero';\n            case 9:\n                return 'Bullet';\n            case 10:\n                return 'FarEast';\n            case 11:\n                return 'Special';\n            default:\n                return 'None';\n        }\n    };\n    Layout.prototype.createCellWidget = function (cell) {\n        var cellWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget();\n        cellWidget.cellFormat = cell.cellFormat;\n        cellWidget.index = cell.index;\n        cellWidget.rowIndex = cell.rowIndex;\n        cellWidget.columnIndex = cell.columnIndex;\n        cellWidget.containerWidget = cell.containerWidget;\n        this.updateWidgetLocation(cell, cellWidget);\n        cellWidget.margin = cell.margin;\n        cellWidget.leftBorderWidth = cell.leftBorderWidth;\n        cellWidget.rightBorderWidth = cell.rightBorderWidth;\n        return cellWidget;\n    };\n    Layout.prototype.createTableWidget = function (table) {\n        var newTable = new _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget();\n        if (table.header) {\n            newTable.header = table.header;\n            var height = this.getHeaderHeightForSpannedRow(table);\n            newTable.headerHeight = height > table.headerHeight ? height : table.headerHeight;\n        }\n        newTable.index = table.index;\n        newTable.tableFormat = table.tableFormat;\n        newTable.tableHolder = table.tableHolder;\n        newTable.footnoteElement = table.footnoteElement;\n        newTable.isGridUpdated = table.isGridUpdated;\n        newTable.wrapTextAround = table.wrapTextAround;\n        newTable.positioning = table.positioning;\n        newTable.isContainInsideTable = table.isContainInsideTable;\n        newTable.isBidiTable = table.isBidiTable;\n        return newTable;\n    };\n    Layout.prototype.getSplittedWidgetForPara = function (bottom, paragraphWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count) {\n        var lineBottom = paragraphWidget.y;\n        var splittedWidget = undefined;\n        var moveEntireBlock = false;\n        var isSplitParagraph = false;\n        var lineWidgetHeight = 0;\n        for (var i = 0; i < paragraphWidget.childWidgets.length; i++) {\n            var nextFootHeight = this.getNextFootNoteHeight(paragraphWidget.containerWidget, paragraphWidget.y + lineWidgetHeight);\n            var lineWidget = paragraphWidget.childWidgets[i];\n            var height = this.getFootNoteHeightInLine(lineWidget);\n            height += this.existFootnoteHeight + nextFootHeight;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footNoteCollection)) {\n                for (var j = 0; j < footNoteCollection.length; j++) {\n                    height += this.getFootNoteHeight(footNoteCollection[j].bodyWidget);\n                }\n            }\n            var lineHeight = 0;\n            if (lineWidget.children[0] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase) {\n                lineHeight = lineWidget.children[0].height;\n            }\n            else {\n                lineHeight = lineWidget.height;\n            }\n            lineWidgetHeight += lineHeight;\n            if ((isMultiColumnSplit && count >= lineIndexInCell) || bottom < lineBottom + height + lineHeight) {\n                if (paragraphWidget.paragraphFormat.keepLinesTogether && (paragraphWidget.index !== 0 ||\n                    (paragraphWidget.index === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.associatedCell.ownerRow.previousWidget)))) {\n                    moveEntireBlock = true;\n                    i = 0;\n                    lineWidget = paragraphWidget.childWidgets[0];\n                }\n                else if (paragraphWidget.paragraphFormat.widowControl) {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.associatedCell) && i === 1 && bottom < lineBottom + lineHeight && !isSplitParagraph) {\n                        var rowWidget = paragraphWidget.associatedCell.ownerRow;\n                        var table = rowWidget.containerWidget;\n                        var remLineHeight = paragraphWidget.height - paragraphWidget.childWidgets[0].height;\n                        var isFirstitemInPage = ((table.indexInOwner <= 0 && paragraphWidget.associatedCell.ownerRow.indexInOwner <= 0\n                            && (paragraphWidget.indexInOwner <= 0 || remLineHeight > bottom)) || this.documentHelper.compatibilityMode !== 'Word2013') ? true : false;\n                        if (!isFirstitemInPage) {\n                            return paragraphWidget;\n                        }\n                        else {\n                            isSplitParagraph = true;\n                        }\n                    }\n                    if (i === 1 && !isSplitParagraph) {\n                        moveEntireBlock = true;\n                        i = 0;\n                        lineWidget = paragraphWidget.childWidgets[0];\n                    }\n                }\n                if (i === 0) {\n                    if (lineWidget.paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget && !moveEntireBlock && !isMultiColumnSplit) {\n                        // checks first line of the page is exceed the page height\n                        if (paragraphWidget.indexInOwner === 0 && lineBottom + lineHeight > bottom &&\n                            lineWidget.paragraph.associatedCell.ownerRow.y === this.viewer.clientArea.y) {\n                            lineBottom += lineWidget.height;\n                            continue;\n                        }\n                    }\n                    splittedWidget = paragraphWidget;\n                    break;\n                }\n                if (paragraphWidget.childWidgets.indexOf(lineWidget) !== -1) {\n                    paragraphWidget.childWidgets.splice(paragraphWidget.childWidgets.indexOf(lineWidget), 1);\n                    i--;\n                }\n                paragraphWidget.height -= lineWidget.height;\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget)) {\n                    //Creates new widget, to hold the splitted contents.\n                    splittedWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget();\n                    splittedWidget.characterFormat = paragraphWidget.characterFormat;\n                    splittedWidget.paragraphFormat = paragraphWidget.paragraphFormat;\n                    splittedWidget.index = paragraphWidget.index;\n                    this.updateWidgetLocation(paragraphWidget, splittedWidget);\n                    splittedWidget.height = lineWidget.height;\n                }\n                else {\n                    splittedWidget.height += lineWidget.height;\n                }\n                splittedWidget.childWidgets.push(lineWidget);\n                lineWidget.paragraph = splittedWidget;\n            }\n            this.getFootnoteFromLine(lineWidget, footNoteCollection);\n            lineBottom += lineWidget.height;\n            count++;\n        }\n        // this.updateLinearIndex(splittedWidget);\n        return splittedWidget;\n    };\n    Layout.prototype.getSplittedWidgetForTable = function (bottom, tableCollection, tableWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count) {\n        var rowBottom = tableWidget.y;\n        var splittedWidget = undefined;\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            var rowWidget = undefined;\n            var childWidget = tableWidget.childWidgets[i];\n            // if (childWidget instanceof TableRowWidget) {\n            rowWidget = childWidget;\n            // }\n            var rowHeight = rowWidget.height;\n            var existFootnoteHeight = this.existFootnoteHeight;\n            if (bottom > rowBottom + rowHeight + existFootnoteHeight && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget)) {\n                for (var k = 0; k < rowWidget.childWidgets.length; k++) {\n                    this.updateFootHeight(rowWidget.childWidgets[k], footNoteCollection);\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footNoteCollection)) {\n                for (var j = 0; j < footNoteCollection.length; j++) {\n                    existFootnoteHeight += this.getFootNoteHeight(footNoteCollection[j].bodyWidget);\n                }\n            }\n            if (isMultiColumnSplit || bottom < rowBottom + rowHeight + existFootnoteHeight || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget)) {\n                //ToDo: Check whether row included in vertical merge or AllowRowSplitbyPage is true, if so split row.\n                //Checks if atleast first line fits in the client area.\n                var splittedRow = undefined;\n                var allowRowBreakAcrossPages = true;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.rowFormat)) {\n                    allowRowBreakAcrossPages = rowWidget.rowFormat.allowBreakAcrossPages;\n                }\n                if (allowRowBreakAcrossPages) {\n                    /* eslint-disable-next-line max-len */\n                    splittedRow = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget) && this.isFirstLineFitForRow(bottom, rowWidget)) ? this.getSplittedWidgetForRow(bottom, tableCollection, [rowWidget], rowWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count) : rowWidget;\n                }\n                else {\n                    if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tableWidget.containerWidget.containerWidget.previousWidget)\n                        && this.isFirstLineFitForRow(bottom, rowWidget))\n                        || (tableWidget.isInsideTable\n                            && !(tableWidget.containerWidget.containerWidget.rowFormat.allowBreakAcrossPages))) {\n                        splittedRow = this.getSplittedWidgetForRow(bottom, tableCollection, [rowWidget], rowWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count);\n                    }\n                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tableWidget.containerWidget.containerWidget.previousWidget)) {\n                        splittedRow = rowWidget;\n                    }\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedRow)) {\n                    if (i === 0 && splittedRow === rowWidget) {\n                        //Returns if the whole table does not fit in current page.\n                        return tableWidget;\n                    }\n                    if (tableWidget.childWidgets.indexOf(splittedRow) !== -1) {\n                        tableWidget.childWidgets.splice(tableWidget.childWidgets.indexOf(splittedRow), 1);\n                        i--;\n                        tableWidget.height -= splittedRow.height;\n                    }\n                    else {\n                        tableWidget.height -= rowHeight - rowWidget.height;\n                    }\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget)) {\n                        //Creates new widget, to hold the splitted contents.\n                        splittedWidget = this.createTableWidget(tableWidget);\n                        this.updateWidgetLocation(tableWidget, splittedWidget);\n                        splittedWidget.height = splittedRow.height;\n                    }\n                    else {\n                        splittedWidget.height += splittedRow.height;\n                    }\n                    splittedWidget.childWidgets.push(splittedRow);\n                    splittedRow.containerWidget = splittedWidget;\n                }\n            }\n            rowBottom += rowWidget.height;\n        }\n        return splittedWidget;\n    };\n    Layout.prototype.isFirstLineFitForPara = function (bottom, paraWidget) {\n        var lineWidget = paraWidget.childWidgets[0];\n        var lineHeight = lineWidget.height;\n        var height = this.getFootNoteHeightInLine(lineWidget);\n        height += this.existFootnoteHeight;\n        lineHeight += height;\n        var cellwidget = lineWidget.paragraph.containerWidget;\n        if (paraWidget.paragraphFormat.keepLinesTogether && Math.floor(cellwidget.containerWidget.y) !== this.viewer.clientArea.y) {\n            lineHeight = paraWidget.height;\n        }\n        // let document: WordDocument = undefined;\n        // if (!isNullOrUndefined(lineWidget.paragraph.currentNode) && !isNullOrUndefined(cellwidget.containerWidget)) {\n        //     document = WordDocument.getDocumentOf(lineWidget.paragraph.currentNode);\n        // }\n        //checks first line of the page is exceed the page height\n        if (this.documentHelper.isFirstLineFitInShiftWidgets) {\n            /* eslint-disable-next-line max-len */\n            if (this.viewer.clientActiveArea.y === this.viewer.clientArea.y && paraWidget.y + lineHeight >= bottom) {\n                return true;\n            }\n        }\n        else if (!cellwidget.ownerTable.isInsideTable && cellwidget.containerWidget.y === this.viewer.clientArea.y\n            && paraWidget.y + lineHeight >= bottom) {\n            return true;\n        }\n        return (paraWidget.y + lineHeight <= bottom);\n    };\n    Layout.prototype.isFirstLineFitForTable = function (bottom, tableWidget) {\n        var rowWidget = undefined;\n        var isFit = false;\n        var childWidget = tableWidget.childWidgets[0];\n        // if (childWidget instanceof TableRowWidget) {\n        rowWidget = childWidget;\n        // }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget)) {\n            isFit = this.isFirstLineFitForRow(bottom, rowWidget);\n        }\n        return isFit;\n    };\n    Layout.prototype.isFirstLineFitForRow = function (bottom, rowWidget) {\n        for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n            var cellWidget = rowWidget.childWidgets[i];\n            if (!this.isFirstLineFitForCell(bottom, cellWidget)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Layout.prototype.isFirstLineFitForCell = function (bottom, cellWidget) {\n        if (cellWidget.childWidgets.length === 0) {\n            return true;\n        }\n        if (cellWidget.childWidgets[0] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n            var paraWidget = cellWidget.childWidgets[0];\n            return this.isFirstLineFitForPara(bottom - cellWidget.margin.bottom, paraWidget);\n        }\n        else {\n            var tableWidget = cellWidget.childWidgets[0];\n            return this.isFirstLineFitForTable(bottom - cellWidget.margin.bottom, tableWidget);\n        }\n    };\n    Layout.prototype.updateWidgetLocation = function (widget, table) {\n        table.x = widget.x;\n        table.y = widget.y;\n        table.width = widget.width;\n    };\n    Layout.prototype.updateChildLocationForTable = function (top, tableWidget, bodyWidget, updatePosition) {\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            var rowWidget = tableWidget.childWidgets[i];\n            //rowWidget.x = rowWidget.x;\n            rowWidget.y = top;\n            this.updateChildLocationForRow(top, rowWidget, bodyWidget, updatePosition);\n            top += rowWidget.height;\n        }\n    };\n    Layout.prototype.updateChildLocationForRow = function (top, rowWidget, bodyWidget, updatePosition) {\n        var spacing = 0;\n        if (rowWidget.ownerTable.tableFormat.cellSpacing > 0) {\n            spacing = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(rowWidget.ownerTable.tableFormat.cellSpacing);\n        }\n        for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n            var cellWidget = rowWidget.childWidgets[i];\n            //cellWidget.x = cellWidget.x;\n            cellWidget.index = cellWidget.cellIndex;\n            cellWidget.y = top + cellWidget.margin.top + spacing;\n            this.updateChildLocationForCellOrShape(cellWidget.y, cellWidget, bodyWidget, updatePosition);\n        }\n    };\n    Layout.prototype.updateChildLocationForCellOrShape = function (top, widget, bodyWidget, updatePosition, updateShapeYPosition) {\n        var container = widget;\n        if (widget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) {\n            container = widget.textFrame;\n        }\n        for (var i = 0; i < container.childWidgets.length; i++) {\n            var skipHeight = false;\n            if (container.childWidgets[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && container.childWidgets[i].wrapTextAround\n                && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(container.childWidgets[i + 1]) && container.childWidgets[i + 1].y > container.childWidgets[i].y\n                && container.childWidgets[i + 1].y < (container.childWidgets[i].y + container.childWidgets[i].height)) {\n                skipHeight = true;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(container.childWidgets[i].floatingElements) && container.childWidgets[i].floatingElements.length > 0 && updatePosition) {\n                this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - top;\n                this.viewer.clientActiveArea.y = top;\n            }\n            container.childWidgets[i].x = container.childWidgets[i].x;\n            container.childWidgets[i].y = top;\n            if (widget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && widget.textWrappingStyle == \"Inline\" && updateShapeYPosition) {\n                this.updateShapeYPosition(widget);\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bodyWidget) && widget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget && container.childWidgets[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                var paragraph = container.childWidgets[i];\n                var prevBodyWidgetFloatingElements = widget.ownerTable.bodyWidget.floatingElements;\n                var isRowMovedToNextTable = false;\n                if (widget.ownerTable.bodyWidget === bodyWidget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widget.ownerTable.previousSplitWidget)) {\n                    prevBodyWidgetFloatingElements = widget.ownerTable.previousSplitWidget.bodyWidget.floatingElements;\n                    isRowMovedToNextTable = true;\n                }\n                if (paragraph.floatingElements.length > 0) {\n                    for (var j = 0; j < paragraph.floatingElements.length; j++) {\n                        var element = paragraph.floatingElements[j];\n                        var prevClientActiveAreaX = this.viewer.clientActiveArea.x;\n                        this.viewer.clientActiveArea.x = element.x;\n                        this.layoutShape(element);\n                        this.viewer.clientActiveArea.x = prevClientActiveAreaX;\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.firstChild)) {\n                            var firstLine = paragraph.childWidgets[0];\n                            for (var k = 0; k < firstLine.children.length; k++) {\n                                var elementBox = firstLine.children[k];\n                                if (elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase && elementBox.textWrappingStyle == 'Inline') {\n                                    this.adjustPosition(elementBox, widget.ownerTable.bodyWidget);\n                                    top = paragraph.y;\n                                }\n                            }\n                        }\n                        if (prevBodyWidgetFloatingElements.indexOf(element) > -1 && element.textWrappingStyle !== 'Inline') {\n                            if (!isRowMovedToNextTable) {\n                                bodyWidget.floatingElements.push(element);\n                                var previousBodyWidget = bodyWidget.previousSplitWidget;\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(previousBodyWidget) && previousBodyWidget.floatingElements.indexOf(element) !== -1) {\n                                    previousBodyWidget.floatingElements.splice(previousBodyWidget.floatingElements.indexOf(element), 1);\n                                }\n                            }\n                            if (prevBodyWidgetFloatingElements.indexOf(element) !== -1) {\n                                prevBodyWidgetFloatingElements.splice(prevBodyWidgetFloatingElements.indexOf(element), 1);\n                            }\n                        }\n                    }\n                }\n            }\n            if (container.childWidgets[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                this.updateChildLocationForTable(top, container.childWidgets[i], bodyWidget, updatePosition);\n            }\n            if (!skipHeight) {\n                top += container.childWidgets[i].height;\n            }\n        }\n    };\n    Layout.prototype.updateCellVerticalPosition = function (cellWidget, isUpdateToTop, isInsideTable) {\n        var containerWidget = cellWidget.ownerTable.containerWidget;\n        if (containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BlockContainer || containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame || isInsideTable) {\n            var displacement = this.getDisplacement(cellWidget, isUpdateToTop);\n            //Update Y position alone for the child widget of cell\n            this.updateCellContentVerticalPosition(cellWidget, displacement, isUpdateToTop);\n        }\n    };\n    Layout.prototype.updateCellContentVerticalPosition = function (cellWidget, displacement, isUpdateToTop) {\n        if (displacement === 0) {\n            return;\n        }\n        var location = cellWidget.y + displacement;\n        for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n            if (cellWidget.childWidgets[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                var para = cellWidget.childWidgets[i];\n                para.y = location;\n                this.updateShapeInsideCell(para, displacement);\n            }\n            else {\n                this.updateTableWidgetLocation(cellWidget.childWidgets[i], location, isUpdateToTop);\n            }\n            location = location + cellWidget.childWidgets[i].height;\n        }\n    };\n    Layout.prototype.updateShapeInsideCell = function (paragraph, displacement) {\n        for (var i = 0; i < paragraph.floatingElements.length; i++) {\n            var floatElement = paragraph.floatingElements[i];\n            floatElement.y += displacement;\n            if (floatElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) {\n                this.updateChildLocationForCellOrShape(floatElement.y, floatElement);\n            }\n        }\n    };\n    Layout.prototype.updateTableWidgetLocation = function (tableWidget, location, isUpdateToTop) {\n        tableWidget.y = location = location + tableWidget.topBorderWidth;\n        var cellSpacing = 0;\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            var rowWidget = tableWidget.childWidgets[i];\n            rowWidget.y = location;\n            for (var j = 0; j < rowWidget.childWidgets.length; j++) {\n                var cellWidget = rowWidget.childWidgets[j];\n                cellWidget.y = location + cellWidget.margin.top + cellSpacing;\n                this.updateCellVerticalPosition(cellWidget, isUpdateToTop, true);\n            }\n            location = location + rowWidget.height;\n        }\n        return location;\n    };\n    Layout.prototype.getDisplacement = function (cellWidget, isUpdateToTop) {\n        //Gets the height of row\n        var rowHeight = 0;\n        var rowWidget = cellWidget.containerWidget;\n        var padding = cellWidget.margin.top + cellWidget.margin.bottom;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget.cellFormat) && cellWidget.cellFormat.rowSpan > 1) {\n            rowHeight = cellWidget.height;\n        }\n        else {\n            rowHeight = ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget) ? rowWidget.height : 0) - padding);\n        }\n        //Gets the height of content within the cell\n        var cellContentHeight = this.getCellContentHeight(cellWidget, true);\n        //Displacement field holds the value which has reduced from rowHeight and cellContentHeight\n        var displacement = 0;\n        if (rowHeight > cellContentHeight && rowHeight <= this.viewer.clientArea.height && !cellWidget.isSplittedCell) {\n            displacement = rowHeight - cellContentHeight;\n            if (cellWidget.cellFormat.verticalAlignment === 'Center') {\n                displacement = displacement / 2;\n            }\n            else if ((cellWidget.cellFormat.verticalAlignment === 'Top' || isUpdateToTop)) {\n                displacement = 0;\n            }\n        }\n        return displacement;\n    };\n    Layout.prototype.getCellContentHeight = function (cellWidget, isDisplacement, paraIndex) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget.childWidgets)) {\n            return 0;\n        }\n        var contentHeight = 0;\n        var cellY = cellWidget.y;\n        var withShapeContentHeight = 0;\n        var withShapeBottom = 0;\n        var considerShapeHeight = false;\n        var considerAsTop = false;\n        for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n            if (cellWidget.childWidgets[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                var para = cellWidget.childWidgets[i];\n                contentHeight += cellWidget.childWidgets[i].height;\n                if (!isDisplacement && para.floatingElements.length > 0 && paraIndex === para.indexInOwner) {\n                    var totalShapeHeight = this.getFloatingItemsHeight(para, cellWidget);\n                    contentHeight += totalShapeHeight;\n                }\n                for (var k = 0; k < para.floatingElements.length; k++) {\n                    considerShapeHeight = true;\n                    var floatElement = para.floatingElements[k];\n                    var textWrappingStyle = floatElement.textWrappingStyle;\n                    var shapeBottom = floatElement.y + floatElement.height;\n                    var paraBottom = para.y + para.height;\n                    if ((cellY + cellWidget.containerWidget.height) > shapeBottom && shapeBottom > withShapeBottom) {\n                        withShapeContentHeight = Math.abs(cellY - shapeBottom);\n                        withShapeBottom = shapeBottom;\n                        considerAsTop = false;\n                    }\n                    else if (shapeBottom > paraBottom && para.x + para.width > floatElement.x && shapeBottom > withShapeBottom\n                        && textWrappingStyle !== 'InFrontOfText' && textWrappingStyle !== 'Behind'\n                        && (this.documentHelper.compatibilityMode === 'Word2013' || para.floatingElements[k].layoutInCell)) {\n                        var height = (withShapeBottom === 0) ? shapeBottom - paraBottom : shapeBottom - withShapeBottom;\n                        contentHeight += height;\n                        withShapeBottom = shapeBottom;\n                    }\n                    else {\n                        considerAsTop = true;\n                    }\n                }\n            }\n            else {\n                if (this.considerPositionTableHeight(cellWidget, cellWidget.childWidgets[i])) {\n                    contentHeight += cellWidget.childWidgets[i].height;\n                }\n            }\n        }\n        if ((cellY + contentHeight) > withShapeBottom) {\n            considerShapeHeight = false;\n        }\n        return (isDisplacement && considerShapeHeight) ? withShapeContentHeight :\n            (isDisplacement && considerAsTop ? cellWidget.ownerRow.height : contentHeight);\n    };\n    Layout.prototype.getFloatingItemsHeight = function (paragraph, cellWidget) {\n        var withShapeBottom = 0;\n        var totalShapeHeight = 0;\n        for (var i = 0; i < paragraph.floatingElements.length; i++) {\n            var floatElement = paragraph.floatingElements[i];\n            var textWrappingStyle = floatElement.textWrappingStyle;\n            var shapeBottom = floatElement.y + floatElement.height;\n            var paraBottom = paragraph.y + paragraph.height;\n            if (shapeBottom < this.viewer.clientArea.bottom && floatElement.y !== paragraph.y && paraBottom > shapeBottom && paragraph.x + paragraph.width > floatElement.x && shapeBottom > withShapeBottom\n                && textWrappingStyle !== 'InFrontOfText' && textWrappingStyle !== 'Behind' && textWrappingStyle !== 'Inline'\n                && (this.documentHelper.compatibilityMode === 'Word2013' || paragraph.floatingElements[i].layoutInCell)) {\n                var height = (withShapeBottom === 0) ? shapeBottom - cellWidget.y : shapeBottom - withShapeBottom;\n                totalShapeHeight += height;\n                withShapeBottom = shapeBottom;\n            }\n        }\n        return totalShapeHeight;\n    };\n    Layout.prototype.considerPositionTableHeight = function (cellWidget, nestedWrapTable) {\n        if (nestedWrapTable.isLayouted && nestedWrapTable.wrapTextAround) {\n            for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n                var blockWidget = cellWidget.childWidgets[i];\n                if (nestedWrapTable !== blockWidget && (blockWidget.y === nestedWrapTable.y\n                    || (blockWidget.y + blockWidget.height) < nestedWrapTable.y)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    Layout.prototype.getTableLeftBorder = function (borders) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(borders.left)) {\n            return borders.left;\n        }\n        else {\n            var border = new _format_index__WEBPACK_IMPORTED_MODULE_4__.WBorder(borders);\n            border.lineStyle = 'Single';\n            border.lineWidth = 0.66;\n            return border;\n        }\n    };\n    Layout.prototype.getTableRightBorder = function (borders) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(borders.right)) {\n            return borders.right;\n        }\n        else {\n            var border = new _format_index__WEBPACK_IMPORTED_MODULE_4__.WBorder(borders);\n            border.lineStyle = 'Single';\n            border.lineWidth = 0.66;\n            return border;\n        }\n    };\n    Layout.prototype.getTableTopBorder = function (borders) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(borders.top)) {\n            return borders.top;\n        }\n        else {\n            var border = new _format_index__WEBPACK_IMPORTED_MODULE_4__.WBorder(borders);\n            border.lineStyle = 'Single';\n            border.lineWidth = 0.66;\n            return border;\n        }\n    };\n    Layout.prototype.getTableBottomBorder = function (borders) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(borders.bottom)) {\n            return borders.bottom;\n        }\n        else {\n            var border = new _format_index__WEBPACK_IMPORTED_MODULE_4__.WBorder(borders);\n            border.lineStyle = 'Single';\n            border.lineWidth = 0.66;\n            return border;\n        }\n    };\n    Layout.prototype.getCellDiagonalUpBorder = function (tableCell) {\n        var diagonalUpBorder = undefined;\n        var cellBorder = undefined;\n        cellBorder = tableCell.cellFormat.borders;\n        diagonalUpBorder = cellBorder.diagonalUp;\n        return diagonalUpBorder;\n    };\n    Layout.prototype.getCellDiagonalDownBorder = function (tableCell) {\n        var diagonalDownBorder = undefined;\n        var cellBorder = undefined;\n        cellBorder = tableCell.cellFormat.borders;\n        diagonalDownBorder = cellBorder.diagonalDown;\n        return diagonalDownBorder;\n    };\n    Layout.prototype.getTableWidth = function (table) {\n        var width = 0;\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            var rowWidth = 0;\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[j];\n                rowWidth += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.cellFormat.cellWidth);\n            }\n            if (width < rowWidth) {\n                width = rowWidth;\n            }\n        }\n        return width;\n    };\n    //#region shifting\n    Layout.prototype.layoutNextItemsBlock = function (blockAdv, viewer, isFootnoteReLayout, isNextBlockToShift) {\n        var sectionIndex = blockAdv.bodyWidget.sectionIndex;\n        var block = blockAdv;\n        var splittedWidget = block.getSplitWidgets();\n        var nextBlock = splittedWidget[splittedWidget.length - 1].nextRenderedWidget;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextBlock) || this.documentHelper.blockToShift === block) {\n            this.documentHelper.blockToShift = undefined;\n        }\n        var updateNextBlockList = true;\n        while (nextBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BlockWidget && (nextBlock.bodyWidget.sectionIndex === sectionIndex || (nextBlock.bodyWidget.sectionFormat.breakCode === 'NoBreak' && block.bodyWidget.sectionFormat.pageWidth === nextBlock.bodyWidget.sectionFormat.pageWidth && block.bodyWidget.sectionFormat.pageHeight === nextBlock.bodyWidget.sectionFormat.pageHeight))) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isFootnoteReLayout) && isFootnoteReLayout && !nextBlock.isLayouted && this.isInitialLoad) {\n                break;\n            }\n            var currentWidget = undefined;\n            var blocks = block.getSplitWidgets();\n            currentWidget = blocks[blocks.length - 1];\n            // if (viewer.fieldEndParagraph === block) {\n            //     //Sets field end paragraph to undefined, inorder to hold reLayouting with this paragraph.\n            //     viewer.fieldEndParagraph = undefined;\n            // }\n            block = nextBlock;\n            if (this.documentHelper.blockToShift === block) {\n                this.documentHelper.blockToShift = undefined;\n            }\n            updateNextBlockList = false;\n            var nextWidget = undefined;\n            nextWidget = block.getSplitWidgets()[0];\n            /* eslint-disable-next-line max-len */\n            if (this.documentHelper.fieldStacks.length === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextWidget) && currentWidget.containerWidget === nextWidget.containerWidget\n                && (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(nextWidget.y, 2) === _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(currentWidget.y + currentWidget.height, 2))) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentHelper.blockToShift) || this.documentHelper.owner.editorModule.isFootnoteElementRemoved) {\n                    this.documentHelper.blockToShift = block;\n                }\n                else if (nextWidget.bodyWidget) {\n                    var floatingElementLength = nextWidget.bodyWidget.floatingElements.length;\n                    if (floatingElementLength > 0 || (floatingElementLength === 0 && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentHelper.blockToShift)\n                        && isNextBlockToShift)) {\n                        this.documentHelper.blockToShift = block;\n                    }\n                }\n                break;\n            }\n            updateNextBlockList = true;\n            if ((viewer.owner.isShiftingEnabled && (this.documentHelper.fieldStacks.length === 0 || this.viewer.owner.editorModule.isInsertingTOC)) || (this.isIFfield && !this.checkBlockHasField(block))) {\n                this.documentHelper.blockToShift = block;\n                break;\n            }\n            else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.viewer.owner.editorModule) || !this.viewer.owner.editorModule.isInsertingTOC) {\n                block = block.combineWidget(this.viewer);\n                //let paragraph: ParagraphWidget;\n                if (currentWidget.containerWidget !== block.containerWidget) {\n                    if (!(currentWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) ||\n                        (currentWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) && !currentWidget.isEndsWithPageBreak && !currentWidget.isEndsWithColumnBreak && currentWidget.containerWidget.page !== block.containerWidget.page && !(block.bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget && block.bodyWidget.sectionFormat.breakCode === 'NoBreak')) {\n                        /* eslint-disable-next-line max-len */\n                        this.updateContainerWidget(block, currentWidget.containerWidget, currentWidget.indexInOwner + 1, false);\n                    }\n                }\n                if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                    this.clearTableWidget(block, true, true);\n                    block.isGridUpdated = false;\n                    //paragraph = this.documentHelper.selection.getFirstParagraphInFirstCell(block as TableWidget);\n                }\n                else {\n                    //paragraph = block as ParagraphWidget;\n                }\n                //if ((this.viewer.owner.isDocumentLoaded) && this.viewer.owner.editorModule) {\n                //    this.viewer.owner.editorModule.updateWholeListItems(paragraph);\n                //}\n                viewer.updateClientAreaForBlock(block, true);\n                if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.WebLayoutViewer || block.bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.HeaderFooterWidget) {\n                    block.containerWidget.height -= block.height;\n                }\n                this.documentHelper.layout.layoutBlock(block, 0);\n                viewer.updateClientAreaForBlock(block, false);\n            }\n            splittedWidget = nextBlock.getSplitWidgets();\n            nextBlock = splittedWidget[splittedWidget.length - 1].nextRenderedWidget;\n        }\n        if ((!viewer.owner.isShiftingEnabled || (this.documentHelper.blockToShift !== block)) && !this.isPastingContent) {\n            this.viewer.owner.editorModule.updateListItemsTillEnd(block, updateNextBlockList);\n        }\n    };\n    /**\n     * Update the client area for the line widget.\n     *\n     * @param {LineWidget} startLineWidget LineWidget instance.\n     * @private\n     */\n    Layout.prototype.updateClientAreaForLine = function (startLineWidget) {\n        startLineWidget.marginTop = 0;\n        //Clears the line widget starting from current line.\n        var top = this.documentHelper.selection.getTop(startLineWidget);\n        var left = this.viewer.clientArea.x;\n        this.viewer.cutFromTop(top);\n        this.viewer.cutFromLeft(left);\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.isAuto = function (table) {\n        var isAllColumnHasAutoWidthType = false;\n        if (table.tableFormat.preferredWidthType === 'Auto' && table.tableFormat.preferredWidth === 0 && table.tableFormat.allowAutoFit) {\n            for (var i = 0; i < table.childWidgets.length; i++) {\n                var row = table.childWidgets[i];\n                for (var j = 0; j < row.childWidgets.length; j++) {\n                    var cell = row.childWidgets[j];\n                    if (cell.cellFormat.preferredWidthType === 'Auto' && cell.cellFormat.preferredWidth === 0) {\n                        isAllColumnHasAutoWidthType = true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        }\n        else {\n            return false;\n        }\n        if (isAllColumnHasAutoWidthType && table.isInsideTable && table.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget) {\n            isAllColumnHasAutoWidthType = this.isAuto(table.containerWidget.ownerTable);\n        }\n        return isAllColumnHasAutoWidthType;\n    };\n    Layout.prototype.getParentTable = function (block) {\n        var widget = block;\n        while (widget.containerWidget) {\n            if (widget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BlockContainer || widget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame) {\n                return widget;\n            }\n            widget = widget.containerWidget;\n        }\n        return undefined;\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.reLayoutParagraph = function (paragraphWidget, lineIndex, elementBoxIndex, isBidi, isSkip) {\n        if (this.isReplaceAll || (this.viewer.owner.editorModule && this.viewer.owner.editorModule.restrictLayout)) {\n            return;\n        }\n        this.isRelayout = true;\n        if (paragraphWidget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame\n            && paragraphWidget.containerWidget.containerShape.textWrappingStyle === 'Inline') {\n            lineIndex = paragraphWidget.containerWidget.containerShape.line.indexInOwner;\n            paragraphWidget = paragraphWidget.containerWidget.containerShape.paragraph;\n        }\n        isBidi = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isBidi) ? false : isBidi;\n        this.isRelayout = true;\n        var isLayouted = false;\n        if (this.documentHelper.blockToShift === paragraphWidget) {\n            this.layoutBodyWidgetCollection(paragraphWidget.index, paragraphWidget.containerWidget, paragraphWidget, false);\n            this.isBidiReLayout = true;\n            isLayouted = true;\n        }\n        else {\n            if (this.isBidiReLayout) {\n                this.isBidiReLayout = false;\n            }\n        }\n        // let isElementMoved: boolean = elementBoxIndex > 0;\n        var skipWholeTableLayout = false;\n        if (!isLayouted) {\n            if (paragraphWidget.isInsideTable) {\n                this.isBidiReLayout = true;\n                if (this.documentHelper.owner.editorHistoryModule && this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo\n                    && this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo.isEmptySelection) {\n                    skipWholeTableLayout = true;\n                }\n                var parentTable = this.getParentTable(paragraphWidget);\n                var container = parentTable.containerWidget;\n                if (!this.isReplacingAll && skipWholeTableLayout && container instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(container.containerWidget)) {\n                    var tableHolderBeforeBuildColumn = parentTable.tableHolder.clone();\n                    var tableWidget = (parentTable.clone()).combineWidget(this.viewer);\n                    var isSameColumnWidth = true;\n                    if (tableWidget.tableFormat.allowAutoFit) {\n                        tableWidget.isGridUpdated = false;\n                        tableWidget.buildTableColumns();\n                        tableWidget.isGridUpdated = true;\n                        if (tableHolderBeforeBuildColumn.columns.length === tableWidget.tableHolder.columns.length) {\n                            for (var i = 0; i < tableWidget.tableHolder.columns.length; i++) {\n                                var tableAfterColumnWidth = tableWidget.tableHolder.columns[i].preferredWidth;\n                                var tableBeforeColumnWidth = tableHolderBeforeBuildColumn.columns[i].preferredWidth;\n                                if (tableAfterColumnWidth !== tableBeforeColumnWidth) {\n                                    isSameColumnWidth = false;\n                                    break;\n                                }\n                            }\n                        }\n                        else {\n                            isSameColumnWidth = false;\n                        }\n                    }\n                    if (isSameColumnWidth) {\n                        if (paragraphWidget.associatedCell.ownerTable.footnoteElement && paragraphWidget.associatedCell.ownerTable.footnoteElement.length > 0) {\n                            this.clearFootnoteReference(paragraphWidget.associatedCell.ownerTable, true);\n                        }\n                        this.viewer.updateClientAreaForCell(paragraphWidget.associatedCell, true);\n                        this.viewer.updateClientAreaForBlock(paragraphWidget, true);\n                        if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule) {\n                            this.viewer.owner.editorModule.updateWholeListItems(paragraphWidget);\n                        }\n                        this.layoutParagraph(paragraphWidget, 0);\n                        this.viewer.updateClientAreaForBlock(paragraphWidget, false);\n                        //Get Top level owner of block\n                        var table = this.getParentTable(paragraphWidget);\n                        var pageIndexBeforeLayouting = 0;\n                        if (table.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) {\n                            var blocks = table.getSplitWidgets();\n                            var splittedWidget = blocks[blocks.length - 1];\n                            pageIndexBeforeLayouting = splittedWidget.containerWidget.page.index;\n                        }\n                        //Combine splitted table in to single table\n                        var currentTable = table.combineWidget(this.viewer);\n                        var bodyWidget = currentTable.containerWidget;\n                        if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.WebLayoutViewer) {\n                            bodyWidget.height -= currentTable.height;\n                        }\n                        this.viewer.updateClientArea(bodyWidget, bodyWidget.page);\n                        if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule) {\n                            var block = this.documentHelper.getFirstParagraphInFirstCell(currentTable);\n                            this.viewer.owner.editorModule.updateWholeListItems(block);\n                        }\n                        this.viewer.updateClientAreaForBlock(currentTable, true);\n                        //Remove border width\n                        currentTable.x -= currentTable.leftBorderWidth;\n                        currentTable.y -= currentTable.topBorderWidth;\n                        //Update Client area for current position\n                        var yPos = this.getYPosition(currentTable);\n                        this.viewer.cutFromTop(yPos);\n                        this.clearTableWidget(currentTable, true, true, false, true, true);\n                        this.shiftTableWidget(currentTable, this.viewer);\n                        this.viewer.updateClientAreaForBlock(currentTable, false);\n                        var pageIndexAfterLayouting = 0;\n                        if (currentTable.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) {\n                            var blocks = currentTable.getSplitWidgets();\n                            var splittedWidget = blocks[blocks.length - 1];\n                            pageIndexAfterLayouting = splittedWidget.containerWidget.page.index;\n                        }\n                        if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule && currentTable.nextRenderedWidget) {\n                            this.viewer.owner.editorModule.updateWholeListItems(currentTable.nextRenderedWidget);\n                        }\n                        this.layoutNextItemsBlock(currentTable, this.viewer, undefined, pageIndexBeforeLayouting !== pageIndexAfterLayouting);\n                    }\n                    else if (!this.isReplacingAll) {\n                        this.reLayoutTable(paragraphWidget);\n                    }\n                }\n                else if (!this.isReplacingAll) {\n                    this.reLayoutTable(paragraphWidget);\n                }\n                /* eslint-disable-next-line max-len */\n                if (this.isFootnoteContentChanged && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.bodyWidget)) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.bodyWidget.page.footnoteWidget)) {\n                    var foot = paragraphWidget.bodyWidget.page.footnoteWidget;\n                    this.layoutfootNote(foot);\n                }\n                this.isBidiReLayout = false;\n            }\n            else {\n                // this.isRelayout = true;\n                this.reLayoutLine(paragraphWidget, lineIndex, isBidi, isSkip, undefined);\n            }\n        }\n        if (paragraphWidget.bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.HeaderFooterWidget &&\n            paragraphWidget.bodyWidget.headerFooterType.indexOf('Footer') !== -1) {\n            this.shiftFooterChildLocation(paragraphWidget.bodyWidget, this.viewer);\n        }\n        // this.updateLinearIndex(paragraphWidget);\n    };\n    Layout.prototype.getParentRow = function (block) {\n        return this.getParentCell(block).ownerRow;\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.getParentCell = function (block) {\n        var cell = block;\n        while (cell.ownerTable !== null && cell.ownerTable.isInsideTable) {\n            cell = cell.ownerTable.associatedCell;\n        }\n        return cell;\n    };\n    Layout.prototype.reLayoutRow = function (block) {\n        if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n            block = block.associatedCell;\n        }\n        var currentRow = this.getParentRow(block).getSplitWidgets()[0];\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentRow) && !currentRow.ownerTable.tableFormat.allowAutoFit) {\n            var currentTable = currentRow.ownerTable.getSplitWidgets()[0].combineWidget(this.viewer);\n            var startRow = currentRow;\n            while (this.isVerticalMergedCellContinue(startRow)) {\n                var previousRow = startRow.previousWidget;\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(previousRow)) {\n                    break;\n                }\n                startRow = previousRow;\n            }\n            var bodyWidget = currentTable.containerWidget;\n            if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.WebLayoutViewer) {\n                bodyWidget.height -= currentTable.height;\n            }\n            if ((this.viewer.owner.enableHeaderAndFooter || block.isInHeaderFooter) && !(bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame)) {\n                block.bodyWidget.isEmpty = false;\n                bodyWidget.height -= currentTable.height;\n                /* eslint-disable-next-line max-len */\n                this.viewer.updateHeaderFooterClientAreaWithTop(currentTable.bodyWidget.sectionFormat, this.documentHelper.isBlockInHeader(currentTable), bodyWidget.page);\n            }\n            else if (bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame) {\n                this.viewer.updateClientAreaForTextBoxShape(bodyWidget.containerShape, true);\n            }\n            else {\n                this.viewer.updateClientArea(bodyWidget, bodyWidget.page);\n            }\n            /* eslint-disable-next-line max-len */\n            var area = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(this.viewer.clientArea.x, this.viewer.clientArea.y, this.viewer.clientArea.width, this.viewer.clientArea.height);\n            var clientArea = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(area.x, area.y, area.width, area.height);\n            if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule) {\n                var block_3 = this.documentHelper.getFirstParagraphInFirstCell(currentTable);\n                this.viewer.owner.editorModule.updateWholeListItems(block_3);\n            }\n            this.viewer.updateClientAreaForBlock(currentTable, true);\n            this.viewer.cutFromTop(startRow.y);\n            this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n            //Clear Hieght for all the content\n            currentTable.height = 0;\n            do {\n                this.clearRowWidget(currentRow, true, true, true);\n                this.layoutRow([currentTable], currentRow, true);\n                if (startRow === currentRow) {\n                    break;\n                }\n                startRow = startRow.nextRow;\n            } while (startRow && startRow !== currentRow);\n            this.updateChildLocationForTable(currentTable.y, currentTable);\n            this.viewer.clientArea = clientArea;\n            this.viewer.clientActiveArea = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(clientArea.x, clientArea.y, clientArea.width, clientArea.height);\n            this.viewer.updateClientAreaForBlock(currentTable, true);\n            currentTable.x -= currentTable.leftBorderWidth;\n            currentTable.y -= currentTable.topBorderWidth;\n            this.viewer.cutFromTop(currentTable.y);\n            this.shiftTableWidget(currentTable, this.viewer, true);\n            this.layoutNextItemsBlock(currentTable, this.viewer);\n        }\n        else {\n            this.currentCell = block;\n            this.reLayoutTable(block);\n            this.currentCell = undefined;\n        }\n    };\n    Layout.prototype.reLayoutTable = function (block, isFootnoteReLayout) {\n        if (this.viewer.owner.editorModule && this.viewer.owner.editorModule.restrictLayout) {\n            return;\n        }\n        //Get Top level owner of block\n        var table = this.getParentTable(block);\n        if (table.header) {\n            var tableCollection = table.getSplitWidgets();\n            for (var i = 1; i < tableCollection.length; i++) {\n                tableCollection[i].bodyWidget.page.repeatHeaderRowTableWidget = false;\n            }\n        }\n        var pageIndexBeforeLayouting = 0;\n        if (table.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) {\n            var blocks = table.getSplitWidgets();\n            var splittedWidget = blocks[blocks.length - 1];\n            pageIndexBeforeLayouting = splittedWidget.containerWidget.page.index;\n        }\n        //Combine splitted table in to single table\n        var currentTable = table.combineWidget(this.viewer);\n        var bodyWidget = currentTable.containerWidget;\n        if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.WebLayoutViewer) {\n            bodyWidget.height -= currentTable.height;\n        }\n        if ((this.viewer.owner.enableHeaderAndFooter || block.isInHeaderFooter) && !(bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame)) {\n            block.bodyWidget.isEmpty = false;\n            bodyWidget.height -= currentTable.height;\n            /* eslint-disable-next-line max-len */\n            this.viewer.updateHeaderFooterClientAreaWithTop(table.bodyWidget.sectionFormat, this.documentHelper.isBlockInHeader(table), bodyWidget.page);\n        }\n        else if (bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame) {\n            this.viewer.updateClientAreaForTextBoxShape(bodyWidget.containerShape, true);\n        }\n        else {\n            this.viewer.updateClientArea(bodyWidget, bodyWidget.page);\n        }\n        //Clear Hieght for all the content\n        if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule) {\n            var block_4 = this.documentHelper.getFirstParagraphInFirstCell(currentTable);\n            this.viewer.owner.editorModule.updateWholeListItems(block_4);\n        }\n        this.viewer.updateClientAreaForBlock(currentTable, true);\n        //Remove border width\n        currentTable.x -= currentTable.leftBorderWidth;\n        currentTable.y -= currentTable.topBorderWidth;\n        //Update Client area for current position\n        var yPos = this.getYPosition(currentTable);\n        this.viewer.cutFromTop(yPos);\n        this.clearTableWidget(currentTable, true, true, true, true);\n        this.isBidiReLayout = true;\n        this.layoutBlock(currentTable, 0);\n        this.viewer.updateClientAreaForBlock(currentTable, false);\n        var pageIndexAfterLayouting = 0;\n        if (currentTable.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) {\n            var blocks = currentTable.getSplitWidgets();\n            var splittedWidget = blocks[blocks.length - 1];\n            pageIndexAfterLayouting = splittedWidget.containerWidget.page.index;\n        }\n        this.layoutNextItemsBlock(currentTable, this.viewer, isFootnoteReLayout, pageIndexBeforeLayouting !== pageIndexAfterLayouting);\n    };\n    Layout.prototype.getYPosition = function (table) {\n        if (table.wrapTextAround) {\n            var prevWidget = table.previousWidget;\n            while (prevWidget) {\n                if (prevWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                    return prevWidget.y + prevWidget.height;\n                }\n                else if (prevWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                    if (prevWidget.wrapTextAround) {\n                        prevWidget = prevWidget.previousWidget;\n                    }\n                    else {\n                        return prevWidget.y + prevWidget.height;\n                    }\n                }\n            }\n            return this.viewer.clientActiveArea.y;\n        }\n        return table.y;\n    };\n    Layout.prototype.clearFootnoteReference = function (table, updateClientHeight) {\n        if (table.footnoteElement && table.footnoteElement.length > 0) {\n            var startPage = table.bodyWidget.page;\n            for (var i = table.footnoteElement.length - 1; i >= 0; i--) {\n                var footnote = table.footnoteElement[i];\n                footnote.isLayout = false;\n                var footNoteWidget = footnote.bodyWidget.containerWidget;\n                if (footNoteWidget && footNoteWidget.bodyWidgets.indexOf(footnote.bodyWidget) !== -1) {\n                    var footnoteHeight = this.getFootNoteHeight(footnote.bodyWidget);\n                    footNoteWidget.height -= footnoteHeight;\n                    footNoteWidget.bodyWidgets.splice(footnote.bodyWidget.indexInOwner, 1);\n                    if (updateClientHeight && footNoteWidget.page === startPage) {\n                        this.viewer.clientActiveArea.height += footnoteHeight;\n                        this.viewer.clientArea.height += footnoteHeight;\n                    }\n                }\n                if (footNoteWidget && footNoteWidget.bodyWidgets.length === 0 && footNoteWidget.page) {\n                    footNoteWidget.page.footnoteWidget = undefined;\n                }\n                footnote.bodyWidget.containerWidget = undefined;\n            }\n            table.footnoteElement = [];\n        }\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.clearTableWidget = function (table, clearPosition, clearHeight, clearGrid, updateClientHeight, skipToClearPara) {\n        table.height = 0;\n        if (clearGrid) {\n            table.isGridUpdated = false;\n        }\n        if (clearPosition) {\n            table.y = 0;\n            table.x = 0;\n            if (table.footnoteElement && table.footnoteElement.length > 0) {\n                this.clearFootnoteReference(table, updateClientHeight);\n            }\n        }\n        table.leftBorderWidth = 0;\n        table.rightBorderWidth = 0;\n        table.topBorderWidth = 0;\n        table.bottomBorderWidth = 0;\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            this.clearRowWidget(row, clearPosition, clearHeight, clearGrid, skipToClearPara);\n        }\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.clearRowWidget = function (row, clearPosition, clearHeight, clearGrid, skipToClearPara) {\n        row.height = 0;\n        if (clearPosition) {\n            row.y = 0;\n            row.x = 0;\n        }\n        row.topBorderWidth = 0;\n        row.bottomBorderWidth = 0;\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cell = row.childWidgets[i];\n            this.clearCellWidget(cell, clearPosition, clearHeight, clearGrid, skipToClearPara);\n        }\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.clearCellWidget = function (cell, clearPosition, clearHeight, clearGrid, skipToClearPara) {\n        cell.height = 0;\n        if (clearPosition) {\n            cell.y = 0;\n            cell.x = 0;\n        }\n        cell.leftBorderWidth = 0;\n        cell.rightBorderWidth = 0;\n        this.clearBlockWidget(cell.childWidgets, clearPosition, clearHeight, clearGrid, skipToClearPara);\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.clearBlockWidget = function (blocks, clearPosition, clearHeight, clearGrid, skipToClearPara) {\n        for (var i = 0; i < blocks.length; i++) {\n            var block = blocks[i];\n            if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                if (clearPosition && !skipToClearPara) {\n                    block.y = 0;\n                    block.x = 0;\n                }\n                if (clearHeight && !skipToClearPara) {\n                    block.height = 0;\n                }\n            }\n            else {\n                this.clearTableWidget(block, clearPosition, clearHeight, clearGrid, undefined, skipToClearPara);\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.layoutBodyWidgetCollection = function (blockIndex, bodyWidget, block, shiftNextWidget, isSkipShifting, isSelectionInsideTable) {\n        if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(block) && block.isFieldCodeBlock)) {\n            return;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentHelper.owner)\n            && this.documentHelper.owner.isLayoutEnabled) {\n            if (this.viewer.owner.editorModule && this.viewer.owner.editor.restrictLayout) {\n                return;\n            }\n            if (bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BlockContainer || bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame) {\n                var curretBlock = this.checkAndGetBlock(bodyWidget, blockIndex);\n                if (bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(curretBlock) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bodyWidget.nextRenderedWidget) && bodyWidget.nextRenderedWidget.sectionFormat.breakCode === 'NoBreak') {\n                    curretBlock = bodyWidget.nextRenderedWidget.firstChild;\n                    bodyWidget = bodyWidget.nextRenderedWidget;\n                }\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(curretBlock)) {\n                    return;\n                }\n                if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.WebLayoutViewer) {\n                    curretBlock.containerWidget.height -= curretBlock.height;\n                }\n                if (bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.HeaderFooterWidget) {\n                    bodyWidget.isEmpty = false;\n                    this.viewer.updateHeaderFooterClientAreaWithTop(bodyWidget.sectionFormat, bodyWidget.headerFooterType.indexOf('Header') !== -1, bodyWidget.page);\n                    curretBlock.containerWidget.height -= curretBlock.height;\n                }\n                else if (bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame) {\n                    this.viewer.updateClientAreaForTextBoxShape(bodyWidget.containerShape, true, !shiftNextWidget);\n                }\n                else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bodyWidget.containerWidget) && bodyWidget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) {\n                    this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n                    if (bodyWidget.containerWidget.footNoteType === 'Footnote') {\n                        this.isRelayoutFootnote = true;\n                        this.viewer.clientArea.height = Number.POSITIVE_INFINITY;\n                        this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n                        //curretBlock.containerWidget.height -= curretBlock.height;\n                        this.viewer.clientActiveArea.y = curretBlock.containerWidget.containerWidget.y;\n                    }\n                    else {\n                        this.viewer.cutFromTop(bodyWidget.containerWidget.y);\n                        this.layoutfootNote(bodyWidget.containerWidget);\n                        return;\n                    }\n                    // curretBlock.containerWidget.height -= curretBlock.height;\n                }\n                else {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bodyWidget.page.footnoteWidget)) {\n                        if (bodyWidget.page.footnoteWidget.footNoteType === 'Footnote') {\n                            this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n                        }\n                        else {\n                            this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n                        }\n                    }\n                    else {\n                        this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n                    }\n                    // if (bodyWidget.page.footnoteWidget) {\n                    //     this.viewer.clientActiveArea.height -= bodyWidget.page.footnoteWidget.height;\n                    //     this.viewer.clientArea.height -= bodyWidget.page.footnoteWidget.height;\n                    // }\n                }\n                var pageIndexBeforeLayout = 0;\n                var pageIndexAfterLayout = 0;\n                if (curretBlock.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) {\n                    var blocks = curretBlock.getSplitWidgets();\n                    var splittedWidget = blocks[blocks.length - 1];\n                    pageIndexBeforeLayout = splittedWidget.containerWidget.page.index;\n                }\n                if (blockIndex > 0 || (curretBlock.bodyWidget.sectionFormat.breakCode === 'NoBreak' && curretBlock.bodyWidget.index !== 0 && curretBlock === bodyWidget.firstChild)) {\n                    curretBlock = curretBlock.combineWidget(this.viewer);\n                    var prevWidget = curretBlock.getSplitWidgets()[0].previousRenderedWidget;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevWidget) && prevWidget.wrapTextAround && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevWidget.getSplitWidgets()[0].previousRenderedWidget) &&\n                        prevWidget.bodyWidget.index === prevWidget.getSplitWidgets()[0].previousRenderedWidget.bodyWidget.index &&\n                        prevWidget.y < prevWidget.getSplitWidgets()[0].previousRenderedWidget.y) {\n                        prevWidget = prevWidget.getSplitWidgets()[0].previousRenderedWidget;\n                    }\n                    while (prevWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BlockWidget && prevWidget.isFieldCodeBlock) {\n                        prevWidget = prevWidget.getSplitWidgets()[0].previousRenderedWidget;\n                    }\n                    if (!((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevWidget) || prevWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) ||\n                        (prevWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) && !prevWidget.isEndsWithPageBreak && !prevWidget.isEndsWithColumnBreak) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isSkipShifting) && curretBlock.containerWidget !== prevWidget.containerWidget) {\n                            /* eslint-disable-next-line max-len */\n                            var prevBodyWidget = curretBlock.containerWidget;\n                            var newBodyWidget = prevWidget.containerWidget;\n                            var footWidgets = this.getFootNoteWidgetsOf(curretBlock);\n                            this.moveFootNotesToPage(footWidgets, prevBodyWidget, newBodyWidget);\n                            if (curretBlock.bodyWidget.sectionFormat.breakCode !== 'NoBreak' || (curretBlock.bodyWidget.index === prevWidget.bodyWidget.index)) {\n                                this.viewer.cutFromTop(prevWidget.y + prevWidget.height);\n                                this.updateContainerWidget(curretBlock, newBodyWidget, prevWidget.indexInOwner + 1, false);\n                            }\n                            else if (curretBlock.bodyWidget.sectionIndex !== prevWidget.bodyWidget.sectionIndex && prevWidget.bodyWidget.sectionFormat.numberOfColumns > 1 && curretBlock.bodyWidget.page === prevWidget.bodyWidget.page) {\n                                var firstBody = this.getBodyWidget(prevWidget.bodyWidget, true);\n                                var height = this.getNextWidgetHeight(firstBody);\n                                this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n                                this.viewer.clientActiveArea.y = height;\n                                this.viewer.clientArea.y = this.viewer.clientActiveArea.y;\n                                this.viewer.clientArea.height = this.viewer.clientActiveArea.height;\n                            }\n                            else {\n                                this.viewer.updateClientArea(curretBlock.bodyWidget, curretBlock.bodyWidget.page, true);\n                                this.viewer.cutFromTop(prevWidget.y + prevWidget.height);\n                            }\n                        }\n                        else {\n                            if (prevWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && prevWidget.height <= 0 && this.isMultiColumnDoc) {\n                                var prevPara = prevWidget;\n                                this.viewer.updateClientAreaForBlock(prevPara, true);\n                                this.layoutParagraph(prevPara, 0);\n                                this.viewer.updateClientArea(prevPara.bodyWidget, prevPara.bodyWidget.page, true);\n                            }\n                            this.viewer.cutFromTop(prevWidget.y + prevWidget.height);\n                        }\n                    }\n                    else if (prevWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && (prevWidget.isEndsWithPageBreak || prevWidget.isEndsWithColumnBreak) &&\n                        prevWidget.containerWidget === curretBlock.containerWidget) {\n                        this.moveBlocksToNextPage(prevWidget, false);\n                    }\n                }\n                var currentParagraph = void 0;\n                curretBlock = curretBlock.combineWidget(this.viewer);\n                if (curretBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                    this.clearTableWidget(curretBlock, true, true);\n                    curretBlock.isGridUpdated = false;\n                    currentParagraph = this.documentHelper.getFirstParagraphInFirstCell(curretBlock);\n                }\n                else {\n                    currentParagraph = curretBlock;\n                }\n                if ((this.viewer.owner.isDocumentLoaded) && this.viewer.owner.editorModule) {\n                    this.viewer.owner.editorModule.updateWholeListItems(currentParagraph);\n                }\n                this.viewer.updateClientAreaForBlock(curretBlock, true, undefined, false, true);\n                this.isRelayout = true;\n                this.documentHelper.layout.layoutBlock(curretBlock, 0);\n                this.isRelayout = false;\n                this.viewer.updateClientAreaForBlock(curretBlock, false);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bodyWidget.containerWidget) && bodyWidget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) {\n                    if (bodyWidget.containerWidget.footNoteType === 'Footnote') {\n                        this.layoutfootNote(bodyWidget.containerWidget);\n                    }\n                }\n                var footnote = bodyWidget;\n                if (bodyWidget.containerWidget == undefined && !(bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame) && footnote.page != undefined && footnote.page.footnoteWidget != undefined) {\n                    if (footnote.page.footnoteWidget.footNoteType === 'Footnote') {\n                        this.layoutfootNote(footnote.page.footnoteWidget);\n                    }\n                }\n                if (curretBlock.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) {\n                    var blocks = curretBlock.getSplitWidgets();\n                    var splittedWidget = blocks[blocks.length - 1];\n                    pageIndexAfterLayout = splittedWidget.containerWidget.page.index;\n                }\n                if (shiftNextWidget) {\n                    this.shiftNextWidgets(curretBlock);\n                }\n                else {\n                    this.layoutNextItemsBlock(curretBlock, this.viewer, undefined, pageIndexBeforeLayout !== pageIndexAfterLayout);\n                }\n            }\n            else if (bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget && !isSelectionInsideTable) {\n                this.reLayoutTable(bodyWidget.ownerTable);\n            }\n        }\n        this.isRelayoutFootnote = false;\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.checkAndGetBlock = function (containerWidget, blockIndex) {\n        if (containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame) {\n            return containerWidget.childWidgets[blockIndex];\n        }\n        else {\n            var sectionIndex = containerWidget.indexInOwner;\n            if (containerWidget.page.bodyWidgets.length <= 1) {\n                while (containerWidget && containerWidget.indexInOwner === sectionIndex) {\n                    if (containerWidget.childWidgets.length > 0 && containerWidget.firstChild.index <= blockIndex &&\n                        containerWidget.lastChild.index >= blockIndex) {\n                        for (var i = 0; i < containerWidget.childWidgets.length; i++) {\n                            var block = containerWidget.childWidgets[i];\n                            if (block.index === blockIndex) {\n                                return block;\n                            }\n                        }\n                    }\n                    if (containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) {\n                        containerWidget = containerWidget.nextRenderedWidget;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            else {\n                while (containerWidget) {\n                    if (containerWidget.childWidgets.length > 0) {\n                        for (var i = 0; i < containerWidget.childWidgets.length; i++) {\n                            var block = containerWidget.childWidgets[i];\n                            if (block.index === blockIndex) {\n                                return block;\n                            }\n                        }\n                    }\n                    if (containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) {\n                        containerWidget = containerWidget.nextRenderedWidget;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    //#endregion\n    //#region Table\n    Layout.prototype.layoutTable = function (table, startIndex) {\n        if (this.isFieldCode && !this.checkTableHasField(table) && !this.isRelayout) {\n            table.isFieldCodeBlock = true;\n            return table;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table.previousWidget) && this.viewer.clientActiveArea.height < 0 && !table.wrapTextAround) {\n            this.moveBlocksToNextPage(table.previousWidget, false);\n        }\n        table.isBidiTable = table.bidi;\n        if (!table.isGridUpdated) {\n            table.buildTableColumns();\n            table.isGridUpdated = true;\n        }\n        if (this.documentHelper.compatibilityMode !== 'Word2013'\n            && !table.isInsideTable\n            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table.firstChild.firstChild.leftMargin)) {\n            this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x -\n                _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n        }\n        var tableView = [table];\n        this.addTableWidget(this.viewer.clientActiveArea, tableView);\n        this.viewer.updateClientAreaTopOrLeft(table, true);\n        var clientActiveAreaForTableWrap;\n        var clientAreaForTableWrap;\n        var wrapDiff = 0;\n        if (table.wrapTextAround) {\n            clientActiveAreaForTableWrap = this.viewer.clientActiveArea.clone();\n            clientAreaForTableWrap = this.viewer.clientArea.clone();\n            this.updateClientAreaForWrapTable(tableView, table, true, clientActiveAreaForTableWrap, clientAreaForTableWrap);\n        }\n        else if (!(table.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame)) {\n            this.adjustClientAreaBasedOnTextWrapForTable(table, this.viewer.clientActiveArea);\n            if (this.isWrapText) {\n                wrapDiff = this.viewer.clientActiveArea.x - this.viewer.clientArea.x;\n                this.isWrapText = false;\n                table.x = this.viewer.clientActiveArea.x;\n            }\n        }\n        if (table.childWidgets.length > 0) {\n            var isHeader = table.childWidgets[0].rowFormat.isHeader;\n            table.header = isHeader;\n            table.continueHeader = isHeader;\n            table.headerHeight = 0;\n        }\n        var row = table.childWidgets[startIndex];\n        var index = tableView.length;\n        this.updateFootnoteHeight(table, true);\n        while (row) {\n            row = this.layoutRow(tableView, row);\n            row = row.nextRow;\n        }\n        this.updateFootnoteHeight(table, false);\n        if (this.documentHelper.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer && table.wrapTextAround && (table.positioning.verticalAlignment === 'Bottom' || table.positioning.verticalAlignment === 'Center' || table.positioning.verticalAlignment === 'Outside')) {\n            this.updateTableFloatPoints(table);\n            this.updateChildLocationForTable(table.y, table);\n        }\n        this.updateWidgetsToPage(tableView, [], table, true);\n        if (wrapDiff > 0) {\n            this.viewer.clientArea.x = this.viewer.clientArea.x - wrapDiff;\n        }\n        if (table.wrapTextAround) {\n            this.updateClientAreaForWrapTable(tableView, table, false, clientActiveAreaForTableWrap, clientAreaForTableWrap);\n        }\n        tableView[tableView.length - 1].isLayouted = true;\n        tableView[tableView.length - 1].isFieldCodeBlock = false;\n        if (this.documentHelper.compatibilityMode !== 'Word2013'\n            && !table.isInsideTable\n            && !table.wrapTextAround\n            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table.firstChild.firstChild.leftMargin)) {\n            this.viewer.clientArea.x = this.viewer.clientArea.x + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n        }\n        return tableView[tableView.length - 1];\n    };\n    Layout.prototype.updateFootnoteHeight = function (block, isUpdateFootHeight, getBottom) {\n        if ((!this.isInitialLoad || getBottom) && !block.isInsideTable && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(block.bodyWidget) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(block.bodyWidget.page.footnoteWidget) &&\n            block.bodyWidget.page.footnoteWidget.footNoteType === 'Footnote') {\n            var page = block.bodyWidget.page;\n            var section = page.bodyWidgets[0];\n            var pageHeight = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(section.sectionFormat.pageHeight);\n            var top_2 = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(section.sectionFormat.topMargin);\n            var bottomMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(section.sectionFormat.bottomMargin);\n            var bottom = 0.667 + bottomMargin;\n            var isEmptyWidget = false;\n            var headerDistance = 48;\n            var footerDistance = 48;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.sectionFormat)) {\n                top_2 = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(section.sectionFormat.topMargin);\n                headerDistance = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(section.sectionFormat.headerDistance);\n                footerDistance = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(section.sectionFormat.footerDistance);\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(page.headerWidget)) {\n                isEmptyWidget = page.headerWidget.isEmpty;\n                if (top_2 >= 0) {\n                    if (!isEmptyWidget || isEmptyWidget && this.documentHelper.owner.enableHeaderAndFooter) {\n                        top_2 = Math.min(Math.max(headerDistance + page.headerWidget.height, top_2), pageHeight / 100 * 40);\n                    }\n                }\n                else {\n                    top_2 = Math.abs(top_2);\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(page.footerWidget)) {\n                isEmptyWidget = page.footerWidget.isEmpty;\n                var footnoteHeight = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(page.footnoteWidget) ? page.footnoteWidget.height : 0;\n                footnoteHeight = Math.min(footnoteHeight, ((pageHeight - top_2 - bottom) / 100 * 90));\n                if (bottom >= 0) {\n                    if (!isEmptyWidget || isEmptyWidget && this.documentHelper.owner.enableHeaderAndFooter) {\n                        bottom = 0.667 + Math.min(pageHeight / 100 * 40, Math.max(footerDistance + page.footerWidget.height, bottomMargin));\n                    }\n                }\n                else {\n                    bottom = Math.abs(bottom);\n                }\n                if (!getBottom) {\n                    bottom += footnoteHeight;\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(page.footnoteWidget)) {\n                var footnoteHeight = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(page.footnoteWidget) ? page.footnoteWidget.height : 0;\n                //bottom += footnoteHeight;\n                var height = pageHeight - top_2 - bottom;\n                if (getBottom) {\n                    return height + this.viewer.clientArea.y;\n                }\n                if (isUpdateFootHeight && height === this.viewer.clientArea.height) {\n                    this.viewer.clientArea.height += footnoteHeight;\n                }\n                else if (height + footnoteHeight === this.viewer.clientArea.height) {\n                    this.viewer.clientArea.height -= footnoteHeight;\n                }\n            }\n        }\n        return 0;\n    };\n    Layout.prototype.updateClientAreaForWrapTable = function (tables, table, beforeLayout, clientActiveAreaForTableWrap, clientAreaForTableWrap) {\n        if (beforeLayout) {\n            if (table.wrapTextAround) {\n                this.updateTableFloatPoints(table);\n                var clienactare = this.viewer.clientActiveArea.clone();\n                var rect = this.adjustClientAreaBasedOnTextWrapForTable(table, this.viewer.clientActiveArea);\n                if (clienactare.x !== rect.x) {\n                    table.x = this.viewer.clientActiveArea.x;\n                }\n                if (clienactare.y !== rect.y) {\n                    table.y = this.viewer.clientActiveArea.y;\n                }\n            }\n        }\n        else {\n            if (table.wrapTextAround && table.bodyWidget) {\n                if (tables.length == 1) {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table.previousWidget) || table.isInHeaderFooter || table.isInsideTable) {\n                        var clientActiveArea = clientActiveAreaForTableWrap.clone();\n                        var clientArea = clientAreaForTableWrap.clone();\n                        if (table.bodyWidget.lastChild !== tables[tables.length - 1]) {\n                            this.viewer.clientActiveArea = clientActiveArea;\n                            this.viewer.clientArea = clientArea;\n                        }\n                        if (!table.isLayouted && clientActiveArea.height < table.height && table.width >= clientActiveArea.width) {\n                            this.moveBlocksToNextPage(table.previousWidget, false);\n                        }\n                    }\n                    else {\n                        this.documentHelper.tableLefts.pop();\n                        this.viewer.updateClientArea(table.bodyWidget, table.bodyWidget.page);\n                    }\n                    if (table.bodyWidget.floatingElements.indexOf(table) === -1) {\n                        table.bodyWidget.floatingElements.push(table);\n                    }\n                }\n                else {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table.previousWidget) && !table.isLayouted && clientActiveAreaForTableWrap.height < table.height && table.width >= clientActiveAreaForTableWrap.width) {\n                        var splittedTable_1 = table;\n                        do {\n                            this.moveBlocksToNextPage(splittedTable_1.previousWidget, false);\n                            splittedTable_1 = splittedTable_1.nextSplitWidget;\n                        } while (splittedTable_1);\n                    }\n                    this.documentHelper.tableLefts.pop();\n                    this.viewer.updateClientArea(table.bodyWidget, table.bodyWidget.page);\n                    for (var z = 0; z < tables.length; z++) {\n                        var bodyWidget = tables[z].bodyWidget;\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bodyWidget) && bodyWidget.floatingElements.indexOf(tables[z]) === -1) {\n                            bodyWidget.floatingElements.push(tables[z]);\n                        }\n                    }\n                    var splittedTable = tables[tables.length - 1];\n                    this.viewer.cutFromTop(this.viewer.clientActiveArea.y + splittedTable.height + splittedTable.tableFormat.borders.bottom.lineWidth);\n                }\n            }\n        }\n    };\n    Layout.prototype.addTableWidget = function (area, table, create) {\n        var tableWidget = table[table.length - 1];\n        if (create) {\n            tableWidget = this.createTableWidget(tableWidget);\n            table.push(tableWidget);\n        }\n        tableWidget.width = area.width;\n        tableWidget.x = area.x;\n        tableWidget.y = area.y;\n        //Update the table height of tableWidget when cell spacing has been defined.\n        if (tableWidget.tableFormat.cellSpacing > 0) {\n            tableWidget.height = tableWidget.height + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(tableWidget.tableFormat.cellSpacing);\n            if (!tableWidget.isBidiTable) {\n                /* eslint-disable-next-line max-len */\n                tableWidget.leftBorderWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(this.getTableLeftBorder(tableWidget.tableFormat.borders).getLineWidth());\n                /* eslint-disable-next-line max-len */\n                tableWidget.rightBorderWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(this.getTableRightBorder(tableWidget.tableFormat.borders).getLineWidth());\n            }\n            else { // Right to left direction table.\n                /* eslint-disable-next-line max-len */\n                tableWidget.leftBorderWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(this.getTableRightBorder(tableWidget.tableFormat.borders).getLineWidth());\n                /* eslint-disable-next-line max-len */\n                tableWidget.rightBorderWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(this.getTableLeftBorder(tableWidget.tableFormat.borders).getLineWidth());\n            }\n            /* eslint-disable-next-line max-len */\n            tableWidget.topBorderWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(this.getTableTopBorder(tableWidget.tableFormat.borders).getLineWidth());\n            /* eslint-disable-next-line max-len */\n            tableWidget.bottomBorderWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(this.getTableBottomBorder(tableWidget.tableFormat.borders).getLineWidth());\n            tableWidget.x += tableWidget.leftBorderWidth;\n            tableWidget.y += tableWidget.topBorderWidth;\n            tableWidget.width -= tableWidget.leftBorderWidth;\n            tableWidget.width -= tableWidget.rightBorderWidth;\n            tableWidget.height += tableWidget.bottomBorderWidth;\n        }\n        return tableWidget;\n    };\n    Layout.prototype.updateWidgetsToPage = function (tables, rows, table, rearrangeRow, endRowWidget) {\n        var viewer = this.viewer;\n        var tableWidget = tables[tables.length - 1];\n        if (!table.isInsideTable) {\n            for (var i = 0; i < tables.length; i++) {\n                this.updateHeightForTableWidget(tables, rows, tables[i], endRowWidget);\n            }\n            if (tableWidget.childWidgets.length > 0 && tableWidget.y !== tableWidget.childWidgets[0].y) {\n                tableWidget.y = tableWidget.childWidgets[0].y;\n            }\n            // Need to update on this further\n            //Adds the table widget to owner cell widget.\n            // (viewer.renderedElements.get(table.associatedCell)[viewer.renderedElements.get(table.associatedCell).length - 1] as TableCellWidget).childWidgets.push(tableWidget);\n            // tableWidget.containerWidget = viewer.renderedElements.get(table.associatedCell)[viewer.renderedElements.get(table.associatedCell).length - 1] as BodyWidget;\n            // (viewer.renderedElements.get(table.associatedCell)[viewer.renderedElements.get(table.associatedCell).length - 1] as TableCellWidget).height = (viewer.renderedElements.get(table.associatedCell)[viewer.renderedElements.get(table.associatedCell).length - 1] as TableCellWidget).height + tableWidget.height;\n        }\n        // Shift the widgets for Right to left directed table.\n        if (table.isBidiTable && rearrangeRow) {\n            for (var i = 0; i < tables.length; i++) {\n                var layoutedTable = tables[i];\n                for (var j = 0; j < layoutedTable.childWidgets.length; j++) {\n                    var layoutedRow = layoutedTable.childWidgets[j];\n                    layoutedRow.shiftWidgetForRtlTable();\n                }\n            }\n        }\n        if (table.tableFormat.cellSpacing > 0) {\n            /* eslint-disable-next-line max-len */\n            if (tableWidget.y + tableWidget.height + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(table.tableFormat.cellSpacing) > viewer.clientArea.bottom && viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.WebLayoutViewer) {\n                //update the table height when split to next page. Which is equivalent Ms Word Behaviour.\n                //In Ms Word if the Table Split to next page the bottom spacing of the table will be half of the current spacing.\n                //And the Remaining space will be used in next page top of the table.\n                tableWidget.height = tableWidget.height - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(table.tableFormat.cellSpacing) / 2;\n            }\n            //Update the current Y position of current clientactivearea.\n            viewer.cutFromTop(tableWidget.y + tableWidget.height);\n        }\n        if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.WebLayoutViewer) {\n            table.containerWidget.height += table.height;\n        }\n        if (table.bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.HeaderFooterWidget && !table.wrapTextAround) {\n            table.containerWidget.height += table.height;\n            if (this.viewer.owner.enableHeaderAndFooter && table.bodyWidget.headerFooterType.indexOf('Footer') !== -1) {\n                this.shiftFooterChildLocation(table.bodyWidget, this.viewer);\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.updateHeightForTableWidget = function (tables, rows, tableWidget, endRowWidget) {\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            var rowWidget = tableWidget.childWidgets[i];\n            if (rowWidget === endRowWidget) {\n                break;\n            }\n            this.updateHeightForRowWidget(this.viewer, true, tables, rows, rowWidget, false, endRowWidget);\n        }\n    };\n    //#endregion\n    //#region Row\n    Layout.prototype.layoutRow = function (tableWidget, row, isRowLayout) {\n        var isNestedTable = row.ownerTable.isInsideTable;\n        if (!isNestedTable) {\n            this.updateExistingFootnoteHeight(row);\n        }\n        var viewer = this.viewer;\n        var rowWidgets = [row];\n        this.addTableRowWidget(viewer.clientActiveArea, rowWidgets);\n        viewer.updateClientAreaForRow(row, true);\n        var topMargin = this.getMaxTopCellMargin(row);\n        var bottomMargin = this.getMaxBottomCellMargin(row);\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cell = row.childWidgets[i];\n            this.layoutCell(cell, topMargin + row.topBorderWidth, bottomMargin + row.bottomBorderWidth);\n        }\n        viewer.updateClientAreaForRow(row, false);\n        var rows = [row];\n        if (!isRowLayout) {\n            this.updateWidgetsToTable(tableWidget, rows, row, false);\n        }\n        if (!isNestedTable) {\n            this.layoutedFootnoteElement = [];\n        }\n        return rows[rows.length - 1];\n    };\n    Layout.prototype.updateExistingFootnoteHeight = function (row) {\n        this.layoutedFootnoteElement = [];\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.bodyWidget.page.footnoteWidget) && row.bodyWidget.page.footnoteWidget.bodyWidgets.length !== 0) {\n            this.existFootnoteHeight = row.bodyWidget.page.footnoteWidget.height;\n        }\n        else {\n            this.existFootnoteHeight = 0;\n        }\n    };\n    Layout.prototype.isIntersecting = function (startPosition, endPosition, adjacentStartPosition, adjacentEndPosition) {\n        return ((_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjacentStartPosition, 2) <= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(startPosition, 2) || _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjacentStartPosition, 2) < _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(endPosition, 2))\n            && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjacentEndPosition, 2) > _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(startPosition, 2));\n    };\n    Layout.prototype.getAdjacentRowCell = function (cell, cellStartPos, cellEndPos, rowIndex) {\n        var adjCells = [];\n        var columnLength = cell.ownerTable.tableHolder.columns.length;\n        var adjRow = cell.ownerTable.childWidgets[rowIndex];\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(adjRow)) {\n            return adjCells;\n        }\n        var prevCellEndPos = 0;\n        var prevCellEndIndex = 0;\n        var colSpan = cell.cellFormat.columnSpan;\n        var columnIndex = cell.columnIndex;\n        if (adjRow.rowFormat.gridBefore > 0) {\n            if (adjRow.rowFormat.gridBefore > columnIndex + colSpan) {\n                //When previous rows Grid before occupies more than cell width, returns empty collection.\n                return adjCells;\n            }\n            prevCellEndPos = adjRow.rowFormat.beforeWidth;\n            prevCellEndIndex = adjRow.rowFormat.gridBefore;\n        }\n        for (var i = 0; i < adjRow.childWidgets.length; i++) {\n            var adjCell = adjRow.childWidgets[i];\n            var adjCellStartPos = adjCell.x - adjCell.margin.left;\n            var adjCellEndPos = adjCell.x + adjCell.width + adjCell.margin.right;\n            var adjCellEndIndex = adjCell.columnIndex + adjCell.cellFormat.columnSpan;\n            if (i == adjRow.childWidgets.length - 1 ||\n                (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjCellStartPos, 2) > _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(prevCellEndPos, 2)\n                    && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjCellStartPos, 2) > _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(cellStartPos, 2))) {\n                if (i == adjRow.childWidgets.length - 1 && adjRow.rowFormat.gridAfter > 0\n                    && adjCellEndIndex + adjRow.rowFormat.gridAfter === columnLength) {\n                    //Only grid after present after this adjacent cell, no need to continue next.\n                    return adjCells;\n                }\n                //When there is difference in adjacent cell start position and previous cell end position, there is an vertical merge continued cell.\n                //Iterates with the previous end cell column index till adjacent cell's column index to retrieve the vertical merge start cell in that region.\n                if (this.isIntersecting(cellStartPos, cellEndPos, prevCellEndPos, adjCellStartPos)) {\n                    while (colSpan > 0) {\n                        var prevRowAdjCell = adjRow.getVerticalMergeStartCell(columnIndex, colSpan);\n                        var prevRowAdjCellEndPos = 0;\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevRowAdjCell)) {\n                            var adjCellColumnSpan = prevRowAdjCell.cellFormat.columnSpan;\n                            adjCells.push(prevRowAdjCell);\n                            prevRowAdjCellEndPos = prevRowAdjCell.x + prevRowAdjCell.width + prevRowAdjCell.margin.right;\n                            cellStartPos = prevRowAdjCellEndPos;\n                            prevCellEndIndex = prevRowAdjCell.columnIndex + adjCellColumnSpan;\n                            colSpan -= prevCellEndIndex - columnIndex;\n                            columnIndex = prevCellEndIndex;\n                            if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(prevRowAdjCellEndPos, 2) >= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(cellEndPos, 2)) {\n                                break;\n                            }\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n            if (this.isIntersecting(cellStartPos, cellEndPos, adjCellStartPos, adjCellEndPos)) {\n                adjCells.push(adjCell);\n                cellStartPos = adjCellEndPos;\n                colSpan -= adjCellEndIndex - columnIndex;\n                columnIndex = adjCellEndIndex;\n            }\n            if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjCellEndPos, 2) >= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(cellEndPos, 2)) {\n                //Once Adjacent cell end position reaches the current cell end position, no need to iterate next.\n                break;\n            }\n            prevCellEndPos = adjCellEndPos;\n            prevCellEndIndex = adjCellEndIndex;\n        }\n        return adjCells;\n    };\n    Layout.prototype.addTableRowWidget = function (area, row) {\n        var rowWidget = row[row.length - 1];\n        if ((rowWidget.rowFormat.beforeWidth !== 0 || rowWidget.rowFormat.gridBeforeWidth !== 0) && ((this.documentHelper.alignTablesRowByRow) ? rowWidget.ownerTable.tableFormat.tableAlignment === 'Left' : true)) {\n            rowWidget.x += (rowWidget.rowFormat.beforeWidth !== 0) ? rowWidget.rowFormat.beforeWidth : rowWidget.rowFormat.gridBeforeWidth;\n        }\n        else {\n            rowWidget.x = area.x;\n        }\n        rowWidget.y = area.y;\n        rowWidget.width = area.width;\n        var borderWidth = 0;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.ownerTable) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.ownerTable.tableFormat)\n            && rowWidget.ownerTable.tableFormat.cellSpacing > 0) {\n            rowWidget.height = rowWidget.height + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(rowWidget.ownerTable.tableFormat.cellSpacing);\n            //Update the table height with the border width to layout the border when the cell spacing is defined..\n            for (var j = 0; j < rowWidget.childWidgets.length; j++) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.childWidgets[j].cellFormat)\n                    && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.childWidgets[j].cellFormat.borders)) {\n                    /* eslint-disable-next-line max-len */\n                    var width = _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget.getCellBottomBorder(rowWidget.childWidgets[j]).getLineWidth();\n                    if (width > borderWidth) {\n                        borderWidth = width;\n                    }\n                }\n            }\n            //Maximum border width is calculated and hold it in a variable to add with the padding of the cells.\n            rowWidget.bottomBorderWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(borderWidth);\n            if (rowWidget.index > 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.previousWidget)) {\n                var prevRow = rowWidget.previousWidget;\n                borderWidth = 0;\n                for (var i = 0; i < prevRow.childWidgets.length; i++) {\n                    /* eslint-disable-next-line max-len */\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevRow.childWidgets[i].cellFormat) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevRow.childWidgets[i].cellFormat.borders)) {\n                        /* eslint-disable-next-line max-len */\n                        var value = _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget.getCellBottomBorder(prevRow.childWidgets[i]).getLineWidth();\n                        if (value > borderWidth) {\n                            borderWidth = value;\n                        }\n                    }\n                }\n                //Maximum border width is calculated and hold it in a variable to add with the padding of the cells.\n                rowWidget.topBorderWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(borderWidth);\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.childWidgets)) {\n            for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n                /* eslint-disable-next-line max-len */\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.childWidgets[i].cellFormat) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.childWidgets[i].cellFormat.borders)) {\n                    /* eslint-disable-next-line max-len */\n                    var topBorderWidth = _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget.getCellTopBorder(rowWidget.childWidgets[i]).getLineWidth();\n                    if (topBorderWidth > borderWidth) {\n                        borderWidth = topBorderWidth;\n                    }\n                }\n            }\n        }\n        //Maximum border width is calculated and hold it in a variable to add with the padding of the cells.\n        rowWidget.topBorderWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(borderWidth);\n        //Update the table height of tableWidget when cell spacing has been defined.\n        /* eslint-disable-next-line max-len */\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.ownerTable) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.ownerTable.tableFormat) && rowWidget.ownerTable.tableFormat.cellSpacing <= 0 && rowWidget.rowIndex === rowWidget.ownerTable.childWidgets.length - 1) {\n            // Update the bottom width for last row .\n            for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n                /* eslint-disable-next-line max-len */\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.childWidgets[i].cellFormat) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowWidget.childWidgets[i].cellFormat.borders)) {\n                    /* eslint-disable-next-line max-len */\n                    var bottomBorderWidth = _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget.getCellBottomBorder(rowWidget.childWidgets[i]).getLineWidth();\n                    if (bottomBorderWidth > borderWidth) {\n                        borderWidth = bottomBorderWidth;\n                    }\n                }\n            }\n            //Maximum border width is calculated and hold it in a variable to add with the padding of the cells.\n            rowWidget.bottomBorderWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(borderWidth);\n        }\n        //tableRowWidget.ownerWidget = owner;\n        return rowWidget;\n    };\n    Layout.prototype.getMaxTopCellMargin = function (row) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.childWidgets)) {\n            return 0;\n        }\n        var value = 0;\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cell = row.childWidgets[i];\n            var topMargin = 0;\n            if (cell.cellFormat.hasValue('topMargin')) {\n                topMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.cellFormat.topMargin);\n            }\n            else if (row.rowFormat.hasValue('topMargin')) {\n                topMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(row.rowFormat.topMargin);\n            }\n            else {\n                topMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(row.ownerTable.tableFormat.topMargin);\n            }\n            if (topMargin > value) {\n                value = topMargin;\n            }\n        }\n        return value;\n    };\n    Layout.prototype.getMaxBottomCellMargin = function (row) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.childWidgets)) {\n            return 0;\n        }\n        var value = 0;\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cell = row.childWidgets[i];\n            var bottomMargin = 0;\n            if (cell.cellFormat.hasValue('bottomMargin')) {\n                bottomMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(cell.cellFormat.bottomMargin);\n            }\n            else if (row.rowFormat.hasValue('bottomMargin')) {\n                bottomMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(row.rowFormat.bottomMargin);\n            }\n            else {\n                bottomMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(row.ownerTable.tableFormat.bottomMargin);\n            }\n            if (bottomMargin > value) {\n                value = bottomMargin;\n            }\n        }\n        return value;\n    };\n    //#endregion Row\n    //#region cell\n    Layout.prototype.layoutCell = function (cell, maxCellMarginTop, maxCellMarginBottom) {\n        var viewer = this.viewer;\n        this.addTableCellWidget(cell, viewer.clientActiveArea, maxCellMarginTop, maxCellMarginBottom);\n        this.updateTopBorders(cell);\n        viewer.updateClientAreaForCell(cell, true);\n        if (cell.childWidgets.length === 0) {\n            var paragraphWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget();\n            paragraphWidget.characterFormat = new _format_index__WEBPACK_IMPORTED_MODULE_4__.WCharacterFormat();\n            paragraphWidget.paragraphFormat = new _format_index__WEBPACK_IMPORTED_MODULE_4__.WParagraphFormat();\n            paragraphWidget.index = 0;\n            var lineWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.LineWidget(paragraphWidget);\n            paragraphWidget.childWidgets.push(lineWidget);\n            cell.childWidgets.push(paragraphWidget);\n            paragraphWidget.paragraphFormat.borders = new _format_index__WEBPACK_IMPORTED_MODULE_4__.WBorders();\n        }\n        for (var i = 0; i < cell.childWidgets.length; i++) {\n            var block = cell.childWidgets[i];\n            viewer.updateClientAreaForBlock(block, true);\n            block.containerWidget = cell;\n            this.layoutBlock(block, 0);\n            viewer.updateClientAreaForBlock(block, false);\n        }\n        this.updateWidgetToRow(cell);\n        viewer.updateClientAreaForCell(cell, false);\n    };\n    Layout.prototype.isInsertTable = function () {\n        if (this.documentHelper.owner.editorHistoryModule && this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo && this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'InsertTable')\n            return true;\n        else\n            return false;\n    };\n    Layout.prototype.updateTopBorders = function (cell) {\n        cell.updatedTopBorders = [];\n        if (cell.ownerTable.tableFormat.cellSpacing === 0) {\n            var cellTopBorder = cell.cellFormat.borders.top;\n            if (!cellTopBorder.isBorderDefined || (cellTopBorder.isBorderDefined\n                && cellTopBorder.lineStyle === 'None' && cellTopBorder.lineWidth === 0 &&\n                cellTopBorder.hasValue('color'))) {\n                cellTopBorder = cell.ownerRow.rowFormat.borders.horizontal;\n            }\n            if (!cellTopBorder.isBorderDefined) {\n                cellTopBorder = cell.ownerRow.ownerTable.tableFormat.borders.horizontal;\n            }\n            var cellStartPos = cell.x - cell.margin.left;\n            var cellEndPos = cell.x + cell.width + cell.margin.right;\n            var adjCells = this.getAdjacentRowCell(cell, cellStartPos, cellEndPos, cell.ownerRow.indexInOwner - 1);\n            for (var j = 0; j < adjCells.length; j++) {\n                var adjCell = adjCells[j];\n                var prevCellBottomBorder = adjCell.cellFormat.borders.bottom;\n                if (!prevCellBottomBorder.isBorderDefined || (prevCellBottomBorder.isBorderDefined\n                    && prevCellBottomBorder.lineStyle === 'None' && prevCellBottomBorder.lineWidth === 0 &&\n                    prevCellBottomBorder.hasValue('color'))) {\n                    prevCellBottomBorder = adjCell.ownerRow.rowFormat.borders.horizontal;\n                }\n                if (!prevCellBottomBorder.isBorderDefined) {\n                    prevCellBottomBorder = adjCell.ownerRow.ownerTable.tableFormat.borders.horizontal;\n                }\n                var border = void 0;\n                if (cellTopBorder.lineStyle === 'None' || cellTopBorder.lineStyle === 'Cleared') {\n                    border = prevCellBottomBorder;\n                }\n                else if (prevCellBottomBorder.lineStyle === 'Cleared' || prevCellBottomBorder.lineStyle === 'None') {\n                    border = cellTopBorder;\n                }\n                else {\n                    border = cell.getBorderBasedOnPriority(cellTopBorder, prevCellBottomBorder);\n                }\n                var adjCellStartPos = adjCell.x - adjCell.margin.left;\n                var adjCellEndPos = adjCell.x + adjCell.width + adjCell.margin.right;\n                if (j === 0 && cellStartPos < adjCellStartPos) {\n                    cell.updatedTopBorders.push({ border: cellTopBorder, width: (adjCellStartPos - cellStartPos) });\n                }\n                if (border) {\n                    var width = 0;\n                    /* eslint-disable-next-line max-len */\n                    if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjCellEndPos, 2) === _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(cellEndPos, 2) && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjCellStartPos, 2) === _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(cellStartPos, 2)) {\n                        width = cellEndPos - cellStartPos;\n                        /* eslint-disable-next-line max-len */\n                    }\n                    else if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjCellStartPos, 2) >= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(cellStartPos, 2) && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjCellEndPos, 2) >= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(cellEndPos, 2)) {\n                        width = cellEndPos - adjCellStartPos;\n                        /* eslint-disable-next-line max-len */\n                    }\n                    else if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjCellStartPos, 2) >= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(cellStartPos, 2) && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjCellEndPos, 2) <= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(cellEndPos, 2)) {\n                        width = adjCellEndPos - adjCellStartPos;\n                        /* eslint-disable-next-line max-len */\n                    }\n                    else if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjCellStartPos, 2) <= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(cellStartPos, 2) && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjCellEndPos, 2) <= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(cellEndPos, 2)) {\n                        width = adjCellEndPos - cellStartPos;\n                        /* eslint-disable-next-line max-len */\n                    }\n                    else if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjCellStartPos, 2) <= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(cellStartPos, 2) && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(adjCellEndPos, 2) >= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(cellEndPos, 2)) {\n                        width = cellEndPos - cellStartPos;\n                    }\n                    else {\n                        width = cellEndPos - cellStartPos;\n                    }\n                    if (width < 0) {\n                        width = 0;\n                    }\n                    cell.updatedTopBorders.push({ border: border, width: width });\n                }\n                if (j === (adjCells.length - 1) && cellEndPos > adjCellEndPos) {\n                    cell.updatedTopBorders.push({ border: cellTopBorder, width: (cellEndPos - adjCellEndPos) });\n                }\n            }\n        }\n    };\n    //endregion cell\n    //#region Shifting\n    Layout.prototype.shiftLayoutedItems = function (reLayout, isMultiColumnShift) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentHelper.blockToShift) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentHelper.blockToShift.containerWidget) || (this.viewer.owner.editorModule && this.viewer.owner.editorModule.restrictLayout)) {\n            this.documentHelper.blockToShift = undefined;\n            this.checkAndShiftEndnote();\n            if (!reLayout) {\n                this.documentHelper.removeEmptyPages();\n            }\n            return;\n        }\n        var block = this.documentHelper.blockToShift;\n        var isColumnBreak = this.getColumnBreak(block.bodyWidget);\n        if (!isColumnBreak && this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer && !this.isMultiColumnSplit && block === block.bodyWidget.firstChild && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(block.bodyWidget.previousRenderedWidget) && block.bodyWidget.sectionIndex !== block.bodyWidget.previousRenderedWidget.sectionIndex && block.bodyWidget.previousRenderedWidget.sectionFormat.columns.length > 1) {\n            var previousBodyWidget = block.bodyWidget.previousRenderedWidget;\n            var lastbody = this.getBodyWidget(previousBodyWidget, false);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastbody.nextRenderedWidget) && lastbody.page === lastbody.nextRenderedWidget.page) {\n                this.splitBodyWidgetBasedOnColumn(previousBodyWidget);\n            }\n        }\n        var isFirstBlock = false;\n        var lastPage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n        var lastSection = lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1];\n        if ((!isColumnBreak || (reLayout && this.isSectionEndsWithColumnBreak(block.bodyWidget))) && this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer && !this.isMultiColumnSplit && block.bodyWidget.sectionFormat.columns.length > 1) {\n            // let lastbody: BodyWidget = this.getBodyWidget(block.bodyWidget, false);\n            // if (((!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.page === (lastbody.nextRenderedWidget as BodyWidget).page) && !(block.bodyWidget.firstChild === block && isNullOrUndefined(block.bodyWidget.previousWidget) && this.viewer.clientActiveArea.height > (block.firstChild as Widget).height))|| (this.documentHelper.endnoteCollection.length > 0 && lastSection === lastbody)) {\n            if (block.bodyWidget.columnIndex === 0 && block === block.bodyWidget.firstChild && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(block.previousRenderedWidget) && block.bodyWidget.page === block.previousRenderedWidget.bodyWidget.page) {\n                block.bodyWidget.y = this.viewer.clientActiveArea.y;\n            }\n            isFirstBlock = block === block.bodyWidget.firstChild;\n            this.reLayoutMultiColumn(block.bodyWidget, isFirstBlock, block.index);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentHelper.blockToShift)) {\n                return;\n            }\n            block = this.documentHelper.blockToShift;\n            // }\n        }\n        var sectionIndex = block.bodyWidget.index;\n        this.reLayoutOrShiftWidgets(block, this.viewer, isMultiColumnShift);\n        var updateNextBlockList = true;\n        // If flow layout, then all sections are in single page. Hence need to update till last block of last section.\n        // Todo: For page layout and section break continuous, need to handle the same.\n        var splittedWidget = block.getSplitWidgets();\n        var nextBlock = splittedWidget[splittedWidget.length - 1].nextRenderedWidget;\n        var footnoteCollection = [];\n        while (nextBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BlockWidget && (nextBlock.bodyWidget.index === sectionIndex || (nextBlock.bodyWidget.sectionFormat.breakCode === 'NoBreak' && block.bodyWidget.sectionFormat.pageWidth === nextBlock.bodyWidget.sectionFormat.pageWidth && block.bodyWidget.sectionFormat.pageHeight === nextBlock.bodyWidget.sectionFormat.pageHeight))) {\n            if (isMultiColumnShift && nextBlock.bodyWidget.sectionFormat.columns.length === 0) {\n                return;\n            }\n            isColumnBreak = this.getColumnBreak(nextBlock.bodyWidget);\n            if ((!isColumnBreak || (reLayout && this.isSectionEndsWithColumnBreak(nextBlock.bodyWidget))) && this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer && !this.isMultiColumnSplit && nextBlock.bodyWidget.sectionFormat.columns.length > 1) {\n                // let lastbody: BodyWidget = this.getBodyWidget(nextBlock.bodyWidget, false);\n                // if (((!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.page === (lastbody.nextRenderedWidget as BodyWidget).page) && !(nextBlock.bodyWidget.firstChild === nextBlock && isNullOrUndefined(nextBlock.bodyWidget.previousWidget) && this.viewer.clientActiveArea.height > (nextBlock.firstChild as Widget).height))|| (this.documentHelper.endnoteCollection.length > 0 && lastSection === lastbody)) {\n                if (nextBlock.bodyWidget.columnIndex === 0 && nextBlock === nextBlock.bodyWidget.firstChild && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextBlock.previousRenderedWidget) && nextBlock.bodyWidget.page === nextBlock.previousRenderedWidget.bodyWidget.page) {\n                    nextBlock.bodyWidget.y = this.viewer.clientActiveArea.y;\n                }\n                isFirstBlock = nextBlock === nextBlock.bodyWidget.firstChild;\n                this.reLayoutMultiColumn(nextBlock.bodyWidget, isFirstBlock, nextBlock.index);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentHelper.blockToShift)) {\n                    return;\n                }\n                nextBlock = this.documentHelper.blockToShift;\n                // }\n            }\n            var currentWidget = undefined;\n            var blocks = block.getSplitWidgets();\n            currentWidget = blocks[blocks.length - 1];\n            block = nextBlock;\n            updateNextBlockList = false;\n            var nextWidget = undefined;\n            blocks = block.getSplitWidgets();\n            if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                nextWidget = blocks[0];\n            }\n            else {\n                if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                    nextWidget = blocks[0];\n                }\n            }\n            if (!this.documentHelper.owner.editorModule.isFootnoteElementRemoved && currentWidget.containerWidget === nextWidget.containerWidget\n                && (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(nextWidget.y, 2) === _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(this.viewer.clientActiveArea.y, 2)) &&\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextWidget.nextWidget)) {\n                break;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentWidget.floatingElements)) {\n                //this.shiftLayoutFloatingItems(currentWidget as ParagraphWidget);\n            }\n            updateNextBlockList = true;\n            // Here, we have added this condition to skip the non-layouted blocks during relayouting.\n            if (!block.isFieldCodeBlock) {\n                this.reLayoutOrShiftWidgets(block, this.viewer, isMultiColumnShift, footnoteCollection);\n            }\n            if (this.keepWithNext) {\n                block = this.documentHelper.blockToShift;\n                this.keepWithNext = false;\n            }\n            if (!this.isMultiColumnSplit && isColumnBreak && block.bodyWidget.sectionFormat.numberOfColumns > 1 && block.bodyWidget.nextWidget && block.nextRenderedWidget && block.bodyWidget.index !== block.nextRenderedWidget.bodyWidget.index) {\n                var clientY = this.viewer.clientActiveArea.y;\n                var clientHeight = this.viewer.clientActiveArea.height;\n                this.viewer.updateClientArea(block.bodyWidget.nextWidget, block.bodyWidget.nextWidget.page);\n                this.viewer.clientActiveArea.height = clientHeight;\n                this.viewer.clientActiveArea.y = clientY;\n            }\n            if (this.isMultiColumnSplit && block.bodyWidget.sectionFormat.numberOfColumns > 1 && block === block.bodyWidget.lastChild && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(block.bodyWidget.nextRenderedWidget) && block.bodyWidget.sectionIndex !== block.bodyWidget.nextRenderedWidget.sectionIndex && block.bodyWidget.page === block.bodyWidget.nextRenderedWidget.page) {\n                return;\n            }\n            splittedWidget = block.getSplitWidgets();\n            nextBlock = splittedWidget[splittedWidget.length - 1].nextRenderedWidget;\n        }\n        if (this.viewer.owner.editorModule) {\n            this.viewer.owner.editorModule.updateListItemsTillEnd(block, updateNextBlockList);\n        }\n        this.documentHelper.blockToShift = undefined;\n        var viewer = this.viewer;\n        if (viewer.owner.editorModule.isFootnoteElementRemoved) {\n            var lastPage_1 = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n            var lastChild = lastPage_1.bodyWidgets[lastPage_1.bodyWidgets.length - 1];\n            var endNote = lastPage_1.endnoteWidget;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(endNote)) {\n                var clientArea = this.viewer.clientArea.clone();\n                var clientActiveArea = this.viewer.clientActiveArea.clone();\n                var y = lastChild.y;\n                if (lastChild.childWidgets.length > 0) {\n                    var lastPageLastPara = lastChild.childWidgets[lastChild.childWidgets.length - 1];\n                    y = lastPageLastPara.y + lastPageLastPara.height;\n                }\n                this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - y;\n                this.viewer.clientActiveArea.x = this.viewer.clientArea.x;\n                this.viewer.clientActiveArea.width = this.viewer.clientArea.width;\n                this.viewer.clientActiveArea.y = y;\n                this.layoutfootNote(endNote);\n                this.viewer.clientArea = clientArea;\n                this.viewer.clientActiveArea = clientActiveArea;\n            }\n        }\n        // if (viewer instanceof PageLayoutViewer) {\n        this.documentHelper.removeEmptyPages();\n        this.updateFieldElements(reLayout);\n        var firstPage = this.documentHelper.pages[0];\n        if (firstPage.bodyWidgets[0].sectionIndex > 0) {\n            var page = firstPage;\n            do {\n                this.documentHelper.layout.layoutHeaderFooter(page.bodyWidgets[0], this.viewer, page);\n                page = page.nextPage;\n            } while (page);\n            while (firstPage.bodyWidgets[0].sectionIndex > 0) {\n                this.documentHelper.owner.editorModule.updateSectionIndex(undefined, firstPage.bodyWidgets[0], false);\n            }\n        }\n        if (!(block.bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) && !this.isRelayoutFootnote && block.bodyWidget.page.endnoteWidget) {\n            this.checkAndShiftEndnote(true);\n        }\n        if (((!this.documentHelper.owner.enableLockAndEdit && !this.documentHelper.owner.enableHeaderAndFooter) || !reLayout) && !this.isMultiColumnSplit) {\n            viewer.updateScrollBars();\n        }\n        // }\n    };\n    Layout.prototype.isSectionEndsWithColumnBreak = function (section) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section) && section.childWidgets.length > 0 && section.lastChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n            var paragraph = section.lastChild;\n            return paragraph.isEndsWithColumnBreak;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.checkAndShiftEndnote = function (isRelayout) {\n        if (this.documentHelper.owner.selectionModule) {\n            var endBlock = this.documentHelper.owner.selectionModule.end.paragraph;\n            if (endBlock.isInsideTable) {\n                endBlock = this.getParentTable(endBlock);\n            }\n            if (endBlock && !endBlock.isInHeaderFooter && !(endBlock.bodyWidget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(endBlock.nextRenderedWidget) || isRelayout)) {\n                if (!(endBlock.bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) && !this.isRelayoutFootnote\n                    && endBlock.bodyWidget.page.endnoteWidget) {\n                    var page = endBlock.bodyWidget.page;\n                    var clientActiveArea = this.viewer.clientActiveArea.clone();\n                    var bodyWidget = this.getBodyWidget(page.bodyWidgets[page.bodyWidgets.length - 1], true);\n                    this.viewer.updateClientArea(bodyWidget, bodyWidget.page);\n                    var height = this.getNextWidgetHeight(bodyWidget);\n                    if (height > 0) {\n                        this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n                        this.viewer.clientActiveArea.y = height;\n                    }\n                    this.layoutfootNote(page.endnoteWidget);\n                    this.viewer.clientActiveArea = clientActiveArea;\n                }\n            }\n            else if (this.isEndnoteContentChanged && isRelayout && !this.isRelayoutFootnote) {\n                this.reLayoutEndnote();\n            }\n        }\n    };\n    Layout.prototype.updateFieldElements = function (reLayout) {\n        for (var i = 0; i < this.documentHelper.fields.length; i++) {\n            var fieldBegin = this.documentHelper.fields[i];\n            if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer || (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.WebLayoutViewer && !(fieldBegin.line.paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame || fieldBegin.line.paragraph.bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.HeaderFooterWidget))) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentHelper.selection)) {\n                    var fieldCode = this.documentHelper.selection.getFieldCode(fieldBegin);\n                    var regex = /^(?!.*\\bhyperlink\\b)(?!.*\\bnumpages\\b).*\\bpage\\b.*$/;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(fieldCode) && (fieldCode.toLowerCase().match('numpages') || fieldCode.toLowerCase().match('sectionpages') || (regex.test(fieldCode.toLowerCase()) && reLayout)) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(fieldBegin.fieldSeparator)) {\n                        var textElement = fieldBegin.fieldSeparator.nextNode;\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(textElement)) {\n                            var prevPageNum = textElement.text;\n                            var paragraph = fieldBegin.line.paragraph;\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.containerWidget) && (paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) && paragraph.containerWidget.indexInOwner === -1) {\n                                continue;\n                            }\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.bodyWidget) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.bodyWidget.page) && paragraph.bodyWidget.page.index !== -1) {\n                                if (regex.test(fieldCode.toLowerCase())) {\n                                    var index = paragraph.bodyWidget.page.index + 1;\n                                    textElement.text = index.toString();\n                                }\n                                else {\n                                    textElement.text = this.documentHelper.pages.length.toString();\n                                }\n                                if (prevPageNum !== textElement.text) {\n                                    textElement.isWidthUpdated = false;\n                                    var lineIndex = paragraph.childWidgets.indexOf(fieldBegin.line);\n                                    var elementIndex = fieldBegin.line.children.indexOf(textElement);\n                                    if (paragraph.isInsideTable) {\n                                        this.reLayoutParagraph(paragraph, lineIndex, elementIndex);\n                                    }\n                                    else {\n                                        this.reLayoutLine(paragraph, lineIndex, false, false, true);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Layout.prototype.reLayoutOrShiftWidgets = function (blockAdv, viewer, isMultiColumnShift, footnoteCollection) {\n        var block = blockAdv;\n        var isRealyoutList = false;\n        // if (block instanceof ParagraphWidget) {\n        //     reLayoutItems = viewer.renderedElements.get(block as ParagraphWidget).length === 0;\n        // } else {\n        //     reLayoutItems = viewer.renderedElements.get(block as TableWidget).length === 0;\n        // }\n        if (this.isNeedToRelayout(blockAdv.bodyWidget) || this.isPageBreakInsideContentControl(blockAdv)) {\n            if (!this.isMultiColumnSplit) {\n                this.updateContainerForTable(block, viewer);\n            }\n            //Handle layouting the block.\n            if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                block = block.combineWidget(this.viewer);\n                this.clearTableWidget(block, true, true, true);\n            }\n            viewer.updateClientAreaForBlock(block, true);\n            if (block.wrapTextAround) {\n                block.isLayouted = false;\n            }\n            this.isRelayout = true;\n            this.layoutBlock(block, 0);\n            this.isRelayout = false;\n            viewer.updateClientAreaForBlock(block, false);\n            isRealyoutList = true;\n        }\n        else {\n            //Handled to check client area and shift layouted widget.\n            this.shiftWidgetsBlock(block, viewer, footnoteCollection);\n        }\n        var index = this.documentHelper.pages.indexOf(block.bodyWidget.page);\n        if (index > 0 && block === block.bodyWidget.childWidgets[0] && block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n            var val = block.bodyWidget.childWidgets[0].childWidgets[0].children;\n            for (var i = 0; i < val.length; i++) {\n                var element = val[i];\n                if (element.margin.top > 0 && element.margin.top === this.getBeforeSpacing(element.paragraph)) {\n                    element.margin.top -= this.getBeforeSpacing(element.paragraph);\n                }\n            }\n        }\n        //Updates the list value of the rendered paragraph.\n        if (this.viewer.owner.editorModule && !isRealyoutList && !isMultiColumnShift) {\n            this.viewer.owner.editorModule.updateRenderedListItems(block);\n        }\n        if (!this.isRelayoutFootnote && block.bodyWidget.page.footnoteWidget) {\n            this.islayoutFootnote = true;\n            this.layoutfootNote(block.bodyWidget.page.footnoteWidget);\n        }\n        // }\n    };\n    Layout.prototype.isNeedToRelayout = function (bodyWidget) {\n        for (var i = 0; i < bodyWidget.floatingElements.length; i++) {\n            var floatElement = bodyWidget.floatingElements[i];\n            if (floatElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget || (floatElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeBase &&\n                (floatElement.textWrappingStyle === 'Square' || floatElement.textWrappingStyle === 'TopAndBottom'))) {\n                return true;\n            }\n        }\n        return false;\n    };\n    Layout.prototype.shiftWidgetsBlock = function (block, viewer, footnoteCollection) {\n        if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n            this.shiftWidgetsForPara(block, viewer, footnoteCollection);\n        }\n        else if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footnoteCollection) && footnoteCollection.length > 0 && block.previousRenderedWidget && block.previousRenderedWidget.y + block.previousRenderedWidget.height + block.height > this.viewer.clientArea.bottom) {\n                footnoteCollection.length = 0;\n            }\n            this.shiftWidgetsForTable(block, viewer);\n        }\n    };\n    Layout.prototype.shiftWidgetsForPara = function (paragraph, viewer, footnoteCollection) {\n        if (paragraph.height > (viewer.clientArea.height + viewer.clientArea.y) && !this.documentHelper.owner.enableHeaderAndFooter) {\n            return;\n        }\n        else if (paragraph.isEmpty()) {\n            //Handled sections last paragraph need to be layouted in previous paragraph if the paragraph is empty. Similar to Ms word\n            var previousWidget = paragraph.previousRenderedWidget;\n            if (paragraph.isSectionBreak && paragraph.index > 0) {\n                if (previousWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                    this.layoutSectionBreakParagraph(paragraph, previousWidget);\n                    if (!previousWidget.isEndsWithPageBreak && this.viewer.clientActiveArea.y <= paragraph.y) {\n                        this.viewer.cutFromTop(paragraph.y + paragraph.height);\n                    }\n                    return;\n                }\n                else if (previousWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && this.documentHelper.compatibilityMode !== 'Word2013') {\n                    return;\n                }\n            }\n        }\n        var bodywid = paragraph.bodyWidget;\n        var prevBodyObj = this.getBodyWidgetOfPreviousBlock(paragraph, 0);\n        var prevBodyWidget = prevBodyObj.bodyWidget;\n        var index = prevBodyObj.index;\n        var prevWidget = undefined;\n        var skipFootNoteHeight = false;\n        var isSkip = true;\n        for (var i = 0; i < paragraph.getSplitWidgets().length; i++) {\n            var widget = paragraph.getSplitWidgets()[i];\n            var firstBody = this.getBodyWidget(widget.bodyWidget, true);\n            if (this.isMultiColumnSplit && widget !== paragraph) {\n                continue;\n            }\n            if (isSkip && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevWidget)) {\n                var isPageBreak = prevWidget.lastChild ? prevWidget.lastChild.isEndsWithPageBreak : false;\n                var isColumnBreak = prevWidget.lastChild ? prevWidget.lastChild.isEndsWithColumnBreak : false;\n                this.shiftToPreviousWidget(widget, viewer, prevWidget, isPageBreak, isColumnBreak);\n                this.updateFloatingElementPosition(prevWidget);\n                if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widget.childWidgets) || widget.childWidgets.length === 0) && !isPageBreak && !isColumnBreak) {\n                    i--;\n                    continue;\n                }\n                if (prevBodyWidget !== widget.containerWidget) {\n                    prevBodyWidget = widget.containerWidget;\n                    if (isPageBreak && prevWidget !== widget.previousSplitWidget) {\n                        viewer.updateClientAreaByWidget(widget);\n                    }\n                }\n                prevWidget = undefined;\n            }\n            var footWidget = [];\n            if (!skipFootNoteHeight) {\n                footWidget = this.getFootNoteWidgetsOf(widget);\n            }\n            var footHeight = 0;\n            var isSplit = false;\n            if (!this.isMultiColumnSplit && !widget.isInsideTable && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footnoteCollection) && footnoteCollection.length > 0 && this.isFitInClientArea(widget, viewer, footWidget) && widget.previousRenderedWidget && widget.bodyWidget.page === widget.previousRenderedWidget.bodyWidget.page) {\n                footHeight = this.getFootNoteHeight(footnoteCollection);\n                var bottom = this.updateFootnoteHeight(widget, false, true);\n                if (widget.previousRenderedWidget.y + widget.previousRenderedWidget.height + footHeight + widget.firstChild.height > bottom && this.viewer.clientArea.bottom <= bottom) {\n                    isSplit = true;\n                }\n            }\n            skipFootNoteHeight = false;\n            //let isContainsFootnote: boolean = false;\n            if ((this.isFitInClientArea(widget, viewer, footWidget) && !isSplit) || (viewer.clientActiveArea.height < widget.firstChild.height && this.viewer.clientActiveArea.y === this.viewer.clientArea.y)\n                || (this.isMultiColumnSplit && widget.bodyWidget.sectionFormat.numberOfColumns - 1 !== widget.bodyWidget.columnIndex)) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footnoteCollection) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footWidget) && footWidget.length > 0) {\n                    for (var k = 0; k < footWidget.length; k++) {\n                        footnoteCollection.push(footWidget[k]);\n                    }\n                }\n                if (this.keepWithNext) {\n                    this.updateClientPositionForBlock(widget.containerWidget.firstChild, widget);\n                    this.keepWithNext = false;\n                }\n                //Check whether this widget is moved to previous container widget.\n                prevWidget = widget;\n                viewer.updateClientAreaForBlock(widget, true, undefined, false, true);\n                if (widget.isEmpty() && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widget.paragraphFormat) &&\n                    (widget.paragraphFormat.textAlignment === 'Center' || widget.paragraphFormat.textAlignment === 'Right'\n                        || (widget.paragraphFormat.textAlignment === 'Justify' && widget.paragraphFormat.bidi))\n                    && widget.paragraphFormat.listFormat.listId === -1) {\n                    this.updateXPositionForEmptyParagraph(viewer.clientActiveArea, widget);\n                }\n                else {\n                    widget.x = viewer.clientActiveArea.x;\n                }\n                viewer.updateClientAreaForBlock(widget, false);\n                widget.y = viewer.clientActiveArea.y;\n                this.updateFloatingElementPosition(widget);\n                viewer.cutFromTop(viewer.clientActiveArea.y + widget.height);\n                //Moves the paragraph widget to previous body widget.\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevBodyWidget) && prevBodyWidget !== widget.containerWidget && !this.isMultiColumnSplit) {\n                    index++;\n                    if (!prevBodyWidget.lastChild.isEndsWithPageBreak && !prevBodyWidget.lastChild.isEndsWithColumnBreak && !this.isPageBreakInsideContentControl(prevBodyWidget.lastChild)) {\n                        this.updateContainerWidget(widget, prevBodyWidget, index, true, footWidget);\n                    }\n                    if (footWidget.length > 0) {\n                        if (prevBodyWidget.page.footnoteWidget) {\n                            for (var k = 0; k < footWidget.length; k++) {\n                                if (prevBodyWidget.page.footnoteWidget.bodyWidgets.indexOf(footWidget[k]) === -1 && widget.bodyWidget.page.index != footWidget[k].page.index) {\n                                    prevBodyWidget.page.footnoteWidget.bodyWidgets.push(footWidget[k]);\n                                    prevBodyWidget.page.footnoteWidget.height += footWidget[k].height;\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (widget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget && widget.containerWidget.firstChild === widget && widget.previousRenderedWidget && widget.previousRenderedWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && widget.previousRenderedWidget.containerWidget.sectionFormat.breakCode == 'NoBreak' && widget.containerWidget.page.index !== widget.previousRenderedWidget.containerWidget.page.index && widget.containerWidget.index !== widget.previousRenderedWidget.containerWidget.index) {\n                    var bodyWidget = widget.previousRenderedWidget.bodyWidget;\n                    var breakCode = bodyWidget.sectionFormat.breakCode;\n                    if (bodyWidget.sectionFormat.columns.length > 1) {\n                        bodyWidget = this.getBodyWidget(bodyWidget, true);\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bodyWidget.previousRenderedWidget) && bodyWidget.sectionFormat.breakCode === 'NoBreak'\n                        && bodyWidget.previousRenderedWidget.sectionFormat.breakCode == 'NewPage'\n                        && bodyWidget.page.index === bodyWidget.previousRenderedWidget.page.index) {\n                        breakCode = bodyWidget.previousRenderedWidget.sectionFormat.breakCode;\n                    }\n                    var bottom = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round((this.getNextWidgetHeight(bodyWidget) + widget.height), 2);\n                    // Bug 858530: Shift the widgets to previous container widget if the client height is not enough to place this widget.\n                    if (!widget.previousRenderedWidget.containerWidget.lastChild.isEndsWithPageBreak && !widget.previousRenderedWidget.containerWidget.lastChild.isEndsWithColumnBreak\n                        && bottom <= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.round(this.viewer.clientActiveArea.bottom, 2) && breakCode === 'NoBreak') {\n                        var page = widget.previousRenderedWidget.bodyWidget.page;\n                        var nextPage = widget.containerWidget.page;\n                        for (var j = 0; j < nextPage.bodyWidgets.length; j++) {\n                            var nextBodyWidget = nextPage.bodyWidgets[j];\n                            nextPage.bodyWidgets.splice(nextPage.bodyWidgets.indexOf(nextBodyWidget), 1);\n                            page.bodyWidgets.splice(page.bodyWidgets.length, 0, nextBodyWidget);\n                            nextBodyWidget.page = page;\n                            j--;\n                        }\n                        widget.containerWidget.y = this.viewer.clientActiveArea.y;\n                        this.documentHelper.removeEmptyPages();\n                    }\n                }\n                if (!this.isInitialLoad && isSkip && widget.bodyWidget.sectionFormat.columns.length > 1 && widget === widget.bodyWidget.firstChild && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(firstBody.previousWidget)\n                    && firstBody.page === firstBody.previousWidget.page)) {\n                    this.viewer.updateClientArea(widget.bodyWidget, widget.bodyWidget.page);\n                    firstBody = this.getBodyWidget(firstBody.previousWidget, true);\n                    var height = this.getNextWidgetHeight(firstBody);\n                    widget.bodyWidget.y = height;\n                    this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n                    this.viewer.clientActiveArea.y = height;\n                    isSkip = false;\n                    i--;\n                }\n                if (((widget.isEndsWithPageBreak && !this.isPageBreakInsideField(widget)) || widget.isEndsWithColumnBreak || this.isPageBreakInsideContentControl(widget)) && this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer) {\n                    var nextBodyWidget = this.createOrGetNextBodyWidget(prevBodyWidget, this.viewer);\n                    nextBodyWidget = this.moveBlocksToNextPage(widget, true);\n                    viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n                }\n            }\n            else {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footnoteCollection)) {\n                    footnoteCollection.length = 0;\n                }\n                var previousBlock = widget.previousRenderedWidget;\n                var isPageBreak = false;\n                var isColumnBreak = false;\n                if (previousBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && previousBlock.isEndsWithPageBreak &&\n                    this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer) {\n                    isPageBreak = true;\n                }\n                if (previousBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && previousBlock.isEndsWithColumnBreak &&\n                    this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer) {\n                    isColumnBreak = true;\n                }\n                var isSplittedToNewPage = this.splitWidget(widget, viewer, prevBodyWidget, index + 1, isPageBreak, footWidget, isColumnBreak, isSplit ? footHeight : 0);\n                this.updateFloatingElementPosition(widget);\n                prevWidget = undefined;\n                if (prevBodyWidget !== widget.containerWidget) {\n                    prevBodyWidget = widget.containerWidget;\n                    i--;\n                    //Paragraph moved to next page and client area get updated with footnote widget height.\n                    //So, skip considering footnote height.\n                    if (footWidget.length > 0) {\n                        skipFootNoteHeight = true;\n                    }\n                }\n                index = prevBodyWidget.childWidgets.indexOf(widget);\n                if (isSplittedToNewPage) {\n                    prevBodyWidget = paragraph.getSplitWidgets()[i + 1].containerWidget;\n                }\n            }\n        }\n        this.skipUpdateContainerWidget = false;\n    };\n    Layout.prototype.updateFloatingElementPosition = function (widget) {\n        if (widget.floatingElements.length > 0) {\n            for (var k = 0; k < widget.floatingElements.length; k++) {\n                var shape = widget.floatingElements[k];\n                var topMargin = 0;\n                if (shape instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && shape.textWrappingStyle === 'Inline') {\n                    var lineIndex = shape.line.indexInOwner;\n                    var lineHeight = 0;\n                    topMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(shape.textFrame.marginTop);\n                    for (var k_1 = 0; k_1 < lineIndex; k_1++) {\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widget.childWidgets[k_1])) {\n                            lineHeight += widget.childWidgets[k_1].height;\n                        }\n                    }\n                    shape.y = widget.y + lineHeight;\n                }\n                else {\n                    var position = this.getFloatingItemPoints(shape);\n                    shape.y = position.y;\n                    shape.x = position.x;\n                }\n                if (shape instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) {\n                    this.updateChildLocationForCellOrShape(shape.y + topMargin, shape, undefined, false, true);\n                }\n            }\n        }\n    };\n    Layout.prototype.isPageBreakInsideField = function (widget) {\n        var isPageBreakInsideField = false;\n        var isFieldElement = false;\n        var height = 0;\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            var line = widget.childWidgets[i];\n            height += line.height;\n            for (var j = 0; j < line.children.length; j++) {\n                var element = line.children[j];\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox) {\n                    if (element.fieldType === 0) {\n                        isFieldElement = true;\n                    }\n                    else if (element.fieldType === 2 || element.fieldType === 1) {\n                        isFieldElement = false;\n                    }\n                }\n                if (!isFieldElement && element.text === '\\f') {\n                    isPageBreakInsideField = false;\n                }\n                else {\n                    isPageBreakInsideField = true;\n                }\n            }\n        }\n        if (isPageBreakInsideField && widget.height === 0) {\n            this.viewer.cutFromTop(this.viewer.clientActiveArea.y + height);\n        }\n        return isPageBreakInsideField;\n    };\n    Layout.prototype.isPageBreakInsideContentControl = function (widget) {\n        var isPageBreakBlockContentControl = false;\n        if (widget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && widget.childWidgets.length > 0) {\n            var lastLine = widget.childWidgets[widget.childWidgets.length - 1];\n            if (lastLine.children.length > 0) {\n                var lastElement = lastLine.children[lastLine.children.length - 1];\n                if (lastElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ContentControl && lastElement.contentControlWidgetType === 'Block' &&\n                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastElement.previousElement) && lastElement.previousElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox\n                    && lastElement.previousElement.text === '\\f') {\n                    isPageBreakBlockContentControl = true;\n                }\n            }\n        }\n        return isPageBreakBlockContentControl;\n    };\n    /**\n     * @private\n     * Get the footnote of the block widget.\n     *\n     * @param {BlockWidget} widget BlockWidget instance.\n     * @returns\n     */\n    Layout.prototype.getFootNotesOfBlock = function (widget, footnoteElements) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footnoteElements)) {\n            footnoteElements = [];\n        }\n        if (widget.childWidgets.length > 0) {\n            for (var j = 0; j < this.documentHelper.footnoteCollection.length; j++) {\n                if (this.documentHelper.footnoteCollection[j].line.paragraph === widget) {\n                    //isContainsFootnote = true;\n                    footnoteElements.push(this.documentHelper.footnoteCollection[j]);\n                }\n            }\n        }\n        return footnoteElements;\n    };\n    Layout.prototype.getFootNotesWidgetsInLine = function (line) {\n        var footnoteElements = [];\n        for (var i = 0; i < line.children.length; i++) {\n            var element = line.children[i];\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootnoteElementBox) {\n                footnoteElements.push(element);\n            }\n        }\n        return this.getFootNoteWidgetsBy(line.paragraph, footnoteElements);\n    };\n    Layout.prototype.getFootNoteWidgetsBy = function (widget, footnoteElements) {\n        var footWidgets = [];\n        if (widget.bodyWidget.page.footnoteWidget) {\n            for (var i = 0; i < widget.bodyWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n                /* eslint-disable-next-line max-len */\n                for (var j = 0; j < footnoteElements.length; j++) {\n                    if ((widget.bodyWidget.page.footnoteWidget.bodyWidgets[i]).footNoteReference === footnoteElements[j]) {\n                        footWidgets.push(widget.bodyWidget.page.footnoteWidget.bodyWidgets[i]);\n                    }\n                }\n            }\n        }\n        if (footWidgets.length === 0 && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widget.previousRenderedWidget) && widget.previousRenderedWidget.bodyWidget.page.footnoteWidget)) {\n            for (var i = 0; i < widget.previousRenderedWidget.bodyWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n                /* eslint-disable-next-line */\n                for (var j = 0; j < footnoteElements.length; j++) {\n                    if ((widget.previousRenderedWidget.bodyWidget.page.footnoteWidget.bodyWidgets[i]).footNoteReference === footnoteElements[j]) {\n                        footWidgets.push(widget.previousRenderedWidget.bodyWidget.page.footnoteWidget.bodyWidgets[i]);\n                    }\n                }\n            }\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widget.bodyWidget.previousRenderedWidget) && widget.bodyWidget.previousRenderedWidget.page.footnoteWidget) {\n            for (var i = 0; i < widget.bodyWidget.previousRenderedWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n                /* eslint-disable-next-line max-len */\n                for (var j = 0; j < footnoteElements.length; j++) {\n                    if ((widget.bodyWidget.previousRenderedWidget.page.footnoteWidget.bodyWidgets[i]).footNoteReference === footnoteElements[j]) {\n                        footWidgets.push(widget.bodyWidget.previousRenderedWidget.page.footnoteWidget.bodyWidgets[i]);\n                    }\n                }\n            }\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widget.bodyWidget.nextRenderedWidget) && widget.bodyWidget.nextRenderedWidget.page.footnoteWidget) {\n            for (var i = 0; i < widget.bodyWidget.nextRenderedWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n                /* eslint-disable-next-line max-len */\n                for (var j = 0; j < footnoteElements.length; j++) {\n                    if ((widget.bodyWidget.nextRenderedWidget.page.footnoteWidget.bodyWidgets[i]).footNoteReference === footnoteElements[j]) {\n                        footWidgets.push(widget.bodyWidget.nextRenderedWidget.page.footnoteWidget.bodyWidgets[i]);\n                    }\n                }\n            }\n        }\n        return footWidgets;\n    };\n    /**\n     * @param widget\n     * @private\n     */\n    Layout.prototype.getFootNoteWidgetsOf = function (widget, isShifting) {\n        var footnoteWidgets = [];\n        var footnoteElements = [];\n        if (widget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n            for (var k_2 = 0; k_2 < widget.childWidgets.length; k_2++) {\n                var row = widget.childWidgets[k_2];\n                for (var i = 0; i < row.childWidgets.length; i++) {\n                    var cell = row.childWidgets[i];\n                    for (var x = 0; x < cell.childWidgets.length; x++) {\n                        var block = cell.childWidgets[x];\n                        if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                            var footWidgets = this.getFootNoteWidgetsOf(block, isShifting);\n                            for (var f = 0; f < footWidgets.length; f++) {\n                                if (footnoteWidgets.indexOf(footWidgets[f]) === -1) {\n                                    footnoteWidgets.push(footWidgets[f]);\n                                }\n                            }\n                        }\n                        else {\n                            footnoteElements = this.getFootNotesOfBlock(block, footnoteElements);\n                        }\n                        var blockfootnoteWidgets = this.getFootNoteWidgetsBy(block, footnoteElements);\n                        if (isShifting && blockfootnoteWidgets.length === 0) {\n                            for (var l = 0; l < footnoteElements.length; l++) {\n                                if (footnoteWidgets.indexOf(footnoteElements[l].bodyWidget) === -1) {\n                                    footnoteWidgets.push(footnoteElements[l].bodyWidget);\n                                }\n                            }\n                        }\n                        else {\n                            for (var f = 0; f < blockfootnoteWidgets.length; f++) {\n                                if (footnoteWidgets.indexOf(blockfootnoteWidgets[f]) === -1) {\n                                    footnoteWidgets.push(blockfootnoteWidgets[f]);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            footnoteElements = this.getFootNotesOfBlock(widget);\n            if (footnoteElements.length > 0) {\n                footnoteWidgets = this.getFootNoteWidgetsBy(widget, footnoteElements);\n            }\n            if (isShifting && footnoteWidgets.length === 0) {\n                for (var k = 0; k < footnoteElements.length; k++) {\n                    footnoteWidgets.push(footnoteElements[k].bodyWidget);\n                }\n            }\n        }\n        return footnoteWidgets;\n    };\n    Layout.prototype.getFootNodeWidgetsToShiftToPage = function (paragraph) {\n        var splittedWidgets = paragraph.getSplitWidgets();\n        var footNoteWidgets = [];\n        var toBodyWidget = paragraph.containerWidget;\n        var fromBodyWidget;\n        for (var i = 0; i < splittedWidgets.length; i++) {\n            var footWidgets = this.getFootNoteWidgetsOf(splittedWidgets[i]);\n            for (var j = 0; j < footWidgets.length; j++) {\n                fromBodyWidget = footWidgets[j].containerWidget;\n                if (toBodyWidget !== fromBodyWidget) {\n                    footNoteWidgets.push(footWidgets[j]);\n                }\n            }\n        }\n        return { 'footNoteWidgets': footNoteWidgets, 'fromBodyWidget': fromBodyWidget, 'toBodyWidget': toBodyWidget };\n    };\n    Layout.prototype.shiftTableWidget = function (table, viewer, isClearHeight) {\n        if (isClearHeight === void 0) { isClearHeight = false; }\n        table.isBidiTable = table.bidi;\n        if (this.documentHelper.compatibilityMode !== 'Word2013'\n            && !table.isInsideTable\n            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table.firstChild.firstChild.leftMargin)) {\n            this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n        }\n        var tables = [table];\n        this.addTableWidget(this.viewer.clientActiveArea, tables);\n        this.viewer.updateClientAreaTopOrLeft(table, true);\n        var clientActiveAreaForTableWrap;\n        var clientAreaForTableWrap;\n        var wrapDiff = 0;\n        if (table.wrapTextAround) {\n            clientActiveAreaForTableWrap = this.viewer.clientActiveArea.clone();\n            clientAreaForTableWrap = this.viewer.clientArea.clone();\n            this.updateClientAreaForWrapTable(tables, table, true, clientActiveAreaForTableWrap, clientAreaForTableWrap);\n        }\n        else if (!(table.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame)) {\n            this.adjustClientAreaBasedOnTextWrapForTable(table, this.viewer.clientActiveArea);\n            if (this.isWrapText) {\n                wrapDiff = this.viewer.clientActiveArea.x - this.viewer.clientArea.x;\n                this.isWrapText = false;\n                table.x = this.viewer.clientActiveArea.x;\n            }\n        }\n        if (table.childWidgets.length > 0) {\n            var isHeader = table.childWidgets[0].rowFormat.isHeader;\n            table.header = isHeader;\n            table.continueHeader = isHeader;\n            table.headerHeight = 0;\n        }\n        var row = table.childWidgets[0];\n        this.updateFootnoteHeight(table, true);\n        if (this.documentHelper.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer && table.wrapTextAround && (table.positioning.verticalAlignment === 'Bottom' || table.positioning.verticalAlignment === 'Center' || table.positioning.verticalAlignment === 'Outside')) {\n            this.updateTableFloatPoints(table);\n            this.updateChildLocationForTable(table.y, table);\n        }\n        while (row) {\n            row = this.shiftRowWidget(tables, row, isClearHeight);\n            row = row.nextRow;\n        }\n        this.updateFootnoteHeight(table, false);\n        this.updateWidgetsToPage(tables, [], table, true);\n        if (wrapDiff > 0) {\n            this.viewer.clientArea.x = this.viewer.clientArea.x - wrapDiff;\n        }\n        if (table.wrapTextAround) {\n            this.updateClientAreaForWrapTable(tables, table, false, clientActiveAreaForTableWrap, clientAreaForTableWrap);\n        }\n        if (this.documentHelper.compatibilityMode !== 'Word2013'\n            && !table.isInsideTable\n            && !table.wrapTextAround\n            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table.firstChild.firstChild.leftMargin)) {\n            this.viewer.clientArea.x = this.viewer.clientArea.x + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n        }\n        return tables[tables.length - 1];\n    };\n    Layout.prototype.shiftRowWidget = function (tables, row, isClearHeight) {\n        if (isClearHeight === void 0) { isClearHeight = false; }\n        var viewer = this.viewer;\n        if (isClearHeight) {\n            row.height = 0;\n        }\n        var isNestedTable = row.ownerTable.isInsideTable;\n        if (!isNestedTable) {\n            this.updateExistingFootnoteHeight(row);\n        }\n        var rows = [row];\n        this.addTableRowWidget(viewer.clientActiveArea, rows);\n        viewer.updateClientAreaForRow(row, true);\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cell = row.childWidgets[i];\n            if (isClearHeight) {\n                cell.height = 0;\n            }\n            /* eslint-disable-next-line max-len */\n            this.shiftCellWidget(cell, this.getMaxTopCellMargin(row) + row.topBorderWidth, this.getMaxBottomCellMargin(row) + row.bottomBorderWidth, isClearHeight);\n        }\n        viewer.updateClientAreaForRow(row, false);\n        if (!isNestedTable) {\n            var footheight = this.footnoteHeight;\n            this.updateFootnoteToBody(row, this.layoutedFootnoteElement);\n            this.footnoteHeight = footheight;\n        }\n        this.updateWidgetsToTable(tables, rows, row, false);\n        if (!isNestedTable) {\n            this.layoutedFootnoteElement = [];\n        }\n        return rows[rows.length - 1];\n    };\n    Layout.prototype.updateFootnoteToBody = function (row, footnoteElements) {\n        this.layoutFootnoteInSplittedRow(row, this.getFootnoteBody(footnoteElements));\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.ownerTable.footnoteElement)) {\n            row.ownerTable.footnoteElement = [];\n        }\n        for (var i = 0; i < footnoteElements.length; i++) {\n            row.ownerTable.footnoteElement.push(footnoteElements[i]);\n        }\n    };\n    Layout.prototype.getFootnoteBody = function (footnoteElements) {\n        var footnoteWidgets = [];\n        for (var i = 0; i < footnoteElements.length; i++) {\n            footnoteWidgets.push(footnoteElements[i].bodyWidget);\n        }\n        return footnoteWidgets;\n    };\n    Layout.prototype.shiftCellWidget = function (cell, maxCellMarginTop, maxCellMarginBottom, isClearHeight) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isClearHeight)) {\n            isClearHeight = false;\n        }\n        var viewer = this.viewer;\n        this.addTableCellWidget(cell, viewer.clientActiveArea, maxCellMarginTop, maxCellMarginBottom);\n        var clientHeight = this.viewer.clientActiveArea.height;\n        viewer.updateClientAreaForCell(cell, true);\n        for (var i = 0; i < cell.childWidgets.length; i++) {\n            var block = cell.childWidgets[i];\n            var skipCellContentHeightCalc = i !== cell.childWidgets.length - 1;\n            viewer.updateClientAreaForBlock(block, true);\n            if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                this.shiftParagraphWidget(block, skipCellContentHeightCalc);\n            }\n            else {\n                this.shiftTableWidget(block, viewer, isClearHeight);\n            }\n            viewer.updateClientAreaForBlock(block, false);\n        }\n        this.updateWidgetToRow(cell);\n        viewer.updateClientAreaForCell(cell, false);\n        if (!cell.ownerTable.isInsideTable) {\n            this.viewer.clientActiveArea.height = clientHeight;\n        }\n    };\n    Layout.prototype.shiftParagraphWidget = function (paragraph, skipCellContentHeightCalc) {\n        this.addParagraphWidget(this.viewer.clientActiveArea, paragraph);\n        if (paragraph.floatingElements.length > 0) {\n            for (var k = 0; k < paragraph.floatingElements.length; k++) {\n                var shape = paragraph.floatingElements[k];\n                var topMargin = 0;\n                if (shape instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && shape.textWrappingStyle === 'Inline') {\n                    var lineIndex = shape.line.indexInOwner;\n                    var lineHeight = 0;\n                    topMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(shape.textFrame.marginTop);\n                    for (var k_3 = 0; k_3 < lineIndex; k_3++) {\n                        lineHeight += paragraph.childWidgets[k_3].height;\n                    }\n                    shape.y = paragraph.y + lineHeight;\n                }\n                else {\n                    var position = this.getFloatingItemPoints(shape);\n                    shape.y = position.y;\n                    shape.x = position.x;\n                }\n                if (shape instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) {\n                    this.updateChildLocationForCellOrShape(shape.y + topMargin, shape);\n                }\n            }\n        }\n        this.viewer.cutFromTop(this.viewer.clientActiveArea.y + paragraph.height);\n        var footnoteCollection = this.getFootNoteWidgetsOf(paragraph, true);\n        for (var i = 0; i < footnoteCollection.length; i++) {\n            this.layoutedFootnoteElement.push(footnoteCollection[i].footNoteReference);\n        }\n        this.footnoteHeight += this.getFootNoteHeight(footnoteCollection);\n        this.updateWidgetToPage(this.viewer, paragraph, skipCellContentHeightCalc);\n    };\n    Layout.prototype.updateContainerForTable = function (block, viewer) {\n        var prevObj = this.getBodyWidgetOfPreviousBlock(block, 0);\n        var prevBodyWidget = prevObj.bodyWidget;\n        var index = prevObj.index;\n        var isPageBreak = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevBodyWidget.lastChild) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevBodyWidget.lastChild.lastChild) ?\n            prevBodyWidget.lastChild.lastChild.isEndsWithPageBreak : false;\n        var isColumnBreak = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevBodyWidget.lastChild) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevBodyWidget.lastChild.lastChild) ?\n            prevBodyWidget.lastChild.lastChild.isEndsWithColumnBreak : false;\n        if (prevBodyWidget !== block.containerWidget) {\n            if (!isPageBreak && !isColumnBreak) {\n                this.updateContainerWidget(block, prevBodyWidget, index + 1, true);\n            }\n            else {\n                viewer.updateClientArea(block.bodyWidget, block.bodyWidget.page);\n            }\n        }\n        if (block.isInHeaderFooter || this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.WebLayoutViewer) {\n            block.containerWidget.height -= block.height;\n        }\n    };\n    Layout.prototype.shiftWidgetsForTable = function (table, viewer) {\n        this.updateContainerForTable(table, viewer);\n        this.viewer.updateClientAreaForBlock(table, true, undefined, false, true);\n        this.updateVerticalPositionToTop(table, true);\n        //const isPageLayout: boolean = viewer instanceof PageLayoutViewer;\n        var combinedTable = table.combineWidget(this.viewer);\n        this.documentHelper.layout.updateChildLocationForTable(combinedTable.y, combinedTable);\n        this.clearTableWidget(combinedTable, true, false, false, true);\n        this.shiftTableWidget(combinedTable, this.viewer);\n        this.updateVerticalPositionToTop(table, false);\n        this.viewer.updateClientAreaForBlock(table, false);\n    };\n    Layout.prototype.updateVerticalPositionToTop = function (table, isUpdateTop) {\n        //Iterate the tableWidgets counts\n        for (var i = 0; i < table.getSplitWidgets().length; i++) {\n            var tablewidget = table.getSplitWidgets()[i];\n            //Iterate the tableWidget child items\n            for (var j = 0; j < tablewidget.childWidgets.length; j++) {\n                var rowWidget = tablewidget.childWidgets[j];\n                //Iterate the RowWidgets child items\n                for (var k = 0; k < rowWidget.childWidgets.length; k++) {\n                    var cellWidget = rowWidget.childWidgets[k];\n                    //Iterate the RowWidgets child items\n                    this.documentHelper.layout.updateCellVerticalPosition(cellWidget, isUpdateTop, false);\n                }\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.splitWidget = function (paragraphWidget, viewer, previousBodyWidget, index, isPageBreak, footWidget, isColumnBreak, footHeight) {\n        var firstLine = paragraphWidget.childWidgets[0];\n        var keepLinesTogether = (paragraphWidget.paragraphFormat.keepLinesTogether && (this.viewer.clientActiveArea.y !== this.viewer.clientArea.y));\n        var maxElementHeight = keepLinesTogether ? paragraphWidget.height : this.getMaxElementHeight(firstLine);\n        var paragraphView = paragraphWidget.getSplitWidgets();\n        var nextBodyWidget = paragraphWidget.containerWidget;\n        // Get maximun height based on widow/orphan control.\n        maxElementHeight = this.getMaximumLineHeightToSplit(paragraphWidget, maxElementHeight, viewer);\n        // TODO: Footnote move on move entire paragraph.\n        var footNoteInFirstLine = this.getFootNotesWidgetsInLine(firstLine);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.previousWidget) && footNoteInFirstLine.length > 0) {\n            for (var i = 0; i < footNoteInFirstLine.length; i++) {\n                for (var j = 0; j < footNoteInFirstLine[i].childWidgets.length; j++) {\n                    maxElementHeight += footNoteInFirstLine[i].childWidgets[j].height;\n                }\n            }\n            //maxElementHeight += (paragraphWidget.bodyWidget.page.footnoteWidget.childWidgets[0] as ParagraphWidget).height;\n        }\n        var height = 0;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footHeight) && footHeight > 0) {\n            height = footHeight;\n        }\n        if (viewer.clientActiveArea.height >= maxElementHeight + height && !isPageBreak && !isColumnBreak) {\n            var splittedWidget = undefined;\n            var widgetIndex = paragraphView.indexOf(paragraphWidget);\n            if (widgetIndex < (paragraphView.length - 1)) {\n                splittedWidget = paragraphView[widgetIndex + 1];\n                nextBodyWidget = splittedWidget.containerWidget;\n            }\n            else {\n                splittedWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget();\n                splittedWidget.index = paragraphWidget.index;\n                splittedWidget.characterFormat = paragraphWidget.characterFormat;\n                splittedWidget.paragraphFormat = paragraphWidget.paragraphFormat;\n                splittedWidget.width = paragraphWidget.width;\n                splittedWidget.x = paragraphWidget.x;\n                splittedWidget.y = paragraphWidget.y;\n                paragraphView.push(splittedWidget);\n            }\n            if (previousBodyWidget !== paragraphWidget.containerWidget && !this.skipUpdateContainerWidget) {\n                this.updateContainerWidget(paragraphWidget, previousBodyWidget, index, true);\n            }\n            for (var i = paragraphWidget.childWidgets.length - 1; i > 0; i--) {\n                var line = paragraphWidget.childWidgets[i];\n                if (this.isFitInClientArea(paragraphWidget, viewer, undefined)) {\n                    if (splittedWidget.childWidgets.length === 1) {\n                        this.updateParagraphWidgetInternal(line, splittedWidget, 0);\n                        this.skipUpdateContainerWidget = true;\n                    }\n                    break;\n                }\n                else {\n                    var line_1 = paragraphWidget.childWidgets[i];\n                    //Moves the line widget to next widget.\n                    this.updateParagraphWidgetInternal(line_1, splittedWidget, 0);\n                }\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splittedWidget.containerWidget) && splittedWidget.childWidgets.length > 0) {\n                var y = viewer.clientActiveArea.y;\n                // eslint-disable-next-line max-len\n                var clientArea = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(viewer.clientArea.x, viewer.clientArea.y, viewer.clientArea.width, viewer.clientArea.height);\n                // eslint-disable-next-line max-len\n                var activeArea = new _page__WEBPACK_IMPORTED_MODULE_6__.Rect(viewer.clientActiveArea.x, viewer.clientActiveArea.y, viewer.clientActiveArea.width, viewer.clientActiveArea.height);\n                var prevPage = paragraphWidget.bodyWidget.page;\n                //Checks whether next node exists, else adds new page.\n                nextBodyWidget = this.moveBlocksToNextPage(paragraphWidget, false, -1);\n                splittedWidget.containerWidget = nextBodyWidget;\n                nextBodyWidget.childWidgets.splice(0, 0, splittedWidget);\n                if (prevPage !== nextBodyWidget.page) {\n                    nextBodyWidget.height += splittedWidget.height;\n                    if (nextBodyWidget != previousBodyWidget) {\n                        this.moveFootNotesToPage(footWidget, previousBodyWidget, nextBodyWidget);\n                    }\n                    if (nextBodyWidget.childWidgets.length === 1 && nextBodyWidget.firstChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget &&\n                        nextBodyWidget.firstChild.equals(paragraphWidget)) {\n                        //paragraphWidget.x = paragraphWidget.x;\n                        paragraphWidget.y = y;\n                        return true;\n                    }\n                    else {\n                        //Resetting Client area\n                        viewer.clientArea = clientArea;\n                        viewer.clientActiveArea = activeArea;\n                    }\n                }\n                else {\n                    if (paragraphWidget.x !== paragraphWidget.containerWidget.x) {\n                        paragraphWidget.x = paragraphWidget.containerWidget.x;\n                    }\n                    paragraphWidget.y = y;\n                    viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n                    splittedWidget = this.addParagraphWidget(this.viewer.clientActiveArea, splittedWidget);\n                    return true;\n                }\n            }\n        }\n        else {\n            var startBlock = void 0;\n            var keepWithNext = false;\n            var startIndex = 0;\n            viewer.columnLayoutArea.setColumns(previousBodyWidget.sectionFormat);\n            nextBodyWidget = this.createOrGetNextBodyWidget(previousBodyWidget, this.viewer);\n            var blockInfo = this.alignBlockElement(paragraphWidget);\n            if (!this.isInitialLoad && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(blockInfo.node) && !paragraphWidget.isEndsWithPageBreak && !paragraphWidget.isEndsWithColumnBreak && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.previousSplitWidget)) {\n                startBlock = blockInfo.node instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableRowWidget ? this.splitRow(blockInfo.node) : blockInfo.node;\n                if (startBlock.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget && startBlock.containerWidget.firstChild !== startBlock) {\n                    startIndex = startBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget ? 0 : parseInt(blockInfo.position.index, 10);\n                    paragraphWidget = startBlock;\n                    keepWithNext = true;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.nextRenderedWidget) && paragraphWidget.nextRenderedWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                        this.keepWithNext = true;\n                        this.documentHelper.blockToShift = paragraphWidget.nextRenderedWidget;\n                    }\n                }\n            }\n            if (paragraphWidget.containerWidget !== nextBodyWidget || keepWithNext) {\n                var prevPage = paragraphWidget.bodyWidget.page;\n                nextBodyWidget = this.moveBlocksToNextPage(paragraphWidget, true);\n                if (previousBodyWidget !== nextBodyWidget) {\n                    viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n                    if (startIndex > 0 && this.keepWithNext) {\n                        this.viewer.updateClientAreaForBlock(paragraphWidget, true);\n                        var nextParagraph = void 0;\n                        if (paragraphWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                            this.addTableWidget(this.viewer.clientActiveArea, [paragraphWidget]);\n                        }\n                        else if (nextBodyWidget.firstChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && nextBodyWidget.firstChild.equals(paragraphWidget)) {\n                            nextParagraph = nextBodyWidget.firstChild;\n                        }\n                        else {\n                            nextParagraph = new _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget();\n                        }\n                        nextParagraph = this.moveChildsToParagraph(paragraphWidget, startIndex, nextParagraph);\n                        nextParagraph.containerWidget = nextBodyWidget;\n                        for (var m = 0; m < nextParagraph.floatingElements.length; m++) {\n                            var element = nextParagraph.floatingElements[m];\n                            if (element.line.paragraph.bodyWidget !== paragraphWidget.bodyWidget && element.textWrappingStyle !== 'Inline') {\n                                paragraphWidget.bodyWidget.floatingElements.splice(paragraphWidget.bodyWidget.floatingElements.indexOf(element), 1);\n                            }\n                        }\n                        paragraphWidget = nextParagraph;\n                        if (nextBodyWidget.childWidgets.indexOf(paragraphWidget) === -1) {\n                            nextBodyWidget.childWidgets.splice(0, 0, paragraphWidget);\n                        }\n                        this.viewer.updateClientAreaLocation(paragraphWidget, this.viewer.clientActiveArea);\n                        this.layoutBlock(paragraphWidget, 0, true);\n                        this.viewer.updateClientAreaForBlock(paragraphWidget, false);\n                    }\n                    else {\n                        this.updateContainerWidget(paragraphWidget, nextBodyWidget, 0, true);\n                        if (paragraphWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                            this.addTableWidget(this.viewer.clientActiveArea, [paragraphWidget]);\n                        }\n                        else {\n                            this.addParagraphWidget(this.viewer.clientActiveArea, paragraphWidget);\n                        }\n                    }\n                    this.moveFootNotesToPage(footWidget, previousBodyWidget, nextBodyWidget);\n                }\n                if (previousBodyWidget.page === nextBodyWidget.page) {\n                    if (previousBodyWidget === nextBodyWidget) {\n                        viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        }\n        if (previousBodyWidget === paragraphWidget.containerWidget) {\n            // if (paragraphWidget.x !== paragraphWidget.containerWidget.x) {\n            //     paragraphWidget.x = paragraphWidget.containerWidget.x;\n            // }\n            paragraphWidget.y = viewer.clientActiveArea.y;\n            viewer.cutFromTop(viewer.clientActiveArea.y + paragraphWidget.height);\n        }\n        else {\n            //Updates client area based on next body widget.\n            viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n        }\n        return false;\n    };\n    Layout.prototype.getMaximumLineHeightToSplit = function (paragraphWidget, maxElementHeight, viewer) {\n        if (viewer.clientActiveArea.height >= maxElementHeight && !paragraphWidget.paragraphFormat.keepLinesTogether &&\n            paragraphWidget.paragraphFormat.widowControl && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.previousWidget) &&\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.previousSplitWidget)) {\n            var paragraphHeight = paragraphWidget.height;\n            for (var m = paragraphWidget.childWidgets.length - 1; m >= 0; m--) {\n                var lastLine = paragraphWidget.childWidgets[m];\n                var lineHeight = this.getMaxElementHeight(lastLine);\n                if (lastLine.height > lineHeight) {\n                    paragraphHeight -= lastLine.height - lineHeight;\n                }\n                if (viewer.clientActiveArea.height >= paragraphHeight) {\n                    // Move entire paragraph to next page, If first line alone not fitted in the client area.\n                    if (m === 0) {\n                        maxElementHeight = paragraphWidget.height;\n                    }\n                    break;\n                }\n                paragraphHeight -= (lastLine).height;\n            }\n        }\n        return maxElementHeight;\n    };\n    /**\n     * @private\n     * @param footnoteWidgets\n     * @param fromBodyWidget\n     * @param toBodyWidget\n     */\n    Layout.prototype.moveFootNotesToPage = function (footnoteWidgets, fromBodyWidget, toBodyWidget) {\n        if (footnoteWidgets.length > 0 && fromBodyWidget.page.footnoteWidget && fromBodyWidget.page !== toBodyWidget.page) {\n            var footNoteIndex = -1;\n            var footNoteWidget = void 0;\n            var insertIndex = 0;\n            var check = false;\n            for (var k = 0; k < footnoteWidgets.length; k++) {\n                /* eslint-disable-next-line max-len */\n                footNoteWidget = footnoteWidgets[k];\n                footNoteIndex = fromBodyWidget.page.footnoteWidget.bodyWidgets.indexOf(footNoteWidget);\n                if (footNoteIndex >= 0) {\n                    if (toBodyWidget.page.footnoteWidget === undefined) {\n                        this.addEmptyFootNoteToBody(toBodyWidget);\n                    }\n                    for (var i = 0; i < toBodyWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n                        var body = (toBodyWidget.page.footnoteWidget.bodyWidgets[i]).footNoteReference;\n                        if (body === (footNoteWidget).footNoteReference) {\n                            check = true;\n                        }\n                    }\n                    fromBodyWidget.page.footnoteWidget.bodyWidgets.splice(footNoteIndex, 1);\n                    if (toBodyWidget.page.footnoteWidget.bodyWidgets.indexOf(footNoteWidget) < 0 && !check) {\n                        var childLength = toBodyWidget.page.footnoteWidget.bodyWidgets.length;\n                        var fromPage = this.documentHelper.pages.indexOf(fromBodyWidget.page);\n                        var toPage = this.documentHelper.pages.indexOf(toBodyWidget.page);\n                        footNoteWidget.containerWidget = toBodyWidget.page.footnoteWidget;\n                        footNoteWidget.page = toBodyWidget.page;\n                        if (fromPage > toPage) {\n                            toBodyWidget.page.footnoteWidget.bodyWidgets.push(footNoteWidget);\n                            insertIndex++;\n                        }\n                        else {\n                            toBodyWidget.page.footnoteWidget.bodyWidgets.splice(insertIndex++, 0, footNoteWidget);\n                        }\n                        toBodyWidget.page.footnoteWidget.height += footNoteWidget.height;\n                    }\n                    fromBodyWidget.page.footnoteWidget.height -= footNoteWidget.height;\n                }\n            }\n            if (fromBodyWidget.page.footnoteWidget && fromBodyWidget.page.footnoteWidget.bodyWidgets.length === 0) {\n                fromBodyWidget.page.footnoteWidget = undefined;\n            }\n            if (fromBodyWidget.page.footnoteWidget !== undefined) {\n                this.layoutfootNote(fromBodyWidget.page.footnoteWidget);\n            }\n            if (toBodyWidget.page.footnoteWidget !== undefined) {\n                this.layoutfootNote(toBodyWidget.page.footnoteWidget);\n            }\n        }\n    };\n    Layout.prototype.addEmptyFootNoteToBody = function (bodyWidget) {\n        var footnoteWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget();\n        footnoteWidget.footNoteType = 'Footnote';\n        footnoteWidget.page = bodyWidget.page;\n        var newParagraph = new _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget();\n        newParagraph.characterFormat = new _format_index__WEBPACK_IMPORTED_MODULE_4__.WCharacterFormat();\n        newParagraph.paragraphFormat = new _format_index__WEBPACK_IMPORTED_MODULE_4__.WParagraphFormat();\n        newParagraph.index = 0;\n        var lineWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.LineWidget(newParagraph);\n        newParagraph.childWidgets.push(lineWidget);\n        //  footnoteWidget.childWidgets.push(newParagraph);\n        footnoteWidget.height = this.documentHelper.textHelper.getParagraphMarkSize(newParagraph.characterFormat).Height;\n        footnoteWidget.margin = new _page__WEBPACK_IMPORTED_MODULE_6__.Margin(0, footnoteWidget.height, 0, 0);\n        bodyWidget.page.footnoteWidget = footnoteWidget;\n    };\n    Layout.prototype.getMaxElementHeight = function (lineWidget) {\n        var height = 0;\n        /* eslint-disable-next-line max-len */\n        if (lineWidget.children.length === 0 || ((lineWidget.children.length === 1 && lineWidget.children[0] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox) || (lineWidget.children.length === 2 && lineWidget.children[0] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox && lineWidget.children[1] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox))) {\n            var topMargin = 0;\n            var bottomMargin = 0;\n            height = this.documentHelper.selection.getParagraphMarkSize(lineWidget.paragraph, topMargin, bottomMargin).height;\n            height += topMargin;\n            if (lineWidget.children.length > 0) {\n                var element = lineWidget.children[0];\n                if (height < element.margin.top + element.height) {\n                    height = element.margin.top + element.height;\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < lineWidget.children.length; i++) {\n                var element = lineWidget.children[i];\n                if (height < element.margin.top + element.height) {\n                    height = element.margin.top + element.height;\n                }\n            }\n        }\n        return height;\n    };\n    Layout.prototype.createOrGetNextBodyWidget = function (bodyWidget, viewer) {\n        viewer.columnLayoutArea.setColumns(bodyWidget.sectionFormat);\n        var nextColumn = viewer.columnLayoutArea.getNextColumnByBodyWidget(bodyWidget);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextColumn)) {\n            var nextColumnBody = this.createOrGetNextColumnBody(bodyWidget);\n            return nextColumnBody;\n        }\n        var nextBodyWidget = undefined;\n        var pageIndex = 0;\n        pageIndex = this.documentHelper.pages.indexOf(bodyWidget.page);\n        var page = undefined;\n        var index = undefined;\n        index = bodyWidget.index;\n        if (pageIndex === this.documentHelper.pages.length - 1\n            || this.documentHelper.pages[pageIndex + 1].sectionIndex !== index) {\n            var currentWidget = new _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget();\n            currentWidget.sectionFormat = bodyWidget.sectionFormat;\n            currentWidget.index = bodyWidget.index;\n            page = viewer.createNewPage(currentWidget);\n            if (this.documentHelper.pages[pageIndex + 1].sectionIndex !== index) {\n                this.documentHelper.insertPage(pageIndex + 1, page);\n            }\n            nextBodyWidget = page.bodyWidgets[0];\n        }\n        else {\n            page = this.documentHelper.pages[pageIndex + 1];\n            nextBodyWidget = page.bodyWidgets[0];\n        }\n        return nextBodyWidget;\n    };\n    Layout.prototype.isFitInClientArea = function (paragraphWidget, viewer, blocks) {\n        var lastLine = paragraphWidget.childWidgets[paragraphWidget.childWidgets.length - 1];\n        var height = paragraphWidget.height;\n        var maxElementHeight = this.getMaxElementHeight(lastLine);\n        if (lastLine.height > maxElementHeight) {\n            height -= lastLine.height - maxElementHeight;\n        }\n        var footHeight = 0;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(blocks)) {\n            if (blocks.length > 0) {\n                if (blocks[0].containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) {\n                    footHeight = blocks[0].containerWidget.margin.top;\n                }\n                for (var k = 0; k < blocks.length; k++) {\n                    for (var l = 0; l < blocks[k].childWidgets.length; l++) {\n                        footHeight += blocks[k].childWidgets[l].height;\n                    }\n                }\n            }\n        }\n        return viewer.clientActiveArea.height >= height + footHeight;\n    };\n    Layout.prototype.isLineInFootNote = function (line, footNotes) {\n        for (var i = 0; i < footNotes.length; i++) {\n            if (footNotes[i].line === line) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.shiftToPreviousWidget = function (paragraphWidget, viewer, previousWidget, isPageBreak, isColumnBreak) {\n        var fromBodyWidget = paragraphWidget.containerWidget;\n        var toBodyWidget = previousWidget.containerWidget;\n        var footNotes = [];\n        var footNoteWidgets = [];\n        if (toBodyWidget !== fromBodyWidget) {\n            footNotes = this.getFootNotesOfBlock(paragraphWidget);\n        }\n        for (var i = 0; i < paragraphWidget.childWidgets.length; i++) {\n            var line = paragraphWidget.childWidgets[i];\n            var maxElementHeight = this.getMaxElementHeight(line);\n            if (this.isLineInFootNote(line, footNotes)) {\n                var footWidget = this.getFootNoteWidgetsBy(line.paragraph, footNotes);\n                var height = 0;\n                for (var m = 0; m < footWidget.length; m++) {\n                    var footContent = footWidget[m];\n                    for (var n = 0; n < footContent.childWidgets.length; n++) {\n                        height += footContent.childWidgets[n].height;\n                    }\n                }\n                if (footWidget.length > 0 && footWidget[0].containerWidget) {\n                    height += footWidget[0].containerWidget.margin.top;\n                }\n                maxElementHeight += height;\n            }\n            if (viewer.clientActiveArea.height >= maxElementHeight && !isPageBreak && !isColumnBreak) {\n                if (footNotes.length > 0 && this.isLineInFootNote(line, footNotes)) {\n                    footNoteWidgets = footNoteWidgets.concat(this.getFootNoteWidgetsBy(line.paragraph, footNotes));\n                }\n                //Moves the line widget to previous widget.\n                this.updateParagraphWidgetInternal(line, previousWidget, previousWidget.childWidgets.length);\n                i--;\n                viewer.cutFromTop(viewer.clientActiveArea.y + line.height);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraphWidget.childWidgets)) {\n                    break;\n                }\n            }\n            else {\n                var bodyWidget = previousWidget.containerWidget;\n                viewer.updateClientArea(bodyWidget, bodyWidget.page);\n                var newBodyWidget = this.createOrGetNextBodyWidget(bodyWidget, viewer);\n                if (paragraphWidget.containerWidget !== newBodyWidget) {\n                    newBodyWidget = this.moveBlocksToNextPage(paragraphWidget, true);\n                }\n                if (bodyWidget !== newBodyWidget) {\n                    footNotes = this.getFootNotesOfBlock(paragraphWidget);\n                    if (footNotes.length > 0) {\n                        footNoteWidgets = footNoteWidgets.concat(this.getFootNoteWidgetsBy(paragraphWidget, footNotes));\n                        toBodyWidget = newBodyWidget;\n                    }\n                    this.updateContainerWidget(paragraphWidget, newBodyWidget, 0, true);\n                }\n                //Updates client area based on next page.\n                viewer.updateClientArea(newBodyWidget, newBodyWidget.page);\n                break;\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footNoteWidgets) && footNoteWidgets.length > 0 && fromBodyWidget.page.footnoteWidget\n            && fromBodyWidget != toBodyWidget) {\n            this.moveFootNotesToPage(footNoteWidgets, fromBodyWidget, toBodyWidget);\n        }\n    };\n    Layout.prototype.updateParagraphWidgetInternal = function (lineWidget, newParagraphWidget, index) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lineWidget.paragraph)) {\n            lineWidget.paragraph.childWidgets.splice(lineWidget.paragraph.childWidgets.indexOf(lineWidget), 1);\n            lineWidget.paragraph.height -= lineWidget.height;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lineWidget.paragraph.containerWidget)) {\n                lineWidget.paragraph.containerWidget.height -= lineWidget.height;\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lineWidget.paragraph.childWidgets) || lineWidget.paragraph.childWidgets.length === 0) {\n                lineWidget.paragraph.destroyInternal(this.viewer);\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lineWidget.paragraph) && lineWidget.paragraph.floatingElements.length > 0) {\n            this.shiftFloatingElements(lineWidget, newParagraphWidget);\n        }\n        newParagraphWidget.childWidgets.splice(index, 0, lineWidget);\n        lineWidget.paragraph = newParagraphWidget;\n        newParagraphWidget.height += lineWidget.height;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newParagraphWidget.containerWidget)) {\n            newParagraphWidget.containerWidget.height += lineWidget.height;\n        }\n    };\n    Layout.prototype.shiftFloatingElements = function (lineWidget, newParagraphWidget) {\n        for (var i = 0; i < lineWidget.children.length; i++) {\n            if (lineWidget.children[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && lineWidget.children[i].textWrappingStyle === 'Inline') {\n                var index = lineWidget.paragraph.floatingElements.indexOf(lineWidget.children[i]);\n                if (index >= 0) {\n                    lineWidget.paragraph.floatingElements.splice(index, 1);\n                    newParagraphWidget.floatingElements.splice(index, 0, lineWidget.children[i]);\n                }\n            }\n        }\n    };\n    Layout.prototype.shiftNextWidgets = function (blockAdv) {\n        var block = blockAdv;\n        while (block.nextWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BlockWidget) {\n            block = block.nextWidget;\n            if (this.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.PageLayoutViewer && !this.isMultiColumnSplit && block.bodyWidget.sectionFormat.columns.length > 1) {\n                var lastbody = this.getBodyWidget(block.bodyWidget, false);\n                if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastbody.nextRenderedWidget) && lastbody.page === lastbody.nextRenderedWidget.page)) {\n                    this.splitBodyWidgetBasedOnColumn(block.bodyWidget);\n                    break;\n                }\n            }\n            this.reLayoutOrShiftWidgets(block, this.viewer);\n        }\n    };\n    Layout.prototype.updateContainerWidget = function (widget, bodyWidget, index, destroyAndScroll, footWidget) {\n        if (widget.containerWidget && widget.containerWidget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) {\n            return;\n        }\n        var previousWidget = widget.containerWidget;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widget.containerWidget)) {\n            widget.containerWidget.childWidgets.splice(widget.containerWidget.childWidgets.indexOf(widget), 1);\n            widget.containerWidget.height -= bodyWidget.height;\n            if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widget.containerWidget.childWidgets) || widget.containerWidget.childWidgets.length === 0)\n                && widget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget && widget.containerWidget !== bodyWidget && destroyAndScroll) {\n                var page = widget.containerWidget.page;\n                if (this.documentHelper.pages[this.documentHelper.pages.length - 1] === page &&\n                    this.viewer.visiblePages.indexOf(page) !== -1) {\n                    this.documentHelper.scrollToBottom();\n                }\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(page.endnoteWidget) && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(page.nextPage) || page.nextPage.bodyWidgets[0].index !== widget.containerWidget.index)) {\n                    var section = widget.containerWidget;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(section.nextRenderedWidget) && section.nextRenderedWidget.sectionFormat.columns.length > 1) {\n                        section.nextRenderedWidget.columnIndex = section.columnIndex;\n                    }\n                    widget.containerWidget.destroyInternal(this.viewer);\n                }\n            }\n        }\n        bodyWidget.childWidgets.splice(index, 0, widget);\n        if (widget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widget.floatingElements)) {\n            for (var i = 0; i < widget.floatingElements.length; i++) {\n                var shape = widget.floatingElements[i];\n                if (shape.textWrappingStyle !== 'Inline') {\n                    bodyWidget.floatingElements.push(shape);\n                    widget.bodyWidget.floatingElements.splice(widget.bodyWidget.floatingElements.indexOf(shape), 1);\n                    /* eslint:disable */\n                    bodyWidget.floatingElements.sort(function (a, b) { return a.y - b.y; });\n                }\n            }\n        }\n        if (widget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && widget.wrapTextAround\n            && widget.bodyWidget.floatingElements.indexOf(widget) !== -1) {\n            widget.bodyWidget.floatingElements.splice(widget.bodyWidget.floatingElements.indexOf(widget), 1);\n        }\n        bodyWidget.height += bodyWidget.height;\n        widget.containerWidget = bodyWidget;\n        if (previousWidget && previousWidget.page && previousWidget.page.footnoteWidget && footWidget && footWidget.length > 0) {\n            this.moveFootNotesToPage(footWidget, previousWidget, bodyWidget);\n        }\n    };\n    Layout.prototype.getBodyWidgetOfPreviousBlock = function (block, index) {\n        index = 0;\n        var prevBodyWidget = undefined;\n        var previousBlock = block.previousRenderedWidget;\n        prevBodyWidget = (previousBlock && previousBlock.containerWidget.equals(block.containerWidget)) ?\n            previousBlock.containerWidget :\n            (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(block.containerWidget.previousRenderedWidget) && block.containerWidget.index === block.containerWidget.previousRenderedWidget.index) ?\n                block.containerWidget.previousRenderedWidget :\n                block.containerWidget;\n        index = previousBlock && previousBlock.containerWidget.equals(block.containerWidget) ?\n            prevBodyWidget.childWidgets.indexOf(previousBlock) : block.containerWidget.childWidgets.indexOf(block);\n        return { bodyWidget: prevBodyWidget, index: index };\n    };\n    Layout.prototype.moveBlocksToNextPage = function (block, moveFootnoteFromLastBlock, childStartIndex, sectionBreakContinuous, isEndnote, isTableSplit) {\n        var body = block.bodyWidget;\n        this.viewer.columnLayoutArea.setColumns(body.sectionFormat);\n        var nextColumn = this.viewer.columnLayoutArea.getNextColumnByBodyWidget(block.bodyWidget);\n        var nextPage = undefined;\n        var nextBody = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextColumn) && !(block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && block.isEndsWithPageBreak)) {\n            nextBody = this.moveToNextColumnByBodyWidget(block, childStartIndex);\n            nextBody.columnIndex = nextColumn.index;\n            nextBody.y = block.bodyWidget.y;\n            this.viewer.updateClientArea(nextBody, nextBody.page);\n            this.viewer.clientActiveArea.height -= nextBody.y - this.viewer.clientActiveArea.y;\n            this.viewer.clientActiveArea.y = nextBody.y;\n            if (block.bodyWidget.sectionFormat.columns.length > 1) {\n                var columnIndex = block.bodyWidget.columnIndex;\n                var columnWidth = block.bodyWidget.x + block.bodyWidget.sectionFormat.columns[columnIndex].width + block.bodyWidget.sectionFormat.columns[columnIndex].space;\n                for (var j = 0; j < block.bodyWidget.floatingElements.length; j++) {\n                    if (block.bodyWidget.floatingElements[j] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox && columnWidth < block.bodyWidget.floatingElements[j].x + block.bodyWidget.floatingElements[j].width) {\n                        nextBody.floatingElements.push(block.bodyWidget.floatingElements[j]);\n                    }\n                }\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextBody)) {\n            var insertPage = false;\n            var page = body.page;\n            var pageIndex = page.index + 1;\n            if (this.documentHelper.pages.length > pageIndex && !this.isMultiColumnLayout) {\n                nextPage = this.documentHelper.pages[pageIndex];\n                if (isEndnote && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextPage) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextPage.endnoteWidget)) {\n                    if (nextPage.endnoteWidget.bodyWidgets[0].index === body.index) {\n                        nextBody = nextPage.endnoteWidget.bodyWidgets[0];\n                        this.viewer.updateClientArea(nextBody, nextBody.page);\n                    }\n                    else {\n                        nextBody = this.createSplitBody(body);\n                        var newEndnote = new _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget();\n                        newEndnote.footNoteType = 'Endnote';\n                        newEndnote.page = nextPage;\n                        newEndnote.bodyWidgets.push(nextBody);\n                        nextBody.containerWidget = newEndnote;\n                        nextBody.page = nextPage;\n                        this.viewer.updateClientArea(nextBody, nextBody.page);\n                        nextBody.y = this.viewer.clientActiveArea.y;\n                    }\n                }\n                else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextPage) && nextPage.bodyWidgets.length !== 0 && body.sectionFormat.pageHeight === nextPage.bodyWidgets[0].sectionFormat.pageHeight && body.sectionFormat.pageWidth === nextPage.bodyWidgets[0].sectionFormat.pageWidth && body.sectionFormat.breakCode === 'NoBreak') {\n                    if (nextPage.bodyWidgets[0].index === body.index) {\n                        nextBody = nextPage.bodyWidgets[0];\n                        this.viewer.updateClientArea(nextBody, nextBody.page);\n                    }\n                    else {\n                        nextBody = this.createSplitBody(body);\n                        nextPage.bodyWidgets.splice(0, 0, nextBody);\n                        nextBody.page = nextPage;\n                        this.viewer.updateClientArea(nextBody, nextBody.page);\n                        nextBody.y = this.viewer.clientActiveArea.y;\n                    }\n                }\n                else if (nextPage.bodyWidgets.length === 0 || !body.equals(nextPage.bodyWidgets[0]) || (body.sectionIndex !== nextPage.bodyWidgets[0].sectionIndex && (body.sectionFormat.breakCode === 'NewPage' || (!body.isWord2010NextColumn && body.sectionFormat.breakCode !== 'NoBreak')))) {\n                    nextPage = undefined;\n                    insertPage = true;\n                }\n                else {\n                    nextBody = nextPage.bodyWidgets[0];\n                    this.viewer.updateClientArea(nextBody, nextBody.page);\n                }\n            }\n            if (this.isMultiColumnLayout) {\n                insertPage = true;\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextPage)) {\n                nextBody = this.createSplitBody(body);\n                if ((((this.documentHelper.owner.editorHistoryModule &&\n                    this.documentHelper.owner.editorHistoryModule.isRedoing && this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo &&\n                    this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'SectionBreakContinuous')) && block.bodyWidget.sectionFormat.breakCode === 'NoBreak')\n                    || sectionBreakContinuous) {\n                    //  this.viewer.clientActiveArea.y = block.y + block.height;\n                }\n                else if (isEndnote) {\n                    var lastBodyWidget = page.bodyWidgets[body.page.bodyWidgets.length - 1];\n                    var newBodyWidget = this.createSplitBody(lastBodyWidget);\n                    nextPage = this.viewer.createNewPage(newBodyWidget, pageIndex);\n                    this.viewer.updateClientArea(newBodyWidget, newBodyWidget.page);\n                    newBodyWidget.y = nextBody.y = this.viewer.clientActiveArea.y;\n                    nextBody.page = nextPage;\n                }\n                else {\n                    nextPage = this.viewer.createNewPage(nextBody, pageIndex);\n                    this.viewer.updateClientArea(nextBody, nextBody.page);\n                    nextBody.y = this.viewer.clientActiveArea.y;\n                }\n                if (insertPage && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextPage)) {\n                    this.documentHelper.insertPage(pageIndex, nextPage);\n                }\n                this.clearLineMeasures();\n            }\n            if (nextPage) {\n                do {\n                    var lastBody = body.page.bodyWidgets[body.page.bodyWidgets.length - 1];\n                    if (this.isSectionBreakCont || body === lastBody || body.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) {\n                        break;\n                    }\n                    body.page.bodyWidgets.splice(body.page.bodyWidgets.indexOf(lastBody), 1);\n                    nextPage.bodyWidgets.splice(1, 0, lastBody);\n                    lastBody.page = nextPage;\n                } while (true);\n            }\n        }\n        // eslint-disable  no-constant-condition\n        if (this.isTextFormat) {\n            var index = body.childWidgets.indexOf(block);\n            var child = body.childWidgets.slice(index);\n            body.childWidgets.splice(index);\n            for (var _i = 0, child_1 = child; _i < child_1.length; _i++) {\n                var obj = child_1[_i];\n                nextBody.childWidgets.push(obj);\n                obj.containerWidget = nextBody;\n            }\n        }\n        else {\n            do {\n                var lastBlock = void 0;\n                if (body.lastChild instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) {\n                    lastBlock = body.lastChild.previousWidget;\n                }\n                else {\n                    lastBlock = body.lastChild;\n                }\n                if (moveFootnoteFromLastBlock || (isTableSplit && block !== lastBlock && !(lastBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) && lastBlock.isLayouted)) {\n                    var footWidget = this.getFootNoteWidgetsOf(lastBlock);\n                    this.moveFootNotesToPage(footWidget, body, nextBody);\n                }\n                if (block === lastBlock) {\n                    break;\n                }\n                body.childWidgets.splice(body.childWidgets.indexOf(lastBlock), 1);\n                nextBody.childWidgets.splice(0, 0, lastBlock);\n                if (lastBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget && (body.floatingElements.indexOf(lastBlock) !== -1)) {\n                    body.floatingElements.splice(body.floatingElements.indexOf(lastBlock), 1);\n                    //nextBody.floatingElements.push(lastBlock);\n                }\n                if (lastBlock instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget && lastBlock.floatingElements.length > 0) {\n                    for (var m = 0; m < lastBlock.floatingElements.length; m++) {\n                        if (body.floatingElements.indexOf(lastBlock.floatingElements[m]) !== -1 && lastBlock.floatingElements[m].textWrappingStyle !== 'Inline') {\n                            body.floatingElements.splice(body.floatingElements.indexOf(lastBlock.floatingElements[m]), 1);\n                            nextBody.floatingElements.push(lastBlock.floatingElements[m]);\n                        }\n                    }\n                }\n                lastBlock.containerWidget = nextBody;\n                nextBody.height += lastBlock.height;\n                // eslint-disable-next-line no-constant-condition\n            } while (true);\n        }\n        return nextBody;\n    };\n    Layout.prototype.createSplitBody = function (body) {\n        var newBody = this.addBodyWidget(this.viewer.clientActiveArea);\n        newBody.sectionFormat = body.sectionFormat;\n        newBody.index = body.index;\n        return newBody;\n    };\n    Layout.prototype.createOrGetNextColumnBody = function (fromBody) {\n        var nextColumnBody;\n        if (fromBody.nextRenderedWidget && fromBody.columnIndex + 1 === fromBody.nextRenderedWidget.columnIndex) {\n            nextColumnBody = fromBody.nextRenderedWidget;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextColumnBody)) {\n            nextColumnBody = new _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget();\n            nextColumnBody.sectionFormat = fromBody.sectionFormat;\n            nextColumnBody.index = fromBody.index;\n            nextColumnBody.page = fromBody.page;\n            nextColumnBody.y = fromBody.y;\n            if (fromBody.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) {\n                fromBody.containerWidget.bodyWidgets.splice(fromBody.containerWidget.bodyWidgets.indexOf(fromBody) + 1, 0, nextColumnBody);\n                nextColumnBody.containerWidget = fromBody.containerWidget;\n            }\n            else {\n                fromBody.page.bodyWidgets.splice(fromBody.page.bodyWidgets.indexOf(fromBody) + 1, 0, nextColumnBody);\n            }\n        }\n        return nextColumnBody;\n    };\n    Layout.prototype.moveToNextColumnByBodyWidget = function (block, childStartIndex) {\n        var fromBody = block.containerWidget;\n        var nextColumnBody = this.createOrGetNextColumnBody(fromBody);\n        return nextColumnBody;\n    };\n    //endregion\n    //#region Relayout Parargaph\n    /* eslint-disable  */\n    Layout.prototype.reLayoutLine = function (paragraph, lineIndex, isBidi, isSkip, isSkipList) {\n        if (!this.documentHelper.owner.editorModule.isFootnoteElementRemoved) {\n            this.isFootnoteContentChanged = false;\n        }\n        if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule && !isSkipList) {\n            this.viewer.owner.editorModule.updateWholeListItems(paragraph);\n        }\n        var lineWidget;\n        if (paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listId !== -1) {\n            lineWidget = paragraph.getSplitWidgets()[0].firstChild;\n        }\n        else {\n            lineWidget = paragraph.childWidgets[lineIndex];\n        }\n        var lineToLayout;\n        if (paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget && paragraph.containerWidget.sectionFormat.numberOfColumns > 1 && paragraph.containerWidget.sectionFormat.equalWidth) {\n            lineToLayout = lineWidget.previousLine;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lineToLayout)) {\n            lineToLayout = lineWidget;\n        }\n        if (this.allowLayout) {\n            lineToLayout.paragraph.splitTextRangeByScriptType(lineToLayout.indexInOwner);\n            lineToLayout.paragraph.splitLtrAndRtlText(lineToLayout.indexInOwner);\n            lineToLayout.paragraph.combineconsecutiveRTL(lineToLayout.indexInOwner);\n        }\n        var bodyWidget = paragraph.containerWidget;\n        bodyWidget.height -= paragraph.height;\n        if ((this.viewer.owner.enableHeaderAndFooter || paragraph.isInHeaderFooter) && !(bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame)) {\n            paragraph.bodyWidget.isEmpty = false;\n            this.viewer.updateHeaderFooterClientAreaWithTop(paragraph.bodyWidget.sectionFormat, this.documentHelper.isBlockInHeader(paragraph), bodyWidget.page);\n        }\n        else if (bodyWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame) {\n            this.viewer.updateClientAreaForTextBoxShape(bodyWidget.containerShape, true);\n            // } else if (bodyWidget instanceof FootNoteWidget) {\n            //     this.isRelayoutFootnote = true;\n            //     this.viewer.updateClientArea(bodyWidget.sectionFormat, bodyWidget.page);\n            //     this.viewer.clientArea.height = Number.POSITIVE_INFINITY;\n            //     this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n            //     // curretBlock.containerWidget.height -= curretBlock.height;\n            //     this.viewer.clientActiveArea.y = paragraph.containerWidget.y;\n        }\n        else {\n            this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n        }\n        this.viewer.updateClientAreaForBlock(paragraph, true);\n        var pageIndexBeforeLayout = 0;\n        if (paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) {\n            var blocks = paragraph.getSplitWidgets();\n            var splittedWidget = blocks[blocks.length - 1];\n            pageIndexBeforeLayout = splittedWidget.containerWidget.page.index;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.containerWidget) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.containerWidget.containerWidget) && paragraph.containerWidget.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FootNoteWidget) {\n            var y = paragraph.bodyWidget.containerWidget.y;\n            this.viewer.cutFromTop(y);\n            this.documentHelper.owner.editorModule.isFootNoteInsert = true;\n            this.layoutfootNote(paragraph.containerWidget.containerWidget);\n            this.documentHelper.owner.editorModule.isFootNoteInsert = false;\n            return;\n        }\n        else if (lineToLayout.paragraph.isEmptyInternal(true) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lineToLayout.paragraph.nextSplitWidget)) {\n            this.viewer.cutFromTop(paragraph.y);\n            this.layoutParagraph(paragraph, 0);\n        }\n        else {\n            this.updateClientAreaForLine(lineToLayout);\n            this.layoutListItems(lineToLayout.paragraph);\n            if (lineToLayout.isFirstLine() && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.paragraphFormat)) {\n                var firstLineIndent = -_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent);\n                this.viewer.updateClientWidth(firstLineIndent);\n            }\n            do {\n                lineToLayout = this.layoutLine(lineToLayout, 0);\n                paragraph = lineToLayout.paragraph;\n                lineToLayout = lineToLayout.nextLine;\n            } while (lineToLayout);\n            this.updateWidgetToPage(this.viewer, paragraph);\n        }\n        this.viewer.updateClientAreaForBlock(paragraph, false);\n        var pageIndexAfterLayout = 0;\n        if (paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) {\n            var blocks = paragraph.getSplitWidgets();\n            var splittedWidget = blocks[blocks.length - 1];\n            pageIndexAfterLayout = splittedWidget.containerWidget.page.index;\n        }\n        this.layoutNextItemsBlock(paragraph, this.viewer, undefined, pageIndexBeforeLayout !== pageIndexAfterLayout);\n        var prevWidget = paragraph.getSplitWidgets()[0].previousRenderedWidget;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevWidget) && !paragraph.isEndsWithPageBreak && !paragraph.isEndsWithColumnBreak && (!(prevWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) ||\n            (prevWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) && !prevWidget.isEndsWithPageBreak && !prevWidget.isEndsWithColumnBreak)) {\n            this.viewer.cutFromTop(paragraph.y + paragraph.height);\n            if (paragraph.containerWidget !== prevWidget.containerWidget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevWidget.containerWidget)) {\n                /* eslint-disable-next-line max-len */\n                var prevBodyWidget = paragraph.containerWidget;\n                var newBodyWidget_1 = prevWidget.containerWidget;\n                var footWidgets = this.getFootNoteWidgetsOf(paragraph);\n                //this.updateContainerWidget(paragraph as Widget, newBodyWidget, prevWidget.indexInOwner + 1, false);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newBodyWidget_1.page.footnoteWidget)) {\n                    this.moveFootNotesToPage(footWidgets, newBodyWidget_1, prevBodyWidget);\n                }\n            }\n        }\n        var page = this.documentHelper.pages.length;\n        var lastPage = this.documentHelper.pages[page - 1];\n        var foot;\n        var newBodyWidget = lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1];\n        if ((this.documentHelper.owner.editorModule.isFootnoteElementRemoved || this.isFootnoteContentChanged)\n            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(paragraph.bodyWidget.page.footnoteWidget)) {\n            foot = paragraph.bodyWidget.page.footnoteWidget;\n            this.layoutfootNote(foot);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.viewer.owner.editorHistoryModule) && this.viewer.owner.editorHistoryModule.isRedoing && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newBodyWidget.page.endnoteWidget)) {\n            this.isEndnoteContentChanged = true;\n        }\n        if ((this.documentHelper.owner.editorModule.isEndnoteElementRemoved || this.isEndnoteContentChanged)\n            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newBodyWidget.page.endnoteWidget)) {\n            foot = newBodyWidget.page.endnoteWidget;\n            var clientArea = this.viewer.clientArea.clone();\n            var clientActiveArea = this.viewer.clientActiveArea.clone();\n            var y = newBodyWidget.y;\n            if (newBodyWidget.childWidgets.length > 0) {\n                var lastPageLastPara = newBodyWidget.childWidgets[newBodyWidget.childWidgets.length - 1];\n                y = lastPageLastPara.y + lastPageLastPara.height;\n            }\n            this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - y;\n            this.viewer.clientActiveArea.x = this.viewer.clientArea.x;\n            this.viewer.clientActiveArea.width = this.viewer.clientArea.width;\n            this.viewer.clientActiveArea.y = y;\n            this.layoutfootNote(foot);\n            this.viewer.clientArea = clientArea;\n            this.viewer.clientActiveArea = clientActiveArea;\n            //this.viewer.updateClientAreaForBlock(foot.block, false);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.viewer.owner.editorHistoryModule) && this.viewer.owner.editorHistoryModule.isRedoing) {\n            this.isEndnoteContentChanged = false;\n        }\n    };\n    //#endregion\n    //RTL Feature layout start\n    Layout.prototype.isContainsRtl = function (lineWidget) {\n        if (this.viewer.documentHelper.isSelectionChangedOnMouseMoved && !this.isDocumentContainsRtl) {\n            return false;\n        }\n        var isContainsRTL = false;\n        for (var i = 0; i < lineWidget.children.length; i++) {\n            if (lineWidget.children[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n                isContainsRTL = lineWidget.children[i].characterFormat.bidi || lineWidget.children[i].characterFormat.bdo === 'RTL'\n                    || this.documentHelper.textHelper.isRTLText(lineWidget.children[i].text);\n                if (isContainsRTL) {\n                    if (!this.isDocumentContainsRtl) {\n                        this.isDocumentContainsRtl = isContainsRTL;\n                    }\n                    break;\n                }\n            }\n        }\n        return isContainsRTL;\n    };\n    // Re arranges the elements for Right to left layotuing.\n    /* eslint-disable  */\n    // public reArrangeElementsForRtl(line: LineWidget, isParaBidi: boolean): void {\n    //     if (line.children.length === 0) {\n    //         return;\n    //     }\n    //     let lastAddedElementIsRtl: boolean = false;\n    //     let lastAddedRtlElementIndex: number = -1;\n    //     let tempElements: ElementBox[] = [];\n    //     for (let i: number = 0; i < line.children.length; i++) {\n    //         let element: ElementBox = line.children[i];\n    //         let elementCharacterFormat: WCharacterFormat = undefined;\n    //         if (element.characterFormat) {\n    //             elementCharacterFormat = element.characterFormat;\n    //         }\n    //         let isRtl: boolean = false;\n    //         let text: string = '';\n    //         let containsSpecchrs: boolean = false;\n    //         if (element instanceof BookmarkElementBox) {\n    //             if (isParaBidi) {\n    //                 if (lastAddedElementIsRtl || element.bookmarkType === 0 && element.nextElement\n    //                     && element.nextElement.nextElement instanceof TextElementBox\n    //                     && this.documentHelper.textHelper.isRTLText(element.nextElement.nextElement.text)\n    //                     || element.bookmarkType === 1 && element.nextElement instanceof TextElementBox\n    //                     && this.documentHelper.textHelper.isRTLText(element.nextElement.text)) {\n    //                     tempElements.splice(0, 0, element);\n    //                 } else {\n    //                     tempElements.splice(lastAddedElementIsRtl ? lastAddedRtlElementIndex : lastAddedRtlElementIndex + 1, 0, element);\n    //                 }\n    //                 lastAddedRtlElementIndex = tempElements.indexOf(element);\n    //             } else {\n    //                 tempElements.push(element);\n    //             }\n    //             continue;\n    //         }\n    //         if (element instanceof TextElementBox) {\n    //             text = (element as TextElementBox).text;\n    //             containsSpecchrs = this.documentHelper.textHelper.containsSpecialCharAlone(text.trim());\n    //             if (containsSpecchrs) {\n    //                 if (elementCharacterFormat.bidi && isParaBidi) {\n    //                     text = HelperMethods.reverseString(text);\n    //                     for (let k: number = 0; k < text.length; k++) {\n    //                         let ch: string = this.documentHelper.textHelper.inverseCharacter(text.charAt(k));\n    //                         text = text.replace(text.charAt(k), ch);\n    //                     }\n    //                     element.text = text;\n    //                 }\n    //             }\n    //             let textElement: ElementBox = element.nextElement;\n    //             if (element instanceof TextElementBox && this.documentHelper.textHelper.containsNumberAlone(element.text.trim())) {\n    //                 while (textElement instanceof TextElementBox && textElement.text.trim() !== '' && (this.documentHelper.textHelper.containsNumberAlone(textElement.text.trim()) || this.documentHelper.textHelper.containsSpecialCharAlone(textElement.text.trim()))) {\n    //                     element.text = element.text + textElement.text;\n    //                     element.line.children.splice(element.line.children.indexOf(textElement), 1);\n    //                     textElement = element.nextElement;\n    //                 }\n    //                 element.width = this.documentHelper.textHelper.getTextSize(element as TextElementBox, element.characterFormat);\n    //             }\n    //         }\n    //         let isRTLText: boolean = false;\n    //         // let isNumber: boolean = false;\n    //         // The list element box shold be added in the last position in line widget for the RTL paragraph \n    //         // and first in the line widget for LTR paragrph.\n    //         if (element instanceof ListTextElementBox) {\n    //             isRtl = isParaBidi;\n    //         } else { // For Text element box we need to check the character format and unicode of text to detect the RTL text. \n    //             isRTLText = this.documentHelper.textHelper.isRTLText(text);\n    //             isRtl = isRTLText || elementCharacterFormat.bidi\n    //                 || elementCharacterFormat.bdo === 'RTL';\n    //         }\n    //         if (element instanceof FieldElementBox || this.isRtlFieldCode) {\n    //             if ((element as FieldElementBox).fieldType === 0) {\n    //                 this.isRtlFieldCode = true;\n    //             } else if ((element as FieldElementBox).fieldType === 1) {\n    //                 this.isRtlFieldCode = false;\n    //             }\n    //             isRtl = false;\n    //         }\n    //         // If the text element box contains only whitespaces, then need to check the previous and next elements.\n    //         if (!isRtl && !isNullOrUndefined(text) && text !== '' && ((text !== '' && text.trim() === '') || containsSpecchrs)) {\n    //             let elements: ElementBox[] = line.children;\n    //             //Checks whether the langugae is RTL.\n    //             if (elementCharacterFormat.bidi) {\n    //                 // If the last added element is rtl then current text element box also considered as RTL for WhiteSpaces.\n    //                 if (lastAddedElementIsRtl) {\n    //                     isRtl = true;\n    //                     // Else, Check for next element.\n    //                 } else if (i + 1 < line.children.length && line.children[i + 1] instanceof TextElementBox) {\n    //                     text = (elements[i + 1] as TextElementBox).text;\n    //                     isRtl = this.documentHelper.textHelper.isRTLText(text) || elements[i + 1].characterFormat.bidi\n    //                         || elements[i + 1].characterFormat.bdo === 'RTL';\n    //                 }// If the last added element is rtl then current text element box also considered as RTL for WhiteSpaces.\n    //             } else if (lastAddedElementIsRtl) {\n    //                 isRtl = true;\n    //             }\n    //         }\n    //         // Preserve the isRTL value, to reuse it for navigation and selection.\n    //         element.isRightToLeft = isRtl;\n    //         //Adds the text element to the line\n    //         if (isRtl && elementCharacterFormat.bdo !== 'LTR') {\n    //             if (lastAddedElementIsRtl) {\n    //                 tempElements.splice(lastAddedRtlElementIndex, 0, element);\n    //             } else {\n    //                 if (!isParaBidi) {\n    //                     tempElements.push(element);\n    //                 } else {\n    //                     tempElements.splice(0, 0, element);\n    //                 }\n    //                 lastAddedElementIsRtl = true;\n    //                 lastAddedRtlElementIndex = tempElements.indexOf(element);\n    //             }\n    //         } else {\n    //             if (lastAddedElementIsRtl && element instanceof ImageElementBox) {\n    //                 if (elementCharacterFormat.bidi) {\n    //                     tempElements.splice(lastAddedRtlElementIndex + 1, 0, element);\n    //                 } else {\n    //                     tempElements.splice(lastAddedRtlElementIndex, 0, element);\n    //                 }\n    //             } else {\n    //                 if (!isParaBidi) {\n    //                     tempElements.push(element);\n    //                 } else {\n    //                     if (lastAddedElementIsRtl) {\n    //                         tempElements.splice(0, 0, element);\n    //                     } else {\n    //                         tempElements.splice(lastAddedRtlElementIndex + 1, 0, element);\n    //                     }\n    //                     lastAddedRtlElementIndex = tempElements.indexOf(element);\n    //                 }\n    //                 lastAddedElementIsRtl = false;\n    //             }\n    //         }\n    //     }\n    //     // Clear the elemnts and reassign the arranged elements.\n    //     line.children = [];\n    //     line.children = tempElements;\n    // }\n    Layout.prototype.shiftElementsForRTLLayouting = function (line, paraBidi) {\n        ////Check whether span has bidi value\n        var textRangeBidi = this.hasTextRangeBidi(line);\n        if (this.isContainsRTLText(line) || paraBidi || textRangeBidi) {\n            ////Splits the child elements of a line by consecutive RTL, LTR text and word breaking characters.\n            var characterRangeTypes = [];\n            var lineElementsBidiValues = [];\n            for (var i = 0; i < line.children.length; i++) {\n                var element = line.children[i];\n                if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox && element.height > 0 && !(element.isPageBreak) && element.text !== '\\v') {\n                    var textRange = element;\n                    lineElementsBidiValues.push(textRange.characterFormat.bidi);\n                    if (textRange.text == \"\\t\") {\n                        characterRangeTypes.push(_base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.Tab);\n                    }\n                    else {\n                        characterRangeTypes.push(textRange.characterRange);\n                    }\n                    element.isRightToLeft = characterRangeTypes[characterRangeTypes.length - 1] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft;\n                }\n                else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.CommentCharacterElementBox\n                    || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BookmarkElementBox || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeStartElementBox\n                    || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeEndElementBox || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ContentControl\n                    || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox) {\n                    var isStartMark = this.isStartMarker(element);\n                    var isEndMark = this.isEndMarker(element);\n                    if (isStartMark && i < line.children.length - 1) {\n                        var nextltWidget = this.getNextValidWidget(i + 1, line);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextltWidget) && (nextltWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox)\n                            && nextltWidget.height > 0) {\n                            var textRange = nextltWidget;\n                            lineElementsBidiValues.push(textRange.characterFormat.bidi);\n                            //Since tab-stop in the line changes the reordering, here we consider an tab-stop widget as Tab.\n                            if (nextltWidget.text === '\\t') {\n                                characterRangeTypes.push(_base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.Tab);\n                            }\n                            else {\n                                characterRangeTypes.push(textRange.characterRange);\n                            }\n                        }\n                        else {\n                            lineElementsBidiValues.push(false);\n                            characterRangeTypes.push(_base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.LeftToRight);\n                        }\n                    }\n                    else if (!isEndMark && i > 0) {\n                        lineElementsBidiValues.push(lineElementsBidiValues[lineElementsBidiValues.length - 1]);\n                        characterRangeTypes.push(characterRangeTypes[characterRangeTypes.length - 1]);\n                    }\n                    else {\n                        lineElementsBidiValues.push(false);\n                        characterRangeTypes.push(_base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.LeftToRight);\n                    }\n                }\n                else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ListTextElementBox && paraBidi) {\n                    lineElementsBidiValues.push(paraBidi);\n                    characterRangeTypes.push(_base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft);\n                }\n                else {\n                    lineElementsBidiValues.push(false);\n                    characterRangeTypes.push(_base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.LeftToRight);\n                }\n            }\n            ////Sets CharacterRangeType of word split characters as (WordSplit | RTL), if word split characters are present between splitted RTL text in the same layouted line.\n            ////This code handles for both single and multiple Text Ranges of a line (Special case for ordering elements)\n            var rtlStartIndex = -1;\n            var isPrevLTRText = undefined;\n            for (var i = 0; i < characterRangeTypes.length; i++) {\n                if (i + 1 < lineElementsBidiValues.length\n                    && lineElementsBidiValues[i] != lineElementsBidiValues[i + 1]) {\n                    if (rtlStartIndex != -1) {\n                        this.updateCharacterRange(line, i, rtlStartIndex, lineElementsBidiValues, characterRangeTypes);\n                        rtlStartIndex = -1;\n                    }\n                    isPrevLTRText = null;\n                    continue;\n                }\n                /// When only one NumberNonReversingCharacter(.:,) is exists in between a two numbers and \n                /// both these number and NumberNonReversingCharacter having a Bidi property,\n                /// MS Word consider this NumberNonReversingCharacter(.:,) as Number and re-order it accordingly.\n                if (i > 0 && i != characterRangeTypes.length - 1\n                    && characterRangeTypes[i] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.WordSplit && lineElementsBidiValues[i]\n                    && characterRangeTypes[i - 1] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.Number && lineElementsBidiValues[i - 1]\n                    && characterRangeTypes[i + 1] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.Number && lineElementsBidiValues[i + 1]\n                    && this.isNumberNonReversingCharacter(line.children[i])) {\n                    characterRangeTypes[i] = _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.Number;\n                }\n                else if (characterRangeTypes[i] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft || characterRangeTypes[i] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.LeftToRight\n                    || characterRangeTypes[i] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.Number && rtlStartIndex != -1\n                    || ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isPrevLTRText) || !isPrevLTRText) && lineElementsBidiValues[i]) {\n                    if (rtlStartIndex == -1 && characterRangeTypes[i] != _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.LeftToRight) {\n                        rtlStartIndex = i;\n                    }\n                    else if (rtlStartIndex == -1) {\n                        if (characterRangeTypes[i] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.LeftToRight) {\n                            isPrevLTRText = true;\n                        }\n                        else if (characterRangeTypes[i] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft) {\n                            isPrevLTRText = false;\n                        }\n                        continue;\n                    }\n                    else if (characterRangeTypes[i] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.LeftToRight) {\n                        this.updateCharacterRange(line, i, rtlStartIndex, lineElementsBidiValues, characterRangeTypes);\n                        rtlStartIndex = characterRangeTypes[i] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft\n                            || characterRangeTypes[i] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.Number && rtlStartIndex != -1 ? i : -1;\n                    }\n                }\n                if (characterRangeTypes[i] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.LeftToRight) {\n                    isPrevLTRText = true;\n                }\n                else if (characterRangeTypes[i] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft) {\n                    isPrevLTRText = false;\n                }\n            }\n            if (rtlStartIndex != -1 && rtlStartIndex < characterRangeTypes.length - 1) {\n                this.updateCharacterRange(line, characterRangeTypes.length - 1, rtlStartIndex, lineElementsBidiValues, characterRangeTypes);\n                rtlStartIndex = -1;\n            }\n            if (characterRangeTypes.length != line.children.length) {\n                ////This exception is thrown to avoid, unhandled exception in RTL/LTR reordering logic.\n                throw new Error(\"Splitted Widget count mismatch while reordering layouted child widgets of a line\");\n            }\n            var reorderedWidgets = this.reorderElements(line, characterRangeTypes, lineElementsBidiValues, paraBidi);\n            lineElementsBidiValues.length = 0;\n            characterRangeTypes.length = 0;\n            if (line.children.length > 0) {\n                line.layoutedElements = reorderedWidgets;\n                //elements.Clear();\n                //line.children = reorderedWidgets;\n                ////ReCalculate the height and baseline offset once again.\n                //UpdateMaxElement();\n            }\n        }\n        return paraBidi;\n    };\n    Layout.prototype.isNumberNonReversingCharacter = function (element) {\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n            var textRange = element;\n            if (textRange.characterFormat.hasValueWithParent('localeIdBidi')) {\n                //Only these 10 word split characters (‘/’,‘:’,‘.’,‘,’,‘،’,‘#’,‘$’,‘%’,‘+’,‘-’) are behaving as number non reversing character based on language identifier.\n                var ch = textRange.text.charCodeAt(0);\n                //(‘/’) character is behaves as number non reversing character for some specific language identifiers.\n                if ((ch == 47 && !this.isNumberReverseLangForSlash(textRange.characterFormat.localeIdBidi))\n                    //(‘#’,‘$’,‘%’,‘+’,‘-’) characters are behaving as number non reversing character for some specific language identifiers.\n                    || ((ch == 35 || ch == 36 || ch == 37 || ch == 43 || ch == 45) && !this.isNumberReverseLangForOthers(textRange.characterFormat.localeIdBidi))\n                    //(‘,’,‘.’,‘:’,‘،’) characters are behaving as number non reversing character for any language identifier.\n                    || (ch == 44 || ch == 46 || ch == 58 || ch == 1548)) {\n                    return true;\n                }\n            }\n            else {\n                return _text_helper__WEBPACK_IMPORTED_MODULE_8__.TextHelper.isNumberNonReversingCharacter(textRange.text, textRange.characterFormat.bidi);\n            }\n        }\n        return false;\n    };\n    Layout.prototype.isNumberReverseLangForSlash = function (lang) {\n        return (this.isNumberReverseLangForOthers(lang) || lang == 6145 || lang == 1164 || lang == 1125 ||\n            lang == 1120 || lang == 1123 || lang == 1065 || lang == 2137 ||\n            lang == 1114 || lang == 1119 || lang == 1152 || lang == 1056);\n    };\n    Layout.prototype.isNumberReverseLangForOthers = function (lang) {\n        return (lang == 14337 || lang == 15361 || lang == 5121 || lang == 3073 || lang == 2049 ||\n            lang == 11265 || lang == 13313 || lang == 12289 || lang == 4097 || lang == 8193 ||\n            lang == 16385 || lang == 1025 || lang == 10241 || lang == 7169 || lang == 9217);\n    };\n    Layout.prototype.isStartMarker = function (element) {\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.CommentCharacterElementBox) {\n            return element.commentType === 0;\n        }\n        else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BookmarkElementBox) {\n            return element.bookmarkType === 0;\n        }\n        else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeStartElementBox) {\n            return true;\n        }\n        else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ContentControl) {\n            return element.type === 0;\n        }\n        else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox) {\n            return element.fieldType === 0;\n        }\n        return false;\n    };\n    Layout.prototype.isEndMarker = function (element) {\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.CommentCharacterElementBox) {\n            return element.commentType === 1;\n        }\n        else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BookmarkElementBox) {\n            return element.bookmarkType === 1;\n        }\n        else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeStartElementBox) {\n            return true;\n        }\n        else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ContentControl) {\n            return element.type === 1;\n        }\n        else if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox) {\n            return element.fieldType === 1;\n        }\n        return false;\n    };\n    Layout.prototype.getNextValidWidget = function (startIndex, layoutedWidgets) {\n        for (var i = startIndex; i < layoutedWidgets.children.length; i++) {\n            var element = layoutedWidgets.children[i];\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.CommentCharacterElementBox\n                || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BookmarkElementBox || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeStartElementBox\n                || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.EditRangeEndElementBox || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ContentControl\n                || element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox) {\n                continue;\n            }\n            else {\n                return element[i];\n            }\n        }\n        return null;\n    };\n    Layout.prototype.hasTextRangeBidi = function (line) {\n        for (var i = 0; i < line.children.length; i++) {\n            var elementBox = line.children[i];\n            if (elementBox instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n                var textRange = elementBox;\n                if (textRange.characterFormat.bidi) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Layout.prototype.isContainsRTLText = function (line) {\n        var documentHelper = line.paragraph.bodyWidget.page.documentHelper;\n        var textHelper = documentHelper.textHelper;\n        var isContainsRTL = false;\n        for (var i = 0; i < line.children.length; i++) {\n            if (line.children[i] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n                isContainsRTL = line.children[i].characterFormat.bidi || line.children[i].characterFormat.bidi == true\n                    || textHelper.isRTLText(line.children[i].text);\n                if (isContainsRTL)\n                    break;\n            }\n        }\n        return isContainsRTL;\n    };\n    Layout.prototype.updateCharacterRange = function (line, i, rtlStartIndex, lineElementsBidiValues, characterRangeTypes) {\n        var endIndex = i;\n        if (!lineElementsBidiValues[i]) {\n            if (characterRangeTypes[i] === _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.LeftToRight) {\n                endIndex--;\n            }\n            for (var j = endIndex; j >= rtlStartIndex; j--) {\n                if (characterRangeTypes[j] != _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.WordSplit) {\n                    endIndex = j;\n                    break;\n                }\n            }\n        }\n        for (var j = rtlStartIndex; j <= endIndex; j++) {\n            if (characterRangeTypes[j] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.WordSplit) {\n                characterRangeTypes[j] = _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft | _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.WordSplit;\n                var previousIndex = j - 1;\n                var nextIndex = j + 1;\n                //// Handled a special behavior, When a EastAsia font is \"Times New Roman\" for text range.\n                //// Group of word split character is exist in between a RTL characters, MS Word reverse a corresponding word split characters.\n                //// So, that we have reverse the word split characters.\n                if (previousIndex >= 0 && nextIndex < characterRangeTypes.length\n                    && characterRangeTypes[previousIndex] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft\n                    && (characterRangeTypes[nextIndex] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft || characterRangeTypes[nextIndex] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.Number)\n                    && line.children[j] instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox) {\n                    var textRange = line.children[j];\n                    if (textRange.characterFormat.fontFamilyBidi == \"Times New Roman\") {\n                        var charArray = textRange.text.split(\"\");\n                        var reverseArray = charArray.reverse();\n                        var joinArray = reverseArray.join(\"\");\n                        textRange.text = joinArray;\n                    }\n                }\n            }\n        }\n    };\n    Layout.prototype.reorderElements = function (line, characterRangeTypes, listElementsBidiValues, paraBidi) {\n        var insertIndex = 0, lastItemIndexWithoutRTLFlag = -1, consecutiveRTLCount = 0, consecutiveNumberCount = 0;\n        var reorderedElements = [];\n        var prevCharType = _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.LeftToRight;\n        var prevBidi = false;\n        for (var i = 0; i < line.children.length; i++) {\n            var element = line.children[i];\n            var textElement = element;\n            textElement.characterRange = characterRangeTypes[i];\n            var isRTLText = (textElement.characterRange & _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft) == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft || textElement.characterRange == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.Number;\n            var isBidi = listElementsBidiValues[i];\n            ////If tab-stop is exist with in the line then we have to consider the below behaviours\n            if (characterRangeTypes[i] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.Tab) {\n                if (paraBidi) {\n                    ////When para bidi is true, reordering is performed until tab stop position and break the reordering and then again reordering is performed for the remaining contents which exist after the tab-stop. \n                    ////Assume if we have an tab stop in center of the line, then the reordering is performed until the tab stop position and stop and place a tab stop and starts reordering for the remaining contents. \n                    insertIndex = 0;\n                    lastItemIndexWithoutRTLFlag = -1;\n                    consecutiveRTLCount = 0;\n                    prevCharType = _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.LeftToRight;\n                    prevBidi = false;\n                    reorderedElements.splice(insertIndex, 0, element);\n                    continue;\n                }\n                else if (isBidi) {\n                    ////If text range bidi is true for the tab stop widget, MS Word does not consider this tab-stop bidi as LTR Bidi and does not shift it as per our reordering. \n                    ////Instead its consider this widget as non-bidi LTR and do the reordering.\n                    isBidi = false;\n                }\n            }\n            if (i > 0 && prevBidi != isBidi) {\n                if (paraBidi) {\n                    ////If Bidi of paragraph is true, then start inserting widgets from first (index 0).\n                    insertIndex = 0;\n                    lastItemIndexWithoutRTLFlag = -1;\n                    consecutiveRTLCount = 0;\n                }\n                else {\n                    ////If Bidi of paragraph is false, then start inserting widgets from last (reorderedWidgets.Count).\n                    lastItemIndexWithoutRTLFlag = reorderedElements.length - 1;\n                }\n                ////If Bidi for previous and next widget differs, we have to reset consecutive number to 0.\n                consecutiveNumberCount = 0;\n            }\n            if (!isBidi && !isRTLText) {\n                if (paraBidi) {\n                    if (consecutiveRTLCount > 0 && prevBidi == isBidi) {\n                        insertIndex += consecutiveRTLCount;\n                    }\n                    reorderedElements.splice(insertIndex, 0, element);\n                    insertIndex++;\n                }\n                else {\n                    reorderedElements.push(element);\n                    insertIndex = i + 1;\n                }\n                consecutiveRTLCount = 0;\n                lastItemIndexWithoutRTLFlag = paraBidi ? insertIndex - 1 : reorderedElements.length - 1;\n            }\n            else if (isRTLText || (isBidi && textElement.characterRange == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.WordSplit\n                && (prevCharType == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft || this.isInsertWordSplitToLeft(characterRangeTypes, listElementsBidiValues, i)))) {\n                consecutiveRTLCount++;\n                insertIndex = lastItemIndexWithoutRTLFlag + 1;\n                if (textElement.characterRange == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.Number) {\n                    if (prevCharType == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.Number) {\n                        ////Moves the insertIndex to the right after the previous consecutive number.\n                        insertIndex += consecutiveNumberCount;\n                    }\n                    ////Increments consecutive number counter, to decide how much position the next number text range (widget) has to be moved and inserted towards right of insertIndex.\n                    consecutiveNumberCount++;\n                }\n                reorderedElements.splice(insertIndex, 0, element);\n            }\n            else {\n                reorderedElements.splice(insertIndex, 0, element);\n                insertIndex++;\n                consecutiveRTLCount = 0;\n            }\n            if (textElement.characterRange != _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.Number) {\n                ////Resets the consecutive number counter when character range is not a number.\n                consecutiveNumberCount = 0;\n            }\n            if (textElement.characterRange != _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.WordSplit) {\n                ////Note: Handled to set only CharacterRangeType.RightToLeft and CharacterRangeType.LeftToRight\n                ////For CharacterRangeType.WordSplit | CharacterRangeType.RightToLeft case, the IsInsertWordSplitToLeft method will return true.\n                prevCharType = textElement.characterRange;\n            }\n            prevBidi = isBidi;\n        }\n        return reorderedElements;\n    };\n    Layout.prototype.isInsertWordSplitToLeft = function (characterRangeTypes, lineElementsBidiValues, elementIndex) {\n        for (var i = elementIndex + 1; i < characterRangeTypes.length; i++) {\n            if ((characterRangeTypes[i] & _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft) == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.RightToLeft) {\n                return true;\n            }\n            else if (characterRangeTypes[i] == _base_types__WEBPACK_IMPORTED_MODULE_2__.CharacterRangeType.LeftToRight) {\n                if (lineElementsBidiValues[i]) {\n                    return false;\n                }\n                else {\n                    ////If bidi is true for previous LTR and bidi is false for next LTR, then insert Word split to before previous inserted widget.\n                    return true;\n                }\n            }\n        }\n        return true;\n    };\n    Layout.prototype.shiftLayoutFloatingItems = function (paragraph) {\n        for (var i = 0; i < paragraph.floatingElements.length; i++) {\n            var element = paragraph.floatingElements[i];\n            var position = this.getFloatingItemPoints(element);\n            var height = position.y - element.y;\n            element.x = position.x;\n            element.y = position.y;\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) {\n                for (var j = 0; j < element.textFrame.childWidgets.length; j++) {\n                    var block = element.textFrame.childWidgets[j];\n                    if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ParagraphWidget) {\n                        block.y = block.y + height;\n                    }\n                    else if (block instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) {\n                        this.shiftChildLocationForTableWidget(block, height);\n                    }\n                }\n            }\n        }\n    };\n    //RTL feature layout end\n    Layout.prototype.getFloatingItemPoints = function (floatElement) {\n        var paragraph = floatElement.line.paragraph;\n        var sectionFormat = paragraph.bodyWidget.sectionFormat;\n        var indentX = 0;\n        var indentY = 0;\n        if (paragraph) {\n            var leftMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.leftMargin);\n            var rightMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.rightMargin);\n            var topMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.topMargin);\n            var bottomMargin = sectionFormat.bottomMargin > 0 ? _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.bottomMargin) : 48;\n            var headerDistance = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.headerDistance);\n            var footerDistance = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.footerDistance);\n            var pageWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.pageWidth);\n            var pageHeight = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.pageHeight);\n            var pageClientWidth = pageWidth - (leftMargin + rightMargin);\n            var pageClientHeight = pageHeight - topMargin - bottomMargin;\n            //Need to consider RTL layout.\n            if (paragraph.isInHeaderFooter && sectionFormat.topMargin <= 0) {\n                topMargin = Math.abs(topMargin) > 0 ? Math.abs(topMargin)\n                    : _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.headerDistance) + (paragraph.height);\n            }\n            else {\n                topMargin = topMargin > 0 ? topMargin : 48;\n            }\n            //Update the top margin as text body y position when text body y position exceeds the top margin. \n            if (!paragraph.isInHeaderFooter && topMargin < this.viewer.clientArea.y) {\n                topMargin = this.viewer.clientArea.y;\n            }\n            var mIsYPositionUpdated = false;\n            var textWrapStyle = 'InFrontOfText';\n            //if (textWrapStyle !== 'Inline') {\n            var isLayoutInCell = false;\n            var vertOrigin = floatElement.verticalOrigin;\n            var horzOrigin = floatElement.horizontalOrigin;\n            var horzAlignment = floatElement.horizontalAlignment;\n            var vertAlignment = floatElement.verticalAlignment;\n            var verticalPercent = floatElement.verticalRelativePercent;\n            var horizontalPercent = floatElement.horizontalRelativePercent;\n            var shapeHeight = floatElement.height;\n            //Need to update size width for Horizontal Line when width exceeds client width.\n            // if(shape !== null && shape.IsHorizontalRule && size.Width > m_layoutArea.ClientActiveArea.Width)\n            //     size.Width = m_layoutArea.ClientActiveArea.Width;\n            var shapeWidth = floatElement.width;\n            var vertPosition = floatElement.verticalPosition;\n            var horzPosition = floatElement.horizontalPosition;\n            var layoutInCell = floatElement.layoutInCell;\n            var heightPercent = floatElement.heightRelativePercent;\n            var widthPercent = floatElement.widthRelativePercent;\n            var autoShape = void 0;\n            if (floatElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) {\n                autoShape = floatElement.autoShapeType;\n            }\n            //Word 2013 Layout picture in table cell even layoutInCell property was False.\n            if (paragraph.isInsideTable && layoutInCell) {\n                isLayoutInCell = true;\n                indentY = this.getVerticalPosition(floatElement, vertPosition, vertOrigin, textWrapStyle);\n                indentX = this.getHorizontalPosition(floatElement.width, floatElement, horzAlignment, horzOrigin, horzPosition, textWrapStyle, paragraph.associatedCell.cellFormat.cellWidth);\n            }\n            else {\n                if (this.documentHelper.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.WebLayoutViewer) {\n                    switch (vertOrigin) {\n                        case 'Line':\n                            indentY = this.documentHelper.selection.getTop(floatElement.line);\n                            break;\n                        default:\n                            indentY = this.viewer.clientActiveArea.y;\n                            break;\n                    }\n                    switch (horzOrigin) {\n                        case 'Character':\n                            indentX = this.viewer.clientActiveArea.x;\n                            break;\n                        default:\n                            switch (horzAlignment) {\n                                case 'Center':\n                                    indentX = (this.viewer.clientArea.width / 2) - (floatElement.width / 2);\n                                    break;\n                                default:\n                                    indentX = this.viewer.clientArea.x;\n                                    break;\n                            }\n                            break;\n                    }\n                }\n                else {\n                    if (mIsYPositionUpdated) { /* Upadte the Y Coordinate of floating image when floating image postion is changed based on the wrapping style. */\n                        indentY = this.viewer.clientArea.y;\n                    }\n                    else {\n                        switch (vertOrigin) {\n                            case 'Page':\n                            case 'TopMargin':\n                                indentY = vertPosition;\n                                switch (vertAlignment) {\n                                    case 'Top':\n                                        indentY = vertPosition;\n                                        break;\n                                    case 'Center':\n                                        if (vertOrigin === 'TopMargin') {\n                                            indentY = (topMargin - shapeHeight) / 2;\n                                        }\n                                        else {\n                                            if (heightPercent > 0 && widthPercent > 0) {\n                                                indentY = (pageHeight - (pageHeight) * (heightPercent / 100)) / 2;\n                                                floatElement.height = (pageHeight) * (heightPercent / 100);\n                                            }\n                                            else {\n                                                indentY = (pageHeight - shapeHeight) / 2;\n                                            }\n                                        }\n                                        break;\n                                    case 'Outside':\n                                    case 'Bottom':\n                                        if (vertOrigin === 'Page' && vertAlignment === 'Bottom') {\n                                            indentY = pageHeight - shapeHeight;\n                                        }\n                                        else {\n                                            if (vertOrigin === 'TopMargin') {\n                                                indentY = (topMargin - shapeHeight);\n                                            }\n                                            else if ((paragraph.bodyWidget.page.index + 1) % 2 !== 0) {\n                                                indentY = pageHeight - shapeHeight - footerDistance / 2;\n                                            }\n                                            else {\n                                                indentY = headerDistance / 2;\n                                            }\n                                        }\n                                        break;\n                                    case 'Inside':\n                                        if (vertOrigin === 'Page') {\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                                indentY = pageHeight - shapeHeight - footerDistance / 2;\n                                            }\n                                            else {\n                                                indentY = headerDistance / 2;\n                                            }\n                                        }\n                                        else {\n                                            //Need to ensure this behaviour.\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                                indentY = ((topMargin - shapeHeight) / 2 - headerDistance);\n                                            }\n                                        }\n                                        break;\n                                    case 'None':\n                                        if (Math.abs(verticalPercent) <= 1000) {\n                                            indentY = pageHeight * (verticalPercent / 100);\n                                        }\n                                        else {\n                                            indentY = vertPosition;\n                                        }\n                                        break;\n                                }\n                                break;\n                            case 'Line':\n                                indentY = vertPosition;\n                                switch (vertAlignment) {\n                                    case 'Inside':\n                                    case 'Top':\n                                        //Need to update line widget height instead of client active area.\n                                        indentY = this.viewer.clientActiveArea.y;\n                                        break;\n                                    case 'Center':\n                                        indentY = this.viewer.clientActiveArea.y - shapeHeight / 2;\n                                        break;\n                                    case 'Outside':\n                                    case 'Bottom':\n                                        indentY = this.viewer.clientActiveArea.y - shapeHeight;\n                                        break;\n                                    case 'None':\n                                        indentY = Math.round(paragraph.y) + vertPosition;\n                                        break;\n                                }\n                                break;\n                            case 'BottomMargin':\n                                indentY = vertPosition;\n                                switch (vertAlignment) {\n                                    case 'Inside':\n                                    case 'Top':\n                                        indentY = (pageHeight - bottomMargin);\n                                        break;\n                                    case 'Center':\n                                        indentY = pageHeight - bottomMargin + ((bottomMargin - shapeHeight) / 2);\n                                        break;\n                                    case 'Outside':\n                                    case 'Bottom':\n                                        if (paragraph.bodyWidget.page.index + 1 % 2 !== 0 && vertAlignment === 'Outside') {\n                                            indentY = pageHeight - bottomMargin;\n                                        }\n                                        else {\n                                            indentY = pageHeight - shapeHeight;\n                                        }\n                                        break;\n                                    case 'None':\n                                        indentY = pageHeight - bottomMargin + vertPosition;\n                                        break;\n                                }\n                                break;\n                            case 'InsideMargin':\n                            case 'OutsideMargin':\n                                indentY = vertPosition;\n                                switch (vertAlignment) {\n                                    case 'Inside':\n                                        if (vertOrigin === 'InsideMargin') {\n                                            if (vertOrigin === 'InsideMargin' && paragraph.bodyWidget.page.index + 1 % 2 === 0) {\n                                                indentY = pageHeight - shapeHeight;\n                                            }\n                                            else {\n                                                indentY = 0;\n                                            }\n                                        }\n                                        else {\n                                            indentY = (paragraph.bodyWidget.page.index + 1) % 2 !== 0 ? pageHeight - bottomMargin : topMargin - shapeHeight;\n                                        }\n                                        break;\n                                    case 'Top':\n                                        if (vertOrigin === 'InsideMargin') {\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                                indentY = pageHeight - bottomMargin;\n                                            }\n                                            else {\n                                                indentY = 0;\n                                            }\n                                        }\n                                        else {\n                                            indentY = (paragraph.bodyWidget.page.index + 1) % 2 !== 0 ? pageHeight - bottomMargin : 0;\n                                        }\n                                        break;\n                                    case 'Center':\n                                        if (vertOrigin === 'OutsideMargin') {\n                                            //Need to ensure this.\n                                            indentY = (paragraph.bodyWidget.page.index + 1) % 2 !== 0 ? pageHeight - bottomMargin + (bottomMargin - shapeHeight) / 2 : (topMargin - shapeHeight) / 2;\n                                        }\n                                        else {\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                                indentY = pageHeight - bottomMargin + (bottomMargin - shapeHeight) / 2;\n                                            }\n                                            else {\n                                                indentY = (topMargin - shapeHeight) / 2;\n                                            }\n                                        }\n                                        break;\n                                    case 'Outside':\n                                        if (vertOrigin === 'InsideMargin') {\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                                indentY = (pageHeight - bottomMargin);\n                                            }\n                                            else {\n                                                indentY = (topMargin - shapeHeight);\n                                            }\n                                        }\n                                        else {\n                                            indentY = (paragraph.bodyWidget.page.index + 1) % 2 !== 0 ? topMargin - shapeHeight : pageHeight - bottomMargin;\n                                        }\n                                        break;\n                                    case 'Bottom':\n                                        if (vertOrigin === 'OutsideMargin') {\n                                            indentY = (paragraph.bodyWidget.page.index + 1) !== 0 ? pageHeight - shapeHeight : topMargin - shapeHeight;\n                                        }\n                                        else {\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                                indentY = pageHeight - shapeHeight;\n                                            }\n                                            else {\n                                                indentY = topMargin - shapeHeight;\n                                            }\n                                        }\n                                        break;\n                                    case 'None':\n                                        break;\n                                }\n                                break;\n                            case 'Paragraph':\n                                var space = 0;\n                                //let prevsibling: BlockWidget = paragraph.previousWidget as BlockWidget;\n                                // if (floatElement) {\n                                //     //Need to handle DocIO Implementation.\n                                //     if (Math.round(paragraph.y) !== Math.round(topMargin) && (prevsibling instanceof ParagraphWidget)\n                                //         && ((paragraph.paragraphFormat.beforeSpacing > prevsibling.paragraphFormat.afterSpacing)\n                                //             || (prevsibling.paragraphFormat.afterSpacing < 14)\n                                //             && !paragraph.paragraphFormat.contextualSpacing)) {\n                                //         space = prevsibling.paragraphFormat.afterSpacing;\n                                //     }\n                                // }\n                                // eslint-disable-next-line max-len\n                                //Floating item Y position is calculated from paragraph original Y position not from wrapped paragraph Y(ParagraphLayoutInfo.YPosition) position.\n                                indentY = Math.round(paragraph.y) + space + vertPosition;\n                                break;\n                            case 'Margin':\n                                //If header distance is more than top margin, then calculate the position of item based on header distance.\n                                //As per Microsoft Word behavior, it is need to consider paragraph height along with the distance.\n                                if (paragraph.isInHeaderFooter && headerDistance > topMargin) {\n                                    //Need to udpate.\n                                    indentY = (headerDistance + (paragraph.height)) + vertPosition;\n                                }\n                                else {\n                                    indentY = topMargin + vertPosition;\n                                }\n                                switch (vertAlignment) {\n                                    case 'Top':\n                                        indentY = topMargin;\n                                        break;\n                                    case 'Center':\n                                        indentY = topMargin + (pageClientHeight - shapeHeight) / 2;\n                                        break;\n                                    case 'Outside':\n                                    case 'Bottom':\n                                        if ((paragraph.bodyWidget.page.index + 1) % 2 !== 0) {\n                                            indentY = topMargin + pageClientHeight - shapeHeight;\n                                        }\n                                        else {\n                                            indentY = topMargin;\n                                        }\n                                        break;\n                                    case 'Inside':\n                                        if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                            indentY = topMargin + pageClientHeight - shapeHeight;\n                                        }\n                                        else {\n                                            indentY = topMargin;\n                                        }\n                                        break;\n                                    case 'None':\n                                        break;\n                                }\n                                break;\n                            default:\n                                //Need to analyze further.\n                                indentY = this.viewer.clientArea.y - vertPosition;\n                                break;\n                        }\n                    }\n                    // if (horzOrigin !== 'Column' && horzAlignment !== 'None') {\n                    //     indentX = this.viewer.clientArea.x;\n                    //     //Update the floating item x position to zero when floating item’s width\n                    //     //exceeds the page width when floating item and it wrapping style is not equal to  \n                    //     // infront of text and behind text and also vertical origin is not equal to paragraph.\n                    // } else \n                    if (paragraph && textWrapStyle !== 'InFrontOfText' && textWrapStyle !== 'Behind' &&\n                        vertOrigin === 'Paragraph' && shapeWidth >= pageWidth) {\n                        indentX = 0;\n                    }\n                    else {\n                        switch (horzOrigin) {\n                            case 'Page':\n                                indentX = horzPosition;\n                                switch (horzAlignment) {\n                                    case 'Center':\n                                        if (isLayoutInCell) {\n                                            indentX = (paragraph.associatedCell.cellFormat.cellWidth - shapeWidth) / 2;\n                                        }\n                                        else {\n                                            if (heightPercent > 0 && widthPercent > 0) {\n                                                indentX = (pageWidth - (pageWidth) * (widthPercent / 100)) / 2;\n                                                floatElement.width = (pageWidth) * (widthPercent / 100);\n                                            }\n                                            else {\n                                                indentX = (pageWidth - shapeWidth) / 2;\n                                            }\n                                        }\n                                        break;\n                                    case 'Left':\n                                        indentX = 0;\n                                        break;\n                                    case 'Outside':\n                                    case 'Right':\n                                        if (isLayoutInCell) {\n                                            indentX = paragraph.associatedCell.cellFormat.cellWidth - shapeWidth;\n                                        }\n                                        else {\n                                            indentX = pageWidth - shapeWidth;\n                                        }\n                                        break;\n                                    case 'None':\n                                        if (isLayoutInCell) {\n                                            indentX = paragraph.associatedCell.x + horzPosition;\n                                        }\n                                        else if (floatElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ShapeElementBox) {\n                                            indentX = horzPosition;\n                                            // Shape pItemShape = paraItem as Shape;\n                                            // float horRelPercent = pItemShape !== null ? pItemShape.TextFrame.HorizontalRelativePercent\n                                            //                       : (paraItem as WTextBox).TextBoxFormat.HorizontalRelativePercent;\n                                            // if (Math.Abs(horRelPercent) <= 1000)\n                                            //     indentX = pageWidth * (horRelPercent / 100);\n                                            // else\n                                            //     indentX = pItemShape !== null ? pItemShape.HorizontalPosition\n                                            //         : (paraItem as WTextBox).TextBoxFormat.HorizontalPosition;\n                                        }\n                                        else {\n                                            indentX = horzPosition;\n                                        }\n                                        break;\n                                }\n                                if (indentX < 0 && isLayoutInCell) {\n                                    indentX = paragraph.associatedCell.x;\n                                }\n                                break;\n                            case 'Column':\n                                var isXPositionUpated = false;\n                                //Update the Xposition while wrapping element exsit in the paragraph\n                                if (this.viewer.clientActiveArea.x < paragraph.x) {\n                                    // let cellPadings = 0;\n                                    // if (paragraph.isInsideTable) {\n                                    //     CellLayoutInfo cellLayoutInfo = (ownerPara.GetOwnerEntity() as IWidget).LayoutInfo as CellLayoutInfo;\n                                    //     cellPadings = cellLayoutInfo.Paddings.Left + cellLayoutInfo.Paddings.Right;\n                                    // }\n                                    // float minimumWidthRequired = DEF_MIN_WIDTH_SQUARE;\n                                    // if (textWrapStyle === TextWrappingStyle.Tight || textWrapStyle === TextWrappingStyle.Through)\n                                    //     minimumWidthRequired = ownerPara.Document.Settings.CompatibilityMode === CompatibilityMode.Word2013 ?\n                                    //         DEF_MIN_WIDTH_2013_TIGHTANDTHROW : DEF_MIN_WIDTH_TIGHTANDTHROW;\n                                    // minimumWidthRequired -= cellPadings;\n                                    // //Re Update the x position to the page left when paragraph starting position not equal to the \n                                    // //column starting and current inline item is x position equal to the column left position.\n                                    // if ((ownerPara.IsXpositionUpated && ownerPara.Document.Settings.CompatibilityMode === CompatibilityMode.Word2013)\n                                    //     || paragraphLayoutInfo.XPosition > (pageWidth - minimumWidthRequired - rightMargin)\n                                    //     || paragraphLayoutInfo.IsXPositionReUpdate)\n                                    //     indentX = layouter.ClientLayoutArea.Left + horzPosition;\n                                    // else\n                                    indentX = paragraph.x + horzPosition;\n                                }\n                                else {\n                                    //Re Update the x position to the page left when word version not equal to 2013 \n                                    //and wrapping style not equal to infront of text and behind text. \n                                    if ((textWrapStyle === 'InFrontOfText' || textWrapStyle === 'Behind')) {\n                                        if (!(floatElement.paragraph.isInsideTable) && ((autoShape === 'StraightConnector' || autoShape === 'Rectangle') || floatElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.ImageElementBox)) {\n                                            isXPositionUpated = true;\n                                            indentX = horzPosition + paragraph.bodyWidget.x;\n                                        }\n                                        else {\n                                            indentX = paragraph.x + horzPosition;\n                                        }\n                                    }\n                                    else {\n                                        indentX = this.viewer.clientActiveArea.x + horzPosition;\n                                    }\n                                }\n                                //Update the Wrapping element right position as page right when \n                                //wrapping element right position  exceeds the page right except position \n                                //InFrontOfText and behindText wrapping style.\n                                if (textWrapStyle !== 'InFrontOfText' && textWrapStyle !== 'Behind'\n                                    && Math.round(indentX + shapeWidth) > Math.round(pageWidth) && shapeWidth < pageWidth) {\n                                    indentX = (pageWidth - shapeWidth);\n                                }\n                                if (paragraph.paragraphFormat.leftIndent && !isXPositionUpated) {\n                                    var leftIndent = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(paragraph.leftIndent);\n                                    indentX -= leftIndent;\n                                }\n                                switch (horzAlignment) {\n                                    case 'Center':\n                                        indentX = this.viewer.clientActiveArea.x + (this.viewer.clientActiveArea.width - shapeWidth) / 2;\n                                        break;\n                                    case 'Left':\n                                        indentX = this.viewer.clientActiveArea.x;\n                                        break;\n                                    case 'Right':\n                                        indentX = this.viewer.clientActiveArea.x + this.viewer.clientActiveArea.width - shapeWidth; //- TextBoxFormat.InternalMargin.Right;\n                                        break;\n                                    case 'None':\n                                        break;\n                                }\n                                break;\n                            case 'Margin':\n                                if (paragraph.bodyWidget) {\n                                    indentX = leftMargin + horzPosition;\n                                    switch (horzAlignment) {\n                                        case 'Center':\n                                            indentX = leftMargin + (pageClientWidth - shapeWidth) / 2;\n                                            break;\n                                        case 'Left':\n                                            indentX = leftMargin;\n                                            break;\n                                        case 'Outside':\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 !== 0) {\n                                                indentX = leftMargin + pageClientWidth - shapeWidth;\n                                            }\n                                            break;\n                                        case 'Right':\n                                            indentX = leftMargin + pageClientWidth - shapeWidth;\n                                            break;\n                                        case 'Inside':\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                                indentX = leftMargin + pageClientWidth - shapeWidth;\n                                            }\n                                            break;\n                                        case 'None':\n                                            break;\n                                    }\n                                }\n                                else {\n                                    indentX = this.viewer.clientArea.x + horzPosition;\n                                }\n                                break;\n                            case 'Character':\n                                if (horzAlignment === 'Right' || horzAlignment === 'Center') {\n                                    indentX = this.getLeftMarginHorizPosition(leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                                }\n                                else {\n                                    //Need to update this while layouting.**\n                                    indentX = this.viewer.clientArea.x + horzPosition;\n                                }\n                                break;\n                            case 'LeftMargin':\n                                indentX = this.getLeftMarginHorizPosition(leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                                break;\n                            case 'RightMargin':\n                                indentX = this.getRightMarginHorizPosition(pageWidth, rightMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                                break;\n                            case 'InsideMargin':\n                                if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                    indentX = this.getRightMarginHorizPosition(pageWidth, rightMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                                }\n                                else {\n                                    indentX = this.getLeftMarginHorizPosition(leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                                }\n                                break;\n                            case 'OutsideMargin':\n                                if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                    indentX = this.getLeftMarginHorizPosition(leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                                }\n                                else {\n                                    indentX = this.getRightMarginHorizPosition(pageWidth, rightMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                                }\n                                break;\n                            default:\n                                indentX = this.viewer.clientArea.x + horzPosition;\n                                break;\n                        }\n                    }\n                    //Update the floating item right position to the page right when floating item \n                    //right position exceeds the page width and it wrapping style is not equal to  \n                    // InFrontOfText and behind text and also vertical origin is not equal to paragraph.\n                    if (paragraph && textWrapStyle !== 'InFrontOfText'\n                        && textWrapStyle !== 'Behind' && vertOrigin === 'Paragraph' && pageWidth < indentX + shapeWidth) {\n                        indentX = pageWidth - shapeWidth;\n                    }\n                }\n            }\n            if (paragraph && (vertOrigin === 'Paragraph' || vertOrigin === 'Line') && floatElement.textWrappingStyle !== \"InFrontOfText\" && floatElement.textWrappingStyle !== \"Behind\") {\n                if (this.documentHelper.compatibilityMode === 'Word2013') {\n                    if (!paragraph.isInHeaderFooter) {\n                        if (indentY + floatElement.height > this.viewer.clientArea.bottom) {\n                            indentY = this.viewer.clientArea.bottom - floatElement.height;\n                        }\n                        if (indentY < sectionFormat.topMargin) {\n                            indentY = sectionFormat.topMargin;\n                        }\n                    }\n                }\n            }\n        }\n        //}\n        return new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.Point(indentX, indentY);\n    };\n    Layout.prototype.getLeftMarginHorizPosition = function (leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle) {\n        var indentX = horzPosition;\n        switch (horzAlignment) {\n            case 'Center':\n                indentX = (leftMargin - shapeWidth) / 2;\n                break;\n            case 'Left':\n                indentX = 0;\n                break;\n            case 'Right':\n                indentX = leftMargin - shapeWidth;\n                break;\n            case 'None':\n                break;\n        }\n        if (indentX < 0 && textWrapStyle !== 'InFrontOfText' && textWrapStyle !== 'Behind') {\n            indentX = 0;\n        }\n        return indentX;\n    };\n    Layout.prototype.getRightMarginHorizPosition = function (pageWidth, rightMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle) {\n        var xPosition = pageWidth - rightMargin;\n        var indentX = xPosition + horzPosition;\n        switch (horzAlignment) {\n            case 'Center':\n                indentX = xPosition + (rightMargin - shapeWidth) / 2;\n                break;\n            case 'Left':\n                indentX = xPosition;\n                break;\n            case 'Right':\n                indentX = pageWidth - shapeWidth;\n                break;\n            case 'None':\n                break;\n        }\n        if ((indentX < 0 || indentX + shapeWidth > pageWidth) && textWrapStyle !== 'InFrontOfText' && textWrapStyle !== 'Behind') {\n            indentX = pageWidth - shapeWidth;\n        }\n        return indentX;\n    };\n    Layout.prototype.getVerticalPosition = function (paraItem, vertPosition, vertOrigin, textWrapStyle) {\n        var paragraph = paraItem.line.paragraph;\n        //ParagraphLayoutInfo paragraphLayoutInfo = (paragraph as IWidget).LayoutInfo as ParagraphLayoutInfo;\n        var shape = paraItem;\n        //WPicture pic = paraItem as WPicture;\n        var indentY = 0;\n        var topMargin = paragraph.associatedCell.y;\n        switch (vertOrigin) {\n            case 'Page':\n            case 'Margin':\n            case 'TopMargin':\n            case 'InsideMargin':\n            case 'BottomMargin':\n            case 'OutsideMargin':\n                indentY = topMargin + vertPosition;\n                break;\n            case 'Line':\n            case 'Paragraph':\n                var space = 0;\n                // if (shape) {\n                //     space = paragraph.paragraphFormat.afterSpacing;\n                // }\n                indentY = paragraph.y + vertPosition + space;\n                if (shape.textWrappingStyle == \"Square\") {\n                    indentY = indentY <= paragraph.associatedCell.y ? paragraph.associatedCell.y : indentY;\n                }\n                break;\n            default:\n                indentY = this.viewer.clientActiveArea.y + vertPosition;\n                break;\n        }\n        return indentY;\n    };\n    Layout.prototype.getHorizontalPosition = function (width, paraItem, horzAlignment, horzOrigin, horzPosition, textWrapStyle, cellWid) {\n        var indentX = 0;\n        var paragraph = paraItem.line.paragraph;\n        // CellLayoutInfo cellLayoutInfo = (paragraph.OwnerTextBody as IWidget).LayoutInfo as CellLayoutInfo;\n        // ILayoutSpacingsInfo spacings = cellLayoutInfo as ILayoutSpacingsInfo;\n        var cell = paragraph.associatedCell;\n        var cellWidth = cellWid - cell.leftMargin - cell.rightMargin;\n        var cellInnerWidth = cell.cellFormat.cellWidth;\n        var marginLeft = cell.x;\n        var pageLeft = marginLeft - cell.leftMargin;\n        switch (horzOrigin) {\n            case 'Page':\n                {\n                    indentX = horzPosition;\n                    switch (horzAlignment) {\n                        case 'Center':\n                            indentX = pageLeft + (cellWidth - width) / 2;\n                            break;\n                        case 'Left':\n                            indentX = pageLeft;\n                            break;\n                        case 'Right':\n                            indentX = pageLeft + (cellWidth - width);\n                            break;\n                        case 'None':\n                            indentX = pageLeft + horzPosition;\n                            break;\n                    }\n                }\n                break;\n            case 'Column':\n            case 'Margin':\n                {\n                    switch (horzAlignment) {\n                        case 'Center':\n                            indentX = marginLeft + (cellInnerWidth - width) / 2;\n                            break;\n                        case 'Left':\n                            indentX = marginLeft;\n                            break;\n                        case 'Right':\n                            indentX = marginLeft + (cellInnerWidth - width);\n                            break;\n                        case 'None':\n                            indentX = marginLeft + horzPosition;\n                            break;\n                    }\n                }\n                break;\n            default:\n                {\n                    indentX = marginLeft + horzPosition;\n                }\n                break;\n        }\n        return indentX;\n    };\n    Layout.prototype.updateTableFloatPoints = function (table) {\n        if (table.wrapTextAround) {\n            var tableTotalWidth = table.getTableCellWidth();\n            var position = table.positioning;\n            var sectionFormat = table.bodyWidget.sectionFormat;\n            if (this.documentHelper.viewer instanceof _viewer__WEBPACK_IMPORTED_MODULE_7__.WebLayoutViewer) {\n                if (position.horizontalOrigin === 'Margin' || position.horizontalOrigin === 'Page' || position.horizontalOrigin === 'Column') {\n                    if (position.horizontalAlignment === 'Right' || position.horizontalAlignment === 'Outside') {\n                        this.viewer.clientActiveArea.x = this.viewer.clientArea.width - tableTotalWidth;\n                    }\n                    else {\n                        this.viewer.clientActiveArea.x = this.viewer.clientArea.x;\n                    }\n                }\n            }\n            else {\n                if (!(table.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextFrame) && !table.isInsideTable) {\n                    // Vertical position\n                    if (position.verticalOrigin === 'Page') {\n                        if (position.verticalAlignment === 'Top') {\n                            this.viewer.clientActiveArea.y = 0;\n                        }\n                        else if (position.verticalAlignment === 'Inside') {\n                            this.viewer.clientActiveArea.y = 0;\n                        }\n                        else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(position.verticalAlignment) || position.verticalAlignment === 'None') {\n                            this.viewer.clientActiveArea.y = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(position.verticalPosition);\n                        }\n                    }\n                    else if (position.verticalOrigin === 'Margin') {\n                        if (position.verticalAlignment === 'Top') {\n                            this.viewer.clientActiveArea.y = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.topMargin);\n                        }\n                        else if (position.verticalAlignment === 'Inside') {\n                            this.viewer.clientActiveArea.y = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.topMargin);\n                        }\n                        else if (Math.round(position.verticalPosition) != 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(sectionFormat.topMargin)) {\n                            this.viewer.clientActiveArea.y = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.topMargin + position.verticalPosition);\n                        }\n                        else {\n                            this.viewer.clientActiveArea.y = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(position.verticalPosition);\n                        }\n                    }\n                    else if (position.verticalOrigin === 'Paragraph') {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(position.verticalAlignment) || position.verticalAlignment === 'None') {\n                            this.viewer.clientActiveArea.y += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(position.verticalPosition);\n                        }\n                    }\n                    if (position.horizontalOrigin === 'Page') {\n                        if (position.horizontalAlignment === 'Left') {\n                            this.viewer.clientActiveArea.x = 0;\n                        }\n                        else if (position.horizontalAlignment === 'Inside') {\n                            // TODO\n                            this.viewer.clientActiveArea.x = 0;\n                        }\n                        else if (position.horizontalAlignment === 'Right') {\n                            this.viewer.clientActiveArea.x = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.pageWidth) - tableTotalWidth;\n                        }\n                        else if (position.horizontalAlignment === 'Outside') {\n                            // TODO\n                            this.viewer.clientActiveArea.x = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.pageWidth) - tableTotalWidth;\n                        }\n                        else if (position.horizontalAlignment === 'Center') {\n                            this.viewer.clientActiveArea.x = (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.pageWidth) - tableTotalWidth) / 2;\n                        }\n                    }\n                    else if (position.horizontalOrigin === 'Margin' || position.horizontalOrigin === 'Column') {\n                        if (position.horizontalAlignment === 'Left') {\n                            this.viewer.clientActiveArea.x = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.leftMargin);\n                            if (this.documentHelper.compatibilityMode !== 'Word2013' && !table.isInsideTable) {\n                                this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x -\n                                    _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n                            }\n                        }\n                        else if (position.horizontalAlignment === 'Inside') {\n                            // TODO\n                            this.viewer.clientActiveArea.x = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.leftMargin);\n                        }\n                        else if (position.horizontalAlignment === 'Right') {\n                            this.viewer.clientActiveArea.x = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.pageWidth)\n                                - (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.rightMargin) + tableTotalWidth);\n                        }\n                        else if (position.horizontalAlignment === 'Outside') {\n                            // TODO\n                            this.viewer.clientActiveArea.x = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.pageWidth)\n                                - (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.rightMargin) + tableTotalWidth);\n                        }\n                        else if (position.horizontalAlignment === 'Center') {\n                            this.viewer.clientActiveArea.x = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.leftMargin)\n                                + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(sectionFormat.pageWidth - sectionFormat.rightMargin - sectionFormat.leftMargin) - tableTotalWidth) / 2;\n                        }\n                    }\n                    if (Math.round(position.horizontalPosition) > 0 || (position.horizontalOrigin === 'Margin' && position.horizontalAlignment === 'Left')) {\n                        this.viewer.clientActiveArea.x += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(position.horizontalPosition);\n                    }\n                }\n                else if (table.isInsideTable) {\n                    var ownerCell = table.containerWidget;\n                    var cellFormat = ownerCell.cellFormat;\n                    if (position.verticalOrigin === 'Page') {\n                        this.viewer.clientActiveArea.y = ownerCell.y;\n                        this.viewer.clientActiveArea.y += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(position.verticalPosition);\n                    }\n                    else if (position.verticalOrigin === 'Margin') {\n                        this.viewer.clientActiveArea.y += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(position.verticalPosition);\n                        //Check whether the absolute table vertical position is top relative to the margin\n                        if (this.viewer.clientActiveArea.y < ownerCell.y || position.verticalAlignment === 'Top') {\n                            this.viewer.clientActiveArea.y = ownerCell.y;\n                        }\n                    }\n                    else {\n                        if (this.viewer.clientActiveArea.y + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(position.verticalPosition) < ownerCell.y) {\n                            this.viewer.clientActiveArea.y = ownerCell.y;\n                        }\n                        else {\n                            this.viewer.clientActiveArea.y += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(position.verticalPosition);\n                        }\n                    }\n                    if (position.horizontalOrigin === 'Page') {\n                        if (position.horizontalAlignment === 'Left' || position.horizontalAlignment === 'Inside') {\n                            this.viewer.clientActiveArea.x = ownerCell.x;\n                        }\n                        else if (position.horizontalAlignment === 'Right' || position.horizontalAlignment === 'Outside') {\n                            this.viewer.clientActiveArea.x = ((ownerCell.x + cellFormat.preferredWidth) - tableTotalWidth);\n                        }\n                    }\n                    else if (position.horizontalOrigin === 'Margin' || position.horizontalOrigin === 'Column') {\n                        if (position.horizontalAlignment === 'Left' || position.horizontalAlignment === 'Inside') {\n                            this.viewer.clientActiveArea.x = (ownerCell.x + ownerCell.leftMargin);\n                        }\n                        else if (position.horizontalAlignment === 'Right' || position.horizontalAlignment === 'Outside') {\n                            this.viewer.clientActiveArea.x = ((ownerCell.x + cellFormat.preferredWidth)\n                                - (tableTotalWidth + ownerCell.rightMargin));\n                        }\n                    }\n                    if (Math.round(position.horizontalPosition) > 0) {\n                        this.viewer.clientActiveArea.x = ownerCell.x;\n                        if (position.horizontalOrigin === 'Margin') {\n                            this.viewer.clientActiveArea.x += ownerCell.leftMargin;\n                        }\n                        this.viewer.clientActiveArea.x += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(position.horizontalPosition);\n                    }\n                    if (position.horizontalAlignment === 'Center') {\n                        this.viewer.clientActiveArea.x = (cellFormat.preferredWidth / 2) - (tableTotalWidth / 2);\n                    }\n                }\n            }\n        }\n        table.x = this.viewer.clientActiveArea.x;\n        table.y = this.viewer.clientActiveArea.y;\n    };\n    Layout.prototype.isTocField = function (element) {\n        if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox) {\n            var nextElement = element.nextNode;\n            if (element instanceof _page__WEBPACK_IMPORTED_MODULE_6__.FieldElementBox && element.fieldType === 0 && nextElement instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TextElementBox\n                && nextElement.text.trim().toLowerCase().indexOf('toc') !== -1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    Layout.prototype.getTotalColumnSpan = function (row) {\n        var tableRow = row;\n        var totalColumnSpan = 0;\n        for (var i = 0; i < tableRow.childWidgets.length; i++) {\n            totalColumnSpan += tableRow.childWidgets[i].cellFormat.columnSpan;\n        }\n        return totalColumnSpan;\n    };\n    Layout.prototype.getMaximumRightCellBorderWidth = function (table) {\n        var highestBorderSize = 0;\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            var cell = row.childWidgets[row.childWidgets.length - 1];\n            var cellBorder = cell.cellFormat.borders.right.lineWidth;\n            if (highestBorderSize < cellBorder) {\n                highestBorderSize = cellBorder;\n            }\n        }\n        return highestBorderSize;\n    };\n    Layout.prototype.getDefaultBorderSpacingValue = function (border, isBorderValueZero, tableHorizontalPosition) {\n        if (border == 0) {\n            if (this.documentHelper.compatibilityMode != 'Word2013' && tableHorizontalPosition == 'Center') {\n                border = 1.5;\n            }\n            else {\n                border = 0.75;\n            }\n            return true;\n        }\n        return isBorderValueZero;\n    };\n    Layout.prototype.getMinimumWidthRequiredForTable = function (isBorderValueZero, tableHorizontalPosition, border) {\n        var minimumWidthRequired = 0;\n        //To fit the item right side of the Table Microsoft Word 2013 application and other version has different value based on border of the table and alignment of the table.\n        if (this.documentHelper.compatibilityMode == 'Word2013') {\n            if (tableHorizontalPosition == 'Center') {\n                if (isBorderValueZero) {\n                    minimumWidthRequired = 18.5 + Math.round(0.75 / 2);\n                }\n                else {\n                    minimumWidthRequired = 18.5 + Math.round(border / 2);\n                }\n            }\n            else {\n                if (isBorderValueZero) {\n                    minimumWidthRequired = 18.5 + 0.75;\n                }\n                else {\n                    minimumWidthRequired = 18.5 + border;\n                }\n            }\n        }\n        else {\n            if (tableHorizontalPosition == 'Center') {\n                if (isBorderValueZero) {\n                    minimumWidthRequired = 19.25;\n                }\n                else {\n                    minimumWidthRequired = 18.5 + (border / 2);\n                }\n            }\n            else {\n                if (border == 0.25) {\n                    minimumWidthRequired = 18.5;\n                }\n                else {\n                    minimumWidthRequired = 19.3;\n                }\n            }\n        }\n        return _editor_editor_helper__WEBPACK_IMPORTED_MODULE_3__.HelperMethods.convertPointToPixel(minimumWidthRequired);\n    };\n    Layout.prototype.shiftFloatingItemsFromTable = function (table, bodyWidget) {\n        if (table.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.BodyWidget) {\n            for (var i = 0; i < table.containerWidget.floatingElements.length; i++) {\n                var shape = table.containerWidget.floatingElements[i];\n                if (!(shape instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableWidget) && shape.paragraph.containerWidget instanceof _page__WEBPACK_IMPORTED_MODULE_6__.TableCellWidget\n                    && shape.paragraph.containerWidget.ownerTable.containerWidget.ownerTable == table) {\n                    bodyWidget.floatingElements.push(table.containerWidget.floatingElements[i]);\n                    table.containerWidget.floatingElements.splice(table.containerWidget.floatingElements.indexOf(table.containerWidget.floatingElements[i]), 1);\n                    this.shiftedFloatingItemsFromTable.push(shape);\n                    i--;\n                }\n            }\n        }\n    };\n    return Layout;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/viewer/layout.js?");

/***/ })

}]);