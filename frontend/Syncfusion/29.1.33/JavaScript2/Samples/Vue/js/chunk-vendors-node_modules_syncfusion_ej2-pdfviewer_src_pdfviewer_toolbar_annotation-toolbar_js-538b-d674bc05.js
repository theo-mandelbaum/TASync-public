"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-pdfviewer_src_pdfviewer_toolbar_annotation-toolbar_js-538b-d674bc05"],{

/***/ "./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/toolbar/annotation-toolbar.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/toolbar/annotation-toolbar.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnnotationToolbar: () => (/* binding */ AnnotationToolbar)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\");\n/* harmony import */ var _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-splitbuttons */ \"./node_modules/@syncfusion/ej2-splitbuttons/index.js\");\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\");\n/* harmony import */ var _drawing_drawing_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../drawing/drawing-util */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/drawing-util.js\");\n/* harmony import */ var _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"./node_modules/@syncfusion/ej2-data/index.js\");\n/* harmony import */ var _base_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../base/types */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/base/types.js\");\n\n\n\n\n\n\n\n\n/* eslint-disable valid-jsdoc */\n/**\n * @param {string} args - args\n * @param {any} buttonElement - button element\n * @param {any} colorElement - color element\n * @returns {void}\n * @hidden\n */\nvar AnnotationToolbar = /** @class */ (function () {\n    function AnnotationToolbar(viewer, viewerBase, toolbar) {\n        var _this = this;\n        this.toolbarBorderHeight = 1;\n        /**\n         * @private\n         */\n        this.isToolbarHidden = false;\n        /**\n         * @private\n         */\n        this.isMobileAnnotEnabled = false;\n        this.isHighlightEnabled = false;\n        this.isMobileHighlightEnabled = false;\n        this.isUnderlineEnabled = false;\n        this.isMobileUnderlineEnabled = false;\n        this.isStrikethroughEnabled = false;\n        this.isMobileStrikethroughEnabled = false;\n        this.isHighlightBtnVisible = true;\n        this.isCommentBtnVisible = true;\n        this.isUnderlineBtnVisible = true;\n        this.isStrikethroughBtnVisible = true;\n        this.isColorToolVisible = true;\n        this.isOpacityToolVisible = true;\n        this.isDeleteAnnotationToolVisible = true;\n        this.isCurrentAnnotationOpacitySet = false;\n        this.isStampBtnVisible = false;\n        this.isShapeBtnVisible = false;\n        this.isSignatureBtnVisible = false;\n        this.isInkBtnVisible = false;\n        this.isFontFamilyToolVisible = false;\n        this.isFontSizeToolVisible = false;\n        this.isFontAlignToolVisible = false;\n        this.isFontColorToolVisible = false;\n        this.isFontStylesToolVisible = false;\n        this.isCommentPanelBtnVisible = false;\n        this.isFreeTextBtnVisible = false;\n        this.isCalibrateBtnVisible = false;\n        this.isStrokeColorToolVisible = false;\n        this.isThicknessToolVisible = false;\n        this.stampMenu = [];\n        this.stampParentID = '';\n        /**\n         * @private\n         */\n        this.inkAnnotationSelected = false;\n        /**\n         * @private\n         */\n        this.openSignaturePopup = false;\n        this.isSavedSignatureClicked = false;\n        this.saveSignatureCount = 0;\n        this.saveInitialCount = 0;\n        /**\n         * @private\n         */\n        this.isToolbarCreated = false;\n        this.addStampImage = function (args) {\n            // eslint-disable-next-line\n            var proxy = _this;\n            var upoadedFiles = args.target.files;\n            if (args.target.files[0] !== null) {\n                var uploadedFile = upoadedFiles[0];\n                _this.pdfViewer.annotationModule.stampAnnotationModule.customStampName = uploadedFile.name.split('.')[0];\n                if (uploadedFile.type.split('/')[0] === 'image') {\n                    var reader = new FileReader();\n                    reader.onload = function (e) {\n                        var uploadedFileUrl = e.currentTarget.result;\n                        proxy.pdfViewer.annotation.stampAnnotationModule.isStampAddMode = true;\n                        proxy.pdfViewer.annotationModule.stampAnnotationModule.isStampAnnotSelected = true;\n                        proxy.pdfViewerBase.stampAdded = true;\n                        _this.pdfViewer.annotationModule.stampAnnotationModule.createCustomStampAnnotation(uploadedFileUrl);\n                        proxy.pdfViewerBase.stampAdded = false;\n                    };\n                    reader.readAsDataURL(uploadedFile);\n                }\n            }\n            args.target.value = '';\n            args.currentTarget.value = '';\n        };\n        this.popupPosition = function (colorElement, buttonElement) {\n            if (colorElement && colorElement.element) {\n                var buttonBounds = buttonElement.getBoundingClientRect();\n                var elements = colorElement.element.getElementsByClassName('e-container e-color-palette')[0].getElementsByClassName('e-palette')[0].getBoundingClientRect();\n                var mainContainerBounds = this.pdfViewerBase.mainContainer.getBoundingClientRect();\n                if (elements.left + elements.width > mainContainerBounds.width) {\n                    colorElement.element.parentElement.style.left = (elements.left - elements.width) + buttonBounds.width + 'px';\n                }\n                if (((elements.left - elements.width) + buttonBounds.width) < 0) {\n                    colorElement.element.parentElement.style.left = mainContainerBounds.left + buttonBounds.width + 'px';\n                }\n            }\n        };\n        this.onShapeToolbarClicked = function (args) {\n            var elementId = _this.pdfViewer.element.id;\n            var shapeAnnotationModule = _this.pdfViewer.annotation.shapeAnnotationModule;\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || !_this.pdfViewer.enableDesktopMode) {\n                if (_this.pdfViewerBase.action === 'Polygon') {\n                    _this.pdfViewerBase.tool.mouseUp(args, true, true);\n                }\n            }\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                _this.deselectAllItems();\n                _this.resetFreeTextAnnot();\n            }\n            else {\n                var element = args.originalEvent.target;\n                _this.pdfViewer.toolbarModule.selectItem(element.parentElement);\n                _this.deselectAllItemsForMobile();\n            }\n            switch (args.originalEvent.target.id) {\n                case elementId + '_shape_line':\n                case elementId + '_shape_lineIcon':\n                    shapeAnnotationModule.setAnnotationType('Line');\n                    _this.onShapeDrawSelection(true);\n                    _this.updateColorInIcon(_this.colorDropDownElement, shapeAnnotationModule.lineFillColor);\n                    _this.updateColorInIcon(_this.strokeDropDownElement, shapeAnnotationModule.lineStrokeColor);\n                    _this.handleShapeTool(elementId + '_shape_line');\n                    break;\n                case elementId + '_shape_arrow':\n                case elementId + '_shape_arrowIcon':\n                    shapeAnnotationModule.setAnnotationType('Arrow');\n                    _this.onShapeDrawSelection(true);\n                    _this.updateColorInIcon(_this.colorDropDownElement, shapeAnnotationModule.arrowFillColor);\n                    _this.updateColorInIcon(_this.strokeDropDownElement, shapeAnnotationModule.arrowStrokeColor);\n                    _this.handleShapeTool(elementId + '_shape_arrow');\n                    break;\n                case elementId + '_shape_rectangle':\n                case elementId + '_shape_rectangleIcon':\n                    shapeAnnotationModule.setAnnotationType('Rectangle');\n                    _this.onShapeDrawSelection(true);\n                    _this.updateColorInIcon(_this.colorDropDownElement, shapeAnnotationModule.rectangleFillColor);\n                    _this.updateColorInIcon(_this.strokeDropDownElement, shapeAnnotationModule.rectangleStrokeColor);\n                    _this.handleShapeTool(elementId + '_shape_rectangle');\n                    break;\n                case elementId + '_shape_circle':\n                case elementId + '_shape_circleIcon':\n                    shapeAnnotationModule.setAnnotationType('Circle');\n                    _this.onShapeDrawSelection(true);\n                    _this.updateColorInIcon(_this.colorDropDownElement, shapeAnnotationModule.circleFillColor);\n                    _this.updateColorInIcon(_this.strokeDropDownElement, shapeAnnotationModule.circleStrokeColor);\n                    _this.handleShapeTool(elementId + '_shape_circle');\n                    break;\n                case elementId + '_shape_pentagon':\n                case elementId + '_shape_pentagonIcon':\n                    shapeAnnotationModule.setAnnotationType('Polygon');\n                    _this.onShapeDrawSelection(true);\n                    _this.updateColorInIcon(_this.colorDropDownElement, shapeAnnotationModule.polygonFillColor);\n                    _this.updateColorInIcon(_this.strokeDropDownElement, shapeAnnotationModule.polygonStrokeColor);\n                    _this.handleShapeTool(elementId + '_shape_pentagon');\n                    break;\n            }\n            // this.pdfViewer.clearSelection();\n        };\n        this.pdfViewer = viewer;\n        this.pdfViewerBase = viewerBase;\n        this.primaryToolbar = toolbar;\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.initializeAnnotationToolbar = function () {\n        var _this = this;\n        this.toolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: this.pdfViewer.element.id + '_annotation_toolbar', className: 'e-pv-annotation-toolbar' });\n        this.pdfViewerBase.viewerMainContainer.appendChild(this.toolbarElement);\n        this.toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({\n            width: '', height: '', overflowMode: 'Popup', cssClass: 'e-pv-toolbar-scroll',\n            items: this.createToolbarItems(), clicked: this.onToolbarClicked.bind(this),\n            created: function () {\n                _this.createDropDowns();\n            }\n        });\n        this.toolbar.isStringTemplate = true;\n        if (this.pdfViewer.enableRtl) {\n            this.toolbar.enableRtl = true;\n        }\n        this.toolbar.appendTo(this.toolbarElement);\n        this.afterToolbarCreation();\n        this.createStampContainer();\n        this.createSignContainer();\n        this.applyAnnotationToolbarSettings();\n        this.updateToolbarItems();\n        this.showAnnotationToolbar(null, true);\n        this.toolbarElement.setAttribute('aria-label', 'Annotation Toolbar');\n    };\n    AnnotationToolbar.prototype.createMobileAnnotationToolbar = function (isEnable, isPath) {\n        var _this = this;\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !this.pdfViewer.enableDesktopMode) {\n            if (this.toolbarElement == null && isEnable) {\n                this.isMobileAnnotEnabled = true;\n                this.toolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: this.pdfViewer.element.id + '_annotation_toolbar', className: 'e-pv-annotation-toolbar' });\n                this.pdfViewerBase.viewerMainContainer.insertBefore(this.toolbarElement, this.pdfViewerBase.viewerContainer);\n                this.toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({\n                    width: '', height: '', overflowMode: 'Popup',\n                    items: this.createMobileToolbarItems(isPath), clicked: this.onToolbarClicked.bind(this),\n                    created: function () {\n                        _this.createDropDowns(isPath);\n                    }\n                });\n                this.toolbar.isStringTemplate = true;\n                if (this.pdfViewer.enableRtl) {\n                    this.toolbar.enableRtl = true;\n                }\n                this.pdfViewerBase.navigationPane.goBackToToolbar();\n                this.pdfViewer.toolbarModule.showToolbar(false);\n                this.toolbar.appendTo(this.toolbarElement);\n                this.deleteItem = this.pdfViewerBase.getElement('_annotation_delete');\n                this.deleteItem.firstElementChild.id = this.pdfViewer.element.id + '_annotation_delete';\n            }\n            else if (this.toolbarElement != null) {\n                if (isEnable) {\n                    this.isMobileAnnotEnabled = true;\n                    this.pdfViewerBase.navigationPane.goBackToToolbar();\n                    this.pdfViewer.toolbarModule.showToolbar(false);\n                    this.toolbarElement.style.display = 'block';\n                }\n                else if (!isEnable) {\n                    this.isMobileAnnotEnabled = false;\n                    this.pdfViewer.toolbarModule.showToolbar(true);\n                    this.hideMobileAnnotationToolbar();\n                }\n            }\n        }\n        else {\n            this.isMobileAnnotEnabled = true;\n        }\n    };\n    AnnotationToolbar.prototype.hideMobileAnnotationToolbar = function () {\n        if (this.toolbarElement != null) {\n            if (this.pdfViewer.selectedItems.annotations.length > 0 ||\n                (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.annotationModule.textMarkupAnnotationModule) &&\n                    this.pdfViewer.annotationModule.textMarkupAnnotationModule.currentTextMarkupAnnotation)) {\n                if (this.propertyToolbar && this.propertyToolbar.element.children.length > 0) {\n                    this.propertyToolbar.element.style.display = 'block';\n                    this.toolbarCreated = true;\n                }\n            }\n            else {\n                if (this.toolbar.element.children.length > 0) {\n                    this.toolbarCreated = true;\n                }\n                else {\n                    this.toolbarCreated = false;\n                }\n                if (this.propertyToolbar && this.propertyToolbar.element.style.display !== 'none') {\n                    this.propertyToolbar.element.style.display = 'none';\n                    if (!this.toolbarCreated) {\n                        var editIcon = document.getElementById(this.pdfViewer.element.id + '_annotationIcon');\n                        if (editIcon && editIcon.parentElement.classList.contains('e-pv-select')) {\n                            this.createAnnotationToolbarForMobile();\n                        }\n                    }\n                }\n            }\n            if (this.toolbarElement.children.length > 0) {\n                this.toolbarElement.style.display = 'block';\n            }\n            this.adjustMobileViewer();\n        }\n        else if (this.toolbarCreated && this.propertyToolbar && this.propertyToolbar.element.children.length > 0) {\n            this.propertyToolbar.element.style.display = 'none';\n            this.adjustMobileViewer();\n            this.toolbarCreated = false;\n        }\n    };\n    AnnotationToolbar.prototype.FreeTextForMobile = function () {\n        var _this = this;\n        this.hideExistingTool();\n        this.freetextToolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: this.pdfViewer.element.id + '_freeTextToolbar', className: 'e-pv-mobile-annotation-toolbar', styles: 'bottom: 0px; position: absolute; width: 100%; float: left' });\n        this.pdfViewerBase.viewerMainContainer.appendChild(this.freetextToolbarElement);\n        var colorTemplate = this.pdfViewer.toolbarModule.annotationToolbarModule.getTemplate('span', '_annotation_color', 'e-pv-annotation-color-container');\n        var strokeTemplate = this.pdfViewer.toolbarModule.annotationToolbarModule.getTemplate('span', '_annotation_stroke', 'e-pv-annotation-stroke-container');\n        var thicknessTemplate = this.getTemplate('span', '_annotation_thickness', 'e-pv-annotation-thickness-container');\n        var opacityTemplate = this.getTemplate('span', '_annotation_opacity', 'e-pv-annotation-opacity-container');\n        var fontFamilyTemplate = this.getTemplate('input', '_annotation_fontname', 'e-pv-annotation-fontname-container');\n        var fontSizeTemplate = this.getTemplate('input', '_annotation_fontsize', 'e-pv-annotation-fontsize-container');\n        var textColorTemplate = this.getTemplate('span', '_annotation_textcolor', 'e-pv-annotation-textcolor-container');\n        var alignmentTemplate = this.getTemplate('span', '_annotation_textalign', 'e-pv-annotation-textalign-container');\n        var textPropertiesTemplate = this.getTemplate('span', '_annotation_textproperties', 'e-pv-annotation-textprop-container');\n        var items = [\n            { prefixIcon: 'e-pv-backward-icon e-pv-icon', tooltipText: this.pdfViewer.localeObj.getConstant('Go Back'), id: this.pdfViewer.element.id + '_backward', click: this.goBackToToolbar.bind(this) },\n            { type: 'Separator', align: 'Left', cssClass: 'e-pv-hightlight-separator-container' },\n            { template: fontFamilyTemplate },\n            { template: fontSizeTemplate },\n            { template: textColorTemplate },\n            { template: alignmentTemplate },\n            { template: textPropertiesTemplate },\n            { template: colorTemplate },\n            { template: strokeTemplate },\n            { template: thicknessTemplate },\n            { template: opacityTemplate }\n        ];\n        this.toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({\n            items: items, width: '', height: '', overflowMode: 'Scrollable', created: function () {\n                _this.pdfViewer.toolbarModule.annotationToolbarModule.mobileColorpicker(_this.pdfViewer.element.id + '_annotation_freeTextEdit');\n            }\n        });\n        this.toolbar.appendTo(this.freetextToolbarElement);\n        this.showFreeTextPropertiesTool();\n    };\n    /**\n     * @param {string} shapeType - It describes about the shape type\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.createPropertyTools = function (shapeType) {\n        var _this = this;\n        if (shapeType !== '') {\n            if (this.propertyToolbar) {\n                this.propertyToolbar.destroy();\n            }\n            if (this.toolbar) {\n                this.toolbar.destroy();\n            }\n            var shapeToolbarElement = void 0;\n            shapeToolbarElement = document.getElementById(this.pdfViewer.element.id + '_propertyToolbar');\n            if (shapeToolbarElement) {\n                shapeToolbarElement.parentElement.removeChild(shapeToolbarElement);\n            }\n            shapeToolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: this.pdfViewer.element.id + '_propertyToolbar', className: 'e-pv-mobile-annotation-toolbar', styles: 'bottom: 0px; position: absolute; width: 100%; float: left' });\n            this.pdfViewerBase.viewerMainContainer.appendChild(shapeToolbarElement);\n            var id_1;\n            var propertyToolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({\n                items: this.createPropertyToolbarForMobile(shapeType), width: '', height: '', overflowMode: 'Scrollable',\n                created: function () {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.pdfViewer.annotationModule.textMarkupAnnotationModule) &&\n                        _this.pdfViewer.annotationModule.textMarkupAnnotationModule.currentTextMarkupAnnotation) {\n                        id_1 = _this.pdfViewer.element.id + '_underlineIcon';\n                    }\n                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.pdfViewer.selectedItems.annotations[0])) {\n                        if (_this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'FreeText') {\n                            id_1 = _this.pdfViewer.element.id + '_annotation_freeTextEdit';\n                        }\n                        else if (_this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Stamp' || _this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'StickyNotes' || _this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Image') {\n                            id_1 = _this.pdfViewer.element.id + '_annotation_stamp';\n                        }\n                        else if (_this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'HandWrittenSignature' || _this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'SignatureText') {\n                            id_1 = _this.pdfViewer.element.id + '_annotation_handwrittenSign';\n                        }\n                        else if (_this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'SignatureImage') {\n                            id_1 = _this.pdfViewer.element.id + '_annotation_handwrittenImage';\n                        }\n                        else if (_this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Ink' || _this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Path') {\n                            id_1 = _this.pdfViewer.element.id + '_annotation_inkIcon';\n                        }\n                        else if (shapeType === 'Highlight' || shapeType === 'Underline' || shapeType === 'Strikethrough') {\n                            id_1 = _this.pdfViewer.element.id + '_highlightIcon';\n                        }\n                        else {\n                            id_1 = _this.pdfViewer.element.id + '_annotation_shapesIcon';\n                        }\n                    }\n                    else if (shapeType === 'Highlight' || shapeType === 'Underline' || shapeType === 'Strikethrough') {\n                        id_1 = _this.pdfViewer.element.id + '_highlightIcon';\n                    }\n                    else {\n                        id_1 = _this.pdfViewer.element.id + '_annotation_shapesIcon';\n                    }\n                    _this.pdfViewer.toolbarModule.annotationToolbarModule.mobileColorpicker(id_1);\n                }\n            });\n            propertyToolbar.isStringTemplate = true;\n            propertyToolbar.appendTo(shapeToolbarElement);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.annotationModule.textMarkupAnnotationModule) &&\n                !this.pdfViewer.annotationModule.textMarkupAnnotationModule.currentTextMarkupAnnotation) {\n                if (this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Line') {\n                    this.enableItems(this.colorDropDownElement.parentElement, false);\n                }\n                if (this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'HandWrittenSignature') {\n                    var commentIcon = document.getElementById(this.pdfViewer.element.id + '_annotation_commentPanel');\n                    this.enableItems(commentIcon.parentElement, false);\n                }\n            }\n            this.showPropertyTool(propertyToolbar, id_1);\n        }\n    };\n    AnnotationToolbar.prototype.showPropertyTool = function (existingTool, id) {\n        if (this.toolbar) {\n            this.toolbar.destroy();\n        }\n        this.propertyToolbar = existingTool;\n        this.applyProperiesToolSettings(id);\n        //this.propertyToolbar.element.style.display = 'block';\n        if (this.pdfViewer.selectedItems.annotations[0]) {\n            var selectedAnnotation = this.pdfViewer.selectedItems.annotations[0];\n            if (selectedAnnotation.shapeAnnotationType !== 'SignatureText' && selectedAnnotation.shapeAnnotationType !== 'HandWrittenSignature' && selectedAnnotation.shapeAnnotationType !== 'Stamp' && selectedAnnotation.shapeAnnotationType !== 'Image' && selectedAnnotation.shapeAnnotationType !== 'Ink' && selectedAnnotation.shapeAnnotationType !== 'Path' && selectedAnnotation.shapeAnnotationType !== 'StickyNotes') {\n                this.updateColorInIcon(this.colorDropDownElement, this.pdfViewer.selectedItems.annotations[0].fillColor);\n                this.updateColorInIcon(this.strokeDropDownElement, this.pdfViewer.selectedItems.annotations[0].strokeColor);\n                if (this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'FreeText') {\n                    var fontFamily = this.fontFamilyElement;\n                    fontFamily.ej2_instances[0].value = this.pdfViewer.selectedItems.annotations[0].fontFamily;\n                    var fontColor = this.fontColorElement;\n                    fontColor.children[0].style.borderBottomColor = this.pdfViewer.selectedItems.annotations[0].fontColor;\n                    this.pdfViewer.annotation.modifyTextAlignment(this.pdfViewer.selectedItems.annotations[0].textAlign);\n                    this.updateTextAlignInIcon(this.pdfViewer.selectedItems.annotations[0].textAlign);\n                }\n            }\n            else {\n                if (this.strokeDropDownElement) {\n                    this.updateColorInIcon(this.strokeDropDownElement, this.pdfViewer.selectedItems.annotations[0].strokeColor);\n                }\n            }\n        }\n        this.toolbarCreated = true;\n        this.adjustMobileViewer();\n    };\n    AnnotationToolbar.prototype.stampToolMobileForMobile = function (args) {\n        var _this = this;\n        this.hideExistingTool();\n        if (this.stampToolbarElement) {\n            this.stampToolbarElement.parentElement.removeChild(this.stampToolbarElement);\n        }\n        this.stampToolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: this.pdfViewer.element.id + '_stampToolbar', className: 'e-pv-mobile-annotation-toolbar', styles: 'bottom: 0px; position: absolute; width: 100%; float: left' });\n        this.pdfViewerBase.viewerMainContainer.appendChild(this.stampToolbarElement);\n        this.toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({\n            items: this.createStampToolbarItemsForMobile(), width: '', height: '', overflowMode: 'Scrollable', clicked: this.onShapeToolbarClicked.bind(this),\n            created: function () {\n                _this.pdfViewer.toolbarModule.annotationToolbarModule.mobileColorpicker(args);\n            }\n        });\n        this.toolbar.isStringTemplate = true;\n        this.toolbar.appendTo(this.stampToolbarElement);\n        this.showStampPropertiesTool();\n        //this.afterShapeToolbarCreationForMobile();\n    };\n    AnnotationToolbar.prototype.shapeToolMobile = function (args) {\n        var _this = this;\n        this.hideExistingTool();\n        if (this.shapeToolbarElement) {\n            this.shapeToolbarElement.parentElement.removeChild(this.shapeToolbarElement);\n        }\n        this.shapeToolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: this.pdfViewer.element.id + '_shapeToolbar', className: 'e-pv-mobile-annotation-toolbar', styles: 'bottom: 0px; position: absolute; width: 100%; float: left' });\n        this.pdfViewerBase.viewerMainContainer.appendChild(this.shapeToolbarElement);\n        this.toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({\n            items: this.createShapeToolbarItemsForMobile(), width: '', height: '', overflowMode: 'Scrollable', clicked: this.onShapeToolbarClicked.bind(this),\n            created: function () {\n                _this.pdfViewer.toolbarModule.annotationToolbarModule.mobileColorpicker(args.originalEvent.target.id);\n            }\n        });\n        this.toolbar.isStringTemplate = true;\n        this.toolbar.appendTo(this.shapeToolbarElement);\n        this.afterShapeToolbarCreationForMobile();\n        this.showShapeTool();\n    };\n    AnnotationToolbar.prototype.calibrateToolMobile = function (args) {\n        var _this = this;\n        this.hideExistingTool();\n        if (this.calibrateToolbarElement) {\n            this.calibrateToolbarElement.parentElement.removeChild(this.calibrateToolbarElement);\n        }\n        this.calibrateToolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: this.pdfViewer.element.id + '_calibrateToolbar', className: 'e-pv-mobile-annotation-toolbar', styles: 'bottom: 0px; position: absolute; width: 100%; float: left' });\n        this.pdfViewerBase.viewerMainContainer.appendChild(this.calibrateToolbarElement);\n        this.toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({\n            items: this.createCalibrateToolbarItemsForMobile(), width: '', height: '', overflowMode: 'Scrollable', clicked: this.onCalibrateToolbarClicked.bind(this),\n            created: function () {\n                _this.pdfViewer.toolbarModule.annotationToolbarModule.mobileColorpicker(args.originalEvent.target.id);\n            }\n        });\n        this.toolbar.isStringTemplate = true;\n        this.toolbar.appendTo(this.calibrateToolbarElement);\n        this.afterCalibrateToolbarCreationForMobile();\n        this.showShapeTool();\n    };\n    AnnotationToolbar.prototype.textMarkupForMobile = function (args) {\n        var _this = this;\n        this.hideExistingTool();\n        if (this.textMarkupToolbarElement) {\n            this.textMarkupToolbarElement.parentElement.removeChild(this.textMarkupToolbarElement);\n        }\n        this.textMarkupToolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: this.pdfViewer.element.id + '_mobileAnnotationToolbar', className: 'e-pv-mobile-annotation-toolbar', styles: 'bottom: 0px; position: absolute; width: 100%; float: left' });\n        this.pdfViewerBase.viewerMainContainer.appendChild(this.textMarkupToolbarElement);\n        var colorTemplate = this.pdfViewer.toolbarModule.annotationToolbarModule.getTemplate('span', '_annotation_color', 'e-pv-annotation-color-container');\n        var opacityTemplate = this.getTemplate('span', '_annotation_opacity', 'e-pv-annotation-opacity-container');\n        var items = [\n            { prefixIcon: 'e-pv-backward-icon e-pv-icon', tooltipText: this.pdfViewer.localeObj.getConstant('Go Back'), id: this.pdfViewer.element.id + '_backward', click: this.goBackToToolbar.bind(this) },\n            { type: 'Separator', align: 'Left', cssClass: 'e-pv-hightlight-separator-container' },\n            { template: colorTemplate, align: 'left' },\n            { template: opacityTemplate, align: 'left' }\n        ];\n        this.propertyToolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({\n            items: items, width: '', height: '', overflowMode: 'Scrollable',\n            created: function () {\n                _this.pdfViewer.toolbarModule.annotationToolbarModule.mobileColorpicker(args.originalEvent.target.id);\n            }\n        });\n        this.propertyToolbar.isStringTemplate = true;\n        this.propertyToolbar.appendTo(this.textMarkupToolbarElement);\n        this.showTextMarkupPropertiesTool();\n    };\n    AnnotationToolbar.prototype.showShapeTool = function () {\n        var annotationToolbarItems = this.pdfViewer.toolbarSettings.annotationToolbarItems;\n        if (annotationToolbarItems) {\n            if (annotationToolbarItems.indexOf('ColorEditTool') !== -1) {\n                this.showColorEditTool(true, 7, 7);\n            }\n            else {\n                this.showColorEditTool(false, 7, 7);\n            }\n            if (annotationToolbarItems.indexOf('StrokeColorEditTool') !== -1) {\n                this.showStrokeColorEditTool(true, 8, 8);\n            }\n            else {\n                this.showStrokeColorEditTool(false, 8, 8);\n            }\n            if (annotationToolbarItems.indexOf('ThicknessEditTool') !== -1) {\n                this.showThicknessEditTool(true, 9, 9);\n            }\n            else {\n                this.showThicknessEditTool(false, 9, 9);\n            }\n            if (annotationToolbarItems.indexOf('OpacityEditTool') !== -1) {\n                this.showOpacityEditTool(true, 10, 10);\n            }\n            else {\n                this.showOpacityEditTool(false, 10, 10);\n            }\n        }\n    };\n    AnnotationToolbar.prototype.signatureInkForMobile = function () {\n        var _this = this;\n        this.hideExistingTool();\n        if (this.signatureInkToolbarElement) {\n            this.signatureInkToolbarElement.parentElement.removeChild(this.signatureInkToolbarElement);\n        }\n        this.signatureInkToolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: this.pdfViewer.element.id + '_mobileAnnotationToolbar', className: 'e-pv-mobile-annotation-toolbar', styles: 'bottom: 0px; position: absolute; width: 100%; float: left' });\n        this.pdfViewerBase.viewerMainContainer.appendChild(this.signatureInkToolbarElement);\n        var opacityTemplate = this.getTemplate('span', '_annotation_opacity', 'e-pv-annotation-opacity-container');\n        var strokeTemplate = this.pdfViewer.toolbarModule.annotationToolbarModule.getTemplate('span', '_annotation_stroke', 'e-pv-annotation-stroke-container');\n        var thicknessTemplate = this.getTemplate('span', '_annotation_thickness', 'e-pv-annotation-thickness-container');\n        var items = [\n            { prefixIcon: 'e-pv-backward-icon e-pv-icon', tooltipText: this.pdfViewer.localeObj.getConstant('Go Back'), id: this.pdfViewer.element.id + '_backward', click: this.goBackToToolbar.bind(this) },\n            { template: opacityTemplate, align: 'left' },\n            { template: strokeTemplate, aign: 'left' },\n            { template: thicknessTemplate, align: 'left' }\n        ];\n        this.toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({\n            items: items, width: '', height: '', overflowMode: 'Scrollable',\n            created: function () {\n                _this.pdfViewer.toolbarModule.annotationToolbarModule.mobileColorpicker(_this.pdfViewer.element.id + '_annotation_inkIcon');\n            }\n        });\n        this.toolbar.isStringTemplate = true;\n        this.toolbar.appendTo(this.signatureInkToolbarElement);\n    };\n    AnnotationToolbar.prototype.hideExistingTool = function () {\n        if (this.toolbar && !this.pdfViewer.enableDesktopMode) {\n            this.toolbar.destroy();\n        }\n        if (this.propertyToolbar && !this.pdfViewer.enableDesktopMode) {\n            this.propertyToolbar.destroy();\n        }\n        var mobileAnnotationToolbar = document.getElementById(this.pdfViewer.element.id + '_mobileAnnotationToolbar');\n        if (mobileAnnotationToolbar) {\n            mobileAnnotationToolbar.style.display = 'none';\n        }\n    };\n    AnnotationToolbar.prototype.applyProperiesToolSettings = function (type) {\n        switch (type) {\n            case this.pdfViewer.element.id + '_underlineIcon':\n            case this.pdfViewer.element.id + '_highlightIcon':\n                this.showTextMarkupPropertiesTool();\n                break;\n            case this.pdfViewer.element.id + '_annotation_freeTextEdit':\n                this.showFreeTextPropertiesTool();\n                break;\n            case this.pdfViewer.element.id + '_annotation_shapesIcon':\n                this.shapePropertiesTool();\n                break;\n            case 'stampTool':\n            case this.pdfViewer.element.id + '_annotation_stamp':\n                this.showStampPropertiesTool();\n                break;\n            case this.pdfViewer.element.id + '_annotation_handwrittenSign':\n            case this.pdfViewer.element.id + '_annotation_inkIcon':\n                this.showInkPropertiesTool();\n                break;\n            case this.pdfViewer.element.id + '_annotation_handwrittenImage':\n                this.showImagePropertyTool();\n                break;\n        }\n    };\n    AnnotationToolbar.prototype.showImagePropertyTool = function () {\n        var annotationToolbarItems = this.pdfViewer.toolbarSettings.annotationToolbarItems;\n        if (annotationToolbarItems) {\n            if (annotationToolbarItems.indexOf('OpacityEditTool') !== -1) {\n                this.showOpacityEditTool(true, 0, 0);\n            }\n            else {\n                this.showOpacityEditTool(false, 0, 0);\n            }\n            if (annotationToolbarItems.indexOf('CommentPanelTool') !== -1) {\n                this.showCommentPanelTool(true, 1, 1);\n            }\n            else {\n                this.showCommentPanelTool(false, 1, 1);\n            }\n            if (annotationToolbarItems.indexOf('AnnotationDeleteTool') !== -1) {\n                this.showAnnotationDeleteTool(true, 2, 2);\n            }\n            else {\n                this.showAnnotationDeleteTool(false, 2, 2);\n            }\n        }\n    };\n    AnnotationToolbar.prototype.showFreeTextPropertiesTool = function () {\n        var annotationToolbarItems = this.pdfViewer.toolbarSettings.annotationToolbarItems;\n        if (annotationToolbarItems) {\n            if (annotationToolbarItems.indexOf('FontFamilyAnnotationTool') !== -1) {\n                this.showFontFamilyAnnotationTool(true, 2, 2);\n            }\n            else {\n                this.showFontFamilyAnnotationTool(false, 2, 2);\n            }\n            if (annotationToolbarItems.indexOf('FontSizeAnnotationTool') !== -1) {\n                this.showFontSizeAnnotationTool(true, 3, 3);\n            }\n            else {\n                this.showFontSizeAnnotationTool(false, 3, 3);\n            }\n            if (annotationToolbarItems.indexOf('FontColorAnnotationTool') !== -1) {\n                this.showFontColorAnnotationTool(true, 4, 4);\n            }\n            else {\n                this.showFontColorAnnotationTool(false, 4, 4);\n            }\n            if (annotationToolbarItems.indexOf('FontAlignAnnotationTool') !== -1) {\n                this.showFontAlignAnnotationTool(true, 5, 5);\n            }\n            else {\n                this.showFontAlignAnnotationTool(false, 5, 5);\n            }\n            if (annotationToolbarItems.indexOf('FontStylesAnnotationTool') !== -1) {\n                this.showFontStylesAnnotationTool(true, 6, 6);\n            }\n            else {\n                this.showFontStylesAnnotationTool(false, 6, 6);\n            }\n            if (annotationToolbarItems.indexOf('ColorEditTool') !== -1) {\n                this.showColorEditTool(true, 7, 7);\n            }\n            else {\n                this.showColorEditTool(false, 7, 7);\n            }\n            if (annotationToolbarItems.indexOf('StrokeColorEditTool') !== -1) {\n                this.showStrokeColorEditTool(true, 8, 8);\n            }\n            else {\n                this.showStrokeColorEditTool(false, 8, 8);\n            }\n            if (annotationToolbarItems.indexOf('ThicknessEditTool') !== -1) {\n                this.showThicknessEditTool(true, 9, 9);\n            }\n            else {\n                this.showThicknessEditTool(false, 9, 9);\n            }\n            if (annotationToolbarItems.indexOf('OpacityEditTool') !== -1) {\n                this.showOpacityEditTool(true, 10, 10);\n            }\n            else {\n                this.showOpacityEditTool(false, 10, 10);\n            }\n            if (annotationToolbarItems.indexOf('CommentPanelTool') !== -1) {\n                this.showCommentPanelTool(true, 11, 11);\n            }\n            else {\n                this.showCommentPanelTool(false, 11, 11);\n            }\n            if (annotationToolbarItems.indexOf('AnnotationDeleteTool') !== -1) {\n                this.showAnnotationDeleteTool(true, 12, 12);\n            }\n            else {\n                this.showAnnotationDeleteTool(false, 12, 12);\n            }\n            if (annotationToolbarItems.indexOf('FreeTextAnnotationTool') !== -1) {\n                this.showFreeTextAnnotationTool(true, 0, 0);\n            }\n            else {\n                this.showFreeTextAnnotationTool(false, 0, 0);\n                this.applyHideToToolbar(false, 1, 1);\n            }\n        }\n    };\n    AnnotationToolbar.prototype.shapePropertiesTool = function () {\n        var annotationToolbarItems = this.pdfViewer.toolbarSettings.annotationToolbarItems;\n        if (annotationToolbarItems) {\n            if (annotationToolbarItems.indexOf('ColorEditTool') !== -1) {\n                this.showColorEditTool(true, 2, 2);\n            }\n            else {\n                this.showColorEditTool(false, 2, 2);\n            }\n            if (annotationToolbarItems.indexOf('StrokeColorEditTool') !== -1) {\n                this.showStrokeColorEditTool(true, 3, 3);\n            }\n            else {\n                this.showStrokeColorEditTool(false, 3, 3);\n            }\n            if (annotationToolbarItems.indexOf('ThicknessEditTool') !== -1) {\n                this.showThicknessEditTool(true, 4, 4);\n            }\n            else {\n                this.showThicknessEditTool(false, 4, 4);\n            }\n            if (annotationToolbarItems.indexOf('OpacityEditTool') !== -1) {\n                this.showOpacityEditTool(true, 5, 5);\n            }\n            else {\n                this.showOpacityEditTool(false, 5, 5);\n            }\n            if (annotationToolbarItems.indexOf('CommentPanelTool') !== -1) {\n                this.showCommentPanelTool(true, 6, 6);\n            }\n            else {\n                this.showCommentPanelTool(false, 6, 6);\n            }\n            if (annotationToolbarItems.indexOf('AnnotationDeleteTool') !== -1) {\n                this.showAnnotationDeleteTool(true, 7, 7);\n            }\n            else {\n                this.showAnnotationDeleteTool(false, 7, 7);\n            }\n            if (annotationToolbarItems.indexOf('ShapeTool') !== -1) {\n                this.showShapeAnnotationTool(true, 0, 0);\n            }\n            else {\n                this.showShapeAnnotationTool(false, 0, 0);\n                this.applyHideToToolbar(false, 1, 1);\n            }\n        }\n    };\n    AnnotationToolbar.prototype.showStampPropertiesTool = function () {\n        var annotationToolbarItems = this.pdfViewer.toolbarSettings.annotationToolbarItems;\n        if (annotationToolbarItems) {\n            if (annotationToolbarItems.indexOf('OpacityEditTool') !== -1) {\n                this.showOpacityEditTool(true, 2, 2);\n            }\n            else {\n                this.showOpacityEditTool(false, 2, 2);\n            }\n            if (annotationToolbarItems.indexOf('CommentPanelTool') !== -1) {\n                this.showCommentPanelTool(true, 3, 3);\n            }\n            else {\n                this.showCommentPanelTool(false, 3, 3);\n            }\n            if (annotationToolbarItems.indexOf('AnnotationDeleteTool') !== -1) {\n                this.showAnnotationDeleteTool(true, 4, 4);\n            }\n            else {\n                this.showAnnotationDeleteTool(false, 4, 4);\n            }\n            if (annotationToolbarItems.indexOf('StampAnnotationTool') !== -1) {\n                this.showStampAnnotationTool(true, 0, 0);\n            }\n            else {\n                this.showStampAnnotationTool(false, 0, 0);\n                this.applyHideToToolbar(false, 1, 1);\n            }\n        }\n    };\n    AnnotationToolbar.prototype.showTextMarkupPropertiesTool = function () {\n        var annotationToolbarItems = this.pdfViewer.toolbarSettings.annotationToolbarItems;\n        if (annotationToolbarItems) {\n            if (annotationToolbarItems.indexOf('ColorEditTool') !== -1) {\n                this.showColorEditTool(true, 2, 2);\n            }\n            else {\n                this.showColorEditTool(false, 2, 2);\n            }\n            if (annotationToolbarItems.indexOf('OpacityEditTool') !== -1) {\n                this.showOpacityEditTool(true, 3, 3);\n            }\n            else {\n                this.showOpacityEditTool(false, 3, 3);\n            }\n            if (annotationToolbarItems.indexOf('CommentPanelTool') !== -1) {\n                this.showCommentPanelTool(true, 4, 4);\n            }\n            else {\n                this.showCommentPanelTool(false, 4, 4);\n            }\n            if (annotationToolbarItems.indexOf('AnnotationDeleteTool') !== -1) {\n                this.showAnnotationDeleteTool(true, 5, 5);\n            }\n            else {\n                this.showAnnotationDeleteTool(false, 5, 5);\n            }\n            if (annotationToolbarItems.includes('HighlightTool') || annotationToolbarItems.includes('UnderlineTool') || annotationToolbarItems.includes('StrikethroughTool')) {\n                this.applyHideToToolbar(true, 0, 0);\n            }\n            else {\n                this.applyHideToToolbar(false, 0, 0);\n                this.applyHideToToolbar(false, 1, 1);\n            }\n        }\n    };\n    AnnotationToolbar.prototype.showInkPropertiesTool = function () {\n        var annotationToolbarItems = this.pdfViewer.toolbarSettings.annotationToolbarItems;\n        if (annotationToolbarItems) {\n            if (annotationToolbarItems.indexOf('StrokeColorEditTool') !== -1) {\n                this.showStrokeColorEditTool(true, 2, 2);\n            }\n            else {\n                this.showStrokeColorEditTool(false, 2, 2);\n            }\n            if (annotationToolbarItems.indexOf('ThicknessEditTool') !== -1) {\n                this.showThicknessEditTool(true, 3, 3);\n            }\n            else {\n                this.showThicknessEditTool(false, 3, 3);\n            }\n            if (annotationToolbarItems.indexOf('OpacityEditTool') !== -1) {\n                this.showOpacityEditTool(true, 4, 4);\n            }\n            else {\n                this.showOpacityEditTool(false, 4, 4);\n            }\n            if (annotationToolbarItems.indexOf('CommentPanelTool') !== -1) {\n                this.showCommentPanelTool(true, 5, 5);\n            }\n            else {\n                this.showCommentPanelTool(false, 5, 5);\n            }\n            if (annotationToolbarItems.indexOf('AnnotationDeleteTool') !== -1) {\n                this.showAnnotationDeleteTool(true, 6, 6);\n            }\n            else {\n                this.showAnnotationDeleteTool(false, 6, 6);\n            }\n            if (annotationToolbarItems.indexOf('HandWrittenSignatureTool') !== -1) {\n                this.showSignatureTool(true, 0, 0);\n            }\n            else {\n                this.showSignatureTool(false, 0, 0);\n                this.applyHideToToolbar(false, 1, 1);\n            }\n        }\n    };\n    /**\n     * @param {string} id - It describes about the id value\n     * @private\n     * @returns {any} - any\n     */\n    AnnotationToolbar.prototype.createAnnotationToolbarForMobile = function (id) {\n        var hideToolbar;\n        if (id) {\n            var editIcon = document.getElementById(id);\n            if (editIcon.parentElement.classList.contains('e-pv-select')) {\n                hideToolbar = true;\n                editIcon.parentElement.classList.remove('e-pv-select');\n            }\n            else {\n                hideToolbar = false;\n                this.pdfViewer.toolbarModule.selectItem(editIcon.parentElement);\n            }\n        }\n        if (hideToolbar) {\n            this.toolbarCreated = false;\n            this.adjustMobileViewer();\n            if (this.toolbar) {\n                this.toolbar.destroy();\n                this.deselectAllItemsForMobile();\n            }\n            if (this.propertyToolbar) {\n                this.propertyToolbar.destroy();\n            }\n            var mobileAnnotationToolbar = document.getElementById(this.pdfViewer.element.id + '_mobileAnnotationToolbar');\n            if (mobileAnnotationToolbar) {\n                mobileAnnotationToolbar.style.display = 'none';\n            }\n            this.pdfViewer.isAnnotationToolbarVisible = !hideToolbar;\n            return [];\n        }\n        else {\n            this.isToolbarCreated = true;\n            if (this.propertyToolbar) {\n                this.propertyToolbar.destroy();\n            }\n            if (this.toolbarElement) {\n                this.toolbarElement.parentElement.removeChild(this.toolbarElement);\n            }\n            this.toolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: this.pdfViewer.element.id + '_mobileAnnotationToolbar', className: 'e-pv-mobile-annotation-toolbar', styles: 'bottom: 0px; position: absolute; width: 100%; float: left;' });\n            //this.toolbarElement.append(this.pdfViewerBase.viewerContainer);\n            this.pdfViewerBase.viewerMainContainer.appendChild(this.toolbarElement);\n            var stampTemplate = this.getTemplate('span', '_annotation_stamp', 'e-pv-annotation-stamp-container');\n            var signTemplate = this.getTemplate('span', '_annotation_signature', 'e-pv-annotation-handwritten-container');\n            var items = [\n                { prefixIcon: 'e-pv-comment-icon e-pv-icon', className: 'e-pv-comment-container', id: this.pdfViewer.element.id + '_comment' },\n                { type: 'Separator', align: 'Left' },\n                { prefixIcon: 'e-pv-highlight-icon e-pv-icon', className: 'e-pv-highlight-container', id: this.pdfViewer.element.id + '_highlight' },\n                { prefixIcon: 'e-pv-underline-icon e-pv-icon', className: 'e-pv-underline-container', id: this.pdfViewer.element.id + '_underline' },\n                { prefixIcon: 'e-pv-strikethrough-icon e-pv-icon', className: 'e-pv-strikethrough-container', id: this.pdfViewer.element.id + '_strikethrough' },\n                { type: 'Separator', align: 'Left' },\n                { prefixIcon: 'e-pv-annotation-shape-icon e-pv-icon', className: 'e-pv-annotation-shapes-container', id: this.pdfViewer.element.id + '_annotation_shapes' },\n                { type: 'Separator', align: 'Left' },\n                { prefixIcon: 'e-pv-annotation-calibrate-icon e-pv-icon', className: 'e-pv-annotation-calibrate-container', id: this.pdfViewer.element.id + '_annotation_calibrate' },\n                { type: 'Separator', align: 'Left' },\n                { prefixIcon: 'e-pv-freetext-icon e-pv-icon', className: 'e-pv-annotation-freetextedit-container', id: this.pdfViewer.element.id + '_annotation_freeTextEdit' },\n                { type: 'Separator', align: 'Left' },\n                { template: stampTemplate },\n                { type: 'Separator', align: 'Left' },\n                { template: signTemplate, align: 'Left' },\n                { type: 'Separator', align: 'Left' },\n                { prefixIcon: 'e-pv-inkannotation-icon e-pv-icon', className: 'e-pv-annotation-ink-container', id: this.pdfViewer.element.id + '_annotation_ink', align: 'Left' },\n                { type: 'Separator', align: 'Left' },\n                { prefixIcon: 'e-pv-comment-panel-icon e-pv-icon', className: 'e-pv-comment-panel-icon-container', id: this.pdfViewer.element.id + '_annotation_commentPanel', align: 'Right' }\n            ];\n            if (this.toolbarCreated && this.toolbar) {\n                this.toolbar.destroy();\n                this.toolbarCreated = false;\n                this.adjustMobileViewer();\n            }\n            else {\n                this.toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({ items: items, width: '', height: '', overflowMode: 'Scrollable', clicked: this.onToolbarClicked.bind(this) });\n                if (this.pdfViewer.enableRtl) {\n                    this.toolbar.enableRtl = true;\n                }\n                this.toolbar.isStringTemplate = true;\n                this.toolbar.appendTo(this.toolbarElement);\n                this.afterMobileToolbarCreation();\n                this.createStampContainer();\n                this.createSignContainer();\n                this.applyMobileAnnotationToolbarSettings();\n                this.toolbarCreated = true;\n                this.adjustMobileViewer();\n            }\n            if (!this.pdfViewerBase.isTextSelectionDisabled) {\n                if (this.isMobileHighlightEnabled) {\n                    this.primaryToolbar.selectItem(this.highlightItem);\n                    this.primaryToolbar.deSelectItem(this.underlineItem);\n                    this.primaryToolbar.deSelectItem(this.strikethroughItem);\n                    this.primaryToolbar.deSelectItem(this.freeTextEditItem);\n                    this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n                }\n                else if (this.isMobileUnderlineEnabled) {\n                    this.primaryToolbar.selectItem(this.underlineItem);\n                    this.primaryToolbar.deSelectItem(this.highlightItem);\n                    this.primaryToolbar.deSelectItem(this.strikethroughItem);\n                    this.primaryToolbar.deSelectItem(this.freeTextEditItem);\n                    this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n                }\n                else if (this.isMobileStrikethroughEnabled) {\n                    this.primaryToolbar.selectItem(this.strikethroughItem);\n                    this.primaryToolbar.deSelectItem(this.highlightItem);\n                    this.primaryToolbar.deSelectItem(this.underlineItem);\n                    this.primaryToolbar.deSelectItem(this.freeTextEditItem);\n                    this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n                }\n            }\n            this.pdfViewer.isAnnotationToolbarVisible = !hideToolbar;\n            return items;\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.adjustMobileViewer = function () {\n        var toolbarHeight;\n        if (this.toolbarElement) {\n            toolbarHeight = this.toolbarElement.clientHeight;\n        }\n        var isPrimaryTool = false;\n        if (this.toolbarElement && this.toolbarElement.children.length === 0 && this.propertyToolbar &&\n            this.propertyToolbar.element.children.length > 0) {\n            toolbarHeight = this.propertyToolbar.element.clientHeight;\n            if (this.pdfViewer.toolbarModule.toolbarElement.style.display === 'none' && !(this.pdfViewerBase.navigationPane && this.pdfViewerBase.navigationPane.isNavigationToolbarVisible)) {\n                this.pdfViewer.toolbarModule.toolbarElement.style.display = 'block';\n            }\n        }\n        else if (this.freetextToolbarElement && this.freetextToolbarElement.children.length > 0) {\n            toolbarHeight = this.freetextToolbarElement.clientHeight;\n        }\n        else if (toolbarHeight === 0 && this.pdfViewer.toolbarModule.toolbar) {\n            toolbarHeight = this.pdfViewer.toolbarModule.toolbarElement.clientHeight;\n            isPrimaryTool = true;\n        }\n        else if (!toolbarHeight && this.propertyToolbar && this.propertyToolbar.element.children.length > 0) {\n            toolbarHeight = this.propertyToolbar.element.clientHeight;\n        }\n        if (this.pdfViewer.enableToolbar && this.toolbarCreated) {\n            this.pdfViewerBase.viewerContainer.style.height = this.updateViewerHeight(this.getElementHeight(this.pdfViewerBase.viewerContainer), (toolbarHeight + toolbarHeight)) + 'px';\n        }\n        else {\n            if (!isPrimaryTool) {\n                if (this.pdfViewerBase.viewerContainer.style.height.split('%').length > 1) {\n                    this.pdfViewerBase.viewerContainer.style.height = this.resetViewerHeight(this.getElementHeight(this.pdfViewerBase.viewerContainer), (-toolbarHeight)) + 'px';\n                }\n                else {\n                    this.pdfViewerBase.viewerContainer.style.height = this.resetViewerHeight(this.getElementHeight(this.pdfViewerBase.viewerContainer), (toolbarHeight)) + 'px';\n                }\n            }\n        }\n    };\n    /**\n     * Shows /hides the toolbar in the PdfViewer\n     *\n     * @param {boolean} enable - If set true , its show the Toolbar\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.showToolbar = function (enable) {\n        var toolbar = this.toolbarElement;\n        if (enable) {\n            toolbar.style.display = 'block';\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.pdfViewer.toolbarModule && this.pdfViewer.toolbarModule.annotationToolbarModule) {\n                this.pdfViewer.toolbarModule.annotationToolbarModule.hideMobileAnnotationToolbar();\n            }\n        }\n        else {\n            toolbar.style.display = 'none';\n        }\n    };\n    AnnotationToolbar.prototype.createMobileToolbarItems = function (isPath) {\n        var colorTemplate = this.getTemplate('span', '_annotation_color', 'e-pv-annotation-color-container');\n        var opacityTemplate = this.getTemplate('span', '_annotation_opacity', 'e-pv-annotation-opacity-container');\n        var items = [];\n        items.push({ prefixIcon: 'e-pv-backward-icon e-pv-icon', tooltipText: this.pdfViewer.localeObj.getConstant('Go Back'), id: this.pdfViewer.element.id + '_backward', click: this.goBackToToolbar.bind(this) });\n        if (!isPath) {\n            items.push({ template: colorTemplate, align: 'right' });\n            items.push({ template: opacityTemplate, align: 'right' });\n            items.push({ type: 'Separator', align: 'right' });\n        }\n        items.push({ prefixIcon: 'e-pv-annotation-delete-icon e-pv-icon', className: 'e-pv-annotation-delete-container', id: this.pdfViewer.element.id + '_annotation_delete', align: 'right' });\n        return items;\n    };\n    AnnotationToolbar.prototype.goBackToToolbar = function (args) {\n        this.isMobileAnnotEnabled = false;\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || !this.pdfViewer.enableDesktopMode) {\n            if (this.pdfViewerBase.action === 'Polygon') {\n                this.pdfViewerBase.tool.mouseUp(args, true, true);\n            }\n        }\n        if (this.toolbarElement.children.length > 0) {\n            this.toolbarElement.style.display = 'block';\n        }\n        else {\n            this.toolbarCreated = false;\n            this.toolbar.destroy();\n            this.createAnnotationToolbarForMobile();\n        }\n        var page = this.pdfViewerBase.getSelectTextMarkupCurrentPage();\n        if (page) {\n            this.pdfViewer.annotationModule.textMarkupAnnotationModule.selectTextMarkupCurrentPage = null;\n            this.pdfViewer.annotationModule.textMarkupAnnotationModule.clearAnnotationSelection(page);\n        }\n    };\n    AnnotationToolbar.prototype.createToolbarItems = function () {\n        var colorTemplate = this.getTemplate('button', '_annotation_color', 'e-pv-annotation-color-container');\n        var strokeTemplate = this.getTemplate('button', '_annotation_stroke', 'e-pv-annotation-stroke-container');\n        var thicknessTemplate = this.getTemplate('button', '_annotation_thickness', 'e-pv-annotation-thickness-container');\n        var opacityTemplate = this.getTemplate('button', '_annotation_opacity', 'e-pv-annotation-opacity-container');\n        var shapesTemplate = this.getTemplate('button', '_annotation_shapes', 'e-pv-annotation-shapes-container');\n        var calibrateTemplate = this.getTemplate('button', '_annotation_calibrate', 'e-pv-annotation-calibrate-container');\n        var stampTemplate = this.getTemplate('span', '_annotation_stamp', 'e-pv-annotation-stamp-container');\n        var fontFamilyTemplate = this.getTemplate('button', '_annotation_fontname', 'e-pv-annotation-fontname-container');\n        var fontSizeTemplate = this.getTemplate('button', '_annotation_fontsize', 'e-pv-annotation-fontsize-container');\n        var textColorTemplate = this.getTemplate('button', '_annotation_textcolor', 'e-pv-annotation-textcolor-container');\n        var alignmentTemplate = this.getTemplate('button', '_annotation_textalign', 'e-pv-annotation-textalign-container');\n        var textPropertiesTemplate = this.getTemplate('button', '_annotation_textproperties', 'e-pv-annotation-textprop-container');\n        var signTemplate = this.getTemplate('button', '_annotation_signature', 'e-pv-annotation-handwritten-container');\n        var items = [];\n        items.push({ prefixIcon: 'e-pv-highlight-icon e-pv-icon', className: 'e-pv-highlight-container', id: this.pdfViewer.element.id + '_highlight', align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-underline-icon e-pv-icon', className: 'e-pv-underline-container', id: this.pdfViewer.element.id + '_underline', align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-strikethrough-icon e-pv-icon', className: 'e-pv-strikethrough-container', id: this.pdfViewer.element.id + '_strikethrough', align: 'Left' });\n        items.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-hightlight-separator-container' });\n        items.push({ template: shapesTemplate, align: 'Left', cssClass: 'e-pv-shape-template-container' });\n        items.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-shape-separator-container' });\n        items.push({ template: calibrateTemplate, align: 'Left', cssClass: 'e-pv-calibrate-template-container' });\n        items.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-calibrate-separator-container' });\n        items.push({ prefixIcon: 'e-pv-freetext-icon e-pv-icon', className: 'e-pv-annotation-freetextedit-container', id: this.pdfViewer.element.id + '_annotation_freeTextEdit', align: 'Left' });\n        items.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-freetext-separator-container' });\n        items.push({ template: stampTemplate, align: 'Left', cssClass: 'e-pv-stamp-template-container' });\n        items.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-stamp-separator-container' });\n        items.push({ template: signTemplate, align: 'Left', cssClass: 'e-pv-sign-template-container' });\n        items.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-sign-separator-container' });\n        items.push({ prefixIcon: 'e-pv-inkannotation-icon e-pv-icon', className: 'e-pv-annotation-ink-container', id: this.pdfViewer.element.id + '_annotation_ink', align: 'Left' });\n        items.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-ink-separator-container' });\n        items.push({ template: fontFamilyTemplate, align: 'Left', cssClass: 'e-pv-fontfamily-container' });\n        items.push({ template: fontSizeTemplate, align: 'Left', cssClass: 'e-pv-fontsize-container' });\n        items.push({ template: textColorTemplate, align: 'Left', cssClass: 'e-pv-text-color-container' });\n        items.push({ template: alignmentTemplate, align: 'Left', cssClass: 'e-pv-alignment-container' });\n        items.push({ template: textPropertiesTemplate, align: 'Left', cssClass: 'e-pv-text-properties-container' });\n        items.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-text-separator-container' });\n        items.push({ template: colorTemplate, align: 'Left', cssClass: 'e-pv-color-template-container' });\n        items.push({ template: strokeTemplate, align: 'Left', cssClass: 'e-pv-stroke-template-container' });\n        items.push({ template: thicknessTemplate, align: 'Left', cssClass: 'e-pv-thickness-template-container' });\n        items.push({ template: opacityTemplate, align: 'Left', cssClass: 'e-pv-opacity-template-container' });\n        items.push({ type: 'Separator', align: 'Left', cssClass: 'e-pv-opacity-separator-container' });\n        items.push({ prefixIcon: 'e-pv-annotation-delete-icon e-pv-icon', className: 'e-pv-annotation-delete-container', id: this.pdfViewer.element.id + '_annotation_delete', align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-comment-panel-icon e-pv-icon', className: 'e-pv-comment-panel-icon-container', id: this.pdfViewer.element.id + '_annotation_commentPanel', align: 'Right' });\n        items.push({ prefixIcon: 'e-pv-annotation-tools-close-icon e-pv-icon', className: 'e-pv-annotation-tools-close-container', id: this.pdfViewer.element.id + '_annotation_close', align: 'Right' });\n        return items;\n    };\n    AnnotationToolbar.prototype.createSignContainer = function () {\n        var _this = this;\n        this.handWrittenSignatureItem = this.pdfViewerBase.getElement('_annotation_signature');\n        this.primaryToolbar.createTooltip(this.pdfViewerBase.getElement('_annotation_signature'), this.pdfViewer.localeObj.getConstant('SignatureFieldDialogHeaderText'));\n        this.handWrittenSignatureItem.setAttribute('aria-label', this.pdfViewer.localeObj.getConstant('SignatureFieldDialogHeaderText'));\n        // eslint-disable-next-line\n        var proxy = this;\n        var items = [];\n        if (this.pdfViewer.handWrittenSignatureSettings ||\n            this.pdfViewer.handWrittenSignatureSettings.signatureItem.length === 0 ||\n            this.pdfViewer.handWrittenSignatureSettings.signatureItem.length === 2) {\n            items = [\n                {\n                    text: 'ADD SIGNATURE'\n                },\n                {\n                    separator: true\n                },\n                {\n                    text: 'ADD INITIAL'\n                }\n            ];\n        }\n        else {\n            if (this.pdfViewer.handWrittenSignatureSettings.signatureItem[0] === 'Signature') {\n                items = [\n                    {\n                        text: 'ADD SIGNATURE'\n                    }\n                ];\n            }\n            else {\n                items = [\n                    {\n                        text: 'ADD INITIAL'\n                    }\n                ];\n            }\n        }\n        var saveOptions = {\n            items: items,\n            iconCss: 'e-pv-handwritten-icon e-pv-icon',\n            cssClass: 'e-pv-handwritten-popup',\n            open: function (args) {\n                proxy.openSignature();\n            },\n            beforeItemRender: function (args) {\n                _this.pdfViewer.annotation.triggerAnnotationUnselectEvent();\n                _this.pdfViewer.annotation.triggerSignatureUnselectEvent();\n                _this.pdfViewer.clearSelection(_this.pdfViewerBase.currentPageNumber - 1);\n                if (args.element && args.element.className.indexOf('e-separator') !== -1) {\n                    args.element.style.margin = '8px 0';\n                    args.element.setAttribute('role', 'menuitem');\n                    args.element.setAttribute('aria-label', 'separator');\n                }\n                if (args.item.text === 'ADD SIGNATURE') {\n                    args.element.innerHTML = '';\n                    _this.saveSignatureCount = 0;\n                    for (var collection = _this.pdfViewerBase.signatureModule.signaturecollection.length; collection > 0; collection--) {\n                        if (_this.saveSignatureCount < _this.pdfViewerBase.signatureModule.\n                            getSaveLimit(_this.pdfViewer.handWrittenSignatureSettings.saveSignatureLimit)) {\n                            args.element.style.display = 'block';\n                            var signatureCollection = _this.pdfViewerBase.signatureModule.signaturecollection[collection - 1];\n                            var collectionKey = signatureCollection.image[0].imageData;\n                            var signatureID = signatureCollection.image[0].id.split('_')[1];\n                            if (!signatureCollection.isInitial && collectionKey !== '') {\n                                var signatureContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n                                signatureContainer.id = 's' + signatureID;\n                                signatureContainer.style.display = 'block';\n                                signatureContainer.style.paddingBottom = '10px';\n                                var signatureSpan = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('span');\n                                signatureSpan.id = 'sign_border_' + signatureID;\n                                signatureSpan.classList.add('e-pv-align-border');\n                                var signatureImage = void 0;\n                                if (signatureCollection.image[0].signatureType === 'SignatureText') {\n                                    signatureImage = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n                                    signatureImage.classList.add('e-pv-align-border-div');\n                                    signatureImage.innerText = collectionKey;\n                                    signatureImage.style.fontFamily = signatureCollection.image[0].fontFamily;\n                                    signatureImage.style.fontSize = '15px';\n                                    signatureImage.style.display = 'inline-flex';\n                                    signatureImage.style.alignItems = 'center';\n                                    signatureImage.style.position = 'relative';\n                                    signatureImage.id = 'sign_' + signatureID;\n                                    signatureImage.style.width = '80px';\n                                    signatureImage.style.height = '53px';\n                                    signatureImage.style.overflow = 'hidden';\n                                    signatureImage.style.textOverflow = 'ellipsis';\n                                    signatureImage.style.paddingLeft = '11px';\n                                }\n                                else {\n                                    signatureImage = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('img');\n                                    signatureImage.id = 'sign_' + signatureID;\n                                    signatureImage.src = collectionKey;\n                                    signatureImage.width = 80;\n                                    signatureImage.height = 32;\n                                    signatureImage.classList.add('e-pv-signatureimage');\n                                    signatureImage.style.paddingLeft = '20px';\n                                    signatureImage.style.paddingRight = '18px';\n                                    signatureImage.style.paddingTop = '12px';\n                                    signatureImage.style.paddingBottom = '12px';\n                                    signatureImage.style.boxSizing = 'content-box';\n                                    signatureImage.setAttribute('alt', 'Saved Signature');\n                                }\n                                signatureImage.addEventListener('mouseover', _this.hoverSignatureImage.bind(_this));\n                                signatureImage.addEventListener('mouseleave', _this.leaveSignatureImage.bind(_this));\n                                var signatureDeleteSpan = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('span');\n                                signatureDeleteSpan.id = 'delete_' + signatureID;\n                                signatureDeleteSpan.classList.add('e-pv-delete');\n                                signatureDeleteSpan.classList.add('e-pv-align');\n                                signatureSpan.append(signatureImage);\n                                signatureSpan.append(signatureDeleteSpan);\n                                signatureContainer.append(signatureSpan);\n                                args.element.appendChild(signatureContainer);\n                                args.element.style.pointerEvents = 'auto';\n                                args.element.style.background = 'none';\n                                _this.pdfViewerBase.getElement('_annotation_signature-popup').style.width = '206px';\n                                _this.saveSignatureCount++;\n                            }\n                        }\n                    }\n                    var addInitialSpan = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button');\n                    addInitialSpan.classList.add('e-control', 'e-btn', 'e-lib', 'e-outline', 'e-primary');\n                    addInitialSpan.textContent = _this.pdfViewer.localeObj.getConstant('HandwrittenSignatureDialogHeaderText');\n                    if (_this.pdfViewer.locale === 'en-US') {\n                        addInitialSpan.style.minWidth = '130px';\n                        addInitialSpan.style.width = 'auto';\n                    }\n                    else {\n                        addInitialSpan.style.width = 'auto';\n                    }\n                    addInitialSpan.style.height = '36px';\n                    addInitialSpan.addEventListener('click', _this.clickSignature.bind(_this));\n                    args.element.appendChild(addInitialSpan);\n                    args.element.addEventListener('mouseover', _this.hoverInitialBtn.bind(_this));\n                    args.element.style.minWidth = '206px';\n                    args.element.style.width = 'auto';\n                    args.element.style.display = 'flex';\n                    args.element.style.flexDirection = 'column';\n                    args.element.style.height = 'auto';\n                    args.element.style.alignItems = 'center';\n                    args.element.setAttribute('role', 'menuitem');\n                }\n                if (args.item.text === 'ADD INITIAL') {\n                    _this.saveInitialCount = 0;\n                    args.element.innerHTML = '';\n                    for (var collection = _this.pdfViewerBase.signatureModule.signaturecollection.length; collection > 0; collection--) {\n                        if (_this.saveInitialCount < _this.pdfViewerBase.signatureModule.\n                            getSaveLimit(_this.pdfViewer.handWrittenSignatureSettings.saveInitialLimit)) {\n                            var signatureCollection = _this.pdfViewerBase.signatureModule.signaturecollection[collection - 1];\n                            var collectionKey = signatureCollection.image[0].imageData;\n                            var signatureID = signatureCollection.image[0].id.split('_')[1];\n                            if (signatureCollection.isInitial && collectionKey !== '') {\n                                var signatureContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n                                signatureContainer.id = 's' + signatureID;\n                                signatureContainer.style.display = 'block';\n                                signatureContainer.style.paddingBottom = '10px';\n                                var signatureSpan = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('span');\n                                signatureSpan.id = 'sign_border_' + signatureID;\n                                signatureSpan.classList.add('e-pv-align-border');\n                                var signatureImage = void 0;\n                                if (signatureCollection.image[0].signatureType === 'SignatureText') {\n                                    signatureImage = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n                                    signatureImage.classList.add('e-pv-align-border-div');\n                                    signatureImage.innerText = collectionKey;\n                                    signatureImage.style.fontFamily = signatureCollection.image[0].fontFamily;\n                                    signatureImage.style.fontSize = '15px';\n                                    signatureImage.style.display = 'inline-flex';\n                                    signatureImage.style.alignItems = 'center';\n                                    signatureImage.style.position = 'relative';\n                                    signatureImage.id = 'sign_' + signatureID;\n                                    signatureImage.style.width = '80px';\n                                    signatureImage.style.height = '53px';\n                                    signatureImage.style.overflow = 'hidden';\n                                    signatureImage.style.textOverflow = 'ellipsis';\n                                    signatureImage.style.paddingLeft = '11px';\n                                }\n                                else {\n                                    signatureImage = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('img');\n                                    signatureImage.id = 'sign_' + signatureID;\n                                    signatureImage.src = collectionKey;\n                                    signatureImage.width = 80;\n                                    signatureImage.height = 32;\n                                    signatureImage.classList.add('e-pv-signatureimage');\n                                    signatureImage.style.paddingLeft = '20px';\n                                    signatureImage.style.paddingRight = '18px';\n                                    signatureImage.style.paddingTop = '12px';\n                                    signatureImage.style.paddingBottom = '12px';\n                                    signatureImage.style.boxSizing = 'content-box';\n                                    signatureImage.setAttribute('alt', 'Saved Initial');\n                                }\n                                signatureImage.addEventListener('mouseover', _this.hoverSignatureImage.bind(_this));\n                                signatureImage.addEventListener('mouseleave', _this.leaveSignatureImage.bind(_this));\n                                signatureImage.width = 80;\n                                signatureImage.height = 32;\n                                var signatureDeleteSpan = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('span');\n                                signatureDeleteSpan.id = 'delete_' + signatureID;\n                                signatureDeleteSpan.classList.add('e-pv-delete');\n                                signatureDeleteSpan.classList.add('e-pv-align');\n                                signatureSpan.append(signatureImage);\n                                signatureSpan.append(signatureDeleteSpan);\n                                signatureContainer.append(signatureSpan);\n                                args.element.appendChild(signatureContainer);\n                                args.element.style.pointerEvents = 'auto';\n                                args.element.style.background = 'none';\n                                _this.pdfViewerBase.getElement('_annotation_signature-popup').style.width = '206px';\n                                _this.saveInitialCount++;\n                            }\n                        }\n                    }\n                    _this.isSignatureIteam = false;\n                    var addInitialSpan = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button');\n                    addInitialSpan.classList.add('e-control', 'e-btn', 'e-lib', 'e-outline', 'e-primary');\n                    addInitialSpan.textContent = _this.pdfViewer.localeObj.getConstant('HandwrittenInitialDialogHeaderText');\n                    if (_this.pdfViewer.locale === 'en-US') {\n                        addInitialSpan.style.minWidth = '130px';\n                        addInitialSpan.style.width = 'auto';\n                    }\n                    else {\n                        addInitialSpan.style.width = 'auto';\n                    }\n                    addInitialSpan.style.height = '36px';\n                    addInitialSpan.addEventListener('click', _this.clickInitial.bind(_this));\n                    args.element.appendChild(addInitialSpan);\n                    args.element.addEventListener('mouseover', _this.hoverInitialBtn.bind(_this));\n                    args.element.style.minWidth = '206px';\n                    args.element.style.width = 'auto';\n                    args.element.style.display = 'flex';\n                    args.element.style.flexDirection = 'column';\n                    args.element.style.height = 'auto';\n                    args.element.style.alignItems = 'center';\n                    args.element.setAttribute('role', 'menuitem');\n                }\n            },\n            select: function (args) {\n                _this.pdfViewer.clearSelection(_this.pdfViewerBase.currentPageNumber - 1);\n            }\n        };\n        var drpDownBtn = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_2__.DropDownButton(saveOptions);\n        if (this.pdfViewer.enableRtl) {\n            drpDownBtn.enableRtl = this.pdfViewer.enableRtl;\n        }\n        drpDownBtn.appendTo(this.handWrittenSignatureItem);\n    };\n    AnnotationToolbar.prototype.updateSignatureCount = function () {\n        var count = 0;\n        this.openSignaturePopup = false;\n        var signatureCollection = this.pdfViewerBase.signatureModule.signaturecollection;\n        for (var collection = 0; collection < signatureCollection.length; collection++) {\n            var colletionList = signatureCollection[parseInt(collection.toString(), 10)];\n            if (colletionList.image[0].imageData === '') {\n                count++;\n            }\n        }\n    };\n    AnnotationToolbar.prototype.openSignature = function () {\n        this.saveInitialCount = 0;\n        this.saveSignatureCount = 0;\n        for (var collection = this.pdfViewerBase.signatureModule.signaturecollection.length; collection > 0; collection--) {\n            if (this.saveSignatureCount < this.pdfViewerBase.signatureModule.\n                getSaveLimit(this.pdfViewer.handWrittenSignatureSettings.saveSignatureLimit)) {\n                var signatureCollection = this.pdfViewerBase.signatureModule.signaturecollection[collection - 1];\n                if (signatureCollection.image[0].imageData !== '') {\n                    if (!signatureCollection.isInitial) {\n                        this.saveSignatureCount++;\n                        var addedSignature = document.getElementById('sign_border_' + signatureCollection.image[0].id.split('_')[1] + '');\n                        var deleteSignature = document.getElementById('delete_' + signatureCollection.image[0].id.split('_')[1] + '');\n                        deleteSignature.style.backgroundClip = 'content-box';\n                        addedSignature.addEventListener('click', this.renderAddedSignature.bind(this));\n                        deleteSignature.addEventListener('click', this.deleteSavedSign.bind(this));\n                        deleteSignature.addEventListener('mouseover', this.hoverSignatureDelete.bind(this));\n                        deleteSignature.addEventListener('mouseleave', this.leaveSignatureDelete.bind(this));\n                        addedSignature.addEventListener('mouseover', this.hoverSignatureDelete.bind(this));\n                        addedSignature.addEventListener('mouseleave', this.leaveSignatureDelete.bind(this));\n                    }\n                }\n            }\n        }\n        for (var collection = this.pdfViewerBase.signatureModule.signaturecollection.length; collection > 0; collection--) {\n            if (this.saveInitialCount < this.pdfViewerBase.signatureModule.\n                getSaveLimit(this.pdfViewer.handWrittenSignatureSettings.saveInitialLimit)) {\n                var signatureCollection = this.pdfViewerBase.signatureModule.signaturecollection[collection - 1];\n                if (signatureCollection.image[0].imageData !== '') {\n                    if (signatureCollection.isInitial) {\n                        this.saveInitialCount++;\n                        var addedSignature = document.getElementById('sign_border_' + signatureCollection.image[0].id.split('_')[1] + '');\n                        var deleteSignature = document.getElementById('delete_' + signatureCollection.image[0].id.split('_')[1] + '');\n                        deleteSignature.style.backgroundClip = 'content-box';\n                        addedSignature.addEventListener('click', this.renderAddedSignature.bind(this));\n                        deleteSignature.addEventListener('click', this.deleteSavedSign.bind(this));\n                        deleteSignature.addEventListener('mouseover', this.hoverSignatureDelete.bind(this));\n                        deleteSignature.addEventListener('mouseleave', this.leaveSignatureDelete.bind(this));\n                        addedSignature.addEventListener('mouseover', this.hoverSignatureDelete.bind(this));\n                        addedSignature.addEventListener('mouseleave', this.leaveSignatureDelete.bind(this));\n                    }\n                }\n            }\n        }\n    };\n    AnnotationToolbar.prototype.hoverSignatureDelete = function () {\n        var eventTarget = event.target;\n        if (eventTarget.id === 'sign_' + eventTarget.id.split('_')[1] || eventTarget.classList.contains('e-pv-delete')) {\n            eventTarget.classList.add('e-pv-signaturehover');\n            eventTarget.style.cursor = 'pointer';\n        }\n    };\n    AnnotationToolbar.prototype.hoverInitialBtn = function (event) {\n        var eventTarget = event.target;\n        var currentFieldID = '';\n        if (navigator.userAgent.indexOf('MSIE') !== -1 || navigator.userAgent.indexOf('Trident') !== -1) {\n            currentFieldID = eventTarget.id;\n        }\n        else {\n            currentFieldID = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(event.path) ? event.composedPath()[0].id : event.path[0].id;\n        }\n        if (currentFieldID !== 'sign_' + currentFieldID.split('_')[1] && currentFieldID !== 'delete_' + currentFieldID.split('_')[1]) {\n            var liElement = document.getElementById(eventTarget.id);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(liElement)) {\n                liElement = document.getElementById(eventTarget.parentElement.id);\n            }\n            if (liElement != null && (eventTarget.id !== 'sign_' + eventTarget.id.split('_')[1] || eventTarget.id !== 'sign_border_' + eventTarget.id.split('_')[2])) {\n                liElement.style.background = 'transparent';\n                liElement.style.cursor = 'default';\n            }\n            else if (liElement.parentElement != null && (eventTarget.id !== 'sign_' + eventTarget.id.split('_')[1] || eventTarget.id !== 'sign_border_' + eventTarget.id.split('_')[2])) {\n                liElement.parentElement.style.background = 'transparent';\n                liElement.parentElement.style.cursor = 'default';\n            }\n        }\n    };\n    AnnotationToolbar.prototype.hoverSignatureImage = function () {\n        var eventTarget = event.target;\n        if (eventTarget.id === 'sign_' + eventTarget.id.split('_')[1] || eventTarget.classList.contains('e-pv-delete')) {\n            eventTarget.classList.add('e-pv-signaturehover');\n            eventTarget.classList.remove('e-pv-signatureimage');\n            eventTarget.style.cursor = 'pointer';\n        }\n    };\n    AnnotationToolbar.prototype.leaveSignatureDelete = function () {\n        var eventTarget = event.target;\n        if (eventTarget.id === 'sign_' + eventTarget.id.split('_')[1] || eventTarget.classList.contains('e-pv-delete')) {\n            eventTarget.classList.remove('e-pv-signaturehover');\n            if (eventTarget.children[0] && eventTarget.children[0].tagName === 'IMG') {\n                eventTarget.children[0].classList.remove('e-pv-signaturehover');\n            }\n            eventTarget.style.cursor = 'default';\n        }\n    };\n    AnnotationToolbar.prototype.clickSignature = function () {\n        this.pdfViewerBase.isInitialField = false;\n        this.addSignature();\n    };\n    AnnotationToolbar.prototype.clickInitial = function () {\n        this.pdfViewerBase.isInitialField = true;\n        this.addSignature();\n    };\n    AnnotationToolbar.prototype.leaveSignatureImage = function () {\n        var eventTarget = event.target;\n        if (eventTarget.id === 'sign_' + eventTarget.id.split('_')[1] || eventTarget.classList.contains('e-pv-delete')) {\n            eventTarget.classList.remove('e-pv-signaturehover');\n            if (eventTarget.tagName === 'IMG') {\n                eventTarget.classList.add('e-pv-signatureimage');\n            }\n            if (eventTarget.children[0] && eventTarget.children[0].tagName === 'IMG') {\n                eventTarget.children[0].classList.remove('e-pv-signaturehover');\n                eventTarget.children[0].classList.add('e-pv-signatureimage');\n            }\n            eventTarget.style.cursor = 'default';\n        }\n    };\n    AnnotationToolbar.prototype.addSignature = function () {\n        this.deselectAllItems();\n        this.deselectAllItemsForMobile();\n        this.showSignaturepanel();\n    };\n    AnnotationToolbar.prototype.renderAddedSignature = function () {\n        this.pdfViewerBase.isAddedSignClicked = true;\n        this.isSavedSignatureClicked = true;\n        this.pdfViewerBase.signatureModule.RenderSavedSignature();\n    };\n    AnnotationToolbar.prototype.deleteSavedSign = function (event) {\n        event.stopPropagation();\n        var signaturecollection = this.pdfViewerBase.signatureModule.signaturecollection;\n        for (var collection = signaturecollection.length; collection > 0; collection--) {\n            if (event.target.parentElement.children[0].id === 'sign_' + signaturecollection[collection - 1].image[0].id.split('_')[1]) {\n                var RemoveSignature = signaturecollection[collection - 1];\n                RemoveSignature.image[0].imageData = '';\n                this.pdfViewerBase.signatureModule.signaturecollection.splice(collection - 1, 1);\n                break;\n            }\n        }\n        event.target.parentElement.remove();\n    };\n    AnnotationToolbar.prototype.getTemplate = function (elementName, id, className) {\n        var element = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)(elementName, { id: this.pdfViewer.element.id + id });\n        if (className) {\n            element.className = className;\n        }\n        return element.outerHTML;\n    };\n    AnnotationToolbar.prototype.createStampContainer = function () {\n        var _this = this;\n        this.stampElement = this.pdfViewerBase.getElement('_annotation_stamp');\n        this.primaryToolbar.createTooltip(this.pdfViewerBase.getElement('_annotation_stamp'), this.pdfViewer.localeObj.getConstant('Add Stamp'));\n        this.stampElement.setAttribute('aria-label', this.pdfViewer.localeObj.getConstant('Add Stamp'));\n        this.stampElement.setAttribute('role', 'combobox');\n        this.stampElement.setAttribute('aria-expanded', 'false');\n        var contextMenuElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('ul', { id: this.pdfViewer.element.id + 'contextMenuElement' });\n        this.pdfViewerBase.getElement('_annotation_stamp').appendChild(contextMenuElement);\n        var items = [];\n        if (this.pdfViewer.stampSettings) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.stampSettings.dynamicStamps) || this.pdfViewer.stampSettings.dynamicStamps.length === 0) {\n                this.pdfViewer.stampSettings.dynamicStamps = [_base_types__WEBPACK_IMPORTED_MODULE_7__.DynamicStampItem.Revised, _base_types__WEBPACK_IMPORTED_MODULE_7__.DynamicStampItem.Reviewed,\n                    _base_types__WEBPACK_IMPORTED_MODULE_7__.DynamicStampItem.Received, _base_types__WEBPACK_IMPORTED_MODULE_7__.DynamicStampItem.Confidential, _base_types__WEBPACK_IMPORTED_MODULE_7__.DynamicStampItem.Approved, _base_types__WEBPACK_IMPORTED_MODULE_7__.DynamicStampItem.NotApproved];\n            }\n            if (this.pdfViewer.stampSettings.dynamicStamps && this.pdfViewer.stampSettings.dynamicStamps.length > 0) {\n                var dynamicStamps_1 = [];\n                items.push({ text: this.pdfViewer.localeObj.getConstant('Dynamic'), label: 'Dynamic', items: dynamicStamps_1 });\n                this.pdfViewer.stampSettings.dynamicStamps.forEach(function (stampItem, index) {\n                    // eslint-disable-next-line\n                    var name = _base_types__WEBPACK_IMPORTED_MODULE_7__.DynamicStampItem[stampItem];\n                    switch (name) {\n                        case 'NotApproved':\n                            name = 'Not Approved';\n                            break;\n                    }\n                    dynamicStamps_1.push({ text: _this.pdfViewer.localeObj.getConstant(name), label: name });\n                });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.stampSettings.signStamps) || this.pdfViewer.stampSettings.signStamps.length === 0) {\n                this.pdfViewer.stampSettings.signStamps = [_base_types__WEBPACK_IMPORTED_MODULE_7__.SignStampItem.Witness, _base_types__WEBPACK_IMPORTED_MODULE_7__.SignStampItem.InitialHere, _base_types__WEBPACK_IMPORTED_MODULE_7__.SignStampItem.SignHere,\n                    _base_types__WEBPACK_IMPORTED_MODULE_7__.SignStampItem.Accepted, _base_types__WEBPACK_IMPORTED_MODULE_7__.SignStampItem.Rejected];\n            }\n            if (this.pdfViewer.stampSettings.signStamps && this.pdfViewer.stampSettings.signStamps.length > 0) {\n                var signStamps_1 = [];\n                items.push({ text: this.pdfViewer.localeObj.getConstant('Sign Here'), label: 'Sign Here', items: signStamps_1 });\n                this.pdfViewer.stampSettings.signStamps.forEach(function (stampItem, index) {\n                    // eslint-disable-next-line\n                    var name = _base_types__WEBPACK_IMPORTED_MODULE_7__.SignStampItem[stampItem];\n                    switch (name) {\n                        case 'InitialHere':\n                            name = 'Initial Here';\n                            break;\n                        case 'SignHere':\n                            name = 'Sign Here';\n                            break;\n                    }\n                    signStamps_1.push({ text: _this.pdfViewer.localeObj.getConstant(name), label: name });\n                });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.stampSettings.standardBusinessStamps) ||\n                this.pdfViewer.stampSettings.standardBusinessStamps.length === 0) {\n                this.pdfViewer.stampSettings.standardBusinessStamps = [_base_types__WEBPACK_IMPORTED_MODULE_7__.StandardBusinessStampItem.Approved,\n                    _base_types__WEBPACK_IMPORTED_MODULE_7__.StandardBusinessStampItem.NotApproved, _base_types__WEBPACK_IMPORTED_MODULE_7__.StandardBusinessStampItem.Draft, _base_types__WEBPACK_IMPORTED_MODULE_7__.StandardBusinessStampItem.Final,\n                    _base_types__WEBPACK_IMPORTED_MODULE_7__.StandardBusinessStampItem.Completed, _base_types__WEBPACK_IMPORTED_MODULE_7__.StandardBusinessStampItem.Confidential,\n                    _base_types__WEBPACK_IMPORTED_MODULE_7__.StandardBusinessStampItem.ForPublicRelease, _base_types__WEBPACK_IMPORTED_MODULE_7__.StandardBusinessStampItem.NotForPublicRelease,\n                    _base_types__WEBPACK_IMPORTED_MODULE_7__.StandardBusinessStampItem.ForComment, _base_types__WEBPACK_IMPORTED_MODULE_7__.StandardBusinessStampItem.Void, _base_types__WEBPACK_IMPORTED_MODULE_7__.StandardBusinessStampItem.PreliminaryResults,\n                    _base_types__WEBPACK_IMPORTED_MODULE_7__.StandardBusinessStampItem.InformationOnly];\n            }\n            if (this.pdfViewer.stampSettings.standardBusinessStamps && this.pdfViewer.stampSettings.standardBusinessStamps.length > 0) {\n                var standardsBusinessStamps_1 = [];\n                items.push({ text: this.pdfViewer.localeObj.getConstant('Standard Business'), label: 'Standard Business', items: standardsBusinessStamps_1 });\n                this.pdfViewer.stampSettings.standardBusinessStamps.forEach(function (stampItem, index) {\n                    // eslint-disable-next-line\n                    var name = _base_types__WEBPACK_IMPORTED_MODULE_7__.StandardBusinessStampItem[stampItem];\n                    switch (name) {\n                        case 'NotApproved':\n                            name = 'Not Approved';\n                            break;\n                        case 'ForPublicRelease':\n                            name = 'For Public Release';\n                            break;\n                        case 'NotForPublicRelease':\n                            name = 'Not For Public Release';\n                            break;\n                        case 'ForComment':\n                            name = 'For Comment';\n                            break;\n                        case 'PreliminaryResults':\n                            name = 'Preliminary Results';\n                            break;\n                        case 'InformationOnly':\n                            name = 'Information Only';\n                            break;\n                    }\n                    standardsBusinessStamps_1.push({ text: _this.pdfViewer.localeObj.getConstant(name), label: name });\n                });\n            }\n        }\n        if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.customStampSettings)) && (this.pdfViewer.customStampSettings.enableCustomStamp ||\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.customStampSettings.enableCustomStamp))) {\n            if (items.length > 0) {\n                items.push({ separator: true });\n            }\n            items.push({ text: this.pdfViewer.localeObj.getConstant('Custom Stamp'), label: 'Custom Stamp', items: [] });\n            this.pdfViewerBase.customStampCollection = this.pdfViewer.customStampSettings.customStamps ?\n                this.pdfViewer.customStampSettings.customStamps : [];\n        }\n        this.stampMenu = [\n            {\n                iconCss: 'e-pv-stamp-icon e-pv-icon',\n                items: items\n            }\n        ];\n        var menuOptions = {\n            items: this.stampMenu,\n            cssClass: 'e-custom-scroll',\n            showItemOnClick: true,\n            enableScrolling: true,\n            beforeOpen: function (args) {\n                _this.resetFreeTextAnnot();\n                if (args.parentItem.text === '' && _this.pdfViewer.customStampSettings.isAddToMenu && args.items.length > 0) {\n                    var currentElements = null;\n                    for (var i = 0; i < args.items.length; i++) {\n                        if (args.items[parseInt(i.toString(), 10)].text === _this.pdfViewer.localeObj.getConstant('Custom Stamp')) {\n                            args.items[parseInt(i.toString(), 10)].items = [];\n                            currentElements = args.items[parseInt(i.toString(), 10)];\n                            break;\n                        }\n                    }\n                    var elements = _this.pdfViewerBase.customStampCollection;\n                    var stampElements = _this.pdfViewer.customStampSettings.customStamps;\n                    if (elements.length === 0 && stampElements && stampElements.length > 0) {\n                        for (var n = 0; n < stampElements.length; n++) {\n                            elements.push({ customStampName: stampElements[parseInt(n.toString(), 10)].customStampName,\n                                customStampImageSource: stampElements[parseInt(n.toString(), 10)].customStampImageSource });\n                        }\n                    }\n                    for (var m = 0; m < elements.length; m++) {\n                        if (currentElements != null) {\n                            currentElements.items.push({ text: elements[parseInt(m.toString(), 10)].customStampName });\n                            for (var i = 0; i < args.items.length; i++) {\n                                if (args.items[parseInt(i.toString(), 10)].text === _this.pdfViewer.localeObj.getConstant('Custom Stamp')) {\n                                    var liElem = args.element.children[parseInt(i.toString(), 10)];\n                                    if (liElem && !liElem.childElementCount) {\n                                        var span = document.createElement('span');\n                                        span.className = 'e-icons e-caret e-menu-caret-icon';\n                                        liElem.appendChild(span);\n                                        liElem.setAttribute('aria-haspopup', 'true');\n                                        liElem.setAttribute('aria-expanded', 'false');\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (args.parentItem.text === _this.pdfViewer.localeObj.getConstant('Custom Stamp')) {\n                    var stampElements = _this.pdfViewer.customStampSettings.customStamps;\n                    if (stampElements && stampElements.length > 10) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(args.element, '.e-menu-wrapper').style.height = '350px';\n                    }\n                }\n                _this.stampParentID = args.parentItem.text;\n                _this.menuItems.showItemOnClick = false;\n            },\n            beforeClose: function (args) {\n                if ((args.parentItem && args.parentItem.text !== _this.pdfViewer.localeObj.getConstant('Custom Stamp') && args.parentItem.text !== 'Standard Business' && args.parentItem.text !== 'Dynamic' && args.parentItem.text !== 'Sign Here') || !args.parentItem) {\n                    _this.menuItems.showItemOnClick = true;\n                }\n            },\n            select: function (args) {\n                _this.pdfViewerBase.isAlreadyAdded = false;\n                if (args.item.text === _this.pdfViewer.localeObj.getConstant('Custom Stamp')) {\n                    _this.updateInteractionTools();\n                    _this.checkStampAnnotations();\n                    _this.pdfViewer.annotation.stampAnnotationModule.isStampAddMode = true;\n                    var stampImage = document.getElementById(_this.pdfViewer.element.id + '_stampElement');\n                    if (stampImage) {\n                        stampImage.click();\n                    }\n                    _this.pdfViewer.annotation.triggerAnnotationUnselectEvent();\n                    _this.pdfViewer.annotation.triggerSignatureUnselectEvent();\n                }\n                else if (_this.stampParentID === _this.pdfViewer.localeObj.getConstant('Custom Stamp') && args.item.text !== '') {\n                    var elements = _this.pdfViewerBase.customStampCollection;\n                    for (var n = 0; n < elements.length; n++) {\n                        if (elements[parseInt(n.toString(), 10)].customStampName === args.item.text) {\n                            _this.pdfViewer.annotationModule.stampAnnotationModule.customStampName = args.item.text;\n                            _this.checkStampAnnotations();\n                            _this.pdfViewer.annotation.stampAnnotationModule.isStampAddMode = true;\n                            _this.pdfViewer.annotationModule.stampAnnotationModule.isStampAnnotSelected = true;\n                            _this.pdfViewerBase.stampAdded = true;\n                            _this.pdfViewerBase.isAlreadyAdded = true;\n                            _this.pdfViewer.annotationModule.stampAnnotationModule.\n                                createCustomStampAnnotation(elements[parseInt(n.toString(), 10)].customStampImageSource);\n                            _this.pdfViewerBase.stampAdded = false;\n                        }\n                    }\n                }\n                else if (args.item.text !== _this.pdfViewer.localeObj.getConstant('Dynamic') && args.item.text !== '' && args.item.text !== 'Standard Business' && (_this.stampParentID === 'Sign Here' || args.item.text !== 'Sign Here')) {\n                    _this.updateInteractionTools();\n                    _this.checkStampAnnotations();\n                    _this.pdfViewer.annotation.stampAnnotationModule.isStampAddMode = true;\n                    _this.pdfViewer.annotationModule.stampAnnotationModule.isStampAnnotSelected = true;\n                    _this.pdfViewerBase.stampAdded = true;\n                    _this.pdfViewer.annotation.triggerAnnotationUnselectEvent();\n                    _this.pdfViewer.annotation.triggerSignatureUnselectEvent();\n                    if (_this.stampParentID === _this.pdfViewer.localeObj.getConstant('Dynamic')) {\n                        _this.pdfViewerBase.isDynamicStamp = true;\n                        _this.pdfViewer.annotationModule.stampAnnotationModule.retrieveDynamicStampAnnotation(args.item.label);\n                    }\n                    else {\n                        _this.pdfViewerBase.isDynamicStamp = false;\n                        _this.pdfViewer.annotationModule.stampAnnotationModule.retrievestampAnnotation(args.item.label);\n                    }\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        _this.stampToolMobileForMobile(_this.pdfViewer.element.id + '_annotation_stamp');\n                    }\n                }\n            }\n        };\n        this.menuItems = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Menu(menuOptions, '#' + this.pdfViewer.element.id + 'contextMenuElement');\n        contextMenuElement.parentElement.classList.add('e-pv-stamp');\n        if (this.pdfViewer.enableRtl) {\n            this.menuItems.enableRtl = true;\n        }\n        return contextMenuElement;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.createCustomStampElement = function () {\n        var stampImage = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', { id: this.pdfViewer.element.id + '_stampElement', attrs: { 'type': 'file' } });\n        stampImage.setAttribute('accept', '.jpg,.jpeg,.png');\n        stampImage.style.position = 'absolute';\n        stampImage.style.left = '0px';\n        stampImage.style.top = '0px';\n        stampImage.style.visibility = 'hidden';\n        document.body.appendChild(stampImage);\n        stampImage.addEventListener('change', this.addStampImage);\n    };\n    AnnotationToolbar.prototype.checkStampAnnotations = function () {\n        if (this.pdfViewer.annotation.stampAnnotationModule.isStampAddMode && this.pdfViewer.selectedItems &&\n            this.pdfViewer.selectedItems.annotations) {\n            for (var i = 0; i < this.pdfViewer.selectedItems.annotations.length; i++) {\n                var annotation = this.pdfViewer.selectedItems.annotations[parseInt(i.toString(), 10)];\n                if (annotation && !annotation.annotName && !annotation.author && (annotation.shapeAnnotationType !== 'Shape' || annotation.shapeAnnotationType !== 'Image')) {\n                    this.pdfViewer.remove(annotation);\n                    this.pdfViewer.annotation.renderAnnotations(annotation.pageIndex, null, null, null);\n                    this.pdfViewer.clearSelection(annotation.pageIndex);\n                }\n            }\n        }\n    };\n    AnnotationToolbar.prototype.createDropDowns = function (isPath) {\n        var _this = this;\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            this.shapeElement = this.pdfViewerBase.getElement('_annotation_shapes');\n            var shapeToolbar = this.createShapeOptions(this.shapeElement.id, true);\n            this.shapeDropDown = this.createDropDownButton(this.shapeElement, 'e-pv-annotation-shape-icon', shapeToolbar.element, this.pdfViewer.localeObj.getConstant('Add Shapes'));\n            this.calibrateElement = this.pdfViewerBase.getElement('_annotation_calibrate');\n            var calibrateToolbar = this.createShapeOptions(this.calibrateElement.id, false);\n            this.calibrateDropDown = this.createDropDownButton(this.calibrateElement, 'e-pv-annotation-calibrate-icon', calibrateToolbar.element, this.pdfViewer.localeObj.getConstant('Calibrate'));\n        }\n        if (!isPath) {\n            this.colorDropDownElement = this.pdfViewerBase.getElement('_annotation_color');\n            this.colorPalette = this.createColorPicker(this.colorDropDownElement.id);\n            this.colorPalette.change = this.onColorPickerChange.bind(this);\n            this.colorDropDown = this.createDropDownButton(this.colorDropDownElement, 'e-pv-annotation-color-icon', this.colorPalette.element.parentElement, this.pdfViewer.localeObj.getConstant('Color edit'));\n            this.colorDropDown.beforeOpen = this.colorDropDownBeforeOpen.bind(this);\n            this.colorDropDown.open = this.colorDropDownOpen.bind(this);\n            this.pdfViewerBase.getElement('_annotation_color-popup').addEventListener('click', this.onColorPickerCancelClick.bind(this));\n        }\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            this.strokeDropDownElement = this.pdfViewerBase.getElement('_annotation_stroke');\n            this.strokeColorPicker = this.createColorPicker(this.strokeDropDownElement.id);\n            this.strokeColorPicker.change = this.onStrokePickerChange.bind(this);\n            this.strokeDropDown = this.createDropDownButton(this.strokeDropDownElement, 'e-pv-annotation-stroke-icon', this.strokeColorPicker.element.parentElement, this.pdfViewer.localeObj.getConstant('Stroke edit'));\n            this.strokeDropDown.beforeOpen = this.strokeDropDownBeforeOpen.bind(this);\n            this.strokeDropDown.open = this.strokeDropDownOpen.bind(this);\n            this.pdfViewerBase.getElement('_annotation_stroke-popup').addEventListener('click', this.onStrokePickerCancelClick.bind(this));\n            this.thicknessElement = this.pdfViewerBase.getElement('_annotation_thickness');\n            var thicknessContainer = this.createThicknessSlider(this.thicknessElement.id);\n            this.thicknessDropDown = this.createDropDownButton(this.thicknessElement, 'e-pv-annotation-thickness-icon', thicknessContainer, this.pdfViewer.localeObj.getConstant('Change thickness'));\n            this.thicknessDropDown.beforeOpen = this.thicknessDropDownBeforeOpen.bind(this);\n            this.thicknessSlider.change = this.thicknessChange.bind(this);\n            this.thicknessSlider.changed = this.thicknessChange.bind(this);\n            if (!this.pdfViewer.enableRtl) {\n                this.thicknessDropDown.open = this.thicknessDropDownOpen.bind(this);\n            }\n        }\n        if (!isPath) {\n            this.opacityDropDownElement = this.pdfViewerBase.getElement('_annotation_opacity');\n            var sliderContainer = this.createSlider(this.opacityDropDownElement.id);\n            this.opacityDropDown = this.createDropDownButton(this.opacityDropDownElement, 'e-pv-annotation-opacity-icon', sliderContainer, this.pdfViewer.localeObj.getConstant('Opacity edit'));\n            this.opacityDropDown.beforeOpen = this.opacityDropDownBeforeOpen.bind(this);\n            this.opacitySlider.change = this.opacityChange.bind(this);\n            this.opacitySlider.changed = this.opacityChange.bind(this);\n            if (!this.pdfViewer.enableRtl) {\n                this.opacityDropDown.open = this.opacityDropDownOpen.bind(this);\n            }\n        }\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            this.fontFamilyElement = this.pdfViewerBase.getElement('_annotation_fontname');\n            this.createDropDownListForFamily(this.fontFamilyElement);\n            //this.fontFamilyElement.style.textAlign = 'left';\n            this.fontFamilyElement.addEventListener('change', function () {\n                _this.onFontFamilyChange.bind(_this);\n            });\n            this.fontSizeElement = this.pdfViewerBase.getElement('_annotation_fontsize');\n            this.createDropDownListForSize(this.fontSizeElement);\n            this.fontColorElement = this.pdfViewerBase.getElement('_annotation_textcolor');\n            this.fontColorPalette = this.createColorPicker(this.fontColorElement.id);\n            this.fontColorPalette.change = this.onFontColorChange.bind(this);\n            this.fontColorDropDown = this.createDropDownButton(this.fontColorElement, 'e-pv-annotation-textcolor-icon', this.fontColorPalette.element.parentElement, this.pdfViewer.localeObj.getConstant('Font color'));\n            this.textAlignElement = this.pdfViewerBase.getElement('_annotation_textalign');\n            this.alignmentToolbar = this.createShapeOptions(this.textAlignElement.id, undefined, true);\n            this.textAlignDropDown = this.createDropDownButton(this.textAlignElement, 'e-pv-annotation-textalign-icon', this.alignmentToolbar.element, this.pdfViewer.localeObj.getConstant('Text Align'));\n            this.textAlignDropDown.beforeOpen = this.textAlignDropDownBeforeOpen.bind(this);\n            this.textPropElement = this.pdfViewerBase.getElement('_annotation_textproperties');\n            this.propertiesToolbar = this.createShapeOptions(this.textPropElement.id, undefined, false, true);\n            this.textPropertiesDropDown = this.createPropDropDownButton(this.textPropElement, 'e-pv-annotation-textprop-icon', this.propertiesToolbar.element, this.pdfViewer.localeObj.getConstant('Text Properties'));\n            this.textPropertiesDropDown.beforeOpen = this.textPropertiesDropDownBeforeOpen.bind(this);\n        }\n    };\n    AnnotationToolbar.prototype.mobileColorpicker = function (id) {\n        var _this = this;\n        this.opacityDropDownElement = this.pdfViewerBase.getElement('_annotation_opacity');\n        var sliderContainer = this.createSlider(this.opacityDropDownElement.id);\n        this.opacityDropDown = this.createDropDownButton(this.opacityDropDownElement, 'e-pv-annotation-opacity-icon', sliderContainer, this.pdfViewer.localeObj.getConstant('Opacity edit'));\n        this.opacityDropDown.beforeOpen = this.opacityDropDownBeforeOpen.bind(this);\n        this.opacitySlider.change = this.opacityChange.bind(this);\n        this.opacitySlider.changed = this.opacityChange.bind(this);\n        if (!this.pdfViewer.enableRtl) {\n            this.opacityDropDown.open = this.opacityDropDownOpen.bind(this);\n        }\n        if (id === this.pdfViewer.element.id + '_annotation_shapes') {\n            id = this.pdfViewer.element.id + '_annotation_shapesIcon';\n        }\n        else if (id === this.pdfViewer.element.id + '_annotation_calibrate') {\n            id = this.pdfViewer.element.id + '_annotation_calibrateIcon';\n        }\n        else if (id === this.pdfViewer.element.id + '_highlight') {\n            id = this.pdfViewer.element.id + '_highlightIcon';\n        }\n        else if (id === this.pdfViewer.element.id + '_underline') {\n            id = this.pdfViewer.element.id + '_underlineIcon';\n        }\n        else if (id === this.pdfViewer.element.id + '_strikethrough') {\n            id = this.pdfViewer.element.id + '_strikethroughIcon';\n        }\n        if (id === this.pdfViewer.element.id + '_annotation_shapesIcon' || id === this.pdfViewer.element.id + '_annotation_calibrateIcon' || id === this.pdfViewer.element.id + '_annotation_freeTextEdit' ||\n            id === this.pdfViewer.element.id + '_highlightIcon' || id === this.pdfViewer.element.id + '_underlineIcon' || id === this.pdfViewer.element.id + '_strikethroughIcon' || id === this.pdfViewer.element.id + '_annotation_inkIcon' || id === this.pdfViewer.element.id + '_annotation_handwrittenSign') {\n            if (id !== this.pdfViewer.element.id + '_annotation_handwrittenSign' && id !== this.pdfViewer.element.id + '_annotation_inkIcon') {\n                this.colorDropDownElement = this.pdfViewerBase.getElement('_annotation_color');\n                this.colorPalette = this.createColorPicker(this.colorDropDownElement.id);\n                this.colorPalette.change = this.onColorPickerChange.bind(this);\n                this.colorDropDown = this.createDropDownButton(this.colorDropDownElement, 'e-pv-annotation-color-icon', this.colorPalette.element.parentElement, this.pdfViewer.localeObj.getConstant('Color edit'));\n                this.colorDropDown.beforeOpen = this.colorDropDownBeforeOpen.bind(this);\n                this.colorDropDown.open = this.colorDropDownOpen.bind(this);\n                this.pdfViewerBase.getElement('_annotation_color-popup').addEventListener('click', this.onColorPickerCancelClick.bind(this));\n            }\n            if (id === this.pdfViewer.element.id + '_annotation_freeTextEdit') {\n                this.fontFamilyElement = this.pdfViewerBase.getElement('_annotation_fontname');\n                this.createDropDownListForFamily(this.fontFamilyElement);\n                this.fontFamilyElement.style.textAlign = 'left';\n                this.fontFamilyElement.addEventListener('change', function () { _this.onFontFamilyChange.bind(_this); });\n                this.fontSizeElement = this.pdfViewerBase.getElement('_annotation_fontsize');\n                this.createDropDownListForSize(this.fontSizeElement);\n                this.fontColorElement = this.pdfViewerBase.getElement('_annotation_textcolor');\n                this.fontColorPalette = this.createColorPicker(this.fontColorElement.id);\n                this.fontColorPalette.change = this.onFontColorChange.bind(this);\n                this.fontColorDropDown = this.createDropDownButton(this.fontColorElement, 'e-pv-annotation-textcolor-icon', this.fontColorPalette.element.parentElement, this.pdfViewer.localeObj.getConstant('Font color'));\n                this.textAlignElement = this.pdfViewerBase.getElement('_annotation_textalign');\n                this.alignmentToolbar = this.createShapeOptions(this.textAlignElement.id, undefined, true);\n                this.textAlignDropDown = this.createDropDownButton(this.textAlignElement, 'e-pv-annotation-textalign-icon', this.alignmentToolbar.element, this.pdfViewer.localeObj.getConstant('Text Align'));\n                this.textAlignDropDown.beforeOpen = this.textAlignDropDownBeforeOpen.bind(this);\n                this.textPropElement = this.pdfViewerBase.getElement('_annotation_textproperties');\n                this.propertiesToolbar = this.createShapeOptions(this.textPropElement.id, undefined, false, true);\n                this.textPropertiesDropDown = this.createPropDropDownButton(this.textPropElement, 'e-pv-annotation-textprop-icon', this.propertiesToolbar.element, this.pdfViewer.localeObj.getConstant('Text Properties'));\n                this.textPropertiesDropDown.beforeOpen = this.textPropertiesDropDownBeforeOpen.bind(this);\n            }\n            if (id === this.pdfViewer.element.id + '_annotation_shapesIcon' || id === this.pdfViewer.element.id + '_annotation_calibrateIcon' || id === this.pdfViewer.element.id + '_annotation_freeTextEdit' ||\n                id === this.pdfViewer.element.id + '_annotation_inkIcon' || id === this.pdfViewer.element.id + '_annotation_handwrittenSign') {\n                this.thicknessElement = this.pdfViewerBase.getElement('_annotation_thickness');\n                var thicknessContainer = this.createThicknessSlider(this.thicknessElement.id);\n                this.thicknessDropDown = this.createDropDownButton(this.thicknessElement, 'e-pv-annotation-thickness-icon', thicknessContainer, this.pdfViewer.localeObj.getConstant('Change thickness'));\n                this.thicknessDropDown.beforeOpen = this.thicknessDropDownBeforeOpen.bind(this);\n                this.thicknessSlider.change = this.thicknessChange.bind(this);\n                this.thicknessSlider.changed = this.thicknessChange.bind(this);\n                if (!this.pdfViewer.enableRtl) {\n                    this.thicknessDropDown.open = this.thicknessDropDownOpen.bind(this);\n                }\n                this.strokeDropDownElement = this.pdfViewerBase.getElement('_annotation_stroke');\n                this.strokeColorPicker = this.createColorPicker(this.strokeDropDownElement.id);\n                this.strokeColorPicker.change = this.onStrokePickerChange.bind(this);\n                this.strokeDropDown = this.createDropDownButton(this.strokeDropDownElement, 'e-pv-annotation-stroke-icon', this.strokeColorPicker.element.parentElement, this.pdfViewer.localeObj.getConstant('Stroke edit'));\n                this.strokeDropDown.beforeOpen = this.strokeDropDownBeforeOpen.bind(this);\n                this.strokeDropDown.open = this.strokeDropDownOpen.bind(this);\n                this.pdfViewerBase.getElement('_annotation_stroke-popup').addEventListener('click', this.onStrokePickerCancelClick.bind(this));\n            }\n        }\n    };\n    AnnotationToolbar.prototype.opacityDropDownOpen = function (args) {\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !this.pdfViewer.enableDesktopMode) {\n            args.element.parentElement.style.left = '0px';\n            args.element.parentElement.style.top = (this.pdfViewerBase.viewerContainer.clientHeight) + 'px';\n        }\n        else {\n            this.calculateToolbarPosition(args);\n        }\n    };\n    AnnotationToolbar.prototype.onColorPickerCancelClick = function (event) {\n        if (event.target.classList.contains('e-cancel')) {\n            this.colorDropDown.toggle();\n        }\n    };\n    AnnotationToolbar.prototype.onStrokePickerCancelClick = function (event) {\n        if (event.target.classList.contains('e-cancel')) {\n            this.strokeDropDown.toggle();\n        }\n    };\n    AnnotationToolbar.prototype.colorDropDownBeforeOpen = function (args) {\n        this.colorPalette.noColor = false;\n        if (this.pdfViewer.annotationModule.textMarkupAnnotationModule) {\n            if (this.pdfViewer.annotationModule.textMarkupAnnotationModule.currentTextMarkupAnnotation) {\n                this.colorPalette.value = this.pdfViewer.annotationModule.textMarkupAnnotationModule.currentTextMarkupAnnotation.color;\n            }\n            else {\n                this.setCurrentColorInPicker();\n            }\n        }\n        if (this.pdfViewer.selectedItems.annotations.length === 1) {\n            this.colorPalette.value = this.pdfViewer.selectedItems.annotations[0].wrapper.children[0].style.fill;\n            this.colorPalette.noColor = true;\n        }\n        else {\n            this.setCurrentColorInPicker();\n        }\n        this.colorPalette.refresh();\n        this.updateColorInIcon(this.colorDropDownElement, this.colorPalette.value);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.setCurrentColorInPicker = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            if (this.pdfViewer.annotationModule.textMarkupAnnotationModule) {\n                switch (this.pdfViewer.annotationModule.textMarkupAnnotationModule.currentTextMarkupAddMode) {\n                    case 'Highlight':\n                        this.setColorInPicker(this.colorPalette, this.pdfViewer.annotationModule.textMarkupAnnotationModule.highlightColor);\n                        break;\n                    case 'Underline':\n                        this.setColorInPicker(this.colorPalette, this.pdfViewer.annotationModule.textMarkupAnnotationModule.underlineColor);\n                        break;\n                    case 'Strikethrough':\n                        this.setColorInPicker(this.colorPalette, this.pdfViewer.annotationModule.textMarkupAnnotationModule.strikethroughColor);\n                        break;\n                }\n            }\n            if (this.pdfViewer.annotation.shapeAnnotationModule) {\n                switch (this.pdfViewer.annotationModule.shapeAnnotationModule.currentAnnotationMode) {\n                    case 'Line':\n                        this.setColorInPicker(this.colorPalette, this.pdfViewer.annotationModule.shapeAnnotationModule.lineFillColor);\n                        break;\n                    case 'Arrow':\n                        this.setColorInPicker(this.colorPalette, this.pdfViewer.annotationModule.shapeAnnotationModule.arrowFillColor);\n                        break;\n                    case 'Rectangle':\n                        this.setColorInPicker(this.colorPalette, this.pdfViewer.annotationModule.shapeAnnotationModule.rectangleFillColor);\n                        break;\n                    case 'Circle':\n                        this.setColorInPicker(this.colorPalette, this.pdfViewer.annotationModule.shapeAnnotationModule.circleFillColor);\n                        break;\n                    case 'Polygon':\n                        this.setColorInPicker(this.colorPalette, this.pdfViewer.annotationModule.shapeAnnotationModule.polygonFillColor);\n                        break;\n                }\n            }\n            if (this.colorDropDownElement) {\n                this.updateColorInIcon(this.colorDropDownElement, this.colorPalette.value);\n            }\n        }\n    };\n    AnnotationToolbar.prototype.colorDropDownOpen = function (args) {\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !this.pdfViewer.enableDesktopMode) {\n            args.element.parentElement.style.top = (this.pdfViewerBase.viewerContainer.clientHeight / 2) + 'px';\n        }\n        this.popupPosition(args, this.colorDropDownElement);\n        this.colorPalette.refresh();\n    };\n    AnnotationToolbar.prototype.strokeDropDownBeforeOpen = function (args) {\n        if (this.pdfViewer.selectedItems.annotations.length === 1) {\n            this.strokeColorPicker.value = this.pdfViewer.selectedItems.annotations[0].wrapper.children[0].style.strokeColor;\n        }\n        else {\n            this.setCurrentStrokeColorInPicker();\n        }\n        this.strokeColorPicker.refresh();\n        this.updateColorInIcon(this.strokeDropDownElement, this.strokeColorPicker.value);\n        this.updateInkannotationItems();\n    };\n    AnnotationToolbar.prototype.setCurrentStrokeColorInPicker = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            if (this.pdfViewer.annotation.shapeAnnotationModule) {\n                switch (this.pdfViewer.annotationModule.shapeAnnotationModule.currentAnnotationMode) {\n                    case 'Line':\n                        this.setColorInPicker(this.strokeColorPicker, this.pdfViewer.annotationModule.shapeAnnotationModule.lineStrokeColor);\n                        break;\n                    case 'Arrow':\n                        this.setColorInPicker(this.strokeColorPicker, this.pdfViewer.annotationModule.shapeAnnotationModule.arrowStrokeColor);\n                        break;\n                    case 'Rectangle':\n                        this.setColorInPicker(this.strokeColorPicker, this.pdfViewer.annotationModule.shapeAnnotationModule.rectangleStrokeColor);\n                        break;\n                    case 'Circle':\n                        this.setColorInPicker(this.strokeColorPicker, this.pdfViewer.annotationModule.shapeAnnotationModule.circleStrokeColor);\n                        break;\n                    case 'Polygon':\n                        this.setColorInPicker(this.strokeColorPicker, this.pdfViewer.annotationModule.shapeAnnotationModule.polygonStrokeColor);\n                        break;\n                }\n            }\n        }\n    };\n    AnnotationToolbar.prototype.strokeDropDownOpen = function (args) {\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !this.pdfViewer.enableDesktopMode) {\n            args.element.parentElement.style.top = (this.pdfViewerBase.viewerContainer.clientHeight / 2) + 'px';\n        }\n        this.popupPosition(args, this.strokeDropDownElement);\n        this.strokeColorPicker.refresh();\n    };\n    AnnotationToolbar.prototype.onFontColorChange = function (args) {\n        var currentColor;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            currentColor = (args.currentValue.hex === '') ? '#ffffff00' : args.currentValue.hex;\n        }\n        else {\n            currentColor = args[0];\n        }\n        if (this.pdfViewer.selectedItems.annotations.length === 1) {\n            this.pdfViewer.annotation.modifyFontColor(currentColor);\n        }\n        else {\n            this.pdfViewer.freeTextSettings.fontColor = currentColor;\n            this.pdfViewer.annotationModule.freeTextAnnotationModule.updateTextProperties();\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.fontColorElementInBlazor = this.pdfViewer.element.querySelector('.e-pv-annotation-textcolor-container');\n            this.updateColorInIcon(this.fontColorElementInBlazor, currentColor);\n        }\n        else {\n            this.updateColorInIcon(this.fontColorElement, currentColor);\n            this.fontColorDropDown.toggle();\n        }\n    };\n    AnnotationToolbar.prototype.onFontFamilyChange = function (args) {\n        var currentValue;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            currentValue = (args && args.fontFamily && args.fontFamily.value) ? args.fontFamily.value : '';\n        }\n        else {\n            currentValue = args;\n        }\n        if (this.pdfViewer.selectedItems.annotations.length === 1 && currentValue) {\n            this.pdfViewer.annotation.modifyFontFamily(currentValue);\n        }\n        else {\n            this.pdfViewer.freeTextSettings.fontFamily = currentValue;\n            this.pdfViewer.annotationModule.freeTextAnnotationModule.updateTextProperties();\n        }\n    };\n    AnnotationToolbar.prototype.onFontSizeChange = function (args, isInteracted) {\n        var currentValue;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            currentValue = (args && args.fontSize && args.fontSize.value) ? args.fontSize.value : '';\n        }\n        else {\n            currentValue = args;\n        }\n        var fontSize = parseFloat(currentValue);\n        if (this.pdfViewer.selectedItems.annotations.length === 1 && currentValue) {\n            var selectedAnnotationId_1 = this.pdfViewer.selectedItems.annotations[0].id;\n            var selectedAnnotation = this.pdfViewer.annotationCollection.filter(function (annotation) { return annotation.uniqueKey === selectedAnnotationId_1; })[0];\n            if (selectedAnnotation && selectedAnnotation.fontSize !== fontSize) {\n                this.pdfViewer.annotation.modifyFontSize(fontSize, isInteracted);\n            }\n        }\n        else {\n            this.pdfViewer.freeTextSettings.fontSize = fontSize;\n            this.pdfViewer.annotationModule.freeTextAnnotationModule.updateTextProperties();\n        }\n    };\n    AnnotationToolbar.prototype.textAlignDropDownBeforeOpen = function (args) {\n        if (this.pdfViewer.selectedItems.annotations.length === 1) {\n            if (args.element.getElementsByTagName('button') && args.element.getElementsByTagName('button').length > 0) {\n                var dropDownOptions = args.element.getElementsByTagName('button');\n                var selectedAnnotation = this.pdfViewer.selectedItems.annotations[0];\n                for (var n = 0; n < dropDownOptions.length; n++) {\n                    if (dropDownOptions[parseInt(n.toString(), 10)]) {\n                        dropDownOptions[parseInt(n.toString(), 10)].classList.remove('textprop-option-active');\n                        if (dropDownOptions[parseInt(n.toString(), 10)].id === (this.pdfViewer.element.id + '_left_align') && selectedAnnotation.textAlign === 'Left') {\n                            dropDownOptions[parseInt(n.toString(), 10)].classList.add('textprop-option-active');\n                        }\n                        if (dropDownOptions[parseInt(n.toString(), 10)].id === (this.pdfViewer.element.id + '_right_align') && selectedAnnotation.textAlign === 'Right') {\n                            dropDownOptions[parseInt(n.toString(), 10)].classList.add('textprop-option-active');\n                        }\n                        if (dropDownOptions[parseInt(n.toString(), 10)].id === (this.pdfViewer.element.id + '_center_align') && selectedAnnotation.textAlign === 'Center') {\n                            dropDownOptions[parseInt(n.toString(), 10)].classList.add('textprop-option-active');\n                        }\n                        if (dropDownOptions[parseInt(n.toString(), 10)].id === (this.pdfViewer.element.id + '_justify_align') && selectedAnnotation.textAlign === 'Justify') {\n                            dropDownOptions[parseInt(n.toString(), 10)].classList.add('textprop-option-active');\n                        }\n                    }\n                }\n            }\n        }\n    };\n    AnnotationToolbar.prototype.textPropertiesDropDownBeforeOpen = function (args) {\n        if (this.pdfViewer.selectedItems.annotations.length === 1) {\n            if (args.element.getElementsByTagName('button') && args.element.getElementsByTagName('button').length > 0) {\n                var dropDownOptions = args.element.getElementsByTagName('button');\n                var selectedAnnotation = this.pdfViewer.selectedItems.annotations[0];\n                for (var n = 0; n < dropDownOptions.length; n++) {\n                    if (dropDownOptions[parseInt(n.toString(), 10)]) {\n                        dropDownOptions[parseInt(n.toString(), 10)].classList.remove('textprop-option-active');\n                        if (dropDownOptions[parseInt(n.toString(), 10)].id === (this.pdfViewer.element.id + '_bold') && selectedAnnotation.font.isBold) {\n                            dropDownOptions[parseInt(n.toString(), 10)].classList.add('textprop-option-active');\n                        }\n                        if (dropDownOptions[parseInt(n.toString(), 10)].id === (this.pdfViewer.element.id + '_italic') && selectedAnnotation.font.isItalic) {\n                            dropDownOptions[parseInt(n.toString(), 10)].classList.add('textprop-option-active');\n                        }\n                        if (dropDownOptions[parseInt(n.toString(), 10)].id === (this.pdfViewer.element.id + '_strikeout') && selectedAnnotation.font.isStrikeout) {\n                            dropDownOptions[parseInt(n.toString(), 10)].classList.add('textprop-option-active');\n                        }\n                        if (dropDownOptions[parseInt(n.toString(), 10)].id === (this.pdfViewer.element.id + '_underline_textinput') && selectedAnnotation.font.isUnderline) {\n                            dropDownOptions[parseInt(n.toString(), 10)].classList.add('textprop-option-active');\n                        }\n                    }\n                }\n            }\n        }\n    };\n    AnnotationToolbar.prototype.onClickTextAlignment = function (args) {\n        var currentValue;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            currentValue = args[0];\n        }\n        else {\n            currentValue = (args && args.item && args.item.value) ? args.item.value : '';\n        }\n        if (this.pdfViewer.selectedItems.annotations.length === 1 && currentValue) {\n            this.pdfViewer.annotation.modifyTextAlignment(currentValue);\n        }\n        else {\n            this.pdfViewer.freeTextSettings.textAlignment = args.item.value;\n            this.pdfViewer.annotationModule.freeTextAnnotationModule.updateTextProperties();\n        }\n        this.updateTextAlignInIcon(currentValue);\n    };\n    AnnotationToolbar.prototype.onClickTextProperties = function (args) {\n        var currentValue;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            currentValue = args[0];\n        }\n        else {\n            currentValue = (args && args.item && args.item.value) ? args.item.value : '';\n        }\n        if (this.pdfViewer.selectedItems.annotations.length === 1 && currentValue) {\n            var fontInfo = { isBold: undefined, isItalic: undefined, isStrikeout: undefined, isUnderline: undefined };\n            if (currentValue === 'bold') {\n                fontInfo.isBold = !(this.pdfViewer.selectedItems.annotations[0].font.isBold);\n            }\n            else if (currentValue === 'italic') {\n                fontInfo.isItalic = !(this.pdfViewer.selectedItems.annotations[0].font.isItalic);\n            }\n            else if (currentValue === 'underline') {\n                fontInfo.isUnderline = !(this.pdfViewer.selectedItems.annotations[0].font.isUnderline);\n            }\n            else if (currentValue === 'strikeout') {\n                fontInfo.isStrikeout = !(this.pdfViewer.selectedItems.annotations[0].font.isStrikeout);\n            }\n            this.pdfViewer.annotation.modifyTextProperties(fontInfo, currentValue);\n        }\n        else {\n            if (currentValue === 'bold') {\n                if (this.pdfViewer.annotationModule.freeTextAnnotationModule.isBold) {\n                    this.pdfViewer.annotationModule.freeTextAnnotationModule.isBold = false;\n                }\n                else {\n                    this.pdfViewer.freeTextSettings.fontStyle = 1;\n                    this.pdfViewer.annotationModule.freeTextAnnotationModule.updateTextProperties();\n                }\n            }\n            else if (currentValue === 'italic') {\n                if (this.pdfViewer.annotationModule.freeTextAnnotationModule.isItalic) {\n                    this.pdfViewer.annotationModule.freeTextAnnotationModule.isItalic = false;\n                }\n                else {\n                    this.pdfViewer.freeTextSettings.fontStyle = 2;\n                    this.pdfViewer.annotationModule.freeTextAnnotationModule.updateTextProperties();\n                }\n            }\n            else if (currentValue === 'underline') {\n                if (this.pdfViewer.annotationModule.freeTextAnnotationModule.isUnderline) {\n                    this.pdfViewer.annotationModule.freeTextAnnotationModule.isUnderline = false;\n                }\n                else {\n                    this.pdfViewer.freeTextSettings.fontStyle = 4;\n                    this.pdfViewer.annotationModule.freeTextAnnotationModule.isStrikethrough = false;\n                    this.pdfViewer.annotationModule.freeTextAnnotationModule.updateTextProperties();\n                }\n            }\n            else if (currentValue === 'strikeout') {\n                if (this.pdfViewer.annotationModule.freeTextAnnotationModule.isStrikethrough) {\n                    this.pdfViewer.annotationModule.freeTextAnnotationModule.isStrikethrough = false;\n                }\n                else {\n                    this.pdfViewer.freeTextSettings.fontStyle = 8;\n                    this.pdfViewer.annotationModule.freeTextAnnotationModule.isUnderline = false;\n                    this.pdfViewer.annotationModule.freeTextAnnotationModule.updateTextProperties();\n                }\n            }\n        }\n        this.updateTextPropertySelection(currentValue);\n    };\n    AnnotationToolbar.prototype.opacityChange = function (args) {\n        var opacityValue = 1;\n        if (args && args.length === 1) {\n            opacityValue = args[0];\n        }\n        else {\n            opacityValue = args.value;\n        }\n        if (this.pdfViewer.annotationModule.textMarkupAnnotationModule) {\n            if (this.pdfViewer.annotationModule.textMarkupAnnotationModule.currentTextMarkupAnnotation) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                    if (this.isCurrentAnnotationOpacitySet && args.name === 'changed') {\n                        this.isCurrentAnnotationOpacitySet = false;\n                    }\n                    else {\n                        this.pdfViewer.annotationModule.textMarkupAnnotationModule.modifyOpacityProperty(args);\n                    }\n                }\n                else {\n                    this.pdfViewer.annotationModule.textMarkupAnnotationModule.modifyOpacityProperty(null, opacityValue);\n                }\n            }\n            else {\n                switch (this.pdfViewer.annotationModule.textMarkupAnnotationModule.currentTextMarkupAddMode) {\n                    case 'Highlight':\n                        this.pdfViewer.annotationModule.textMarkupAnnotationModule.highlightOpacity = opacityValue / 100;\n                        break;\n                    case 'Underline':\n                        this.pdfViewer.annotationModule.textMarkupAnnotationModule.underlineOpacity = opacityValue / 100;\n                        break;\n                    case 'Strikethrough':\n                        this.pdfViewer.annotationModule.textMarkupAnnotationModule.strikethroughOpacity = opacityValue / 100;\n                        break;\n                }\n            }\n        }\n        if (this.pdfViewer.selectedItems.annotations.length === 1) {\n            var currentAnnotations = this.pdfViewer.selectedItems.annotations[0];\n            if (currentAnnotations != null && (currentAnnotations.shapeAnnotationType === 'Stamp' || currentAnnotations.shapeAnnotationType === 'Image')) {\n                var clonedObject = (0,_drawing_drawing_util__WEBPACK_IMPORTED_MODULE_4__.cloneObject)(currentAnnotations);\n                var redoClonedObject = (0,_drawing_drawing_util__WEBPACK_IMPORTED_MODULE_4__.cloneObject)(currentAnnotations);\n                redoClonedObject.opacity = opacityValue / 100;\n                this.pdfViewer.nodePropertyChange(currentAnnotations, { opacity: opacityValue / 100 });\n                this.pdfViewer.annotation.triggerAnnotationPropChange(currentAnnotations, false, false, false, true);\n                this.pdfViewer.annotation.addAction(this.pdfViewer.selectedItems.annotations[0].pageIndex, null, this.pdfViewer.selectedItems.annotations[0], 'stampOpacity', '', clonedObject, redoClonedObject);\n                this.pdfViewer.annotation.stampAnnotationModule.updateSessionStorage(this.pdfViewer.selectedItems.annotations[0], null, 'opacity');\n            }\n            else {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                    this.pdfViewer.annotation.modifyOpacity(opacityValue, true);\n                }\n                else {\n                    if (args.name === 'changed') {\n                        if (args.value !== args.previousValue) {\n                            this.pdfViewer.annotation.modifyOpacity(args);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (this.pdfViewer.annotation.shapeAnnotationModule) {\n                switch (this.pdfViewer.annotation.shapeAnnotationModule.currentAnnotationMode) {\n                    case 'Line':\n                        this.pdfViewer.annotation.shapeAnnotationModule.lineOpacity = opacityValue / 100;\n                        break;\n                    case 'Arrow':\n                        this.pdfViewer.annotation.shapeAnnotationModule.arrowOpacity = opacityValue / 100;\n                        break;\n                    case 'Rectangle':\n                        this.pdfViewer.annotation.shapeAnnotationModule.rectangleOpacity = opacityValue / 100;\n                        break;\n                    case 'Circle':\n                        this.pdfViewer.annotation.shapeAnnotationModule.circleOpacity = opacityValue / 100;\n                        break;\n                    case 'Polygon':\n                        this.pdfViewer.annotation.shapeAnnotationModule.polygonOpacity = opacityValue / 100;\n                        break;\n                }\n            }\n            var annotationModule = this.pdfViewer.annotation;\n            if (annotationModule && annotationModule.inkAnnotationModule) {\n                this.pdfViewer.inkAnnotationSettings.opacity = opacityValue / 100;\n            }\n            if (this.pdfViewer.drawingObject) {\n                this.pdfViewer.drawingObject.opacity = opacityValue / 100;\n                if (this.pdfViewer.drawingObject.shapeAnnotationType === 'FreeText') {\n                    this.pdfViewer.annotation.freeTextAnnotationModule.opacity = opacityValue / 100;\n                }\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.updateOpacityIndicator();\n        }\n    };\n    AnnotationToolbar.prototype.opacityDropDownBeforeOpen = function (args) {\n        if (this.pdfViewer.annotationModule.textMarkupAnnotationModule) {\n            if (this.pdfViewer.annotationModule.textMarkupAnnotationModule.currentTextMarkupAnnotation) {\n                this.isCurrentAnnotationOpacitySet = true;\n                this.opacitySlider.value = this.pdfViewer.annotationModule.textMarkupAnnotationModule.\n                    currentTextMarkupAnnotation.opacity * 100;\n            }\n            else {\n                switch (this.pdfViewer.annotationModule.textMarkupAnnotationModule.currentTextMarkupAddMode) {\n                    case 'Highlight':\n                        this.opacitySlider.value = this.pdfViewer.annotationModule.textMarkupAnnotationModule.highlightOpacity * 100;\n                        break;\n                    case 'Underline':\n                        this.opacitySlider.value = this.pdfViewer.annotationModule.textMarkupAnnotationModule.underlineOpacity * 100;\n                        break;\n                    case 'Strikethrough':\n                        this.opacitySlider.value = this.pdfViewer.annotationModule.textMarkupAnnotationModule.strikethroughOpacity * 100;\n                        break;\n                }\n            }\n        }\n        if (this.pdfViewer.selectedItems.annotations.length === 1) {\n            this.opacitySlider.value = this.pdfViewer.selectedItems.annotations[0].wrapper.children[0].style.opacity * 100;\n        }\n        else {\n            if (this.pdfViewer.annotation.shapeAnnotationModule) {\n                switch (this.pdfViewer.annotation.shapeAnnotationModule.currentAnnotationMode) {\n                    case 'Line':\n                        this.opacitySlider.value = this.pdfViewer.annotation.shapeAnnotationModule.lineOpacity * 100;\n                        break;\n                    case 'Arrow':\n                        this.opacitySlider.value = this.pdfViewer.annotation.shapeAnnotationModule.arrowOpacity * 100;\n                        break;\n                    case 'Rectangle':\n                        this.opacitySlider.value = this.pdfViewer.annotation.shapeAnnotationModule.rectangleOpacity * 100;\n                        break;\n                    case 'Circle':\n                        this.opacitySlider.value = this.pdfViewer.annotation.shapeAnnotationModule.circleOpacity * 100;\n                        break;\n                    case 'Polygon':\n                        this.opacitySlider.value = this.pdfViewer.annotation.shapeAnnotationModule.polygonOpacity * 100;\n                        break;\n                }\n            }\n        }\n        this.updateOpacityIndicator();\n        this.updateInkannotationItems();\n    };\n    AnnotationToolbar.prototype.thicknessDropDownBeforeOpen = function () {\n        if (this.pdfViewer.selectedItems.annotations.length === 1) {\n            this.thicknessSlider.value = this.pdfViewer.selectedItems.annotations[0].wrapper.children[0].style.strokeWidth;\n        }\n        else {\n            if (this.pdfViewer.annotation.shapeAnnotationModule) {\n                switch (this.pdfViewer.annotation.shapeAnnotationModule.currentAnnotationMode) {\n                    case 'Line':\n                        this.thicknessSlider.value = this.pdfViewer.annotation.shapeAnnotationModule.lineThickness;\n                        break;\n                    case 'Arrow':\n                        this.thicknessSlider.value = this.pdfViewer.annotation.shapeAnnotationModule.arrowThickness;\n                        break;\n                    case 'Rectangle':\n                        this.thicknessSlider.value = this.pdfViewer.annotation.shapeAnnotationModule.rectangleThickness;\n                        break;\n                    case 'Circle':\n                        this.thicknessSlider.value = this.pdfViewer.annotation.shapeAnnotationModule.circleThickness;\n                        break;\n                    case 'Polygon':\n                        this.thicknessSlider.value = this.pdfViewer.annotation.shapeAnnotationModule.polygonThickness;\n                        break;\n                }\n            }\n        }\n        this.updateThicknessIndicator();\n        this.updateInkannotationItems();\n    };\n    AnnotationToolbar.prototype.thicknessDropDownOpen = function (args) {\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !this.pdfViewer.enableDesktopMode) {\n            args.element.parentElement.style.left = '0px';\n            args.element.parentElement.style.top = (this.pdfViewerBase.viewerContainer.clientHeight) + 'px';\n        }\n        else {\n            this.calculateToolbarPosition(args);\n        }\n    };\n    AnnotationToolbar.prototype.calculateToolbarPosition = function (args) {\n        if (args.element && args.element.parentElement) {\n            var leftValue = parseFloat(args.element.parentElement.style.left);\n            var width = args.element.parentElement.offsetWidth;\n            if ((leftValue + width) < (this.pdfViewer.element.offsetWidth + 10)) {\n                args.element.parentElement.style.left = (leftValue - width) + 'px';\n            }\n        }\n    };\n    AnnotationToolbar.prototype.thicknessChangeInBlazor = function (args) {\n        if (this.pdfViewer.selectedItems.annotations.length === 1) {\n            this.pdfViewer.annotation.modifyThickness(args[0]);\n        }\n        else {\n            this.ShapeThickness(args[0]);\n        }\n    };\n    AnnotationToolbar.prototype.thicknessChange = function (args) {\n        if (this.pdfViewer.selectedItems.annotations.length === 1) {\n            if (args.name === 'changed') {\n                this.pdfViewer.annotation.modifyThickness(args.value);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                    this.updateThicknessIndicator();\n                }\n                var annotationModule = this.pdfViewer.annotation;\n                var selectedItems = this.pdfViewer.selectedItems.annotations[0];\n                if (annotationModule && annotationModule.inkAnnotationModule && selectedItems && selectedItems.shapeAnnotationType === 'Ink') {\n                    this.pdfViewer.inkAnnotationSettings.thickness = args.value;\n                }\n            }\n        }\n        else {\n            this.ShapeThickness(args.value);\n        }\n    };\n    AnnotationToolbar.prototype.ShapeThickness = function (args) {\n        if (this.pdfViewer.annotation.shapeAnnotationModule) {\n            switch (this.pdfViewer.annotation.shapeAnnotationModule.currentAnnotationMode) {\n                case 'Line':\n                    this.pdfViewer.annotation.shapeAnnotationModule.lineThickness = args;\n                    break;\n                case 'Arrow':\n                    this.pdfViewer.annotation.shapeAnnotationModule.arrowThickness = args;\n                    break;\n                case 'Rectangle':\n                    this.pdfViewer.annotation.shapeAnnotationModule.rectangleThickness = args;\n                    break;\n                case 'Circle':\n                    this.pdfViewer.annotation.shapeAnnotationModule.circleThickness = args;\n                    break;\n                case 'Polygon':\n                    this.pdfViewer.annotation.shapeAnnotationModule.polygonThickness = args;\n                    break;\n            }\n            var annotationModule_1 = this.pdfViewer.annotation;\n            if (annotationModule_1 && annotationModule_1.inkAnnotationModule) {\n                this.pdfViewer.inkAnnotationSettings.thickness = args.value;\n            }\n            if (this.pdfViewer.drawingObject) {\n                this.pdfViewer.drawingObject.thickness = args.value;\n            }\n            if (this.pdfViewer.drawingObject && this.pdfViewer.drawingObject.shapeAnnotationType === 'FreeText') {\n                this.pdfViewer.annotation.freeTextAnnotationModule.borderWidth = args.value;\n            }\n        }\n        var annotationModule = this.pdfViewer.annotation;\n        if (annotationModule && annotationModule.inkAnnotationModule) {\n            this.pdfViewer.inkAnnotationSettings.thickness = args;\n        }\n        if (this.pdfViewer.drawingObject) {\n            this.pdfViewer.drawingObject.thickness = args;\n        }\n        if (this.pdfViewer.drawingObject && this.pdfViewer.drawingObject.shapeAnnotationType === 'FreeText') {\n            this.pdfViewer.annotation.freeTextAnnotationModule.borderWidth = args;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.updateThicknessIndicator();\n        }\n    };\n    AnnotationToolbar.prototype.createDropDownButton = function (element, iconClass, target, tooltipText) {\n        var dropDownButton = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_2__.DropDownButton({ iconCss: iconClass + ' e-pv-icon', target: target });\n        if (this.pdfViewer.enableRtl) {\n            dropDownButton.enableRtl = true;\n        }\n        dropDownButton.appendTo(element);\n        this.primaryToolbar.createTooltip(element, tooltipText);\n        element.setAttribute('aria-label', tooltipText);\n        return dropDownButton;\n    };\n    AnnotationToolbar.prototype.createShapeOptions = function (idString, isShape, isAlign, isTextProp) {\n        var toolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: idString + '_target', className: 'e-pv-shapes-toolbar' });\n        document.body.appendChild(toolbarElement);\n        var toolbar;\n        if (isAlign) {\n            toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({ items: this.textAlignmentToolbarItems(), overflowMode: 'MultiRow' }, toolbarElement);\n            toolbar.isStringTemplate = true;\n            this.afterAlignmentToolbarCreation();\n        }\n        else if (isTextProp) {\n            toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({ items: this.textPropertiesToolbarItems(), overflowMode: 'MultiRow' }, toolbarElement);\n            toolbar.isStringTemplate = true;\n            this.afterPropertiesToolbarCreation();\n        }\n        else {\n            if (isShape) {\n                if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n                    toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({ items: this.createShapeToolbarItems(), overflowMode: 'MultiRow', clicked: this.onShapeToolbarClicked.bind(this) }, toolbarElement);\n                    toolbar.isStringTemplate = true;\n                    this.afterShapeToolbarCreation();\n                }\n                else {\n                    this.toolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: idString + '_target', className: 'e-pv-mobile-annotation-toolbar', styles: 'bottom: 0px; position: absolute; width: 100%; float: left' });\n                    this.pdfViewerBase.viewerMainContainer.appendChild(this.toolbarElement);\n                    toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({ items: this.createShapeToolbarItemsForMobile(), overflowMode: 'Scrollable', clicked: this.onShapeToolbarClicked.bind(this) }, this.toolbarElement);\n                    toolbar.isStringTemplate = true;\n                    this.afterShapeToolbarCreationForMobile();\n                }\n            }\n            else {\n                toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({ items: this.createCalibrateToolbarItems(), overflowMode: 'MultiRow', clicked: this.onCalibrateToolbarClicked.bind(this) }, toolbarElement);\n                toolbar.isStringTemplate = true;\n                this.afterCalibrateToolbarCreation();\n            }\n        }\n        return toolbar;\n    };\n    AnnotationToolbar.prototype.createPropertyToolbarForMobile = function (shapeType) {\n        var _this = this;\n        var colorTemplate = this.pdfViewer.toolbarModule.annotationToolbarModule.getTemplate('span', '_annotation_color', 'e-pv-annotation-color-container');\n        var strokeTemplate = this.pdfViewer.toolbarModule.annotationToolbarModule.getTemplate('span', '_annotation_stroke', 'e-pv-annotation-stroke-container');\n        var thicknessTemplate = this.getTemplate('span', '_annotation_thickness', 'e-pv-annotation-thickness-container');\n        var opacityTemplate = this.getTemplate('span', '_annotation_opacity', 'e-pv-annotation-opacity-container');\n        var fontFamilyTemplate = this.getTemplate('input', '_annotation_fontname', 'e-pv-annotation-fontname-container');\n        var fontSizeTemplate = this.getTemplate('input', '_annotation_fontsize', 'e-pv-annotation-fontsize-container');\n        var textColorTemplate = this.getTemplate('span', '_annotation_textcolor', 'e-pv-annotation-textcolor-container');\n        var alignmentTemplate = this.getTemplate('span', '_annotation_textalign', 'e-pv-annotation-textalign-container');\n        var textPropertiesTemplate = this.getTemplate('span', '_annotation_textproperties', 'e-pv-annotation-textprop-container');\n        var items = [];\n        if (shapeType === 'Polygon' || shapeType === 'Rectangle' || shapeType === 'Ellipse' || shapeType === 'Line' || shapeType === 'LineWidthArrowHead' || shapeType === 'Distance' || shapeType === 'Perimeter' || shapeType === 'Radius' || shapeType === 'FreeText') {\n            if (shapeType === 'FreeText') {\n                items.push({ prefixIcon: 'e-pv-freetext-icon e-pv-icon', className: 'e-pv-annotation-freetextedit-container' });\n                items.push({ type: 'Separator', align: 'Left' });\n                items.push({ template: fontFamilyTemplate });\n                items.push({ template: fontSizeTemplate });\n                items.push({ template: textColorTemplate });\n                items.push({ template: alignmentTemplate });\n                items.push({ template: textPropertiesTemplate });\n            }\n            if (shapeType === 'Polygon') {\n                if (this.pdfViewer.selectedItems.annotations[0].measureType === 'Area') {\n                    items.push({ prefixIcon: 'e-pv-calibrate-area-icon e-pv-icon' });\n                    items.push({ type: 'Separator', align: 'Left' });\n                }\n                else if (this.pdfViewer.selectedItems.annotations[0].measureType === 'Volume') {\n                    items.push({ prefixIcon: 'e-pv-calibrate-volume-icon e-pv-icon' });\n                    items.push({ type: 'Separator', align: 'Left' });\n                }\n                else {\n                    items.push({ prefixIcon: 'e-pv-shape-pentagon-icon e-pv-icon' });\n                    items.push({ type: 'Separator', align: 'Left' });\n                }\n            }\n            else if (shapeType === 'Rectangle') {\n                items.push({ prefixIcon: 'e-pv-shape-rectangle-icon e-pv-icon' });\n                items.push({ type: 'Separator', align: 'Left' });\n            }\n            else if (shapeType === 'Ellipse') {\n                items.push({ prefixIcon: 'e-pv-shape-circle-icon e-pv-icon' });\n                items.push({ type: 'Separator', align: 'Left' });\n            }\n            else if (shapeType === 'Line') {\n                if (this.pdfViewer.selectedItems.annotations[0].measureType === 'Perimeter') {\n                    items.push({ prefixIcon: 'e-pv-calibrate-perimeter-icon e-pv-icon' });\n                    items.push({ type: 'Separator', align: 'Left' });\n                }\n                else {\n                    items.push({ prefixIcon: 'e-pv-shape-line-icon e-pv-icon' });\n                    items.push({ type: 'Separator', align: 'Left' });\n                }\n            }\n            else if (shapeType === 'LineWidthArrowHead') {\n                items.push({ prefixIcon: 'e-pv-shape-arrow-icon e-pv-icon' });\n                items.push({ type: 'Separator', align: 'Left' });\n            }\n            else if (shapeType === 'Distance') {\n                items.push({ prefixIcon: 'e-pv-calibrate-distance-icon e-pv-icon' });\n                items.push({ type: 'Separator', align: 'Left' });\n            }\n            else if (shapeType === 'Perimeter') {\n                items.push({ prefixIcon: 'e-pv-calibrate-perimeter-icon e-pv-icon' });\n                items.push({ type: 'Separator', align: 'Left' });\n            }\n            else if (shapeType === 'Radius') {\n                items.push({ prefixIcon: 'e-pv-calibrate-radius-icon e-pv-icon' });\n                items.push({ type: 'Separator', align: 'Left' });\n            }\n            items.push({ template: colorTemplate });\n            items.push({ template: strokeTemplate });\n            items.push({ template: thicknessTemplate });\n        }\n        else if (shapeType === 'Path' || shapeType === 'Ink' || shapeType === 'HandWrittenSignature' || shapeType === 'SignatureText') {\n            if (shapeType === 'Path' || shapeType === 'Ink') {\n                items.push({ prefixIcon: 'e-pv-inkannotation-icon e-pv-icon' });\n                items.push({ type: 'Separator', align: 'Left' });\n            }\n            else if (shapeType === 'HandWrittenSignature' || shapeType === 'SignatureText') {\n                items.push({ prefixIcon: 'e-pv-handwritten-icon e-pv-icon' });\n                items.push({ type: 'Separator', align: 'Left' });\n            }\n            items.push({ template: strokeTemplate });\n            items.push({ template: thicknessTemplate });\n        }\n        else if (shapeType === 'Underline' || shapeType === 'Highlight' || shapeType === 'Strikethrough') {\n            if (shapeType === 'Highlight') {\n                items.push({ prefixIcon: 'e-pv-highlight-icon e-pv-icon' });\n                items.push({ type: 'Separator', align: 'Left' });\n            }\n            else if (shapeType === 'Underline') {\n                items.push({ prefixIcon: 'e-pv-underline-icon e-pv-icon' });\n                items.push({ type: 'Separator', align: 'Left' });\n            }\n            else if (shapeType === 'Strikethrough') {\n                items.push({ prefixIcon: 'e-pv-strikethrough-icon e-pv-icon' });\n                items.push({ type: 'Separator', align: 'Left' });\n            }\n            items.push({ template: colorTemplate });\n        }\n        else if (shapeType === 'Stamp' || shapeType === 'Image') {\n            items.push({ prefixIcon: 'e-pv-stamp-icon e-pv-icon' });\n            items.push({ type: 'Separator', align: 'Left' });\n        }\n        else if (shapeType === 'StickyNotes') {\n            items.push({ prefixIcon: 'e-pv-comment-icon e-pv-icon' });\n            items.push({ type: 'Separator', align: 'Left' });\n        }\n        items.push({ template: opacityTemplate });\n        items.push({\n            prefixIcon: 'e-pv-comment-panel-icon e-pv-icon', className: 'e-pv-comment-panel-icon-container', id: this.pdfViewer.element.id + '_annotation_commentPanel', align: 'Right', click: function (args) {\n                _this.pdfViewer.annotationModule.showCommentsPanel();\n            }\n        });\n        items.push({\n            prefixIcon: 'e-pv-annotation-delete-icon e-pv-icon', className: 'e-pv-annotation-delete-container', id: this.pdfViewer.element.id + '_annotation_delete', align: 'Right', click: function (args) {\n                _this.pdfViewer.annotationModule.deleteAnnotation();\n                _this.propertyToolbar.destroy();\n                _this.toolbarCreated = false;\n                _this.createAnnotationToolbarForMobile();\n                _this.adjustMobileViewer();\n            }\n        });\n        return items;\n    };\n    AnnotationToolbar.prototype.createStampToolbarItemsForMobile = function () {\n        var opacityTemplate = this.getTemplate('span', '_annotation_opacity', 'e-pv-annotation-opacity-container');\n        var items = [];\n        items.push({ prefixIcon: 'e-pv-backward-icon e-pv-icon', tooltipText: this.pdfViewer.localeObj.getConstant('Go Back'), id: this.pdfViewer.element.id + '_backward', click: this.goBackToToolbar.bind(this) });\n        items.push({ type: 'Separator', align: 'Left' });\n        items.push({ template: opacityTemplate });\n        return items;\n    };\n    AnnotationToolbar.prototype.createShapeToolbarItemsForMobile = function () {\n        var colorTemplate = this.pdfViewer.toolbarModule.annotationToolbarModule.getTemplate('span', '_annotation_color', 'e-pv-annotation-color-container');\n        var strokeTemplate = this.pdfViewer.toolbarModule.annotationToolbarModule.getTemplate('span', '_annotation_stroke', 'e-pv-annotation-stroke-container');\n        var thicknessTemplate = this.getTemplate('span', '_annotation_thickness', 'e-pv-annotation-thickness-container');\n        var opacityTemplate = this.getTemplate('span', '_annotation_opacity', 'e-pv-annotation-opacity-container');\n        var items = [];\n        items.push({ prefixIcon: 'e-pv-backward-icon e-pv-icon', tooltipText: this.pdfViewer.localeObj.getConstant('Go Back'), id: this.pdfViewer.element.id + '_backward', click: this.goBackToToolbar.bind(this) });\n        items.push({ prefixIcon: 'e-pv-shape-line-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_shape_line', text: this.pdfViewer.localeObj.getConstant('Line Shape'), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-shape-arrow-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_shape_arrow', text: this.pdfViewer.localeObj.getConstant('Arrow Shape'), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-shape-rectangle-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_shape_rectangle', text: this.pdfViewer.localeObj.getConstant('Rectangle Shape'), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-shape-circle-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_shape_circle', text: this.pdfViewer.localeObj.getConstant('Circle Shape'), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-shape-pentagon-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_shape_pentagon', text: this.pdfViewer.localeObj.getConstant('Pentagon Shape'), align: 'Left' });\n        items.push({ type: 'Separator', align: 'Left' });\n        items.push({ template: colorTemplate });\n        items.push({ template: strokeTemplate });\n        items.push({ template: thicknessTemplate });\n        items.push({ template: opacityTemplate });\n        return items;\n    };\n    AnnotationToolbar.prototype.createCalibrateToolbarItemsForMobile = function () {\n        var colorTemplate = this.pdfViewer.toolbarModule.annotationToolbarModule.getTemplate('span', '_annotation_color', 'e-pv-annotation-color-container');\n        var strokeTemplate = this.pdfViewer.toolbarModule.annotationToolbarModule.getTemplate('span', '_annotation_stroke', 'e-pv-annotation-stroke-container');\n        var thicknessTemplate = this.getTemplate('span', '_annotation_thickness', 'e-pv-annotation-thickness-container');\n        var opacityTemplate = this.getTemplate('span', '_annotation_opacity', 'e-pv-annotation-opacity-container');\n        var items = [];\n        items.push({ prefixIcon: 'e-pv-backward-icon e-pv-icon', tooltipText: this.pdfViewer.localeObj.getConstant('Go Back'), id: this.pdfViewer.element.id + '_backward', click: this.goBackToToolbar.bind(this) });\n        items.push({ prefixIcon: 'e-pv-calibrate-distance-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_calibrate_distance', text: this.pdfViewer.localeObj.getConstant(''), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-calibrate-perimeter-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_calibrate_perimeter', text: this.pdfViewer.localeObj.getConstant(''), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-calibrate-area-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_calibrate_area', text: this.pdfViewer.localeObj.getConstant(''), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-calibrate-radius-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_calibrate_radius', text: this.pdfViewer.localeObj.getConstant(''), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-calibrate-volume-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_calibrate_volume', text: this.pdfViewer.localeObj.getConstant(''), align: 'Left' });\n        items.push({ type: 'Separator', align: 'Left' });\n        items.push({ template: colorTemplate });\n        items.push({ template: strokeTemplate });\n        items.push({ template: thicknessTemplate });\n        items.push({ template: opacityTemplate });\n        return items;\n    };\n    AnnotationToolbar.prototype.handleShapeTool = function (type) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            var selectedItems = document.querySelectorAll('.e-pv-select');\n            for (var i = 0; i < selectedItems.length; i++) {\n                if (selectedItems[parseInt(i.toString(), 10)].id !== type && selectedItems[parseInt(i.toString(), 10)].id !== this.pdfViewer.element.id + '_annotation') {\n                    selectedItems[parseInt(i.toString(), 10)].classList.remove('e-pv-select');\n                }\n            }\n        }\n    };\n    AnnotationToolbar.prototype.createPropDropDownButton = function (element, iconClass, target, tooltipText) {\n        var dropDownButton = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_2__.DropDownButton({ iconCss: iconClass + ' e-pv-icon', target: target, cssClass: 'e-caret-hide' });\n        if (this.pdfViewer.enableRtl) {\n            dropDownButton.enableRtl = true;\n        }\n        dropDownButton.appendTo(element);\n        this.primaryToolbar.createTooltip(element, tooltipText);\n        element.setAttribute('aria-label', tooltipText);\n        return dropDownButton;\n    };\n    AnnotationToolbar.prototype.textAlignmentToolbarItems = function () {\n        var items = [];\n        items.push({ prefixIcon: 'e-pv-left-align-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_left_align', align: 'Left', value: 'Left', click: this.onClickTextAlignment.bind(this) });\n        items.push({ prefixIcon: 'e-pv-center-align-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_center_align', align: 'Left', value: 'Center', click: this.onClickTextAlignment.bind(this) });\n        items.push({ prefixIcon: 'e-pv-right-align-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_right_align', align: 'Left', value: 'Right', click: this.onClickTextAlignment.bind(this) });\n        items.push({ prefixIcon: 'e-pv-justfiy-align-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_justify_align', align: 'Left', value: 'Justify', click: this.onClickTextAlignment.bind(this) });\n        return items;\n    };\n    AnnotationToolbar.prototype.afterAlignmentToolbarCreation = function () {\n        this.alignLeftElement = this.primaryToolbar.addClassToolbarItem('_left_align', 'e-pv-left-align', this.pdfViewer.localeObj.getConstant('Align left'));\n        this.alignRightElement = this.primaryToolbar.addClassToolbarItem('_right_align', 'e-pv-right-align', this.pdfViewer.localeObj.getConstant('Align right'));\n        this.alignCenterElement = this.primaryToolbar.addClassToolbarItem('_center_align', 'e-pv-center-align', this.pdfViewer.localeObj.getConstant('Center'));\n        this.alignJustifyElement = this.primaryToolbar.addClassToolbarItem('_justify_align', 'e-pv-justfiy-align', this.pdfViewer.localeObj.getConstant('Justify'));\n    };\n    AnnotationToolbar.prototype.afterPropertiesToolbarCreation = function () {\n        this.boldElement = this.primaryToolbar.addClassToolbarItem('_bold', 'e-pv-bold', this.pdfViewer.localeObj.getConstant('Bold'));\n        this.italicElement = this.primaryToolbar.addClassToolbarItem('_italic', 'e-pv-italic', this.pdfViewer.localeObj.getConstant('Italic'));\n        this.fontStyleStrikethroughItem = this.primaryToolbar.addClassToolbarItem('_strikeout', 'e-pv-strikeout', this.pdfViewer.localeObj.getConstant('Strikethroughs'));\n        this.fontStyleUnderlineItem = this.primaryToolbar.addClassToolbarItem('_underline_textinput', 'e-pv-underlinetext', this.pdfViewer.localeObj.getConstant('Underlines'));\n    };\n    AnnotationToolbar.prototype.createDropDownListForSize = function (fontSelectElement) {\n        // eslint-disable-next-line\n        var proxy = this;\n        var fontSize = ['8px', '9px', '10px', '11px', '12px', '14px', '16px', '18px', '20px', '22px', '24px', '26px', '28px', '36px', '48px', '72px', '96px'];\n        if (!this.pdfViewer.enableRtl) {\n            this.fontSize = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_5__.ComboBox({\n                dataSource: fontSize,\n                cssClass: 'e-pv-prop-dropdown',\n                allowCustom: true,\n                showClearButton: false,\n                width: '80px',\n                popupWidth: '100px'\n            });\n        }\n        else {\n            this.fontSize = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_5__.ComboBox({\n                dataSource: fontSize,\n                cssClass: 'e-pv-prop-dropdown-rtl',\n                allowCustom: true,\n                showClearButton: false,\n                width: '80px',\n                popupWidth: '100px',\n                enableRtl: true\n            });\n        }\n        this.fontSize.value = '16px';\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(fontSelectElement)) {\n            this.fontSize.appendTo(fontSelectElement);\n            var toolTipElement = fontSelectElement.parentElement ? fontSelectElement.parentElement : fontSelectElement;\n            this.primaryToolbar.createTooltip(toolTipElement, this.pdfViewer.localeObj.getConstant('Font size'));\n            fontSelectElement.setAttribute('aria-label', this.pdfViewer.localeObj.getConstant('Font size'));\n        }\n        this.fontSize.addEventListener('change', function (args) {\n            var isUserInteracted = args.isInteracted;\n            proxy.onFontSizeChange(proxy, isUserInteracted);\n        });\n    };\n    AnnotationToolbar.prototype.createDropDownListForFamily = function (fontSelectElement) {\n        var _this = this;\n        var fontStyle = [{ FontName: 'Helvetica' },\n            { FontName: 'Courier' }, { FontName: 'Symbol' }, { FontName: 'Times New Roman' }];\n        if (!this.pdfViewer.enableRtl) {\n            this.fontFamily = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_5__.ComboBox({\n                dataSource: fontStyle,\n                query: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_6__.Query().select(['FontName']),\n                fields: { text: 'FontName', value: 'FontName' },\n                cssClass: 'e-pv-prop-dropdown',\n                itemTemplate: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.initializeCSPTemplate)(function (data) { return \"<span style=\\\"font-family: \" + data.FontName + \";\\\">\" + data.FontName + \"</span>\"; }),\n                allowCustom: true,\n                showClearButton: false,\n                width: '110px',\n                popupWidth: '190px'\n            });\n        }\n        else {\n            this.fontFamily = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_5__.ComboBox({\n                dataSource: fontStyle,\n                query: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_6__.Query().select(['FontName']),\n                fields: { text: 'FontName', value: 'FontName' },\n                cssClass: 'e-pv-prop-dropdown-rtl',\n                itemTemplate: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.initializeCSPTemplate)(function (data) { return \"<span style=\\\"font-family: \" + data.FontName + \";\\\">\" + data.FontName + \"</span>\"; }),\n                allowCustom: true,\n                showClearButton: false,\n                width: '110px',\n                popupWidth: '190px',\n                enableRtl: true\n            });\n        }\n        this.fontFamily.isStringTemplate = true;\n        this.fontFamily.value = 'Helvetica';\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(fontSelectElement)) {\n            this.fontFamily.appendTo(fontSelectElement);\n            var toolTipElement = fontSelectElement.parentElement ? fontSelectElement.parentElement : fontSelectElement;\n            this.primaryToolbar.createTooltip(toolTipElement, this.pdfViewer.localeObj.getConstant('Font family'));\n            fontSelectElement.setAttribute('aria-label', this.pdfViewer.localeObj.getConstant('Font family'));\n        }\n        this.fontFamily.addEventListener('change', function () {\n            _this.onFontFamilyChange(_this);\n        });\n    };\n    AnnotationToolbar.prototype.textPropertiesToolbarItems = function () {\n        var items = [];\n        items.push({ prefixIcon: 'e-pv-bold-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_bold', align: 'Left', value: 'bold', click: this.onClickTextProperties.bind(this) });\n        items.push({ prefixIcon: 'e-pv-italic-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_italic', align: 'Left', value: 'italic', click: this.onClickTextProperties.bind(this) });\n        items.push({ prefixIcon: 'e-pv-strikeout-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_strikeout', align: 'Left', value: 'strikeout', click: this.onClickTextProperties.bind(this) });\n        items.push({ prefixIcon: 'e-pv-underlinetext-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_underline_textinput', align: 'Left', value: 'underline', click: this.onClickTextProperties.bind(this) });\n        return items;\n    };\n    AnnotationToolbar.prototype.createShapeToolbarItems = function () {\n        var items = [];\n        items.push({ prefixIcon: 'e-pv-shape-line-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_shape_line', text: this.pdfViewer.localeObj.getConstant('Line Shape'), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-shape-arrow-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_shape_arrow', text: this.pdfViewer.localeObj.getConstant('Arrow Shape'), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-shape-rectangle-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_shape_rectangle', text: this.pdfViewer.localeObj.getConstant('Rectangle Shape'), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-shape-circle-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_shape_circle', text: this.pdfViewer.localeObj.getConstant('Circle Shape'), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-shape-pentagon-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_shape_pentagon', text: this.pdfViewer.localeObj.getConstant('Pentagon Shape'), align: 'Left' });\n        return items;\n    };\n    AnnotationToolbar.prototype.createCalibrateToolbarItems = function () {\n        var items = [];\n        items.push({ prefixIcon: 'e-pv-calibrate-distance-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_calibrate_distance', text: this.pdfViewer.localeObj.getConstant(''), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-calibrate-perimeter-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_calibrate_perimeter', text: this.pdfViewer.localeObj.getConstant(''), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-calibrate-area-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_calibrate_area', text: this.pdfViewer.localeObj.getConstant(''), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-calibrate-radius-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_calibrate_radius', text: this.pdfViewer.localeObj.getConstant(''), align: 'Left' });\n        items.push({ prefixIcon: 'e-pv-calibrate-volume-icon e-pv-icon', cssClass: '', id: this.pdfViewer.element.id + '_calibrate_volume', text: this.pdfViewer.localeObj.getConstant(''), align: 'Left' });\n        return items;\n    };\n    AnnotationToolbar.prototype.onCalibrateToolbarClicked = function (args) {\n        var elementId = this.pdfViewer.element.id;\n        var measureModule = this.pdfViewer.annotation.measureAnnotationModule;\n        this.deselectAllItems();\n        this.deselectAllItemsForMobile();\n        this.resetFreeTextAnnot();\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            var element = args.originalEvent.target;\n            this.pdfViewer.toolbarModule.selectItem(element.parentElement);\n        }\n        switch (args.originalEvent.target.id) {\n            case elementId + '_calibrate_distance':\n            case elementId + '_calibrate_distanceIcon':\n                measureModule.setAnnotationType('Distance');\n                this.onShapeDrawSelection(false);\n                this.updateColorInIcon(this.colorDropDownElement, measureModule.distanceFillColor);\n                this.updateColorInIcon(this.strokeDropDownElement, measureModule.distanceStrokeColor);\n                this.handleShapeTool(elementId + '_calibrate_distance');\n                break;\n            case elementId + '_calibrate_perimeter':\n            case elementId + '_calibrate_perimeterIcon':\n                measureModule.setAnnotationType('Perimeter');\n                this.onShapeDrawSelection(false);\n                this.updateColorInIcon(this.colorDropDownElement, measureModule.perimeterFillColor);\n                this.updateColorInIcon(this.strokeDropDownElement, measureModule.perimeterStrokeColor);\n                this.handleShapeTool(elementId + '_calibrate_perimeter');\n                break;\n            case elementId + '_calibrate_area':\n            case elementId + '_calibrate_areaIcon':\n                measureModule.setAnnotationType('Area');\n                this.onShapeDrawSelection(false);\n                this.updateColorInIcon(this.colorDropDownElement, measureModule.areaFillColor);\n                this.updateColorInIcon(this.strokeDropDownElement, measureModule.areaStrokeColor);\n                this.handleShapeTool(elementId + '_calibrate_area');\n                break;\n            case elementId + '_calibrate_radius':\n            case elementId + '_calibrate_radiusIcon':\n                measureModule.setAnnotationType('Radius');\n                this.onShapeDrawSelection(false);\n                this.updateColorInIcon(this.colorDropDownElement, measureModule.radiusFillColor);\n                this.updateColorInIcon(this.strokeDropDownElement, measureModule.radiusStrokeColor);\n                this.handleShapeTool(elementId + '_calibrate_radius');\n                break;\n            case elementId + '_calibrate_volume':\n            case elementId + '_calibrate_volumeIcon':\n                measureModule.setAnnotationType('Volume');\n                this.onShapeDrawSelection(false);\n                this.updateColorInIcon(this.colorDropDownElement, measureModule.volumeFillColor);\n                this.updateColorInIcon(this.strokeDropDownElement, measureModule.volumeStrokeColor);\n                this.handleShapeTool(elementId + '_calibrate_volume');\n                break;\n        }\n    };\n    AnnotationToolbar.prototype.onShapeDrawSelection = function (isShape) {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.updateInteractionTools();\n            this.enableAnnotationPropertiesTools(true);\n            if (isShape) {\n                this.shapeDropDown.toggle();\n            }\n            else {\n                this.calibrateDropDown.toggle();\n            }\n        }\n        this.pdfViewer.annotation.triggerAnnotationUnselectEvent();\n        this.pdfViewer.annotation.triggerSignatureUnselectEvent();\n    };\n    AnnotationToolbar.prototype.afterCalibrateToolbarCreationForMobile = function () {\n        this.primaryToolbar.addClassToolbarItem('_calibrate_distance', 'e-pv-calibrate-distance', this.pdfViewer.localeObj.getConstant('Calibrate Distance'));\n        this.primaryToolbar.addClassToolbarItem('_calibrate_perimeter', 'e-pv-calibrate-perimeter', this.pdfViewer.localeObj.getConstant('Calibrate Perimeter'));\n        this.primaryToolbar.addClassToolbarItem('_calibrate_area', 'e-pv-calibrate-area', this.pdfViewer.localeObj.getConstant('Calibrate Area'));\n        this.primaryToolbar.addClassToolbarItem('_calibrate_radius', 'e-pv-calibrate-radius', this.pdfViewer.localeObj.getConstant('Calibrate Radius'));\n        this.primaryToolbar.addClassToolbarItem('_calibrate_volume', 'e-pv-calibrate-volume', this.pdfViewer.localeObj.getConstant('Calibrate Volume'));\n    };\n    AnnotationToolbar.prototype.afterShapeToolbarCreationForMobile = function () {\n        this.primaryToolbar.addClassToolbarItem('_annotation_color', 'e-pv-annotation-color-container', this.pdfViewer.localeObj.getConstant('Change Color'));\n        this.primaryToolbar.addClassToolbarItem('_annotation_stroke', 'e-pv-annotation-stroke-container', this.pdfViewer.localeObj.getConstant('Change Stroke Color'));\n        this.primaryToolbar.addClassToolbarItem('_annotation_thickness', 'e-pv-annotation-thickness-container', this.pdfViewer.localeObj.getConstant('Chnage Border Thickness'));\n        this.primaryToolbar.addClassToolbarItem('_annotation_opacity', 'e-annotation-opacity-container', this.pdfViewer.localeObj.getConstant('Change Opacity'));\n        this.primaryToolbar.addClassToolbarItem('_shape_line', 'e-pv-shape-line', this.pdfViewer.localeObj.getConstant('Add line'));\n        this.primaryToolbar.addClassToolbarItem('_shape_arrow', 'e-pv-shape-arrow', this.pdfViewer.localeObj.getConstant('Add arrow'));\n        this.primaryToolbar.addClassToolbarItem('_shape_rectangle', 'e-pv-shape-rectangle', this.pdfViewer.localeObj.getConstant('Add rectangle'));\n        this.primaryToolbar.addClassToolbarItem('_shape_circle', 'e-pv-shape-circle', this.pdfViewer.localeObj.getConstant('Add circle'));\n        this.primaryToolbar.addClassToolbarItem('_shape_pentagon', 'e-pv-shape-pentagon', this.pdfViewer.localeObj.getConstant('Add polygon'));\n    };\n    AnnotationToolbar.prototype.afterShapeToolbarCreation = function () {\n        this.lineElement = this.primaryToolbar.addClassToolbarItem('_shape_line', 'e-pv-shape-line', this.pdfViewer.localeObj.getConstant('Add line'));\n        this.arrowElement = this.primaryToolbar.addClassToolbarItem('_shape_arrow', 'e-pv-shape-arrow', this.pdfViewer.localeObj.getConstant('Add arrow'));\n        this.rectangleElement = this.primaryToolbar.addClassToolbarItem('_shape_rectangle', 'e-pv-shape-rectangle', this.pdfViewer.localeObj.getConstant('Add rectangle'));\n        this.circleElement = this.primaryToolbar.addClassToolbarItem('_shape_circle', 'e-pv-shape-circle', this.pdfViewer.localeObj.getConstant('Add circle'));\n        this.polygonElement = this.primaryToolbar.addClassToolbarItem('_shape_pentagon', 'e-pv-shape-pentagon', this.pdfViewer.localeObj.getConstant('Add polygon'));\n    };\n    AnnotationToolbar.prototype.afterCalibrateToolbarCreation = function () {\n        this.calibrateDistance = this.primaryToolbar.addClassToolbarItem('_calibrate_distance', 'e-pv-calibrate-distance', this.pdfViewer.localeObj.getConstant('Calibrate Distance'));\n        this.calibratePerimeter = this.primaryToolbar.addClassToolbarItem('_calibrate_perimeter', 'e-pv-calibrate-perimeter', this.pdfViewer.localeObj.getConstant('Calibrate Perimeter'));\n        this.calibrateArea = this.primaryToolbar.addClassToolbarItem('_calibrate_area', 'e-pv-calibrate-area', this.pdfViewer.localeObj.getConstant('Calibrate Area'));\n        this.calibrateRadius = this.primaryToolbar.addClassToolbarItem('_calibrate_radius', 'e-pv-calibrate-radius', this.pdfViewer.localeObj.getConstant('Calibrate Radius'));\n        this.calibrateVolume = this.primaryToolbar.addClassToolbarItem('_calibrate_volume', 'e-pv-calibrate-volume', this.pdfViewer.localeObj.getConstant('Calibrate Volume'));\n    };\n    AnnotationToolbar.prototype.afterMobileToolbarCreation = function () {\n        var isMac = navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i) ? true : false;\n        this.highlightItem = this.primaryToolbar.addClassToolbarItem('_highlight', 'e-pv-highlight', this.pdfViewer.localeObj.getConstant('Highlight'));\n        this.underlineItem = this.primaryToolbar.addClassToolbarItem('_underline', 'e-pv-underline', this.pdfViewer.localeObj.getConstant('Underline'));\n        this.strikethroughItem = this.primaryToolbar.addClassToolbarItem('_strikethrough', 'e-pv-strikethrough', this.pdfViewer.localeObj.getConstant('Strikethrough'));\n        this.shapesItem = this.primaryToolbar.addClassToolbarItem('_annotation_shapes', 'e-pv-annotation-shapes', this.pdfViewer.localeObj.getConstant('Add Shapes'));\n        this.calibrateItem = this.primaryToolbar.addClassToolbarItem('_annotation_calibrate', 'e-pv-annotation-calibrate', this.pdfViewer.localeObj.getConstant('Calibrate'));\n        this.freeTextEditItem = this.primaryToolbar.addClassToolbarItem('_annotation_freeTextEdit', 'e-pv-annotation-freeTextEdit', this.pdfViewer.localeObj.getConstant('Free Text'));\n        this.commentItem = this.primaryToolbar.addClassToolbarItem('_comment', 'e-pv-comment', this.pdfViewer.localeObj.getConstant('Add Comments'));\n        this.commentItem = this.primaryToolbar.addClassToolbarItem('_annotation_commentPanel', 'e-pv-annotation-comment-panel', this.pdfViewer.localeObj.getConstant('Comment Panel') + (isMac ? ' (⌘+⌥+0)' : ' (Ctrl+Alt+0)'));\n        this.inkAnnotationItem = this.primaryToolbar.addClassToolbarItem('_annotation_ink', 'e-pv-annotation-ink', this.pdfViewer.localeObj.getConstant('Draw Ink'));\n        this.selectAnnotationDeleteItem(false);\n        this.enableCommentPanelTool(this.pdfViewer.enableCommentPanel);\n    };\n    AnnotationToolbar.prototype.createColorPicker = function (idString) {\n        var inputElement;\n        var existingInput = document.getElementById(idString + '_target');\n        if (existingInput) {\n            inputElement = existingInput;\n        }\n        else {\n            inputElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', { id: idString + '_target' });\n        }\n        document.body.appendChild(inputElement);\n        var colorPicker = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_3__.ColorPicker({\n            inline: true, mode: 'Palette', cssClass: 'e-show-value', enableOpacity: false,\n            value: '#000000', showButtons: false, modeSwitcher: false\n        });\n        if (this.pdfViewer.enableRtl) {\n            colorPicker.enableRtl = true;\n        }\n        colorPicker.appendTo(inputElement);\n        return colorPicker;\n    };\n    AnnotationToolbar.prototype.onColorPickerChange = function (args) {\n        var currentColor;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            currentColor = (args.currentValue.hex === '') ? '#ffffff00' : args.currentValue.hex;\n        }\n        else {\n            currentColor = args[0];\n        }\n        if (this.pdfViewer.annotationModule.textMarkupAnnotationModule) {\n            if (this.pdfViewer.annotationModule.textMarkupAnnotationModule.currentTextMarkupAnnotation) {\n                this.pdfViewer.annotationModule.textMarkupAnnotationModule.modifyColorProperty(currentColor);\n            }\n            else {\n                switch (this.pdfViewer.annotationModule.textMarkupAnnotationModule.currentTextMarkupAddMode) {\n                    case 'Highlight':\n                        this.pdfViewer.annotationModule.textMarkupAnnotationModule.highlightColor = currentColor;\n                        break;\n                    case 'Underline':\n                        this.pdfViewer.annotationModule.textMarkupAnnotationModule.underlineColor = currentColor;\n                        break;\n                    case 'Strikethrough':\n                        this.pdfViewer.annotationModule.textMarkupAnnotationModule.strikethroughColor = currentColor;\n                        break;\n                }\n            }\n        }\n        if (this.pdfViewer.selectedItems.annotations.length === 1) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                if (args[0] !== args[1]) {\n                    this.pdfViewer.annotation.modifyFillColor(currentColor);\n                }\n            }\n            else {\n                if (args.currentValue.hex !== args.previousValue.hex) {\n                    this.pdfViewer.annotation.modifyFillColor(currentColor);\n                }\n            }\n        }\n        else {\n            if (this.pdfViewer.annotation.shapeAnnotationModule) {\n                switch (this.pdfViewer.annotation.shapeAnnotationModule.currentAnnotationMode) {\n                    case 'Line':\n                        this.pdfViewer.annotation.shapeAnnotationModule.lineFillColor = currentColor;\n                        break;\n                    case 'Arrow':\n                        this.pdfViewer.annotation.shapeAnnotationModule.arrowFillColor = currentColor;\n                        break;\n                    case 'Rectangle':\n                        this.pdfViewer.annotation.shapeAnnotationModule.rectangleFillColor = currentColor;\n                        break;\n                    case 'Circle':\n                        this.pdfViewer.annotation.shapeAnnotationModule.circleFillColor = currentColor;\n                        break;\n                    case 'Polygon':\n                        this.pdfViewer.annotation.shapeAnnotationModule.polygonFillColor = currentColor;\n                        break;\n                }\n            }\n            if (this.pdfViewer.drawingObject) {\n                this.pdfViewer.drawingObject.fillColor = currentColor;\n                if (this.pdfViewer.drawingObject.shapeAnnotationType === 'FreeText') {\n                    this.pdfViewer.annotation.freeTextAnnotationModule.fillColor = currentColor;\n                }\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.colorDropDownElementInBlazor = this.pdfViewer.element.querySelector('.e-pv-annotation-color-container');\n            this.updateColorInIcon(this.colorDropDownElementInBlazor, currentColor);\n        }\n        else {\n            this.updateColorInIcon(this.colorDropDownElement, currentColor);\n            this.colorDropDown.toggle();\n        }\n    };\n    AnnotationToolbar.prototype.onStrokePickerChange = function (args) {\n        var currentColor;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            currentColor = (args.currentValue.hex === '') ? '#ffffff00' : args.currentValue.hex;\n        }\n        else {\n            currentColor = args[0];\n        }\n        if (this.pdfViewer.selectedItems.annotations.length === 1) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                if (args[0] !== args[1]) {\n                    this.pdfViewer.annotation.modifyStrokeColor(currentColor);\n                }\n            }\n            else {\n                if (args.currentValue.hex !== args.previousValue.hex) {\n                    this.pdfViewer.annotation.modifyStrokeColor(currentColor);\n                }\n            }\n        }\n        else {\n            if (this.pdfViewer.annotation.shapeAnnotationModule) {\n                switch (this.pdfViewer.annotation.shapeAnnotationModule.currentAnnotationMode) {\n                    case 'Line':\n                        this.pdfViewer.annotation.shapeAnnotationModule.lineStrokeColor = currentColor;\n                        break;\n                    case 'Arrow':\n                        this.pdfViewer.annotation.shapeAnnotationModule.arrowStrokeColor = currentColor;\n                        break;\n                    case 'Rectangle':\n                        this.pdfViewer.annotation.shapeAnnotationModule.rectangleStrokeColor = currentColor;\n                        break;\n                    case 'Circle':\n                        this.pdfViewer.annotation.shapeAnnotationModule.circleStrokeColor = currentColor;\n                        break;\n                    case 'Polygon':\n                        this.pdfViewer.annotation.shapeAnnotationModule.polygonStrokeColor = currentColor;\n                        break;\n                }\n            }\n            var annotationModule = this.pdfViewer.annotation;\n            if (annotationModule && annotationModule.inkAnnotationModule) {\n                this.pdfViewer.inkAnnotationSettings.strokeColor = currentColor;\n            }\n            if (this.pdfViewer.drawingObject) {\n                this.pdfViewer.drawingObject.strokeColor = currentColor;\n            }\n            if (this.pdfViewer.drawingObject && this.pdfViewer.drawingObject.shapeAnnotationType === 'FreeText') {\n                this.pdfViewer.annotation.freeTextAnnotationModule.borderColor = currentColor;\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.strokeDropDownElementInBlazor = this.pdfViewer.element.querySelector('.e-pv-annotation-stroke-container');\n            this.updateColorInIcon(this.strokeDropDownElementInBlazor, currentColor);\n        }\n        else {\n            this.updateColorInIcon(this.strokeDropDownElement, currentColor);\n            this.strokeDropDown.toggle();\n        }\n    };\n    /**\n     * @param {HTMLElement} element - It describes about the element\n     * @param {string} color - It describes about the color\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.updateColorInIcon = function (element, color) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            if (element) {\n                element.children[0].style.borderBottomColor = color;\n            }\n        }\n        else {\n            if (element) {\n                if (element.childNodes[0]) {\n                    element.childNodes[0].style.borderBottomColor = color;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} currentOption - It describes about the current option\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.updateTextPropertySelection = function (currentOption) {\n        if (currentOption === 'bold') {\n            document.getElementById(this.pdfViewer.element.id + '_bold').classList.toggle('textprop-option-active');\n        }\n        else if (currentOption === 'italic') {\n            document.getElementById(this.pdfViewer.element.id + '_italic').classList.toggle('textprop-option-active');\n        }\n        else if (currentOption === 'underline') {\n            document.getElementById(this.pdfViewer.element.id + '_underline_textinput').classList.toggle('textprop-option-active');\n            document.getElementById(this.pdfViewer.element.id + '_strikeout').classList.remove('textprop-option-active');\n        }\n        else if (currentOption === 'strikeout') {\n            document.getElementById(this.pdfViewer.element.id + '_strikeout').classList.toggle('textprop-option-active');\n            document.getElementById(this.pdfViewer.element.id + '_underline_textinput').classList.remove('textprop-option-active');\n        }\n    };\n    /**\n     * @param {string} family - It describes about the family value\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.updateFontFamilyInIcon = function (family) {\n        this.fontFamily.value = family;\n    };\n    /**\n     * @param {string} align - It describes about the align\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.updateTextAlignInIcon = function (align) {\n        var className = 'e-btn-icon e-pv-left-align-icon e-pv-icon';\n        var leftAlign = document.getElementById(this.pdfViewer.element.id + '_left_align');\n        var rightAlign = document.getElementById(this.pdfViewer.element.id + '_right_align');\n        var centerAlign = document.getElementById(this.pdfViewer.element.id + '_center_align');\n        var justifyAlign = document.getElementById(this.pdfViewer.element.id + '_justify_align');\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            leftAlign.classList.remove('textprop-option-active');\n            rightAlign.classList.remove('textprop-option-active');\n            centerAlign.classList.remove('textprop-option-active');\n            justifyAlign.classList.remove('textprop-option-active');\n        }\n        if (align === 'Left') {\n            leftAlign.classList.add('textprop-option-active');\n        }\n        else if (align === 'Right') {\n            className = 'e-btn-icon e-pv-right-align-icon e-pv-icon';\n            rightAlign.classList.add('textprop-option-active');\n        }\n        else if (align === 'Center') {\n            className = 'e-btn-icon e-pv-center-align-icon e-pv-icon';\n            centerAlign.classList.add('textprop-option-active');\n        }\n        else if (align === 'Justify') {\n            className = 'e-btn-icon e-pv-justfiy-align-icon e-pv-icon';\n            justifyAlign.classList.add('textprop-option-active');\n        }\n        document.getElementById(this.pdfViewer.element.id + '_annotation_textalign').children[0].className = className;\n    };\n    /**\n     * @param {number} size - It describes about the size value\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.updateFontSizeInIcon = function (size) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.fontSize) && this.pdfViewer.annotationModule) {\n            this.pdfViewer.annotationModule.handleFontSizeUpdate(size);\n        }\n        else {\n            this.fontSize.value = size + 'px';\n        }\n    };\n    AnnotationToolbar.prototype.updateOpacityIndicator = function () {\n        this.opacityIndicator.textContent = parseInt(Math.round(this.opacitySlider.value).toString(), 10) + '%';\n    };\n    AnnotationToolbar.prototype.updateThicknessIndicator = function () {\n        this.thicknessIndicator.textContent = this.thicknessSlider.value + ' pt';\n    };\n    AnnotationToolbar.prototype.createSlider = function (idString) {\n        var outerContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-pv-annotation-opacity-popup-container' });\n        document.body.appendChild(outerContainer);\n        var label = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', { id: idString + '_label', className: 'e-pv-annotation-opacity-label' });\n        label.textContent = this.pdfViewer.localeObj.getConstant('Opacity');\n        var sliderElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: idString + '_slider' });\n        this.opacitySlider = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_3__.Slider({ type: 'MinRange', cssClass: 'e-pv-annotation-opacity-slider', max: 100, min: 0 });\n        this.opacityIndicator = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: idString + '_opacity_indicator', className: 'e-pv-annotation-opacity-indicator' });\n        this.opacityIndicator.textContent = '100%';\n        if (!this.pdfViewer.enableRtl) {\n            outerContainer.appendChild(label);\n            outerContainer.appendChild(sliderElement);\n            this.opacitySlider.appendTo(sliderElement);\n            this.opacitySlider.element.parentElement.classList.add('e-pv-annotation-opacity-slider-container');\n            outerContainer.appendChild(this.opacityIndicator);\n        }\n        else {\n            outerContainer.appendChild(this.opacityIndicator);\n            outerContainer.appendChild(sliderElement);\n            this.opacitySlider.enableRtl = true;\n            this.opacitySlider.appendTo(sliderElement);\n            this.opacitySlider.element.parentElement.classList.add('e-pv-annotation-opacity-slider-container');\n            outerContainer.appendChild(label);\n        }\n        return outerContainer;\n    };\n    AnnotationToolbar.prototype.createThicknessSlider = function (idString) {\n        var outerContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-pv-annotation-thickness-popup-container' });\n        document.body.appendChild(outerContainer);\n        var label = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', { id: idString + '_label', className: 'e-pv-annotation-thickness-label' });\n        label.textContent = this.pdfViewer.localeObj.getConstant('Line Thickness');\n        var sliderElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: idString + '_slider' });\n        this.thicknessSlider = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_3__.Slider({ type: 'MinRange', cssClass: 'e-pv-annotation-thickness-slider', max: 12, min: 0 });\n        this.thicknessIndicator = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: idString + '_thickness_indicator', className: 'e-pv-annotation-thickness-indicator' });\n        this.thicknessIndicator.textContent = '0 pt';\n        if (!this.pdfViewer.enableRtl) {\n            outerContainer.appendChild(label);\n            outerContainer.appendChild(sliderElement);\n            this.thicknessSlider.appendTo(sliderElement);\n            outerContainer.appendChild(this.thicknessIndicator);\n        }\n        else {\n            outerContainer.appendChild(this.thicknessIndicator);\n            outerContainer.appendChild(sliderElement);\n            this.thicknessSlider.enableRtl = true;\n            this.thicknessSlider.appendTo(sliderElement);\n            outerContainer.appendChild(label);\n        }\n        this.thicknessSlider.element.parentElement.classList.add('e-pv-annotation-thickness-slider-container');\n        return outerContainer;\n    };\n    AnnotationToolbar.prototype.afterToolbarCreation = function () {\n        var isMac = navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i) ? true : false;\n        this.highlightItem = this.primaryToolbar.addClassToolbarItem('_highlight', 'e-pv-highlight', this.pdfViewer.localeObj.getConstant('Highlight'));\n        this.underlineItem = this.primaryToolbar.addClassToolbarItem('_underline', 'e-pv-underline', this.pdfViewer.localeObj.getConstant('Underline'));\n        this.strikethroughItem = this.primaryToolbar.addClassToolbarItem('_strikethrough', 'e-pv-strikethrough', this.pdfViewer.localeObj.getConstant('Strikethrough'));\n        this.deleteItem = this.primaryToolbar.addClassToolbarItem('_annotation_delete', 'e-pv-annotation-delete', this.pdfViewer.localeObj.getConstant('Delete') + (' (delete)'));\n        this.freeTextEditItem = this.primaryToolbar.addClassToolbarItem('_annotation_freeTextEdit', 'e-pv-annotation-freeTextEdit', this.pdfViewer.localeObj.getConstant('Free Text'));\n        this.inkAnnotationItem = this.primaryToolbar.addClassToolbarItem('_annotation_ink', 'e-pv-annotation-ink', this.pdfViewer.localeObj.getConstant('Draw Ink'));\n        this.pdfViewerBase.getElement('_annotation_shapes').setAttribute('aria-label', this.pdfViewer.localeObj.getConstant('Add Shapes'));\n        this.pdfViewerBase.getElement('_annotation_calibrate').setAttribute('aria-label', this.pdfViewer.localeObj.getConstant('Calibrate'));\n        this.pdfViewerBase.getElement('_comment').setAttribute('aria-label', this.pdfViewer.localeObj.getConstant('Add Comments'));\n        this.commentItem = this.primaryToolbar.addClassToolbarItem('_annotation_commentPanel', 'e-pv-annotation-comment-panel', this.pdfViewer.localeObj.getConstant('Comment Panel') + (isMac ? ' (⌘+⌥+0)' : ' (Ctrl+Alt+0)'));\n        this.closeItem = this.primaryToolbar.addClassToolbarItem('_annotation_close', 'e-pv-annotation-tools-close', null);\n        this.pdfViewerBase.getElement('_annotation_close').setAttribute('aria-label', 'Close Annotation Toolbar');\n        this.selectAnnotationDeleteItem(false);\n        this.enableTextMarkupAnnotationPropertiesTools(false);\n        this.enableCommentPanelTool(this.pdfViewer.enableCommentPanel);\n    };\n    AnnotationToolbar.prototype.onToolbarClicked = function (args) {\n        var annotation = this.pdfViewer.selectedItems.annotations[0];\n        if (args.originalEvent.target.id) {\n            this.pdfViewer.toolbarModule.updateStampItems();\n        }\n        var isKeyBoardEvent = args.originalEvent && args.originalEvent.pointerType !== 'mouse' && args.originalEvent.pointerType !== 'touch';\n        this.pdfViewer.toolbarModule.deSelectCommentAnnotation();\n        switch (args.originalEvent.target.id) {\n            case this.pdfViewer.element.id + '_highlight':\n            case this.pdfViewer.element.id + '_highlightIcon':\n                this.pdfViewer.tool = '';\n                if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.pdfViewer.tool = '';\n                    this.resetFreeTextAnnot();\n                    this.handleHighlight();\n                }\n                else {\n                    if (!this.isMobileHighlightEnabled) {\n                        this.pdfViewer.annotationModule.setAnnotationMode('Highlight');\n                        this.primaryToolbar.selectItem(this.highlightItem);\n                        this.primaryToolbar.deSelectItem(this.underlineItem);\n                        this.primaryToolbar.deSelectItem(this.strikethroughItem);\n                        this.primaryToolbar.deSelectItem(this.freeTextEditItem);\n                        this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n                        this.textMarkupForMobile(args);\n                        this.isMobileHighlightEnabled = true;\n                        this.isMobileUnderlineEnabled = false;\n                        this.isMobileStrikethroughEnabled = false;\n                    }\n                    else {\n                        this.deselectAllItemsForMobile();\n                        this.pdfViewer.annotationModule.setAnnotationMode('None');\n                    }\n                }\n                this.pdfViewer.annotation.triggerAnnotationUnselectEvent();\n                this.pdfViewer.annotation.triggerSignatureUnselectEvent();\n                break;\n            case this.pdfViewer.element.id + '_underline':\n            case this.pdfViewer.element.id + '_underlineIcon':\n                this.pdfViewer.tool = '';\n                if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.pdfViewer.tool = '';\n                    this.resetFreeTextAnnot();\n                    this.handleUnderline();\n                }\n                else {\n                    if (!this.isMobileUnderlineEnabled) {\n                        this.pdfViewer.annotationModule.setAnnotationMode('Underline');\n                        this.primaryToolbar.selectItem(this.underlineItem);\n                        this.primaryToolbar.deSelectItem(this.highlightItem);\n                        this.primaryToolbar.deSelectItem(this.strikethroughItem);\n                        this.primaryToolbar.deSelectItem(this.freeTextEditItem);\n                        this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n                        this.textMarkupForMobile(args);\n                        this.isMobileUnderlineEnabled = true;\n                        this.isMobileHighlightEnabled = false;\n                        this.isMobileStrikethroughEnabled = false;\n                    }\n                    else {\n                        this.deselectAllItemsForMobile();\n                        this.pdfViewer.annotationModule.setAnnotationMode('None');\n                    }\n                }\n                this.pdfViewer.annotation.triggerAnnotationUnselectEvent();\n                this.pdfViewer.annotation.triggerSignatureUnselectEvent();\n                break;\n            case this.pdfViewer.element.id + '_strikethrough':\n            case this.pdfViewer.element.id + '_strikethroughIcon':\n                this.pdfViewer.tool = '';\n                if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.pdfViewer.tool = '';\n                    this.resetFreeTextAnnot();\n                    this.handleStrikethrough();\n                }\n                else {\n                    if (!this.isMobileStrikethroughEnabled) {\n                        this.pdfViewer.annotationModule.setAnnotationMode('Strikethrough');\n                        this.primaryToolbar.selectItem(this.strikethroughItem);\n                        this.primaryToolbar.deSelectItem(this.highlightItem);\n                        this.primaryToolbar.deSelectItem(this.underlineItem);\n                        this.primaryToolbar.deSelectItem(this.freeTextEditItem);\n                        this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n                        this.textMarkupForMobile(args);\n                        this.isMobileStrikethroughEnabled = true;\n                        this.isMobileUnderlineEnabled = false;\n                        this.isMobileHighlightEnabled = false;\n                    }\n                    else {\n                        this.deselectAllItemsForMobile();\n                        this.pdfViewer.annotationModule.setAnnotationMode('None');\n                    }\n                }\n                this.pdfViewer.annotation.triggerAnnotationUnselectEvent();\n                this.pdfViewer.annotation.triggerSignatureUnselectEvent();\n                break;\n            case this.pdfViewer.element.id + '_annotation_delete':\n            case this.pdfViewer.element.id + '_annotation_deleteIcon':\n                this.pdfViewer.annotationModule.deleteAnnotation();\n                this.resetFreeTextAnnot();\n                break;\n            case this.pdfViewer.element.id + '_annotation_commentPanel':\n            case this.pdfViewer.element.id + '_annotation_commentPanelIcon': {\n                this.inkAnnotationSelected = false;\n                var commentPanel = document.getElementById(this.pdfViewer.element.id + '_commantPanel');\n                if (this.pdfViewer.annotation && this.pdfViewer.annotation.textMarkupAnnotationModule) {\n                    this.pdfViewer.annotation.textMarkupAnnotationModule.showHideDropletDiv(true);\n                }\n                if (commentPanel.style.display === 'block') {\n                    this.pdfViewerBase.navigationPane.closeCommentPanelContainer();\n                }\n                else {\n                    this.pdfViewer.annotationModule.showCommentsPanel();\n                    if (isKeyBoardEvent && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(commentPanel.firstElementChild) &&\n                        !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(commentPanel.firstElementChild.lastElementChild) &&\n                        commentPanel.firstElementChild.lastElementChild instanceof HTMLButtonElement) {\n                        commentPanel.firstElementChild.lastElementChild.focus();\n                    }\n                }\n                break;\n            }\n            case this.pdfViewer.element.id + '_annotation_close':\n            case this.pdfViewer.element.id + '_annotation_closeIcon': {\n                this.inkAnnotationSelected = false;\n                var commentsPanel = document.getElementById(this.pdfViewer.element.id + '_commantPanel');\n                if (commentsPanel.style.display === 'block') {\n                    this.pdfViewerBase.navigationPane.closeCommentPanelContainer();\n                }\n                this.showAnnotationToolbar(this.primaryToolbar.annotationItem);\n                break;\n            }\n            case this.pdfViewer.element.id + '_annotation_freeTextEdit':\n            case this.pdfViewer.element.id + '_annotation_freeTextEditIcon':\n                if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.resetFreeTextAnnot();\n                    this.handleFreeTextEditor();\n                }\n                else {\n                    this.pdfViewer.annotationModule.setAnnotationMode('FreeText');\n                    this.FreeTextForMobile();\n                }\n                break;\n            case this.pdfViewer.element.id + '_annotation_signature':\n            case this.pdfViewer.element.id + '_annotation_signatureIcon':\n                this.inkAnnotationSelected = false;\n                this.updateSignatureCount();\n                break;\n            case this.pdfViewer.element.id + '_annotation_ink':\n            case this.pdfViewer.element.id + '_annotation_inkIcon':\n                if (annotation) {\n                    this.pdfViewer.annotation.triggerAnnotationUnselectEvent();\n                    this.pdfViewer.annotation.triggerSignatureUnselectEvent();\n                }\n                this.pdfViewer.clearSelection(this.pdfViewer.currentPageNumber - 1);\n                if (this.pdfViewer.annotationModule.inkAnnotationModule) {\n                    if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        this.updateInteractionTools();\n                    }\n                    var currentPageNumber = this.pdfViewer.annotationModule.inkAnnotationModule.currentPageNumber;\n                    if (currentPageNumber && currentPageNumber !== '') {\n                        this.pdfViewer.annotationModule.inkAnnotationModule.drawInkAnnotation(parseInt(currentPageNumber, 10));\n                        this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n                    }\n                }\n                if (!this.inkAnnotationSelected) {\n                    this.deselectAllItems();\n                    this.deselectAllItemsForMobile();\n                    this.drawInkAnnotation();\n                }\n                else {\n                    this.inkAnnotationSelected = false;\n                }\n                break;\n            case this.pdfViewer.element.id + '_annotation_shapesIcon':\n            case this.pdfViewer.element.id + '_annotation_shapes':\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.shapeToolMobile(args);\n                }\n                break;\n            case this.pdfViewer.element.id + '_annotation_calibrateIcon':\n            case this.pdfViewer.element.id + '_annotation_calibrate':\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.calibrateToolMobile(args);\n                }\n                break;\n            case this.pdfViewer.element.id + '_commentIcon':\n            case this.pdfViewer.element.id + '_comment': {\n                this.pdfViewerBase.isAddComment = true;\n                this.pdfViewerBase.isCommentIconAdded = true;\n                var commentsButton = document.getElementById(this.pdfViewer.element.id + '_comment');\n                this.deselectAllItemsForMobile();\n                commentsButton.classList.add('e-pv-select');\n                this.pdfViewer.toolbarModule.addComments(args);\n                break;\n            }\n        }\n    };\n    AnnotationToolbar.prototype.addInkAnnotation = function () {\n        this.pdfViewer.clearSelection(this.pdfViewer.currentPageNumber - 1);\n        if (this.pdfViewer.annotationModule.inkAnnotationModule) {\n            var currentPageNumber = this.pdfViewer.annotationModule.inkAnnotationModule.currentPageNumber;\n            if (currentPageNumber && currentPageNumber !== '') {\n                this.pdfViewer.annotationModule.inkAnnotationModule.drawInkAnnotation(parseInt(currentPageNumber, 10));\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                    this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n                }\n                else {\n                    this.primaryToolbar.deSelectItem(this.InkAnnotationElement);\n                    this.pdfViewerBase.focusViewerContainer();\n                }\n            }\n        }\n        if (!this.inkAnnotationSelected) {\n            this.deselectAllItemsInBlazor();\n            this.drawInkAnnotation();\n        }\n        else {\n            this.inkAnnotationSelected = false;\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.deselectInkAnnotation = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n        }\n        else {\n            this.primaryToolbar.deSelectItem(this.InkAnnotationElement);\n            this.pdfViewerBase.focusViewerContainer();\n        }\n    };\n    AnnotationToolbar.prototype.drawInkAnnotation = function () {\n        this.inkAnnotationSelected = true;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.primaryToolbar.selectItem(this.inkAnnotationItem);\n        }\n        else {\n            this.primaryToolbar.selectItem(this.InkAnnotationElement);\n        }\n        this.enableSignaturePropertiesTools(true);\n        this.pdfViewerBase.isToolbarInkClicked = true;\n        this.pdfViewer.annotationModule.inkAnnotationModule.drawInk();\n    };\n    AnnotationToolbar.prototype.resetFreeTextAnnot = function () {\n        if (this.pdfViewer.annotationModule && this.pdfViewer.annotationModule.freeTextAnnotationModule) {\n            this.pdfViewer.annotation.freeTextAnnotationModule.isNewFreeTextAnnot = false;\n            this.pdfViewer.annotation.freeTextAnnotationModule.isNewAddedAnnot = false;\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                if (this.freeTextEditItem && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                    this.primaryToolbar.deSelectItem(this.freeTextEditItem);\n                }\n                else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                    this.primaryToolbar.deSelectItem(this.FreeTextElement);\n                }\n                this.enableFreeTextAnnotationPropertiesTools(false);\n            }\n        }\n        if (this.pdfViewer.annotationModule && this.pdfViewer.annotationModule.inkAnnotationModule) {\n            var currentPageNumber = this.pdfViewer.annotationModule.inkAnnotationModule.currentPageNumber;\n            if (currentPageNumber && currentPageNumber !== '') {\n                this.pdfViewer.annotationModule.inkAnnotationModule.drawInkAnnotation(parseInt(currentPageNumber, 10));\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                    this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n                }\n                else {\n                    this.primaryToolbar.deSelectItem(this.InkAnnotationElement);\n                }\n            }\n        }\n        this.inkAnnotationSelected = false;\n    };\n    AnnotationToolbar.prototype.updateInkannotationItems = function () {\n        if (this.pdfViewer.annotationModule && this.pdfViewer.annotationModule.inkAnnotationModule && this.inkAnnotationSelected) {\n            var currentPageNumber = this.pdfViewer.annotationModule.inkAnnotationModule.currentPageNumber;\n            if (currentPageNumber && currentPageNumber !== '') {\n                this.pdfViewer.annotationModule.inkAnnotationModule.drawInkAnnotation(parseInt(currentPageNumber, 10));\n                this.pdfViewerBase.isToolbarInkClicked = true;\n                this.pdfViewer.tool = 'Ink';\n                this.pdfViewer.clearSelection(currentPageNumber);\n            }\n        }\n    };\n    AnnotationToolbar.prototype.showSignaturepanel = function () {\n        this.pdfViewerBase.isToolbarSignClicked = true;\n        this.pdfViewerBase.signatureModule.showSignatureDialog(true);\n    };\n    AnnotationToolbar.prototype.handleFreeTextEditor = function () {\n        var annotation = this.pdfViewer.selectedItems.annotations[0];\n        this.enableFreeTextAnnotationPropertiesTools(true);\n        if (annotation) {\n            this.pdfViewer.fireAnnotationUnSelect(annotation.annotName, annotation.pageIndex, annotation);\n            this.pdfViewer.fireSignatureUnselect(annotation.annotName, annotation.pageIndex, annotation);\n        }\n        this.pdfViewer.clearSelection(this.pdfViewer.currentPageNumber - 1);\n        if (this.pdfViewer.annotationModule.textMarkupAnnotationModule) {\n            this.pdfViewer.annotationModule.textMarkupAnnotationModule.isTextMarkupAnnotationMode = false;\n        }\n        this.isStrikethroughEnabled = false;\n        this.isHighlightEnabled = false;\n        this.isUnderlineEnabled = false;\n        var freeTextAnnotationModule = this.pdfViewer.annotation.freeTextAnnotationModule;\n        freeTextAnnotationModule.setAnnotationType('FreeText');\n        freeTextAnnotationModule.isNewFreeTextAnnot = true;\n        freeTextAnnotationModule.isNewAddedAnnot = true;\n        this.updateInteractionTools();\n        this.primaryToolbar.deSelectItem(this.highlightItem);\n        this.primaryToolbar.deSelectItem(this.underlineItem);\n        this.primaryToolbar.deSelectItem(this.strikethroughItem);\n        this.primaryToolbar.selectItem(this.freeTextEditItem);\n        this.updateColorInIcon(this.colorDropDownElement, this.pdfViewer.annotationModule.freeTextAnnotationModule.fillColor);\n        this.updateColorInIcon(this.strokeDropDownElement, this.pdfViewer.annotationModule.freeTextAnnotationModule.borderColor);\n        this.updateColorInIcon(this.fontColorElement, this.pdfViewer.annotationModule.freeTextAnnotationModule.fontColor);\n        this.updateFontFamilyInIcon(this.pdfViewer.annotationModule.freeTextAnnotationModule.fontFamily);\n        this.updateFontSizeInIcon(this.pdfViewer.annotationModule.freeTextAnnotationModule.fontSize);\n        this.updateTextAlignInIcon(this.pdfViewer.annotationModule.freeTextAnnotationModule.textAlign);\n        this.updateFontFamily();\n    };\n    AnnotationToolbar.prototype.updateFontFamily = function () {\n        if (this.pdfViewer.annotationModule.freeTextAnnotationModule.isBold) {\n            this.updateFontFamilyIcon('_bold', true);\n        }\n        else {\n            this.updateFontFamilyIcon('_bold', false);\n        }\n        if (this.pdfViewer.annotationModule.freeTextAnnotationModule.isItalic) {\n            this.updateFontFamilyIcon('_italic', true);\n        }\n        else {\n            this.updateFontFamilyIcon('_italic', false);\n        }\n        if (this.pdfViewer.annotationModule.freeTextAnnotationModule.isUnderline) {\n            this.updateFontFamilyIcon('_underline_textinput', true);\n            this.updateFontFamilyIcon('_strikeout', false);\n        }\n        else {\n            this.updateFontFamilyIcon('_underline_textinput', false);\n        }\n        if (this.pdfViewer.annotationModule.freeTextAnnotationModule.isStrikethrough) {\n            this.updateFontFamilyIcon('_strikeout', true);\n            this.updateFontFamilyIcon('_underline_textinput', false);\n        }\n        else {\n            this.updateFontFamilyIcon('_strikeout', false);\n        }\n    };\n    AnnotationToolbar.prototype.updateFontFamilyIcon = function (fontFamily, isActive) {\n        var fontFamilyElement = document.getElementById(this.pdfViewer.element.id + fontFamily);\n        if (isActive) {\n            fontFamilyElement.classList.add('textprop-option-active');\n        }\n        else {\n            fontFamilyElement.classList.remove('textprop-option-active');\n        }\n    };\n    /**\n     * @param {HTMLElement} element - It describes about the element value\n     * @param {boolean} isInitialLoading - It describes about the isInitialLoading boolean value\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.showAnnotationToolbar = function (element, isInitialLoading, isShow) {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            if (!this.isToolbarHidden) {\n                var annotationModule = this.pdfViewer.annotationModule;\n                if (element) {\n                    this.primaryToolbar.deSelectItem(element);\n                }\n                else {\n                    if (this.pdfViewer.enableToolbar) {\n                        this.primaryToolbar.deSelectItem(this.primaryToolbar.annotationItem);\n                    }\n                }\n                this.adjustViewer(false);\n                if (annotationModule && annotationModule.textMarkupAnnotationModule &&\n                    annotationModule.textMarkupAnnotationModule.currentTextMarkupAnnotation) {\n                    this.enablePropertiesTool(annotationModule);\n                }\n                else {\n                    this.deselectAllItems();\n                    this.deselectAllItemsForMobile();\n                }\n                this.toolbarElement.style.display = 'none';\n                if (!isInitialLoading) {\n                    this.pdfViewer.isAnnotationToolbarVisible = false;\n                }\n                if (this.pdfViewerBase.isPanMode) {\n                    this.primaryToolbar.updateInteractionTools(false);\n                }\n                else {\n                    this.primaryToolbar.updateInteractionTools(true);\n                }\n            }\n            else {\n                var toolBarInitialStatus = void 0;\n                if (this.toolbarElement) {\n                    toolBarInitialStatus = this.toolbarElement.style.display;\n                    this.toolbarElement.style.display = 'block';\n                }\n                if (!isInitialLoading) {\n                    this.pdfViewer.isAnnotationToolbarVisible = true;\n                }\n                if (element) {\n                    this.primaryToolbar.selectItem(element);\n                }\n                else {\n                    if (this.pdfViewer.enableToolbar) {\n                        this.primaryToolbar.selectItem(this.primaryToolbar.annotationItem);\n                    }\n                }\n                if (toolBarInitialStatus === 'none') {\n                    this.adjustViewer(true);\n                }\n            }\n            if (this.pdfViewer.magnification && this.pdfViewer.magnification.fitType === 'fitToPage') {\n                this.pdfViewer.magnification.fitToPage();\n            }\n            this.enableAnnotationAddTools(true);\n            this.isToolbarHidden = !this.isToolbarHidden;\n        }\n        else {\n            var editIconId = this.pdfViewer.element.id + '_annotationIcon';\n            var editIcon = document.getElementById(editIconId);\n            if (editIcon.parentElement.classList.contains('e-pv-select') && !isShow || (!editIcon.parentElement.classList.contains('e-pv-select') && isShow)) {\n                this.createAnnotationToolbarForMobile(editIconId);\n                this.pdfViewer.isAnnotationToolbarVisible = isShow;\n            }\n        }\n    };\n    AnnotationToolbar.prototype.enablePropertiesTool = function (annotationModule) {\n        this.isHighlightEnabled = false;\n        this.isUnderlineEnabled = false;\n        this.isStrikethroughEnabled = false;\n        if (this.pdfViewerBase.isTextMarkupAnnotationModule()) {\n            annotationModule.textMarkupAnnotationModule.isTextMarkupAnnotationMode = false;\n        }\n        this.primaryToolbar.deSelectItem(this.highlightItem);\n        this.primaryToolbar.deSelectItem(this.underlineItem);\n        this.primaryToolbar.deSelectItem(this.strikethroughItem);\n        this.enableTextMarkupAnnotationPropertiesTools(true);\n        this.updateColorInIcon(this.colorDropDownElement, annotationModule.textMarkupAnnotationModule.currentTextMarkupAnnotation.color);\n        this.selectAnnotationDeleteItem(true);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.applyAnnotationToolbarSettings = function () {\n        var annotationToolbarItems = this.pdfViewer.toolbarSettings.annotationToolbarItems;\n        if (annotationToolbarItems) {\n            if (annotationToolbarItems.indexOf('HighlightTool') !== -1) {\n                this.showHighlightTool(true, 0, 0);\n            }\n            else {\n                this.showHighlightTool(false, 0, 0);\n            }\n            if (annotationToolbarItems.indexOf('UnderlineTool') !== -1) {\n                this.showUnderlineTool(true, 1, 1);\n            }\n            else {\n                this.showUnderlineTool(false, 1, 1);\n            }\n            if (annotationToolbarItems.indexOf('StrikethroughTool') !== -1) {\n                this.showStrikethroughTool(true, 2, 2);\n            }\n            else {\n                this.showStrikethroughTool(false, 2, 2);\n            }\n            if (annotationToolbarItems.indexOf('ShapeTool') !== -1) {\n                this.showShapeAnnotationTool(true, 4, 4);\n            }\n            else {\n                this.showShapeAnnotationTool(false, 4, 4);\n            }\n            if (annotationToolbarItems.indexOf('CalibrateTool') !== -1) {\n                this.showCalibrateAnnotationTool(true, 6, 6);\n            }\n            else {\n                this.showCalibrateAnnotationTool(false, 6, 6);\n            }\n            if (annotationToolbarItems.indexOf('ColorEditTool') !== -1) {\n                this.showColorEditTool(true, 22, 22);\n            }\n            else {\n                this.showColorEditTool(false, 22, 22);\n            }\n            if (annotationToolbarItems.indexOf('StrokeColorEditTool') !== -1) {\n                this.showStrokeColorEditTool(true, 23, 23);\n            }\n            else {\n                this.showStrokeColorEditTool(false, 23, 23);\n            }\n            if (annotationToolbarItems.indexOf('ThicknessEditTool') !== -1) {\n                this.showThicknessEditTool(true, 24, 24);\n            }\n            else {\n                this.showThicknessEditTool(false, 24, 24);\n            }\n            if (annotationToolbarItems.indexOf('OpacityEditTool') !== -1) {\n                this.showOpacityEditTool(true, 25, 25);\n            }\n            else {\n                this.showOpacityEditTool(false, 25, 25);\n            }\n            if (annotationToolbarItems.indexOf('AnnotationDeleteTool') !== -1) {\n                this.showAnnotationDeleteTool(true, 27, 27);\n            }\n            else {\n                this.showAnnotationDeleteTool(false, 27, 27);\n            }\n            if (annotationToolbarItems.indexOf('StampAnnotationTool') !== -1) {\n                this.showStampAnnotationTool(true, 10, 10);\n            }\n            else {\n                this.showStampAnnotationTool(false, 10, 10);\n            }\n            if (annotationToolbarItems.indexOf('HandWrittenSignatureTool') !== -1) {\n                this.showSignatureTool(true, 12, 12);\n            }\n            else {\n                this.showSignatureTool(false, 12, 12);\n            }\n            if (annotationToolbarItems.indexOf('FreeTextAnnotationTool') !== -1) {\n                this.showFreeTextAnnotationTool(true, 8, 8);\n            }\n            else {\n                this.showFreeTextAnnotationTool(false, 8, 8);\n            }\n            if (annotationToolbarItems.indexOf('FontFamilyAnnotationTool') !== -1) {\n                this.showFontFamilyAnnotationTool(true, 16, 16);\n            }\n            else {\n                this.showFontFamilyAnnotationTool(false, 16, 16);\n            }\n            if (annotationToolbarItems.indexOf('FontSizeAnnotationTool') !== -1) {\n                this.showFontSizeAnnotationTool(true, 17, 17);\n            }\n            else {\n                this.showFontSizeAnnotationTool(false, 17, 17);\n            }\n            if (annotationToolbarItems.indexOf('FontStylesAnnotationTool') !== -1) {\n                this.showFontStylesAnnotationTool(true, 20, 20);\n            }\n            else {\n                this.showFontStylesAnnotationTool(false, 20, 20);\n            }\n            if (annotationToolbarItems.indexOf('FontAlignAnnotationTool') !== -1) {\n                this.showFontAlignAnnotationTool(true, 19, 19);\n            }\n            else {\n                this.showFontAlignAnnotationTool(false, 19, 19);\n            }\n            if (annotationToolbarItems.indexOf('FontColorAnnotationTool') !== -1) {\n                this.showFontColorAnnotationTool(true, 18, 18);\n            }\n            else {\n                this.showFontColorAnnotationTool(false, 18, 18);\n            }\n            if (annotationToolbarItems.indexOf('CommentPanelTool') !== -1) {\n                this.showCommentPanelTool(true, 28, 28);\n            }\n            else {\n                this.showCommentPanelTool(false, 28, 28);\n            }\n            this.showInkAnnotationTool();\n            this.showSeparator();\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.applyMobileAnnotationToolbarSettings = function () {\n        var annotationToolbarItems = this.pdfViewer.toolbarSettings.annotationToolbarItems;\n        if (annotationToolbarItems) {\n            if (annotationToolbarItems.indexOf('HighlightTool') !== -1) {\n                this.showHighlightTool(true, 2, 2);\n            }\n            else {\n                this.showHighlightTool(false, 2, 2);\n            }\n            if (annotationToolbarItems.indexOf('UnderlineTool') !== -1) {\n                this.showUnderlineTool(true, 3, 3);\n            }\n            else {\n                this.showUnderlineTool(false, 3, 3);\n            }\n            if (annotationToolbarItems.indexOf('StrikethroughTool') !== -1) {\n                this.showStrikethroughTool(true, 4, 4);\n            }\n            else {\n                this.showStrikethroughTool(false, 4, 4);\n            }\n            if (annotationToolbarItems.indexOf('ShapeTool') !== -1) {\n                this.showShapeAnnotationTool(true, 6, 6);\n            }\n            else {\n                this.showShapeAnnotationTool(false, 6, 6);\n            }\n            if (annotationToolbarItems.indexOf('CalibrateTool') !== -1) {\n                this.showCalibrateAnnotationTool(true, 8, 8);\n            }\n            else {\n                this.showCalibrateAnnotationTool(false, 8, 8);\n            }\n            var toolbarItems = this.pdfViewer.toolbarSettings.toolbarItems;\n            if (toolbarItems && toolbarItems.indexOf('CommentTool') !== -1) {\n                this.showStickyNoteToolInMobile(true);\n            }\n            else {\n                this.showStickyNoteToolInMobile(false);\n            }\n            if (annotationToolbarItems.indexOf('StampAnnotationTool') !== -1) {\n                this.showStampAnnotationTool(true, 12, 12);\n            }\n            else {\n                this.showStampAnnotationTool(false, 12, 12);\n            }\n            if (annotationToolbarItems.indexOf('HandWrittenSignatureTool') !== -1) {\n                this.showSignatureTool(true, 14, 14);\n            }\n            else {\n                this.showSignatureTool(false, 14, 14);\n            }\n            if (annotationToolbarItems.indexOf('FreeTextAnnotationTool') !== -1) {\n                this.showFreeTextAnnotationTool(true, 10, 10);\n            }\n            else {\n                this.showFreeTextAnnotationTool(false, 10, 10);\n            }\n            if (annotationToolbarItems.indexOf('CommentPanelTool') !== -1) {\n                this.showCommentPanelTool(true, 18, 18);\n            }\n            else {\n                this.showCommentPanelTool(false, 18, 18);\n            }\n            if (annotationToolbarItems.indexOf('InkAnnotationTool') !== -1) {\n                this.showInkTool(true, 16, 16);\n            }\n            else {\n                this.showInkTool(false, 16, 16);\n            }\n            this.showSeparatorInMobile();\n        }\n    };\n    AnnotationToolbar.prototype.showStickyNoteToolInMobile = function (isShow) {\n        this.isCommentBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, 0, 0);\n    };\n    AnnotationToolbar.prototype.showSeparatorInMobile = function () {\n        if (!this.isCommentBtnVisible) {\n            this.applyHideToToolbar(false, 1, 1);\n        }\n        if ((!this.isHighlightBtnVisible && !this.isUnderlineBtnVisible && !this.isStrikethroughBtnVisible)) {\n            this.applyHideToToolbar(false, 5, 5);\n        }\n        if (!this.isShapeBtnVisible) {\n            this.applyHideToToolbar(false, 7, 7);\n        }\n        if (!this.isCalibrateBtnVisible) {\n            this.applyHideToToolbar(false, 9, 9);\n        }\n        if (!this.isFreeTextBtnVisible) {\n            this.applyHideToToolbar(false, 11, 11);\n        }\n        if (!this.isStampBtnVisible) {\n            this.applyHideToToolbar(false, 13, 13);\n        }\n        if (!this.isSignatureBtnVisible) {\n            this.applyHideToToolbar(false, 15, 15);\n        }\n        if (!this.isInkBtnVisible) {\n            this.applyHideToToolbar(false, 17, 17);\n        }\n    };\n    AnnotationToolbar.prototype.showInkAnnotationTool = function () {\n        if (this.pdfViewer.toolbarSettings.annotationToolbarItems.indexOf('InkAnnotationTool') !== -1) {\n            this.showInkTool(true, 14, 14);\n        }\n        else {\n            this.showInkTool(false, 14, 14);\n        }\n    };\n    AnnotationToolbar.prototype.showSeparator = function () {\n        if ((!this.isHighlightBtnVisible && !this.isUnderlineBtnVisible && !this.isStrikethroughBtnVisible)) {\n            this.applyHideToToolbar(false, 3, 3);\n        }\n        if (!this.isShapeBtnVisible) {\n            this.applyHideToToolbar(false, 5, 5);\n        }\n        if (!this.isCalibrateBtnVisible) {\n            this.applyHideToToolbar(false, 7, 7);\n        }\n        if (!this.isFreeTextBtnVisible) {\n            this.applyHideToToolbar(false, 9, 9);\n        }\n        if (!this.isStampBtnVisible) {\n            this.applyHideToToolbar(false, 11, 11);\n        }\n        if (!this.isSignatureBtnVisible) {\n            this.applyHideToToolbar(false, 13, 13);\n        }\n        if (!this.isInkBtnVisible) {\n            this.applyHideToToolbar(false, 15, 15);\n        }\n        if (!this.isFontFamilyToolVisible && !this.isFontSizeToolVisible && !this.isFontColorToolVisible &&\n            !this.isFontAlignToolVisible && !this.isFontStylesToolVisible) {\n            this.applyHideToToolbar(false, 21, 21);\n        }\n        if ((!this.isColorToolVisible && !this.isStrokeColorToolVisible && !this.isThicknessToolVisible &&\n            !this.isOpacityToolVisible) || !this.isDeleteAnnotationToolVisible) {\n            this.applyHideToToolbar(false, 26, 26);\n        }\n    };\n    AnnotationToolbar.prototype.showHighlightTool = function (isShow, startIndex, endIndex) {\n        this.isHighlightBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showUnderlineTool = function (isShow, startIndex, endIndex) {\n        this.isUnderlineBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showStrikethroughTool = function (isShow, startIndex, endIndex) {\n        this.isStrikethroughBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showShapeAnnotationTool = function (isShow, startIndex, endIndex) {\n        this.isShapeBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showCalibrateAnnotationTool = function (isShow, startIndex, endIndex) {\n        this.isCalibrateBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showFreeTextAnnotationTool = function (isShow, startIndex, endIndex) {\n        this.isFreeTextBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showStampAnnotationTool = function (isShow, startIndex, endIndex) {\n        this.isStampBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showSignatureTool = function (isShow, startIndex, endIndex) {\n        this.isSignatureBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showInkTool = function (isShow, startIndex, endIndex) {\n        this.isInkBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showFontFamilyAnnotationTool = function (isShow, startIndex, endIndex) {\n        this.isFontFamilyToolVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showFontSizeAnnotationTool = function (isShow, startIndex, endIndex) {\n        this.isFontSizeToolVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showFontAlignAnnotationTool = function (isShow, startIndex, endIndex) {\n        this.isFontAlignToolVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showFontColorAnnotationTool = function (isShow, startIndex, endIndex) {\n        this.isFontColorToolVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showFontStylesAnnotationTool = function (isShow, startIndex, endIndex) {\n        this.isFontStylesToolVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showColorEditTool = function (isShow, startIndex, endIndex) {\n        this.isColorToolVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showStrokeColorEditTool = function (isShow, startIndex, endIndex) {\n        this.isStrokeColorToolVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showThicknessEditTool = function (isShow, startIndex, endIndex) {\n        this.isThicknessToolVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showOpacityEditTool = function (isShow, startIndex, endIndex) {\n        this.isOpacityToolVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showAnnotationDeleteTool = function (isShow, startIndex, endIndex) {\n        this.isDeleteAnnotationToolVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.showCommentPanelTool = function (isShow, startIndex, endIndex) {\n        this.isCommentPanelBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, startIndex, endIndex);\n    };\n    AnnotationToolbar.prototype.applyHideToToolbar = function (show, startIndex, endIndex) {\n        var isHide = !show;\n        for (var index = startIndex; index <= endIndex; index++) {\n            var toolbar_1 = void 0;\n            var propertyToolbarElement = (this.propertyToolbar && this.propertyToolbar.element) ?\n                this.propertyToolbar.element : null;\n            var toolbarElement = (this.toolbar && this.toolbar.element) ? this.toolbar.element : null;\n            if (toolbarElement && toolbarElement.children && toolbarElement.children.length > 0) {\n                toolbar_1 = this.toolbar;\n            }\n            else if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && propertyToolbarElement && propertyToolbarElement.children &&\n                propertyToolbarElement.children.length > 0) {\n                toolbar_1 = this.propertyToolbar;\n            }\n            if (toolbar_1 && toolbar_1.items[parseInt(index.toString(), 10)]) {\n                var className = toolbar_1.items[parseInt(index.toString(), 10)].cssClass;\n                if (className && className !== '') {\n                    // Querying the toolbar item\n                    var element = toolbar_1.element.querySelector('.' + className);\n                    if (element) {\n                        this.toolbar.hideItem(element, isHide);\n                    }\n                }\n                else {\n                    toolbar_1.hideItem(index, isHide);\n                }\n            }\n        }\n    };\n    /**\n     * @param {boolean} isAdjust - It describes about the isAdjust boolean value\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.adjustViewer = function (isAdjust) {\n        var splitterElement;\n        var toolbarContainer;\n        var annotationToolbarHeight;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            splitterElement = this.pdfViewer.element.querySelector('.e-pv-sidebar-toolbar-splitter');\n            toolbarContainer = this.pdfViewer.element.querySelector('.e-pv-toolbar');\n            var annotationToolbarContainer = this.pdfViewer.element.querySelector('.e-pv-annotation-toolbar');\n            annotationToolbarHeight = this.getToolbarHeight(annotationToolbarContainer);\n        }\n        else {\n            splitterElement = this.pdfViewerBase.getElement('_sideBarToolbarSplitter');\n            toolbarContainer = this.pdfViewerBase.getElement('_toolbarContainer');\n            annotationToolbarHeight = this.getToolbarHeight(this.toolbarElement);\n        }\n        var toolbarHeight = this.getToolbarHeight(toolbarContainer);\n        var sideBarToolbar = this.pdfViewerBase.navigationPane.sideBarToolbar;\n        var sideBarContentContainer = this.pdfViewerBase.navigationPane.sideBarContentContainer;\n        var commentsContainer = this.pdfViewerBase.navigationPane.commentPanelContainer;\n        var commentPanelResizer = this.pdfViewerBase.navigationPane.commentPanelResizer;\n        var newToolbarHeight = '';\n        if (isAdjust) {\n            if (this.pdfViewer.enableToolbar) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(sideBarToolbar)) {\n                    sideBarToolbar.style.top = (toolbarHeight + annotationToolbarHeight) + 'px';\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(sideBarContentContainer)) {\n                    sideBarContentContainer.style.top = (toolbarHeight + annotationToolbarHeight) + 'px';\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splitterElement)) {\n                    splitterElement.style.top = (toolbarHeight + annotationToolbarHeight) + 'px';\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(commentsContainer)) {\n                    commentsContainer.style.top = (toolbarHeight + annotationToolbarHeight) + 'px';\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(commentPanelResizer)) {\n                    commentPanelResizer.style.top = (toolbarHeight + annotationToolbarHeight) + 'px';\n                }\n            }\n            else {\n                sideBarToolbar.style.top = (annotationToolbarHeight) + 'px';\n                sideBarContentContainer.style.top = (annotationToolbarHeight) + 'px';\n                splitterElement.style.top = (annotationToolbarHeight) + 'px';\n                commentsContainer.style.top = (annotationToolbarHeight) + 'px';\n                commentPanelResizer.style.top = (toolbarHeight + annotationToolbarHeight) + 'px';\n            }\n            if (!this.pdfViewer.enableToolbar) {\n                toolbarHeight = 0;\n            }\n            this.pdfViewerBase.viewerContainer.style.height = this.updateViewerHeight(this.getElementHeight(this.pdfViewerBase.viewerContainer), (annotationToolbarHeight + toolbarHeight)) + 'px';\n            newToolbarHeight = this.getNavigationToolbarHeight(annotationToolbarHeight + toolbarHeight);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(sideBarToolbar)) {\n                sideBarToolbar.style.height = newToolbarHeight;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splitterElement)) {\n                splitterElement.style.height = newToolbarHeight;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(commentPanelResizer)) {\n                commentPanelResizer.style.height = newToolbarHeight;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(sideBarContentContainer)) {\n                sideBarContentContainer.style.height = newToolbarHeight;\n            }\n        }\n        else {\n            if (this.pdfViewer.enableToolbar) {\n                sideBarToolbar.style.top = toolbarHeight + 'px';\n                sideBarContentContainer.style.top = toolbarHeight + 'px';\n                splitterElement.style.top = toolbarHeight + 'px';\n                commentsContainer.style.top = toolbarHeight + 'px';\n                commentPanelResizer.style.top = toolbarHeight + 'px';\n            }\n            else {\n                sideBarToolbar.style.top = 1 + 'px';\n                sideBarToolbar.style.height = '100%';\n                sideBarContentContainer.style.top = 1 + 'px';\n                sideBarContentContainer.style.height = '100%';\n                splitterElement.style.top = 1 + 'px';\n                splitterElement.style.height = '100%';\n                commentsContainer.style.top = 1 + 'px';\n                commentsContainer.style.height = '100%';\n                commentPanelResizer.style.top = 1 + 'px';\n                commentPanelResizer.style.height = '100%';\n            }\n            if (!this.pdfViewer.enableToolbar) {\n                toolbarHeight = 0;\n            }\n            this.pdfViewerBase.viewerContainer.style.height = this.updateViewerHeight(this.getElementHeight(this.pdfViewerBase.viewerContainer), annotationToolbarHeight) + 'px';\n            newToolbarHeight = this.getNavigationToolbarHeight(toolbarHeight);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(sideBarToolbar)) {\n                sideBarToolbar.style.height = newToolbarHeight;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(splitterElement)) {\n                splitterElement.style.height = newToolbarHeight;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(commentPanelResizer)) {\n                commentPanelResizer.style.height = newToolbarHeight;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(sideBarContentContainer)) {\n                sideBarContentContainer.style.height = newToolbarHeight;\n            }\n            if (this.pdfViewerBase.viewerContainer.style.height === '0px') {\n                this.pdfViewerBase.viewerContainer.style.height = (parseInt(this.pdfViewer.element.style.height, 10) - parseInt(sideBarToolbar.style.top, 10)) + 'px';\n            }\n        }\n    };\n    AnnotationToolbar.prototype.updateContentContainerHeight = function (isAdjust, isBlazor) {\n        var annotationToolbarHeight;\n        if (isBlazor) {\n            var annotationToolbarContainer = this.pdfViewer.element.querySelector('.e-pv-annotation-toolbar');\n            annotationToolbarHeight = this.getToolbarHeight(annotationToolbarContainer);\n        }\n        else {\n            annotationToolbarHeight = this.getToolbarHeight(this.toolbarElement);\n        }\n        var sideBarClientRect = this.pdfViewerBase.navigationPane.sideBarContentContainer.getBoundingClientRect();\n        if (sideBarClientRect.height !== 0) {\n            if (isAdjust) {\n                this.pdfViewerBase.navigationPane.sideBarContentContainer.style.height = sideBarClientRect.height - annotationToolbarHeight + 'px';\n            }\n            else {\n                this.pdfViewerBase.navigationPane.sideBarContentContainer.style.height = sideBarClientRect.height + annotationToolbarHeight + 'px';\n            }\n        }\n    };\n    AnnotationToolbar.prototype.getToolbarHeight = function (element) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element)) {\n            var toolbarHeight = element.getBoundingClientRect().height;\n            if (toolbarHeight === 0 && element === this.pdfViewerBase.getElement('_toolbarContainer')) {\n                // getComputedStyle gets the value from style and toolbar border height is added to it.\n                toolbarHeight = parseFloat(window.getComputedStyle(element)['height']) + this.toolbarBorderHeight;\n            }\n            return toolbarHeight;\n        }\n        return null;\n    };\n    AnnotationToolbar.prototype.getNavigationToolbarHeight = function (toolbarHeight) {\n        var height = this.pdfViewer.element.getBoundingClientRect().height;\n        return (height !== 0) ? height - toolbarHeight + 'px' : '';\n    };\n    AnnotationToolbar.prototype.handleHighlight = function () {\n        if (!this.isHighlightEnabled) {\n            this.updateInteractionTools();\n            this.clearShapeMode();\n            this.clearMeasureMode();\n            this.pdfViewer.annotationModule.textMarkupAnnotationModule.drawTextMarkupAnnotations('Highlight');\n            this.primaryToolbar.selectItem(this.highlightItem);\n            this.primaryToolbar.deSelectItem(this.underlineItem);\n            this.primaryToolbar.deSelectItem(this.strikethroughItem);\n            this.primaryToolbar.deSelectItem(this.freeTextEditItem);\n            this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n            this.enableTextMarkupAnnotationPropertiesTools(true);\n            this.pdfViewer.annotationModule.textMarkupAnnotationModule.highlightColor = null;\n            this.setCurrentColorInPicker();\n            this.updateColorInIcon(this.colorDropDownElement, this.pdfViewer.annotationModule.textMarkupAnnotationModule.highlightColor);\n            this.isHighlightEnabled = true;\n            this.isUnderlineEnabled = false;\n            this.isStrikethroughEnabled = false;\n        }\n        else {\n            this.deselectAllItems();\n        }\n    };\n    AnnotationToolbar.prototype.handleUnderline = function () {\n        if (!this.isUnderlineEnabled) {\n            this.updateInteractionTools();\n            this.clearShapeMode();\n            this.clearMeasureMode();\n            this.pdfViewer.annotationModule.textMarkupAnnotationModule.drawTextMarkupAnnotations('Underline');\n            this.primaryToolbar.selectItem(this.underlineItem);\n            this.primaryToolbar.deSelectItem(this.highlightItem);\n            this.primaryToolbar.deSelectItem(this.strikethroughItem);\n            this.primaryToolbar.deSelectItem(this.freeTextEditItem);\n            this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n            this.enableTextMarkupAnnotationPropertiesTools(true);\n            this.pdfViewer.annotationModule.textMarkupAnnotationModule.underlineColor = null;\n            this.setCurrentColorInPicker();\n            this.updateColorInIcon(this.colorDropDownElement, this.pdfViewer.annotationModule.textMarkupAnnotationModule.underlineColor);\n            this.isUnderlineEnabled = true;\n            this.isHighlightEnabled = false;\n            this.isStrikethroughEnabled = false;\n        }\n        else {\n            this.deselectAllItems();\n        }\n    };\n    AnnotationToolbar.prototype.handleStrikethrough = function () {\n        if (!this.isStrikethroughEnabled) {\n            this.updateInteractionTools();\n            this.clearShapeMode();\n            this.clearMeasureMode();\n            this.pdfViewer.annotationModule.textMarkupAnnotationModule.drawTextMarkupAnnotations('Strikethrough');\n            this.primaryToolbar.selectItem(this.strikethroughItem);\n            this.primaryToolbar.deSelectItem(this.highlightItem);\n            this.primaryToolbar.deSelectItem(this.underlineItem);\n            this.primaryToolbar.deSelectItem(this.freeTextEditItem);\n            this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n            this.enableTextMarkupAnnotationPropertiesTools(true);\n            this.pdfViewer.annotationModule.textMarkupAnnotationModule.strikethroughColor = null;\n            this.setCurrentColorInPicker();\n            this.updateColorInIcon(this.colorDropDownElement, this.pdfViewer.annotationModule.textMarkupAnnotationModule.strikethroughColor);\n            this.isStrikethroughEnabled = true;\n            this.isHighlightEnabled = false;\n            this.isUnderlineEnabled = false;\n        }\n        else {\n            this.deselectAllItems();\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.deselectAllItemsInBlazor = function () {\n        if (this.pdfViewerBase.isTextMarkupAnnotationModule()) {\n            this.pdfViewer.annotationModule.textMarkupAnnotationModule.isTextMarkupAnnotationMode = false;\n            this.pdfViewer.annotationModule.textMarkupAnnotationModule.showHideDropletDiv(true);\n        }\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            this.primaryToolbar.deSelectItem(this.HighlightElement);\n            this.primaryToolbar.deSelectItem(this.UnderlineElement);\n            this.primaryToolbar.deSelectItem(this.StrikethroughElement);\n            this.primaryToolbar.deSelectItem(this.FreeTextElement);\n            this.primaryToolbar.deSelectItem(this.InkAnnotationElement);\n            this.pdfViewer._dotnetInstance.invokeMethodAsync('UpdateTextMarkupButtons', false, false, false);\n        }\n        this.resetFreeTextAnnot();\n        this.clearTextMarkupMode();\n        this.clearShapeMode();\n        this.clearMeasureMode();\n        this.pdfViewer.tool = '';\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            this.enableTextMarkupAnnotationPropertiesTools(false);\n            this.enableFreeTextAnnotationPropertiesTools(false);\n            this.updateColorInIcon(this.colorDropDownElement, '#000000');\n            this.updateColorInIcon(this.strokeDropDownElement, '#000000');\n            this.updateColorInIcon(this.fontColorElement, '#000000');\n            this.selectAnnotationDeleteItem(false);\n        }\n        if (this.pdfViewer.annotationModule) {\n            this.pdfViewer.annotationModule.freeTextAnnotationModule.isNewFreeTextAnnot = false;\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.deselectAllItemsForMobile = function () {\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || !this.pdfViewer.enableDesktopMode) {\n            var isBlazorPlatform = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)();\n            this.isMobileHighlightEnabled = false;\n            this.isMobileUnderlineEnabled = false;\n            this.isMobileStrikethroughEnabled = false;\n            if (this.pdfViewerBase.isTextMarkupAnnotationModule()) {\n                this.pdfViewer.annotationModule.textMarkupAnnotationModule.isTextMarkupAnnotationMode = false;\n                this.pdfViewer.annotationModule.textMarkupAnnotationModule.showHideDropletDiv(true);\n            }\n            if (!isBlazorPlatform) {\n                this.primaryToolbar.deSelectItem(this.highlightItem);\n                this.primaryToolbar.deSelectItem(this.underlineItem);\n                this.primaryToolbar.deSelectItem(this.strikethroughItem);\n                this.primaryToolbar.deSelectItem(this.freeTextEditItem);\n                this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n            }\n            else {\n                this.primaryToolbar.deSelectItem(this.highlightItem);\n                this.primaryToolbar.deSelectItem(this.underlineItem);\n                this.primaryToolbar.deSelectItem(this.strikethroughItem);\n                this.primaryToolbar.deSelectItem(this.freeTextEditItem);\n                this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n            }\n            this.resetFreeTextAnnot();\n            this.clearTextMarkupMode();\n            this.clearShapeMode();\n            this.clearMeasureMode();\n            this.pdfViewer.tool = '';\n            this.selectAnnotationDeleteItem(false);\n            if (this.pdfViewer.annotationModule) {\n                this.pdfViewer.annotationModule.freeTextAnnotationModule.isNewFreeTextAnnot = false;\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.deselectAllItems = function () {\n        var isBlazorPlatform = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)();\n        this.isHighlightEnabled = false;\n        this.isUnderlineEnabled = false;\n        this.isStrikethroughEnabled = false;\n        if (this.pdfViewerBase.isTextMarkupAnnotationModule()) {\n            this.pdfViewer.annotationModule.textMarkupAnnotationModule.isTextMarkupAnnotationMode = false;\n            this.pdfViewer.annotationModule.textMarkupAnnotationModule.showHideDropletDiv(true);\n        }\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            if (isBlazorPlatform) {\n                this.primaryToolbar.deSelectItem(this.pdfViewer.toolbar.SelectToolElement);\n                this.primaryToolbar.selectItem(this.pdfViewer.toolbar.PanElement);\n                this.primaryToolbar.deSelectItem(this.HighlightElement);\n                this.primaryToolbar.deSelectItem(this.UnderlineElement);\n                this.primaryToolbar.deSelectItem(this.StrikethroughElement);\n                this.primaryToolbar.deSelectItem(this.FreeTextElement);\n                this.primaryToolbar.deSelectItem(this.InkAnnotationElement);\n            }\n            else {\n                this.primaryToolbar.deSelectItem(this.highlightItem);\n                this.primaryToolbar.deSelectItem(this.underlineItem);\n                this.primaryToolbar.deSelectItem(this.strikethroughItem);\n                this.primaryToolbar.deSelectItem(this.freeTextEditItem);\n                this.primaryToolbar.deSelectItem(this.inkAnnotationItem);\n            }\n        }\n        this.resetFreeTextAnnot();\n        this.clearTextMarkupMode();\n        this.clearShapeMode();\n        this.clearMeasureMode();\n        this.pdfViewer.tool = '';\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            this.enableTextMarkupAnnotationPropertiesTools(false);\n            this.enableFreeTextAnnotationPropertiesTools(false);\n            this.updateColorInIcon(this.colorDropDownElement, '#000000');\n            this.updateColorInIcon(this.strokeDropDownElement, '#000000');\n            this.updateColorInIcon(this.fontColorElement, '#000000');\n            this.selectAnnotationDeleteItem(false);\n        }\n        if (this.pdfViewer.annotationModule) {\n            this.pdfViewer.annotationModule.freeTextAnnotationModule.isNewFreeTextAnnot = false;\n        }\n    };\n    AnnotationToolbar.prototype.updateInteractionTools = function () {\n        if (this.pdfViewer.enableTextSelection) {\n            this.pdfViewerBase.initiateTextSelectMode();\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                this.pdfViewer.toolbar.updateInteractionTools(true);\n            }\n        }\n        else if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.pdfViewer.toolbar.updateInteractionTools(false);\n        }\n    };\n    /**\n     * @param {boolean} isEnable - It describes about the isEnable boolean value\n     * @param {boolean} deleteIconCicked - It describes about the delete icon clicked boolean value\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.selectAnnotationDeleteItem = function (isEnable, deleteIconCicked) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() && !_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            if (this.toolbar) {\n                if (isEnable) {\n                    var annotation = this.pdfViewer.annotationModule.findCurrentAnnotation();\n                    if (annotation) {\n                        if (annotation.annotationSettings && annotation.annotationSettings.isLock) {\n                            if (this.pdfViewer.annotationModule.checkAllowedInteractions('Delete', annotation)) {\n                                this.enableItems(this.deleteItem.parentElement, isEnable);\n                            }\n                            else {\n                                this.enableItems(this.deleteItem.parentElement, false);\n                            }\n                        }\n                        else {\n                            this.enableItems(this.deleteItem.parentElement, isEnable);\n                        }\n                    }\n                }\n                else {\n                    this.enableItems(this.deleteItem.parentElement, isEnable);\n                }\n            }\n        }\n        else {\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n                if (isEnable) {\n                    var annotation = this.pdfViewer.annotationModule.findCurrentAnnotation();\n                    if (annotation) {\n                        if (annotation.annotationSettings && annotation.annotationSettings.isLock) {\n                            if (this.pdfViewer.annotationModule.checkAllowedInteractions('Delete', annotation)) {\n                                this.pdfViewerBase.blazorUIAdaptor.EnableDeleteOption(isEnable);\n                            }\n                            else {\n                                this.pdfViewerBase.blazorUIAdaptor.EnableDeleteOption(false);\n                            }\n                        }\n                        else if (this.pdfViewerBase.blazorUIAdaptor) {\n                            this.pdfViewerBase.blazorUIAdaptor.EnableDeleteOption(isEnable);\n                        }\n                    }\n                }\n                else if (this.pdfViewerBase.blazorUIAdaptor) {\n                    this.pdfViewerBase.blazorUIAdaptor.EnableDeleteOption(isEnable);\n                }\n                if (deleteIconCicked) {\n                    this.pdfViewerBase.focusViewerContainer();\n                }\n            }\n        }\n    };\n    /**\n     * @param {boolean} isEnable - It describes about the isEnable boolean value\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.enableTextMarkupAnnotationPropertiesTools = function (isEnable) {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                this.enableItems(this.colorDropDownElement.parentElement, isEnable);\n                this.enableItems(this.opacityDropDownElement.parentElement, isEnable);\n                if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n                    this.enableItems(this.strokeDropDownElement.parentElement, false);\n                    this.enableItems(this.thicknessElement.parentElement, false);\n                    this.enableItems(this.fontFamilyElement.parentElement, false);\n                    this.enableItems(this.fontSizeElement.parentElement, false);\n                    this.enableItems(this.fontColorElement.parentElement, false);\n                    this.enableItems(this.textAlignElement.parentElement, false);\n                    this.enableItems(this.textPropElement.parentElement, false);\n                }\n            }\n            else {\n                // this.pdfViewer._dotnetInstance.invokeMethodAsync('AnnotationSelect', 'TextMarkup');\n                this.pdfViewerBase.blazorUIAdaptor.enableTextMarkupAnnotationPropertiesTools(isEnable);\n            }\n        }\n    };\n    AnnotationToolbar.prototype.checkAnnotationPropertiesChange = function () {\n        var annotation = this.pdfViewer.selectedItems.annotations[0];\n        if (annotation && annotation.annotationSettings) {\n            var isLock = annotation.annotationSettings.isLock;\n            if (isLock) {\n                if (this.pdfViewer.annotationModule.checkAllowedInteractions('PropertyChange', annotation)) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {boolean} isEnable - It describes about the isEnable boolean value\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.enableAnnotationPropertiesTools = function (isEnable) {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            var isPropertiesChanges = this.checkAnnotationPropertiesChange();\n            if (!isEnable) {\n                isPropertiesChanges = true;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                if (isPropertiesChanges) {\n                    if (this.pdfViewer.selectedItems.annotations[0] && (this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Line')) {\n                        this.enableItems(this.colorDropDownElement.parentElement, false);\n                    }\n                    else {\n                        this.enableItems(this.colorDropDownElement.parentElement, isEnable);\n                    }\n                    this.enableItems(this.opacityDropDownElement.parentElement, isEnable);\n                    this.enableItems(this.strokeDropDownElement.parentElement, isEnable);\n                    this.enableItems(this.thicknessElement.parentElement, isEnable);\n                    if (this.pdfViewer.enableShapeLabel) {\n                        this.enableItems(this.fontFamilyElement.parentElement, isEnable);\n                        this.enableItems(this.fontSizeElement.parentElement, isEnable);\n                        this.enableItems(this.fontColorElement.parentElement, isEnable);\n                    }\n                    this.enableItems(this.textAlignElement.parentElement, false);\n                    this.enableItems(this.textPropElement.parentElement, false);\n                }\n            }\n            else {\n                // this.pdfViewer._dotnetInstance.invokeMethodAsync('EnableAnnotationPropertiesTools', isEnable, isPropertiesChanges);\n                this.pdfViewerBase.blazorUIAdaptor.enableAnnotationPropertiesTool(isEnable, isPropertiesChanges);\n            }\n        }\n    };\n    /**\n     * @param {boolean} isEnable - It describes about the isEnable boolean value\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.enableSignaturePropertiesTools = function (isEnable) {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            var isPropertiesChanges = this.checkAnnotationPropertiesChange();\n            if (!isEnable) {\n                isPropertiesChanges = true;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                if (isPropertiesChanges) {\n                    this.enableItems(this.colorDropDownElement.parentElement, false);\n                    this.enableItems(this.opacityDropDownElement.parentElement, isEnable);\n                    this.enableItems(this.strokeDropDownElement.parentElement, isEnable);\n                    this.enableItems(this.thicknessElement.parentElement, isEnable);\n                    this.enableItems(this.textAlignElement.parentElement, false);\n                    this.enableItems(this.textPropElement.parentElement, false);\n                    this.enableItems(this.fontFamilyElement.parentElement, false);\n                    this.enableItems(this.fontSizeElement.parentElement, false);\n                    this.enableItems(this.fontColorElement.parentElement, false);\n                    this.enableItems(this.textAlignElement.parentElement, false);\n                }\n            }\n            else {\n                //this.pdfViewer._dotnetInstance.invokeMethodAsync('EnableSignaturePropertiesTools', isEnable, isPropertiesChanges);\n                this.pdfViewerBase.blazorUIAdaptor.enableSignaturePropertiesTools(isEnable, isPropertiesChanges);\n            }\n        }\n    };\n    /**\n     * @param {boolean} isEnable - It describes about the isEnable boolean value\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.enableStampAnnotationPropertiesTools = function (isEnable) {\n        var isPropertiesChanges = this.checkAnnotationPropertiesChange();\n        if (!isEnable) {\n            isPropertiesChanges = true;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            if (isPropertiesChanges) {\n                this.enableItems(this.opacityDropDownElement.parentElement, isEnable);\n                this.enableItems(this.colorDropDownElement.parentElement, false);\n                this.enableItems(this.strokeDropDownElement.parentElement, false);\n                this.enableItems(this.thicknessElement.parentElement, false);\n                this.enableItems(this.fontFamilyElement.parentElement, false);\n                this.enableItems(this.fontSizeElement.parentElement, false);\n                this.enableItems(this.fontColorElement.parentElement, false);\n                this.enableItems(this.textAlignElement.parentElement, false);\n                this.enableItems(this.textPropElement.parentElement, false);\n            }\n        }\n        else {\n            // this.pdfViewer._dotnetInstance.invokeMethodAsync('EnableStampAnnotationPropertiesTools', isEnable, isPropertiesChanges);\n            this.pdfViewerBase.blazorUIAdaptor.enableStampAnnotationPropertiesTools(isEnable, isPropertiesChanges);\n        }\n    };\n    /**\n     * @param {boolean} isEnable - It describes about the isEnable boolean value\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.enableFreeTextAnnotationPropertiesTools = function (isEnable) {\n        var isPropertiesChanges = this.checkAnnotationPropertiesChange();\n        if (!isEnable) {\n            isPropertiesChanges = true;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            if (isPropertiesChanges) {\n                this.enableItems(this.opacityDropDownElement.parentElement, isEnable);\n                this.enableItems(this.colorDropDownElement.parentElement, isEnable);\n                this.enableItems(this.strokeDropDownElement.parentElement, isEnable);\n                this.enableItems(this.thicknessElement.parentElement, isEnable);\n                this.enableItems(this.fontFamilyElement.parentElement, isEnable);\n                this.enableItems(this.fontSizeElement.parentElement, isEnable);\n                this.enableItems(this.fontColorElement.parentElement, isEnable);\n                this.enableItems(this.textAlignElement.parentElement, isEnable);\n                this.enableItems(this.textPropElement.parentElement, isEnable);\n            }\n        }\n        else {\n            //this.pdfViewer._dotnetInstance.invokeMethodAsync('EnableFreeTextAnnotationPropertiesTools', isEnable, isPropertiesChanges);\n            this.pdfViewerBase.blazorUIAdaptor.enableFreeTextAnnotationPropertiesTools(isEnable, isPropertiesChanges);\n        }\n    };\n    /**\n     * @param {boolean} isEnable - It describes about the isEnable boolean value\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.enableAnnotationAddTools = function (isEnable) {\n        if (this.toolbar && !_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            if (this.pdfViewer.enableTextMarkupAnnotation) {\n                this.enableItems(this.highlightItem.parentElement, isEnable);\n                this.enableItems(this.underlineItem.parentElement, isEnable);\n                this.enableItems(this.strikethroughItem.parentElement, isEnable);\n            }\n            if (this.pdfViewer.enableShapeAnnotation) {\n                this.enableItems(this.shapeElement.parentElement, isEnable);\n            }\n            if (this.pdfViewer.enableStampAnnotations) {\n                this.toolbar.enableItems(this.stampElement.parentElement, isEnable);\n            }\n            if (this.pdfViewer.enableMeasureAnnotation && this.pdfViewerBase.isCalibrateAnnotationModule()) {\n                this.enableItems(this.calibrateElement.parentElement, isEnable);\n            }\n            if (this.pdfViewer.enableFreeText) {\n                this.enableItems(this.freeTextEditItem.parentElement, isEnable);\n            }\n            if (this.pdfViewer.enableHandwrittenSignature) {\n                this.enableItems(this.handWrittenSignatureItem.parentElement, isEnable);\n            }\n            if (this.pdfViewer.enableInkAnnotation) {\n                this.enableItems(this.inkAnnotationItem.parentElement, isEnable);\n            }\n            if (this.pdfViewer.enableCommentPanel) {\n                this.enableCommentPanelTool(isEnable);\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {boolean} - boolean\n     */\n    AnnotationToolbar.prototype.isAnnotationButtonsEnabled = function () {\n        var isButtonsEnabled = false;\n        if (this.isHighlightEnabled || this.isUnderlineEnabled || this.isStrikethroughEnabled) {\n            isButtonsEnabled = true;\n        }\n        return isButtonsEnabled;\n    };\n    /**\n     * @param {boolean} isEnable - It describes about the isEnable boolean value\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.enableCommentPanelTool = function (isEnable) {\n        if (this.toolbar) {\n            this.enableItems(this.commentItem.parentElement, isEnable);\n        }\n    };\n    AnnotationToolbar.prototype.updateToolbarItems = function () {\n        if (this.pdfViewer.enableTextMarkupAnnotation) {\n            this.enableTextMarkupAddTools(true);\n        }\n        else {\n            this.enableTextMarkupAddTools(false);\n        }\n        this.enableItems(this.shapeElement.parentElement, this.pdfViewer.enableShapeAnnotation);\n        this.toolbar.enableItems(this.stampElement.parentElement, this.pdfViewer.enableStampAnnotations);\n        this.enableItems(this.calibrateElement.parentElement, this.pdfViewer.enableMeasureAnnotation);\n        this.enableItems(this.freeTextEditItem.parentElement, this.pdfViewer.enableFreeText);\n        this.enableItems(this.handWrittenSignatureItem.parentElement, this.pdfViewer.enableHandwrittenSignature);\n        this.enableItems(this.inkAnnotationItem.parentElement, this.pdfViewer.enableInkAnnotation);\n        this.closeItem.setAttribute('tabindex', '0');\n    };\n    AnnotationToolbar.prototype.enableTextMarkupAddTools = function (isEnable) {\n        this.enableItems(this.highlightItem.parentElement, isEnable);\n        this.enableItems(this.underlineItem.parentElement, isEnable);\n        this.enableItems(this.strikethroughItem.parentElement, isEnable);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    // for shapes added by drawing package\n    AnnotationToolbar.prototype.updateAnnnotationPropertyItems = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            if (this.pdfViewer.selectedItems.annotations.length === 1) {\n                this.pdfViewer.toolbar.annotationToolbarModule.updateColorInIcon(this.colorDropDownElement, this.getColorHexValue(this.pdfViewer.selectedItems.annotations[0].wrapper.children[0].style.fill, 'fillColor'));\n                this.pdfViewer.toolbar.annotationToolbarModule.updateColorInIcon(this.strokeDropDownElement, this.getColorHexValue(this.pdfViewer.selectedItems.annotations[0].wrapper.children[0].style.strokeColor, 'strokeColor'));\n                if (this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'FreeText' && !this.pdfViewer.selectedItems.annotations[0].isLock) {\n                    this.pdfViewer.toolbar.annotationToolbarModule.updateColorInIcon(this.fontColorElement, this.getColorHexValue(this.pdfViewer.selectedItems.annotations[0].fontColor, 'fontColor'));\n                    this.pdfViewer.toolbar.annotationToolbarModule.\n                        updateFontFamilyInIcon(this.pdfViewer.selectedItems.annotations[0].fontFamily);\n                    this.pdfViewer.toolbar.annotationToolbarModule.\n                        updateFontSizeInIcon(this.pdfViewer.selectedItems.annotations[0].fontSize);\n                    this.pdfViewer.toolbar.annotationToolbarModule.\n                        updateTextAlignInIcon(this.pdfViewer.selectedItems.annotations[0].textAlign);\n                }\n            }\n            else {\n                this.pdfViewer.toolbar.annotationToolbarModule.updateColorInIcon(this.colorDropDownElement, '#000000');\n                this.pdfViewer.toolbar.annotationToolbarModule.updateColorInIcon(this.strokeDropDownElement, '#000000');\n                this.pdfViewer.toolbar.annotationToolbarModule.updateColorInIcon(this.fontColorElement, '#000000');\n            }\n        }\n        else {\n            this.colorDropDownElementInBlazor = this.pdfViewer.element.querySelector('.e-pv-annotation-color-container');\n            this.strokeDropDownElementInBlazor = this.pdfViewer.element.querySelector('.e-pv-annotation-stroke-container');\n            this.fontColorElementInBlazor = this.pdfViewer.element.querySelector('.e-pv-annotation-textcolor-container');\n            if (this.pdfViewer.selectedItems.annotations.length === 1) {\n                this.pdfViewer.toolbar.annotationToolbarModule.updateColorInIcon(this.colorDropDownElementInBlazor, this.getColorHexValue(this.pdfViewer.selectedItems.annotations[0].wrapper.children[0].style.fill, 'fillColor'));\n                this.pdfViewer.toolbar.annotationToolbarModule.updateColorInIcon(this.strokeDropDownElementInBlazor, this.getColorHexValue(this.pdfViewer.selectedItems.annotations[0].wrapper.children[0].style.strokeColor, 'strokeColor'));\n                if (this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'FreeText') {\n                    this.pdfViewer.toolbar.annotationToolbarModule.updateColorInIcon(this.fontColorElementInBlazor, this.getColorHexValue(this.pdfViewer.selectedItems.annotations[0].fontColor, 'fontColor'));\n                    //this.pdfViewer._dotnetInstance.invokeMethodAsync('UpdateFontFamilyInIcon', this.pdfViewer.selectedItems.annotations[0].fontFamily);\n                    this.pdfViewerBase.blazorUIAdaptor.updateFontFamilyInIcon(this.pdfViewer.selectedItems.annotations[0].fontFamily);\n                    // this.pdfViewer._dotnetInstance.invokeMethodAsync('UpdateFontSizeInIcon', this.pdfViewer.selectedItems.annotations[0].fontSize);\n                    this.pdfViewerBase.blazorUIAdaptor.updateFontSizeInIcon(this.pdfViewer.selectedItems.annotations[0].fontSize);\n                    //this.pdfViewer.toolbar.annotationtoolbar.updateTextAlignInIcon(this.pdfViewer.selectedItems.annotations[0].textAlign);\n                }\n            }\n            else {\n                this.pdfViewer.toolbar.annotationToolbarModule.updateColorInIcon(this.colorDropDownElementInBlazor, '#000000');\n                this.pdfViewer.toolbar.annotationToolbarModule.updateColorInIcon(this.strokeDropDownElementInBlazor, '#000000');\n                this.pdfViewer.toolbar.annotationToolbarModule.updateColorInIcon(this.fontColorElementInBlazor, '#000000');\n            }\n        }\n    };\n    AnnotationToolbar.prototype.getColorHexValue = function (colorString, type) {\n        if (colorString === '#ffffff00') {\n            colorString = '#ffffff';\n        }\n        if (colorString.toLowerCase() === 'red') {\n            colorString = '#FF0000';\n        }\n        if (colorString !== 'transparent') {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                return this.colorPalette.getValue(colorString, 'hex');\n            }\n            else {\n                return colorString;\n            }\n        }\n        else {\n            if (type === 'fontColor' || type === 'strokeColor') {\n                return '#000000';\n            }\n            else {\n                return '#ffffff';\n            }\n        }\n    };\n    AnnotationToolbar.prototype.setColorInPicker = function (colorpick, colorString) {\n        if (colorpick) {\n            colorpick.setProperties({ 'value': colorString }, true);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.resetToolbar = function () {\n        this.updateToolbarItems();\n        if ((this.pdfViewer.isAnnotationToolbarOpen || this.pdfViewer.isAnnotationToolbarVisible) &&\n            this.pdfViewer.enableAnnotationToolbar) {\n            this.adjustViewer(false);\n            this.toolbarElement.style.display = '';\n            this.isToolbarHidden = false;\n            this.adjustViewer(true);\n            this.primaryToolbar.selectItem(this.primaryToolbar.annotationItem);\n            if (this.pdfViewer.toolbarModule && this.pdfViewer.toolbarModule.annotationToolbarModule) {\n                this.pdfViewer.toolbarModule.annotationToolbarModule.toolbar.refreshOverflow();\n            }\n            this.pdfViewer.isAnnotationToolbarVisible = true;\n        }\n        else {\n            this.toolbarElement.style.display = 'none';\n            this.isToolbarHidden = true;\n            this.pdfViewer.isAnnotationToolbarVisible = false;\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.clearTextMarkupMode = function () {\n        if (this.pdfViewerBase.isTextMarkupAnnotationModule()) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                this.pdfViewer.annotationModule.textMarkupAnnotationModule.isTextMarkupAnnotationMode = false;\n            }\n            this.pdfViewer.annotation.textMarkupAnnotationModule.currentTextMarkupAddMode = '';\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.clearShapeMode = function () {\n        if (this.pdfViewerBase.isShapeAnnotationModule()) {\n            this.pdfViewer.annotation.shapeAnnotationModule.currentAnnotationMode = '';\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.clearMeasureMode = function () {\n        if (this.pdfViewerBase.isCalibrateAnnotationModule()) {\n            this.pdfViewer.annotation.measureAnnotationModule.currentAnnotationMode = '';\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.clear = function () {\n        this.deselectAllItems();\n        this.deselectAllItemsForMobile();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.destroy = function () {\n        this.destroyComponent();\n        if (this.shapeDropDown) {\n            this.shapeDropDown.destroy();\n        }\n        if (this.calibrateDropDown) {\n            this.calibrateDropDown.destroy();\n        }\n        if (this.fontColorDropDown) {\n            this.fontColorDropDown.destroy();\n        }\n        if (this.textAlignDropDown) {\n            this.textAlignDropDown.destroy();\n        }\n        if (this.colorDropDown) {\n            this.colorDropDown.destroy();\n        }\n        if (this.strokeDropDown) {\n            this.strokeDropDown.destroy();\n        }\n        if (this.thicknessDropDown) {\n            this.thicknessDropDown.destroy();\n        }\n        if (this.opacityDropDown) {\n            this.opacityDropDown.destroy();\n        }\n        if (this.textPropertiesDropDown) {\n            this.textPropertiesDropDown.destroy();\n        }\n        if (this.toolbar) {\n            this.toolbar.destroy();\n        }\n        var stampImage = document.getElementById(this.pdfViewer.element.id + '_stampElement');\n        if (stampImage) {\n            stampImage.parentElement.removeChild(stampImage);\n        }\n    };\n    AnnotationToolbar.prototype.destroyComponent = function () {\n        var componentElement = [this.highlightItem, this.underlineItem, this.strikethroughItem,\n            this.lineElement, this.arrowElement,\n            this.rectangleElement, this.circleElement, this.polygonElement, this.calibrateDistance, this.calibrateArea,\n            this.calibrateRadius,\n            this.calibrateVolume, this.calibratePerimeter, this.freeTextEditItem, this.stampElement,\n            this.handWrittenSignatureItem, this.inkAnnotationItem,\n            this.fontFamilyElement, this.fontSizeElement, this.alignLeftElement, this.alignRightElement,\n            this.alignCenterElement, this.alignJustifyElement,\n            this.boldElement, this.italicElement, this.fontStyleStrikethroughItem, this.fontStyleUnderlineItem,\n            this.deleteItem, this.commentItem,\n            this.shapeDropDown ? this.shapeDropDown.activeElem[0] : null, this.calibrateDropDown ?\n                this.calibrateDropDown.activeElem[0] : null, this.fontColorDropDown ? this.fontColorDropDown.activeElem[0] : null,\n            this.textAlignDropDown ? this.textAlignDropDown.activeElem[0] : null,\n            this.colorDropDown ? this.colorDropDown.activeElem[0] : null, this.strokeDropDown ?\n                this.strokeDropDown.activeElem[0] : null, this.thicknessDropDown ? this.thicknessDropDown.activeElem[0] : null,\n            this.opacityDropDown ? this.opacityDropDown.activeElem[0] : null, this.textPropertiesDropDown ?\n                this.textPropertiesDropDown.activeElem[0] : null\n        ];\n        for (var i = 0; i < componentElement.length; i++) {\n            if (componentElement[parseInt(i.toString(), 10)]) {\n                this.destroyDependentComponent(componentElement[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    AnnotationToolbar.prototype.destroyDependentComponent = function (component) {\n        if (component.ej2_instances) {\n            for (var i = component.ej2_instances.length - 1; i >= 0; i--) {\n                component.ej2_instances[parseInt(i.toString(), 10)].destroy();\n            }\n        }\n    };\n    AnnotationToolbar.prototype.getElementHeight = function (element) {\n        try {\n            return element.getBoundingClientRect().height;\n        }\n        catch (error) {\n            return 0;\n        }\n    };\n    AnnotationToolbar.prototype.updateViewerHeight = function (viewerHeight, toolbarHeight) {\n        return this.getElementHeight(this.pdfViewer.element) - toolbarHeight;\n    };\n    AnnotationToolbar.prototype.resetViewerHeight = function (viewerHeight, toolbarHeight) {\n        return viewerHeight + toolbarHeight;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    AnnotationToolbar.prototype.afterAnnotationToolbarCreationInBlazor = function () {\n        this.HighlightElement = document.getElementById(this.pdfViewer.element.id + '_highLight').children[0];\n        this.UnderlineElement = document.getElementById(this.pdfViewer.element.id + '_underline').children[0];\n        this.StrikethroughElement = document.getElementById(this.pdfViewer.element.id + '_strikethrough').children[0];\n        this.InkAnnotationElement = document.getElementById(this.pdfViewer.element.id + '_annotation_ink').children[0];\n        this.InkAnnotationElement.classList.add('e-pv-tbar-btn');\n        this.FreeTextElement = document.getElementById(this.pdfViewer.element.id + '_annotation_freeTextEdit').children[0];\n        this.HighlightElement = this.addClassToToolbarInBlazor(this.HighlightElement, 'e-pv-highlight', '_highLight');\n        this.UnderlineElement = this.addClassToToolbarInBlazor(this.UnderlineElement, 'e-pv-underline', '_underline');\n        this.StrikethroughElement = this.addClassToToolbarInBlazor(this.StrikethroughElement, 'e-pv-strikethrough', '_strikethrough');\n    };\n    AnnotationToolbar.prototype.addClassToToolbarInBlazor = function (element, className, idString) {\n        element.classList.add(className);\n        element.classList.add('e-pv-tbar-btn');\n        if (element.childNodes.length > 0) {\n            var spanElement = element.childNodes[0];\n            if (spanElement && spanElement.classList) {\n                spanElement.id = this.pdfViewer.element.id + idString + 'Icon';\n                spanElement.classList.remove('e-icons');\n                spanElement.classList.remove('e-btn-icon');\n                if (this.pdfViewer.enableRtl) {\n                    spanElement.classList.add('e-right');\n                }\n            }\n        }\n        return element;\n    };\n    AnnotationToolbar.prototype.handleHighlightInBlazor = function () {\n        if (this.HighlightElement.classList.contains('e-pv-select')) {\n            this.primaryToolbar.deSelectItem(this.HighlightElement);\n        }\n        else if (!this.HighlightElement.classList.contains('e-pv-select')) {\n            this.primaryToolbar.selectItem(this.HighlightElement);\n        }\n        if (this.StrikethroughElement.classList.contains('e-pv-select')) {\n            this.primaryToolbar.deSelectItem(this.StrikethroughElement);\n        }\n        if (this.UnderlineElement.classList.contains('e-pv-select')) {\n            this.primaryToolbar.deSelectItem(this.UnderlineElement);\n        }\n    };\n    AnnotationToolbar.prototype.handleUnderlineInBlazor = function () {\n        if (this.UnderlineElement.classList.contains('e-pv-select')) {\n            this.primaryToolbar.deSelectItem(this.UnderlineElement);\n        }\n        else if (!this.UnderlineElement.classList.contains('e-pv-select')) {\n            this.primaryToolbar.selectItem(this.UnderlineElement);\n        }\n        if (this.StrikethroughElement.classList.contains('e-pv-select')) {\n            this.primaryToolbar.deSelectItem(this.StrikethroughElement);\n        }\n        if (this.HighlightElement.classList.contains('e-pv-select')) {\n            this.primaryToolbar.deSelectItem(this.HighlightElement);\n        }\n    };\n    AnnotationToolbar.prototype.handleStrikethroughInBlazor = function () {\n        if (this.StrikethroughElement.classList.contains('e-pv-select')) {\n            this.primaryToolbar.deSelectItem(this.StrikethroughElement);\n        }\n        else if (!this.StrikethroughElement.classList.contains('e-pv-select')) {\n            this.primaryToolbar.selectItem(this.StrikethroughElement);\n        }\n        if (this.HighlightElement.classList.contains('e-pv-select')) {\n            this.primaryToolbar.deSelectItem(this.HighlightElement);\n        }\n        if (this.UnderlineElement.classList.contains('e-pv-select')) {\n            this.primaryToolbar.deSelectItem(this.UnderlineElement);\n        }\n    };\n    AnnotationToolbar.prototype.AnnotationSliderOpened = function () {\n        if (this.pdfViewer.selectedItems.annotations && this.pdfViewer.selectedItems.annotations.length > 0 &&\n            this.pdfViewer.selectedItems.annotations[0]) {\n            if (this.pdfViewer.selectedItems.annotations[0].wrapper && this.pdfViewer.selectedItems.annotations[0].wrapper.children[0]) {\n                var opacity = this.pdfViewer.selectedItems.annotations[0].wrapper.children[0].style.opacity * 100;\n                var thickness = this.pdfViewer.selectedItems.annotations[0].wrapper.children[0].style.strokeWidth;\n                this.pdfViewer._dotnetInstance.invokeMethodAsync('UpdateAnnotationSlider', opacity, thickness);\n            }\n        }\n    };\n    AnnotationToolbar.prototype.DropDownOpened = function (colorElement) {\n        if (colorElement && colorElement[0].element) {\n            var colorElementBounds = colorElement[0].element.getBoundingClientRect();\n            var sidebarElement = this.pdfViewerBase.navigationPane.sideBarToolbar;\n            var sideBarElementWidth = (sidebarElement) ? sidebarElement.getBoundingClientRect().width : 0;\n            if (colorElementBounds.left > this.pdfViewerBase.viewerContainer.clientWidth + colorElementBounds.width + sideBarElementWidth) {\n                colorElement[0].element.style.left = (colorElementBounds.left - (this.pdfViewerBase.viewerContainer.clientHeight / 2)) + 'px';\n            }\n        }\n    };\n    AnnotationToolbar.prototype.enableItems = function (element, isEnable) {\n        this.toolbar.enableItems(element, isEnable);\n        if (element.firstElementChild) {\n            element.firstElementChild.setAttribute('tabindex', isEnable ? '0' : '-1');\n            element.firstElementChild.setAttribute('data-tabindex', isEnable ? '0' : '-1');\n        }\n    };\n    return AnnotationToolbar;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/toolbar/annotation-toolbar.js?");

/***/ })

}]);