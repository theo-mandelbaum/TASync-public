"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-querybuilder_src_query-builder_query-builder_js-219f606d"],{

/***/ "./node_modules/@syncfusion/ej2-querybuilder/src/query-builder/query-builder.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-querybuilder/src/query-builder/query-builder.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Columns: () => (/* binding */ Columns),\n/* harmony export */   QueryBuilder: () => (/* binding */ QueryBuilder),\n/* harmony export */   Rule: () => (/* binding */ Rule),\n/* harmony export */   ShowButtons: () => (/* binding */ ShowButtons),\n/* harmony export */   Value: () => (/* binding */ Value)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\");\n/* harmony import */ var _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"./node_modules/@syncfusion/ej2-data/index.js\");\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\");\n/* harmony import */ var _syncfusion_ej2_calendars__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-calendars */ \"./node_modules/@syncfusion/ej2-calendars/index.js\");\n/* harmony import */ var _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-splitbuttons */ \"./node_modules/@syncfusion/ej2-splitbuttons/index.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Query Builder Source\n */\n/* eslint-disable max-len */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Defines the Columns of Query Builder\n */\nvar Columns = /** @class */ (function (_super) {\n    __extends(Columns, _super);\n    function Columns() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Columns.prototype, \"field\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Columns.prototype, \"label\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Columns.prototype, \"type\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Columns.prototype, \"values\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Columns.prototype, \"operators\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Columns.prototype, \"ruleTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Columns.prototype, \"template\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({ isRequired: true, min: 0, max: Number.MAX_VALUE })\n    ], Columns.prototype, \"validation\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Columns.prototype, \"format\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Columns.prototype, \"step\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Columns.prototype, \"value\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Columns.prototype, \"category\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Columns.prototype, \"columns\", void 0);\n    return Columns;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Defines the rule of Query Builder\n */\nvar Rule = /** @class */ (function (_super) {\n    __extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Rule.prototype, \"condition\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([], Rule)\n    ], Rule.prototype, \"rules\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Rule.prototype, \"field\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Rule.prototype, \"label\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Rule.prototype, \"type\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Rule.prototype, \"operator\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Rule.prototype, \"value\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Rule.prototype, \"not\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Rule.prototype, \"isLocked\", void 0);\n    return Rule;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Defines the property for value.\n */\nvar Value = /** @class */ (function (_super) {\n    __extends(Value, _super);\n    function Value() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Value.prototype, \"numericTextBoxModel\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Value.prototype, \"multiSelectModel\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Value.prototype, \"datePickerModel\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Value.prototype, \"textBoxModel\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Value.prototype, \"radioButtonModel\", void 0);\n    return Value;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Defines the ruleDelete, groupInsert, and groupDelete options of Query Builder.\n */\nvar ShowButtons = /** @class */ (function (_super) {\n    __extends(ShowButtons, _super);\n    function ShowButtons() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], ShowButtons.prototype, \"cloneRule\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], ShowButtons.prototype, \"cloneGroup\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], ShowButtons.prototype, \"lockRule\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], ShowButtons.prototype, \"lockGroup\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], ShowButtons.prototype, \"ruleDelete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], ShowButtons.prototype, \"groupInsert\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], ShowButtons.prototype, \"groupDelete\", void 0);\n    return ShowButtons;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\nvar QueryBuilder = /** @class */ (function (_super) {\n    __extends(QueryBuilder, _super);\n    function QueryBuilder(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.isReadonly = true;\n        _this.fields = { text: 'label', value: 'field' };\n        _this.updatedRule = { not: false, condition: 'and', isLocked: false };\n        _this.isLocale = false;\n        _this.isRefreshed = false;\n        _this.isNotified = false;\n        _this.isAddSuccess = false;\n        _this.isNotValueChange = false;\n        _this.isFieldChange = false;\n        _this.isFieldClose = false;\n        _this.isDestroy = false;\n        _this.isGetNestedData = false;\n        _this.isCustomOprCols = [];\n        _this.groupCounter = 0;\n        _this.lockItems = [];\n        _this.groupIndex = -1;\n        _this.ruleIndex = -1;\n        _this.isLastGroup = false;\n        _this.cloneGrpBtnClick = false;\n        _this.isMiddleGroup = false;\n        _this.cloneRuleBtnClick = false;\n        _this.isValueEmpty = false;\n        _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_2__.MultiSelect.Inject(_syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_2__.CheckBoxSelection);\n        return _this;\n    }\n    QueryBuilder.prototype.getPersistData = function () {\n        return this.addOnPersist(['rule']);\n    };\n    /**\n     * Clears the rules without root rule.\n     *\n     * @returns {void}.\n     */\n    QueryBuilder.prototype.reset = function () {\n        this.isImportRules = false;\n        var bodyElem = this.element.querySelector('.e-group-body');\n        var inputElement = this.element.querySelectorAll('input.e-control');\n        for (var i = 0, len = inputElement.length; i < len; i++) {\n            if (inputElement[i].className.indexOf('e-tooltip') > -1) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(inputElement[i], 'tooltip').destroy();\n            }\n            else if (inputElement[i].parentElement.className.indexOf('e-tooltip') > -1) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(inputElement[i].parentElement, 'tooltip').destroy();\n            }\n        }\n        if (bodyElem) {\n            bodyElem.innerHTML = '';\n        }\n        else {\n            var grpContainer = this.createElement('div', { attrs: { class: 'e-group-container' } });\n            var grpHeader = this.createElement('div', { attrs: { class: 'e-group-header' } });\n            var grpBody = this.createElement('div', { attrs: { class: 'e-group-body' } });\n            grpContainer.appendChild(grpHeader).appendChild(grpBody);\n            this.element.appendChild(grpContainer);\n            bodyElem = this.element.querySelector('.e-group-body');\n        }\n        if (this.headerTemplate && this.isRoot) {\n            this.element.innerHTML = '';\n            this.isRoot = false;\n        }\n        if (this.enableNotCondition) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(this.element.querySelectorAll('.e-qb-toggle'), 'e-active-toggle');\n        }\n        bodyElem.appendChild(this.createElement('div', { attrs: { class: 'e-rule-list' } }));\n        this.levelColl[this.element.id + '_group0'] = [0];\n        this.setProperties({ rule: { condition: 'and', not: false, rules: [] } }, true);\n        this.disableRuleCondition(bodyElem.parentElement);\n    };\n    QueryBuilder.prototype.getWrapper = function () {\n        return this.element;\n    };\n    QueryBuilder.prototype.getModuleName = function () {\n        return 'query-builder';\n    };\n    QueryBuilder.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'query-library',\n            args: [this]\n        });\n        return modules;\n    };\n    QueryBuilder.prototype.GetRootColumnName = function (field) {\n        return this.separator ? field.split(this.separator)[0] : field;\n    };\n    QueryBuilder.prototype.initialize = function () {\n        if (this.dataColl.length) {\n            var columnKeys = Object.keys(this.dataColl[0]);\n            var cols = [];\n            var categories = [];\n            var type = void 0;\n            var groupBy = false;\n            var isDate = false;\n            var value = void 0;\n            var validateObj = { isRequired: true, min: 0, max: Number.MAX_VALUE };\n            if (this.columns.length) {\n                this.columnSort();\n                var columns = this.columns;\n                for (var i = 0, len = columns.length; i < len; i++) {\n                    this.updateCustomOperator(columns[i], 'initial');\n                    if (!columns[i].type) {\n                        if (columnKeys.indexOf(columns[i].field) > -1) {\n                            value = this.dataColl[0][columns[i].field];\n                            type = typeof value;\n                            if (type === 'string') {\n                                isDate = !isNaN(Date.parse(value));\n                            }\n                            else if (type === 'object') {\n                                isDate = value instanceof Date && !isNaN(value.getTime());\n                                type = 'string';\n                            }\n                            columns[i].type = type;\n                            isDate = false;\n                        }\n                        type = 'string';\n                    }\n                    if (!columns[i].validation) {\n                        columns[i].validation = validateObj;\n                    }\n                    if (columns[i].category) {\n                        groupBy = true;\n                    }\n                    else {\n                        columns[i].category = this.l10n.getConstant('OtherFields');\n                    }\n                    if (categories.indexOf(columns[i].category) < 0) {\n                        categories.push(columns[i].category);\n                    }\n                    if (!columns[i].operators ||\n                        (this.isLocale && this.isCustomOprCols.indexOf(columns[i].field) === -1)) {\n                        columns[i].operators = this.customOperators[columns[i].type + 'Operator'];\n                    }\n                }\n                if (groupBy && (categories.length > 1 || categories[0] !== this.l10n.getConstant('OtherFields'))) {\n                    this.fields = { text: 'label', value: 'field', groupBy: 'category' };\n                }\n                this.updateSubFieldsFromColumns(this.columns);\n            }\n            else {\n                for (var i = 0, len = columnKeys.length; i < len; i++) {\n                    value = this.dataColl[0][columnKeys[i]];\n                    type = typeof value;\n                    if (type === 'string') {\n                        isDate = !isNaN(Date.parse(value));\n                    }\n                    else if (type === 'object' && !Object.keys(value).length) {\n                        isDate = value instanceof Date && !isNaN(value.getTime());\n                        type = 'string';\n                    }\n                    cols[i] = { 'field': columnKeys[i], 'label': columnKeys[i], 'type': isDate ? 'date' : type,\n                        'validation': validateObj };\n                    isDate = false;\n                    cols[i].operators = this.customOperators[cols[i].type + 'Operator'];\n                    if (type === 'object') {\n                        this.updateSubFields(value, cols[i]);\n                    }\n                }\n                this.columns = cols;\n            }\n        }\n        else if (this.columns && this.columns.length) {\n            var columns = this.columns;\n            for (var i = 0, len = columns.length; i < len; i++) {\n                if (columns[i].category) {\n                    this.fields = { text: 'label', value: 'field', groupBy: 'category' };\n                }\n                else {\n                    columns[i].category = this.l10n.getConstant('OtherFields');\n                }\n                this.updateCustomOperator(columns[i], 'initial');\n                if (!columns[i].operators ||\n                    (this.isLocale && this.isCustomOprCols.indexOf(columns[i].field) === -1)) {\n                    columns[i].operators = this.customOperators[columns[i].type + 'Operator'];\n                }\n            }\n            this.updateSubFieldsFromColumns(this.columns);\n        }\n        this.trigger('dataBound', { type: 'dataBound' });\n    };\n    QueryBuilder.prototype.updateSubFieldsFromColumns = function (col, field) {\n        for (var i = 0; i < col.length; i++) {\n            if (this.separator !== '' && col[i].field.indexOf(this.separator) < 0) {\n                col[i].field = field ? field + this.separator + col[i].field : col[i].field;\n            }\n            if (col[i].operators) {\n                this.updateCustomOperator(col[i]);\n            }\n            else if (col[i].type && col[i].type !== 'object') {\n                col[i].operators = this.customOperators[col[i].type + 'Operator'];\n            }\n            if (col[i].columns) {\n                col[i].type = 'object';\n                this.updateSubFieldsFromColumns(col[i].columns, col[i].field);\n            }\n        }\n    };\n    QueryBuilder.prototype.updateSubFields = function (value, col, data) {\n        var sampCol;\n        col.columns = [];\n        var columnKeys = Object.keys(value);\n        var field;\n        var label;\n        var type;\n        var result;\n        data = data ? data : this.dataColl[0];\n        for (var i = 0, len = columnKeys.length; i < len; i++) {\n            var compField = col.field.split('.');\n            if (data) {\n                result = data[compField[compField.length - 1]][columnKeys[i]];\n            }\n            else {\n                result = this.dataColl[0][col.field][columnKeys[i]];\n            }\n            var resData = data[col.field.split(this.separator)[col.field.split(this.separator).length - 1]];\n            type = typeof result;\n            field = col.field + this.separator + columnKeys[i];\n            label = columnKeys[i];\n            type = (type === 'object' && !isNaN(Date.parse(result))) ? 'date' : type;\n            sampCol = { field: field, label: label, type: type };\n            if (type !== 'object') {\n                sampCol.operators = this.customOperators[type + 'Operator'];\n            }\n            col.columns.push(sampCol);\n            if (type === 'object') {\n                this.updateSubFields(result, sampCol, resData);\n            }\n        }\n    };\n    QueryBuilder.prototype.updateCustomOperator = function (column, from) {\n        if (column.operators) {\n            if (!this.isLocale && from === 'initial' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.isCustomOprCols)) {\n                this.isCustomOprCols.push(column.field);\n            }\n            var _loop_1 = function (j) {\n                var sqlIdx = Object.keys(column.operators[j]).indexOf('sqlOperator');\n                if (sqlIdx > -1) {\n                    var operator_1 = column.operators[j];\n                    var operColl = Object.keys(operator_1);\n                    var values = operColl.map(function (key) { return operator_1[\"\" + key]; }).join(',').split(',');\n                    var valueIdx = operColl.indexOf('value');\n                    this_1.operators[values[valueIdx]] = values[sqlIdx];\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < column.operators.length; j++) {\n                _loop_1(j);\n            }\n        }\n    };\n    QueryBuilder.prototype.focusEventHandler = function (event) {\n        this.target = event.target;\n    };\n    QueryBuilder.prototype.clickEventHandler = function (event) {\n        var _this = this;\n        var target = event.target;\n        var args;\n        this.isImportRules = false;\n        var groupID;\n        if (target.tagName === 'SPAN') {\n            target = target.parentElement;\n        }\n        if (typeof target.className === 'string' && target.className.indexOf('e-collapse-rule') > -1) {\n            var animation = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation({ duration: 1000, delay: 0 });\n            if (this.element.querySelectorAll('.e-summary-content').length < 1) {\n                this.renderSummary();\n            }\n            var summaryElem = document.getElementById(this.element.id + '_summary_content');\n            var txtareaElem = summaryElem.querySelector('.e-summary-text');\n            animation.animate('.e-query-builder', { name: 'SlideLeftIn' });\n            var groupElem = this.element.querySelector('.e-group-container');\n            groupElem.style.display = 'none';\n            txtareaElem.textContent = this.getSqlFromRules(this.rule);\n            summaryElem.style.display = 'block';\n            txtareaElem.style.height = txtareaElem.scrollHeight + 'px';\n        }\n        if (target.tagName === 'BUTTON' && typeof target.className === 'string' && target.className.indexOf('e-qb-toggle') < 0) {\n            var animation = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation({ duration: 1000, delay: 0 });\n            switch (true) {\n                case target.className.indexOf('e-removerule') > -1:\n                    this.actionButton = target;\n                    this.deleteRule(target);\n                    break;\n                case target.className.indexOf('e-clone-rule-btn') > -1:\n                    this.actionButton = target;\n                    this.cloneRuleBtnClick = true;\n                    this.ruleClone(target);\n                    break;\n                case target.className.indexOf('e-lock-rule-btn') > -1:\n                    this.actionButton = target;\n                    this.ruleLock(target);\n                    break;\n                case target.className.indexOf('e-lock-grp-btn') > -1:\n                    this.actionButton = target;\n                    this.groupLock(target);\n                    break;\n                case target.className.indexOf('e-clone-grp-btn') > -1:\n                    this.actionButton = target;\n                    this.cloneGrpBtnClick = true;\n                    this.groupClone((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container'));\n                    break;\n                case target.className.indexOf('e-deletegroup') > -1:\n                    this.actionButton = target;\n                    this.deleteGroup((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container'));\n                    break;\n                case target.className.indexOf('e-edit-rule') > -1:\n                    animation.animate('.e-query-builder', { name: 'SlideLeftIn' });\n                    document.getElementById(this.element.id + '_summary_content').style.display = 'none';\n                    if (this.element.querySelectorAll('.e-group-container').length < 1) {\n                        this.addGroupElement(false, this.element, this.rule.condition, false, this.rule.not);\n                        var mRules = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.rule, {}, true);\n                        this.setGroupRules(mRules);\n                        this.renderSummaryCollapse();\n                    }\n                    else {\n                        var groupElem = this.element.querySelector('.e-group-container');\n                        if (groupElem.querySelectorAll('.e-collapse-rule').length < 1) {\n                            this.renderSummaryCollapse();\n                        }\n                        groupElem.style.display = 'block';\n                    }\n                    break;\n            }\n        }\n        else if ((target.tagName === 'LABEL' && target.parentElement.className.indexOf('e-btn-group') > -1) ||\n            (typeof target.className === 'string' && target.className.indexOf('e-qb-toggle') > -1)) {\n            var element = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container');\n            if (!this.headerTemplate) {\n                var forIdValue = target.getAttribute('for');\n                var targetValue = void 0;\n                if (forIdValue) {\n                    targetValue = document.getElementById(forIdValue).getAttribute('value');\n                }\n                else if (this.enableSeparateConnector) {\n                    targetValue = target.textContent;\n                }\n                groupID = element.id.replace(this.element.id + '_', '');\n                var group = this.getGroup(groupID);\n                var ariaChecked = void 0;\n                if (this.enableNotCondition) {\n                    if (target.className.indexOf('e-qb-toggle') > -1) {\n                        var toggleElem = element.getElementsByClassName('e-qb-toggle')[0];\n                        if (toggleElem.className.indexOf('e-active-toggle') > -1) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([toggleElem], 'e-active-toggle');\n                            ariaChecked = false;\n                        }\n                        else {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([toggleElem], 'e-active-toggle');\n                            ariaChecked = true;\n                        }\n                        targetValue = group.condition;\n                    }\n                    else {\n                        ariaChecked = group.not;\n                    }\n                }\n                args = { groupID: groupID, cancel: false, type: 'condition', value: targetValue.toLowerCase() };\n                if (this.enableNotCondition) {\n                    args = { groupID: groupID, cancel: false, type: 'condition', value: targetValue.toLowerCase(),\n                        'not': ariaChecked };\n                }\n            }\n            if (!this.isImportRules) {\n                this.trigger('beforeChange', args, function (observedChangeArgs) {\n                    _this.beforeSuccessCallBack(observedChangeArgs, target);\n                });\n            }\n            else {\n                this.beforeSuccessCallBack(args, target);\n            }\n            this.target = target;\n        }\n    };\n    QueryBuilder.prototype.beforeSuccessCallBack = function (args, target) {\n        if (args && !args.cancel) {\n            var element = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container');\n            var groupID = element.id.replace(this.element.id + '_', '');\n            var beforeRules = this.getValidRules(this.rule);\n            var rule = this.getParentGroup(element);\n            if (this.enableSeparateConnector) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-container')) &&\n                    element.classList.contains('e-group-container')) {\n                    element = target.parentElement.previousElementSibling !== null ?\n                        target.parentElement.previousElementSibling : element;\n                }\n                else {\n                    element = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-container');\n                }\n                var id = element.id.replace(this.element.id + '_', '');\n                if (element.classList.contains('e-rule-container')) {\n                    rule = this.getRule(element);\n                    rule.condition = args.value;\n                }\n                else if (element.classList.contains('e-group-container')) {\n                    rule = this.getGroup(element);\n                    rule.condition = args.value;\n                }\n                if (this.enableNotCondition) {\n                    rule.not = args.not;\n                }\n                if (!this.isImportRules) {\n                    this.trigger('change', { groupID: groupID, ruleID: id, type: 'condition', value: rule.condition });\n                }\n            }\n            else {\n                rule.condition = args.value;\n                if (this.enableNotCondition) {\n                    rule.not = args.not;\n                }\n                if (!this.isImportRules) {\n                    this.trigger('change', { groupID: groupID, type: 'condition', value: rule.condition });\n                }\n            }\n            this.filterRules(beforeRules, this.getValidRules(this.rule), 'condition');\n            if (this.enableSeparateConnector) {\n                var andElem = target.parentElement.querySelector('.e-btngroup-and');\n                var orElem = target.parentElement.querySelector('.e-btngroup-or');\n                if (andElem && orElem) {\n                    if (args.value === 'and') {\n                        andElem.checked = true;\n                        orElem.checked = false;\n                    }\n                    else if (args.value === 'or') {\n                        orElem.checked = true;\n                        andElem.checked = false;\n                    }\n                }\n            }\n        }\n    };\n    QueryBuilder.prototype.selectBtn = function (target, event) {\n        if (event.name === 'beforeOpen') {\n            if (this.showButtons.groupInsert || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.showButtons.groupInsert)) {\n                if (this.element.querySelectorAll('.e-group-container').length >= this.maxGroupCount + 1) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([event.element.querySelector('li span.e-addgroup').parentElement], 'e-button-hide');\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([event.element.querySelector('li span.e-addgroup').parentElement], 'e-button-hide');\n                }\n                if (this.enableRtl) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([event.element.querySelector('li').parentElement], 'e-rtl');\n                }\n            }\n            else {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([event.element.querySelector('li span.e-addgroup').parentElement], 'e-button-hide');\n            }\n        }\n        else if (event.element.children[0].className.indexOf('e-addrule') > -1) {\n            this.addRuleElement((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container'), {});\n        }\n        else if (event.element.children[0].className.indexOf('e-addgroup') > -1) {\n            this.addGroupElement(true, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container'), '', true);\n        }\n    };\n    QueryBuilder.prototype.appendRuleElem = function (target, column, type, parentId, action, rule) {\n        var ruleElem;\n        var elem;\n        var ruleListElem = target.querySelector('.e-rule-list');\n        var args;\n        if (type === 'change') {\n            ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + parentId, target);\n        }\n        else {\n            ruleElem = this.createElement('div', { attrs: { class: 'e-rule-container' } });\n            ruleElem.setAttribute('id', target.id + '_rule' + this.ruleIdCounter);\n            if (this.showButtons.cloneRule && this.cloneRuleBtnClick) {\n                if (this.ruleIndex < 0) {\n                    ruleListElem.appendChild(ruleElem);\n                }\n                else {\n                    if (this.enableSeparateConnector) {\n                        var index = -1;\n                        var tempRuleIndex = this.ruleIndex + 1;\n                        for (var i = 0; i < tempRuleIndex; i++) {\n                            if (i === ruleListElem.children.length) {\n                                break;\n                            }\n                            if (ruleListElem.children[i].classList.contains('e-rule-container')) {\n                                tempRuleIndex++;\n                                index++;\n                            }\n                        }\n                        ruleListElem.insertBefore(ruleElem, ruleListElem.children[this.ruleIndex + index + 1]); // added clone rule to next position\n                    }\n                    else {\n                        ruleListElem.insertBefore(ruleElem, ruleListElem.children[this.ruleIndex + 1]); // added clone rule to next position\n                    }\n                }\n                this.cloneRuleBtnClick = false;\n            }\n            else {\n                ruleListElem.appendChild(ruleElem);\n            }\n            this.ruleIdCounter++;\n        }\n        if (column && column.ruleTemplate && rule) {\n            args = { requestType: 'template-initialize', ruleID: ruleElem.id, action: action, fields: this.fields, rule: rule };\n            this.trigger('actionBegin', args);\n            this.ruleTemplateFn = this.templateParser(column.ruleTemplate);\n            var templateID = this.element.id + column.field;\n            var template = void 0;\n            args.fields = this.fields;\n            args.columns = this.columns;\n            if (rule.field === '') {\n                rule.field = column.field;\n            }\n            args.operators = this.getOperators(rule.field);\n            args.operatorFields = { text: 'key', value: 'value' };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact) {\n                template = this.ruleTemplateFn(args, this, ruleElem.id, templateID)[0];\n                elem = template;\n                elem.className += ' e-rule-field';\n                ruleElem.appendChild(elem);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            else if (this.isAngular) {\n                var templateColl = this.ruleTemplateFn(args, this, ruleElem.id, templateID);\n                template = (templateColl[0].nodeType === 3) ? templateColl[1] : templateColl[0];\n                elem = template;\n                elem.className += ' e-rule-field';\n                ruleElem.appendChild(elem);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            else if (this.isVue3) {\n                template = this.ruleTemplateFn(args, this, 'Template', templateID);\n                elem = template;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)(elem, ruleElem);\n                if (ruleElem.children.length) {\n                    ruleElem.children[ruleElem.children.length - 1].className += ' e-rule-field';\n                }\n            }\n            else {\n                template = this.ruleTemplateFn(args, this, 'Template', templateID)[0];\n                elem = template;\n                elem.className += ' e-rule-field';\n                ruleElem.appendChild(elem);\n            }\n        }\n        else {\n            elem = this.ruleElem.querySelector('.e-rule-field').cloneNode(true);\n            ruleElem.appendChild(elem);\n        }\n        if (this.showButtons.lockGroup) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(ruleElem.querySelectorAll('.e-lock-grp-btn'), 'e-button-hide');\n        }\n        if (this.showButtons.lockRule) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(ruleElem.querySelectorAll('.e-lock-rule-btn'), 'e-button-hide');\n        }\n        if (this.showButtons.cloneGroup) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(ruleElem.querySelectorAll('.e-clone-grp-btn'), 'e-button-hide');\n        }\n        if (this.showButtons.cloneRule) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(ruleElem.querySelectorAll('.e-clone-rule-btn'), 'e-button-hide');\n        }\n        if (this.showButtons.ruleDelete) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(ruleElem.querySelectorAll('.e-lock-grp-btn'), 'e-button-hide');\n        }\n        if (this.allowDragAndDrop) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(ruleElem.querySelectorAll('.e-drag-qb-rule'), 'e-hidden');\n        }\n        if (column && column.ruleTemplate && rule) {\n            this.renderReactTemplates();\n        }\n        return ruleElem;\n    };\n    QueryBuilder.prototype.addRuleElement = function (target, rule, column, action, parentId, isRuleTemplate) {\n        var _this = this;\n        if (!target) {\n            return;\n        }\n        var args = { groupID: target.id.replace(this.element.id + '_', ''), cancel: false, type: 'insertRule' };\n        if (!this.isImportRules && !this.isInitialLoad && !this.prvtEvtTgrDaD) {\n            this.trigger('beforeChange', args, function (observedChangeArgs) {\n                _this.addRuleSuccessCallBack(observedChangeArgs, target, rule, column, action, parentId, isRuleTemplate);\n            });\n        }\n        else {\n            this.isInitialLoad = false;\n            this.addRuleSuccessCallBack(args, target, rule, column, action, parentId, isRuleTemplate);\n        }\n    };\n    QueryBuilder.prototype.addRuleSuccessCallBack = function (args, trgt, rule, col, act, pId, isRlTmp) {\n        var height = (this.element.className.indexOf('e-device') > -1) ? '250px' : '200px';\n        var ruleID;\n        var column = (rule && rule.field) ? this.getColumn(rule.field) : col ? col : this.columns[0];\n        var operators;\n        var dropDownList;\n        var ruleElem;\n        var newRule = { 'label': '', 'field': '', 'type': '', 'operator': '' };\n        if (!args.cancel) {\n            if (column && column.ruleTemplate && rule.field) {\n                this.selectedColumn = column;\n                operators = this.selectedColumn.operators;\n                newRule = { 'label': column.label, 'field': column.field, 'type': column.type, 'operator': operators[0].value };\n                var passedRule = Object.keys(rule).length ? rule : newRule;\n                ruleElem = this.appendRuleElem(trgt, column, act, pId, 'field', passedRule);\n                var args_1 = { requestType: 'template-create', action: 'insert-rule', ruleID: ruleElem.id,\n                    fields: this.fields, rule: passedRule };\n                this.trigger('actionBegin', args_1);\n            }\n            else {\n                ruleElem = this.appendRuleElem(trgt, column, act, pId, 'field');\n                ruleElem.querySelector('.e-filter-input').setAttribute('id', ruleElem.id + '_filterkey');\n                var element = ruleElem.querySelector('.e-rule-delete');\n                if (this.element.className.indexOf('e-device') > -1 || this.displayMode === 'Vertical') {\n                    element.textContent = this.l10n.getConstant('Remove');\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([element], 'e-flat');\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([element], 'e-primary');\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([element], 'e-round');\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([element], 'e-icon-btn');\n                    element.setAttribute('title', this.l10n.getConstant('DeleteRule'));\n                    var spanElement = this.createElement('span', { attrs: { class: 'e-btn-icon e-icons e-delete-icon' } });\n                    ruleElem.querySelector('.e-rule-delete').appendChild(spanElement);\n                }\n                if (!this.showButtons.ruleDelete) {\n                    element.classList.add('e-button-hide');\n                }\n            }\n            if (this.displayMode === 'Vertical' || this.element.className.indexOf('e-device') > -1) {\n                ruleElem.className = 'e-rule-container e-vertical-mode';\n            }\n            else {\n                ruleElem.className = 'e-rule-container e-horizontal-mode';\n            }\n            var previousRuleElem = ruleElem.previousElementSibling;\n            if (this.enableSeparateConnector) {\n                var prevRule = void 0;\n                var ruleContainer = void 0;\n                if (previousRuleElem && previousRuleElem.classList.contains('e-group-container')) {\n                    ruleContainer = previousRuleElem.querySelectorAll('.e-rule-container');\n                    previousRuleElem = ruleContainer[ruleContainer.length - 1];\n                }\n                if (previousRuleElem && previousRuleElem.classList.contains('e-rule-container')) {\n                    prevRule = this.getRule(previousRuleElem);\n                }\n                if (this.headerTemplate && previousRuleElem && prevRule) {\n                    this.headerTemplateFn(previousRuleElem, false, prevRule.condition, prevRule, previousRuleElem.id);\n                }\n                else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(previousRuleElem) && ruleElem.id !== this.element.id + '_group0_rule0') {\n                    var group = ruleElem.closest('.e-group-container');\n                    if (group && group.previousElementSibling) {\n                        var prevElem = group.previousElementSibling;\n                        var prevRuleContainer = prevElem.querySelectorAll('.e-rule-container');\n                        if (prevElem.classList.contains('e-group-container')) {\n                            prevElem = prevRuleContainer[prevRuleContainer.length - 1];\n                        }\n                        if (prevElem.classList.contains('e-rule-container')) {\n                            var prevRule_1 = this.getRule(prevElem);\n                            this.headerTemplateFn(prevElem, false, prevRule_1.condition, prevRule_1, prevElem.id, true);\n                        }\n                    }\n                    else {\n                        this.headerTemplateFn(ruleElem, false, rule.condition, rule, ruleElem.id, true);\n                    }\n                }\n            }\n            else {\n                if (previousRuleElem && previousRuleElem.className.indexOf('e-rule-container') > -1) {\n                    if (ruleElem.className.indexOf('e-joined-rule') < 0) {\n                        ruleElem.className += ' e-joined-rule';\n                    }\n                    if (previousRuleElem.className.indexOf('e-prev-joined-rule') < 0) {\n                        previousRuleElem.className += ' e-prev-joined-rule';\n                    }\n                }\n            }\n            if (previousRuleElem && previousRuleElem.className.indexOf('e-group-container') > -1 &&\n                ruleElem.className.indexOf('e-separate-rule') < 0) {\n                ruleElem.className += ' e-separate-rule';\n            }\n            if (!this.isImportRules) {\n                this.updateAddedRule(trgt, rule, newRule, isRlTmp, pId, this.enableSeparateConnector ? true : null);\n            }\n            if (!column || (column && !column.ruleTemplate) || !rule.field) {\n                if (this.fieldMode === 'Default') {\n                    var ddlField = void 0;\n                    var ddlValue = void 0;\n                    if (this.separator && rule.field) {\n                        ddlValue = this.GetRootColumnName(rule.field);\n                    }\n                    else if (this.autoSelectField) {\n                        ddlValue = this.GetRootColumnName(rule.field);\n                    }\n                    else {\n                        ddlValue = this.isImportRules ? this.GetRootColumnName(rule.field) : rule.field;\n                    }\n                    ddlField = {\n                        dataSource: this.columns,\n                        fields: this.fields, placeholder: this.l10n.getConstant('SelectField'),\n                        popupHeight: ((this.columns.length > 5) ? height : 'auto'), close: this.fieldClose.bind(this, ruleElem.id + '_filterkey'),\n                        change: this.changeField.bind(this), value: rule ? ddlValue : null, open: this.popupOpen.bind(this, true), cssClass: 'qb-dropdownlist'\n                    };\n                    if (this.fieldModel) {\n                        ddlField = __assign({}, ddlField, this.fieldModel);\n                    }\n                    dropDownList = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_2__.DropDownList(ddlField);\n                    dropDownList.appendTo('#' + ruleElem.id + '_filterkey');\n                    var ddlVal = void 0;\n                    if (this.separator && rule.field) {\n                        ddlVal = this.GetRootColumnName(rule.field);\n                    }\n                    else {\n                        ddlVal = this.isImportRules ? this.GetRootColumnName(rule.field) :\n                            dropDownList.value;\n                    }\n                    this.selectedColumn = dropDownList.getDataByValue(ddlVal);\n                    if (Object.keys(rule).length) {\n                        this.changeRule(rule, {\n                            element: dropDownList.element, itemData: this.selectedColumn\n                        });\n                    }\n                }\n                else {\n                    var ddlField = void 0;\n                    var ddlValue = this.isImportRules ? rule.field : rule.field;\n                    this.dummyDropdownTreeDs = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], this.columns, [], true);\n                    this.updateDropdowntreeDS(this.dummyDropdownTreeDs);\n                    ddlField = {\n                        fields: { dataSource: this.dummyDropdownTreeDs,\n                            value: 'field', text: 'label', child: 'columns', expanded: 'expanded', selectable: 'selectable' },\n                        placeholder: this.l10n.getConstant('SelectField'), showClearButton: false,\n                        popupHeight: ((this.columns.length > 5) ? height : 'auto'), changeOnBlur: false,\n                        change: this.changeField.bind(this), value: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(ddlValue) ? [ddlValue] : null,\n                        open: this.popupOpen.bind(this, false), treeSettings: { expandOn: 'Click' },\n                        cssClass: 'e-qb-ddt', filtering: this.dropdownTreeFiltering.bind(this), close: this.dropdownTreeClose.bind(this)\n                    };\n                    if (this.fieldModel) {\n                        ddlField = __assign({}, ddlField, this.fieldModel);\n                    }\n                    var dropdowntree = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_2__.DropDownTree(ddlField);\n                    dropdowntree.appendTo('#' + ruleElem.id + '_filterkey');\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dropdowntree.value)) {\n                        var value = this.getLabelFromColumn(dropdowntree.value[0]);\n                        dropdowntree.element.value = value;\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var ddlVal = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rule.field) ?\n                        this.GetRootColumnName(rule.field) : dropdowntree.value;\n                    this.selectedColumn = this.getColumn(ddlVal);\n                    if (Object.keys(rule).length) {\n                        this.changeRule(rule, {\n                            element: dropdowntree.element, itemData: this.selectedColumn\n                        });\n                    }\n                }\n            }\n            ruleID = ruleElem.id.replace(this.element.id + '_', '');\n            if (rule && rule.isLocked) {\n                var lockRuleTarget = ruleElem.querySelector('.e-lock-rule-btn');\n                this.ruleLock(lockRuleTarget);\n            }\n            if (!this.isImportRules && !this.prvtEvtTgrDaD) {\n                this.trigger('change', { groupID: trgt.id.replace(this.element.id + '_', ''), ruleID: ruleID, type: 'insertRule' });\n            }\n        }\n        if (this.enableSeparateConnector && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rule.condition) && ruleID) {\n            rule = this.getRule(ruleID);\n        }\n        if (this.enableSeparateConnector) {\n            var prevElem = ruleElem.previousElementSibling;\n            var ruleContainer = void 0;\n            while (prevElem && !prevElem.classList.contains('e-rule-container')) {\n                if (prevElem.classList.contains('e-group-container')) {\n                    ruleContainer = prevElem.querySelectorAll('.e-rule-container');\n                    prevElem = ruleContainer[ruleContainer.length - 1];\n                    break;\n                }\n                prevElem = prevElem.previousElementSibling;\n            }\n            if (this.headerTemplate && prevElem) {\n                var prevRule = this.getRule(prevElem);\n                var args_2 = { requestType: 'rule-template-create', ruleID: prevElem.id, condition: prevRule.condition,\n                    notCondition: this.enableNotCondition ? true : undefined };\n                this.trigger('actionBegin', args_2);\n            }\n            else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevElem) && ruleElem.id !== this.element.id + '_group0_rule0') {\n                var group = ruleElem.closest('.e-group-container');\n                if (group && group.previousElementSibling && group.previousElementSibling.previousElementSibling) {\n                    var prevElem_1 = group.previousElementSibling.previousElementSibling;\n                    if (prevElem_1.classList.contains('e-group-container')) {\n                        var ruleContainer_1 = prevElem_1.querySelectorAll('.e-rule-container');\n                        prevElem_1 = ruleContainer_1[ruleContainer_1.length - 1];\n                    }\n                    if (prevElem_1.classList.contains('e-rule-container')) {\n                        var prevRule = this.getRule(prevElem_1);\n                        var args_3 = { requestType: 'rule-template-create', ruleID: prevElem_1.id,\n                            condition: prevRule.condition, notCondition: this.enableNotCondition ? true : undefined };\n                        this.trigger('actionBegin', args_3);\n                    }\n                }\n            }\n            this.setMultiConnector(ruleElem);\n        }\n    };\n    QueryBuilder.prototype.dropdownTreeFiltering = function (args) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var proxy = this;\n        var ruleElemID = '';\n        var srcElement = args.event.srcElement;\n        var isClearIcon = srcElement.classList.contains('e-clear-icon');\n        var inputElem = isClearIcon ? srcElement.parentElement.querySelector('.e-textbox') : srcElement;\n        ruleElemID = inputElem.id.split('_filterkey')[0];\n        var ruleElem = document.getElementById(ruleElemID);\n        this.ddTree = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(ruleElem.querySelector('input.e-dropdowntree'), 'dropdowntree');\n        var hierarchicalData = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], this.columns, [], true);\n        // Cancel the default filtering.\n        args.cancel = true;\n        if (args.text === '') {\n            this.changeDataSource(hierarchicalData);\n        }\n        else {\n            var matchedDataSource = hierarchicalData\n                .map(function (data) { return _this.nestedChildFilter(args.text, data); })\n                .filter(function (filteredChild) { return filteredChild !== null; });\n            this.changeDataSource(matchedDataSource);\n            setTimeout(function () {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(proxy.ddTree) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(proxy.ddTree.treeObj)) {\n                    proxy.ddTree.treeObj.expandAll();\n                }\n            }, 100);\n        }\n    };\n    QueryBuilder.prototype.changeDataSource = function (data) {\n        this.updateDropdowntreeDS(data);\n        this.ddTree.treeObj.fields = {\n            dataSource: data,\n            value: 'field',\n            text: 'label',\n            child: 'columns',\n            expanded: 'expanded'\n        };\n        this.ddTree.treeObj.refresh();\n    };\n    QueryBuilder.prototype.nestedChildFilter = function (value, node) {\n        var _this = this;\n        var children = node[this.ddTree.fields.child];\n        if (!children) {\n            return this.isMatchedNode(value, node) ? node : null;\n        }\n        var matchedChildren = children\n            .map(function (child) { return _this.nestedChildFilter(value, child); })\n            .filter(function (filteredChild) { return filteredChild !== null; });\n        if (matchedChildren.length) {\n            node[this.ddTree.fields.child] = matchedChildren;\n            return node;\n        }\n        else {\n            node[this.ddTree.fields.child] = children;\n            return this.isMatchedNode(value, node) ? node : null;\n        }\n    };\n    QueryBuilder.prototype.isMatchedNode = function (value, node) {\n        var checkValue = node[this.ddTree.fields.text].toLowerCase();\n        value = value ? value.toLowerCase() : '';\n        return checkValue.indexOf(value) !== -1;\n    };\n    QueryBuilder.prototype.dropdownTreeClose = function () {\n        if (this.ddTree) {\n            this.changeDataSource((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], this.columns, [], true));\n        }\n        this.ddTree = null;\n    };\n    QueryBuilder.prototype.updateDropdowntreeDS = function (columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].type === 'object') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if (this.isAngular && columns[parseInt(i.toString(), 10)].template) {\n                    delete columns[parseInt(i.toString(), 10)].template;\n                }\n                columns[parseInt(i.toString(), 10)].selectable = false;\n                this.updateDropdowntreeDS(columns[parseInt(i.toString(), 10)].columns);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            else if (this.isAngular && columns[parseInt(i.toString(), 10)].template) {\n                delete columns[parseInt(i.toString(), 10)].template;\n            }\n        }\n    };\n    QueryBuilder.prototype.updateAddedRule = function (target, rule, newRule, isRuleTemplate, pId, isNewRuleAdded) {\n        var ruleElem;\n        var index = 0;\n        var groupElem;\n        var rules;\n        if (isRuleTemplate) {\n            ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + pId, target);\n            groupElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container');\n            rules = this.getParentGroup(groupElem);\n            while (ruleElem && ruleElem.previousElementSibling !== null) {\n                ruleElem = ruleElem.previousElementSibling;\n                var enableSeparateCondition = this.enableSeparateConnector && ((!this.headerTemplate && !ruleElem.classList.contains('e-btn-group')) ||\n                    (this.headerTemplate && (ruleElem.classList.contains('e-rule-container') ||\n                        ruleElem.classList.contains('e-group-container'))));\n                if (!this.enableSeparateConnector || enableSeparateCondition) {\n                    index++;\n                }\n            }\n            rules.rules[index] = rule;\n        }\n        else {\n            groupElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container');\n            rules = this.getParentGroup(groupElem);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var custom = rule.custom;\n            if (Object.keys(rule).length) {\n                if (this.ruleIndex < 0) {\n                    rules.rules.push({\n                        'field': rule.field, 'type': rule.type, 'label': rule.label, 'operator': rule.operator, value: rule.value\n                    });\n                    if (custom) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        rules.rules[rules.rules.length - 1].custom = custom;\n                    }\n                    if (this.enableSeparateConnector) {\n                        rules.rules[rules.rules.length - 1].condition = rule.condition ? rule.condition : newRule.condition;\n                    }\n                }\n                else {\n                    rules.rules.splice(this.ruleIndex + 1, 0, {\n                        'field': rule.field, 'type': rule.type, 'label': rule.label, 'operator': rule.operator, value: rule.value\n                    });\n                    if (custom) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        rules.rules[this.ruleIndex + 1].custom = custom;\n                    }\n                    if (this.enableSeparateConnector) {\n                        rules.rules[this.ruleIndex + 1].condition = rule.condition ? rule.condition : newRule.condition;\n                    }\n                }\n            }\n            else {\n                if (custom) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    newRule.custom = custom;\n                }\n                if (this.autoSelectField) {\n                    rule.field = newRule.field = this.rule.rules[0].field;\n                }\n                rules.rules.push(newRule);\n            }\n        }\n        this.disableRuleCondition(target, rules, isNewRuleAdded);\n    };\n    QueryBuilder.prototype.changeRuleTemplate = function (column, element) {\n        var operVal = this.selectedColumn.operators;\n        if (column.ruleTemplate) {\n            return;\n        }\n        else {\n            var parentGroup = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-group-container');\n            var parentId = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-rule-container').id;\n            if (this.previousColumn && this.previousColumn.ruleTemplate) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(element.closest('[id=\"' + parentId + '\"]').querySelector('.e-rule-field'));\n                this.clearQBTemplate([parentId]);\n            }\n            if (column) {\n                var rule = { field: column.field, label: column.label, operator: operVal[0].value, value: '' };\n                this.addRuleElement(parentGroup, rule, column, 'change', parentId, true);\n            }\n        }\n    };\n    QueryBuilder.prototype.renderToolTip = function (element) {\n        var tooltip = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_7__.Tooltip({ content: this.l10n.getConstant('ValidationMessage'), isSticky: true,\n            position: 'BottomCenter', cssClass: 'e-querybuilder-error', afterClose: function () {\n                tooltip.destroy();\n            }, beforeOpen: function (args) {\n                var tooltipCloseElement = args.element.querySelector('.e-tooltip-close');\n                if (tooltipCloseElement) {\n                    tooltipCloseElement.style.display = 'none';\n                }\n            } });\n        tooltip.appendTo(element);\n        tooltip.open(element);\n    };\n    /**\n     * Validate the conditions and it display errors for invalid fields.\n     *\n     * @returns {boolean} - Validation\n     */\n    QueryBuilder.prototype.validateFields = function () {\n        var isValid = true;\n        var dropDownTreeObj;\n        if (this.allowValidation) {\n            var excludeOprs = ['isnull', 'isnotnull', 'isempty', 'isnotempty'];\n            var i = void 0;\n            var len = void 0;\n            var fieldElem = void 0;\n            var indexElem = void 0;\n            var valArray = [];\n            var groupElem = void 0;\n            var index = void 0;\n            var dropDownObj = void 0;\n            var tempElem = void 0;\n            var rule = void 0;\n            var ruleElemCln = this.element.querySelectorAll('.e-rule-container');\n            for (i = 0, len = ruleElemCln.length; i < len; i++) {\n                var validateRule = void 0;\n                groupElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(ruleElemCln[i], '.e-group-container');\n                rule = this.getParentGroup(groupElem);\n                index = 0;\n                indexElem = tempElem = ruleElemCln[i];\n                if (this.fieldMode === 'DropdownTree') {\n                    dropDownTreeObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(ruleElemCln[i].querySelector('.e-rule-filter input.e-dropdowntree'), 'dropdowntree');\n                    if (dropDownTreeObj && dropDownTreeObj.value && dropDownTreeObj.value.length) {\n                        this.selectedColumn = this.getColumn(dropDownTreeObj.value[0]);\n                        validateRule = this.selectedColumn.validation;\n                    }\n                }\n                else {\n                    dropDownObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(ruleElemCln[i].querySelector('.e-rule-filter input.e-dropdownlist'), 'dropdownlist');\n                    if (dropDownObj && dropDownObj.value) {\n                        this.selectedColumn = dropDownObj.getDataByValue(dropDownObj.value);\n                        validateRule = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dropDownObj.value) && this.selectedColumn.validation;\n                    }\n                }\n                fieldElem = tempElem.querySelector('.e-rule-field input.e-control');\n                if (validateRule && validateRule.isRequired) {\n                    while (indexElem && indexElem.previousElementSibling !== null) {\n                        indexElem = indexElem.previousElementSibling;\n                        var separateCondition = this.enableSeparateConnector && ((!this.headerTemplate && !indexElem.classList.contains('e-btn-group')) ||\n                            (this.headerTemplate && (indexElem.classList.contains('e-rule-container') || indexElem.classList.contains('e-group-container'))));\n                        if (!this.enableSeparateConnector || separateCondition) {\n                            index++;\n                        }\n                    }\n                    fieldElem = tempElem.querySelector('.e-rule-operator .e-control');\n                    if (!rule.rules[index].operator) {\n                        if (fieldElem.parentElement.className.indexOf('e-tooltip') < 0 && fieldElem.className.indexOf('e-tooltip') < 0) {\n                            this.renderToolTip(fieldElem.parentElement);\n                        }\n                        isValid = false;\n                    }\n                    if (rule.rules[index].value instanceof Array) {\n                        valArray = rule.rules[index].value;\n                    }\n                    if (excludeOprs.indexOf(rule.rules[index].operator) < -1 &&\n                        ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rule.rules[index].value) &&\n                            rule.rules[index].type !== 'date') || rule.rules[index].value === '' || rule.rules[index].value === null ||\n                        (rule.rules[index].value instanceof Array && valArray.length < 1)) {\n                        var valElem = tempElem.querySelectorAll('.e-rule-value .e-control');\n                        if (excludeOprs.indexOf(rule.rules[index].operator) < 0) {\n                            isValid = false;\n                        }\n                        for (var j = 0, jLen = valElem.length; j < jLen; j++) {\n                            var element = valElem[j];\n                            var elem = void 0;\n                            if (element.parentElement.className.indexOf('e-searcher') > -1) {\n                                elem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-multi-select-wrapper');\n                                if (elem.className.indexOf('e-tooltip') < 0) {\n                                    this.renderToolTip(elem);\n                                }\n                            }\n                            else if (valElem[j].parentElement.className.indexOf('e-tooltip') < 0 && valElem[j].className.indexOf('e-tooltip') < 0) {\n                                this.renderToolTip(valElem[j].parentElement);\n                            }\n                            j++;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    }\n                    else if (rule.rules[index].type === 'date' && (rule.rules[index].value === null || rule.rules[index].value.indexOf(null) > -1)) {\n                        var valElem = tempElem.querySelectorAll('.e-rule-value .e-control');\n                        if (excludeOprs.indexOf(rule.rules[index].operator) < 0) {\n                            isValid = false;\n                        }\n                        for (var j = 0, jLen = valElem.length; j < jLen; j++) {\n                            if (valElem[j].parentElement.className.indexOf('e-tooltip') < 0 && valElem[j].className.indexOf('e-tooltip') < 0 && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rule.rules[index].value) || rule.rules[index].value[j] == null)) {\n                                this.renderToolTip(valElem[j].parentElement);\n                            }\n                        }\n                    }\n                }\n                else if ((dropDownObj && dropDownObj.element && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dropDownObj.value)) ||\n                    (dropDownTreeObj && dropDownTreeObj.element && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dropDownTreeObj.value) ||\n                        dropDownTreeObj.value.length < 1))) {\n                    if (fieldElem.parentElement.className.indexOf('e-tooltip') < 0) {\n                        this.renderToolTip(fieldElem.parentElement);\n                    }\n                    isValid = false;\n                }\n            }\n        }\n        return isValid;\n    };\n    QueryBuilder.prototype.refreshLevelColl = function () {\n        this.levelColl = {};\n        var groupElem = this.element.querySelector('.e-group-container');\n        if (groupElem) {\n            this.levelColl[groupElem.id] = [0];\n            var obj = { groupElement: groupElem, level: [0] };\n            this.refreshLevel(obj);\n        }\n    };\n    QueryBuilder.prototype.refreshLevel = function (obj) {\n        var ruleList = obj.groupElement.querySelector('.e-rule-list').children;\n        var childElem;\n        var groupElem = obj.groupElement;\n        var i;\n        var iLen = ruleList.length;\n        var groupCount = 0;\n        for (i = 0; i < iLen; i++) {\n            childElem = ruleList[i];\n            if (childElem.className.indexOf('e-group-container') > -1) {\n                obj.level.push(groupCount);\n                this.levelColl[childElem.id] = obj.level.slice();\n                groupCount++;\n                obj.groupElement = childElem;\n                obj = this.refreshLevel(obj);\n            }\n        }\n        var ruleListElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(groupElem, '.e-rule-list');\n        obj.groupElement = ruleListElem ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(ruleListElem, '.e-group-container') : groupElem;\n        obj.level = this.levelColl[obj.groupElement.id].slice();\n        return obj;\n    };\n    QueryBuilder.prototype.groupTemplate = function (isConnector) {\n        var glueElem;\n        var inputElem;\n        var dragClsName;\n        var labelElem;\n        var grpActElem;\n        var groupBtn;\n        var groupElem = this.createElement('div', { attrs: { class: 'e-group-container' } });\n        var groupHdrElem = this.createElement('div', { attrs: { class: 'e-group-header' } });\n        var grpBodyElem = this.createElement('div', { attrs: { class: 'e-group-body' } });\n        var rulesElem = this.createElement('div', { attrs: { class: 'e-rule-list' } });\n        groupElem.appendChild(groupHdrElem);\n        grpBodyElem.appendChild(rulesElem);\n        groupElem.appendChild(grpBodyElem);\n        // create button group in OR and AND process\n        if (!this.headerTemplate) {\n            if (this.allowDragAndDrop) {\n                dragClsName = 'e-icons e-drag-qb-rule';\n            }\n            else {\n                dragClsName = 'e-icons e-drag-qb-rule e-hidden';\n            }\n            var spanDragElement = this.createElement('span', { attrs: { class: dragClsName, 'aria-lable': 'drag handle',\n                    title: 'drag handle' } });\n            groupHdrElem.appendChild(spanDragElement);\n            var className = this.enableSeparateConnector && !isConnector ? 'e-lib e-btn-group e-qb-toggle-btn' : 'e-lib e-btn-group';\n            glueElem = this.createElement('div', { attrs: { class: className, role: 'group' } });\n            if (this.enableSeparateConnector) {\n                glueElem.classList.add('e-multi-connector');\n            }\n            if (this.enableNotCondition) {\n                if (this.enableSeparateConnector) {\n                    inputElem = this.createElement('input', { attrs: { type: 'checkbox', class: 'e-qb-toggle' } });\n                }\n                else {\n                    inputElem = this.createElement('button', { attrs: { type: 'button', class: 'e-qb-toggle' } });\n                }\n                glueElem.appendChild(inputElem);\n            }\n            inputElem = this.createElement('input', { attrs: { type: 'radio', class: 'e-btngroup-and', value: 'AND' } });\n            glueElem.appendChild(inputElem);\n            labelElem = this.createElement('label', { attrs: { class: 'e-lib e-btn e-btngroup-and-lbl e-small' },\n                innerHTML: this.l10n.getConstant('AND') });\n            glueElem.appendChild(labelElem);\n            inputElem = this.createElement('input', { attrs: { type: 'radio', class: 'e-btngroup-or', value: 'OR' } });\n            glueElem.appendChild(inputElem);\n            labelElem = this.createElement('label', { attrs: { class: 'e-lib e-btn e-btngroup-or-lbl e-small' },\n                innerHTML: this.l10n.getConstant('OR') });\n            glueElem.appendChild(labelElem);\n            groupHdrElem.appendChild(glueElem);\n            grpActElem = this.createElement('div', { attrs: { class: 'e-group-action' } });\n            if (this.enableSeparateConnector) {\n                groupBtn = this.createElement('button', { attrs: { type: 'button', class: 'e-add-condition-btn' } });\n                grpActElem.appendChild(groupBtn);\n                groupBtn = this.createElement('button', { attrs: { type: 'button', class: 'e-add-group-btn' } });\n                grpActElem.appendChild(groupBtn);\n            }\n            else {\n                groupBtn = this.createElement('button', { attrs: { type: 'button', class: 'e-add-btn' } });\n                grpActElem.appendChild(groupBtn);\n            }\n            groupHdrElem.appendChild(grpActElem);\n        }\n        return groupElem;\n    };\n    QueryBuilder.prototype.ruleTemplate = function () {\n        var tempElem;\n        var clsName;\n        var cloneClsName;\n        var lockClsName;\n        var dragClsName;\n        var ruleElem = this.createElement('div');\n        var fieldElem = this.createElement('div', { attrs: { class: 'e-rule-field' } });\n        tempElem = this.createElement('div', { attrs: { class: 'e-rule-filter' } });\n        if (this.allowDragAndDrop) {\n            dragClsName = 'e-icons e-drag-qb-rule';\n        }\n        else {\n            dragClsName = 'e-icons e-drag-qb-rule e-hidden';\n        }\n        var spanDragElement = this.createElement('span', { attrs: { class: dragClsName, 'aria-lable': 'drag handle',\n                title: 'drag handle' } });\n        fieldElem.appendChild(spanDragElement);\n        var filterElem = this.createElement('input', { attrs: { type: 'text', class: 'e-filter-input' } });\n        tempElem.appendChild(filterElem);\n        fieldElem.appendChild(tempElem);\n        tempElem = this.createElement('div', { attrs: { class: 'e-rule-operator' } });\n        fieldElem.appendChild(tempElem);\n        tempElem = this.createElement('div', { attrs: { class: 'e-rule-value' } });\n        fieldElem.appendChild(tempElem);\n        tempElem = this.createElement('div', { attrs: { class: 'e-rule-value-delete' } });\n        if (this.showButtons.cloneRule) {\n            cloneClsName = 'e-clone-rule-btn e-clone-rule e-css e-btn e-small e-round e-icon-btn';\n        }\n        else {\n            cloneClsName = 'e-clone-rule-btn e-clone-rule e-css e-btn e-small e-round e-icon-btn e-button-hide';\n        }\n        if (this.showButtons.lockRule) {\n            lockClsName = 'e-lock-rule-btn e-lock-rule e-css e-btn e-small e-round e-icons e-icon-btn';\n        }\n        else {\n            lockClsName = 'e-lock-rule-btn e-lock-rule e-css e-btn e-small e-round e-icons e-icon-btn e-button-hide';\n        }\n        var cloneRuleBtnElem = this.createElement('button', { attrs: { title: this.l10n.getConstant('CloneRule'), type: 'button', class: cloneClsName } });\n        var spanElement = this.createElement('span', { attrs: { class: 'e-btn-icon e-icons e-copy' } });\n        cloneRuleBtnElem.appendChild(spanElement);\n        var cloneLockBtnElem = this.createElement('button', { attrs: { title: this.l10n.getConstant('LockRule'), type: 'button', class: lockClsName } });\n        spanElement = this.createElement('span', { attrs: { class: 'e-btn-icon e-icons e-unlock' } });\n        cloneLockBtnElem.appendChild(spanElement);\n        if (this.showButtons.ruleDelete || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.showButtons.ruleDelete)) {\n            clsName = 'e-removerule e-rule-delete e-css e-btn e-small';\n        }\n        else {\n            clsName = 'e-removerule e-rule-delete e-css e-btn e-small e-button-hide';\n        }\n        var delBtnElem = this.createElement('button', { attrs: { type: 'button', class: clsName } });\n        tempElem.appendChild(cloneRuleBtnElem);\n        tempElem.appendChild(cloneLockBtnElem);\n        tempElem.appendChild(delBtnElem);\n        fieldElem.appendChild(tempElem);\n        ruleElem.appendChild(fieldElem);\n        return ruleElem;\n    };\n    QueryBuilder.prototype.addGroupElement = function (isGroup, target, condition, isBtnClick, not, isRoot, rule) {\n        var _this = this;\n        var args = { groupID: target.id.replace(this.element.id + '_', ''), cancel: false, type: 'insertGroup' };\n        if (!this.isImportRules && !this.isInitialLoad && !this.prvtEvtTgrDaD) {\n            this.trigger('beforeChange', args, function (observedChangeArgs) {\n                _this.addGroupSuccess(observedChangeArgs, isGroup, target, condition, isBtnClick, not, isRoot, rule);\n            });\n        }\n        else {\n            this.isInitialLoad = false;\n            this.addGroupSuccess(args, isGroup, target, condition, isBtnClick, not, isRoot, rule);\n        }\n    };\n    QueryBuilder.prototype.addGroupSuccess = function (args, isGroup, eventTarget, condition, isBtnClick, not, isRoot, rule) {\n        var _this = this;\n        if (!args.cancel && (this.element.querySelectorAll('.e-group-container').length <= this.maxGroupCount)) {\n            var target = eventTarget;\n            var dltGroupBtn = void 0;\n            var groupID = '';\n            if (target.className.indexOf('e-group-container') < 0) {\n                groupID = target.querySelector('.e-group-container') && target.querySelector('.e-group-container').id;\n            }\n            else {\n                groupID = target.id;\n            }\n            if (this.enableSeparateConnector) {\n                this.groupElem = this.groupTemplate();\n            }\n            var groupElem = this.groupElem.cloneNode(true);\n            groupElem.setAttribute('id', this.element.id + '_group' + this.groupIdCounter);\n            if (this.groupIdCounter === 0 && this.allowDragAndDrop && groupElem.querySelector('.e-drag-qb-rule')) {\n                if (groupElem && groupElem.children[0]) {\n                    groupElem.children[0].classList.add('e-parent-header');\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([groupElem.querySelector('.e-drag-qb-rule')], 'e-hidden');\n            }\n            if (this.headerTemplate) {\n                if (isRoot) {\n                    isGroup = false;\n                    groupElem.setAttribute('id', this.element.id + '_group0');\n                    this.headerTemplateFn(groupElem, not, condition, rule, groupID);\n                    this.groupIdCounter = 0;\n                }\n                else {\n                    this.headerTemplateFn(groupElem, not, condition, rule, groupID);\n                }\n            }\n            this.groupIdCounter++;\n            if (!this.headerTemplate) {\n                var andInpElem = groupElem.querySelector('.e-btngroup-and');\n                var orInpElem = groupElem.querySelector('.e-btngroup-or');\n                var andLblElem = groupElem.querySelector('.e-btngroup-and-lbl');\n                var orLblElem = groupElem.querySelector('.e-btngroup-or-lbl');\n                andInpElem.setAttribute('id', this.element.id + '_and' + this.btnGroupId);\n                orInpElem.setAttribute('id', this.element.id + '_or' + this.btnGroupId);\n                andInpElem.setAttribute('name', this.element.id + '_and' + this.btnGroupId);\n                orInpElem.setAttribute('name', this.element.id + '_and' + this.btnGroupId);\n                andLblElem.setAttribute('for', this.element.id + '_and' + this.btnGroupId);\n                orLblElem.setAttribute('for', this.element.id + '_or' + this.btnGroupId);\n                this.btnGroupId++;\n            }\n            if (isGroup) {\n                var clsName = void 0;\n                if (this.showButtons.groupDelete || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.showButtons.groupDelete)) {\n                    clsName = 'e-deletegroup';\n                }\n                else {\n                    clsName = 'e-deletegroup e-button-hide';\n                }\n                dltGroupBtn = this.createElement('button', { attrs: { type: 'button', class: clsName } });\n                var button = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.Button({ iconCss: 'e-icons e-delete-icon', cssClass: 'e-small e-round' });\n                button.appendTo(dltGroupBtn);\n                dltGroupBtn.setAttribute('title', this.l10n.getConstant('DeleteGroup'));\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.rippleEffect)(dltGroupBtn, { selector: '.deletegroup' });\n                var ruleList = target.querySelector('.e-rule-list');\n                var childElems = ruleList.children;\n                var grpLen = 0;\n                for (var j = 0, jLen = childElems.length; j < jLen; j++) {\n                    if (childElems[j].className.indexOf('e-group-container') > -1) {\n                        grpLen += 1;\n                    }\n                }\n                if (this.showButtons.cloneGroup && this.cloneGrpBtnClick) {\n                    if (this.groupIndex === (childElems.length - 1)) {\n                        ruleList.appendChild(groupElem);\n                        this.isLastGroup = true;\n                    }\n                    else {\n                        if (this.enableSeparateConnector) {\n                            var index = 0;\n                            var tempGroupIndex = this.groupIndex + 1;\n                            for (var i = 0; i < tempGroupIndex; i++) {\n                                if (childElems[i].classList.contains('e-rule-container')) {\n                                    tempGroupIndex++;\n                                    index++;\n                                }\n                            }\n                            if (index > 0) {\n                                index--;\n                            }\n                            var idx = this.groupIndex + index + 1;\n                            childElems[idx].parentNode.insertBefore(groupElem, childElems[idx]);\n                        }\n                        else {\n                            var idx = this.groupIndex + 1;\n                            childElems[idx].parentNode.insertBefore(groupElem, childElems[idx]);\n                        }\n                        this.isMiddleGroup = true;\n                    }\n                }\n                else {\n                    ruleList.appendChild(groupElem);\n                }\n                var level = this.levelColl[target.id].slice(0);\n                level.push(grpLen);\n                this.levelColl[groupElem.id] = level;\n                if (this.groupIndex > -1) {\n                    this.refreshLevelColl();\n                }\n                if (!this.isImportRules) {\n                    this.isAddSuccess = true;\n                    this.addGroups([], target.id.replace(this.element.id + '_', ''));\n                    this.isAddSuccess = false;\n                    if (isBtnClick && this.addRuleToNewGroups) {\n                        this.addRuleElement(groupElem, {});\n                    }\n                }\n                if (!this.headerTemplate) {\n                    var lockClsName = '';\n                    if (this.showButtons.cloneGroup) {\n                        lockClsName = 'e-clone-grp-btn e-css e-btn e-small e-round e-icons e-icon-btn';\n                    }\n                    else {\n                        lockClsName = 'e-clone-grp-btn e-css e-btn e-small e-round e-icons e-icon-btn e-button-hide';\n                    }\n                    var cloneBtnElem = this.createElement('button', { attrs: { title: this.l10n.getConstant('CloneGroup'), type: 'button', class: lockClsName } });\n                    var spanElement = this.createElement('span', { attrs: { class: 'e-btn-icon e-icons e-copy' } });\n                    cloneBtnElem.appendChild(spanElement);\n                    groupElem.querySelector('.e-group-action').appendChild(cloneBtnElem);\n                    if (this.showButtons.lockGroup) {\n                        lockClsName = 'e-lock-grp-btn e-css e-btn e-small e-round e-icons e-icon-btn';\n                    }\n                    else {\n                        lockClsName = 'e-lock-grp-btn e-css e-btn e-small e-round e-icons e-icon-btn e-button-hide';\n                    }\n                    var lockBtnElem = this.createElement('button', { attrs: { title: this.l10n.getConstant('LockGroup'), type: 'button', class: lockClsName } });\n                    var lockSpanElement = this.createElement('span', { attrs: { class: 'e-btn-icon e-icons e-unlock' } });\n                    lockBtnElem.appendChild(lockSpanElement);\n                    groupElem.querySelector('.e-group-action').appendChild(lockBtnElem);\n                    groupElem.querySelector('.e-group-action').appendChild(dltGroupBtn);\n                }\n            }\n            else {\n                if (!this.headerTemplate) {\n                    var lockClsName = '';\n                    if (this.showButtons.lockGroup) {\n                        lockClsName = 'e-lock-grp-btn e-css e-btn e-small e-round e-icons e-icon-btn';\n                    }\n                    else {\n                        lockClsName = 'e-lock-grp-btn e-css e-btn e-small e-round e-icons e-icon-btn e-button-hide';\n                    }\n                    var lockBtnElem = this.createElement('button', { attrs: { title: this.l10n.getConstant('LockGroup'), type: 'button', class: lockClsName } });\n                    var spanElement = this.createElement('span', { attrs: { class: 'e-btn-icon e-icons e-unlock' } });\n                    lockBtnElem.appendChild(spanElement);\n                    groupElem.querySelector('.e-group-action').appendChild(lockBtnElem);\n                }\n                target.appendChild(groupElem);\n                this.levelColl[groupElem.id] = [0];\n            }\n            if (this.enableNotCondition) {\n                if (!this.headerTemplate) {\n                    var notElem = groupElem.querySelector('.e-qb-toggle');\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var tglBtn = void 0;\n                    if (this.enableSeparateConnector) {\n                        tglBtn = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.CheckBox({ label: this.l10n.getConstant('NOT'), cssClass: 'e-qb-toggle' });\n                    }\n                    else {\n                        tglBtn = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.Button({ content: this.l10n.getConstant('NOT'), cssClass: 'e-btn e-small' });\n                    }\n                    tglBtn.appendTo(notElem);\n                    groupElem.querySelector('.e-btngroup-and-lbl').classList.add('e-not');\n                    if (this.updatedRule && this.updatedRule.not) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([notElem], 'e-active-toggle');\n                    }\n                }\n            }\n            if (this.enableSeparateConnector && !this.headerTemplate) {\n                var andElem = groupElem.querySelector('.e-btngroup-and');\n                var orElem = groupElem.querySelector('.e-btngroup-or');\n                var btnGroup = groupElem.querySelector('.e-btn-group');\n                for (var i = 0; i < btnGroup.childNodes.length; i++) {\n                    if (groupElem.querySelector('.e-btn-group').childNodes[i].textContent.toLowerCase() === 'not') {\n                        if (!this.enableNotCondition) {\n                            btnGroup.childNodes[i].style.display = 'none';\n                        }\n                        else {\n                            btnGroup.childNodes[i].classList.add('e-multiconnector');\n                        }\n                    }\n                    else {\n                        btnGroup.childNodes[i].style.display = 'none';\n                    }\n                }\n                var prevSibling = groupElem.previousElementSibling;\n                if (prevSibling) {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.headerTemplate)) {\n                        groupElem.parentElement.insertBefore(this.groupTemplate(true).querySelector('.e-btn-group'), groupElem);\n                        var notElem = groupElem.previousElementSibling.childNodes[0];\n                        if (notElem.classList.contains('e-qb-toggle')) {\n                            notElem.style.display = 'none';\n                        }\n                    }\n                    if (!this.isImportRules) {\n                        var groupElement = groupElem.previousElementSibling;\n                        var newAndElem = groupElement.querySelector('.e-btngroup-and');\n                        var newOrElem = groupElement.querySelector('.e-btngroup-or');\n                        if (!andElem.checked && !orElem.checked) {\n                            var nextSibling = groupElem.nextElementSibling;\n                            if (nextSibling && nextSibling.classList.contains('e-btn-group')) {\n                                andElem = nextSibling.querySelector('.e-btngroup-and');\n                                orElem = nextSibling.querySelector('.e-btngroup-or');\n                                newAndElem.checked = andElem.checked;\n                                newOrElem.checked = orElem.checked;\n                            }\n                        }\n                        else if (this.enableSeparateConnector) {\n                            if (andElem.checked) {\n                                newAndElem.checked = true;\n                            }\n                            if (orElem.checked) {\n                                newOrElem.checked = true;\n                            }\n                        }\n                    }\n                }\n            }\n            this.updatedRule = null;\n            if (this.headerTemplate) {\n                var args_4 = { requestType: 'header-template-create', ruleID: groupElem.id, condition: condition,\n                    notCondition: this.enableNotCondition ? not : undefined };\n                this.trigger('actionBegin', args_4);\n            }\n            else {\n                if (this.enableSeparateConnector) {\n                    var conditionBtn_1 = groupElem.querySelector('.e-add-condition-btn');\n                    var btnObj = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.Button({ cssClass: this.element.id + '_addConditionbtn', content: this.l10n.getConstant('AddCondition') });\n                    btnObj.appendTo(conditionBtn_1);\n                    btnObj.element.onclick = function () {\n                        _this.addRuleElement((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(conditionBtn_1, '.e-group-container'), {});\n                    };\n                    var groupBtn_1 = groupElem.querySelector('.e-add-group-btn');\n                    btnObj = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.Button({ cssClass: this.element.id + '_addGroupbtn', content: this.l10n.getConstant('AddGroup') });\n                    btnObj.appendTo(groupBtn_1);\n                    btnObj.element.onclick = function () {\n                        _this.addGroupElement(true, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(groupBtn_1, '.e-group-container'), '', true);\n                    };\n                }\n                else {\n                    var groupBtn = groupElem.querySelector('.e-add-btn');\n                    var btnObj = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_6__.DropDownButton({\n                        items: this.items,\n                        cssClass: 'e-round e-small e-caret-hide e-addrulegroup',\n                        iconCss: 'e-icons e-add-icon',\n                        beforeOpen: this.selectBtn.bind(this, groupBtn),\n                        select: this.selectBtn.bind(this, groupBtn)\n                    });\n                    btnObj.appendTo(groupBtn);\n                    groupBtn.setAttribute('title', this.l10n.getConstant('AddButton'));\n                }\n            }\n            if (!this.isImportRules && !this.prvtEvtTgrDaD) {\n                var grpId = target.id.replace(this.element.id + '_', '');\n                var chgrpId = groupElem.id.replace(this.element.id + '_', '');\n                this.trigger('change', { groupID: grpId, type: 'insertGroup', childGroupID: chgrpId });\n            }\n        }\n    };\n    QueryBuilder.prototype.setMultiConnector = function (trgt) {\n        if (this.enableSeparateConnector && !this.headerTemplate) {\n            if (trgt.previousElementSibling && this.groupElem.querySelector('.e-btn-group')) {\n                trgt.parentElement.insertBefore(this.groupTemplate(true).querySelector('.e-btn-group'), trgt);\n                var notElem = trgt.previousElementSibling.childNodes[0];\n                if (notElem.classList.contains('e-qb-toggle')) {\n                    notElem.style.display = 'none';\n                }\n                this.addHeaderDiv(trgt);\n            }\n        }\n    };\n    QueryBuilder.prototype.addHeaderDiv = function (elem) {\n        var prevRule;\n        var prevElem = elem.previousElementSibling.previousElementSibling;\n        if (prevElem) {\n            if (prevElem.id.indexOf('rule') > -1) {\n                prevRule = this.getRule(prevElem);\n            }\n            else {\n                prevRule = this.getGroup(prevElem);\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevRule.condition)) {\n                prevRule.condition = 'and';\n            }\n            var orElem = elem.previousElementSibling.querySelector('.e-btngroup-or');\n            var andElem = elem.previousElementSibling.querySelector('.e-btngroup-and');\n            orElem.disabled = false;\n            andElem.disabled = false;\n            if (prevRule.condition === 'or') {\n                orElem.checked = true;\n            }\n            else {\n                andElem.checked = true;\n            }\n        }\n    };\n    QueryBuilder.prototype.headerTemplateFn = function (groupElem, not, condition, rule, groupID, isInitialRule) {\n        var template;\n        var templateID = this.element.id + '_header';\n        var args;\n        var groupHdr = groupElem.querySelector('.e-group-header');\n        if (this.enableSeparateConnector && groupElem.id.indexOf('rule') !== -1) {\n            groupHdr = groupElem;\n        }\n        if (this.headerTemplate) {\n            args = { requestType: 'header-template-initialize', ruleID: groupElem.id,\n                notCondition: this.enableNotCondition ? not : undefined,\n                condition: condition, rule: this.getRuleCollection(rule, false), groupID: groupID };\n            this.trigger('actionBegin', args);\n            if (this.enableSeparateConnector && groupElem.id.indexOf('rule') !== -1) {\n                args.requestType = 'rule-template-create';\n            }\n            this.headerFn = this.templateParser(this.headerTemplate);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact) {\n                template = this.headerFn(args, this, groupElem.id, templateID)[0];\n                if (this.enableSeparateConnector && isInitialRule) {\n                    this.enableSeparateConnectorInitialRule(groupElem, template);\n                }\n                else if (this.enableSeparateConnector && groupElem.id.indexOf('rule') !== -1) {\n                    groupHdr.parentElement.insertBefore(template, groupHdr.nextElementSibling);\n                }\n                else {\n                    groupHdr.appendChild(template);\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            else if (this.isAngular) {\n                var templateColl = this.headerFn(args, this, groupElem.id, templateID);\n                template = (templateColl[0].nodeType === 3) ? templateColl[1] : templateColl[0];\n                if (this.enableSeparateConnector && isInitialRule) {\n                    this.enableSeparateConnectorInitialRule(groupElem, template);\n                }\n                else if (this.enableSeparateConnector && groupElem.id.indexOf('rule') !== -1) {\n                    groupHdr.parentElement.insertBefore(template, groupHdr.nextElementSibling);\n                }\n                else {\n                    groupHdr.appendChild(template);\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            else if (this.isVue3) {\n                template = this.headerFn(args, this, groupElem.id, templateID);\n                if (this.enableSeparateConnector && (isInitialRule || groupElem.id.indexOf('rule') !== -1)) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    for (var i = 0; i < template.length; i++) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        if (template[i].nodeName === 'DIV') {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            template = template[i];\n                            break;\n                        }\n                    }\n                }\n                if (this.enableSeparateConnector && isInitialRule) {\n                    this.enableSeparateConnectorInitialRule(groupElem, template);\n                }\n                else if (this.enableSeparateConnector && groupElem.id.indexOf('rule') !== -1) {\n                    groupHdr.parentElement.insertBefore(template, groupHdr.nextElementSibling);\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)(template, groupHdr);\n                }\n            }\n            else {\n                template = this.headerFn(args, this, 'Template', templateID)[0];\n                if (this.enableSeparateConnector && isInitialRule) {\n                    this.enableSeparateConnectorInitialRule(groupElem, template);\n                }\n                else if (this.enableSeparateConnector && groupElem.id.indexOf('rule') !== -1) {\n                    groupHdr.parentElement.insertBefore(template, groupHdr.nextElementSibling);\n                }\n                else {\n                    groupHdr.appendChild(template);\n                }\n            }\n            this.renderReactTemplates();\n        }\n        return groupElem;\n    };\n    QueryBuilder.prototype.enableSeparateConnectorInitialRule = function (groupElem, template) {\n        var elem = groupElem.nextElementSibling ? groupElem.nextElementSibling : groupElem;\n        var group = elem.closest('.e-group-container');\n        if (!groupElem.nextElementSibling && group) {\n            group = group.nextElementSibling ? group.nextElementSibling : group;\n        }\n        if (group) {\n            group.parentElement.insertBefore(template, group);\n        }\n    };\n    /**\n     * Notify the changes to component.\n     *\n     * @param {string | number | boolean | Date | string[] | number[] | Date[]} value - 'value' to be passed to update the rule value.\n     * @param {Element} element - 'element' to be passed to update the rule.\n     * @param {string} type - 'type' to be passed to update the rule .\n     * @returns {void}.\n     */\n    QueryBuilder.prototype.notifyChange = function (value, element, type) {\n        var grpElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-group-container');\n        var rules = this.getParentGroup(grpElement);\n        var ruleElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-rule-container');\n        var index = 0;\n        if (type === 'not') {\n            rules.not = value;\n            return;\n        }\n        if (type === 'condition') {\n            if (this.enableSeparateConnector) {\n                ruleElement = element.parentElement.previousElementSibling;\n                if (ruleElement && ruleElement.classList.contains('e-group-container')) {\n                    ruleElement = ruleElement.querySelectorAll('.e-rule-container')[ruleElement.querySelectorAll('.e-rule-container').length - 1];\n                }\n                if (ruleElement && ruleElement.classList.contains('e-rule-container')) {\n                    rules = this.getRule(ruleElement);\n                }\n                rules.condition = value;\n            }\n            else {\n                rules.condition = value;\n            }\n            return;\n        }\n        while (ruleElement && ruleElement.previousElementSibling !== null) {\n            ruleElement = ruleElement.previousElementSibling;\n            if (!this.enableSeparateConnector || (this.enableSeparateConnector &&\n                ((!this.headerTemplate && !ruleElement.classList.contains('e-btn-group')) ||\n                    this.headerTemplate && (ruleElement.classList.contains('e-rule-container') ||\n                        ruleElement.classList.contains('e-group-container'))))) {\n                index++;\n            }\n        }\n        var rule = rules.rules[index];\n        var column = this.getColumn(rule.field);\n        var format = this.getFormat(column.format);\n        if (column.type === 'date') {\n            if (value instanceof Date) {\n                value = this.intl.formatDate(value, format);\n            }\n            else if (value instanceof Array) {\n                for (var i = 0; i < value.length; i++) {\n                    if (value[i] && value[i] instanceof Date) {\n                        value[i] = this.intl.formatDate(value[i], format);\n                    }\n                }\n            }\n        }\n        if (column.ruleTemplate) {\n            this.templateChange(element, value, type);\n        }\n        else {\n            this.isNotified = true;\n            this.updateRules(element, value);\n            this.isNotified = false;\n        }\n    };\n    QueryBuilder.prototype.templateChange = function (element, value, type) {\n        var grpElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-group-container');\n        var eventsArgs;\n        var rules = this.getParentGroup(grpElem);\n        var ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-rule-container');\n        var index = 0;\n        if (this.allowValidation) {\n            this.validateValue(rules, ruleElem);\n        }\n        while (ruleElem && ruleElem.previousElementSibling !== null) {\n            ruleElem = ruleElem.previousElementSibling;\n            if (!this.enableSeparateConnector || (this.enableSeparateConnector &&\n                ((!this.headerTemplate && !ruleElem.classList.contains('e-btn-group')) ||\n                    this.headerTemplate && (ruleElem.classList.contains('e-rule-container') ||\n                        ruleElem.classList.contains('e-group-container'))))) {\n                index++;\n            }\n        }\n        var rule = rules.rules[index];\n        if (type === 'field') {\n            this.selectedColumn = this.getColumn(value);\n        }\n        else if (rule) {\n            this.selectedColumn = this.getColumn(rule.field);\n        }\n        var operVal;\n        this.previousColumn = this.getColumn(rule.field);\n        var beforeRules = this.getValidRules(this.rule);\n        if (this.selectedColumn) {\n            if (this.selectedColumn.operators) {\n                operVal = this.selectedColumn.operators;\n            }\n            else {\n                operVal = this.customOperators[this.selectedColumn.type + 'Operator'];\n            }\n        }\n        var arrOper = ['in', 'notin', 'between', 'notbetween'];\n        var prevOper;\n        switch (type) {\n            case 'field':\n                rule.field = value;\n                rule.label = this.selectedColumn.label;\n                rule.type = this.selectedColumn.type;\n                rule.value = '';\n                rule.operator = operVal[0].value;\n                break;\n            case 'operator':\n                prevOper = rule.operator;\n                rule.operator = value;\n                if (arrOper.indexOf(rule.operator) > -1) {\n                    rule.value = [];\n                }\n                else if (arrOper.indexOf(prevOper) > -1) {\n                    rule.value = '';\n                }\n                break;\n            case 'value':\n                rule.value = value;\n        }\n        this.changeRuleTemplate(this.selectedColumn, element);\n        this.filterRules(beforeRules, this.getValidRules(this.rule), type);\n        if (this.selectedColumn && this.selectedColumn.ruleTemplate) {\n            if (type === 'field' || type === 'operator') {\n                var grpEle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-rule-container');\n                this.destroyControls(grpEle, true);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(grpEle.querySelector('.e-rule-field'));\n                var ruleElement = this.appendRuleElem((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(grpEle, '.e-group-container'), this.selectedColumn, 'change', grpEle.id, type, rule);\n                if (this.displayMode === 'Vertical' || this.element.className.indexOf('e-device') > -1) {\n                    ruleElement.className = 'e-rule-container e-vertical-mode';\n                }\n                else {\n                    ruleElement.className = 'e-rule-container e-horizontal-mode';\n                }\n                if (!this.enableSeparateConnector) {\n                    if (ruleElement.previousElementSibling && ruleElement.previousElementSibling.className.indexOf('e-rule-container') > -1) {\n                        if (ruleElement.className.indexOf('e-joined-rule') < 0) {\n                            ruleElement.className += ' e-joined-rule';\n                        }\n                        if (ruleElement.previousElementSibling.className.indexOf('e-prev-joined-rule') < 0) {\n                            ruleElement.previousElementSibling.className += ' e-prev-joined-rule';\n                        }\n                    }\n                }\n                if (ruleElement.previousElementSibling && ruleElement.previousElementSibling.className.indexOf('e-group-container') > -1 &&\n                    ruleElement.className.indexOf('e-separate-rule') < 0) {\n                    ruleElement.className += ' e-separate-rule';\n                }\n                var args = { requestType: 'template-create', action: type, ruleID: grpEle.id,\n                    fields: this.fields, rule: rule };\n                eventsArgs = { groupID: grpElem.id.replace(this.element.id + '_', ''), ruleID: grpEle.id.replace(this.element.id + '_', ''),\n                    value: rule.field, type: 'field' };\n                this.trigger('actionBegin', args);\n                this.trigger('change', eventsArgs);\n            }\n        }\n    };\n    QueryBuilder.prototype.changeValue = function (i, args) {\n        var _this = this;\n        var element;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((this.isNumInput && typeof args.value === 'number') || (args.type === 'input' && args.target && args.target.classList.contains('e-numerictextbox'))\n            && (this.selectedColumn.validation && (this.selectedColumn.validation.max !== Number.MAX_VALUE || this.selectedColumn.validation.min > 0))) {\n            this.isNumInput = false;\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (args.element && args.element.classList.contains('e-multiselect')) {\n            var multiSelectArgs = args;\n            element = multiSelectArgs.element;\n        }\n        else if (args.event) {\n            element = args.event.target;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        else if (args.type === 'input' && args.target && args.target.classList.contains('e-numerictextbox')) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            element = args.currentTarget;\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            element = args.element;\n        }\n        if (!element) {\n            return;\n        }\n        if (element.className.indexOf('e-day') > -1 || element.className.indexOf('e-today') > -1 || element.className.indexOf('e-cell') > -1) {\n            var calenderArgs = args;\n            element = calenderArgs.element;\n        }\n        var groupElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-group-container');\n        var ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-rule-container');\n        var groupID = groupElem && groupElem.id.replace(this.element.id + '_', '');\n        var ruleID = ruleElem.id.replace(this.element.id + '_', '');\n        var dateElement = args;\n        var dropDownObj;\n        if (dateElement.element && dateElement.element.className.indexOf('e-datepicker') > -1) {\n            element = dateElement.element;\n            dropDownObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-rule-container').querySelector('.e-filter-input'), 'dropdownlist');\n            if (dropDownObj) {\n                this.selectedColumn = dropDownObj.getDataByValue(dropDownObj.value);\n            }\n            dropDownObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-rule-container').querySelector('.e-filter-input'), 'dropdowntree');\n            if (dropDownObj) {\n                this.selectedColumn = this.getColumn(dropDownObj.value[0]);\n            }\n        }\n        var value;\n        var rbValue;\n        if (element.className.indexOf('e-radio') > -1) {\n            rbValue = parseInt(element.id.split('valuekey')[1], 10);\n            if (this.fieldMode === 'Default') {\n                dropDownObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-rule-container').querySelector('.e-filter-input'), 'dropdownlist');\n                this.selectedColumn = dropDownObj.getDataByValue(dropDownObj.value);\n                if (this.selectedColumn.columns) {\n                    dropDownObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-rule-container').querySelector('.e-rule-sub-filter .e-dropdownlist'), 'dropdownlist');\n                    this.selectedColumn = this.getColumn(dropDownObj.value);\n                }\n            }\n            else {\n                dropDownObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-rule-container').querySelector('.e-filter-input'), 'dropdowntree');\n                this.selectedColumn = this.getColumn(dropDownObj.value[0]);\n            }\n            if (this.selectedColumn.values) {\n                value = this.selectedColumn.values[rbValue];\n            }\n            else {\n                var valColl = [true, false];\n                value = valColl[rbValue];\n            }\n        }\n        else if (element.className.indexOf('e-multiselect') > -1) {\n            value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element, 'multiselect').value;\n        }\n        else {\n            value = args.value;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (args.type === 'input' && args.target && args.target.classList.contains('e-numerictextbox')) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                value = Number(args.currentTarget.value);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var elem = args.currentTarget;\n                var numericTextBoxObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getInstance)(elem, _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_4__.NumericTextBox);\n                var decimalSeparator = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('decimal', (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getNumericObject)(this.locale));\n                if (isNaN(value) && elem.value.indexOf(decimalSeparator) !== -1) {\n                    value = this.intl.getNumberParser({ format: 'n' })(elem.value);\n                }\n                if (!isNaN(value)) {\n                    numericTextBoxObj.value = value;\n                }\n                this.isNumInput = true;\n            }\n        }\n        if (args.name === 'input' && this.immediateModeDelay) {\n            window.clearInterval(this.timer);\n            this.timer = window.setInterval(function () { _this.filterValue(groupID, ruleID, value, i, element); }, this.immediateModeDelay);\n        }\n        else {\n            this.filterValue(groupID, ruleID, value, i, element);\n        }\n    };\n    QueryBuilder.prototype.filterValue = function (grID, rlID, value, i, ele) {\n        var _this = this;\n        var eventsArgs = { groupID: grID, ruleID: rlID, value: value, cancel: false, type: 'value' };\n        window.clearInterval(this.timer);\n        if (!this.isImportRules) {\n            this.trigger('beforeChange', eventsArgs, function (observedChangeArgs) {\n                _this.changeValueSuccessCallBack(observedChangeArgs, ele, i, grID, rlID);\n            });\n        }\n        else {\n            this.changeValueSuccessCallBack(eventsArgs, ele, i, grID, rlID);\n        }\n    };\n    QueryBuilder.prototype.changeValueSuccessCallBack = function (args, element, i, groupID, ruleID) {\n        if (!args.cancel) {\n            this.updateRules(element, args.value, i);\n            if (!this.isImportRules) {\n                this.trigger('change', { groupID: groupID, ruleID: ruleID, value: args.value, cancel: false, type: 'value' });\n            }\n        }\n    };\n    QueryBuilder.prototype.fieldClose = function (id) {\n        if (this.isFieldChange || this.isDestroy) {\n            return;\n        }\n        this.isFieldClose = true;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var ddl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id, 'dropdownlist');\n        var item = ddl.popupObj && ddl.popupObj.element.querySelector('.e-active');\n        var itemData = ddl.getItemData();\n        ddl.value = itemData.value;\n        var customArgs = { element: ddl.element, value: itemData.value, isInteracted: true,\n            previousItemData: this.prevItemData, previousItem: null, item: item, itemData: itemData, event: null, e: null };\n        if (ddl.previousValue !== ddl.value) {\n            this.changeField(customArgs);\n        }\n        this.isFieldChange = false;\n    };\n    QueryBuilder.prototype.changeField = function (args) {\n        if (args.isInteracted) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.value)) {\n                return;\n            }\n            this.isFieldChange = true;\n            this.prevItemData = args.itemData;\n            var fieldElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(args.element, '.e-rule-filter') || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(args.element, '.e-rule-sub-filter');\n            var column = this.fieldMode === 'DropdownTree' ? this.getColumn(args.value[0]) : this.getColumn(args.value);\n            if (this.fieldMode === 'DropdownTree' && fieldElem !== null) {\n                var ddtElem = fieldElem.querySelector('.e-dropdowntree.e-control');\n                var ddt = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(ddtElem, 'dropdowntree');\n                if (column) {\n                    if (column.type === 'object') {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        ddt.value = args.oldValue;\n                        ddt.dataBind();\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.oldValue)) {\n                            ddtElem.value = '';\n                        }\n                        else {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            var result = this.getLabelFromColumn(args.oldValue[0]);\n                            ddtElem.value = result;\n                        }\n                        return;\n                    }\n                    else {\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.value[0])) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            ddt.value = args.value[0];\n                            ddt.dataBind();\n                            var result = this.getLabelFromColumn(args.value[0]);\n                            ddtElem.value = result;\n                        }\n                    }\n                }\n                else {\n                    return;\n                }\n            }\n            this.destroySubFields(fieldElem);\n            this.subFieldElem = null;\n            this.isNotValueChange = true;\n            if (column && column.ruleTemplate) {\n                this.templateChange(args.element, column.field, 'field');\n            }\n            else if (column && column.columns && column.columns[0].ruleTemplate) {\n                this.templateChange(args.element, column.columns[0].field, 'field');\n            }\n            else {\n                var groupElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(args.element, '.e-group-container');\n                var rules = this.getParentGroup(groupElem);\n                var ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(args.element, '.e-rule-container');\n                var index = 0;\n                while (ruleElem && ruleElem.previousElementSibling !== null) {\n                    ruleElem = ruleElem.previousElementSibling;\n                    if (!this.enableSeparateConnector || (this.enableSeparateConnector &&\n                        ((!this.headerTemplate && !ruleElem.classList.contains('e-btn-group')) ||\n                            this.headerTemplate && (ruleElem.classList.contains('e-rule-container') ||\n                                ruleElem.classList.contains('e-group-container'))))) {\n                        index++;\n                    }\n                }\n                rules.rules[index].value = '';\n                this.changeRule(rules.rules[index], args);\n            }\n        }\n    };\n    QueryBuilder.prototype.changeRule = function (rule, ddlArgs) {\n        if (!ddlArgs.itemData) {\n            if (this.fieldMode === 'DropdownTree') {\n                var ddt = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(ddlArgs.element, 'dropdowntree');\n                if (ddt.value == null) {\n                    return;\n                }\n            }\n            else {\n                return;\n            }\n        }\n        var tempRule = {};\n        var filterElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(ddlArgs.element, '.e-rule-filter');\n        filterElem = filterElem ? filterElem : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(ddlArgs.element, '.e-rule-sub-filter');\n        var ddlObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(ddlArgs.element, 'dropdownlist');\n        if (this.fieldMode === 'DropdownTree' && filterElem !== null) {\n            ddlObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(ddlArgs.element, 'dropdowntree');\n        }\n        var element = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(ddlArgs.element, '.e-group-container');\n        var groupID = element.id.replace(this.element.id + '_', '');\n        this.changeFilter(filterElem, ddlObj, groupID, rule, tempRule, ddlArgs);\n    };\n    QueryBuilder.prototype.changeFilter = function (flt, dl, grID, rl, tmpRl, dArg) {\n        var _this = this;\n        if (flt) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var ddlValue = void 0;\n            if (this.fieldMode === 'DropdownTree') {\n                ddlValue = (dl.value[0]);\n            }\n            else {\n                ddlValue = this.isImportRules ? this.GetRootColumnName(dl.value) : dl.value;\n            }\n            this.selectedColumn = this.getColumn(ddlValue);\n            var ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(flt, '.e-rule-container');\n            var ruleID = ruleElem.id.replace(this.element.id + '_', '');\n            var eventsArgs = { groupID: grID, ruleID: ruleID, selectedField: this.fieldMode === 'DropdownTree' ?\n                    dl.value[0] : dl.value, cancel: false, type: 'field' };\n            if (!this.isImportRules && !this.prvtEvtTgrDaD) {\n                this.trigger('beforeChange', eventsArgs, function (observedChangeArgs) {\n                    _this.fieldChangeSuccess(observedChangeArgs, tmpRl, flt, rl, dArg);\n                });\n            }\n            else {\n                this.fieldChangeSuccess(eventsArgs, tmpRl, flt, rl, dArg);\n            }\n        }\n        else {\n            var operatorElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(dArg.element, '.e-rule-operator');\n            this.changeOperator(flt, operatorElem, dl, grID, rl, tmpRl, dArg);\n        }\n    };\n    QueryBuilder.prototype.changeOperator = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    flt, opr, dl, grID, rl, tmpRl, dArg) {\n        var _this = this;\n        var ruleElem;\n        var ruleID;\n        var eventsArgs;\n        if (opr) {\n            ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(opr, '.e-rule-container');\n            ruleID = ruleElem.id.replace(this.element.id + '_', '');\n            eventsArgs = { groupID: grID, ruleID: ruleID, selectedIndex: dl.index, cancel: false, type: 'operator' };\n            if (!this.isImportRules) {\n                this.trigger('beforeChange', eventsArgs, function (observedChangeArgs) {\n                    _this.operatorChangeSuccess(observedChangeArgs, flt, tmpRl, rl, dArg);\n                });\n            }\n            else {\n                this.operatorChangeSuccess(eventsArgs, flt, tmpRl, rl, dArg);\n            }\n        }\n        else {\n            this.changeRuleValues(flt, rl, tmpRl, dArg);\n        }\n    };\n    QueryBuilder.prototype.fieldChangeSuccess = function (args, tempRule, filterElem, rule, ddlArgs) {\n        var ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(filterElem, '.e-rule-container');\n        var operatorElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(ddlArgs.element, '.e-rule-operator');\n        var element = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(ddlArgs.element, '.e-group-container');\n        var groupID = element.id.replace(this.element.id + '_', '');\n        var ddlObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(ddlArgs.element, 'dropdownlist');\n        var tooltipElem = ruleElem.querySelectorAll('.e-tooltip.e-input-group');\n        for (var i = 0; i < tooltipElem.length; i++) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(tooltipElem[i], 'tooltip').destroy();\n        }\n        if (!args.cancel) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.selectedColumn)) {\n                return;\n            }\n            tempRule.type = this.selectedColumn.type;\n            if (ruleElem.querySelector('.e-template')) {\n                rule.value = '';\n            }\n            if (this.selectedColumn.type === 'object' && this.fieldMode === 'Default') {\n                tempRule.type = this.selectedColumn.columns[0].type;\n                while (this.selectedColumn.columns) {\n                    this.createSubFields(filterElem, rule, tempRule, ddlArgs);\n                }\n            }\n            else {\n                this.destroySubFields(filterElem);\n                this.changeOperator(filterElem, operatorElem, ddlObj, groupID, rule, tempRule, ddlArgs);\n            }\n        }\n        else {\n            this.changeOperator(filterElem, operatorElem, ddlObj, groupID, rule, tempRule, ddlArgs);\n        }\n    };\n    QueryBuilder.prototype.destroySubFields = function (filterElem) {\n        while (filterElem && filterElem.nextElementSibling.classList.contains('e-rule-sub-filter')) {\n            this.destroyControls(filterElem);\n            filterElem.nextElementSibling.remove();\n        }\n    };\n    QueryBuilder.prototype.createSubFields = function (filterElem, rule, tempRule, ddlArgs) {\n        var subFieldValue = false;\n        var fieldElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(filterElem, '.e-rule-field');\n        var tempElem = this.createElement('div', { attrs: { class: 'e-rule-sub-filter', id: 'subfilter' + this.subFilterCounter } });\n        fieldElem.insertBefore(tempElem, fieldElem.querySelector('.e-rule-operator'));\n        var ruleId = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(tempElem, '.e-rule-container').id;\n        var subFieldElem = this.createElement('input', { attrs: { type: 'text', id: ruleId + '_subfilterkey' + this.subFilterCounter } });\n        tempElem.appendChild(subFieldElem);\n        var height = (this.element.className.indexOf('e-device') > -1) ? '250px' : '200px';\n        var ddlField;\n        ddlField = {\n            dataSource: this.selectedColumn.columns,\n            fields: this.fields,\n            placeholder: this.l10n.getConstant('SelectField'),\n            popupHeight: ((this.selectedColumn.columns.length > 5) ? height : 'auto'),\n            change: this.changeField.bind(this),\n            index: 0,\n            open: this.popupOpen.bind(this, false)\n        };\n        if (this.fieldModel) {\n            ddlField = __assign({}, ddlField, this.fieldModel);\n        }\n        var dropDownList = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_2__.DropDownList(ddlField);\n        dropDownList.appendTo('#' + ruleId + '_subfilterkey' + this.subFilterCounter);\n        if (this.isImportRules || (this.previousColumn && this.previousColumn.ruleTemplate &&\n            this.GetRootColumnName(rule.field) === this.GetRootColumnName(this.previousColumn.field))) {\n            var subField = this.selectedColumn.columns;\n            for (var i = 0; i < subField.length; i++) {\n                if (rule.field === subField[i].field || rule.field.indexOf(subField[i].field + this.separator) > -1) {\n                    dropDownList.value = subField[i].field;\n                    this.selectedColumn = subField[i];\n                    subFieldValue = true;\n                    break;\n                }\n            }\n        }\n        this.subFilterCounter++;\n        this.subFieldElem = subFieldElem;\n        // eslint-disable-next-line\n        ddlArgs.itemData = ddlArgs.itemData;\n        if (!subFieldValue && this.selectedColumn.columns) {\n            if (!subFieldValue && this.isImportRules) {\n                dropDownList.value = null;\n            }\n            this.selectedColumn = this.selectedColumn.columns[0];\n        }\n        this.previousColumn = this.selectedColumn;\n        if (!this.selectedColumn.columns) {\n            this.changeRuleValues(tempElem, rule, tempRule, ddlArgs);\n        }\n    };\n    QueryBuilder.prototype.operatorChangeSuccess = function (eventsArgs, filterElem, tempRule, rule, ddlArgs) {\n        if (!eventsArgs.cancel) {\n            var operatorElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(ddlArgs.element, '.e-rule-operator');\n            var valElem = operatorElem.nextElementSibling;\n            var dropDownObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(ddlArgs.element, 'dropdownlist');\n            var prevOper = rule.operator ? rule.operator.toString().toLowerCase() : '';\n            tempRule.operator = dropDownObj.value.toString();\n            var currOper = tempRule.operator.toLowerCase();\n            if (tempRule.operator.toLowerCase().indexOf('between') > -1 || (tempRule.operator.toLowerCase().indexOf('in') > -1\n                && tempRule.operator.toLowerCase().indexOf('contains') < 0)) {\n                filterElem = operatorElem.previousElementSibling;\n                tempRule.type = rule.type;\n                if (tempRule.operator.toLowerCase().indexOf('in') < 0 || prevOper.indexOf('in') < 0) {\n                    rule.value = [];\n                }\n            }\n            else if (typeof rule.value === 'object' && rule.value !== null) {\n                rule.value = rule.value.length > 0 ? rule.value[0] : rule.type === 'number' ? 0 : '';\n            }\n            if (ddlArgs.previousItemData) {\n                var prevValue = ddlArgs.previousItemData.value.toString().toLowerCase();\n                if ((prevValue.indexOf('between') > -1 || (prevValue.indexOf('in') > -1 || (prevValue.indexOf('null') > -1)\n                    || (prevValue.indexOf('empty') > -1)) && prevValue.indexOf('contains') < 0)) {\n                    filterElem = operatorElem.previousElementSibling;\n                    tempRule.type = rule.type;\n                }\n            }\n            if ((prevOper.indexOf('in') > -1 && prevOper.indexOf('in') < 5) && (currOper.indexOf('in') > -1\n                && currOper.indexOf('in') < 5)) {\n                filterElem = null;\n            }\n            if (tempRule.operator.indexOf('null') > -1 || (tempRule.operator.indexOf('empty') > -1)) {\n                var parentElem = operatorElem.parentElement.querySelector('.e-rule-value');\n                var tooltipElem = parentElem.querySelector('.e-tooltip.e-input-group');\n                if (tooltipElem) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(tooltipElem, 'tooltip').destroy();\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([parentElem], 'e-show');\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([parentElem], 'e-hide');\n            }\n            if (valElem && this.getColumn(rule.field).template) {\n                filterElem = operatorElem.previousElementSibling;\n            }\n            if (valElem.children.length === 0) {\n                filterElem = operatorElem.previousElementSibling;\n            }\n            this.changeRuleValues(filterElem, rule, tempRule, ddlArgs);\n        }\n    };\n    QueryBuilder.prototype.changeRuleValues = function (filterElem, rule, tempRule, ddlArgs) {\n        var operatorElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(ddlArgs.element, '.e-rule-operator');\n        var isSub;\n        var ddlObj;\n        var operatorList;\n        var oprElem;\n        if (filterElem) {\n            operatorElem = filterElem.nextElementSibling;\n            if (filterElem.classList.contains('e-rule-sub-filter')) {\n                tempRule.type = this.selectedColumn.type;\n                isSub = operatorElem.classList.contains('e-rule-sub-filter');\n                operatorElem = isSub ? operatorElem.nextElementSibling : operatorElem;\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([operatorElem], 'e-operator');\n            if (operatorElem.childElementCount) {\n                ddlObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(operatorElem.querySelector('.e-dropdownlist'), 'dropdownlist');\n                tempRule.operator = ddlObj.value;\n                var fieldObj = void 0;\n                if (this.fieldMode === 'DropdownTree') {\n                    fieldObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(filterElem.querySelector('.e-dropdowntree'), 'dropdowntree');\n                }\n                else {\n                    fieldObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(filterElem.querySelector('.e-dropdownlist'), 'dropdownlist');\n                }\n                tempRule.type = this.fieldMode === 'DropdownTree' ? this.getColumn(fieldObj.value[0]).type :\n                    this.getColumn(fieldObj.value).type;\n                var itemData = ddlArgs.itemData;\n                if (ddlObj.value !== '') {\n                    this.renderValues(operatorElem, itemData, ddlArgs.previousItemData, true, rule, tempRule, ddlArgs.element);\n                }\n            }\n            else {\n                var ruleId = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(operatorElem, '.e-rule-container').id;\n                oprElem = this.createElement('input', { attrs: { type: 'text', id: ruleId + '_operatorkey' } });\n                operatorElem.appendChild(oprElem);\n                if (this.selectedColumn.operators) {\n                    operatorList = this.selectedColumn.operators;\n                }\n                else if (ddlArgs.itemData) {\n                    operatorList = this.customOperators[this.selectedColumn.type + 'Operator'];\n                }\n                var height = (this.element.className.indexOf('e-device') > -1) ? '250px' : '200px';\n                var operator_2;\n                if (rule.operator) {\n                    operatorList.forEach(function (obj) {\n                        if ('value' in obj && typeof obj.value === 'string' && obj.value.toLowerCase() === rule.operator.toLowerCase()) {\n                            operator_2 = obj.value;\n                        }\n                    });\n                }\n                var value = operator_2 ? operator_2 : operatorList[0].value;\n                var ddlIdx = 0;\n                if (!this.autoSelectOperator) {\n                    value = '';\n                    ddlIdx = -1;\n                }\n                if (this.isImportRules || (this.ruleIndex > -1 || this.groupIndex > -1 || this.prvtEvtTgrDaD)) {\n                    value = rule ? (rule.operator ? rule.operator : value) : value;\n                }\n                var ddlOperator = void 0;\n                ddlOperator = {\n                    dataSource: operatorList,\n                    fields: { text: 'key', value: 'value' },\n                    placeholder: this.l10n.getConstant('SelectOperator'),\n                    popupHeight: ((operatorList.length > 5) ? height : 'auto'),\n                    change: this.changeField.bind(this),\n                    index: ddlIdx,\n                    value: value,\n                    open: this.popupOpen.bind(this, false)\n                };\n                if (this.operatorModel) {\n                    ddlOperator = __assign({}, ddlOperator, this.operatorModel);\n                }\n                var dropDownList = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_2__.DropDownList(ddlOperator);\n                dropDownList.appendTo('#' + ruleId + '_operatorkey');\n                tempRule.operator = (rule && rule.operator !== '' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rule.operator)) ? rule.operator : operatorList[0].value;\n                if (this.isImportRules) {\n                    tempRule.type = this.selectedColumn.type;\n                    tempRule.operator = rule.operator;\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value) && value !== '') {\n                    this.renderValues(operatorElem, this.selectedColumn, ddlArgs.previousItemData, false, rule, tempRule, ddlArgs.element);\n                }\n                else if (this.autoSelectField && this.autoSelectOperator) {\n                    this.renderValues(operatorElem, this.selectedColumn, ddlArgs.previousItemData, false, rule, tempRule, ddlArgs.element);\n                }\n            }\n        }\n        if (!this.isImportRules) {\n            this.updateRules(ddlArgs.element, ddlArgs.item);\n        }\n    };\n    QueryBuilder.prototype.popupOpen = function (isField, args) {\n        if (this.enableRtl) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([args.popup.element], 'e-rtl');\n        }\n        if (isField) {\n            this.isFieldClose = false;\n        }\n    };\n    QueryBuilder.prototype.destroyControls = function (target, isRuleTemplate) {\n        var element = isRuleTemplate ? target : target.nextElementSibling;\n        var inputElement = element.querySelectorAll('input.e-control');\n        var divElement = element.querySelectorAll('div.e-control:not(.e-handle)');\n        var columns = this.columns;\n        for (var i = 0, len = inputElement.length; i < len; i++) {\n            if (inputElement[i].classList.contains('e-textbox')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(inputElement[i], 'textbox').destroy();\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('input#' + inputElement[i].id, element));\n            }\n            else if (inputElement[i].classList.contains('e-dropdownlist')) {\n                if (this.allowValidation && inputElement[i].parentElement.className.indexOf('e-tooltip') > -1) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(inputElement[i].parentElement, 'tooltip').destroy();\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(inputElement[i], 'dropdownlist').destroy();\n            }\n            else if (inputElement[i].classList.contains('e-radio')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(inputElement[i], 'radio').destroy();\n            }\n            else if (inputElement[i].classList.contains('e-numerictextbox')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(inputElement[i], 'numerictextbox').destroy();\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('input#' + inputElement[i].id, element));\n            }\n            else if (inputElement[i].classList.contains('e-datepicker')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(inputElement[i], 'datepicker').destroy();\n            }\n            else if (inputElement[i].classList.contains('e-multiselect')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(inputElement[i], 'multiselect').destroy();\n            }\n            else if (inputElement[i].className.indexOf('e-template') > -1) {\n                var clsName = inputElement[i].className;\n                for (var j = 0, jLen = columns.length; j < jLen; j++) {\n                    if (columns[j].template && clsName.indexOf(columns[j].field) > -1) {\n                        this.templateDestroy(columns[j], inputElement[i].id);\n                        break;\n                    }\n                }\n            }\n            if (document.getElementById(inputElement[i].id)) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(inputElement[i]);\n            }\n        }\n        for (var i = 0, len = divElement.length; i < len; i++) {\n            if (divElement[i].className.indexOf('e-template') > -1) {\n                var clsName = divElement[i].className;\n                for (var j = 0, jLen = columns.length; j < jLen; j++) {\n                    if (columns[j].template && clsName.indexOf(columns[j].field) > -1) {\n                        this.templateDestroy(columns[j], divElement[i].id);\n                        break;\n                    }\n                }\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(divElement[i]);\n        }\n        var templateElement = element.querySelectorAll('.e-template:not(.e-control)');\n        for (var i = 0, len = templateElement.length; i < len; i++) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(templateElement[i]);\n        }\n    };\n    QueryBuilder.prototype.templateDestroy = function (column, elemId) {\n        var template;\n        if (typeof column.template !== 'string' || column.template.destroy === undefined) {\n            template = column.template;\n        }\n        else {\n            return;\n        }\n        var temp = template.destroy;\n        if (template.destroy) {\n            var templateElements = void 0;\n            if (document.getElementById(elemId)) {\n                templateElements = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(document.getElementById(elemId), '.e-rule-field').querySelectorAll('.e-template');\n            }\n            if (typeof temp === 'string') {\n                temp = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(temp, window);\n                temp({ field: column.field, elementId: elemId, elements: templateElements });\n            }\n            else {\n                template.destroy({ field: column.field, elementId: elemId, elements: templateElements });\n            }\n        }\n    };\n    /**\n     * Return values bound to the column.\n     *\n     * @param {string} field - 'field' to be passed to get the field values.\n     * @returns {object[]} - Values bound to the column\n     */\n    QueryBuilder.prototype.getValues = function (field) {\n        var original = {};\n        var result = [];\n        var value;\n        var fieldColl = [];\n        if (this.separator.length > 0) {\n            fieldColl = field.split(this.separator);\n        }\n        var dataSource = this.dataColl;\n        if (this.dataColl[1]) {\n            for (var i = 0, iLen = dataSource.length; i < iLen; i++) {\n                var data = {};\n                if (fieldColl.length > 1) {\n                    var dataObj = dataSource[i];\n                    var fieldStr = void 0;\n                    for (var j = 0, jLen = fieldColl.length; j < jLen; j++) {\n                        fieldStr = fieldColl[j];\n                        if (fieldColl.length === (j + 1)) {\n                            value = dataObj[\"\" + fieldStr];\n                            if (Number(dataObj[\"\" + fieldStr]) === dataObj[\"\" + fieldStr] && dataObj[\"\" + fieldStr] % 1 !== 0) {\n                                value = dataObj[\"\" + fieldStr].toString();\n                            }\n                        }\n                        else {\n                            dataObj = dataObj[\"\" + fieldStr];\n                        }\n                    }\n                }\n                else {\n                    value = dataSource[i][\"\" + field];\n                    if (Number(dataSource[i][\"\" + field]) === dataSource[i][\"\" + field] && dataSource[i][\"\" + field] % 1 !== 0) {\n                        value = dataSource[i][\"\" + field].toString();\n                    }\n                }\n                if (!(value in original)) {\n                    original[\"\" + value] = 1;\n                    if (fieldColl.length > 1) {\n                        this.createNestedObject(data, fieldColl, value);\n                    }\n                    else {\n                        data[\"\" + field] = value;\n                    }\n                    result.push(data);\n                }\n            }\n        }\n        return result;\n    };\n    QueryBuilder.prototype.createNestedObject = function (obj, fieldColl, value) {\n        var key;\n        var lastIndex = fieldColl.length - 1;\n        for (var k = 0; k < lastIndex; ++k) {\n            key = fieldColl[k];\n            if (!(key in obj)) {\n                obj[\"\" + key] = {};\n            }\n            obj = obj[\"\" + key];\n        }\n        obj[fieldColl[lastIndex]] = value;\n    };\n    QueryBuilder.prototype.getDistinctValues = function (dataSource, field) {\n        var original = {};\n        var result = [];\n        var nest = [];\n        var value = '';\n        var isNested = field.indexOf(this.separator);\n        var _loop_2 = function (i, iLen) {\n            value = '';\n            if (isNested === 0) {\n                value = dataSource[i][\"\" + field];\n            }\n            else {\n                nest = field.split(this_2.separator);\n                // eslint-disable-next-line @typescript-eslint/tslint/config\n                nest.forEach(function (element) {\n                    if (value) {\n                        value = value[\"\" + element];\n                    }\n                    else {\n                        value = dataSource[i][\"\" + element];\n                    }\n                });\n            }\n            if (Number(dataSource[i][\"\" + field]) === dataSource[i][\"\" + field] && dataSource[i][\"\" + field] % 1 !== 0) {\n                value = dataSource[i][\"\" + field].toString();\n            }\n            var data = {};\n            if (!(value in original)) {\n                original[\"\" + value] = 1;\n                if (isNested === 0) {\n                    data[\"\" + field] = value;\n                }\n                else {\n                    data[nest[nest.length - 1]] = value;\n                }\n                result.push(data);\n            }\n        };\n        var this_2 = this;\n        for (var i = 0, iLen = dataSource.length; i < iLen; i++) {\n            _loop_2(i, iLen);\n        }\n        return result;\n    };\n    QueryBuilder.prototype.renderMultiSelect = function (rule, parentId, i, selectedValue, values) {\n        var isFetched = false;\n        var ds;\n        var isValues = false;\n        this.isGetNestedData = false;\n        if (this.dataColl[1]) {\n            if (Object.keys(this.dataColl[1]).indexOf(rule.field) > -1) {\n                isFetched = true;\n                ds = this.getDistinctValues(this.dataColl, rule.field);\n            }\n        }\n        isFetched = rule.columns ? false : isFetched;\n        if (!this.dataColl.length && values.length) {\n            isValues = true;\n        }\n        var multiSelectValue;\n        multiSelectValue = {\n            dataSource: isValues ? values : (isFetched ? ds : this.dataManager),\n            query: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query([rule.field]),\n            fields: { text: this.selectedRule.field, value: this.selectedRule.field },\n            placeholder: this.l10n.getConstant('SelectValue'),\n            value: selectedValue,\n            mode: 'CheckBox',\n            width: '100%',\n            change: this.changeValue.bind(this, i),\n            close: this.closePopup.bind(this, i),\n            actionBegin: this.multiSelectOpen.bind(this, parentId + '_valuekey' + i),\n            open: this.popupOpen.bind(this, false)\n        };\n        if (this.valueModel && this.valueModel.multiSelectModel) {\n            multiSelectValue = __assign({}, multiSelectValue, this.valueModel.multiSelectModel);\n        }\n        var multiSelectObj = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_2__.MultiSelect(multiSelectValue);\n        multiSelectObj.appendTo('#' + parentId + '_valuekey' + i);\n        this.updateRules(multiSelectObj.element, selectedValue, 0);\n    };\n    QueryBuilder.prototype.multiSelectOpen = function (parentId, args) {\n        if (this.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.DataManager) {\n            var element = document.getElementById(parentId);\n            var dropDownObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-rule-container').querySelector('.e-filter-input'), this.fieldMode === 'DropdownTree' ? 'dropdowntree' : 'dropdownlist');\n            if (this.fieldMode === 'DropdownTree') {\n                this.selectedColumn = this.getColumn(dropDownObj.value[0]);\n            }\n            else {\n                this.selectedColumn = dropDownObj.getDataByValue(dropDownObj.value);\n            }\n            var value = this.selectedColumn.field;\n            var isFetched = false;\n            if (this.dataColl[1]) {\n                if (Object.keys(this.dataColl[1]).indexOf(value) > -1) {\n                    isFetched = true;\n                }\n                var isNest = value.indexOf(this.separator);\n                if (isNest !== 0 && this.isGetNestedData) {\n                    isFetched = true;\n                }\n            }\n            if (!isFetched) {\n                args.cancel = true;\n                this.bindMultiSelectData(element, value);\n            }\n        }\n    };\n    QueryBuilder.prototype.bindMultiSelectData = function (element, value) {\n        this.getMultiSelectData(element, value);\n    };\n    QueryBuilder.prototype.getMultiSelectData = function (element, value) {\n        var _this = this;\n        var dummyData;\n        var deferred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Deferred();\n        var data = this.dataManager.executeQuery(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query().select(value));\n        var multiselectObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element, 'multiselect');\n        multiselectObj.hideSpinner();\n        this.createSpinner((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-multi-select-wrapper').parentElement);\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_7__.showSpinner)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-multi-select-wrapper').parentElement);\n        data.then(function (e) {\n            if (e.actual && e.actual.result) {\n                dummyData = e.actual.result;\n            }\n            else {\n                dummyData = e.result;\n            }\n            _this.dataColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(_this.dataColl, dummyData, [], true);\n            multiselectObj.dataSource = _this.getDistinctValues(_this.dataColl, value);\n            _this.isGetNestedData = true;\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_7__.hideSpinner)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-multi-select-wrapper').parentElement);\n        }).catch(function (e) {\n            deferred.reject(e);\n        });\n    };\n    QueryBuilder.prototype.createSpinner = function (element) {\n        var spinnerElem = this.createElement('span', { attrs: { class: 'e-qb-spinner' } });\n        element.appendChild(spinnerElem);\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_7__.createSpinner)({ target: spinnerElem, width: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? '16px' : '14px' });\n    };\n    QueryBuilder.prototype.closePopup = function (i, args) {\n        var element = document.getElementById(args.popup.element.id.replace('_popup', ''));\n        if (element) {\n            var ms = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element, 'multiselect');\n            if (ms) {\n                var value = ms.value;\n                this.updateRules(element, value, i);\n            }\n        }\n    };\n    QueryBuilder.prototype.processTemplate = function (target, itemData, rule, tempRule) {\n        var container = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-container');\n        var tempElements = container.querySelectorAll('.e-template');\n        var filterElem = container.querySelector('.e-rule-filter .e-filter-input');\n        var ddlObj = this.fieldMode === 'DropdownTree' ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(filterElem, 'dropdowntree')\n            : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(container.querySelector('.e-rule-filter .e-filter-input'), 'dropdownlist');\n        var column = this.fieldMode === 'DropdownTree' ? this.getColumn(ddlObj.value[0]) : this.getColumn(ddlObj.value);\n        if (typeof itemData.template === 'string' || itemData.template.write === undefined) {\n            var args = { rule: rule, ruleID: container.id, operator: tempRule.operator, field: column.field,\n                requestType: 'value-template-create' };\n            this.trigger('actionBegin', args);\n        }\n        else {\n            var template = itemData.template;\n            if (typeof template.write === 'string') {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(template.write, window)({ elements: tempElements.length > 1 ? tempElements : tempElements[0], values: rule.value,\n                    operator: tempRule.operator, field: column.field, dataSource: column.values });\n            }\n            else if (typeof itemData.template !== 'function') {\n                itemData.template.write({ elements: tempElements.length > 1 ? tempElements : tempElements[0],\n                    values: rule.value, operator: tempRule.operator, field: column.field, dataSource: column.values });\n            }\n        }\n    };\n    QueryBuilder.prototype.getItemData = function (parentId) {\n        var fieldObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(document.getElementById(parentId + '_filterkey'), 'dropdownlist');\n        var parentFieldObj = this.element.querySelector(\"#\" + parentId);\n        if (this.fieldMode === 'DropdownTree') {\n            fieldObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(document.getElementById(parentId + '_filterkey'), 'dropdowntree');\n        }\n        else if (parentFieldObj) {\n            var subFieldObjList = parentFieldObj.querySelectorAll('.e-rule-sub-filter');\n            if (subFieldObjList.length > 0) {\n                var lastSubFieldObj = subFieldObjList[subFieldObjList.length - 1].querySelector('.e-dropdownlist');\n                fieldObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(lastSubFieldObj, 'dropdownlist');\n            }\n        }\n        return this.fieldMode === 'DropdownTree' ? this.getColumn(fieldObj.value[0]) : this.getColumn(fieldObj.value);\n    };\n    QueryBuilder.prototype.setDefaultValue = function (parentId, isArryValue, isNumber) {\n        var itemData = this.getItemData(parentId);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(itemData.value)) {\n            return isNumber ? isArryValue ? [0, 0] : 0 : isArryValue ? [] : '';\n        }\n        if (isArryValue) {\n            if (!(itemData.value instanceof Array)) {\n                return [itemData.value];\n            }\n        }\n        else {\n            if (itemData.value instanceof Array) {\n                return itemData.value[0];\n            }\n        }\n        return itemData.value;\n    };\n    QueryBuilder.prototype.renderStringValue = function (parentId, rule, operator, idx, ruleValElem) {\n        var selectedVal;\n        var columnData = this.getItemData(parentId);\n        var selectedValue;\n        var isTemplate = (typeof columnData.template === 'string');\n        if (this.isImportRules || this.ruleIndex > -1 || this.groupIndex > -1 || this.isPublic || isTemplate || rule.value !== '') {\n            selectedValue = rule.value;\n        }\n        else {\n            selectedValue = this.setDefaultValue(parentId, false, false);\n        }\n        if ((operator === 'in' || operator === 'notin') && (this.dataColl.length || columnData.values)) {\n            selectedVal = (this.isImportRules || this.ruleIndex > -1 || this.groupIndex > -1 || this.isPublic) ? rule.value :\n                this.setDefaultValue(parentId, true, false);\n            this.renderMultiSelect(columnData, parentId, idx, selectedVal, columnData.values);\n            if (this.displayMode === 'Vertical' || this.element.className.indexOf('e-device') > -1) {\n                ruleValElem.style.width = '100%';\n            }\n            else {\n                ruleValElem.style.width = null;\n                ruleValElem.style.minWidth = '200px';\n            }\n        }\n        else {\n            if (operator === 'in' || operator === 'notin') {\n                selectedVal = (this.isImportRules || this.ruleIndex > -1 || this.groupIndex > -1) ? rule.value :\n                    this.setDefaultValue(parentId, true, false);\n                selectedValue = selectedVal.join(',');\n            }\n            if (operator === 'between' || operator === 'notbetween') {\n                if (selectedValue.length > 1) {\n                    selectedValue = selectedValue[idx];\n                }\n            }\n            var txtBox = void 0;\n            txtBox = {\n                placeholder: this.l10n.getConstant('SelectValue'),\n                input: this.changeValue.bind(this, idx)\n            };\n            if (this.valueModel && this.valueModel.textBoxModel) {\n                txtBox = __assign({}, txtBox, this.valueModel.textBoxModel);\n            }\n            var inputobj = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_4__.TextBox(txtBox);\n            inputobj.appendTo('#' + parentId + '_valuekey' + idx);\n            inputobj.value = selectedValue;\n            inputobj.dataBind();\n        }\n    };\n    QueryBuilder.prototype.renderNumberValue = function (parentId, rule, operator, idx, ruleValElem, itemData, length) {\n        var columnData = this.getItemData(parentId);\n        var isTemplate = (typeof columnData.template === 'string');\n        var selectedVal = (this.isImportRules || this.ruleIndex > -1 || this.groupIndex > -1 || this.isPublic || isTemplate ||\n            typeof rule.value === 'number') ? rule.value : this.setDefaultValue(parentId, false, true);\n        if ((operator === 'in' || operator === 'notin') && (this.dataColl.length || columnData.values)) {\n            selectedVal = (this.isImportRules || this.ruleIndex > -1 || this.groupIndex > -1 || this.isPublic) ? rule.value :\n                this.setDefaultValue(parentId, true, false);\n            this.renderMultiSelect(columnData, parentId, idx, selectedVal, columnData.values);\n            if (this.element.className.indexOf('e-device') > -1 || this.displayMode === 'Vertical') {\n                ruleValElem.style.width = '100%';\n            }\n            else {\n                ruleValElem.style.minWidth = '200px';\n                ruleValElem.style.width = null;\n            }\n        }\n        else if (operator === 'in' || operator === 'notin') {\n            selectedVal = (this.isImportRules || this.ruleIndex > -1 || this.groupIndex > -1) ? rule.value :\n                this.setDefaultValue(parentId, true, false);\n            var selVal = selectedVal.join(',');\n            var txtInp = void 0;\n            txtInp = {\n                placeholder: this.l10n.getConstant('SelectValue'),\n                input: this.changeValue.bind(this, idx)\n            };\n            if (this.valueModel && this.valueModel.textBoxModel) {\n                txtInp = __assign({}, txtInp, this.valueModel.textBoxModel);\n            }\n            var input = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_4__.TextBox(txtInp);\n            input.appendTo('#' + parentId + '_valuekey' + idx);\n            input.value = selVal;\n            input.dataBind();\n        }\n        else {\n            itemData = columnData;\n            var min = (itemData.validation && itemData.validation.min) ? itemData.validation.min : 0;\n            var max = (itemData.validation && itemData.validation.max) ? itemData.validation.max : Number.MAX_VALUE;\n            var format = itemData.format ? itemData.format : 'n';\n            if (length > 1 && rule) {\n                selectedVal = rule.value[idx] ? rule.value[idx] : this.setDefaultValue(parentId, true, true);\n            }\n            var numericTxt = void 0;\n            numericTxt = {\n                value: (selectedVal instanceof Array) ? selectedVal[idx] : selectedVal,\n                format: format, min: min, max: max, width: '100%',\n                step: itemData.step ? itemData.step : 1,\n                change: this.changeValue.bind(this, idx)\n            };\n            if (this.valueModel && this.valueModel.numericTextBoxModel) {\n                numericTxt = __assign({}, numericTxt, this.valueModel.numericTextBoxModel);\n            }\n            var numeric = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_4__.NumericTextBox(numericTxt);\n            numeric.appendTo('#' + parentId + '_valuekey' + idx);\n            numeric.element.setAttribute('aria-label', itemData.label + ' ' + 'Value');\n            numeric.element.oninput = this.changeValue.bind(this, idx);\n        }\n    };\n    QueryBuilder.prototype.processValueString = function (value, type) {\n        var numArr = [];\n        var strArr = value.split(',');\n        if (type === 'string') {\n            return strArr;\n        }\n        else {\n            for (var k = 0, kLen = strArr.length; k < kLen; k++) {\n                numArr.push(Number(strArr[k]));\n            }\n            return numArr;\n        }\n    };\n    QueryBuilder.prototype.parseDate = function (value, format) {\n        var formatOpt;\n        var selectedValue;\n        if (format) {\n            var dParser = this.intl.getDateParser({ skeleton: 'full', type: 'dateTime' });\n            formatOpt = this.getFormat(format);\n            selectedValue = dParser(value);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(selectedValue)) {\n                selectedValue = this.intl.parseDate(value, formatOpt);\n            }\n        }\n        else {\n            selectedValue = new Date(value);\n        }\n        return selectedValue;\n    };\n    QueryBuilder.prototype.renderControls = function (target, itemData, rule, tempRule, isRendered) {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([target.parentElement.querySelector('.e-rule-value')], 'e-value');\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([target.parentElement.querySelector('.e-rule-value')], 'e-hide');\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([target.parentElement.querySelector('.e-rule-value')], 'e-show');\n        if (itemData.template && (itemData.template.create || isRendered)) {\n            this.processTemplate(target, itemData, rule, tempRule);\n        }\n        else {\n            var length_1;\n            if (tempRule.type === 'boolean') {\n                length_1 = this.selectedColumn.values ? this.selectedColumn.values.length : 2;\n            }\n            else {\n                length_1 = tempRule.operator && tempRule.operator.toString().toLowerCase().indexOf('between') > -1 ? 2 : 1;\n            }\n            var parentId = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-container').id;\n            var ruleValElem = void 0;\n            var operator = tempRule.operator.toString();\n            if (target.className.indexOf('e-rule-operator') > -1 || target.className.indexOf('e-rule-filter') > -1) {\n                ruleValElem = target.parentElement.querySelector('.e-rule-value');\n                if (this.element.className.indexOf('e-device') > -1 || this.displayMode === 'Vertical') {\n                    ruleValElem.style.width = '100%';\n                }\n                else {\n                    if (operator !== 'in' && operator !== 'notin') {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([ruleValElem], 'e-custom-value');\n                    }\n                    else {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([ruleValElem], 'e-custom-value');\n                    }\n                }\n                for (var i = 0; i < length_1; i++) {\n                    switch (tempRule.type) {\n                        case 'string':\n                            {\n                                this.renderStringValue(parentId, rule, operator, i, ruleValElem);\n                            }\n                            break;\n                        case 'number':\n                            {\n                                this.renderNumberValue(parentId, rule, operator, i, ruleValElem, itemData, length_1);\n                            }\n                            break;\n                        case 'boolean':\n                            this.processBoolValues(itemData, rule, parentId, i);\n                            break;\n                        case 'date':\n                            {\n                                var selectedValue = new Date();\n                                var selVal = void 0;\n                                var column = void 0;\n                                var format = itemData.format;\n                                var datepick = void 0;\n                                var datePicker = void 0;\n                                var place = this.l10n.getConstant('SelectValue');\n                                var isTemplate = (typeof itemData.template === 'string');\n                                if (rule.value && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(format)) {\n                                    selVal = (length_1 > 1) ? rule.value[i] : rule.value;\n                                    selectedValue = this.parseDate(selVal, format) || new Date();\n                                }\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                if (!itemData.field && !itemData.key && itemData.value) {\n                                    if (itemData.value instanceof Date) {\n                                        selectedValue = itemData.value;\n                                    }\n                                    else {\n                                        selectedValue = this.parseDate(itemData.value, itemData.format);\n                                    }\n                                }\n                                if (!itemData.format && rule && rule.field !== '') {\n                                    column = this.getColumn(rule.field);\n                                    format = column.format;\n                                }\n                                if ((this.isImportRules || this.isPublic || isTemplate) && rule) {\n                                    column = this.getColumn(rule.field);\n                                    format = column.format;\n                                    if (rule.value) {\n                                        selVal = (length_1 > 1) ? rule.value[i] : rule.value;\n                                        selectedValue = this.parseDate(selVal, column.format);\n                                    }\n                                    else {\n                                        selectedValue = rule.value;\n                                    }\n                                }\n                                if (format) {\n                                    var formatObj = this.getFormat(format);\n                                    if (formatObj.skeleton) {\n                                        datePicker = {\n                                            locale: this.getLocale(), value: selectedValue,\n                                            placeholder: place, format: formatObj, change: this.changeValue.bind(this, i)\n                                        };\n                                        if (this.valueModel && this.valueModel.datePickerModel) {\n                                            datePicker = __assign({}, datePicker, this.valueModel.datePickerModel);\n                                        }\n                                        datepick = new _syncfusion_ej2_calendars__WEBPACK_IMPORTED_MODULE_5__.DatePicker(datePicker);\n                                    }\n                                    else {\n                                        datePicker = {\n                                            value: selectedValue, locale: this.getLocale(), placeholder: place,\n                                            format: formatObj.format, change: this.changeValue.bind(this, i)\n                                        };\n                                        if (this.valueModel && this.valueModel.datePickerModel) {\n                                            datePicker = __assign({}, datePicker, this.valueModel.datePickerModel);\n                                        }\n                                        datepick = new _syncfusion_ej2_calendars__WEBPACK_IMPORTED_MODULE_5__.DatePicker(datePicker);\n                                    }\n                                }\n                                else {\n                                    datePicker = {\n                                        locale: this.getLocale(), value: selectedValue,\n                                        placeholder: place, change: this.changeValue.bind(this, i)\n                                    };\n                                    if (this.valueModel && this.valueModel.datePickerModel) {\n                                        datePicker = __assign({}, datePicker, this.valueModel.datePickerModel);\n                                    }\n                                    datepick = new _syncfusion_ej2_calendars__WEBPACK_IMPORTED_MODULE_5__.DatePicker(datePicker);\n                                }\n                                datepick.appendTo('#' + parentId + '_valuekey' + i);\n                                if (!rule.value) {\n                                    var elem = document.getElementById(parentId + '_valuekey' + i);\n                                    this.updateRules(elem, selectedValue, null, this.isNotValueChange);\n                                    this.isNotValueChange = false;\n                                }\n                            }\n                            break;\n                    }\n                }\n            }\n        }\n    };\n    QueryBuilder.prototype.processBoolValues = function (itemData, rule, parentId, i) {\n        var isCheck = false;\n        var value;\n        var orgValue;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rule.type) && itemData) {\n            rule.type = itemData.type;\n        }\n        var label;\n        if (itemData.values) {\n            var values = itemData.values;\n            if (rule.type === 'boolean' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rule.value)) {\n                isCheck = values[i].toLowerCase() === rule.value.toString().toLowerCase();\n            }\n            else if (itemData.value) {\n                isCheck = values[i].toLowerCase() === itemData.value.toString().toLowerCase();\n            }\n            else if (i === 0) {\n                isCheck = true;\n            }\n            orgValue = value = label = values[i];\n        }\n        else {\n            var values = [true, false];\n            if (rule.type === 'boolean' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rule.value)) {\n                isCheck = values[i].toString().toLowerCase() === rule.value.toString().toLowerCase();\n            }\n            else if (itemData.value) {\n                isCheck = values[i].toString().toLowerCase() === itemData.value.toString().toLowerCase();\n            }\n            else if (i === 0) {\n                if (typeof rule.value === 'boolean') {\n                    isCheck = rule.value ? true : false;\n                }\n                else {\n                    isCheck = true;\n                }\n            }\n            if (typeof rule.value === 'boolean' && i === 1) {\n                isCheck = !rule.value ? true : false;\n            }\n            value = values[i].toString();\n            orgValue = values[i];\n            label = this.l10n.getConstant(['True', 'False'][i]);\n        }\n        var radioBtn;\n        radioBtn = {\n            label: label, name: parentId + 'default', checked: isCheck, value: value,\n            change: this.changeValue.bind(this, i)\n        };\n        if (this.valueModel && this.valueModel.radioButtonModel) {\n            radioBtn = __assign({}, radioBtn, this.valueModel.radioButtonModel);\n        }\n        var radiobutton = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.RadioButton(radioBtn);\n        radiobutton.appendTo('#' + parentId + '_valuekey' + i);\n        if (isCheck) {\n            this.updateRules(radiobutton.element, orgValue, 0, true);\n        }\n    };\n    QueryBuilder.prototype.getOperatorIndex = function (ddlObj, rule) {\n        var i;\n        var dataSource = ddlObj.dataSource;\n        var len = dataSource.length;\n        for (i = 0; i < len; i++) {\n            if (rule.operator === ddlObj.dataSource[i].value) {\n                return i;\n            }\n        }\n        return 0;\n    };\n    QueryBuilder.prototype.getPreviousItemData = function (prevItemData, column) {\n        if (this.isFieldClose && prevItemData) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            prevItemData = this.getColumn(prevItemData.value ? prevItemData.value : prevItemData.field);\n        }\n        if (column && column.template && prevItemData && Object.keys(prevItemData).length < 4) {\n            prevItemData.template = column.template;\n        }\n        return prevItemData;\n    };\n    QueryBuilder.prototype.renderValues = function (target, itemData, prevItemData, isRender, rule, tempRule, element) {\n        var subFldElem = target.previousElementSibling;\n        var filtElem = subFldElem.getElementsByTagName('input')[0];\n        var filtObj = this.fieldMode === 'DropdownTree' ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(filtElem, 'dropdowntree')\n            : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(filtElem, 'dropdownlist');\n        var column = this.fieldMode === 'DropdownTree' ? this.getColumn(filtObj.value[0])\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            : this.getColumn(filtObj.value);\n        this.selectedRule = column;\n        var ddlObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(target.querySelector('input'), 'dropdownlist');\n        if (isRender) {\n            itemData = element.id.indexOf('operator') > -1 ? itemData : this.selectedRule;\n            if (itemData.operators) {\n                ddlObj.value = null;\n                ddlObj.dataBind();\n                ddlObj.dataSource = itemData.operators;\n                ddlObj.index = this.getOperatorIndex(ddlObj, rule);\n                ddlObj.value = tempRule.operator = ddlObj.dataSource[ddlObj.index].value;\n                if (!this.autoSelectOperator) {\n                    ddlObj.index = -1;\n                    tempRule.operator = ddlObj.value = '';\n                }\n                else {\n                    ddlObj.dataBind();\n                }\n            }\n        }\n        var operator = tempRule.operator.toString();\n        var isTempRendered = false;\n        if (!(operator.indexOf('null') > -1 || operator.indexOf('isempty') > -1 || operator.indexOf('isnotempty') > -1)) {\n            var parentId = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-container').id;\n            prevItemData = this.getPreviousItemData(prevItemData, column);\n            if (prevItemData && prevItemData.template === undefined) {\n                if (prevItemData.columns) {\n                    prevItemData = this.getColumn(rule.field);\n                }\n            }\n            else if (this.fieldMode === 'DropdownTree' && prevItemData === undefined) {\n                prevItemData = this.getColumn(rule.field);\n            }\n            if (prevItemData && prevItemData.template) {\n                this.templateDestroy(prevItemData, parentId + '_valuekey0');\n                var elem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + parentId + '_valuekey0', target.nextElementSibling);\n                if (elem && !elem.classList.contains('e-control')) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + parentId + '_valuekey0', target.nextElementSibling));\n                }\n                if (typeof prevItemData.template === 'string' || prevItemData.template.create === undefined) {\n                    if (target.nextElementSibling.classList.contains('e-template-value')) {\n                        this.clearQBTemplate([parentId]);\n                    }\n                    target.nextElementSibling.innerHTML = '';\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if (this.isAngular && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prevItemData.key) && this.fieldMode === 'DropdownTree') {\n                    delete prevItemData.template;\n                }\n            }\n            if (isRender) {\n                this.validateValue(rule, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-container'));\n                this.destroyControls(target);\n            }\n            if (this.isImportRules || (ddlObj && ddlObj.value !== '')) {\n                if (column) {\n                    itemData.template = column.template;\n                }\n                if (itemData.template) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([target.nextElementSibling], 'e-template-value');\n                    itemData.template = column.template;\n                    isTempRendered = this.setColumnTemplate(itemData, parentId, column.field, itemData.value ||\n                        operator, target, rule);\n                }\n                if (isTempRendered) {\n                    var parentElem = target.parentElement.querySelector('.e-rule-value');\n                    if (this.element.className.indexOf('e-device') > -1 || this.displayMode === 'Vertical') {\n                        parentElem.style.width = '100%';\n                    }\n                    else {\n                        parentElem.style.width = '200px';\n                    }\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([target.nextElementSibling], 'e-template-value');\n                    var inputLen = 1;\n                    if (tempRule.type === 'boolean') {\n                        inputLen = this.selectedColumn.values ? this.selectedColumn.values.length : 2;\n                    }\n                    else {\n                        inputLen = (operator && operator.toLowerCase().indexOf('between') > -1) ? 2 : 1;\n                    }\n                    for (var i = 0; i < inputLen; i++) {\n                        var valElem = this.createElement('input', { attrs: { type: 'text', id: parentId + '_valuekey' + i } });\n                        target.nextElementSibling.appendChild(valElem);\n                    }\n                }\n                this.renderControls(target, itemData, rule, tempRule, isTempRendered);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if (this.isAngular && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(itemData.key) && itemData.template && this.fieldMode === 'DropdownTree') {\n                    delete itemData.template;\n                }\n            }\n        }\n        else {\n            var parentElem = target.parentElement.querySelector('.e-rule-value');\n            if (parentElem) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([parentElem], 'e-show');\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([parentElem], 'e-hide');\n            }\n        }\n    };\n    QueryBuilder.prototype.setColumnTemplate = function (itemData, ruleID, field, operator, target, rule) {\n        var _this = this;\n        var args;\n        var isRendered = true;\n        if (!itemData.template) {\n            return true;\n        }\n        else {\n            if (typeof itemData.template === 'string' || itemData.template.create === undefined) {\n                args = { requestType: 'value-template-initialize', ruleID: ruleID, field: field, operator: operator, rule: rule,\n                    renderTemplate: true };\n                this.trigger('actionBegin', args, function (observedActionArgs) {\n                    isRendered = _this.actionBeginSuccessCallBack(observedActionArgs, itemData, ruleID, field, target);\n                });\n                return isRendered;\n            }\n            else {\n                var valElem = void 0;\n                var template = itemData.template;\n                if (typeof template.create === 'string') {\n                    valElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(template.create, window)({ field: field, operator: operator });\n                }\n                else {\n                    valElem = template.create({ field: field, operator: operator });\n                }\n                if (valElem instanceof Element) {\n                    valElem.id = ruleID + '_valuekey0';\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([valElem], 'e-template');\n                    target.nextElementSibling.appendChild(valElem);\n                    if (field.indexOf(' ') < 0) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([valElem], 'e-' + field);\n                    }\n                }\n                else if (valElem instanceof Array) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(valElem, 'e-template');\n                    for (var i = 0, iLen = valElem.length; i < iLen; i++) {\n                        valElem[i].id = ruleID + '_valuekey' + i;\n                        target.nextElementSibling.appendChild(valElem[i]);\n                    }\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([target.nextElementSibling], 'e-template-value');\n                return true;\n            }\n        }\n    };\n    QueryBuilder.prototype.actionBeginSuccessCallBack = function (args, itemData, ruleID, field, target) {\n        if (args.renderTemplate) {\n            var valElem = void 0;\n            this.columnTemplateFn = this.templateParser(typeof itemData.template === 'function' ? itemData.template : itemData.template);\n            var templateID = this.element.id + field;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact) {\n                valElem = this.columnTemplateFn(args, this, ruleID, templateID)[0];\n                target.nextElementSibling.appendChild(valElem);\n            } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            else if (this.isAngular) {\n                var valElemColl = this.columnTemplateFn(args, this, ruleID, templateID);\n                valElem = (valElemColl[0].nodeType === 3) ? valElemColl[1] : valElemColl[0];\n                target.nextElementSibling.appendChild(valElem);\n            } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            else if (this.isVue3) {\n                valElem = this.columnTemplateFn(args, this, 'Template', templateID);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)(valElem, target.nextElementSibling);\n            }\n            else {\n                valElem = this.columnTemplateFn(args, this, 'Template', templateID)[0];\n                target.nextElementSibling.appendChild(valElem);\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([target.nextElementSibling], 'e-template-value');\n            this.renderReactTemplates();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    QueryBuilder.prototype.updateValues = function (element, rule) {\n        var idx = 1;\n        if (element.className.indexOf('e-template') > -1) {\n            idx = 3;\n        }\n        var controlName = element.className.split(' e-')[idx];\n        var i = parseInt(element.id.slice(-1), 2);\n        var column;\n        var format;\n        var selectedDate;\n        var value;\n        var radioBtnObj;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var textboxValue;\n        switch (controlName) {\n            case 'checkbox':\n                value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element, controlName).value;\n                rule.value = (value !== '') ? value : undefined;\n                break;\n            case 'textbox':\n                textboxValue = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element, controlName).value;\n                if (rule.operator.indexOf('between') > -1) {\n                    if (typeof rule.value === 'string') {\n                        rule.value = [];\n                    }\n                    rule.value[i] = textboxValue;\n                }\n                else {\n                    rule.value = textboxValue;\n                }\n                break;\n            case 'dropdownlist':\n                rule.value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element, controlName).value;\n                break;\n            case 'radio':\n                radioBtnObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element, controlName);\n                if (radioBtnObj.checked) {\n                    if (typeof rule.value === 'boolean') {\n                        rule.value = radioBtnObj.value === 'true';\n                    }\n                    else {\n                        if (this.getColumn(rule.field).values) {\n                            rule.value = radioBtnObj.value;\n                        }\n                        else {\n                            rule.value = radioBtnObj.value === 'true';\n                        }\n                    }\n                }\n                radioBtnObj.refresh();\n                break;\n            case 'numerictextbox':\n                if (rule.operator.indexOf('between') > -1) {\n                    if (typeof rule.value === 'string') {\n                        rule.value = [];\n                    }\n                    rule.value[i] = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element, controlName).value;\n                }\n                else {\n                    rule.value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element, controlName).value;\n                }\n                break;\n            case 'datepicker':\n                column = this.getColumn(rule.field);\n                format = this.getFormat(column.format);\n                selectedDate = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element, controlName).value;\n                if (rule.operator.indexOf('between') > -1) {\n                    if (typeof rule.value === 'string') {\n                        rule.value = [];\n                    }\n                    rule.value[i] = this.intl.formatDate(selectedDate, format);\n                }\n                else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(format.format) && selectedDate) {\n                    rule.value = this.intl.formatDate(selectedDate);\n                }\n                else if (selectedDate) {\n                    rule.value = this.intl.formatDate(selectedDate, format);\n                }\n                else {\n                    rule.value = selectedDate;\n                }\n                break;\n            case 'multiselect':\n                rule.value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element, controlName).value;\n                break;\n        }\n    };\n    QueryBuilder.prototype.updateRules = function (target, selectedValue, i, isNotTrigger) {\n        var groupElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container');\n        var rule = this.getParentGroup(groupElem);\n        var ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-container');\n        var index = 0;\n        var dropDownObj;\n        var eventsArgs;\n        var groupID = groupElem.id.replace(this.element.id + '_', '');\n        var beforeRules = this.getValidRules(this.rule);\n        while (ruleElem && ruleElem.previousElementSibling !== null) {\n            ruleElem = ruleElem.previousElementSibling;\n            if (!this.enableSeparateConnector || (this.enableSeparateConnector &&\n                ((!this.headerTemplate && !ruleElem.classList.contains('e-btn-group')) ||\n                    this.headerTemplate && (ruleElem.classList.contains('e-rule-container') ||\n                        ruleElem.classList.contains('e-group-container'))))) {\n                index++;\n            }\n        }\n        var operator = rule.rules[index].operator ? rule.rules[index].operator.toString() : '';\n        ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-container');\n        var ruleID = ruleElem.id.replace(this.element.id + '_', '');\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-filter') || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-sub-filter')) {\n            if (this.subFieldElem) {\n                target = this.subFieldElem;\n            }\n            dropDownObj = this.fieldMode === 'DropdownTree' ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(target, 'dropdowntree') :\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(target, 'dropdownlist');\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var column = this.fieldMode === 'DropdownTree' ? this.getColumn(dropDownObj.value[0])\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                : this.getColumn(dropDownObj.value);\n            if (!this.isImportRules && rule.rules[index].field &&\n                rule.rules[index].field.toLowerCase() !== column.field.toLowerCase()) {\n                if (!(ruleElem.querySelectorAll('.e-template')) && !(operator.indexOf('null') > -1)\n                    || (operator.indexOf('empty') > -1)) {\n                    rule.rules[index].value = '';\n                }\n            }\n            this.selectedColumn = this.getColumn(this.selectedColumn.field);\n            rule.rules[index].field = this.selectedColumn.field;\n            rule.rules[index].type = this.selectedColumn.type;\n            rule.rules[index].label = this.selectedColumn.label;\n            var ruleElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-filter');\n            ruleElement = ruleElement ? ruleElement : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-sub-filter');\n            var element = ruleElement.nextElementSibling.querySelector('input.e-control');\n            element = element ? element : ruleElement.nextElementSibling.nextElementSibling.querySelector('input.e-control');\n            operator = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element, 'dropdownlist').value.toString();\n            rule.rules[index].operator = operator;\n            // Value Fields\n            var valueContainer = ruleElement.nextElementSibling.nextElementSibling;\n            var elementCln = valueContainer.querySelectorAll('input.e-control');\n            if (elementCln.length < 1) {\n                elementCln = valueContainer.querySelectorAll('div.e-control');\n            }\n            if (elementCln.length < 1) {\n                elementCln = valueContainer.querySelectorAll('.e-template');\n            }\n            eventsArgs = { groupID: groupID, ruleID: ruleID, value: rule.rules[index].field, type: 'field' };\n            for (var i_1 = 0; i_1 < elementCln.length; i_1++) {\n                if (operator.indexOf('null') > -1 || operator.indexOf('empty') > -1) {\n                    rule.rules[index].value = null;\n                    continue;\n                }\n                this.updateValues(elementCln[i_1], rule.rules[index]);\n            }\n            if (!this.isImportRules && !this.prvtEvtTgrDaD) {\n                this.trigger('change', eventsArgs);\n            }\n            if (this.allowValidation && rule.rules[index].field && target.parentElement.className.indexOf('e-tooltip') > -1) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(target.parentElement, 'tooltip').destroy();\n            }\n            this.filterRules(beforeRules, this.getValidRules(this.rule), 'field');\n        }\n        else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-operator')) {\n            dropDownObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(target, 'dropdownlist');\n            rule.rules[index].operator = dropDownObj.value.toString();\n            var inputElem = ruleElem.querySelectorAll('.e-rule-value input.e-control');\n            eventsArgs = { groupID: groupID, ruleID: ruleID, value: dropDownObj.value, type: 'operator' };\n            if (this.allowValidation && rule.rules[index].operator && target.parentElement.className.indexOf('e-tooltip') > -1) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(target.parentElement, 'tooltip').destroy();\n            }\n            if (inputElem.length > 1 && !(inputElem[0].className.indexOf('e-template') > -1)) {\n                rule.rules[index].value = [];\n            }\n            for (var i_2 = 0; i_2 < inputElem.length; i_2++) {\n                if (rule.rules[index].operator.indexOf('null') > -1 || rule.rules[index].operator.indexOf('empty') > -1) {\n                    rule.rules[index].value = null;\n                    continue;\n                }\n                else if (inputElem[i_2].classList.contains('e-template')) {\n                    continue;\n                }\n                this.updateValues(inputElem[i_2], rule.rules[index]);\n            }\n            if (!this.isImportRules) {\n                this.trigger('change', eventsArgs);\n            }\n            this.filterRules(beforeRules, this.getValidRules(this.rule), 'operator');\n        }\n        else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-value')) {\n            this.ruleValueUpdate(target, selectedValue, rule, index, groupElem, ruleElem, i);\n            if (!isNotTrigger) {\n                this.filterRules(beforeRules, this.getValidRules(this.rule), 'value');\n            }\n        }\n    };\n    QueryBuilder.prototype.filterRules = function (beforeRule, afterRule, type) {\n        var beforeRuleStr = JSON.stringify({ condition: beforeRule.condition, not: beforeRule.not, rule: beforeRule.rules });\n        var afetrRuleStr = JSON.stringify({ condition: afterRule.condition, not: afterRule.not, rule: afterRule.rules });\n        if (beforeRuleStr !== afetrRuleStr) {\n            if (!this.isImportRules && !this.prvtEvtTgrDaD) {\n                this.trigger('ruleChange', { previousRule: beforeRule, rule: afterRule, type: type });\n            }\n        }\n    };\n    QueryBuilder.prototype.ruleValueUpdate = function (target, selectedValue, rule, index, groupElem, ruleElem, i) {\n        var eventsArgs;\n        var oper;\n        var arrOperator = ['in', 'between', 'notin', 'notbetween'];\n        if (rule.rules[index].operator) {\n            oper = rule.rules[index].operator.toString().toLowerCase();\n        }\n        if (selectedValue !== null) {\n            if (target.className.indexOf('e-multiselect') > -1 && rule.rules[index].type === 'number' &&\n                !this.isNotified) {\n                var selVal = [];\n                var dupSelectedValue = selectedValue;\n                for (var k = 0, kLen = dupSelectedValue.length; k < kLen; k++) {\n                    if (typeof dupSelectedValue[k] === 'string') {\n                        selVal.push(parseFloat(dupSelectedValue[k]));\n                    }\n                }\n                if (selVal.length) {\n                    selectedValue = selVal;\n                }\n            }\n            if (this.isNotified) {\n                rule.rules[index].value = selectedValue;\n                eventsArgs = { groupID: groupElem.id, ruleID: ruleElem.id, value: rule.rules[index].value, type: 'value' };\n                if (!this.isImportRules) {\n                    this.trigger('change', eventsArgs);\n                }\n            }\n            else if (target.className.indexOf('e-spin') > -1 || target.className.indexOf('e-numeric') > -1) {\n                if (arrOperator.indexOf(oper) > -1) {\n                    rule.rules[index].value[i] = selectedValue;\n                }\n                else {\n                    rule.rules[index].value = selectedValue;\n                }\n            }\n            else if (target.className.indexOf('e-radio') > -1) {\n                rule.rules[index].value = selectedValue;\n            }\n            else if (target.className.indexOf('e-multiselect') > -1) {\n                rule.rules[index].value = selectedValue;\n            }\n            else if (target.className.indexOf('e-textbox') > -1) {\n                if (oper === 'in' || oper === 'notin') {\n                    if (rule.rules[index].type === 'string') {\n                        rule.rules[index].value = this.processValueString(selectedValue, rule.rules[index].type);\n                    }\n                    else {\n                        rule.rules[index].value = this.processValueString(selectedValue, rule.rules[index].type);\n                    }\n                }\n                else if (oper === 'between' || oper === 'notbetween') {\n                    if (typeof rule.rules[index].value === 'string') {\n                        rule.rules[index].value = [];\n                    }\n                    rule.rules[index].value[i] = selectedValue;\n                }\n                else {\n                    rule.rules[index].value = selectedValue;\n                }\n            }\n            else if (target.className.indexOf('e-datepicker') > -1) {\n                var format = this.getFormat(this.getColumn(this.selectedColumn.field).format);\n                if (format.type) {\n                    if (arrOperator.indexOf(oper) > -1) {\n                        if (typeof rule.rules[index].value === 'string') {\n                            rule.rules[index].value = [];\n                        }\n                        rule.rules[index].value[i] = this.intl.formatDate(selectedValue, format);\n                    }\n                    else {\n                        rule.rules[index].value = this.intl.formatDate(selectedValue, format);\n                    }\n                }\n            }\n            this.validateValue(rule, ruleElem, index);\n        }\n        else {\n            if (target.className.indexOf('e-datepicker') > -1) {\n                if (arrOperator.indexOf(oper) > -1) {\n                    if (typeof rule.rules[index].value === 'string') {\n                        rule.rules[index].value = [];\n                    }\n                    rule.rules[index].value[i] = selectedValue;\n                }\n                else {\n                    rule.rules[index].value = selectedValue;\n                }\n            }\n            else {\n                rule.rules[index].value = selectedValue;\n            }\n        }\n    };\n    QueryBuilder.prototype.validateValue = function (rule, ruleElem, index) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(index)) {\n            rule = rule.rules[index];\n        }\n        var isObject = typeof (rule.value) === 'object';\n        if (this.allowValidation && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(index) || (isObject ? rule.value.length > 0 : rule.value))) {\n            var valElem = ruleElem.querySelectorAll('.e-rule-value .e-control');\n            if (valElem.length > 0) {\n                if (valElem[0].className.indexOf('e-tooltip') > -1) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(valElem[0], 'tooltip').destroy();\n                }\n                else if (valElem[0].parentElement.className.indexOf('e-tooltip') > -1) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(valElem[0].parentElement, 'tooltip').destroy();\n                }\n                if (valElem[1] && valElem[1].parentElement.className.indexOf('e-tooltip') > -1) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(valElem[1].parentElement, 'tooltip').destroy();\n                }\n                if (valElem[2] && valElem[2].parentElement.className.indexOf('e-tooltip') > -1) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(valElem[2].parentElement, 'tooltip').destroy();\n                }\n            }\n        }\n    };\n    QueryBuilder.prototype.getFormat = function (format) {\n        var formatOptions;\n        if (format) {\n            if (typeof (format) === 'string') {\n                formatOptions = { type: 'dateTime' };\n                if (format === 'short' || format === 'yMd') {\n                    formatOptions.type = 'date';\n                    formatOptions.skeleton = format;\n                }\n                else {\n                    formatOptions.format = format;\n                }\n            }\n            else {\n                formatOptions = { type: 'dateTime', skeleton: format.skeleton };\n            }\n        }\n        else {\n            formatOptions = { type: 'date', skeleton: 'yMd' };\n        }\n        return formatOptions;\n    };\n    QueryBuilder.prototype.findGroupByIdx = function (groupIdx, rule, isRoot) {\n        var ruleColl = rule.rules;\n        var dupRuleColl = [];\n        if (!isRoot) {\n            for (var j = 0, jLen = ruleColl.length; j < jLen; j++) {\n                rule = ruleColl[j];\n                if (rule.rules) {\n                    dupRuleColl.push(rule);\n                }\n            }\n            return dupRuleColl[groupIdx];\n        }\n        return rule;\n    };\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers.\n     * Also it maintains the initial input element from the DOM.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    QueryBuilder.prototype.destroy = function () {\n        this.isDestroy = true;\n        var queryElement = this.element;\n        if (!queryElement) {\n            return;\n        }\n        var element;\n        var i;\n        var len;\n        var tooltip;\n        _super.prototype.destroy.call(this);\n        element = this.element.querySelectorAll('.e-addrulegroup');\n        len = element.length;\n        for (i = 0; i < len; i++) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element[i], 'dropdown-btn').destroy();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(element[i]);\n        }\n        tooltip = this.element.querySelectorAll('.e-rule-filter .e-control.e-tooltip');\n        for (i = 0; i < tooltip.length; i++) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(tooltip[i], 'tooltip').destroy();\n        }\n        element = this.element.querySelectorAll('.e-rule-filter .e-control:not(.e-tooltip)');\n        len = element.length;\n        for (i = 0; i < len; i++) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element[i], 'dropdownlist')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element[i], 'dropdownlist').destroy();\n            }\n            else {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element[i], 'dropdowntree').destroy();\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(element[i]);\n        }\n        tooltip = this.element.querySelectorAll('.e-rule-operator .e-control.e-tooltip');\n        for (i = 0; i < tooltip.length; i++) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(tooltip[i], 'tooltip').destroy();\n        }\n        element = this.element.querySelectorAll('.e-rule-operator .e-control:not(.e-tooltip)');\n        len = element.length;\n        for (i = 0; i < len; i++) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element[i], 'dropdownlist')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element[i], 'dropdownlist').destroy();\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(element[i]);\n            }\n        }\n        tooltip = this.element.querySelectorAll('.e-rule-value .e-control.e-tooltip');\n        for (i = 0; i < tooltip.length; i++) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(tooltip[i], 'tooltip').destroy();\n        }\n        this.isImportRules = false;\n        this.unWireEvents();\n        this.levelColl[this.element.id + '_group0'] = [0];\n        this.element.innerHTML = '';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.portals && this.portals.length) {\n            this.clearQBTemplate();\n        }\n        var popupElement = document.querySelectorAll('.qb-dropdownlist.e-popup');\n        if (popupElement) {\n            for (i = 0; i < popupElement.length; i++) {\n                popupElement[i].remove();\n            }\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.element, [], ['e-rtl', 'e-responsive', 'e-device']);\n        this.isDestroy = false;\n    };\n    /**\n     * Adds single or multiple rules.\n     *\n     * @param {RuleModel[]} rule - 'rule collection' to be passed to add the rules.\n     * @param {string} groupID - 'group id' to be passed to add the rule in groups.\n     * @returns {void}.\n     */\n    QueryBuilder.prototype.addRules = function (rule, groupID) {\n        groupID = this.element.id + '_' + groupID;\n        this.isPublic = true;\n        for (var i = 0, len = rule.length; i < len; i++) {\n            this.addRuleElement(document.getElementById(groupID), rule[i]);\n        }\n        this.isPublic = false;\n    };\n    /**\n     * Adds single or multiple groups, which contains the collection of rules.\n     *\n     * @param {RuleModel[]} groups - 'group collection' to be passed to add the groups.\n     * @param {string} groupID - 'group id' to be passed to add the groups.\n     * @returns {void}.\n     */\n    QueryBuilder.prototype.addGroups = function (groups, groupID) {\n        if (this.isAddSuccess || this.element.querySelectorAll('.e-group-container').length <= this.maxGroupCount) {\n            groupID = this.element.id + '_' + groupID;\n            var groupElem = document.getElementById(groupID);\n            var rule = this.getParentGroup(groupElem);\n            var grouplen = groups.length;\n            if (grouplen) {\n                this.isPublic = true;\n                for (var i = 0, len = groups.length; i < len; i++) {\n                    this.updatedRule = { isLocked: groups[i].isLocked, condition: groups[i].condition,\n                        not: groups[i].not };\n                    this.importRules(groups[i], groupElem, false, groups[i].not);\n                }\n                this.isPublic = false;\n            }\n            else {\n                var condition = 'and';\n                var not = false;\n                var isLocked = false;\n                if (this.updatedRule) {\n                    condition = this.updatedRule.condition;\n                    not = this.updatedRule.not;\n                    isLocked = this.updatedRule.isLocked;\n                }\n                if (this.groupIndex < 0) {\n                    if (this.enableNotCondition) {\n                        rule.rules.push({ 'condition': condition, 'not': not, rules: [] });\n                    }\n                    else {\n                        rule.rules.push({ 'condition': condition, rules: [] });\n                    }\n                }\n                else {\n                    if (this.enableNotCondition) {\n                        rule.rules.splice(this.groupIndex + 1, 0, { condition: condition, not: not, rules: [], isLocked: isLocked });\n                    }\n                    else {\n                        rule.rules.splice(this.groupIndex + 1, 0, { condition: condition, rules: [], isLocked: isLocked });\n                    }\n                }\n            }\n            if (!this.headerTemplate) {\n                this.disableRuleCondition(groupElem, rule, null, this.enableSeparateConnector ? true : null);\n            }\n        }\n    };\n    QueryBuilder.prototype.initWrapper = function () {\n        this.isInitialLoad = true;\n        if (this.cssClass) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], this.cssClass.replace(/\\s+/g, ' ').trim().split(' '));\n        }\n        if (this.enableSeparateConnector) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], 'e-multi-connector');\n        }\n        if (this.enableRtl) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], 'e-rtl');\n        }\n        if (this.width) {\n            this.element.style.width = this.width;\n        }\n        if (this.height) {\n            this.element.style.height = this.height;\n        }\n        if (this.rule.rules.length) {\n            this.isImportRules = true;\n        }\n        else {\n            this.addGroupElement(false, this.element);\n        }\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.displayMode === 'Vertical') {\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                this.element.style.width = '100%';\n                this.element.classList.add('e-device');\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(this.element.querySelectorAll('.e-rule-container'), 'e-horizontal-mode');\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(this.element.querySelectorAll('.e-rule-container'), 'e-vertical-mode');\n            this.displayMode = 'Vertical';\n        }\n        else {\n            this.displayMode = 'Horizontal';\n        }\n        if (this.summaryView) {\n            if (this.isImportRules) {\n                this.renderSummary();\n            }\n            else {\n                this.renderSummaryCollapse();\n            }\n        }\n        else {\n            if (this.columns && this.columns.length && this.isImportRules) {\n                this.addGroupElement(false, this.element, this.rule.condition, false, this.rule.not, false, this.rule);\n                var mRules = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.rule, {}, true);\n                this.isRefreshed = true;\n                this.setGroupRules(mRules);\n                this.isRefreshed = false;\n            }\n            else if (this.columns && this.columns.length) {\n                this.addRuleElement(this.element.querySelector('.e-group-container'), {});\n            }\n            this.notGroupRtl();\n            if (this.readonly) {\n                this.enableReadonly();\n            }\n            var buttons = this.element.querySelectorAll('label.e-btn');\n            var button = void 0;\n            for (var i = 0; i < buttons.length; i++) {\n                button = buttons.item(i);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.rippleEffect)(button, { selector: '.e-btn' });\n            }\n        }\n    };\n    QueryBuilder.prototype.renderSummary = function () {\n        var contentElem = this.createElement('div', {\n            attrs: {\n                class: 'e-summary-content',\n                id: this.element.id + '_summary_content'\n            }\n        });\n        var textElem = this.createElement('textarea', { attrs: { class: 'e-summary-text', readonly: 'true' }, styles: 'max-height:500px' });\n        var editElem = this.createElement('button', { attrs: { type: 'button', class: 'e-edit-rule e-css e-btn e-small e-flat e-primary' } });\n        var divElem = this.createElement('div', { attrs: { class: 'e-summary-btndiv' } });\n        contentElem.appendChild(textElem);\n        textElem.textContent = this.getSqlFromRules(this.rule);\n        editElem.textContent = this.l10n.getConstant('Edit');\n        divElem.appendChild(editElem);\n        contentElem.appendChild(divElem);\n        this.element.appendChild(contentElem);\n    };\n    QueryBuilder.prototype.renderSummaryCollapse = function () {\n        var collapseElem = this.createElement('div', {\n            attrs: {\n                class: 'e-collapse-rule e-icons',\n                title: this.l10n.getConstant('SummaryViewTitle')\n            }\n        });\n        this.element.querySelector('.e-group-header').appendChild(collapseElem);\n    };\n    QueryBuilder.prototype.columnSort = function () {\n        if (this.sortDirection.toLowerCase() === 'descending') {\n            this.columns = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.DataManager(this.columns).executeLocal(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query().sortByDesc('field'));\n        }\n        else if (this.sortDirection.toLowerCase() === 'ascending') {\n            this.columns = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.DataManager(this.columns).executeLocal(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query().sortBy('field'));\n        }\n    };\n    QueryBuilder.prototype.onChangeNotGroup = function () {\n        this.element.innerHTML = '';\n        this.groupIdCounter = 0;\n        if (!this.headerTemplate) {\n            if (this.enableNotCondition) {\n                var inputElem = this.createElement('button', { attrs: { type: 'button', class: 'e-qb-toggle' } });\n                if (this.groupElem.querySelector('.e-btn-group')) {\n                    this.groupElem.querySelector('.e-btn-group').insertBefore(inputElem, this.groupElem.querySelector('.e-btngroup-and'));\n                }\n            }\n            else {\n                this.groupElem.querySelector('.e-qb-toggle').remove();\n            }\n        }\n        this.setProperties({ rule: this.checkNotGroup(this.rule) }, true);\n        this.initWrapper();\n    };\n    QueryBuilder.prototype.notGroupRtl = function () {\n        if (this.enableRtl) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(this.element.querySelectorAll('.e-btn-group'), 'e-rtl');\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(this.element.querySelectorAll('.e-btn-group'), 'e-rtl');\n        }\n    };\n    QueryBuilder.prototype.checkNotGroup = function (rule) {\n        var orgRule;\n        if (rule.rules) {\n            for (var i = 0; i < rule.rules.length; i++) {\n                orgRule = rule.rules[i];\n                orgRule = this.checkNotGroup(orgRule);\n                rule.rules[i] = orgRule;\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rule.not)) {\n            if (this.enableNotCondition) {\n                rule.not = false;\n            }\n            delete rule.not;\n        }\n        else if (this.enableNotCondition && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rule.condition)) {\n            rule.not = false;\n        }\n        return rule;\n    };\n    QueryBuilder.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var groupElem = this.element.querySelector('.e-group-container');\n        var summaryElem = this.element.querySelector('.e-summary-content');\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'summaryView':\n                    if (newProp.summaryView) {\n                        groupElem.style.display = 'none';\n                        if (this.element.querySelectorAll('.e-summary-content').length < 1) {\n                            this.renderSummary();\n                            summaryElem = this.element.querySelector('.e-summary-content');\n                        }\n                        else {\n                            this.element.querySelector('.e-summary-text').textContent = this.getSqlFromRules(this.rule);\n                        }\n                        summaryElem.style.display = 'block';\n                    }\n                    else {\n                        if (groupElem.querySelectorAll('.e-collapse-rule').length > -1) {\n                            this.renderSummaryCollapse();\n                        }\n                        groupElem.style.display = 'block';\n                        summaryElem.style.display = 'none';\n                    }\n                    break;\n                case 'displayMode':\n                    this.refresh();\n                    break;\n                case 'showButtons':\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.showButtons.lockGroup)) {\n                        if (newProp.showButtons.lockGroup) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(this.element.querySelectorAll('.e-lock-grp-btn'), 'e-button-hide');\n                        }\n                        else {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(this.element.querySelectorAll('.e-lock-grp-btn'), 'e-button-hide');\n                        }\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.showButtons.lockRule)) {\n                        if (newProp.showButtons.lockRule) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(this.element.querySelectorAll('.e-lock-rule-btn'), 'e-button-hide');\n                        }\n                        else {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(this.element.querySelectorAll('.e-lock-rule-btn'), 'e-button-hide');\n                        }\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.showButtons.cloneGroup)) {\n                        if (newProp.showButtons.cloneGroup) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(this.element.querySelectorAll('.e-clone-grp-btn'), 'e-button-hide');\n                        }\n                        else {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(this.element.querySelectorAll('.e-clone-grp-btn'), 'e-button-hide');\n                        }\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.showButtons.cloneRule)) {\n                        if (newProp.showButtons.cloneRule) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(this.element.querySelectorAll('.e-clone-rule-btn'), 'e-button-hide');\n                        }\n                        else {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(this.element.querySelectorAll('.e-clone-rule-btn'), 'e-button-hide');\n                        }\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.showButtons.ruleDelete)) {\n                        if (newProp.showButtons.ruleDelete) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(this.element.querySelectorAll('.e-rule-delete'), 'e-button-hide');\n                        }\n                        else {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(this.element.querySelectorAll('.e-rule-delete'), 'e-button-hide');\n                        }\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.showButtons.groupDelete)) {\n                        if (newProp.showButtons.groupDelete) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(this.element.querySelectorAll('.e-deletegroup'), 'e-button-hide');\n                        }\n                        else {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(this.element.querySelectorAll('.e-deletegroup'), 'e-button-hide');\n                        }\n                    }\n                    break;\n                case 'cssClass':\n                    if (oldProp.cssClass) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], oldProp.cssClass.split(' '));\n                    }\n                    if (newProp.cssClass) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], newProp.cssClass.replace(/\\s+/g, ' ').trim().split(' '));\n                    }\n                    break;\n                case 'enableRtl':\n                    if (newProp.enableRtl) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], 'e-rtl');\n                        this.notGroupRtl();\n                    }\n                    else {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], 'e-rtl');\n                        this.notGroupRtl();\n                    }\n                    break;\n                case 'enablePersistence':\n                    this.enablePersistence = newProp.enablePersistence;\n                    break;\n                case 'dataSource':\n                    this.dataSource = newProp.dataSource;\n                    this.refresh();\n                    break;\n                case 'columns':\n                    this.columns = newProp.columns;\n                    this.columnSort();\n                    this.updateSubFieldsFromColumns(this.columns);\n                    break;\n                case 'sortDirection':\n                    this.sortDirection = newProp.sortDirection;\n                    this.columnSort();\n                    break;\n                case 'maxGroupCount':\n                    this.maxGroupCount = newProp.maxGroupCount;\n                    break;\n                case 'height':\n                    this.height = newProp.height;\n                    this.element.style.height = this.height;\n                    break;\n                case 'rule':\n                    if (this.rule.rules.length === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.rule)) {\n                        this.reset();\n                    }\n                    this.setProperties({ rule: newProp.rule }, true);\n                    newProp.rule = this.getRuleCollection(this.rule, false);\n                    this.setRules(this.rule);\n                    break;\n                case 'width':\n                    this.width = newProp.width;\n                    this.element.style.width = this.width;\n                    break;\n                case 'locale':\n                    this.locale = newProp.locale;\n                    this.intl = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization(this.locale);\n                    this.isLocale = true;\n                    this.refresh();\n                    this.isLocale = false;\n                    break;\n                case 'enableNotCondition':\n                    this.onChangeNotGroup();\n                    break;\n                case 'readonly':\n                    this.isReadonly = newProp.readonly;\n                    this.enableReadonly();\n                    break;\n                case 'allowDragAndDrop':\n                    this.allowDragAndDrop = newProp.allowDragAndDrop;\n                    this.refresh();\n                    break;\n                case 'enableSeparateConnector':\n                    this.enableSeparateConnector = newProp.enableSeparateConnector;\n                    this.refresh();\n                    break;\n            }\n        }\n    };\n    QueryBuilder.prototype.preRender = function () {\n        this.element.id = this.element.id || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getUniqueID)('ej2-querybuilder');\n        this.defaultLocale = {\n            StartsWith: 'Starts With',\n            DoesNotStartWith: 'Does Not Start With',\n            EndsWith: 'Ends With',\n            DoesNotEndWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContain: 'Does Not Contain',\n            NotLike: 'Not Like',\n            Like: 'Like',\n            Equal: 'Equal',\n            NotEqual: 'Not Equal',\n            LessThan: 'Less Than',\n            LessThanOrEqual: 'Less Than Or Equal',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqual: 'Greater Than Or Equal',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            In: 'In',\n            NotIn: 'Not In',\n            Remove: 'REMOVE',\n            SelectField: 'Select a field',\n            SelectOperator: 'Select operator',\n            DeleteRule: 'Remove this condition',\n            DeleteGroup: 'Delete group',\n            AddGroup: 'Add Group',\n            AddCondition: 'Add Condition',\n            Edit: 'EDIT',\n            ValidationMessage: 'This field is required',\n            SummaryViewTitle: 'Summary View',\n            OtherFields: 'Other Fields',\n            AND: 'AND',\n            OR: 'OR',\n            NOT: 'NOT',\n            SelectValue: 'Enter Value',\n            IsEmpty: 'Is Empty',\n            IsNotEmpty: 'Is Not Empty',\n            IsNull: 'Is Null',\n            IsNotNull: 'Is Not Null',\n            True: 'true',\n            False: 'false',\n            AddButton: 'Add Group/Condition',\n            CloneGroup: 'Clone Group',\n            LockGroup: 'Lock Group',\n            CloneRule: 'Clone Rule',\n            LockRule: 'Lock Rule',\n            UnlockRule: 'Unlock Rule',\n            UnlockGroup: 'Unlock Group'\n        };\n        this.l10n = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('querybuilder', this.defaultLocale, this.locale);\n        this.intl = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization(this.locale);\n        this.groupIdCounter = 0;\n        this.subFilterCounter = 0;\n        this.ruleIdCounter = 0;\n        this.btnGroupId = 0;\n        this.isImportRules = false;\n        this.parser = [];\n        this.customOperators = {\n            stringOperator: [\n                { value: 'startswith', key: this.l10n.getConstant('StartsWith') },\n                { value: 'notstartswith', key: this.l10n.getConstant('DoesNotStartWith') },\n                { value: 'endswith', key: this.l10n.getConstant('EndsWith') },\n                { value: 'notendswith', key: this.l10n.getConstant('DoesNotEndWith') },\n                { value: 'contains', key: this.l10n.getConstant('Contains') },\n                { value: 'notcontains', key: this.l10n.getConstant('DoesNotContain') },\n                { value: 'equal', key: this.l10n.getConstant('Equal') },\n                { value: 'notequal', key: this.l10n.getConstant('NotEqual') },\n                { value: 'in', key: this.l10n.getConstant('In') },\n                { value: 'notin', key: this.l10n.getConstant('NotIn') },\n                { value: 'isempty', key: this.l10n.getConstant('IsEmpty') },\n                { value: 'isnotempty', key: this.l10n.getConstant('IsNotEmpty') }\n            ],\n            dateOperator: [\n                { value: 'equal', key: this.l10n.getConstant('Equal') },\n                { value: 'greaterthan', key: this.l10n.getConstant('GreaterThan') },\n                { value: 'greaterthanorequal', key: this.l10n.getConstant('GreaterThanOrEqual') },\n                { value: 'lessthan', key: this.l10n.getConstant('LessThan') },\n                { value: 'lessthanorequal', key: this.l10n.getConstant('LessThanOrEqual') },\n                { value: 'notequal', key: this.l10n.getConstant('NotEqual') },\n                { value: 'between', key: this.l10n.getConstant('Between') },\n                { value: 'notbetween', key: this.l10n.getConstant('NotBetween') }\n            ],\n            booleanOperator: [\n                { value: 'equal', key: this.l10n.getConstant('Equal') },\n                { value: 'notequal', key: this.l10n.getConstant('NotEqual') }\n            ],\n            numberOperator: [\n                { value: 'equal', key: this.l10n.getConstant('Equal') },\n                { value: 'greaterthanorequal', key: this.l10n.getConstant('GreaterThanOrEqual') },\n                { value: 'greaterthan', key: this.l10n.getConstant('GreaterThan') },\n                { value: 'between', key: this.l10n.getConstant('Between') },\n                { value: 'lessthan', key: this.l10n.getConstant('LessThan') },\n                { value: 'notbetween', key: this.l10n.getConstant('NotBetween') },\n                { value: 'lessthanorequal', key: this.l10n.getConstant('LessThanOrEqual') },\n                { value: 'notequal', key: this.l10n.getConstant('NotEqual') },\n                { value: 'in', key: this.l10n.getConstant('In') },\n                { value: 'notin', key: this.l10n.getConstant('NotIn') }\n            ]\n        };\n        this.operators = {\n            equal: '=', notequal: '!=', greaterthan: '>', greaterthanorequal: '>=', lessthan: '<', in: 'IN', notin: 'NOT IN',\n            lessthanorequal: '<=', startswith: 'LIKE', endswith: 'LIKE', between: 'BETWEEN', notbetween: 'NOT BETWEEN', contains: 'LIKE',\n            isnull: 'IS NULL', isnotnull: 'IS NOT NULL', isempty: 'IS EMPTY', isnotempty: 'IS NOT EMPTY', notstartswith: 'NOT LIKE',\n            notendswith: 'NOT LIKE', notcontains: 'NOT LIKE'\n        };\n        this.sqlOperators = {\n            equal: '=', notequal: '!=', greaterthan: '>', greaterthanorequal: '>=', lessthan: '<', in: this.l10n.getConstant('In').toUpperCase(),\n            notin: this.l10n.getConstant('NotIn').toUpperCase(), lessthanorequal: '<=', startswith: this.l10n.getConstant('Like').toUpperCase(),\n            endswith: this.l10n.getConstant('Like').toUpperCase(), between: this.l10n.getConstant('Between').toUpperCase(),\n            notbetween: this.l10n.getConstant('NotBetween').toUpperCase(), contains: this.l10n.getConstant('Like').toUpperCase(),\n            isnull: this.l10n.getConstant('IsNull').toUpperCase(), isnotnull: this.l10n.getConstant('IsNotNull').toUpperCase(),\n            isempty: this.l10n.getConstant('IsEmpty').toUpperCase(), isnotempty: this.l10n.getConstant('IsNotEmpty').toUpperCase(),\n            notstartswith: this.l10n.getConstant('NotLike').toUpperCase(), notendswith: this.l10n.getConstant('NotLike').toUpperCase(),\n            notcontains: this.l10n.getConstant('NotLike').toUpperCase()\n        };\n        if (!this.fields) {\n            this.fields = { text: 'label', value: 'field' };\n        }\n    };\n    QueryBuilder.prototype.render = function () {\n        this.levelColl = {};\n        this.items = [\n            {\n                text: this.l10n.getConstant('AddGroup'),\n                iconCss: 'e-icons e-add-icon e-addgroup'\n            },\n            {\n                text: this.l10n.getConstant('AddCondition'),\n                iconCss: 'e-icons e-add-icon e-addrule'\n            }\n        ];\n        this.ruleElem = this.ruleTemplate();\n        this.groupElem = this.groupTemplate();\n        var stringOper = [\n            { value: 'isnull', key: this.l10n.getConstant('IsNull') },\n            { value: 'isnotnull', key: this.l10n.getConstant('IsNotNull') }\n        ];\n        var numberOper = [\n            { value: 'isnull', key: this.l10n.getConstant('IsNull') },\n            { value: 'isnotnull', key: this.l10n.getConstant('IsNotNull') }\n        ];\n        this.customOperators['stringOperator'] = this.customOperators['stringOperator'].concat(stringOper); // tslint:disable-line\n        this.customOperators['numberOperator'] = this.customOperators['numberOperator'].concat(numberOper); // tslint:disable-line\n        if (this.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.DataManager) {\n            this.dataManager = this.dataSource;\n            this.executeDataManager(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query().take(1));\n        }\n        else {\n            this.dataManager = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.DataManager(this.dataSource);\n            this.dataColl = this.dataManager.executeLocal(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query());\n            this.initControl();\n        }\n        this.renderComplete();\n        if (this.allowDragAndDrop) {\n            this.initializeDrag();\n        }\n    };\n    QueryBuilder.prototype.initializeDrag = function () {\n        this.draggable = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Draggable(this.element, {\n            dragTarget: '.e-drag-qb-rule',\n            distance: 5,\n            helper: this.helper.bind(this),\n            dragStart: this.dragStartHandler.bind(this),\n            drag: this.dragHandler.bind(this),\n            dragStop: this.dragStopHandler.bind(this),\n            isReplaceDragEle: true,\n            isPreventSelect: false,\n            abort: '.e-parent-header',\n            isDragScroll: true\n        });\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    QueryBuilder.prototype.helper = function (e) {\n        var target = this.draggable.currentStateTarget;\n        if (!target.classList.contains('e-drag-qb-rule') || (target.classList.contains('e-drag-qb-rule') && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-disable'))) {\n            return false;\n        }\n        var visualElement = this.createElement('div', {\n            className: 'e-cloneproperties e-draganddrop e-dragclone',\n            styles: 'height:\"auto\", z-index:2, width:' + this.element.offsetWidth\n        });\n        var cloneElement;\n        if (this.draggable.currentStateTarget.parentElement.classList.contains('e-group-header')) {\n            cloneElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container').cloneNode(true);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container').classList.add('e-qb-dragging-rule');\n        }\n        else {\n            visualElement.classList.add('e-group-body');\n            cloneElement = this.createElement('div', { className: 'e-rule-container' });\n            var ruleElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-field').cloneNode(true);\n            cloneElement.appendChild(ruleElement);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-field').classList.add('e-qb-dragging-rule');\n        }\n        visualElement.appendChild(cloneElement);\n        var childElements = visualElement.querySelectorAll('*');\n        childElements.forEach(function (child) {\n            child.removeAttribute('id');\n        });\n        this.element.appendChild(visualElement);\n        return visualElement;\n    };\n    QueryBuilder.prototype.dragStartHandler = function (e) {\n        this.draggedRule = e.target;\n        this.isDragEventPrevent = false;\n        document.body.classList.add('e-prevent-select');\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.dragElement = e.dragElement;\n        var rule = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-rule-container');\n        var group = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-group-container');\n        var dragEventArgs = { dragRuleID: rule !== null ? rule.id : group.id, dragGroupID: group.id, cancel: false };\n        this.trigger('dragStart', dragEventArgs);\n        this.isDragEventPrevent = dragEventArgs.cancel;\n    };\n    QueryBuilder.prototype.dragHandler = function (e) {\n        if (this.isDragEventPrevent) {\n            return;\n        }\n        var borderLineElem = this.element.querySelectorAll('.e-drag-rule-bottom-line');\n        borderLineElem.forEach(function (ele) {\n            ele.classList.remove('e-drag-rule-bottom-line');\n        });\n        borderLineElem = this.element.querySelectorAll('.e-drag-rule-top-line');\n        borderLineElem.forEach(function (ele) {\n            ele.classList.remove('e-drag-rule-top-line');\n        });\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.target)) {\n            return;\n        }\n        if (e.target.nodeName === 'HTML' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-qb-dragging-rule') || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-group-header') ||\n            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '#' + this.element.id) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-disable') || (e.target.parentElement && e.target.parentElement.classList.contains('e-btn-group') && this.enableSeparateConnector)) {\n            this.dragElement.classList.add('e-notallowedcur');\n            return;\n        }\n        else {\n            this.dragElement.classList.remove('e-notallowedcur');\n        }\n        var targetElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-rule-container');\n        var grpElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-group-container');\n        if (targetElem) {\n            var rect = targetElem.getBoundingClientRect();\n            var mouseY = e.event.clientY || e.event.changedTouches[0].clientY;\n            var distanceToTop = mouseY - rect.top;\n            var distanceToBottom = rect.bottom - mouseY;\n            var threshold = 20; // Adjust as needed\n            if (distanceToTop < threshold) {\n                targetElem.classList.add('e-drag-rule-top-line');\n            }\n            else if (distanceToBottom < threshold) {\n                targetElem.classList.add('e-drag-rule-bottom-line');\n            }\n        }\n        else if (e.target.classList.contains('e-rule-list') && e.target.children.length === 0) {\n            e.target.classList.add('e-drag-rule-bottom-line');\n        }\n        else if (e.target.classList.contains('e-rule-list') && e.target.children[0].classList.contains('e-group-container')) {\n            var rect = e.target.children[0].getBoundingClientRect();\n            var mouseY = e.event.clientY || e.event.changedTouches[0].clientY;\n            var distanceToTop = mouseY - rect.top;\n            var threshold = 20; // Adjust as needed\n            if (distanceToTop < threshold) {\n                e.target.classList.add('e-drag-rule-top-line');\n            }\n        }\n        else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-group-container') || e.target.classList.contains('e-group-container')) {\n            if (!grpElem) {\n                grpElem = e.target;\n            }\n            if (grpElem.id.indexOf('group0') > -1) {\n                var rect = e.target.getBoundingClientRect();\n                var mouseY = e.event.clientY || e.event.changedTouches[0].clientY;\n                var distanceToBottom = rect.bottom - mouseY;\n                var threshold = 20; // Adjust as needed\n                if (distanceToBottom < threshold) {\n                    e.target.classList.add('e-drag-rule-bottom-line');\n                }\n            }\n        }\n        var dragEventArgs = { dragRuleID: targetElem !== null ? targetElem.id : grpElem !== null ? grpElem.id : null,\n            dragGroupID: grpElem !== null ? grpElem.id : null, cancel: false };\n        this.trigger('drag', dragEventArgs);\n        this.isDragEventPrevent = dragEventArgs.cancel;\n    };\n    QueryBuilder.prototype.dragStopHandler = function (e) {\n        var _this = this;\n        if (this.isDragEventPrevent) {\n            return;\n        }\n        var targetGroup = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-rule-container');\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(targetGroup) && e.target.parentElement &&\n            e.target.parentElement.classList.contains('e-btn-group') && this.enableSeparateConnector) {\n            targetGroup = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target.parentElement.previousElementSibling, '.e-rule-container');\n        }\n        var isPreventelem;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.helper)) {\n            isPreventelem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.helper, '.e-notallowedcur');\n        }\n        var prevRule;\n        if (!isPreventelem) {\n            var targetGrp = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-group-container');\n            var dropEventArgs = { cancel: false, dropRuleID: targetGroup !== null ? targetGroup.id\n                    : targetGrp !== null ? targetGrp.id : null, dropGroupID: targetGrp !== null ? targetGrp.id : null };\n            this.trigger('drop', dropEventArgs);\n            if (dropEventArgs.cancel) {\n                isPreventelem = true;\n            }\n            prevRule = this.getValidRules();\n        }\n        this.prvtEvtTgrDaD = true;\n        var tgrt = this.enableSeparateConnector && e.target.parentElement &&\n            e.target.parentElement.classList.contains('e-btn-group') ? e.target.parentElement.previousElementSibling : e.target;\n        if (targetGroup && !isPreventelem) {\n            var groupId_1 = targetGroup.id.split(this.element.id + '_')[1].split('_')[0];\n            if (this.draggable.currentStateTarget.parentElement.classList.contains('e-rule-field') ||\n                this.draggable.currentStateTarget.parentElement.classList.contains('e-group-header')) {\n                var rule = void 0;\n                if (this.draggable.currentStateTarget.parentElement.classList.contains('e-group-header')) {\n                    rule = this.getGroup(this.draggedRule);\n                    this.deleteGroup((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.draggedRule, '.e-group-container'));\n                }\n                else {\n                    rule = this.getRule(this.draggedRule);\n                    this.deleteRule(this.draggedRule);\n                }\n                var groupRule = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], this.getGroup(targetGroup), [], true);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if (groupRule.properties) {\n                    groupRule = groupRule.properties;\n                }\n                var groupElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(targetGroup, '.e-group-container');\n                var nestGrpElem = groupElem.querySelectorAll('.e-group-container');\n                nestGrpElem.forEach(function (ele) {\n                    if (_this.element.querySelector('#' + ele.id)) {\n                        _this.deleteGroup(ele);\n                    }\n                });\n                var ruleElems = groupElem.querySelectorAll('.e-rule-container');\n                var ruleIds = [];\n                var dropInd = void 0;\n                for (var i = 0; i < ruleElems.length; i++) {\n                    if (ruleElems[i].classList.contains('e-drag-rule-top-line') ||\n                        ruleElems[i].classList.contains('e-drag-rule-bottom-line')) {\n                        dropInd = i;\n                    }\n                    ruleIds.push(ruleElems[i].id.split(this.element.id + '_')[1]);\n                }\n                this.deleteRules(ruleIds);\n                if (targetGroup.classList.contains('e-drag-rule-top-line')) {\n                    groupRule.rules.splice(dropInd, 0, rule);\n                }\n                else {\n                    groupRule.rules.splice(dropInd + 1, 0, rule);\n                }\n                groupRule.rules.forEach(function (rule) {\n                    if (_this.enableSeparateConnector) {\n                        if (!rule.rules) {\n                            _this.addRules([rule], groupId_1);\n                        }\n                        else {\n                            _this.addGroups([rule], groupId_1);\n                        }\n                    }\n                    else {\n                        if (rule.condition) {\n                            _this.addGroups([rule], groupId_1);\n                        }\n                        else {\n                            _this.addRules([rule], groupId_1);\n                        }\n                    }\n                });\n            }\n        }\n        else if (tgrt.classList.contains('e-rule-list') && tgrt.children.length === 0 && !isPreventelem) {\n            var groupElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(tgrt, '.e-group-container');\n            var groupId = groupElem.id.split(this.element.id + '_')[1].split('_')[0];\n            var rule = void 0;\n            if (this.draggable.currentStateTarget.parentElement.classList.contains('e-group-header')) {\n                rule = this.getGroup(this.draggedRule);\n                this.deleteGroup((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.draggedRule, '.e-group-container'));\n            }\n            else {\n                rule = this.getRule(this.draggedRule);\n                this.deleteRule(this.draggedRule);\n            }\n            if (this.enableSeparateConnector) {\n                if (!rule.rules) {\n                    this.addRules([rule], groupId);\n                }\n                else {\n                    this.addGroups([rule], groupId);\n                }\n            }\n            else {\n                if (rule.condition) {\n                    this.addGroups([rule], groupId);\n                }\n                else {\n                    this.addRules([rule], groupId);\n                }\n            }\n        }\n        else if (tgrt.classList.contains('e-rule-list') && tgrt.children[0].classList.contains('e-group-container') && !isPreventelem) {\n            var groupElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(tgrt, '.e-group-container');\n            var groupId_2 = groupElem.id.split(this.element.id + '_')[1].split('_')[0];\n            var rule = void 0;\n            if (this.draggable.currentStateTarget.parentElement.classList.contains('e-group-header')) {\n                rule = this.getGroup(this.draggedRule);\n                this.deleteGroup((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.draggedRule, '.e-group-container'));\n            }\n            else {\n                rule = this.getRule(this.draggedRule);\n                this.deleteRule(this.draggedRule);\n            }\n            var groupRule = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], this.getGroup(tgrt), [], true);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (groupRule.properties) {\n                groupRule = groupRule.properties;\n            }\n            var groupElems = tgrt.querySelectorAll('.e-group-container');\n            groupElems.forEach(function (ele) {\n                if (_this.element.querySelector('#' + ele.id)) {\n                    _this.deleteGroup(ele);\n                }\n            });\n            var ruleElems = groupElem.querySelectorAll('.e-rule-container');\n            ruleElems.forEach(function (ele) {\n                if (_this.element.querySelector('#' + ele.id)) {\n                    _this.deleteRule(ele);\n                }\n            });\n            if (this.draggable.currentStateTarget.parentElement.classList.contains('e-group-header')) {\n                this.addGroups([rule], groupId_2);\n            }\n            else {\n                this.addRules([rule], groupId_2);\n            }\n            groupRule.rules.forEach(function (rule) {\n                if (_this.enableSeparateConnector) {\n                    if (!rule.rules) {\n                        _this.addRules([rule], groupId_2);\n                    }\n                    else {\n                        _this.addGroups([rule], groupId_2);\n                    }\n                }\n                else {\n                    if (rule.condition) {\n                        _this.addGroups([rule], groupId_2);\n                    }\n                    else {\n                        _this.addRules([rule], groupId_2);\n                    }\n                }\n            });\n        }\n        else if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-group-container') || e.target.classList.contains('e-group-container')) && !isPreventelem) {\n            var rule = void 0;\n            targetGroup = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-group-container');\n            if (!targetGroup && e.target.classList.contains('e-group-container')) {\n                targetGroup = e.target;\n            }\n            var groupId = targetGroup.id.split(this.element.id + '_')[1].split('_')[0];\n            if (groupId === 'group0') {\n                if (this.draggable.currentStateTarget.parentElement.classList.contains('e-group-header')) {\n                    rule = this.getGroup(this.draggedRule);\n                    this.deleteGroup((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.draggedRule, '.e-group-container'));\n                }\n                else {\n                    rule = this.getRule(this.draggedRule);\n                    this.deleteRule(this.draggedRule);\n                }\n                if (this.enableSeparateConnector) {\n                    if (!rule.rules) {\n                        this.addRules([rule], groupId);\n                    }\n                    else {\n                        this.addGroups([rule], groupId);\n                    }\n                }\n                else {\n                    if (rule.condition) {\n                        this.addGroups([rule], groupId);\n                    }\n                    else {\n                        this.addRules([rule], groupId);\n                    }\n                }\n            }\n        }\n        if (!isPreventelem) {\n            this.trigger('ruleChange', { previousRule: prevRule, rule: this.getValidRules(), type: 'drag-and-drop' });\n        }\n        this.prvtEvtTgrDaD = false;\n        document.body.classList.remove('e-prevent-select');\n        var borderLineElem = this.element.querySelectorAll('.e-drag-rule-bottom-line');\n        borderLineElem.forEach(function (ele) {\n            ele.classList.remove('e-drag-rule-bottom-line');\n        });\n        borderLineElem = this.element.querySelectorAll('.e-drag-rule-top-line');\n        borderLineElem.forEach(function (ele) {\n            ele.classList.remove('e-drag-rule-top-line');\n        });\n        borderLineElem = this.element.querySelectorAll('.e-qb-dragging-rule');\n        borderLineElem.forEach(function (ele) {\n            ele.classList.remove('e-qb-dragging-rule');\n        });\n        if (e.helper && e.helper.classList.contains('e-cloneproperties') && document.querySelector('.' + e.helper.classList[0])) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(e.helper);\n        }\n        if (this.enableSeparateConnector) {\n            this.refresh();\n        }\n    };\n    QueryBuilder.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (typeof template !== 'function' && document.querySelectorAll(template).length) {\n                    return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(document.querySelector(template).innerHTML.trim());\n                }\n                else {\n                    return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);\n                }\n            }\n            catch (error) {\n                return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);\n            }\n        }\n        return undefined;\n    };\n    QueryBuilder.prototype.executeDataManager = function (query) {\n        var _this = this;\n        var data = this.dataManager.executeQuery(query);\n        var deferred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Deferred();\n        data.then(function (e) {\n            if (e.actual && e.actual.result) {\n                _this.dataColl = e.actual.result;\n            }\n            else {\n                _this.dataColl = e.result;\n            }\n            _this.initControl();\n        }).catch(function (e) {\n            deferred.reject(e);\n        });\n    };\n    QueryBuilder.prototype.initControl = function () {\n        this.initialize();\n        this.initWrapper();\n        this.wireEvents();\n    };\n    QueryBuilder.prototype.wireEvents = function () {\n        var wrapper = this.getWrapper();\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(wrapper, 'click', this.clickEventHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(wrapper, 'focusout', this.focusEventHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(wrapper, 'focusin', this.focusEventHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keydown', this.keyBoardHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'keydown', this.keyBoardHandler, this);\n    };\n    QueryBuilder.prototype.unWireEvents = function () {\n        var wrapper = this.getWrapper();\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(wrapper, 'click', this.clickEventHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(wrapper, 'focusout', this.focusEventHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(wrapper, 'focusin', this.focusEventHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keydown', this.keyBoardHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'keydown', this.keyBoardHandler);\n    };\n    QueryBuilder.prototype.getParentGroup = function (target, isParent) {\n        var groupLevel = (target instanceof Element) ? this.levelColl[target.id] : this.levelColl[\"\" + target];\n        var len = isParent ? groupLevel.length - 1 : groupLevel.length;\n        var rule = this.rule;\n        for (var i = 0; i < len; i++) {\n            rule = this.findGroupByIdx(groupLevel[i], rule, i === 0);\n        }\n        return rule;\n    };\n    /**\n     * Delete the Group\n     *\n     * @param {Element | string} target - 'target' to be passed to delete the group.\n     * @returns {void}\n     */\n    QueryBuilder.prototype.deleteGroup = function (target) {\n        var _this = this;\n        var groupElem = target;\n        var groupId;\n        if (typeof target === 'string') {\n            groupId = this.element.id + '_' + target;\n            target = document.getElementById(groupId);\n            groupId = groupId.replace(this.element.id + '_', '');\n        }\n        else {\n            groupId = groupElem.id.replace(this.element.id + '_', '');\n        }\n        if (groupId === 'group0' || !target) {\n            return;\n        }\n        var args = { groupID: groupId, cancel: false, type: 'deleteGroup' };\n        if (!this.isImportRules && !this.prvtEvtTgrDaD) {\n            this.trigger('beforeChange', args, function (observedChangeArgs) {\n                _this.deleteGroupSuccessCallBack(observedChangeArgs, target);\n            });\n        }\n        else {\n            this.deleteGroupSuccessCallBack(args, target);\n        }\n    };\n    QueryBuilder.prototype.deleteGroupSuccessCallBack = function (args, target) {\n        if (!args.cancel) {\n            var groupElem = target;\n            var rule = this.getParentGroup(groupElem, true);\n            var index = 0;\n            var i = void 0;\n            var len = void 0;\n            var beforeRules = this.getValidRules(this.rule);\n            var nextElem = groupElem.nextElementSibling;\n            var prevElem = groupElem.previousElementSibling;\n            var element = groupElem.querySelectorAll('.e-group-container');\n            var valElem = groupElem.querySelectorAll('.e-tooltip');\n            len = valElem.length;\n            for (i = 0; i < len; i++) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(valElem[i], 'tooltip').destroy();\n            }\n            for (i = 0, len = element.length; i < len; i++) {\n                delete this.levelColl[element[i].id];\n            }\n            while (groupElem.previousElementSibling !== null) {\n                groupElem = groupElem.previousElementSibling;\n                if (!this.enableSeparateConnector || (this.enableSeparateConnector &&\n                    ((!this.headerTemplate && !groupElem.classList.contains('e-btn-group')) ||\n                        this.headerTemplate && (groupElem.classList.contains('e-rule-container') ||\n                            groupElem.classList.contains('e-group-container'))))) {\n                    index++;\n                }\n            }\n            if (!this.enableSeparateConnector) {\n                if (nextElem && nextElem.className.indexOf('e-separate-rule') > -1) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([nextElem], 'e-separate-rule');\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([nextElem], 'e-joined-rule');\n                    if (prevElem && prevElem.className.indexOf('e-rule-container') > -1) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([prevElem], 'e-prev-joined-rule');\n                    }\n                }\n            }\n            var elem = groupElem.parentElement.parentElement.parentElement;\n            var removeString = [];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact || this.isAngular) {\n                var remRule = rule.rules[index];\n                var ruleElemColl = target.querySelectorAll('.e-rule-container');\n                if (remRule && remRule.rules) {\n                    for (var r = 0; r < remRule.rules.length; r++) {\n                        var column = this.getColumn(remRule.rules[r].field);\n                        if (ruleElemColl[r]) {\n                            var isTemplateRendered = ruleElemColl[r].querySelector('.e-template-value');\n                            if (column && (column.ruleTemplate || (this.isPlatformTemplate(column) && isTemplateRendered))) {\n                                removeString.push(ruleElemColl[r].id);\n                            }\n                        }\n                    }\n                }\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(target);\n            if (this.headerTemplate) {\n                this.clearQBTemplate([target.id]);\n            }\n            if (removeString.length) {\n                this.clearQBTemplate(removeString);\n            }\n            rule.rules.splice(index, 1);\n            delete this.levelColl[args.groupID];\n            this.refreshLevelColl();\n            this.disableRuleCondition(elem, rule);\n            if (this.enableSeparateConnector && prevElem && ((!this.headerTemplate && prevElem.classList.contains('e-btn-group')) ||\n                (this.headerTemplate && prevElem.classList.contains('e-custom-group-btn')))) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(prevElem);\n            }\n            if (!this.isImportRules && !this.prvtEvtTgrDaD) {\n                this.trigger('change', args);\n            }\n            this.filterRules(beforeRules, this.getValidRules(this.rule), 'deleteGroup');\n        }\n    };\n    QueryBuilder.prototype.isPlatformTemplate = function (column) {\n        var isTemp = false;\n        isTemp = column.template && (typeof column.template === 'string' || column.template.create === undefined);\n        return isTemp;\n    };\n    QueryBuilder.prototype.deleteRule = function (target) {\n        var _this = this;\n        var groupElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container');\n        var groupID = groupElem.id.replace(this.element.id + '_', '');\n        var ruleID = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-container').id.replace(this.element.id + '_', '');\n        var args = { groupID: groupID, ruleID: ruleID, cancel: false, type: 'deleteRule' };\n        if (!this.isImportRules && !this.prvtEvtTgrDaD) {\n            this.trigger('beforeChange', args, function (observedChangeArgs) {\n                _this.deleteRuleSuccessCallBack(observedChangeArgs, target);\n            });\n        }\n        else {\n            this.deleteRuleSuccessCallBack(args, target);\n        }\n    };\n    QueryBuilder.prototype.deleteRuleSuccessCallBack = function (args, target) {\n        if (!args.cancel) {\n            var groupElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container');\n            var rule = this.getParentGroup(groupElem);\n            var ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-container');\n            var beforeRules = this.getValidRules(this.rule);\n            var prevElem = ruleElem.previousElementSibling;\n            var index = 0;\n            var clnruleElem = ruleElem;\n            var nextElem = ruleElem.nextElementSibling;\n            var valElem = ruleElem.querySelectorAll('.e-tooltip');\n            var i = void 0;\n            var len = valElem.length;\n            for (i = 0; i < len; i++) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(valElem[i], 'tooltip').destroy();\n            }\n            while (ruleElem.previousElementSibling !== null) {\n                ruleElem = ruleElem.previousElementSibling;\n                if (!this.enableSeparateConnector || (this.enableSeparateConnector &&\n                    ((!this.headerTemplate && !ruleElem.classList.contains('e-btn-group')) ||\n                        this.headerTemplate && (ruleElem.classList.contains('e-rule-container') ||\n                            ruleElem.classList.contains('e-group-container'))))) {\n                    index++;\n                }\n            }\n            var column = this.getColumn(rule.rules[index].field);\n            if (column && column.template && clnruleElem.querySelector('.e-template')) {\n                this.templateDestroy(column, clnruleElem.querySelector('.e-template').id);\n            }\n            if (!prevElem || prevElem.className.indexOf('e-rule-container') < 0) {\n                if (nextElem) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([nextElem], 'e-joined-rule');\n                }\n            }\n            if (!nextElem || nextElem.className.indexOf('e-rule-container') < 0) {\n                if (prevElem) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([prevElem], 'e-prev-joined-rule');\n                }\n            }\n            var isTemplateRendered = clnruleElem.querySelector('.e-template-value');\n            // eslint-disable\n            try {\n                if (this.enableSeparateConnector && (clnruleElem.previousElementSibling || clnruleElem.nextElementSibling)) {\n                    var previousElem = clnruleElem.previousElementSibling;\n                    var nextElem_1 = clnruleElem.nextElementSibling;\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(nextElem_1) && ((!this.headerTemplate && previousElem.classList.contains('e-btn-group'))\n                        || (this.headerTemplate && previousElem.classList.contains('e-custom-group-btn')))) {\n                        if (previousElem && previousElem.previousElementSibling && previousElem.previousElementSibling.classList.contains('e-rule-container')) {\n                            var rule_1 = this.getRule(previousElem.previousElementSibling);\n                            rule_1.condition = null;\n                        }\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(previousElem);\n                    }\n                    else if ((!this.headerTemplate && nextElem_1.classList.contains('e-btn-group'))\n                        || (this.headerTemplate && nextElem_1.classList.contains('e-custom-group-btn'))) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(nextElem_1);\n                    }\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(clnruleElem);\n            }\n            catch (err) {\n                return;\n            }\n            if (column && column.ruleTemplate) {\n                this.clearQBTemplate([clnruleElem.id]);\n            }\n            if (column && this.isPlatformTemplate(column) && isTemplateRendered) {\n                this.clearQBTemplate([clnruleElem.id]);\n            }\n            rule.rules.splice(index, 1);\n            if (!(rule.rules[0] && rule.rules[0].rules)) {\n                this.disableRuleCondition(groupElem, rule, this.enableSeparateConnector ? true : false);\n            }\n            var tooltipElem = this.element.querySelectorAll('.e-tooltip');\n            for (var i_3 = 0; i_3 < tooltipElem.length; i_3++) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(tooltipElem[i_3], 'tooltip').refresh(tooltipElem[i_3]);\n            }\n            if (!this.isImportRules && !this.prvtEvtTgrDaD) {\n                this.trigger('change', args);\n            }\n            this.filterRules(beforeRules, this.getValidRules(this.rule), 'deleteRule');\n        }\n    };\n    QueryBuilder.prototype.setGroupRules = function (rule, isRoot) {\n        if (this.headerTemplate && isRoot) {\n            this.isRoot = true;\n        }\n        this.reset();\n        this.groupIdCounter = 1;\n        this.ruleIdCounter = 0;\n        this.isImportRules = true;\n        this.setProperties({ rule: rule }, true);\n        rule = this.getRuleCollection(this.rule, false);\n        this.importRules(this.rule, this.element.querySelector('.e-group-container'), true, this.rule.not, isRoot);\n        if (rule.isLocked) {\n            var lockGrpTarget = this.element.querySelector('.e-group-container').querySelector('.e-lock-grp-btn');\n            this.groupLock(lockGrpTarget);\n        }\n        this.isImportRules = false;\n    };\n    QueryBuilder.prototype.keyBoardHandler = function (e) {\n        if (e.currentTarget === this.element && this.readonly && (e.keyCode === 38 || e.keyCode === 40 || e.keyCode === 13)) {\n            e.preventDefault();\n        }\n        else if (e.code === 'Escape' && this.allowDragAndDrop) {\n            this.isDragEventPrevent = true;\n            document.body.classList.remove('e-prevent-select');\n            var borderLineElem = this.element.querySelectorAll('.e-drag-rule-bottom-line');\n            borderLineElem.forEach(function (ele) {\n                ele.classList.remove('e-drag-rule-bottom-line');\n            });\n            borderLineElem = this.element.querySelectorAll('.e-drag-rule-top-line');\n            borderLineElem.forEach(function (ele) {\n                ele.classList.remove('e-drag-rule-top-line');\n            });\n            borderLineElem = this.element.querySelectorAll('.e-qb-dragging-rule');\n            borderLineElem.forEach(function (ele) {\n                ele.classList.remove('e-qb-dragging-rule');\n            });\n            var dragElemnet = this.element.querySelector('.e-cloneproperties');\n            if (dragElemnet) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(dragElemnet);\n            }\n            if (this.enableSeparateConnector) {\n                this.refresh();\n            }\n        }\n    };\n    QueryBuilder.prototype.clearQBTemplate = function (ruleElemColl) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact || this.isAngular) {\n            this.clearTemplate(ruleElemColl);\n        }\n    };\n    QueryBuilder.prototype.disableRuleCondition = function (groupElem, rules, isNewRuleAdded, isNewGroup) {\n        if (!this.headerTemplate) {\n            if (this.readonly) {\n                return;\n            }\n            var count = groupElem.querySelector('.e-rule-list').childElementCount;\n            var andElem = groupElem.querySelector('.e-btngroup-and');\n            var orElem = groupElem.querySelector('.e-btngroup-or');\n            if (count > 1) {\n                andElem.disabled = false;\n                orElem.disabled = false;\n                if (orElem.nextElementSibling.classList.contains('e-btn-disable') ||\n                    andElem.nextElementSibling.classList.contains('e-btn-disable')) {\n                    orElem.nextElementSibling.classList.remove('e-btn-disable');\n                    andElem.nextElementSibling.classList.remove('e-btn-disable');\n                }\n                if (this.enableSeparateConnector && !isNewRuleAdded) {\n                    var index = 0;\n                    var element = void 0;\n                    // eslint-disable-next-line no-constant-condition\n                    while (true) {\n                        var andGroup = groupElem.parentElement.querySelectorAll('.e-btngroup-and');\n                        var orGroup = groupElem.parentElement.querySelectorAll('.e-btngroup-or');\n                        andElem = andGroup[andGroup.length - (1 + index)];\n                        orElem = orGroup[orGroup.length - (1 + index)];\n                        element = andGroup[andGroup.length - (1 + index)];\n                        if (element && element.parentElement && element.parentElement.style.display === 'none') {\n                            index++;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    var elem = groupElem.previousElementSibling;\n                    while (elem && !elem.classList.contains('e-rule-container')) {\n                        if (elem.classList.contains('e-group-container')) {\n                            elem = elem.querySelectorAll('.e-rule-container')[elem.querySelectorAll('.e-rule-container').length - 1];\n                            break;\n                        }\n                        elem = elem.previousElementSibling;\n                    }\n                    if (isNewGroup && groupElem.classList.contains('e-group-container')) {\n                        elem = groupElem;\n                        var prevRule = this.getGroup(elem);\n                        if (prevRule.condition === 'or') {\n                            orElem.checked = true;\n                        }\n                        else {\n                            andElem.checked = true;\n                        }\n                    }\n                    else if (elem && elem.classList.contains('e-rule-container')) {\n                        var ruleID = elem.id.replace(this.element.id + '_', '');\n                        var prevRule = this.getRule(ruleID);\n                        if (prevRule.condition === 'or') {\n                            orElem.checked = true;\n                        }\n                        else {\n                            andElem.checked = true;\n                        }\n                    }\n                }\n                else if (!isNewRuleAdded) {\n                    if (rules && rules.condition === 'or') {\n                        orElem.checked = true;\n                    }\n                    else {\n                        andElem.checked = true;\n                    }\n                }\n            }\n            else {\n                if (this.enableSeparateConnector && !isNewRuleAdded) {\n                    var index = 0;\n                    var element = void 0;\n                    // eslint-disable-next-line no-constant-condition\n                    while (true) {\n                        var andGroup = groupElem.parentElement.querySelectorAll('.e-btngroup-and');\n                        var orGroup = groupElem.parentElement.querySelectorAll('.e-btngroup-or');\n                        andElem = andGroup[andGroup.length - (1 + index)];\n                        orElem = orGroup[orGroup.length - (1 + index)];\n                        element = andGroup[andGroup.length - (1 + index)];\n                        if (element && element.parentElement && element.parentElement.style.display === 'none') {\n                            index++;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    var elem = void 0;\n                    var tempElem = groupElem.previousElementSibling;\n                    while (tempElem) {\n                        if (tempElem.classList.contains('e-group-container')) {\n                            tempElem = tempElem.querySelectorAll('.e-rule-container')[tempElem.querySelectorAll('.e-rule-container').length - 1];\n                        }\n                        if (tempElem.classList.contains('e-rule-container')) {\n                            elem = tempElem;\n                            break;\n                        }\n                        tempElem = tempElem.previousElementSibling;\n                    }\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(elem) && groupElem.querySelectorAll('.e-rule-container')[groupElem.querySelectorAll('.e-rule-container').length - 1]) {\n                        elem = groupElem.querySelectorAll('.e-rule-container')[groupElem.querySelectorAll('.e-rule-container').length - 1];\n                    }\n                    if (isNewGroup && groupElem.classList.contains('e-group-container')) {\n                        elem = groupElem;\n                        var prevRule = this.getGroup(elem);\n                        if (prevRule.condition === 'or') {\n                            orElem.checked = true;\n                        }\n                        else {\n                            andElem.checked = true;\n                        }\n                    }\n                    else if (elem) {\n                        var ruleID = elem.id.replace(this.element.id + '_', '');\n                        var prevRule = this.getRule(ruleID);\n                        if (prevRule.condition === 'or' && orElem) {\n                            orElem.checked = true;\n                        }\n                        else if (andElem) {\n                            andElem.checked = true;\n                        }\n                    }\n                }\n                else if (!isNewRuleAdded && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(andElem)) {\n                    andElem.checked = false;\n                    andElem.disabled = true;\n                    orElem.checked = false;\n                    orElem.disabled = true;\n                    if (rules) {\n                        orElem.nextElementSibling.classList.add('e-btn-disable');\n                        andElem.nextElementSibling.classList.add('e-btn-disable');\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Get the valid rule or rules collection.\n     *\n     * @param {RuleModel} currentRule - 'currentRule' to be passed to get the valid rules.\n     * @returns {RuleModel} - Valid rule or rules collection\n     */\n    QueryBuilder.prototype.getValidRules = function (currentRule) {\n        this.isValueEmpty = true;\n        if (!currentRule) {\n            currentRule = this.getRules();\n        }\n        var ruleCondtion = currentRule.condition;\n        var notCondition = currentRule.not;\n        var ruleColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], currentRule.rules, [], true);\n        var rule = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentRule.isLocked) ?\n            this.getRuleCollection({ condition: ruleCondtion, rules: ruleColl, not: notCondition, isLocked: currentRule.isLocked }, true) :\n            this.getRuleCollection({ condition: ruleCondtion, rules: ruleColl, not: notCondition }, true);\n        this.isValueEmpty = false;\n        return rule;\n    };\n    QueryBuilder.prototype.getRuleCollection = function (rule, isValidRule) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rule)) {\n            return null;\n        }\n        var orgRule;\n        if (rule.rules && rule.rules.length && (Object.keys(rule.rules[0]).length > 6 || isValidRule)) {\n            var jLen = rule.rules.length;\n            for (var j = 0; j < jLen; j++) {\n                orgRule = rule.rules[j];\n                orgRule = this.getRuleCollection(orgRule, isValidRule);\n                rule.rules[j] = orgRule;\n                if (Object.keys(orgRule).length < 1 && isValidRule) {\n                    rule.rules.splice(j, 1);\n                    j--;\n                    jLen--;\n                }\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var customObj = rule.custom;\n        if ((rule.field && rule.field !== '') && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(customObj) || (customObj && (customObj.type !== 'question' &&\n            customObj.type !== 'answer')))) {\n            if (rule.operator) {\n                if (rule.operator.toString().indexOf('null') > -1 || rule.operator.toString().indexOf('empty') > -1) {\n                    rule.value = null;\n                }\n            }\n            if ((this.isRefreshed && this.enablePersistence) || (rule.field !== '' && rule.operator !== '' &&\n                (this.isValueEmpty ? rule.value !== '' && rule.value !== undefined : rule.value !== undefined)) ||\n                (customObj && customObj.isQuestion)) {\n                var condition = rule.condition;\n                var lockedRule = rule.isLocked;\n                rule = { 'label': rule.label, 'field': rule.field, 'operator': rule.operator, 'type': rule.type, 'value': rule.value };\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lockedRule)) {\n                    rule.isLocked = lockedRule;\n                }\n                if (condition) {\n                    rule.condition = condition;\n                }\n                if (customObj) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    rule.custom = customObj;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if ((rule.operator === 'in' || rule.operator === 'notin') && rule.value && rule.value.length === 0) {\n                    rule = {};\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if ((rule.operator === 'between' || rule.operator === 'notbetween') && Array.isArray(rule.value) && (rule.value.length < 2 || rule.value.some(function (val) { return val === '' || val === null; }))) {\n                    rule = {};\n                }\n            }\n            else {\n                rule = {};\n            }\n        }\n        else {\n            if (customObj && (customObj.type === 'question' || customObj.type === 'answer')) {\n                var notValue = rule.not;\n                rule = { 'label': rule.label, 'field': rule.field, 'operator': rule.operator, 'type': rule.type, 'value': rule.value,\n                    'condition': rule.condition, 'rules': rule.rules\n                };\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                rule.custom = customObj;\n                if (this.enableNotCondition) {\n                    rule.not = notValue;\n                }\n            }\n            else if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rule.condition)) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rule.rules)) {\n                rule = {};\n            }\n            else {\n                var isLocked = rule.isLocked;\n                if (this.enableNotCondition) {\n                    rule = { 'condition': rule.condition, 'rules': rule.rules, 'not': rule.not };\n                }\n                else {\n                    rule = { 'condition': rule.condition, 'rules': rule.rules };\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isLocked)) {\n                    rule.isLocked = isLocked;\n                }\n                if (customObj) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    rule.custom = customObj;\n                }\n                if (rule.rules && rule.rules.length === 0) {\n                    rule = {};\n                }\n            }\n        }\n        return rule;\n    };\n    /**\n     * Set the rule or rules collection.\n     *\n     * @param {RuleModel} rule - 'rule' to be passed to set rules.\n     * @returns {void}.\n     */\n    QueryBuilder.prototype.setRules = function (rule) {\n        var mRules = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, rule, {}, true);\n        if (this.headerTemplate) {\n            this.setGroupRules(mRules, true);\n        }\n        else {\n            this.setGroupRules(mRules);\n        }\n    };\n    /**\n     * Gets the rule or rule collection.\n     *\n     * @returns {object} - Rule or rule collection\n     */\n    QueryBuilder.prototype.getRules = function () {\n        var rule;\n        if (this.enableNotCondition) {\n            rule = { condition: this.rule.condition, rules: this.rule.rules, not: this.rule.not };\n        }\n        else {\n            rule = { condition: this.rule.condition, rules: this.rule.rules };\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.rule.isLocked)) {\n            rule.isLocked = this.rule.isLocked;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.rule.custom) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            rule.custom = this.rule.custom;\n        }\n        return rule;\n    };\n    /**\n     * Gets the rule.\n     *\n     * @param {string | HTMLElement} elem - 'elem' to be passed to get rule.\n     * @returns {object} - Rule\n     */\n    QueryBuilder.prototype.getRule = function (elem) {\n        var ruleElem;\n        var ruleId;\n        var index = 0;\n        if (elem instanceof HTMLElement) {\n            ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(elem, '.e-rule-container');\n        }\n        else {\n            ruleId = this.element.id + '_' + elem;\n            ruleElem = document.getElementById(ruleId);\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(ruleElem)) {\n            return null;\n        }\n        var groupElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(ruleElem, '.e-group-container');\n        var rule = this.getParentGroup(groupElem);\n        while (ruleElem.previousElementSibling !== null) {\n            ruleElem = ruleElem.previousElementSibling;\n            if (!this.enableSeparateConnector || (this.enableSeparateConnector &&\n                ((!this.headerTemplate && !ruleElem.classList.contains('e-btn-group')) ||\n                    this.headerTemplate && (ruleElem.classList.contains('e-rule-container') ||\n                        ruleElem.classList.contains('e-group-container'))))) {\n                index++;\n            }\n        }\n        return rule.rules[index];\n    };\n    /**\n     * Gets the group.\n     *\n     * @param {string | Element} target - 'target' to be passed to get group.\n     * @returns {object} -Group\n     */\n    QueryBuilder.prototype.getGroup = function (target) {\n        if (target instanceof Element && target.className.indexOf('e-group-container') < 1) {\n            target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container');\n        }\n        var groupId = (target instanceof Element) ? target.id : this.element.id + '_' + target;\n        var rule = this.getParentGroup(groupId);\n        return rule;\n    };\n    /**\n     * Deletes the group or groups based on the group ID.\n     *\n     * @param {string[]} groupIdColl - 'groupIdColl' to be passed to delete groups.\n     * @returns {void}\n     */\n    QueryBuilder.prototype.deleteGroups = function (groupIdColl) {\n        var i;\n        var len = groupIdColl.length;\n        var groupID;\n        for (i = 0; i < len; i++) {\n            if (groupIdColl[i] === 'group0') {\n                continue;\n            }\n            groupID = this.element.id + '_' + groupIdColl[i];\n            this.deleteGroup(document.getElementById(groupID));\n        }\n    };\n    /**\n     * Return the Query from current rules collection.\n     *\n     * @returns {Promise} - Query from current rules collection\n     * @blazorType object\n     */\n    QueryBuilder.prototype.getFilteredRecords = function () {\n        var predicate = this.getPredicate(this.getValidRules(this.rule));\n        var dataManagerQuery = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(predicate) ? new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query() : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query().where(predicate);\n        return this.dataManager.executeQuery(dataManagerQuery);\n    };\n    /**\n     * Deletes the rule or rules based on the rule ID.\n     *\n     * @param {string[]} ruleIdColl - 'ruleIdColl' to be passed to delete rules.\n     * @returns {void}.\n     */\n    QueryBuilder.prototype.deleteRules = function (ruleIdColl) {\n        var i;\n        var len = ruleIdColl.length;\n        var ruleID;\n        for (i = 0; i < len; i++) {\n            ruleID = this.element.id + '_' + ruleIdColl[i];\n            this.deleteRule(document.getElementById(ruleID));\n        }\n    };\n    /**\n     * Gets the query for Data Manager.\n     *\n     * @param {RuleModel} rule - 'rule' to be passed to get query.\n     * @returns {string} - Query for Data Manager\n     */\n    QueryBuilder.prototype.getDataManagerQuery = function (rule) {\n        var predicate = this.getPredicate(rule);\n        var query;\n        var fields = [];\n        for (var i = 0, len = Object.keys(this.columns); i < len.length; i++) {\n            fields.push(this.columns[i].field);\n        }\n        if (rule.rules.length) {\n            query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query().select(fields).where(predicate);\n        }\n        else {\n            query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query().select(fields);\n        }\n        return query;\n    };\n    /**\n     * Get the predicate from collection of rules.\n     *\n     * @param {RuleModel} rule - 'rule' to be passed to get predicate.\n     * @returns {Predicate} - Predicate from collection of rules\n     */\n    QueryBuilder.prototype.getPredicate = function (rule) {\n        var ruleColl = rule.rules;\n        var pred;\n        var pred2;\n        var ruleValue;\n        var ignoreCase = false;\n        var column;\n        if (!ruleColl) {\n            return pred;\n        }\n        for (var i = 0, len = ruleColl.length; i < len; i++) {\n            var operator = ruleColl[i].operator;\n            if (operator === 'notstartswith') {\n                operator = 'doesnotstartwith';\n            }\n            else if (operator === 'notendswith') {\n                operator = 'doesnotendwith';\n            }\n            else if (operator === 'notcontains') {\n                operator = 'doesnotcontain';\n            }\n            var keys = Object.keys(ruleColl[i]);\n            ignoreCase = false;\n            if (keys.indexOf('rules') > -1 && ruleColl[i].rules) {\n                pred2 = this.getPredicate(ruleColl[i]);\n                if (pred2) {\n                    if (pred) {\n                        if (rule.condition === 'and') {\n                            pred = pred.and(pred2);\n                        }\n                        else {\n                            pred = pred.or(pred2);\n                        }\n                    }\n                    else {\n                        pred = pred2;\n                    }\n                }\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(operator) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(operator.length)) {\n                var oper = ruleColl[i].operator.toLowerCase();\n                var isDateFilter = false;\n                var dateOperColl = ['equal', 'notequal', 'greaterthan', 'greaterthanorequal', 'lessthan', 'lessthanorequal'];\n                if (ruleColl[i].type === 'string') {\n                    ignoreCase = this.matchCase ? false : true;\n                }\n                if (ruleColl[i].type === 'date' && dateOperColl.indexOf(oper) > -1) {\n                    ignoreCase = true;\n                }\n                column = this.getColumn(ruleColl[i].field);\n                if (oper.indexOf('null') > -1 || oper.indexOf('empty') > -1) {\n                    ruleColl[i].value = null;\n                }\n                else if (ruleColl[i].type === 'date' && !(ruleColl[i].value instanceof Array)) {\n                    var format = this.getFormat(column.format);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(ruleColl[i].value)) {\n                        ruleValue = this.getDate(ruleColl[i].value, format);\n                        if (dateOperColl.indexOf(oper) > -1 && !this.isTime(ruleColl[i].value)) {\n                            isDateFilter = true;\n                        }\n                    }\n                    else {\n                        ruleValue = null;\n                    }\n                }\n                else {\n                    ruleValue = ruleColl[i].value;\n                }\n                if (i === 0) {\n                    if (isDateFilter || (oper.indexOf('in') > -1 || oper.indexOf('between') > -1 || oper.indexOf('null') > -1 ||\n                        oper.indexOf('empty') > -1) && (oper.indexOf('contain') < 0)) {\n                        pred = isDateFilter ? this.datePredicate(ruleColl[i], ruleValue) :\n                            this.arrayPredicate(ruleColl[i]);\n                    }\n                    else {\n                        var value = ruleValue;\n                        if (value !== '') {\n                            pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl[i].field, operator, ruleValue, ignoreCase);\n                        }\n                    }\n                }\n                else {\n                    if (isDateFilter || (oper.indexOf('in') > -1 || oper.indexOf('between') > -1 ||\n                        oper.indexOf('null') > -1 || oper.indexOf('empty') > -1) && oper.indexOf('contain') < 0) {\n                        pred = isDateFilter ? this.datePredicate(ruleColl[i], ruleValue, pred, rule.condition) :\n                            this.arrayPredicate(ruleColl[i], pred, rule.condition);\n                    }\n                    else {\n                        if (rule.condition === 'and') {\n                            var value = ruleValue;\n                            if (pred && value !== '') {\n                                pred\n                                    = pred.and(ruleColl[i].field, operator, ruleValue, ignoreCase);\n                            }\n                            else if (value !== '') {\n                                pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl[i].field, operator, ruleValue, ignoreCase);\n                            }\n                        }\n                        else {\n                            var value = ruleValue;\n                            if (pred && value !== '') {\n                                pred = pred.or(ruleColl[i].field, operator, ruleValue, ignoreCase);\n                            }\n                            else if (value !== '') {\n                                pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl[i].field, operator, ruleValue, ignoreCase);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (this.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.DataManager) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pred) && (pred.operator === 'isnull' || pred.operator === 'isnotnull')) {\n                pred.operator = pred.operator === 'isnull' ? 'equal' : 'notequal';\n            }\n        }\n        return pred;\n    };\n    QueryBuilder.prototype.getLocale = function () {\n        var gregorianFormat = '.dates.calendars.gregorian.days.format.short';\n        var localeString = this.locale;\n        var mainVal = 'main.';\n        var cultureObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(mainVal + '' + this.locale + gregorianFormat, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.cldrData);\n        if (!cultureObj) {\n            localeString = 'en';\n        }\n        return localeString;\n    };\n    QueryBuilder.prototype.getColumn = function (field, col) {\n        var columns = this.columns;\n        var column;\n        columns = col ? col : columns;\n        for (var i = 0, iLen = columns.length; i < iLen; i++) {\n            if (columns[i].field === field) {\n                column = columns[i];\n                break;\n            }\n            else if (columns[i].columns) {\n                column = this.getColumn(field, columns[i].columns);\n                if (column) {\n                    break;\n                }\n            }\n            else if (field && field.indexOf(this.separator) > -1) {\n                if (this.separator !== '' && columns[i].field === field.split(this.separator)[0]) {\n                    column = columns[i];\n                    break;\n                }\n            }\n        }\n        return column;\n    };\n    /* eslint-disable */\n    /**\n     * Return the operator bound to the column.\n     *\n     * @returns {[key: string]: Object}[] - Operator bound to the column\n     */\n    /* eslint-enable */\n    QueryBuilder.prototype.getOperators = function (field) {\n        var column = this.getColumn(field);\n        return column.operators;\n    };\n    QueryBuilder.prototype.setTime = function (date, isStart) {\n        if (isStart) {\n            date.setHours(0, 0, 0);\n        }\n        else {\n            date.setHours(23, 59, 59);\n        }\n        return date;\n    };\n    QueryBuilder.prototype.datePredicate = function (ruleColl, value, predicate, condition) {\n        var pred;\n        var startDate = this.setTime(new Date(value.getTime()), true);\n        var endDate = this.setTime(value);\n        switch (ruleColl.operator) {\n            case 'equal':\n                pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, 'greaterthanorequal', startDate);\n                pred = pred.and(ruleColl.field, 'lessthanorequal', endDate);\n                break;\n            case 'notequal':\n                pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, 'lessthan', startDate);\n                pred = pred.or(ruleColl.field, 'greaterthan', endDate);\n                break;\n            case 'greaterthan':\n                pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, 'greaterthan', endDate);\n                break;\n            case 'greaterthanorequal':\n                pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, 'greaterthanorequal', startDate);\n                break;\n            case 'lessthan':\n                pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, 'lessthan', startDate);\n                break;\n            case 'lessthanorequal':\n                pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, 'lessthanorequal', endDate);\n                break;\n        }\n        if (pred) {\n            if (predicate) {\n                if (condition === 'and') {\n                    predicate = predicate.and(pred);\n                }\n                else if (condition === 'or') {\n                    predicate = predicate.or(pred);\n                }\n            }\n            else {\n                predicate = pred;\n            }\n        }\n        return predicate;\n    };\n    QueryBuilder.prototype.arrayPredicate = function (ruleColl, predicate, condition) {\n        var value = ruleColl.value;\n        var operator = ruleColl.operator.toString();\n        var nullValue = ruleColl.value;\n        var pred;\n        var column = this.getColumn(ruleColl.field);\n        var format = this.getFormat(column.format);\n        if (operator.indexOf('null') > -1 || operator.indexOf('empty') > -1) {\n            switch (operator) {\n                case 'isnull':\n                    pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, 'isnull', nullValue);\n                    break;\n                case 'isnotnull':\n                    pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, 'isnotnull', nullValue);\n                    break;\n                case 'isempty':\n                    pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, 'equal', '');\n                    break;\n                case 'isnotempty':\n                    pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, 'notequal', '');\n                    break;\n            }\n        }\n        if (!(operator.indexOf('null') > -1 || operator.indexOf('empty') > -1)) {\n            for (var j = 0, jLen = value.length; j < jLen; j++) {\n                if (value[j] !== '' || ((operator === 'in' || operator === 'notin') && column.type === 'string')) {\n                    if (j === 0) {\n                        var gte = 'greaterthanorequal';\n                        switch (operator) {\n                            case 'between':\n                                if (column.type !== 'date') {\n                                    pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, gte, value[j]);\n                                }\n                                else {\n                                    pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, gte, value[j] ?\n                                        (this.isTime(value[j]) ? this.getDate(value[j], format) :\n                                            this.setTime(this.getDate(value[j], format), true)) : null);\n                                }\n                                break;\n                            case 'notbetween':\n                                if (column.type === 'date') {\n                                    pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, 'lessthan', value[j] ?\n                                        (this.isTime(value[j]) ? this.getDate(value[j], format) :\n                                            this.setTime(this.getDate(value[j], format), true)) : null);\n                                }\n                                else {\n                                    pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, 'lessthan', value[j]);\n                                }\n                                break;\n                            case 'in':\n                                pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, 'equal', value[j]);\n                                break;\n                            case 'notin':\n                                pred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(ruleColl.field, 'notequal', value[j]);\n                                break;\n                        }\n                    }\n                    else {\n                        var gt = 'greaterthan';\n                        switch (ruleColl.operator) {\n                            case 'between':\n                                if (column.type === 'date') {\n                                    pred = pred.and(ruleColl.field, 'lessthanorequal', value[j] ?\n                                        (this.isTime(value[j]) ? this.getDate(value[j], format) :\n                                            this.setTime(this.getDate(value[j], format))) : value[j]);\n                                }\n                                else {\n                                    pred = pred.and(ruleColl.field, 'lessthanorequal', value[j]);\n                                }\n                                break;\n                            case 'notbetween':\n                                if (column.type === 'date') {\n                                    pred = pred.or(ruleColl.field, gt, value[j] ?\n                                        (this.isTime(value[j]) ? this.getDate(value[j], format) :\n                                            this.setTime(this.getDate(value[j], format))) : value[j]);\n                                }\n                                else {\n                                    pred = pred.or(ruleColl.field, 'greaterthan', value[j]);\n                                }\n                                break;\n                            case 'in':\n                                pred = pred.or(ruleColl.field, 'equal', value[j]);\n                                break;\n                            case 'notin':\n                                pred = pred.and(ruleColl.field, 'notequal', value[j]);\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        if (pred) {\n            if (predicate) {\n                if (condition === 'and') {\n                    predicate = predicate.and(pred);\n                }\n                else if (condition === 'or') {\n                    predicate = predicate.or(pred);\n                }\n            }\n            else {\n                predicate = pred;\n            }\n        }\n        return predicate;\n    };\n    QueryBuilder.prototype.getDate = function (value, format) {\n        var currDate = this.intl.parseDate(value, format);\n        if (value.indexOf(':') > -1 && (value.indexOf('/') < 0 && value.indexOf(',') < 0\n            && value.indexOf('-') < 0)) {\n            currDate = new Date();\n            currDate.setHours(parseInt(value.split(':')[0], 10));\n            currDate.setMinutes(parseInt(value.split(':')[1], 10));\n            if (value.split(':')[2]) {\n                currDate.setSeconds(parseInt(value.split(':')[2], 10));\n            }\n        }\n        return currDate;\n    };\n    QueryBuilder.prototype.isTime = function (value) {\n        if (value && value.indexOf(':') > -1) {\n            return true;\n        }\n        return false;\n    };\n    QueryBuilder.prototype.importRules = function (rule, parentElem, isReset, not, isRoot) {\n        if (!isReset) {\n            parentElem = this.renderGroup(rule, rule.condition, parentElem, not);\n        }\n        else {\n            if (rule.rules && rule.rules.length > 1 && !this.headerTemplate) {\n                // enable/disable conditions when rule group is added\n                var orElem = parentElem.querySelector('.e-btngroup-or');\n                var andElem = parentElem.querySelector('.e-btngroup-and');\n                if (this.enableSeparateConnector && parentElem.previousElementSibling) {\n                    orElem = parentElem.previousElementSibling.querySelector('.e-btngroup-or');\n                    andElem = parentElem.previousElementSibling.querySelector('.e-btngroup-and');\n                }\n                orElem.disabled = false;\n                andElem.disabled = false;\n                if (this.enableSeparateConnector) {\n                    var elem = parentElem.previousElementSibling;\n                    while (elem && !elem.classList.contains('e-rule-container')) {\n                        if (elem.classList.contains('e-group-container')) {\n                            elem = elem.querySelectorAll('.e-rule-container')[elem.querySelectorAll('.e-rule-container').length - 1];\n                            break;\n                        }\n                        elem = elem.previousElementSibling;\n                    }\n                    if (elem && elem.classList.contains('e-rule-container')) {\n                        var ruleID = elem.id.replace(this.element.id + '_', '');\n                        var prevRule = this.getRule(ruleID);\n                        if (prevRule.condition === 'or') {\n                            orElem.checked = true;\n                        }\n                        else {\n                            andElem.checked = true;\n                        }\n                    }\n                }\n                else {\n                    if (rule.condition === 'or') {\n                        orElem.checked = true;\n                    }\n                    else {\n                        andElem.checked = true;\n                    }\n                }\n            }\n            else {\n                // enable/disable conditions when rule condition is added\n                this.disableRuleCondition(parentElem);\n            }\n            if (this.headerTemplate && isRoot) {\n                parentElem = this.renderGroup(rule, rule.condition, this.element, rule.not, isRoot);\n            }\n            if (this.enableNotCondition && !this.headerTemplate) {\n                var tglBtnElem = parentElem.querySelector('.e-qb-toggle');\n                if (rule.not) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([tglBtnElem], 'e-active-toggle');\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([tglBtnElem], 'e-active-toggle');\n                }\n            }\n        }\n        if (rule.rules && rule.rules.length === 0 && this.headerTemplate) {\n            rule.rules[0] = { 'label': '', 'field': '', 'operator': '', 'type': '', 'value': '' };\n        }\n        var ruleColl = rule.rules;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(ruleColl)) {\n            for (var i = 0, len = ruleColl.length; i < len; i++) {\n                var keys = Object.keys(ruleColl[i]);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(ruleColl[i].rules) && keys.indexOf('rules') > -1 && (ruleColl[i].rules.length !== 0)) {\n                    if (this.element.querySelectorAll('.e-group-container').length > this.maxGroupCount) {\n                        return null;\n                    }\n                    parentElem = this.renderGroup(ruleColl[i], ruleColl[i].condition, parentElem, ruleColl[i].not);\n                    parentElem = this.importRules(ruleColl[i], parentElem, true);\n                }\n                else {\n                    this.renderRule(ruleColl[i], parentElem);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(ruleColl[i].rules) && ruleColl[i].isLocked) {\n                    var lockGrpTarget = parentElem.querySelector('.e-rule-list').children[i].querySelector('.e-lock-grp-btn');\n                    this.groupLock(lockGrpTarget);\n                }\n            }\n        }\n        if (parentElem) {\n            parentElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(parentElem, '.e-rule-list');\n        }\n        if (parentElem) {\n            parentElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(parentElem, '.e-group-container');\n        }\n        return parentElem;\n    };\n    QueryBuilder.prototype.renderGroup = function (rule, condition, parentElem, not, isRoot) {\n        this.addGroupElement(true, parentElem, condition, false, not, isRoot, rule); //Child group\n        var element = parentElem.querySelectorAll('.e-group-container');\n        var cloneElem = parentElem.querySelector('.e-rule-list').children;\n        if (this.showButtons.cloneGroup && this.cloneGrpBtnClick && this.isMiddleGroup) {\n            this.isMiddleGroup = false;\n            this.cloneGrpBtnClick = false;\n            var index = 0;\n            var tempGroupIndex = this.groupIndex + 1;\n            if (this.enableSeparateConnector) {\n                for (var i = 0; i < tempGroupIndex; i++) {\n                    if (cloneElem[i].classList.contains('e-rule-container')) {\n                        tempGroupIndex++;\n                        index++;\n                    }\n                }\n            }\n            return cloneElem[this.groupIndex + index + 1]; // group added in the middle\n        }\n        else if (this.showButtons.cloneGroup && this.cloneGrpBtnClick && this.isLastGroup) {\n            this.isLastGroup = false;\n            this.cloneGrpBtnClick = false;\n            return cloneElem[cloneElem.length - 1]; // group added in the end\n        }\n        else {\n            return element[element.length - 1];\n        }\n    };\n    QueryBuilder.prototype.renderRule = function (rule, parentElem) {\n        if (parentElem.className.indexOf('e-group-container') > -1) {\n            this.addRuleElement(parentElem, rule); //Create rule\n        }\n        else {\n            this.addRuleElement(parentElem.querySelector('.e-group-container'), rule); //Create group\n        }\n    };\n    QueryBuilder.prototype.enableReadonly = function () {\n        var target = this.element;\n        var elem = target.querySelectorAll('.e-dropdownlist, .e-dropdowntree, .e-numerictextbox, .e-textbox, .e-datepicker, .e-multiselect .e-lib, .e-radio');\n        for (var i = 0; i < elem.length; i++) {\n            if (elem[i].classList.contains('e-dropdownlist')) {\n                var dropDownObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getInstance)(elem[i], _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_2__.DropDownList);\n                dropDownObj.readonly = this.isReadonly;\n            }\n            else if (elem[i].classList.contains('e-dropdowntree')) {\n                var dropDownTreeObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(elem[i], 'dropdowntree');\n                dropDownTreeObj.readonly = this.isReadonly;\n            }\n            else if (elem[i].classList.contains('e-numerictextbox')) {\n                var numericTextBoxObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getInstance)(elem[i], _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_4__.NumericTextBox);\n                numericTextBoxObj.readonly = this.isReadonly;\n            }\n            else if (elem[i].classList.contains('e-textbox')) {\n                var textBoxObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getInstance)(elem[i], _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_4__.TextBox);\n                textBoxObj.readonly = this.isReadonly;\n            }\n            else if (elem[i].classList.contains('e-datepicker')) {\n                var datePickerObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getInstance)(elem[i], _syncfusion_ej2_calendars__WEBPACK_IMPORTED_MODULE_5__.DatePicker);\n                datePickerObj.readonly = this.isReadonly;\n            }\n            else if (elem[i].classList.contains('e-multiselect')) {\n                var multiSelectObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getInstance)(elem[i], _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_2__.MultiSelect);\n                multiSelectObj.readonly = this.isReadonly;\n            }\n            else if (elem[i].classList.contains('e-radio')) {\n                var radioButtonObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getInstance)(elem[i], _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.RadioButton);\n                if (!radioButtonObj.checked) {\n                    if (this.isReadonly) {\n                        elem[i].parentElement.style.display = 'none';\n                    }\n                    else {\n                        elem[i].parentElement.style.display = 'inherit';\n                    }\n                }\n            }\n        }\n        var deleteGroupElems = this.element.querySelectorAll('.e-deletegroup');\n        var addRuleGroupElems = this.element.querySelectorAll('.e-addrulegroup');\n        var removeRuleElems = this.element.querySelectorAll('.e-removerule');\n        if (!this.isReadonly && this.ruleElem.classList.contains('e-readonly')) {\n            this.ruleElem.classList.remove('e-readonly');\n        }\n        var elems = [deleteGroupElems, addRuleGroupElems, removeRuleElems];\n        for (var i = 0; i < elems.length; i++) {\n            elems[i].forEach(function (elem) {\n                if (elem.classList.contains('e-readonly')) {\n                    elem.classList.remove('e-readonly');\n                }\n                else {\n                    elem.classList.add('e-readonly');\n                }\n            });\n        }\n        this.enableBtnGroup();\n    };\n    QueryBuilder.prototype.enableBtnGroup = function () {\n        var _this = this;\n        var elems = this.element.querySelectorAll('.e-btngroup-and-lbl, .e-btngroup-or-lbl, .e-qb-toggle');\n        var not = false;\n        elems.forEach(function (elem) {\n            if (elem.classList.contains('e-qb-toggle') && !elem.classList.contains('e-active-toggle')\n                && !elem.classList.contains('e-readonly')) {\n                elem.classList.add('e-readonly');\n                not = false;\n            }\n            else if (elem.classList.contains('e-qb-toggle') && elem.classList.contains('e-not-readonly')) {\n                elem.classList.remove('e-not-readonly');\n            }\n            else if (elem.classList.contains('e-qb-toggle') && elem.classList.contains('e-readonly')) {\n                elem.classList.remove('e-readonly');\n            }\n            else if (elem.classList.contains('e-active-toggle')) {\n                elem.classList.add('e-not-readonly');\n                not = true;\n            }\n            else if (elem.previousElementSibling.checked || elem.classList.contains('e-readonly')) {\n                elem.classList.remove('e-readonly');\n                if (not) {\n                    if (elem.textContent === 'AND') {\n                        elem.classList.add('e-readonly-and');\n                    }\n                    else {\n                        elem.classList.add('e-readonly-or');\n                    }\n                }\n                else {\n                    if (elem.textContent === 'AND' && _this.isReadonly) {\n                        elem.classList.remove('e-not');\n                        elem.classList.add('e-readonly-and');\n                    }\n                    else {\n                        if (_this.enableNotCondition) {\n                            elem.classList.add('e-not');\n                        }\n                        elem.classList.remove('e-readonly-and');\n                    }\n                    if (elem.textContent === 'OR' && _this.isReadonly) {\n                        elem.classList.add('e-readonly-or-not');\n                    }\n                    else {\n                        elem.classList.remove('e-readonly-or-not');\n                    }\n                }\n            }\n            else if (elem.classList.contains('e-btn-disable')) {\n                // do nothing\n            }\n            else {\n                elem.classList.add('e-readonly');\n            }\n        });\n    };\n    QueryBuilder.prototype.isDateFunction = function (value) {\n        var dateFunc = ['date', 'time', 'day', 'week', 'month', 'year', 'hour', 'minute', 'second', 'now', 'quarter', 'period', 'extract'];\n        for (var i = 0, len = dateFunc.length; i < len; i++) {\n            if (value.toLowerCase().indexOf(dateFunc[i]) > -1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    QueryBuilder.prototype.getSqlString = function (rules, enableEscape, queryStr, sqlLocale) {\n        var isRoot = false;\n        if (!queryStr && queryStr !== '') {\n            queryStr = '';\n            isRoot = true;\n        }\n        else {\n            queryStr += '(';\n        }\n        var condition = rules.condition;\n        if (rules.not) {\n            var rulesNotCondition = void 0;\n            if (isRoot) {\n                rulesNotCondition = sqlLocale ? this.l10n.getConstant('NOT').toUpperCase() + ' (' : 'NOT (';\n                queryStr += rulesNotCondition;\n            }\n            else {\n                rulesNotCondition = sqlLocale ? ' ' + this.l10n.getConstant('NOT').toUpperCase() + ' (' : ' NOT (';\n                queryStr += rulesNotCondition;\n            }\n        }\n        if (rules.rules) {\n            for (var j = 0, jLen = rules.rules.length; j < jLen; j++) {\n                if (rules.rules[j].rules) {\n                    queryStr = this.getSqlString(rules.rules[j], enableEscape, queryStr, sqlLocale);\n                    if (this.enableSeparateConnector) {\n                        condition = rules.rules[j].condition;\n                    }\n                }\n                else {\n                    var rule = rules.rules[j];\n                    var valueStr = '';\n                    var ruleOpertor = sqlLocale ? this.sqlOperators[rule.operator] : this.operators[rule.operator];\n                    if (rule.value instanceof Array) {\n                        if (rule.operator.toString().indexOf('between') > -1) {\n                            var ruleCondition = sqlLocale ? ' ' + this.l10n.getConstant('AND').toUpperCase() + ' ' : ' ' + 'AND' + ' ';\n                            if (rule.type === 'date' && !this.isDateFunction(rule.value[0])) {\n                                valueStr += '\"' + rule.value[0] + '\"' + ruleCondition + '\"' + rule.value[1] + '\"';\n                            }\n                            else {\n                                valueStr += rule.value[0] + ruleCondition + rule.value[1];\n                            }\n                        }\n                        else {\n                            if (typeof rule.value[0] === 'string' && rule.value !== null) {\n                                valueStr += '(\"' + rule.value[0] + '\"';\n                                for (var k = 1, kLen = rule.value.length; k < kLen; k++) {\n                                    valueStr += ',\"' + rule.value[k] + '\"';\n                                }\n                                valueStr += ')';\n                            }\n                            else {\n                                valueStr += '(' + rule.value + ')';\n                            }\n                        }\n                    }\n                    else {\n                        if (rule.operator.toString().indexOf('startswith') > -1) {\n                            valueStr += rule.value ? '(\"' + rule.value + '%\")' : '(' + rule.value + ')';\n                        }\n                        else if (rule.operator.toString().indexOf('endswith') > -1) {\n                            valueStr += rule.value ? '(\"%' + rule.value + '\")' : '(' + rule.value + ')';\n                        }\n                        else if (rule.operator.toString().indexOf('contains') > -1) {\n                            valueStr += rule.value ? '(\"%' + rule.value + '%\")' : '(' + rule.value + ')';\n                        }\n                        else {\n                            if (rule.type === 'number' || typeof rule.value === 'boolean' ||\n                                (rule.value === null && (rule.operator.toString().indexOf('empty') < -1))) {\n                                valueStr += rule.value;\n                            }\n                            else if (rule.operator.toString().indexOf('empty') > -1) {\n                                valueStr += '\"\"';\n                            }\n                            else {\n                                valueStr += '\"' + rule.value + '\"';\n                            }\n                        }\n                    }\n                    if (rule.operator.toString().indexOf('null') > -1) {\n                        if (enableEscape) {\n                            rule.field = '`' + rule.field + '`';\n                        }\n                        else {\n                            if (rule.field.indexOf(' ') > -1) {\n                                rule.field = '\"' + rule.field + '\"';\n                            }\n                        }\n                        queryStr += rule.field + ' ' + ruleOpertor;\n                    }\n                    else {\n                        var custOper = ruleOpertor;\n                        if (rule.operator === 'isempty') {\n                            custOper = '=';\n                        }\n                        else if (rule.operator === 'isnotempty') {\n                            custOper = '!=';\n                        }\n                        if (enableEscape) {\n                            rule.field = '`' + rule.field + '`';\n                        }\n                        else {\n                            if (rule.field.indexOf(' ') > -1) {\n                                rule.field = '\"' + rule.field + '\"';\n                            }\n                        }\n                        queryStr += rule.field + ' ' + custOper + ' ' + valueStr;\n                    }\n                    if (rule.condition && rule.condition !== '') {\n                        condition = rule.condition;\n                    }\n                }\n                if (j !== jLen - 1) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var rule = rules.rules[j];\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    if (condition === '' || (rule && rule.condition !== '' && rule.custom && rule.custom.isCustom)) {\n                        condition = rule.condition;\n                    }\n                    if (condition) {\n                        condition = sqlLocale ? this.l10n.getConstant(condition.toUpperCase()).toUpperCase() : condition.toUpperCase();\n                        queryStr += ' ' + condition + ' ';\n                    }\n                }\n            }\n        }\n        if (!isRoot) {\n            queryStr += ')';\n        }\n        if (rules.not) {\n            queryStr += ')';\n        }\n        return queryStr;\n    };\n    /**\n     * Sets the rules from the sql query.\n     *\n     * @param {string} sqlString - 'sql String' to be passed to set the rule.\n     * @param {boolean} sqlLocale - Optional. Set `true` if Localization for Sql query.\n     * @returns {void}\n     */\n    QueryBuilder.prototype.setRulesFromSql = function (sqlString, sqlLocale) {\n        sqlString = sqlString.replace(/`/g, '');\n        var ruleModel = this.getRulesFromSql(sqlString, sqlLocale);\n        this.setRules({ condition: ruleModel.condition, not: ruleModel.not, rules: ruleModel.rules });\n    };\n    /**\n     * Get the rules from SQL query.\n     *\n     * @param {string} sqlString - 'sql String' to be passed to get the rule.\n     * @param {boolean} sqlLocale - Set `true` if Localization for Sql query.\n     * @returns {object} - Rules from SQL query\n     */\n    QueryBuilder.prototype.getRulesFromSql = function (sqlString, sqlLocale) {\n        this.parser = [];\n        this.sqlParser(sqlString, sqlLocale);\n        this.setProperties({ rule: { condition: 'and', not: false, rules: [] } }, true);\n        var rule = this.processParser(this.parser, this.rule, [0], sqlLocale);\n        if (this.enableNotCondition) {\n            return { condition: rule.condition, not: rule.not, rules: rule.rules };\n        }\n        else {\n            return { condition: rule.condition, rules: rule.rules };\n        }\n    };\n    /**\n     * Gets the sql query from rules.\n     *\n     * @param {RuleModel} rule - 'rule' to be passed to get the sql.\n     * @param {boolean} allowEscape - Set `true` if it exclude the escape character.\n     * @param {boolean} sqlLocale - Set `true` if Localization for Sql query.\n     * @returns {string} - Sql query from rules.\n     */\n    QueryBuilder.prototype.getSqlFromRules = function (rule, allowEscape, sqlLocale) {\n        if (!rule) {\n            rule = this.getValidRules();\n        }\n        rule = this.getRuleCollection(rule, false);\n        var sqlString = this.getSqlString(this.getValidRules(rule), allowEscape, null, sqlLocale).replace(/\"/g, '\\'');\n        return sqlString;\n    };\n    /**\n     * Gets the parameter SQL query from rules.\n     *\n     * @param {RuleModel} rule – Specify the rule to be passed to get the parameter sql string.\n     * @returns {ParameterizedSql} – Parameterized SQL query from rules.\n     */\n    QueryBuilder.prototype.getParameterizedSql = function (rule) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.moduleLoader.loadedModules.length) {\n            if (!rule) {\n                rule = this.getValidRules();\n            }\n            var obj = { sql: null };\n            this.notify('query-library', { prop: 'getParameterSql', onPropertyChange: false, value: { rule: rule, obj: obj } });\n            return obj['sql'];\n        }\n        else {\n            console.warn('[WARNING] :: Module \"query-library\" is not available in QueryBuilder component! You either misspelled the module name or forgot to load it.');\n        }\n        return null;\n    };\n    /**\n     * Sets the rules from the parameter sql query.\n     *\n     * @param { ParameterizedSql} sqlQuery – Specifies the parameter SQL to be passed to set the rule and load it to the query builder.\n     * @returns {void}\n     */\n    QueryBuilder.prototype.setParameterizedSql = function (sqlQuery) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.moduleLoader.loadedModules.length) {\n            var obj = { sql: null };\n            this.notify('query-library', { prop: 'convertParamSqlToSql', onPropertyChange: false, value: { sql: sqlQuery, obj: obj } });\n            var sql = obj['sql'];\n            if (sql) {\n                sql = sql.replace(/`/g, '');\n                var ruleModel = this.getRulesFromSql(sql);\n                this.setRules({ condition: ruleModel.condition, not: ruleModel.not, rules: ruleModel.rules });\n            }\n        }\n        else {\n            console.warn('[WARNING] :: Module \"query-library\" is not available in QueryBuilder component! You either misspelled the module name or forgot to load it.');\n        }\n    };\n    /**\n     * Gets the named parameter SQL query from rules.\n     *\n     * @param {RuleModel} rule – Specify the rule to be passed to get the named parameter SQL string.\n     * @returns {ParameterizedNamedSql} – Parameterized Named SQL query from rules.\n     */\n    QueryBuilder.prototype.getParameterizedNamedSql = function (rule) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.moduleLoader.loadedModules.length) {\n            if (!rule) {\n                rule = this.getValidRules();\n            }\n            var obj = { sql: null };\n            this.notify('query-library', { prop: 'getNamedParameterSql', onPropertyChange: false, value: { rule: rule, obj: obj } });\n            return obj['sql'];\n        }\n        else {\n            console.warn('[WARNING] :: Module \"query-library\" is not available in QueryBuilder component! You either misspelled the module name or forgot to load it.');\n        }\n        return null;\n    };\n    /**\n     * Sets the rules from the named parameter SQL query.\n     *\n     * @param { ParameterizedNamedSql } sqlQuery – Specifies the named parameter SQL to be passed to set the rule and load it to the query builder.\n     * @returns {void}\n     */\n    QueryBuilder.prototype.setParameterizedNamedSql = function (sqlQuery) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.moduleLoader.loadedModules.length) {\n            var obj = { sql: null };\n            this.notify('query-library', { prop: 'convertNamedParamSqlToSql', onPropertyChange: false, value: { sql: sqlQuery, obj: obj } });\n            var sql = obj['sql'];\n            if (sql) {\n                sql = sql.replace(/`/g, '');\n                var ruleModel = this.getRulesFromSql(sql);\n                this.setRules({ condition: ruleModel.condition, not: ruleModel.not, rules: ruleModel.rules });\n            }\n        }\n        else {\n            console.warn('[WARNING] :: Module \"query-library\" is not available in QueryBuilder component! You either misspelled the module name or forgot to load it.');\n        }\n    };\n    /**\n     * Set the rules from Mongo query.\n     *\n     * @param {string} mongoQuery - 'sql String' to be passed to get the rule.\n     * @param {boolean} mongoLocale - Set `true` if Localization for Mongo query.\n     * @returns {void}\n     */\n    QueryBuilder.prototype.setMongoQuery = function (mongoQuery, mongoLocale) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.moduleLoader.loadedModules.length) {\n            this.rule = { condition: 'and', not: false, rules: [] };\n            this.notify('query-library', { prop: 'mongoParser', onPropertyChange: false, value: { mongoQuery: JSON.parse(mongoQuery), rule: this.rule, mongoLocale: mongoLocale } });\n        }\n        else {\n            console.warn('[WARNING] :: Module \"query-library\" is not available in QueryBuilder component! You either misspelled the module name or forgot to load it.');\n        }\n    };\n    /**\n     * Gets the Mongo query from rules.\n     *\n     * @param {RuleModel} rule - 'rule' to be passed to get the sql.\n     * @returns {object} - Sql query from rules.\n     */\n    QueryBuilder.prototype.getMongoQuery = function (rule) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.moduleLoader.loadedModules.length) {\n            if (!rule) {\n                rule = this.getValidRules();\n            }\n            var obj = { mongoQuery: null };\n            this.notify('query-library', { prop: 'getMongoFromRules', onPropertyChange: false, value: { rule: rule, mongoQuery: '', obj: obj } });\n            return obj['mongoQuery'];\n        }\n        else {\n            console.warn('[WARNING] :: Module \"query-library\" is not available in QueryBuilder component! You either misspelled the module name or forgot to load it.');\n        }\n        return '';\n    };\n    /**\n     * Clones the rule based on the rule ID to the specific group.\n     *\n     * @param {string} ruleID - Specifies the ruleID that needs to be cloned.\n     * @param {string} groupID - Specifies the groupID in which the rule to be cloned.\n     * @param {number} index - Specifies the index to insert the cloned rule inside the group.\n     * @returns {void}\n     */\n    QueryBuilder.prototype.cloneRule = function (ruleID, groupID, index) {\n        var getRule = this.getRule(ruleID.replace(this.element.id + '_', ''));\n        var isCloneRule = this.showButtons.cloneRule;\n        groupID = groupID.replace(this.element.id + '_', '');\n        this.ruleIndex = index;\n        this.cloneRuleBtnClick = true;\n        this.showButtons.cloneRule = true;\n        this.addRules([{\n                'label': getRule.label, 'field': getRule.field, 'type': getRule.type, 'operator': getRule.operator,\n                'value': getRule.value, 'condition': getRule.condition\n            }], groupID);\n        this.ruleIndex = -1;\n        this.cloneRuleBtnClick = false;\n        this.showButtons.cloneRule = isCloneRule;\n        isCloneRule = false;\n    };\n    /**\n     * Clones the group based on the group ID to the specific group.\n     *\n     * @param {string} groupID - Specifies the groupID that needs to be cloned.\n     * @param {string} parentGroupID - Specifies the parentGroupID in which the group to be cloned.\n     * @param {number} index - Specifies the index to insert the cloned group inside the parent group.\n     * @returns {void}\n     */\n    QueryBuilder.prototype.cloneGroup = function (groupID, parentGroupID, index) {\n        parentGroupID = parentGroupID.replace(this.element.id + '_', '');\n        var group = this.getGroup(parentGroupID);\n        var isCloneGroup = this.showButtons.cloneGroup;\n        groupID = groupID.replace(this.element.id + '_', '');\n        this.groupIndex = index;\n        this.cloneGrpBtnClick = true;\n        this.showButtons.cloneGroup = true;\n        this.addGroups([{ 'condition': group.condition, 'not': group.not, 'rules': group.rules }], groupID);\n        this.groupIndex = -1;\n        this.cloneGrpBtnClick = false;\n        this.showButtons.cloneGroup = isCloneGroup;\n        isCloneGroup = false;\n    };\n    /**\n     * Locks the rule based on the rule ID.\n     *\n     * @param {string} ruleID - Specifies the ruleID that needs to be locked.\n     * @returns {void}\n     */\n    QueryBuilder.prototype.lockRule = function (ruleID) {\n        if (ruleID.indexOf(this.element.id) < 0) {\n            ruleID = this.element.id + '_' + ruleID;\n        }\n        var target = document.getElementById(ruleID).querySelectorAll('.e-lock-rule-btn')[0];\n        this.ruleLock(target);\n    };\n    /**\n     * Locks the group based on the group ID\n     *\n     * @param {string} groupID - Specifies the groupID that needs to be locked.\n     * @returns {void}\n     */\n    QueryBuilder.prototype.lockGroup = function (groupID) {\n        if (groupID.indexOf(this.element.id) < 0) {\n            groupID = this.element.id + '_' + groupID;\n        }\n        var target = document.getElementById(groupID).querySelectorAll('.e-lock-grp-btn')[0];\n        this.groupLock(target);\n    };\n    QueryBuilder.prototype.sqlParser = function (sqlString, sqlLocale) {\n        var st = 0;\n        var str;\n        do {\n            str = sqlString.slice(st);\n            st += this.parseSqlStrings(str, sqlLocale);\n        } while (str !== '');\n        return this.parser;\n    };\n    QueryBuilder.prototype.parseSqlStrings = function (sqlString, sqlLocale) {\n        var operators = ['=', '!=', '<=', '>=', '<', '>'];\n        var conditions;\n        if (sqlLocale) {\n            conditions = [this.l10n.getConstant('AND').toUpperCase(), this.l10n.getConstant('OR').toUpperCase(), this.l10n.getConstant('NOT').toUpperCase()];\n        }\n        else {\n            conditions = ['AND', 'OR', 'NOT'];\n        }\n        var subOp;\n        if (sqlLocale) {\n            subOp = [this.l10n.getConstant('In').toUpperCase(), this.l10n.getConstant('NotIn').toUpperCase(),\n                this.l10n.getConstant('Like').toUpperCase(), this.l10n.getConstant('NotLike').toUpperCase(),\n                this.l10n.getConstant('Between').toUpperCase(), this.l10n.getConstant('NotBetween').toUpperCase(),\n                this.l10n.getConstant('IsNull').toUpperCase(), this.l10n.getConstant('IsNotNull').toUpperCase(),\n                this.l10n.getConstant('IsEmpty').toUpperCase(), this.l10n.getConstant('IsNotEmpty').toUpperCase()];\n        }\n        else {\n            subOp = ['IN', 'NOT IN', 'LIKE', 'NOT LIKE', 'BETWEEN', 'NOT BETWEEN', 'IS NULL', 'IS NOT NULL', 'IS EMPTY', 'IS NOT EMPTY'];\n        }\n        var regexStr;\n        var regex;\n        var matchValue;\n        for (var i = 0, iLen = operators.length; i < iLen; i++) {\n            regexStr = /^\\w+$/.test(operators[i]) ? '\\\\b' : '';\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var regExp = RegExp;\n            regex = new regExp('^(' + operators[i] + ')' + regexStr, 'ig');\n            if (regex.exec(sqlString)) {\n                this.parser.push(['Operators', operators[i].toLowerCase()]);\n                return operators[i].length;\n            }\n        }\n        var lastPasrser = this.parser[this.parser.length - 1];\n        if (!lastPasrser || (lastPasrser && lastPasrser[0] !== 'Literal')) {\n            for (var i = 0, iLen = conditions.length; i < iLen; i++) {\n                regexStr = /^\\w+$/.test(conditions[i]) ? '\\\\b' : '';\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var regExp = RegExp;\n                regex = new regExp('^(' + conditions[i] + ')' + regexStr, 'ig');\n                if (regex.exec(sqlString)) {\n                    this.parser.push(['Conditions', conditions[i].toLowerCase()]);\n                    return conditions[i].length;\n                }\n            }\n        }\n        for (var i = 0, iLen = subOp.length; i < iLen; i++) {\n            regexStr = /^\\w+$/.test(subOp[i]) ? '\\\\b' : '';\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var regExp = RegExp;\n            regex = new regExp('^(' + subOp[i] + ')' + regexStr, 'ig');\n            if (regex.exec(sqlString)) {\n                this.parser.push(['SubOperators', subOp[i].toLowerCase()]);\n                return subOp[i].length;\n            }\n        }\n        //Left Parenthesis\n        if (/^\\(/.exec(sqlString)) {\n            this.parser.push(['Left', '(']);\n            return 1;\n        }\n        //Right Parenthesis\n        if (/^\\)/.exec(sqlString)) {\n            this.parser.push(['Right', ')']);\n            return 1;\n        }\n        //Boolean\n        if (/^(true|false)/.exec(sqlString)) {\n            matchValue = /^(true|false)/.exec(sqlString)[0];\n            this.parser.push(['String', matchValue]);\n            return matchValue.length;\n        }\n        //Null\n        if (/^null/.exec(sqlString)) {\n            matchValue = /^null/.exec(sqlString)[0];\n            this.parser.push(['String', null]);\n            return matchValue.length;\n        }\n        if (/^`?([a-z_][a-z0-9_.\\\\[\\]\\\\(\\\\)]{0,}(\\\\:(number|float|string|date|boolean))?)`?/i.exec(sqlString)) {\n            matchValue = /^`?([a-z_][a-z0-9_.\\\\[\\]\\\\(\\\\)]{0,}(\\\\:(number|float|string|date|boolean))?)`?/i.exec(sqlString)[1];\n            this.parser.push(['Literal', matchValue]);\n            return matchValue.length;\n        }\n        if (this.checkLiteral() && /^'?([a-z_][a-z0-9 _.\\\\[\\]\\\\(\\\\)-]{0,}(\\\\:(number|float|string|date|boolean))?)'?/i.exec(sqlString)) {\n            matchValue = /^'?([a-z_][a-z0-9 _.\\\\[\\]\\\\(\\\\)-]{0,}(\\\\:(number|float|string|date|boolean))?)'?/i.exec(sqlString)[1];\n            this.parser.push(['Literal', matchValue]);\n            return matchValue.length + 2;\n        }\n        if (this.checkNumberLiteral(sqlString, sqlLocale)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var regExValue = /^[0-9]+(\\.[0-9]+)$/.exec(sqlString);\n            if (regExValue) {\n                matchValue = regExValue[0];\n                this.parser.push(['Literal', matchValue]);\n                return matchValue.length;\n            }\n        }\n        //String\n        var singleString = this.getSingleQuoteString(sqlString);\n        if (singleString !== '') {\n            matchValue = singleString;\n            if (matchValue[matchValue.length - 2] === '(') {\n                var isClosed = false;\n                for (var j = matchValue.length; j < sqlString.length; j++) {\n                    matchValue += sqlString[j];\n                    if (sqlString[j] === ')') {\n                        isClosed = true;\n                    }\n                    if (isClosed && sqlString[j] === '\\'') {\n                        break;\n                    }\n                }\n            }\n            else if (sqlString[matchValue.length] && (sqlString[matchValue.length] !== ')') &&\n                !this.checkCondition(sqlString, matchValue)) {\n                matchValue = this.combineSingleQuoteString(sqlString, matchValue);\n            }\n            // end\n            this.parser.push(['String', matchValue]);\n            return matchValue.length;\n        }\n        // Double String\n        var doubleString = this.getDoubleQuoteString(sqlString);\n        if (doubleString !== '') {\n            matchValue = doubleString;\n            this.parser.push(['DoubleString', matchValue]);\n            return matchValue.length;\n        }\n        //Number\n        if (/^\\d*\\.?\\d+/.exec(sqlString)) {\n            matchValue = /^\\d*\\.?\\d+/.exec(sqlString)[0];\n            this.parser.push(['Number', matchValue]);\n            return matchValue.length;\n        }\n        //Negative Number\n        if (/^-?\\d*\\.?\\d+/.exec(sqlString)) {\n            matchValue = /^-?\\d*\\.?\\d+/.exec(sqlString)[0];\n            this.parser.push(['Number', matchValue]);\n            return matchValue.length;\n        }\n        return 1;\n    };\n    QueryBuilder.prototype.getDoubleQuoteString = function (sqlString) {\n        var start = sqlString.indexOf('\"');\n        if (start === 0) {\n            var end = sqlString.indexOf('\"', start + 1);\n            if (end !== -1) {\n                return sqlString.substring(start, end + 1);\n            }\n        }\n        return '';\n    };\n    QueryBuilder.prototype.checkCondition = function (sqlString, matchValue) {\n        if (sqlString.slice(matchValue.length + 1, matchValue.length + 4) === 'AND' ||\n            sqlString.slice(matchValue.length + 1, matchValue.length + 3) === 'OR') {\n            return true;\n        }\n        return false;\n    };\n    QueryBuilder.prototype.getSingleQuoteString = function (sqlString, isBetween) {\n        var start = sqlString.indexOf('\\'');\n        if ((start !== -1 && isBetween) || (start === 0 && !isBetween)) {\n            var end = sqlString.indexOf('\\'', start + 1);\n            if (end !== -1) {\n                return sqlString.substring(start, end + 1);\n            }\n        }\n        return '';\n    };\n    QueryBuilder.prototype.combineSingleQuoteString = function (sqlString, matchValue) {\n        if (sqlString[matchValue.length] && (sqlString[matchValue.length] !== ')') &&\n            !this.checkCondition(sqlString, matchValue) && sqlString[matchValue.length] !== ',') {\n            var tempMatchValue = matchValue.substring(0, matchValue.length - 1);\n            var tempStr = sqlString.replace(tempMatchValue, '');\n            var singleString = this.getSingleQuoteString(tempStr, true);\n            if (singleString !== '') {\n                var parsedValue = singleString.substring(1, singleString.length);\n                matchValue += parsedValue;\n                matchValue = this.combineSingleQuoteString(sqlString, matchValue);\n            }\n        }\n        return matchValue;\n    };\n    QueryBuilder.prototype.checkLiteral = function () {\n        var lastParser = this.parser[this.parser.length - 1];\n        if (!lastParser) {\n            return true;\n        }\n        else {\n            var secParser = this.parser[this.parser.length - 2];\n            var betweenParser = this.parser[this.parser.length - 3];\n            if (lastParser[0] === 'Left' && (secParser && secParser[0] === 'Conditions')) {\n                return true;\n            }\n            var betweenOperator = 'between';\n            if (lastParser[0] === 'Conditions' && (betweenParser && betweenParser[1].indexOf(betweenOperator) < 0)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    QueryBuilder.prototype.checkNumberLiteral = function (sqlString, sqlLocale) {\n        var lastParser = this.parser[this.parser.length - 1];\n        if (!lastParser) {\n            return true;\n        }\n        else {\n            if (/^[0-9]+(?:\\.[0-9]+)$/.exec(sqlString)) {\n                var secParser = this.parser[this.parser.length - 2];\n                var betweenParser = this.parser[this.parser.length - 3];\n                if (lastParser[0] === 'Left' && (secParser && secParser[0] === 'Conditions')) {\n                    return true;\n                }\n                var betweenOperator = sqlLocale ? this.l10n.getConstant('Between').toLowerCase() : 'between';\n                if (lastParser[0] === 'Conditions' && (betweenParser && betweenParser[1].indexOf(betweenOperator) < 0)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    QueryBuilder.prototype.getOperator = function (value, operator, sqlLocale) {\n        var operators = {\n            '=': 'equal', '!=': 'notequal', '<': 'lessthan', '>': 'greaterthan', '<=': 'lessthanorequal',\n            '>=': 'greaterthanorequal', 'in': 'in', 'not in': 'notin', 'between': 'between', 'not between': 'notbetween',\n            'is empty': 'isempty', 'is null': 'isnull', 'is not null': 'isnotnull', 'is not empty': 'isnotempty'\n        };\n        if (sqlLocale) {\n            var localeOperator = Object.keys(this.sqlOperators);\n            for (var i = 0; i < localeOperator.length; i++) {\n                if (this.sqlOperators[localeOperator[i]] === operator.toUpperCase()) {\n                    if (value && value.indexOf('%') === 0 && value[value.length - 1] === '%') {\n                        return (operator.toUpperCase() === 'NOT LIKE') ? 'notcontains' : 'contains';\n                    }\n                    else if (value && value.indexOf('%') !== 0 && value.indexOf('%') === value.length - 1) {\n                        return (operator.toUpperCase() === 'NOT LIKE') ? 'notstartswith' : 'startswith';\n                    }\n                    else if (value && value.indexOf('%') === 0 && value.indexOf('%') !== value.length - 1) {\n                        return (operator.toUpperCase() === 'NOT LIKE') ? 'notendswith' : 'endswith';\n                    }\n                    return localeOperator[i];\n                }\n            }\n            return null;\n        }\n        if (value) {\n            if (value.indexOf('%') === 0 && value[value.length - 1] === '%') {\n                return (operator === 'not like') ? 'notcontains' : 'contains';\n            }\n            else if (value.indexOf('%') !== 0 && value.indexOf('%') === value.length - 1) {\n                return (operator === 'not like') ? 'notstartswith' : 'startswith';\n            }\n            else if (value.indexOf('%') === 0 && value.indexOf('%') !== value.length - 1) {\n                return (operator === 'not like') ? 'notendswith' : 'endswith';\n            }\n        }\n        else {\n            if (operator === 'not like') {\n                return 'notequal';\n            }\n            else if (operator === 'like') {\n                return 'equal';\n            }\n        }\n        return operators[\"\" + operator];\n    };\n    QueryBuilder.prototype.getTypeFromColumn = function (rules) {\n        var columnData = this.getColumn(rules.field);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columnData)) {\n            return columnData.type;\n        }\n        return null;\n    };\n    QueryBuilder.prototype.getLabelFromColumn = function (field) {\n        var label = '';\n        var l = 0;\n        if (this.separator !== '') {\n            var fieldColl = field.split(this.separator);\n            for (var i = 0; i < fieldColl.length; i++) {\n                label += this.getLabelFromField(fieldColl, i + 1);\n                l++;\n                if (l < fieldColl.length) {\n                    label += this.separator;\n                }\n            }\n            return label;\n        }\n        else {\n            var labelItem = this.getColumn(field).label;\n            return labelItem;\n        }\n    };\n    QueryBuilder.prototype.getLabelFromField = function (field, startIdx) {\n        var fieldName = '';\n        var j = 0;\n        for (var k = 0; k < startIdx; k++) {\n            fieldName += field[k];\n            j++;\n            if (j < startIdx) {\n                fieldName += this.separator;\n            }\n        }\n        return this.getColumn(fieldName).label;\n    };\n    QueryBuilder.prototype.processParser = function (parser, rules, levelColl, sqlLocale) {\n        var j;\n        var jLen;\n        var rule;\n        var subRules;\n        var numVal = [];\n        var strVal = [];\n        var k;\n        var kLen;\n        var l;\n        var lLen;\n        var grpCount;\n        var operator;\n        var isLeftOpened = false;\n        var isNotOpened = false;\n        for (var i = 0, iLen = parser.length; i < iLen; i++) {\n            if (parser[i][0] === 'Literal') {\n                var column = this.getColumn(parser[i][1]);\n                rule = { label: (column && column.label) ? column.label : parser[i][1], field: parser[i][1] };\n                if (parser[i + 1][0] === 'SubOperators') {\n                    if (parser[i + 1][1].indexOf('null') > -1 || parser[i + 1][1].indexOf('empty') > -1) {\n                        rule.operator = this.getOperator(' ', parser[i + 1][1], sqlLocale);\n                        rule.value = null;\n                        rule.type = this.getTypeFromColumn(rule);\n                    }\n                    else {\n                        var oper = parser[i + 3][1] ? parser[i + 3][1].replace(/'/g, '') : parser[i + 3][1];\n                        rule.operator = this.getOperator(oper, parser[i + 1][1], sqlLocale);\n                    }\n                    operator = parser[i + 1][1];\n                    i++;\n                    j = i + 1;\n                    jLen = iLen;\n                    if (sqlLocale && rule.operator === 'contains' || rule.operator === 'startswith' || rule.operator === 'endswith') {\n                        operator = 'like';\n                    }\n                    else if (sqlLocale && rule.operator === 'notcontains' || rule.operator === 'notstartswith' || rule.operator === 'notendswith') {\n                        operator = 'not like';\n                    }\n                    else if (sqlLocale) {\n                        operator = rule.operator;\n                    }\n                    for (j = i + 1; j < jLen; j++) {\n                        if (operator.indexOf('between') < 0 && parser[j][0] === 'Left') {\n                            isLeftOpened = true;\n                        }\n                        else if (parser[j][0] === 'Right' && isLeftOpened) {\n                            i = j;\n                            isLeftOpened = false;\n                            break;\n                        }\n                        else {\n                            if (operator.indexOf('null') > -1 || operator.indexOf('empty') > -1) {\n                                break;\n                            }\n                            if (operator.indexOf('like') > -1 && parser[j][0] === 'String') {\n                                var val = parser[j][1];\n                                if (parser[j][1] && parser[j][1][0] === '\\'') {\n                                    val = parser[j][1].substring(1, parser[j][1].length - 1);\n                                }\n                                val = val ? val.replace(/%/g, '') : parser[j][1];\n                                rule.value = val;\n                                rule.type = 'string';\n                            }\n                            else if (operator.indexOf('between') > -1) {\n                                if (parser[j][0] === 'Literal' || parser[j][0] === 'Left') {\n                                    break;\n                                }\n                                if (parser[j][0] === 'Number') {\n                                    numVal.push(Number(parser[j][1]));\n                                }\n                                else if (parser[j][0] === 'String') {\n                                    var val = parser[j][1];\n                                    if (parser[j][1] && parser[j][1][0] === '\\'') {\n                                        val = parser[j][1].substring(1, parser[j][1].length - 1);\n                                    }\n                                    strVal.push(val);\n                                }\n                            }\n                            else {\n                                if (parser[j][0] === 'Number') {\n                                    numVal.push(Number(parser[j][1]));\n                                }\n                                else if (parser[j][0] === 'String') {\n                                    var val = parser[j][1];\n                                    if (parser[j][1] && parser[j][1][0] === '\\'') {\n                                        val = parser[j][1].substring(1, parser[j][1].length - 1);\n                                    }\n                                    strVal.push(val);\n                                }\n                            }\n                            rule.type = this.getTypeFromColumn(rule);\n                        }\n                    }\n                    if (operator.indexOf('like') < 0) {\n                        if (parser[j - 1][0] === 'Number') {\n                            rule.value = numVal;\n                            rule.type = 'number';\n                        }\n                        else if (parser[j - 1][0] === 'String') {\n                            rule.value = strVal;\n                            rule.type = 'string';\n                        }\n                        else if (operator.indexOf('between') > -1 && parser[j - 1][0] === 'Conditions') {\n                            if (strVal.length !== 0) {\n                                rule.value = strVal;\n                                rule.type = 'string';\n                            }\n                            else {\n                                rule.value = numVal;\n                                rule.type = 'number';\n                            }\n                        }\n                        numVal = [];\n                        strVal = [];\n                        rule.type = this.getTypeFromColumn(rule);\n                    }\n                    if (this.enableSeparateConnector && parser[i + 1][0] === 'Conditions') {\n                        rule.condition = parser[i + 1][1];\n                    }\n                }\n                else if (parser[i + 1][0] === 'Operators') {\n                    rule.operator = this.getOperator(parser[i + 2][1], parser[i + 1][1], sqlLocale);\n                    if (rule.operator === 'equal' && parser[i + 2][0] === 'String' && parser[i + 2][1] === '\\'\\'') {\n                        rule.operator = 'isempty';\n                    }\n                    else if (rule.operator === 'notequal' && parser[i + 2][0] === 'String' && parser[i + 2][1] === '\\'\\'') {\n                        rule.operator = 'isnotempty';\n                    }\n                    if (parser[i + 2][0] === 'Number') {\n                        rule.type = 'number';\n                        rule.value = Number(parser[i + 2][1]);\n                    }\n                    else {\n                        rule.type = 'string';\n                        var val = parser[i + 2][1];\n                        if (val && val[0] === '\\'') {\n                            val = val.substring(1, val.length - 1);\n                        }\n                        rule.value = val;\n                    }\n                    if (this.enableSeparateConnector && parser[i + 3][0] === 'Conditions') {\n                        rule.condition = parser[i + 3][1];\n                    }\n                    rule.type = this.getTypeFromColumn(rule);\n                }\n                rules.rules.push(rule);\n            }\n            else if (parser[i][0] === 'Left') {\n                if (!(parser[0][0] === 'Left') && (parser[i - 1][1] === 'not' || sqlLocale && this.l10n.getConstant('NOT').toLowerCase() === parser[i - 1][1])) {\n                    isNotOpened = true;\n                    continue;\n                }\n                this.parser = parser.splice(i + 1, iLen - (i + 1));\n                if (this.enableNotCondition) {\n                    subRules = { condition: 'and', rules: [], not: false };\n                }\n                else {\n                    subRules = { condition: 'and', rules: [] };\n                }\n                grpCount = 0;\n                kLen = rules.rules.length;\n                for (k = 0; k < kLen; k++) { //To get the group position\n                    if (rules.rules[k].rules) {\n                        grpCount++;\n                    }\n                }\n                levelColl.push(grpCount);\n                rules.rules.push(subRules);\n                subRules = this.processParser(this.parser, subRules, levelColl, sqlLocale);\n                return rules;\n            }\n            else if (parser[i][0] === 'Conditions' && !this.enableSeparateConnector) {\n                if (parser[i][1] === 'not' || (sqlLocale && this.l10n.getConstant('NOT').toLowerCase() === parser[i][1])) {\n                    rules.not = true;\n                }\n                else {\n                    rules.condition = parser[i][1];\n                }\n            }\n            else if (parser[i][0] === 'Right') {\n                if (isNotOpened && parser[i + 1][0] === 'Right') {\n                    isNotOpened = false;\n                    continue;\n                }\n                this.parser = parser.splice(i + 1, iLen - (i + 1));\n                levelColl.pop(); //To get the parent Group\n                rules = this.rule;\n                lLen = levelColl.length;\n                for (l = 0; l < lLen; l++) {\n                    rules = this.findGroupByIdx(levelColl[l], rules, l === 0);\n                }\n                return this.processParser(this.parser, rules, levelColl, sqlLocale);\n            }\n        }\n        return rules;\n    };\n    /**\n     * Clone the Group\n     *\n     * @param {Element | string} target - 'target' to be passed to clone the group.\n     * @returns {void}\n     */\n    QueryBuilder.prototype.groupClone = function (target) {\n        var groupElem = target.closest('.e-rule-list').closest('.e-group-container');\n        var targetGrpId = target.id.replace(this.element.id + '_', '');\n        var groupId = groupElem.id.replace(this.element.id + '_', '');\n        var group = this.getGroup(targetGrpId);\n        this.groupIndex = Array.prototype.indexOf.call(target.closest('.e-rule-list').children, target.closest('.e-group-container'));\n        this.addGroups([{ 'condition': group.condition, 'not': group.not, 'rules': group.rules }], groupId);\n        this.groupIndex = -1;\n    };\n    QueryBuilder.prototype.ruleClone = function (target) {\n        var ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-container');\n        var groupElem = target.closest('.e-rule-list').closest('.e-group-container');\n        var getRule = this.getRule(target);\n        var groupId = groupElem.id.replace(this.element.id + '_', '');\n        var ruleElemColl = groupElem.querySelectorAll('.e-rule-container');\n        for (var i = 0, iLen = ruleElemColl.length; i < iLen; i++) {\n            if (ruleElem.id === ruleElemColl[i].id) {\n                this.ruleIndex = i;\n            }\n        }\n        if (this.enableSeparateConnector) {\n            this.addRules([{ 'label': getRule.label, 'field': getRule.field, 'type': getRule.type, 'operator': getRule.operator,\n                    'value': getRule.value, 'condition': getRule.condition }], groupId);\n        }\n        else {\n            this.addRules([{ 'label': getRule.label, 'field': getRule.field, 'type': getRule.type, 'operator': getRule.operator,\n                    'value': getRule.value }], groupId);\n        }\n        this.ruleIndex = -1;\n    };\n    QueryBuilder.prototype.ruleLock = function (target) {\n        var ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-container');\n        var rule = this.getRule(ruleElem.id.replace(this.element.id + '_', ''));\n        if (ruleElem.classList.contains('e-disable')) {\n            rule.isLocked = false;\n            this.lockItems = this.lockItems.filter(function (lockItem) { return lockItem !== ruleElem.id; });\n            ruleElem.classList.remove('e-disable');\n            this.disableRuleControls(target, ruleElem, false);\n            target.children[0].classList.add('e-unlock');\n            target.children[0].classList.remove('e-lock');\n            target.setAttribute('title', this.l10n.getConstant('LockRule'));\n        }\n        else {\n            rule.isLocked = true;\n            if (this.lockItems.indexOf(ruleElem.id) < 0) {\n                this.lockItems.splice(this.lockItems.length - 1, 0, ruleElem.id);\n            }\n            ruleElem.classList.add('e-disable');\n            this.disableRuleControls(target, ruleElem, true);\n            target.children[0].classList.add('e-lock');\n            target.children[0].classList.remove('e-unlock');\n            target.setAttribute('title', this.l10n.getConstant('UnlockRule'));\n        }\n    };\n    QueryBuilder.prototype.groupLock = function (target) {\n        var groupElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container');\n        var group = this.getGroup(groupElem.id.replace(this.element.id + '_', ''));\n        var isRoot = groupElem.id.indexOf('group0') > -1;\n        if (groupElem.classList.contains('e-disable')) {\n            if (isRoot) {\n                var newGroup = {};\n                newGroup.condition = group.condition;\n                newGroup.not = group.not;\n                newGroup.isLocked = false;\n                this.setProperties({ rule: newGroup }, true);\n            }\n            else {\n                group.isLocked = false;\n            }\n            this.lockItems = this.lockItems.filter(function (lockItem) { return lockItem !== groupElem.id; });\n            groupElem.classList.remove('e-disable');\n            this.disableHeaderControls(target, groupElem, false);\n            target.children[0].classList.add('e-unlock');\n            target.children[0].classList.remove('e-lock');\n            target.setAttribute('title', this.l10n.getConstant('LockGroup'));\n            this.updateLockItems();\n        }\n        else {\n            if (isRoot) {\n                var newGroup = {};\n                newGroup.condition = group.condition;\n                newGroup.not = group.not;\n                newGroup.isLocked = true;\n                this.setProperties({ rule: newGroup }, true);\n            }\n            else {\n                group.isLocked = true;\n            }\n            if (this.lockItems.indexOf(groupElem.id) < 0) {\n                this.lockItems.splice(this.lockItems.length - 1, 0, groupElem.id);\n            }\n            groupElem.classList.add('e-disable');\n            this.disableHeaderControls(target, groupElem, true);\n            target.children[0].classList.add('e-lock');\n            target.children[0].classList.remove('e-unlock');\n            target.setAttribute('title', this.l10n.getConstant('UnlockGroup'));\n        }\n    };\n    QueryBuilder.prototype.updateLockItems = function () {\n        for (var i = 0; i < this.lockItems.length; i++) {\n            var idColl = this.lockItems[i].split('_');\n            if (idColl.length > 2) {\n                var ruleElem = this.element.querySelector('#' + this.lockItems[i]);\n                var target = ruleElem.querySelector('.e-lock-rule-btn');\n                ruleElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-rule-container');\n                if (!ruleElem.classList.contains('e-disable')) {\n                    this.ruleLock(target);\n                }\n            }\n            else {\n                var groupElem = this.element.querySelector('#' + this.lockItems[i]);\n                var target = groupElem.querySelector('.e-lock-grp-btn');\n                groupElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-group-container');\n                if (!groupElem.classList.contains('e-disable')) {\n                    this.groupLock(target);\n                }\n            }\n        }\n    };\n    QueryBuilder.prototype.disableHeaderControls = function (target, groupElem, isDisabled) {\n        var andElem = groupElem.querySelectorAll('.e-btngroup-and');\n        var orElem = groupElem.querySelectorAll('.e-btngroup-or');\n        var notElem = groupElem.querySelectorAll('.e-qb-toggle');\n        var addElem = groupElem.querySelectorAll('.e-add-btn');\n        var deleteGrpElem = groupElem.querySelectorAll('.e-deletegroup');\n        var lockElem = groupElem.querySelectorAll('.e-lock-grp-btn');\n        var cloneElem = groupElem.querySelectorAll('.e-clone-grp-btn');\n        var groupContElem = groupElem.querySelectorAll('.e-group-container');\n        var addCondition = groupElem.querySelectorAll('.e-add-condition-btn');\n        var addGroup = groupElem.querySelectorAll('.e-add-group-btn');\n        for (var i = 0; i < andElem.length; i++) {\n            if (isDisabled) {\n                if (groupContElem[i] && groupContElem[i].classList.contains('e-disable')) {\n                    groupContElem[i].classList.add('e-disable');\n                }\n                andElem[i].disabled = true;\n                orElem[i].disabled = true;\n                if (addElem[i]) {\n                    addElem[i].disabled = true;\n                }\n                if (addCondition[i]) {\n                    addCondition[i].disabled = true;\n                }\n                if (addGroup[i]) {\n                    addGroup[i].disabled = true;\n                }\n                if (notElem[i]) {\n                    notElem[i].disabled = true;\n                }\n                if (deleteGrpElem[i]) {\n                    deleteGrpElem[i].disabled = true;\n                }\n                if (cloneElem[i]) {\n                    cloneElem[i].disabled = true;\n                }\n                andElem[i].parentElement.classList.add('e-disabled');\n                if (lockElem[i] && lockElem[i] !== target) {\n                    lockElem[i].disabled = true;\n                    lockElem[i].children[0].classList.remove('e-unlock');\n                    lockElem[i].children[0].classList.add('e-lock');\n                }\n            }\n            else {\n                if (groupContElem[i]) {\n                    groupContElem[i].classList.remove('e-disable');\n                }\n                andElem[i].disabled = false;\n                orElem[i].disabled = false;\n                if (addElem[i]) {\n                    addElem[i].disabled = false;\n                }\n                if (addCondition[i]) {\n                    addCondition[i].disabled = false;\n                }\n                if (addGroup[i]) {\n                    addGroup[i].disabled = false;\n                }\n                if (lockElem[i]) {\n                    lockElem[i].disabled = false;\n                }\n                if (notElem[i]) {\n                    notElem[i].disabled = false;\n                }\n                if (deleteGrpElem[i]) {\n                    deleteGrpElem[i].disabled = false;\n                }\n                if (cloneElem[i]) {\n                    cloneElem[i].disabled = false;\n                }\n                andElem[i].parentElement.classList.remove('e-disabled');\n                if (lockElem[i]) {\n                    lockElem[i].children[0].classList.remove('e-lock');\n                }\n                if (lockElem[i]) {\n                    lockElem[i].children[0].classList.add('e-unlock');\n                }\n            }\n        }\n        this.disableRuleControls(target, groupElem, isDisabled);\n    };\n    QueryBuilder.prototype.disableRuleControls = function (target, groupElem, isDisabled) {\n        var ddlElement = groupElem.querySelectorAll('.e-control.e-dropdownlist');\n        var numericElement = groupElem.querySelectorAll('.e-control.e-numerictextbox');\n        var textElement = groupElem.querySelectorAll('.e-control.e-textbox');\n        var dateElement = groupElem.querySelectorAll('.e-control.e-datepicker');\n        var checkboxElement = groupElem.querySelectorAll('.e-control.e-checkbox');\n        var radioBtnElement = groupElem.querySelectorAll('.e-control.e-radio');\n        var multiSelectElement = groupElem.querySelectorAll('.e-control.e-multiselect');\n        var deleteElem = groupElem.querySelectorAll('.e-rule-delete');\n        var lockElem = groupElem.querySelectorAll('.e-lock-rule');\n        var cloneElem = groupElem.querySelectorAll('.e-clone-rule');\n        var ruleElem = groupElem.querySelectorAll('.e-rule-container');\n        for (var i = 0; i < deleteElem.length; i++) {\n            if (isDisabled) {\n                if (ruleElem[i] && ruleElem[i].classList.contains('e-disable')) {\n                    ruleElem[i].classList.add('e-disable');\n                }\n                deleteElem[i].disabled = true;\n                if (cloneElem[i]) {\n                    cloneElem[i].disabled = true;\n                }\n                if (lockElem[i] !== target) {\n                    lockElem[i].disabled = true;\n                    lockElem[i].children[0].classList.remove('e-unlock');\n                    lockElem[i].children[0].classList.add('e-lock');\n                }\n            }\n            else {\n                if (ruleElem[i]) {\n                    ruleElem[i].classList.remove('e-disable');\n                }\n                if (cloneElem[i]) {\n                    cloneElem[i].disabled = false;\n                }\n                deleteElem[i].disabled = false;\n                lockElem[i].disabled = false;\n                lockElem[i].children[0].classList.remove('e-lock');\n                lockElem[i].children[0].classList.add('e-unlock');\n            }\n        }\n        var dropDownObj;\n        var numericObj;\n        var textObj;\n        var dateObj;\n        var checkBoxObj;\n        var radioBtnObj;\n        var multiSelectObj;\n        for (var i = 0; i < ddlElement.length; i++) {\n            dropDownObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(ddlElement[i], 'dropdownlist');\n            if (isDisabled) {\n                dropDownObj.enabled = false;\n            }\n            else {\n                dropDownObj.enabled = true;\n            }\n        }\n        for (var i = 0; i < numericElement.length; i++) {\n            numericObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(numericElement[i], 'numerictextbox');\n            if (isDisabled) {\n                numericObj.enabled = false;\n            }\n            else {\n                numericObj.enabled = true;\n            }\n        }\n        for (var i = 0; i < textElement.length; i++) {\n            textObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(textElement[i], 'textbox');\n            if (isDisabled) {\n                textObj.enabled = false;\n            }\n            else {\n                textObj.enabled = true;\n            }\n        }\n        for (var i = 0; i < dateElement.length; i++) {\n            dateObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(dateElement[i], 'datepicker');\n            if (isDisabled) {\n                dateObj.enabled = false;\n            }\n            else {\n                dateObj.enabled = true;\n            }\n        }\n        for (var i = 0; i < checkboxElement.length; i++) {\n            checkBoxObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(checkboxElement[i], 'checkbox');\n            if (isDisabled) {\n                checkBoxObj.disabled = true;\n            }\n            else {\n                checkBoxObj.disabled = false;\n            }\n        }\n        for (var i = 0; i < radioBtnElement.length; i++) {\n            radioBtnObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(radioBtnElement[i], 'radio');\n            if (isDisabled) {\n                radioBtnObj.disabled = true;\n            }\n            else {\n                radioBtnObj.disabled = false;\n            }\n        }\n        for (var i = 0; i < multiSelectElement.length; i++) {\n            multiSelectObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(multiSelectElement[i], 'multiselect');\n            if (isDisabled) {\n                multiSelectObj.enabled = false;\n            }\n            else {\n                multiSelectObj.enabled = true;\n            }\n        }\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], QueryBuilder.prototype, \"created\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], QueryBuilder.prototype, \"actionBegin\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], QueryBuilder.prototype, \"beforeChange\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], QueryBuilder.prototype, \"change\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], QueryBuilder.prototype, \"dataBound\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], QueryBuilder.prototype, \"ruleChange\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], QueryBuilder.prototype, \"dragStart\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], QueryBuilder.prototype, \"drag\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], QueryBuilder.prototype, \"drop\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, ShowButtons)\n    ], QueryBuilder.prototype, \"showButtons\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], QueryBuilder.prototype, \"summaryView\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], QueryBuilder.prototype, \"allowValidation\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Default')\n    ], QueryBuilder.prototype, \"fieldMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])\n    ], QueryBuilder.prototype, \"columns\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], QueryBuilder.prototype, \"fieldModel\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], QueryBuilder.prototype, \"operatorModel\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], QueryBuilder.prototype, \"valueModel\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], QueryBuilder.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], QueryBuilder.prototype, \"cssClass\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])\n    ], QueryBuilder.prototype, \"dataSource\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Horizontal')\n    ], QueryBuilder.prototype, \"displayMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], QueryBuilder.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Default')\n    ], QueryBuilder.prototype, \"sortDirection\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(5)\n    ], QueryBuilder.prototype, \"maxGroupCount\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')\n    ], QueryBuilder.prototype, \"height\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')\n    ], QueryBuilder.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], QueryBuilder.prototype, \"matchCase\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], QueryBuilder.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], QueryBuilder.prototype, \"enableNotCondition\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], QueryBuilder.prototype, \"readonly\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], QueryBuilder.prototype, \"addRuleToNewGroups\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], QueryBuilder.prototype, \"autoSelectField\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], QueryBuilder.prototype, \"autoSelectOperator\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], QueryBuilder.prototype, \"separator\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], QueryBuilder.prototype, \"enableSeparateConnector\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ condition: 'and', rules: [] }, Rule)\n    ], QueryBuilder.prototype, \"rule\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], QueryBuilder.prototype, \"allowDragAndDrop\", void 0);\n    QueryBuilder = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], QueryBuilder);\n    return QueryBuilder;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));\n\nvar LevelColl = /** @class */ (function () {\n    function LevelColl() {\n    }\n    return LevelColl;\n}());\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-querybuilder/src/query-builder/query-builder.js?");

/***/ })

}]);