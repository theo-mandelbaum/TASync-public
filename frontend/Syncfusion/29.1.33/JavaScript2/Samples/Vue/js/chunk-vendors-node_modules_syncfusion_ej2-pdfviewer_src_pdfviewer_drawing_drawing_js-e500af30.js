"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-pdfviewer_src_pdfviewer_drawing_drawing_js-e500af30"],{

/***/ "./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/drawing.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/drawing.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Drawing: () => (/* binding */ Drawing)\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/index.js\");\n/* harmony import */ var _pdf_annotation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pdf-annotation */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/pdf-annotation.js\");\n/* harmony import */ var _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-drawings */ \"./node_modules/@syncfusion/ej2-drawings/index.js\");\n/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./selector */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/selector.js\");\n/* harmony import */ var _drawing_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./drawing-util */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/drawing-util.js\");\n/* harmony import */ var _connector_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./connector-util */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/connector-util.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _html_element__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./html-element */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/html-element.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Renderer module is used to render basic diagram elements\n *\n * @hidden\n */\nvar Drawing = /** @class */ (function () {\n    function Drawing(viewer) {\n        this.isDynamicStamps = false;\n        /**\n         * @private\n         */\n        this.copiedElementID = '';\n        /**\n         * @private\n         */\n        this.isPasted = false;\n        this.pdfViewer = viewer;\n        this.renderer = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.DrawingRenderer('this.pdfViewer.element.id', false);\n        this.svgRenderer = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.SvgRenderer();\n    }\n    /**\n     * @private\n     * @param {PdfViewer} viewer - Specified the pdfViewer element.\n     * @returns {void}\n     */\n    Drawing.prototype.renderLabels = function (viewer) {\n        var annotations = viewer.annotations;\n        if (annotations) {\n            for (var i = 0; i < annotations.length; i++) {\n                var annotation = annotations[parseInt(i.toString(), 10)];\n                this.initObject(annotation);\n            }\n        }\n    };\n    Drawing.prototype.createNewZindexTable = function (pageId) {\n        var zIndexTable = new _pdf_annotation__WEBPACK_IMPORTED_MODULE_1__.ZOrderPageTable();\n        this.pdfViewer.zIndex++;\n        zIndexTable.pageId = this.pdfViewer.zIndex;\n        this.pdfViewer.zIndexTable.push(zIndexTable);\n        return zIndexTable;\n    };\n    /**\n     * @private\n     * @param {number} pageId - Specified the page Id.\n     * @returns {ZOrderPageTable} - Returns the ZOrder page table.\n     */\n    Drawing.prototype.getPageTable = function (pageId) {\n        var zIndexTable;\n        if (this.pdfViewer.zIndexTable.length !== undefined) {\n            var notFound = true;\n            for (var i = 0; i < this.pdfViewer.zIndexTable.length; i++) {\n                if (this.pdfViewer.zIndexTable[parseInt(i.toString(), 10)].pageId === pageId) {\n                    notFound = false;\n                    zIndexTable = this.pdfViewer.zIndexTable[parseInt(i.toString(), 10)];\n                    break;\n                }\n            }\n            if (notFound) {\n                zIndexTable = this.createNewZindexTable(pageId);\n                zIndexTable.pageId = pageId;\n            }\n        }\n        else {\n            zIndexTable = this.createNewZindexTable(pageId);\n        }\n        return zIndexTable;\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the page index value.\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {void}\n     */\n    Drawing.prototype.setZIndex = function (index, obj) {\n        if (obj.pageIndex !== undefined) {\n            var pageTable = this.getPageTable(obj.pageIndex);\n            var ispageobject = false;\n            if (obj.shapeAnnotationType !== 'Polygon') {\n                for (var i = 0; i < pageTable.objects.length; i++) {\n                    if (obj.id === pageTable.objects[parseInt(i.toString(), 10)].id) {\n                        pageTable.objects.splice(parseInt(i.toString(), 10), 1);\n                        pageTable.objects.splice(parseInt(i.toString(), 10), 0, obj);\n                        ispageobject = true;\n                        break;\n                    }\n                }\n            }\n            if (!ispageobject) {\n                if (obj.zIndex === -1) {\n                    pageTable.zIndex++;\n                    obj.zIndex = pageTable.zIndex;\n                    pageTable.objects.push(obj);\n                }\n                else {\n                    var tabelLength = pageTable.objects.length;\n                    obj.zIndex = tabelLength++;\n                    pageTable.objects.push(obj);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | PdfFormFieldBaseModel} obj - Specified the annotation object.\n     * @returns {PdfAnnotationBaseModel | PdfFormFieldBaseModel} - Returns the annotaion or form fields model.\n     */\n    Drawing.prototype.initObject = function (obj) {\n        //Move the common properties like zindex and id to an abstract class\n        this.setZIndex(this.pdfViewer.zIndex, obj);\n        (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.createMeasureElements)();\n        if (!(0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.isLineShapes)(obj)) {\n            this.initNode(obj);\n        }\n        else {\n            this.initLine(obj);\n            obj.wrapper.measure(new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.Size(undefined, undefined));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n        }\n        if (obj.wrapper === null) {\n            //Init default wrapper\n        }\n        this.pdfViewer.nameTable[obj.id] = obj;\n        if (obj.formFieldAnnotationType) {\n            this.nodePropertyChange(obj, { bounds: { width: obj.bounds.width, height: obj.bounds.height } });\n        }\n        //Add some methodologies to add the children of group to name table\n        return obj;\n    };\n    Drawing.prototype.initNode = function (obj) {\n        var canvas = this.initContainer(obj);\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (!content) {\n            content = this.init(obj, canvas);\n        }\n        //canvas.children.push(content);\n        canvas.rotateAngle = obj.rotateAngle;\n        canvas.measure(new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.Size(obj.wrapper.width, obj.wrapper.height));\n        canvas.arrange(canvas.desiredSize);\n        if (this.isDynamicStamps) {\n            this.pdfViewer.annotation.stampAnnotationModule.updateSessionStorage(obj, null, 'dynamicStamp');\n            this.isDynamicStamps = false;\n        }\n    };\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | PdfFormFieldBaseModel} obj - Specified the annotation object.\n     * @param {Container} canvas - Specified the canvas element.\n     * @returns {DrawingElement} - Returns the drawing element.\n     */\n    Drawing.prototype.init = function (obj, canvas) {\n        var content;\n        content = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.DrawingElement();\n        var pathContent;\n        var basicElement;\n        var isStamp = false;\n        var annotationSettings = this.pdfViewer.annotationModule ? this.pdfViewer.annotationModule.findAnnotationSettings(obj) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0;\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n            annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n        var isAnnotationSet = false;\n        if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n            isAnnotationSet = true;\n        }\n        if (obj.formFieldAnnotationType) {\n            content = this.initFormFields(obj, content, canvas);\n        }\n        else {\n            content = this.initAnnotationObject(obj, pathContent, content, canvas, isStamp, basicElement, isAnnotationSet, annotationMaxHeight, annotationMaxWidth, annotationMinWidth, annotationMinHeight);\n        }\n        content.id = obj.id + '_content';\n        content.relativeMode = 'Object';\n        if (obj.shapeAnnotationType !== 'Stamp') {\n            if (obj.bounds.width !== undefined) {\n                content.width = obj.bounds.width;\n                if (isAnnotationSet) {\n                    if ((content.width < annotationMinWidth) || (content.width > annotationMaxWidth)) {\n                        if (content.width < annotationMinWidth) {\n                            content.width = annotationMinWidth;\n                        }\n                        if (content.width > annotationMaxWidth) {\n                            content.width = annotationMaxWidth;\n                        }\n                    }\n                }\n            }\n            content.horizontalAlignment = 'Stretch';\n            if (obj.bounds.height !== undefined) {\n                content.height = obj.bounds.height;\n                if (isAnnotationSet) {\n                    if ((content.height < annotationMinHeight) || (content.width > annotationMaxHeight)) {\n                        if (content.height < annotationMinHeight) {\n                            content.height = annotationMinHeight;\n                        }\n                        if (content.height > annotationMaxHeight) {\n                            content.height = annotationMaxHeight;\n                        }\n                    }\n                }\n            }\n            (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.setElementStype)(obj, content);\n            if (this.pdfViewer.viewerBase.drawSignatureWithTool && obj.shapeAnnotationType === 'SignatureText') {\n                content.style.strokeWidth = 0;\n            }\n        }\n        content.isRectElement = true;\n        content.verticalAlignment = 'Stretch';\n        return content;\n    };\n    Drawing.prototype.initFormFields = function (obj, content, canvas) {\n        switch (obj.formFieldAnnotationType) {\n            case 'Textbox':\n            case 'PasswordField':\n            case 'Checkbox':\n            case 'RadioButton':\n            case 'DropdownList':\n            case 'ListBox':\n            case 'SignatureField':\n            case 'InitialField': {\n                var htmlContent = new _html_element__WEBPACK_IMPORTED_MODULE_7__.DiagramHtmlElement();\n                content = htmlContent;\n                content.id = obj.id + '_content';\n                canvas.children.push(content);\n                break;\n            }\n        }\n        return content;\n    };\n    Drawing.prototype.initAnnotationObject = function (obj, pathContent, content, canvas, isStamp, basicElement, isAnnotationSet, annotationMaxHeight, annotationMaxWidth, annotationMinWidth, annotationMinHeight) {\n        switch (obj.shapeAnnotationType) {\n            case 'Ellipse':\n                pathContent = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.PathElement();\n                pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n                    'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n                content = pathContent;\n                canvas.children.push(content);\n                if (obj.enableShapeLabel) {\n                    var textLabel = this.textElement(obj);\n                    textLabel.content = obj.labelContent;\n                    textLabel.style.color = obj.fontColor;\n                    textLabel.style.strokeColor = obj.labelBorderColor;\n                    textLabel.style.fill = obj.labelFillColor;\n                    textLabel.style.fontSize = obj.fontSize;\n                    textLabel.style.fontFamily = obj.fontFamily;\n                    textLabel.style.opacity = obj.labelOpacity;\n                    canvas.children.push(textLabel);\n                }\n                break;\n            case 'Path':\n                pathContent = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.PathElement();\n                pathContent.data = obj.data;\n                content = pathContent;\n                canvas.children.push(content);\n                break;\n            case 'HandWrittenSignature':\n            case 'Ink':\n                pathContent = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.PathElement();\n                pathContent.data = obj.data;\n                pathContent.style.strokeColor = obj.strokeColor;\n                pathContent.style.strokeWidth = obj.thickness;\n                pathContent.style.opacity = obj.opacity;\n                content = pathContent;\n                canvas.children.push(content);\n                break;\n            case 'Polygon':\n                pathContent = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.PathElement();\n                pathContent.data = (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.getPolygonPath)(obj.vertexPoints);\n                content = pathContent;\n                canvas.children.push(content);\n                break;\n            case 'Stamp':\n                isStamp = true;\n                this.isDynamicStamps = true;\n                if (obj && obj.annotationAddMode && (obj.annotationAddMode === 'Existing Annotation' || obj.annotationAddMode === 'Imported Annotation')) {\n                    obj.bounds.width = obj.bounds.width - 20;\n                    obj.bounds.height = obj.bounds.height - 20;\n                }\n                if (obj.isDynamicStamp) {\n                    canvas.horizontalAlignment = 'Left';\n                    basicElement = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.DrawingElement();\n                    content = basicElement;\n                    content.cornerRadius = 10;\n                    content.style.fill = obj.stampFillColor;\n                    content.style.strokeColor = obj.stampStrokeColor;\n                    canvas.children.push(content);\n                    var textele = this.textElement(obj);\n                    textele = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.TextElement();\n                    textele.style.fontFamily = 'Helvetica';\n                    textele.style.fontSize = 14;\n                    textele.style.italic = true;\n                    textele.style.bold = true;\n                    textele.style.color = obj.fillColor;\n                    textele.rotateValue = undefined;\n                    textele.content = obj.dynamicText;\n                    textele.relativeMode = 'Point';\n                    textele.margin.left = 10;\n                    textele.margin.bottom = -7;\n                    textele.setOffsetWithRespectToBounds(0, 0.57, null);\n                    textele.relativeMode = 'Point';\n                    if (obj.annotationAddMode === 'Existing Annotation' || obj.annotationAddMode === 'Imported Annotation') {\n                        textele.style.fontSize = this.fontSizeCalculation(obj, textele, obj.bounds.width - 10);\n                    }\n                    canvas.children.push(textele);\n                    var pathContent1 = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.PathElement();\n                    pathContent1.id = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.randomId)() + '_stamp';\n                    pathContent1.data = obj.data;\n                    pathContent1.width = obj.bounds.width;\n                    if (isAnnotationSet && (obj.bounds.width > annotationMaxWidth)) {\n                        pathContent1.width = annotationMaxWidth;\n                        obj.bounds.width = annotationMaxWidth;\n                    }\n                    pathContent1.height = obj.bounds.height / 2;\n                    if (isAnnotationSet && (obj.bounds.height > annotationMaxHeight)) {\n                        pathContent1.height = annotationMaxHeight / 2;\n                        obj.bounds.height = annotationMaxHeight / 2;\n                    }\n                    pathContent1.rotateValue = undefined;\n                    pathContent1.margin.left = 10;\n                    pathContent1.margin.bottom = -5;\n                    pathContent1.relativeMode = 'Point';\n                    pathContent1.setOffsetWithRespectToBounds(0, 0.1, null);\n                    var content1 = pathContent1;\n                    pathContent1.style.fill = obj.fillColor;\n                    pathContent1.style.strokeColor = obj.strokeColor;\n                    pathContent1.style.opacity = obj.opacity;\n                    content.width = obj.bounds.width + 20;\n                    content.height = obj.bounds.height + 20;\n                    content.style.opacity = obj.opacity;\n                    canvas.children.push(content1);\n                }\n                else {\n                    canvas.horizontalAlignment = 'Left';\n                    basicElement = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.DrawingElement();\n                    content = basicElement;\n                    content.cornerRadius = 10;\n                    content.style.fill = obj.stampFillColor;\n                    content.style.strokeColor = obj.stampStrokeColor;\n                    canvas.children.push(content);\n                    var pathContent1 = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.PathElement();\n                    pathContent1.id = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.randomId)() + '_stamp';\n                    pathContent1.data = obj.data;\n                    pathContent1.width = obj.bounds.width;\n                    if (isAnnotationSet && (obj.bounds.width > annotationMaxWidth)) {\n                        pathContent1.width = annotationMaxWidth;\n                        obj.bounds.width = annotationMaxWidth;\n                    }\n                    pathContent1.height = obj.bounds.height;\n                    if (isAnnotationSet && (obj.bounds.height > annotationMaxHeight)) {\n                        pathContent1.height = annotationMaxHeight;\n                        obj.bounds.height = annotationMaxHeight;\n                    }\n                    pathContent1.minWidth = pathContent1.width / 2;\n                    pathContent1.minHeight = pathContent1.height / 2;\n                    var content1 = pathContent1;\n                    pathContent1.style.fill = obj.fillColor;\n                    pathContent1.style.strokeColor = obj.strokeColor;\n                    pathContent1.style.opacity = obj.opacity;\n                    content.width = obj.bounds.width + 20;\n                    content.height = obj.bounds.height + 20;\n                    content.minWidth = pathContent1.width / 2;\n                    content.minHeight = pathContent1.height / 2;\n                    content.style.opacity = obj.opacity;\n                    canvas.children.push(content1);\n                    canvas.minHeight = content.minHeight + 20;\n                    canvas.minWidth = content.minWidth + 20;\n                }\n                break;\n            case 'Image':\n            case 'SignatureImage': {\n                var pathContent11 = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ImageElement();\n                pathContent11.source = obj.data;\n                content = pathContent11;\n                content.style.strokeWidth = 0;\n                canvas.children.push(content);\n                break;\n            }\n            case 'Rectangle':\n                basicElement = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.DrawingElement();\n                content = basicElement;\n                canvas.children.push(content);\n                if (obj.enableShapeLabel) {\n                    var textLabel = this.textElement(obj);\n                    textLabel.content = obj.labelContent;\n                    textLabel.style.color = obj.fontColor;\n                    textLabel.style.strokeColor = obj.labelBorderColor;\n                    textLabel.style.fill = obj.labelFillColor;\n                    textLabel.style.fontSize = obj.fontSize;\n                    textLabel.style.fontFamily = obj.fontFamily;\n                    textLabel.style.opacity = obj.labelOpacity;\n                    canvas.children.push(textLabel);\n                }\n                break;\n            case 'Perimeter': {\n                pathContent = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.PathElement();\n                pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n                    'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n                content = pathContent;\n                (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.setElementStype)(obj, pathContent);\n                canvas.children.push(content);\n                basicElement = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.DrawingElement();\n                basicElement.id = 'perimeter_' + (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.randomId)();\n                basicElement.height = .2;\n                basicElement.width = .2;\n                basicElement.transform = _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.RotateTransform.Self;\n                basicElement.horizontalAlignment = 'Stretch';\n                this.setNodePosition(basicElement, obj);\n                basicElement.rotateAngle = obj.rotateAngle;\n                (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.setElementStype)(obj, basicElement);\n                canvas.children.push(basicElement);\n                var textele = this.textElement(obj);\n                textele = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.TextElement();\n                textele.content = textele.content = (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.findPointsLength)([\n                    { x: obj.bounds.x, y: obj.bounds.y },\n                    { x: obj.bounds.x + obj.bounds.width, y: obj.bounds.y + obj.bounds.height }\n                ]).toString();\n                textele.rotateValue = { y: -10, angle: obj.rotateAngle };\n                canvas.children.push(textele);\n                break;\n            }\n            case 'Radius': {\n                pathContent = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.PathElement();\n                pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n                    'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n                content = pathContent;\n                (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.setElementStype)(obj, pathContent);\n                canvas.children.push(content);\n                basicElement = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.DrawingElement();\n                basicElement.id = 'radius_' + (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.randomId)();\n                basicElement.height = .2;\n                basicElement.width = obj.bounds.width / 2;\n                basicElement.transform = _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.RotateTransform.Self;\n                this.setNodePosition(basicElement, obj);\n                basicElement.rotateAngle = obj.rotateAngle;\n                (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.setElementStype)(obj, basicElement);\n                canvas.children.push(basicElement);\n                var radiusTextEle = this.textElement(obj);\n                if (obj.enableShapeLabel) {\n                    radiusTextEle.style.color = obj.fontColor;\n                    radiusTextEle.style.strokeColor = obj.labelBorderColor;\n                    radiusTextEle.style.fill = obj.labelFillColor;\n                    radiusTextEle.style.fontSize = obj.fontSize;\n                    radiusTextEle.style.fontFamily = obj.fontFamily;\n                    radiusTextEle.style.opacity = obj.labelOpacity;\n                }\n                var length_1 = (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.findPointsLength)([\n                    { x: obj.bounds.x, y: obj.bounds.y },\n                    { x: obj.bounds.x + obj.bounds.width, y: obj.bounds.y + obj.bounds.height }\n                ]);\n                if (!this.pdfViewer.enableImportAnnotationMeasurement && obj.notes && obj.notes !== '') {\n                    radiusTextEle.content = obj.notes;\n                }\n                else {\n                    radiusTextEle.content = this.pdfViewer.annotation.measureAnnotationModule.setConversion((obj.bounds.width / 2) *\n                        this.pdfViewer.annotation.measureAnnotationModule.pixelToPointFactor, obj);\n                }\n                radiusTextEle.rotateValue = { y: -10, x: obj.bounds.width / 4, angle: obj.rotateAngle };\n                canvas.children.push(radiusTextEle);\n                break;\n            }\n            case 'StickyNotes': {\n                var pathContent2 = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ImageElement();\n                pathContent2.source = obj.data;\n                pathContent2.width = obj.bounds.width;\n                pathContent2.height = obj.bounds.height;\n                pathContent2.style.strokeColor = obj.strokeColor;\n                pathContent2.style.strokeWidth = 0;\n                content = pathContent2;\n                canvas.children.push(content);\n                break;\n            }\n            case 'SignatureText': {\n                var rectElements = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.DrawingElement();\n                rectElements.style.strokeWidth = 0;\n                content = rectElements;\n                content.style.strokeWidth = 0;\n                canvas.style.strokeWidth = 0;\n                canvas.children.push(content);\n                var signatureText = this.textElement(obj);\n                signatureText.style.fontFamily = obj.fontFamily;\n                signatureText.style.fontSize = obj.fontSize;\n                signatureText.style.textAlign = 'Left';\n                signatureText.rotateValue = undefined;\n                signatureText.content = obj.data;\n                signatureText.style.strokeWidth = 0;\n                canvas.children.push(signatureText);\n                break;\n            }\n            case 'FreeText': {\n                var rectElement = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.DrawingElement();\n                content = rectElement;\n                canvas.children.push(content);\n                var freeTextEle = this.textElement(obj);\n                freeTextEle = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.TextElement();\n                freeTextEle.style.fontFamily = obj.fontFamily;\n                freeTextEle.style.fontSize = obj.fontSize;\n                freeTextEle.style.textAlign = 'Left';\n                if (obj.textAlign.toLowerCase() === 'center') {\n                    freeTextEle.style.textAlign = 'Center';\n                }\n                else if (obj.textAlign.toLowerCase() === 'right') {\n                    freeTextEle.style.textAlign = 'Right';\n                }\n                else if (obj.textAlign.toLowerCase() === 'justify') {\n                    freeTextEle.style.textAlign = 'Justify';\n                }\n                freeTextEle.style.color = obj.fontColor;\n                freeTextEle.style.bold = obj.font.isBold;\n                freeTextEle.style.italic = obj.font.isItalic;\n                if (obj.font.isUnderline === true) {\n                    freeTextEle.style.textDecoration = 'Underline';\n                }\n                else if (obj.font.isStrikeout === true) {\n                    freeTextEle.style.textDecoration = 'LineThrough';\n                }\n                freeTextEle.rotateValue = undefined;\n                freeTextEle.content = obj.dynamicText;\n                freeTextEle.style.opacity = obj.opacity;\n                freeTextEle.margin.left = 4;\n                freeTextEle.margin.right = 5;\n                freeTextEle.margin.top = 5 * (obj.fontSize / 16);\n                if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n                    freeTextEle.style.textWrapping = 'Wrap';\n                }\n                else {\n                    freeTextEle.style.textWrapping = 'WrapWithOverflow';\n                }\n                freeTextEle.relativeMode = 'Point';\n                freeTextEle.setOffsetWithRespectToBounds(0, 0, null);\n                freeTextEle.relativeMode = 'Point';\n                canvas.children.push(freeTextEle);\n                break;\n            }\n        }\n        content.id = obj.id + '_content';\n        content.relativeMode = 'Object';\n        if (!isStamp) {\n            if (obj.bounds.width !== undefined) {\n                content.width = obj.bounds.width;\n                if (isAnnotationSet) {\n                    if ((content.width < annotationMinWidth) || (content.width > annotationMaxWidth)) {\n                        if (content.width < annotationMinWidth) {\n                            content.width = annotationMinWidth;\n                        }\n                        if (content.width > annotationMaxWidth) {\n                            content.width = annotationMaxWidth;\n                        }\n                    }\n                }\n            }\n            content.horizontalAlignment = 'Stretch';\n            if (obj.bounds.height !== undefined) {\n                content.height = obj.bounds.height;\n                if (isAnnotationSet) {\n                    if ((content.height < annotationMinHeight) || (content.width > annotationMaxHeight)) {\n                        if (content.height < annotationMinHeight) {\n                            content.height = annotationMinHeight;\n                        }\n                        if (content.height > annotationMaxHeight) {\n                            content.height = annotationMaxHeight;\n                        }\n                    }\n                }\n            }\n            (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.setElementStype)(obj, content);\n        }\n        content.isRectElement = true;\n        content.verticalAlignment = 'Stretch';\n        return content;\n    };\n    Drawing.prototype.textElement = function (obj) {\n        var textele = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.TextElement();\n        (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.setElementStype)(obj, textele);\n        textele.horizontalAlignment = 'Center';\n        textele.verticalAlignment = obj.shapeAnnotationType === 'SignatureText' ? 'Center' : 'Top';\n        textele.relativeMode = 'Object';\n        textele.setOffsetWithRespectToBounds(.5, .5, 'Absolute');\n        return textele;\n    };\n    /**\n     * @private\n     * @param {DrawingElement} obj - Specified the drawing element.\n     * @param {PdfAnnotationBaseModel} node - Specified the node element.\n     * @returns {void}\n     */\n    Drawing.prototype.setNodePosition = function (obj, node) {\n        if (node.shapeAnnotationType === 'Perimeter') {\n            obj.offsetX = node.bounds.x + node.bounds.width / 2;\n            obj.offsetY = node.bounds.y + node.bounds.height / 2;\n        }\n        else if (node.shapeAnnotationType === 'Radius') {\n            var trasPoint = { x: node.bounds.x + (node.bounds.width / 2) +\n                    (node.bounds.width / 4), y: node.bounds.y + (node.bounds.height / 2) };\n            var center = { x: (node.bounds.x + (node.bounds.width / 2)), y: (node.bounds.y + (node.bounds.height / 2)) };\n            var matrix = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.identityMatrix)();\n            (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.rotateMatrix)(matrix, node.rotateAngle, center.x, center.y);\n            var rotatedPoint = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, trasPoint);\n            var newPoint1 = { x: rotatedPoint.x, y: rotatedPoint.y };\n            obj.offsetX = newPoint1.x;\n            obj.offsetY = newPoint1.y;\n            obj.width = node.bounds.width / 2;\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {Container} - Returns the container element.\n     */\n    Drawing.prototype.initContainer = function (obj) {\n        if (!obj.id) {\n            obj.id = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.randomId)();\n        }\n        // Creates canvas element\n        var canvas = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.Canvas();\n        canvas.id = obj.id;\n        canvas.offsetX = obj.bounds.x + (obj.bounds.width * 0.5);\n        canvas.offsetY = obj.bounds.y + (obj.bounds.height * 0.5);\n        canvas.style.fill = 'transparent';\n        canvas.style.strokeColor = 'transparent';\n        canvas.rotateAngle = obj.rotateAngle;\n        obj.wrapper = canvas;\n        return canvas;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {Canvas} - Returns the canvas element.\n     */\n    Drawing.prototype.initLine = function (obj) {\n        if (!obj.id) {\n            obj.id = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.randomId)();\n        }\n        var container = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.Canvas();\n        var segment = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.PathElement();\n        segment.id = obj.id + '_path';\n        var srcDecorator = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.PathElement();\n        var targetDecorator = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.PathElement();\n        if (obj.vertexPoints.length) {\n            obj.sourcePoint = obj.vertexPoints[0];\n            obj.targetPoint = obj.vertexPoints[obj.vertexPoints.length - 1];\n            for (var i = 0; i < obj.vertexPoints.length; i++) {\n                if (i !== 0 && i !== obj.vertexPoints.length - 1) {\n                    obj.segments.push(obj.vertexPoints[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        segment = (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.getSegmentElement)(obj, segment);\n        var points = [];\n        points = (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.getConnectorPoints)(obj);\n        //  points = this.clipDecorators(this, points);\n        var leaders = [];\n        var labels = [];\n        if (obj.shapeAnnotationType === 'Distance') {\n            leaders = (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.initLeaders)(obj, points);\n            labels = (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.initDistanceLabel)(obj, points, this.pdfViewer.annotation.measureAnnotationModule, this.pdfViewer);\n        }\n        if ((obj.shapeAnnotationType === 'Line' || obj.shapeAnnotationType === 'LineWidthArrowHead') && obj.measureType === 'Perimeter') {\n            labels = (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.initPerimeterLabel)(obj, points, this.pdfViewer.annotation.measureAnnotationModule, this.pdfViewer);\n        }\n        if (obj.enableShapeLabel === true && !(obj.shapeAnnotationType === 'Distance') && !(obj.measureType === 'Perimeter')) {\n            var angle = _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.Point.findAngle(points[0], points[1]);\n            var textele = this.textElement(obj);\n            textele.id = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.randomId)();\n            if (!this.pdfViewer.enableImportAnnotationMeasurement && obj.notes && obj.notes !== '') {\n                textele.content = obj.notes;\n            }\n            else {\n                textele.content = obj.labelContent;\n            }\n            textele.style.strokeColor = obj.labelBorderColor;\n            textele.style.fill = obj.labelFillColor;\n            textele.style.fontSize = obj.fontSize;\n            textele.style.color = obj.fontColor;\n            textele.style.fontFamily = obj.fontFamily;\n            textele.style.opacity = obj.labelOpacity;\n            textele.rotateValue = { y: -10, angle: angle };\n            labels.push(textele);\n        }\n        points = (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.clipDecorators)(obj, points);\n        var bounds = _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        var anglePoints = obj.vertexPoints;\n        if (obj.shapeAnnotationType === 'Line' || obj.shapeAnnotationType === 'LineWidthArrowHead' || obj.shapeAnnotationType === 'Distance') {\n            srcDecorator = (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.getDecoratorElement)(obj, points[0], anglePoints[1], true);\n            targetDecorator = (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.getDecoratorElement)(obj, points[points.length - 1], anglePoints[anglePoints.length - 2], false);\n        }\n        srcDecorator.id = obj.id + '_srcDec';\n        targetDecorator.id = obj.id + '_tarDec';\n        segment.style['fill'] = 'transparent';\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [];\n        (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.setElementStype)(obj, segment);\n        container.children.push(segment);\n        if (leaders.length > 0) {\n            for (var i = 0; i < leaders.length; i++) {\n                container.children.push(leaders[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (labels.length > 0) {\n            for (var i = 0; i < labels.length; i++) {\n                container.children.push(labels[parseInt(i.toString(), 10)]);\n            }\n        }\n        container.children.push(srcDecorator);\n        container.children.push(targetDecorator);\n        if (obj.shapeAnnotationType === 'LineWidthArrowHead') {\n            for (var i = 0; i < container.children.length; i++) {\n                var child = container.children[parseInt(i.toString(), 10)];\n                if (child.id.includes('srcDec') || child.id.includes('tarDec')) {\n                    child.width = 12 * obj.thickness;\n                    child.height = 12 * obj.thickness;\n                }\n            }\n        }\n        container.id = obj.id;\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        points = (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.getConnectorPoints)(obj);\n        obj.wrapper = container;\n        return container;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {PdfAnnotationBaseModel} - Returns the added annotaion object.\n     */\n    Drawing.prototype.add = function (obj) {\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        if (obj.formFieldAnnotationType && this.pdfViewer.formDesignerModule) {\n            obj = new _pdf_annotation__WEBPACK_IMPORTED_MODULE_1__.PdfFormFieldBase(this.pdfViewer, 'formFields', obj, true);\n            obj = this.initObject(obj);\n            this.pdfViewer.formFields.push(obj);\n        }\n        else {\n            obj = new _pdf_annotation__WEBPACK_IMPORTED_MODULE_1__.PdfAnnotationBase(this.pdfViewer, 'annotations', obj, true);\n            obj = this.initObject(obj);\n            this.pdfViewer.annotations.push(obj);\n        }\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n        return obj;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {void}\n     */\n    Drawing.prototype.remove = function (obj) {\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        var index = obj.pageIndex;\n        for (var i = 0; i < this.pdfViewer.annotations.length; i++) {\n            var annotation = this.pdfViewer.annotations[parseInt(i.toString(), 10)];\n            if ((annotation.id && (annotation.id === obj.id || annotation.id.split('_')[0] === obj.id)) || (annotation.wrapper && annotation.wrapper.id === obj.id)) {\n                this.pdfViewer.annotations.splice(i, 1);\n                var objects = this.getPageObjects(obj.pageIndex);\n                for (var j = 0; j < objects.length; j++) {\n                    if (objects[parseInt(j.toString(), 10)].id === obj.id) {\n                        objects.splice(j, 1);\n                        if (obj.shapeAnnotationType === 'Path' || obj.shapeAnnotationType === 'SignatureImage' || obj.shapeAnnotationType === 'SignatureText') {\n                            this.refreshCanvasDiagramLayer(undefined, index, obj.id);\n                        }\n                        else {\n                            this.pdfViewer.renderDrawing(undefined, index);\n                        }\n                    }\n                }\n                // need to add code snippet to remove from z index table\n            }\n        }\n        for (var i = 0; i < this.pdfViewer.formFields.length; i++) {\n            var element = this.pdfViewer.formFields[parseInt(i.toString(), 10)];\n            if (element.id === obj.id || element.wrapper.id === obj.id) {\n                this.pdfViewer.formFields.splice(i, 1);\n                if (this.pdfViewer.formDesignerModule && obj.formFieldAnnotationType) {\n                    this.pdfViewer.formFieldCollection.splice(i, 1);\n                }\n                var objects = this.getPageObjects(obj.pageIndex);\n                for (var j = 0; j < objects.length; j++) {\n                    if (objects[parseInt(j.toString(), 10)].id === obj.id) {\n                        objects.splice(j, 1);\n                        break;\n                    }\n                    if (objects[parseInt(j.toString(), 10)] && objects[parseInt(j.toString(), 10)].id &&\n                        objects[parseInt(j.toString(), 10)].id.indexOf(obj.id) !== -1) {\n                        objects.splice(j, 1);\n                    }\n                }\n            }\n        }\n        if (obj.formFieldAnnotationType === 'Textbox' || obj.formFieldAnnotationType === 'Checkbox' || obj.formFieldAnnotationType === 'RadioButton'\n            || obj.formFieldAnnotationType === 'PasswordField' || obj.formFieldAnnotationType === 'DropdownList' || obj.formFieldAnnotationType === 'ListBox' || obj.formFieldAnnotationType === 'SignatureField' || obj.formFieldAnnotationType === 'InitialField') {\n            var inputField = document.getElementById('form_field_' + obj.id + '_content_html_element');\n            if (inputField) {\n                inputField.remove();\n                this.pdfViewer.renderDrawing(undefined, index);\n            }\n            for (var i = 0; i < this.pdfViewer.formFieldCollections.length; i++) {\n                var element = this.pdfViewer.formFieldCollections[parseInt(i.toString(), 10)];\n                if (element.id === obj.id) {\n                    this.pdfViewer.formFieldCollections.splice(i, 1);\n                }\n            }\n            for (var i = 0; i < this.pdfViewer.viewerBase.formFieldCollection.length; i++) {\n                // eslint-disable-next-line\n                if (obj.id == this.pdfViewer.viewerBase.formFieldCollection[parseInt(i.toString(), 10)]) {\n                    this.pdfViewer.viewerBase.formFieldCollection.splice(i, 1);\n                }\n            }\n            var field = {\n                // eslint-disable-next-line\n                name: obj.name, id: obj.id, value: obj.value, fontFamily: obj.fontFamily, fontSize: obj.fontSize, fontStyle: obj.fontStyle,\n                // eslint-disable-next-line\n                color: obj.color, backgroundColor: obj.backgroundColor, alignment: obj.alignment, isReadonly: obj.isReadonly, visibility: obj.visibility,\n                // eslint-disable-next-line\n                maxLength: obj.maxLength, isRequired: obj.isRequired, isPrint: obj.isPrint, rotation: obj.rotateAngle, tooltip: obj.tooltip,\n                // eslint-disable-next-line\n                options: obj.options, isChecked: obj.isChecked, isSelected: obj.isSelected\n            };\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(field) && field.id !== 'diagram_helper') {\n                this.pdfViewer.fireFormFieldRemoveEvent('formFieldRemove', field, obj.pageIndex);\n                this.pdfViewer.formDesignerModule.removeFieldsFromAnnotationCollections(obj.id, field.name);\n            }\n        }\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    };\n    /**\n     * @private\n     * @param {number} pageIndex - Specified the page index.\n     * @returns {PdfAnnotationBaseModel[]} - Returns the annotation base model collections.\n     */\n    Drawing.prototype.getPageObjects = function (pageIndex) {\n        var pageTable = this.getPageTable(pageIndex);\n        return pageTable.objects;\n    };\n    /**\n     * @private\n     * @param {HTMLCanvasElement} diagramLayer - Specified the diagram layer element.\n     * @param {number} pageIndex - Specified the page index.\n     * @param {string} objectId - Specified the object id.\n     * @returns {void}\n     */\n    Drawing.prototype.refreshCanvasDiagramLayer = function (diagramLayer, pageIndex, objectId) {\n        var _this = this;\n        if (!diagramLayer) {\n            diagramLayer = this.pdfViewer.viewerBase.getAnnotationCanvas('_annotationCanvas_', pageIndex);\n        }\n        if (diagramLayer) {\n            var zoom = void 0;\n            if (diagramLayer.id === this.pdfViewer.element.id + '_print_annotation_layer_' + pageIndex) {\n                zoom = 1;\n            }\n            else {\n                zoom = this.pdfViewer.viewerBase.getZoomFactor();\n            }\n            var width = diagramLayer.width / zoom;\n            var height = diagramLayer.height / zoom;\n            var ctx = diagramLayer.getContext('2d');\n            ctx.lineCap = 'round';\n            ctx.lineJoin = 'round';\n            if (zoom < 1) {\n                ctx.lineWidth = ctx.lineWidth / zoom;\n            }\n            var devicePixelRatio_1 = this.pdfViewer.viewerBase.getWindowDevicePixelRatio();\n            var zoomRatio = zoom * devicePixelRatio_1;\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.Browser.isDevice || (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.Browser.isDevice && zoom <= 0.7)) {\n                ctx.setTransform(zoomRatio, 0, 0, zoomRatio, 0, 0);\n            }\n            else {\n                ctx.setTransform(zoom, 0, 0, zoom, 0, 0);\n            }\n            ctx.clearRect(0, 0, width, height);\n            var objects = this.getPageObjects(pageIndex);\n            var uniqueObjects = objects.filter(function (obj, index, self) {\n                if (obj.id.split('_')[0] === 'free') {\n                    return true;\n                }\n                else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(_this.pdfViewer.formDesignerModule)) {\n                    return index === self.findIndex(function (t) { return t.id.split('_')[0] === obj.id.split('_')[0]; });\n                }\n                return index === self.findIndex(function (t) { return t.id === obj.id; });\n            });\n            for (var i = 0; i < uniqueObjects.length; i++) {\n                var renderElement = void 0;\n                if (diagramLayer.id === this.pdfViewer.element.id + '_print_annotation_layer_' + pageIndex) {\n                    if (uniqueObjects[parseInt(i.toString(), 10)].isPrint) {\n                        renderElement = this.pdfViewer.nameTable[uniqueObjects[parseInt(i.toString(), 10)].id].wrapper;\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(renderElement)) {\n                            (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.refreshDiagramElements)(diagramLayer, [renderElement], this.renderer);\n                        }\n                    }\n                }\n                else {\n                    renderElement = this.pdfViewer.nameTable[uniqueObjects[parseInt(i.toString(), 10)].id].wrapper;\n                    var uniqueObjectId = uniqueObjects[parseInt(i.toString(), 10)].id;\n                    var uniqueObject = this.pdfViewer.nameTable[\"\" + uniqueObjectId];\n                    if ((renderElement && this.shouldRefreshElement(uniqueObject)) ||\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.formDesignerModule)) {\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(uniqueObject.properties.data) && uniqueObject.properties.data.includes('base64')) {\n                            var image = new Image();\n                            image.src = uniqueObject.properties.data;\n                            if (window.customStampCollection == null && window.customStampCollection === undefined) {\n                                window.customStampCollection = new Map();\n                            }\n                            if (window.customStampCollection && !window.customStampCollection.get(renderElement.id)) {\n                                window.customStampCollection.set(renderElement.id, image);\n                            }\n                        }\n                        (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.refreshDiagramElements)(diagramLayer, [renderElement], this.renderer);\n                    }\n                }\n            }\n        }\n    };\n    Drawing.prototype.shouldRefreshElement = function (uniqueObject) {\n        var parentObject = this.pdfViewer.nameTable[uniqueObject.id.split('_')[0]];\n        return ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(parentObject) && uniqueObject.visibility === 'visible') ||\n            (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(uniqueObject.subject) && uniqueObject.annotName !== 'SignatureField' && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(uniqueObject.visibility)) ||\n            (uniqueObject.propName === 'annotations' &&\n                uniqueObject.shapeAnnotationType !== 'Path' &&\n                uniqueObject.shapeAnnotationType !== 'SignatureText' &&\n                uniqueObject.shapeAnnotationType !== 'SignatureImage') ||\n            (uniqueObject.shapeAnnotationType === 'SignatureImage' &&\n                uniqueObject.propName !== 'formFields') ||\n            (uniqueObject.shapeAnnotationType === 'SignatureText' &&\n                uniqueObject.propName !== 'formFields') || ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(parentObject) && uniqueObject.id === 'diagram_helper'));\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the page index.\n     * @returns {void}\n     */\n    Drawing.prototype.clearHighlighter = function (index) {\n        var adornerSvg = this.getAdornerLayerSvg(this.pdfViewer.element.id + index + '_diagramAdornerLayer', index);\n        if (adornerSvg) {\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n            if (highlighter) {\n                highlighter.parentNode.removeChild(highlighter);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {string} diagramId - Specified the diagram id.\n     * @param {number} index - Specified the page index.\n     * @returns {SVGSVGElement} Return the svg element.\n     */\n    Drawing.prototype.getSelectorElement = function (diagramId, index) {\n        var adornerLayer = null;\n        var adornerSvg = this.getAdornerLayerSvg(diagramId, index);\n        if (adornerSvg) {\n            adornerLayer = adornerSvg.getElementById(diagramId + index + '_SelectorElement');\n        }\n        return adornerLayer;\n    };\n    /**\n     * @private\n     * @param {string} diagramId - Specified the diagram id.\n     * @param {number} index - Specified the page index.\n     * @returns {SVGSVGElement} Return the svg element.\n     */\n    Drawing.prototype.getAdornerLayerSvg = function (diagramId, index) {\n        var adornerLayerSvg = null;\n        var diagramElement = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.getDiagramElement)(diagramId + index + '_diagramAdornerLayer');\n        var elementcoll;\n        if (diagramElement) {\n            elementcoll = diagramElement.getElementsByClassName('e-adorner-layer' + index);\n            adornerLayerSvg = elementcoll[0];\n        }\n        return adornerLayerSvg;\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the page index.\n     * @returns {void}\n     */\n    Drawing.prototype.clearSelectorLayer = function (index) {\n        var adornerSvg = this.getAdornerLayerSvg(this.pdfViewer.element.id, index);\n        if (adornerSvg) {\n            var selectionRect = adornerSvg.getElementById(this.pdfViewer.adornerSvgLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter(index);\n            var childNodes = this.getSelectorElement(this.pdfViewer.element.id, index).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} select - Specified the select value.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the annotation selector element.\n     * @param {PdfAnnotationBaseModel} helper - Specified the annotation helper element.\n     * @param {boolean} isSelect - Specified the is select or not.\n     * @returns {void}\n     */\n    Drawing.prototype.renderSelector = function (select, currentSelector, helper, isSelect) {\n        if (!helper || isSelect) {\n            var size = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.Size();\n            var selectorModel = this.pdfViewer.selectedItems;\n            this.clearSelectorLayer(select);\n            if (selectorModel.wrapper) {\n                selectorModel.wrapper.measure(size);\n                var zoom = this.pdfViewer.viewerBase.getZoomFactor();\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                if (selectorModel.annotations.length === 1) {\n                    selectorModel.rotateAngle = selectorModel.annotations[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.annotations[0].rotateAngle;\n                    //selectorModel.pivot = selectorModel.annotations[0].pivot;\n                }\n                var selectorElement = void 0;\n                if (selectorModel.formFields.length) {\n                    for (var i = 0; i < selectorModel.formFields.length; i++) {\n                        var node = selectorModel.formFields[parseInt(i.toString(), 10)];\n                        selectorElement = this.getSelectorElement(this.pdfViewer.element.id, select);\n                        if (selectorElement && node.pageIndex === select && this.pdfViewer.designerMode) {\n                            this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, false, true, null, null, currentSelector);\n                        }\n                        if (this.pdfViewer.formDesignerModule && node.formFieldAnnotationType) {\n                            if (!this.pdfViewer.viewerBase.isFormFieldSelect && !this.pdfViewer.viewerBase.isFormFieldMouseDown &&\n                                !this.pdfViewer.viewerBase.isFormFieldMouseMove) {\n                                this.pdfViewer.viewerBase.isFormFieldSelect = true;\n                                var field = {\n                                    name: node.name, id: node.id, value: node.value,\n                                    fontFamily: node.fontFamily, fontSize: node.fontSize, fontStyle: node.fontStyle,\n                                    color: node.color,\n                                    backgroundColor: node.backgroundColor,\n                                    alignment: node.alignment, isReadonly: node.isReadonly,\n                                    visibility: node.visibility,\n                                    maxLength: node.maxLength, isRequired: node.isRequired,\n                                    isPrint: node.isPrint, rotation: node.rotateAngle, tooltip: node.tooltip,\n                                    options: node.options, isChecked: node.isChecked,\n                                    isSelected: node.isSelected, bounds: node.bounds\n                                };\n                                if (!this.pdfViewer.formDesignerModule.isFormFieldSizeUpdated) {\n                                    this.pdfViewer.fireFormFieldSelectEvent('formFieldSelect', field, node.pageIndex, this.pdfViewer.formDesignerModule.isProgrammaticSelection);\n                                }\n                                this.pdfViewer.formDesignerModule.isFormFieldSizeUpdated = false;\n                            }\n                        }\n                    }\n                }\n                if (selectorModel.annotations.length) {\n                    for (var j = 0; j < selectorModel.annotations.length; j++) {\n                        var node = selectorModel.annotations[parseInt(j.toString(), 10)];\n                        selectorElement = this.getSelectorElement(this.pdfViewer.element.id, select);\n                        if (selectorElement && node.pageIndex === select) {\n                            if (node.shapeAnnotationType === 'Distance' || node.shapeAnnotationType === 'Line' ||\n                                node.shapeAnnotationType === 'LineWidthArrowHead' || node.shapeAnnotationType === 'Polygon') {\n                                this.renderEndPointHandle(node, selectorElement, selectorModel.thumbsConstraints, { scale: zoom, tx: 0, ty: 0 }, undefined, undefined, true, currentSelector);\n                            }\n                            else {\n                                if (node.shapeAnnotationType === 'StickyNotes') {\n                                    this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, false, true, null, null, currentSelector);\n                                }\n                                else {\n                                    if (this.pdfViewer.tool !== 'Stamp') {\n                                        var isSignature = node.shapeAnnotationType === 'Path' || node.formFieldAnnotationType === 'SignatureField' || node.formFieldAnnotationType === 'InitialField';\n                                        this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, node.shapeAnnotationType === 'Stamp', false, isSignature, (node.shapeAnnotationType === 'FreeText' || node.shapeAnnotationType === 'HandWrittenSignature' || node.shapeAnnotationType === 'SignatureImage' || node.shapeAnnotationType === 'Image' || node.shapeAnnotationType === 'SignatureText'), currentSelector);\n                                    }\n                                }\n                            }\n                            if (!this.pdfViewer.viewerBase.isNewSignatureAdded && (node.shapeAnnotationType === 'HandWrittenSignature' || node.shapeAnnotationType === 'SignatureText' || node.shapeAnnotationType === 'SignatureImage')) {\n                                this.pdfViewer.annotationModule.selectSignature(node.signatureName, node.pageIndex, node);\n                            }\n                            if (this.pdfViewer.formDesignerModule && node.formFieldAnnotationType) {\n                                if (!this.pdfViewer.viewerBase.isFormFieldSelect && !this.pdfViewer.viewerBase.isFormFieldMouseDown &&\n                                    !this.pdfViewer.viewerBase.isFormFieldMouseMove) {\n                                    this.pdfViewer.viewerBase.isFormFieldSelect = true;\n                                    var field = {\n                                        value: node.value, fontFamily: node.fontFamily, fontSize: node.fontSize,\n                                        fontStyle: node.fontStyle,\n                                        color: node.color,\n                                        backgroundColor: node.backgroundColor,\n                                        alignment: node.alignment, isReadonly: node.isReadonly,\n                                        visibility: node.visibility,\n                                        maxLength: node.maxLength, isRequired: node.isRequired,\n                                        isPrint: node.isPrint, rotation: node.rotateAngle, tooltip: node.tooltip,\n                                        options: node.options, isChecked: node.isChecked,\n                                        isSelected: node.isSelected, bounds: node.bounds\n                                    };\n                                    if (!this.pdfViewer.formDesignerModule.isFormFieldSizeUpdated) {\n                                        this.pdfViewer.fireFormFieldSelectEvent('formFieldSelect', field, node.pageIndex, this.pdfViewer.formDesignerModule.isProgrammaticSelection);\n                                    }\n                                    this.pdfViewer.formDesignerModule.isFormFieldSizeUpdated = false;\n                                }\n                            }\n                            if ((node.annotName !== '' || node.signatureName === 'ink') && node.annotName !== 'SignatureText') {\n                                if (helper && (node === helper) && !node.formFieldAnnotationType) {\n                                    if (!this.pdfViewer.viewerBase.isAddComment && !this.pdfViewer.viewerBase.isAnnotationSelect &&\n                                        !this.pdfViewer.viewerBase.isAnnotationMouseDown &&\n                                        !this.pdfViewer.viewerBase.isAnnotationMouseMove && !this.pdfViewer.viewerBase.isInkAdded &&\n                                        !this.pdfViewer.viewerBase.isNewStamp) {\n                                        this.pdfViewer.viewerBase.isAnnotationSelect = true;\n                                        this.pdfViewer.annotationModule.annotationSelect(node.annotName, node.pageIndex, node);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     *\n     * @private\n     * @param {PdfAnnotationBaseModel | SelectorModel} obj - Specified the objects to be rotated.\n     * @param {number} angle - Specified the angle by which the objects have to be rotated.\n     * @param {PointModel} pivot - Specified the reference point with reference to which the objects have to be rotated.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n     * @returns {void}\n     */\n    Drawing.prototype.rotate = function (obj, angle, pivot, currentSelector) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof _selector__WEBPACK_IMPORTED_MODULE_3__.Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var objects = [];\n                objects = objects.concat(obj.annotations);\n                this.rotateObjects(obj, objects, angle, pivot, null, currentSelector);\n            }\n            else {\n                this.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | SelectorModel} parent - Specified the annotation object.\n     * @param {PdfAnnotationBaseModel[]} objects - Specified the annotation objects.\n     * @param {number} angle - Specified the annotation angle.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @param {boolean} includeParent - Specified the include parent value.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n     * @returns {void}\n     */\n    Drawing.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent, currentSelector) {\n        pivot = pivot || {};\n        var matrix = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.identityMatrix)();\n        (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.rotateMatrix)(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (obj instanceof _pdf_annotation__WEBPACK_IMPORTED_MODULE_1__.PdfAnnotationBase) {\n                if (includeParent !== false || parent !== obj) {\n                    obj.rotateAngle += angle;\n                    obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                    var newOffset = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n                    obj.wrapper.offsetX = newOffset.x;\n                    obj.wrapper.offsetY = newOffset.y;\n                    this.nodePropertyChange(obj, { rotateAngle: obj.rotateAngle });\n                }\n                this.renderSelector(obj.pageIndex, currentSelector);\n            }\n        }\n    };\n    Drawing.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (element && element.id) {\n            if (targetElement && targetElement === 'selector') {\n                return this.pdfViewer.adornerSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    Drawing.prototype.shownBorder = function () {\n        var isSelectInAllowed = false;\n        if (this.pdfViewer.annotationModule) {\n            var annotation = this.pdfViewer.selectedItems.annotations[0];\n            var allowedInteraction = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n            var isLock = this.pdfViewer.annotationModule.checkIsLockSettings(annotation);\n            isSelectInAllowed = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(allowedInteraction) && (allowedInteraction.includes('Select') || !isLock);\n        }\n        return isSelectInAllowed;\n    };\n    /**\n     * @private\n     * @param {DrawingElement} selector - Specified the annotation selector object.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {Transforms} transform - Specfied the transform value.\n     * @param {number} enableNode - Specified the node number.\n     * @param {boolean} isBorderTickness - Specified is thickness or not.\n     * @param {boolean} isSwimlane - Specified is swimlane annotation or not.\n     * @param {boolean} isSticky - Specified is sticky annotation or not.\n     * @returns {void}\n     */\n    Drawing.prototype.renderBorder = function (selector, canvas, currentSelector, transform, enableNode, isBorderTickness, isSwimlane, isSticky) {\n        var wrapper = selector;\n        var options = (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.getBaseShapeAttributes)(wrapper, transform);\n        transform = transform || { scale: 1, tx: 0, ty: 0 };\n        if (!isSticky) {\n            options.x *= transform.scale;\n            options.y *= transform.scale;\n            options.width *= transform.scale;\n            options.height *= transform.scale;\n            options.fill = 'transparent';\n            var shapeType = this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType;\n            if (currentSelector && (typeof (currentSelector) !== 'object') && currentSelector !== '') {\n                var annotationSelector = JSON.parse(currentSelector);\n                var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n                options.stroke = borderColor;\n                options.strokeWidth = currentSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n                var lineDash = annotationSelector.selectorLineDashArray.length === 0 ?\n                    [6, 3] : annotationSelector.selectorLineDashArray;\n                if (lineDash.length > 2) {\n                    lineDash = [lineDash[0], lineDash[1]];\n                }\n                options.dashArray = lineDash.toString();\n            }\n            else if (currentSelector && currentSelector !== '') {\n                var borderColor = currentSelector.selectionBorderColor === '' ? 'black' : currentSelector.selectionBorderColor;\n                options.stroke = borderColor;\n                options.strokeWidth = currentSelector.selectionBorderThickness === 1 ? 1 : currentSelector.selectionBorderThickness;\n                var lineDash = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(currentSelector.selectorLineDashArray) &&\n                    (currentSelector.selectorLineDashArray.length === 0)) ? [6, 3] : currentSelector.selectorLineDashArray;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(lineDash) && lineDash.length > 2) {\n                    lineDash = [lineDash[0], lineDash[1]];\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(lineDash)) {\n                    options.dashArray = lineDash.toString();\n                }\n            }\n            else {\n                if (!this.pdfViewer.designerMode) {\n                    if ((shapeType === 'HandWrittenSignature' || shapeType === 'SignatureText' || shapeType === 'SignatureImage') || shapeType === 'Ink') {\n                        var formField = this.pdfViewer.nameTable[selector.id.split('_')[0]];\n                        var isFormFieldSign = this.pdfViewer.viewerBase.checkSignatureFormField(selector.id);\n                        // if (isFormFieldSign && options.width + 21 !== formField.bounds.width && options.height + 21 !== formField.bounds.height) {\n                        //     if (this.pdfViewer.signatureFitMode === 'Default') {\n                        //         let selectorBounds: any = this.pdfViewer.formFieldsModule.getDefaultBoundsforSign(formField.bounds);\n                        //         options.x = selectorBounds.x; options.y = selectorBounds.y; options.width = selectorBounds.width; options.height = selectorBounds.height;\n                        //     } else {\n                        //         options.x = formField.bounds.x; options.y = formField.bounds.y; options.width = formField.bounds.width; options.height = formField.bounds.height;\n                        //     }\n                        // }\n                        this.getSignBorder(shapeType, options, isFormFieldSign);\n                    }\n                    else {\n                        this.getBorderSelector(shapeType, options);\n                    }\n                }\n            }\n            options.class = 'e-pv-diagram-border';\n            if (isSwimlane) {\n                options.class += ' e-diagram-lane';\n            }\n            options.id = 'borderRect';\n            options.id = 'borderRect';\n            if (!enableNode) {\n                options.class += ' e-disabled';\n            }\n            if (isBorderTickness) {\n                options.class += ' e-thick-border';\n            }\n            options.cornerRadius = 0;\n        }\n        else {\n            options.x *= transform.scale;\n            options.y *= transform.scale;\n            options.width *= transform.scale;\n            options.height *= transform.scale;\n            var shapeType = this.pdfViewer.selectedItems.annotations.length > 0 ?\n                this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType\n                : this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n            if (currentSelector && (typeof (currentSelector) !== 'object') && currentSelector !== '') {\n                var annotationSelector = JSON.parse(currentSelector);\n                var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n                options.stroke = borderColor;\n                options.strokeWidth = currentSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n                var lineDash = annotationSelector.selectorLineDashArray.length === 0 ?\n                    [6, 3] : annotationSelector.selectorLineDashArray;\n                if (lineDash.length > 2) {\n                    lineDash = [lineDash[0], lineDash[1]];\n                }\n                options.dashArray = lineDash.toString();\n            }\n            else if (currentSelector && currentSelector !== '') {\n                var borderColor = currentSelector.selectionBorderColor === '' ? 'black' : currentSelector.selectionBorderColor;\n                options.stroke = borderColor;\n                options.strokeWidth = currentSelector.selectionBorderThickness === 1 ? 1 : currentSelector.selectionBorderThickness;\n                var lineDash = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(currentSelector.selectorLineDashArray) &&\n                    (currentSelector.selectorLineDashArray.length === 0)) ? [6, 3] : currentSelector.selectorLineDashArray;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(lineDash) && lineDash.length > 2) {\n                    lineDash = [lineDash[0], lineDash[1]];\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(lineDash)) {\n                    options.dashArray = lineDash.toString();\n                }\n            }\n            else {\n                this.getBorderSelector(shapeType, options);\n            }\n        }\n        var checkBorder = this.shownBorder();\n        if (checkBorder) {\n            var parentSvg = this.getParentSvg(selector, 'selector');\n            this.svgRenderer.drawRectangle(canvas, options, this.pdfViewer.element.id, undefined, true, parentSvg);\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n     * @param {BaseAttributes} options - Specified the options value.\n     * @param {boolean} isFormFieldSign - Specified is form field sign or not.\n     * @returns {void}\n     */\n    Drawing.prototype.getSignBorder = function (type, options, isFormFieldSign) {\n        if (!isFormFieldSign && (type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n            var borderColor = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor;\n            var thickness = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.\n                annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.handWrittenSignatureSettings.\n                annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            var lineDash = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.\n                annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.handWrittenSignatureSettings.\n                annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.handWrittenSignatureSettings.\n                annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash.length > 2) {\n                lineDash = [lineDash[0], lineDash[1]];\n            }\n            options.dashArray = lineDash.toString();\n        }\n        else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n            var borderColor = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor;\n            var thickness = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.\n                selectionBorderThickness) ? 1 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            var lineDash = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.\n                selectorLineDashArray) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.\n                selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.\n                selectorLineDashArray;\n            if (lineDash.length > 2) {\n                lineDash = [lineDash[0], lineDash[1]];\n            }\n            options.dashArray = lineDash.toString();\n        }\n        else {\n            var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n            var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n            options.stroke = borderColor;\n            options.strokeWidth = annotationSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n            var lineDash = annotationSelector.selectorLineDashArray.length === 0 ?\n                [6, 3] : annotationSelector.selectorLineDashArray;\n            if (lineDash.length > 2) {\n                lineDash = [lineDash[0], lineDash[1]];\n            }\n            options.dashArray = lineDash.toString();\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n     * @param {BaseAttributes} options - Specified the base attributes.\n     * @returns {void}\n     */\n    Drawing.prototype.getBorderSelector = function (type, options) {\n        var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n        var borderColor = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.selectionBorderColor) || annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n        options.stroke = borderColor;\n        options.strokeWidth = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.selectionBorderThickness) ||\n            annotationSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n        var lineDash = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.selectorLineDashArray) ||\n            annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n        if (lineDash.length > 2) {\n            lineDash = [lineDash[0], lineDash[1]];\n        }\n        options.dashArray = lineDash.toString();\n        if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n            var borderColor_1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.annotationSelectorSettings.selectionBorderColor ? this.pdfViewer.annotationSelectorSettings.selectionBorderColor : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_1;\n            // eslint-disable-next-line max-len\n            var thickness = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.annotationSelectorSettings.selectionBorderThickness ? this.pdfViewer.annotationSelectorSettings.selectionBorderThickness : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.annotationSelectorSettings.selectorLineDashArray ? this.pdfViewer.annotationSelectorSettings.selectorLineDashArray : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_1.length > 2) {\n                lineDash_1 = [lineDash_1[0], lineDash_1[1]];\n            }\n            options.dashArray = lineDash_1.toString();\n        }\n        else if ((type === 'Textbox' || type === 'Checkbox' || type === 'RadioButton' || type === 'SignatureField' || type === 'InitialField' || type === 'DropdownList' || type === 'ListBox' || type === 'PasswordField') && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n            var borderColor_2 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.annotationSelectorSettings.selectionBorderColor ? this.pdfViewer.annotationSelectorSettings.selectionBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor)) ? this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor : 'black';\n            options.stroke = borderColor_2;\n            // eslint-disable-next-line max-len\n            var thickness = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.annotationSelectorSettings.selectionBorderThickness ? this.pdfViewer.annotationSelectorSettings.selectionBorderThickness : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness)) ? this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness : 1;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_2 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.annotationSelectorSettings.selectorLineDashArray ? this.pdfViewer.annotationSelectorSettings.selectorLineDashArray : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray)) ? this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray : [4];\n            if (lineDash_2.length > 2) {\n                lineDash_2 = [lineDash_2[0], lineDash_2[1]];\n            }\n            options.dashArray = lineDash_2.toString();\n        }\n        else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n            var borderColor_3 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.annotationSelectorSettings.selectionBorderColor ? this.pdfViewer.annotationSelectorSettings.selectionBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor)) ? this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor : 'black';\n            options.stroke = borderColor_3;\n            // eslint-disable-next-line max-len\n            var thickness = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.annotationSelectorSettings.selectionBorderThickness ? this.pdfViewer.annotationSelectorSettings.selectionBorderThickness : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderThickness)) ? this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderThickness : 1;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_3 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.annotationSelectorSettings.selectorLineDashArray ? this.pdfViewer.annotationSelectorSettings.selectorLineDashArray : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray)) ? this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray : [4];\n            if (lineDash_3.length > 2) {\n                lineDash_3 = [lineDash_3[0], lineDash_3[1]];\n            }\n            options.dashArray = lineDash_3.toString();\n        }\n        else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n            var borderColor_4 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.annotationSelectorSettings.selectionBorderColor ? this.pdfViewer.annotationSelectorSettings.selectionBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor)) ? this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor : 'black';\n            options.stroke = borderColor_4;\n            // eslint-disable-next-line max-len\n            var thickness = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.annotationSelectorSettings.selectionBorderThickness ? this.pdfViewer.annotationSelectorSettings.selectionBorderThickness : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderThickness)) ? this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderThickness : 1;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_4 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.annotationSelectorSettings.selectorLineDashArray ? this.pdfViewer.annotationSelectorSettings.selectorLineDashArray : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray)) ? this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray : [4];\n            if (lineDash_4.length > 2) {\n                lineDash_4 = [lineDash_4[0], lineDash_4[1]];\n            }\n            options.dashArray = lineDash_4.toString();\n        }\n        else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n            var borderColor_5 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.annotationSelectorSettings.selectionBorderColor ? this.pdfViewer.annotationSelectorSettings.selectionBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor)) ? this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor : 'black';\n            options.stroke = borderColor_5;\n            // eslint-disable-next-line max-len\n            var thickness = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.annotationSelectorSettings.selectionBorderThickness ? this.pdfViewer.annotationSelectorSettings.selectionBorderThickness : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderThickness)) ? this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderThickness : 1;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_5 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.annotationSelectorSettings.selectorLineDashArray ? this.pdfViewer.annotationSelectorSettings.selectorLineDashArray : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray)) ? this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray : [4];\n            if (lineDash_5.length > 2) {\n                lineDash_5 = [lineDash_5[0], lineDash_5[1]];\n            }\n            options.dashArray = lineDash_5.toString();\n        }\n        else if (type === 'StickyNotes' && this.pdfViewer.stickyNotesSettings.annotationSelectorSettings) {\n            var borderColor_6 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.annotationSelectorSettings.selectionBorderColor ? this.pdfViewer.annotationSelectorSettings.selectionBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor)) ? this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor : 'black';\n            options.stroke = borderColor_6;\n            // eslint-disable-next-line max-len\n            var thickness = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.annotationSelectorSettings.selectionBorderThickness ? this.pdfViewer.annotationSelectorSettings.selectionBorderThickness : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderThickness)) ? this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderThickness : 1;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_6 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [6, 3] : this.pdfViewer.annotationSelectorSettings.selectorLineDashArray ? this.pdfViewer.annotationSelectorSettings.selectorLineDashArray : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray)) ? this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray : [4];\n            if (lineDash_6.length > 2) {\n                lineDash_6 = [lineDash_6[0], lineDash_6[1]];\n            }\n            options.dashArray = lineDash_6.toString();\n        }\n        else if ((type === 'Stamp' || type === 'Image') && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n            var borderColor_7 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.annotationSelectorSettings.selectionBorderColor ? this.pdfViewer.annotationSelectorSettings.selectionBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor)) ? this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor : '#0000ff';\n            options.stroke = borderColor_7;\n            // eslint-disable-next-line max-len\n            var thickness = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.annotationSelectorSettings.selectionBorderThickness ? this.pdfViewer.annotationSelectorSettings.selectionBorderThickness : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderThickness)) ? this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderThickness : 1;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_7 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.annotationSelectorSettings.selectorLineDashArray ? this.pdfViewer.annotationSelectorSettings.selectorLineDashArray : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray)) ? this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray : [4];\n            if (lineDash_7.length > 2) {\n                lineDash_7 = [lineDash_7[0], lineDash_7[1]];\n            }\n            options.dashArray = lineDash_7.toString();\n        }\n    };\n    /**\n     * @private\n     * @param {string} id - Specified the annotaion id.\n     * @param {DrawingElement} selector - Specified the drawing element.\n     * @param {number} cx - Specified the cx number.\n     * @param {number} cy - Specified the cy number.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the html canvas element.\n     * @param {boolean} visible - Specified the annotation visible or not.\n     * @param {number} enableSelector - Specified the enable selector value.\n     * @param {Transforms} t - Specified the transforms value.\n     * @param {boolean} connected - Specified is connected or not.\n     * @param {boolean} canMask - Specified is mask or not.\n     * @param {object} ariaLabel - Specified the aria label object.\n     * @param {number} count - Specified the count value.\n     * @param {string} className - Specified the class name.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the annotation selector settings.\n     * @returns {void}\n     */\n    Drawing.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className, currentSelector) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        t = t || { scale: 1, tx: 0, ty: 0 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.identityMatrix)();\n            (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.rotateMatrix)(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, newPoint);\n        }\n        var options = (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.getBaseShapeAttributes)(wrapper);\n        var shapeType;\n        if (this.pdfViewer.selectedItems.annotations.length > 0 && this.pdfViewer.selectedItems.annotations[0].measureType) {\n            shapeType = this.pdfViewer.selectedItems.annotations[0].measureType;\n        }\n        else if (this.pdfViewer.selectedItems.formFields.length > 0) {\n            shapeType = this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n        }\n        else {\n            shapeType = this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType;\n        }\n        this.getResizerColors(shapeType, options, currentSelector, t);\n        this.getShapeSize(shapeType, options, currentSelector, t);\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        options.opacity = 1;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        options.x = (newPoint.x * t.scale) - (options.width / 2);\n        options.y = (newPoint.y * t.scale) - (options.height / 2);\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        if (this.getShape(shapeType, currentSelector) === 'Square') {\n            this.svgRenderer.drawRectangle(canvas, options, id, undefined, true, parentSvg);\n        }\n        else if (this.getShape(shapeType, currentSelector) === 'Circle') {\n            this.svgRenderer.drawCircle(canvas, options, 1);\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotaion object.\n     * @param {CircleAttributes} options - Specified the circle attributes value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {Transforms} t - Specified the transforms value.\n     * @returns {void}\n     */\n    Drawing.prototype.getShapeSize = function (type, options, currentSelector, t) {\n        if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n            var annotationSelector = JSON.parse(currentSelector);\n            options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.resizerSize) || annotationSelector.resizerSize ===\n                8 ? 8 : annotationSelector.resizerSize) / 2;\n            options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.resizerSize) || annotationSelector.resizerSize ===\n                8 ? 8 : annotationSelector.resizerSize) * t.scale;\n            options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.resizerSize) || annotationSelector.resizerSize ===\n                8 ? 8 : annotationSelector.resizerSize) * t.scale;\n        }\n        else if (currentSelector && currentSelector !== '') {\n            options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(currentSelector.resizerSize) || currentSelector.resizerSize ===\n                8 ? 8 : currentSelector.resizerSize) / 2;\n            options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(currentSelector.resizerSize) || currentSelector.resizerSize ===\n                8 ? 8 : currentSelector.resizerSize) * t.scale;\n            options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(currentSelector.resizerSize) || currentSelector.resizerSize ===\n                8 ? 8 : currentSelector.resizerSize) * t.scale;\n        }\n        else {\n            var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n            options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.resizerSize) || annotationSelector.resizerSize ===\n                8 ? 8 : annotationSelector.resizerSize) / 2;\n            options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.resizerSize) || annotationSelector.resizerSize ===\n                8 ? 8 : annotationSelector.resizerSize) * t.scale;\n            options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.resizerSize) || annotationSelector.resizerSize ===\n                8 ? 8 : annotationSelector.resizerSize) * t.scale;\n            if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize / 2 : 8);\n                // eslint-disable-next-line max-len\n                options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n                // eslint-disable-next-line max-len\n                options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n            }\n            else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize / 2 : 8);\n                // eslint-disable-next-line max-len\n                options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n                // eslint-disable-next-line max-len\n                options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n            }\n            else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize / 2 : 8);\n                // eslint-disable-next-line max-len\n                options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n                // eslint-disable-next-line max-len\n                options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n            }\n            else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize / 2 : 8);\n                // eslint-disable-next-line max-len\n                options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n                // eslint-disable-next-line max-len\n                options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n            }\n            else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize / 2 : 8);\n                // eslint-disable-next-line max-len\n                options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n                // eslint-disable-next-line max-len\n                options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n            }\n            else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize / 2 : 8);\n                // eslint-disable-next-line max-len\n                options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n                // eslint-disable-next-line max-len\n                options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n            }\n            else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize / 2 : 8);\n                // eslint-disable-next-line max-len\n                options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n                // eslint-disable-next-line max-len\n                options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n            }\n            else if ((type === 'Stamp' || type === 'Image') && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize / 2 : 8);\n                // eslint-disable-next-line max-len\n                options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n                // eslint-disable-next-line max-len\n                options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n            }\n            else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize / 2 : 8);\n                // eslint-disable-next-line max-len\n                options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n                // eslint-disable-next-line max-len\n                options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n            }\n            else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize / 2 : 8);\n                // eslint-disable-next-line max-len\n                options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n                // eslint-disable-next-line max-len\n                options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n            }\n            else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.perimeterSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize / 2 : 8);\n                // eslint-disable-next-line max-len\n                options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.perimeterSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n                // eslint-disable-next-line max-len\n                options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.perimeterSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n            }\n            else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.areaSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize / 2 : 8);\n                // eslint-disable-next-line max-len\n                options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.areaSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n                // eslint-disable-next-line max-len\n                options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.areaSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n            }\n            else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.volumeSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize / 2 : 8);\n                // eslint-disable-next-line max-len\n                options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.volumeSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n                // eslint-disable-next-line max-len\n                options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.volumeSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n            }\n            else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize / 2 : 8);\n                // eslint-disable-next-line max-len\n                options.width = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n                // eslint-disable-next-line max-len\n                options.height = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerSize) || this.pdfViewer.annotationSelectorSettings.resizerSize !== 8 ? this.pdfViewer.annotationSelectorSettings.resizerSize : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize)) ? this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize * t.scale : 8);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @returns {AnnotationSelectorSettingsModel} - Specified the annotation selector settings model.\n     */\n    Drawing.prototype.getShape = function (type, currentSelector) {\n        var shapeType;\n        {\n            if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n                var annotationSelector = JSON.parse(currentSelector);\n                shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.resizerShape) || annotationSelector.resizerShape === 'Square' ? 'Square' : annotationSelector.resizerShape;\n            }\n            else if (currentSelector && currentSelector !== '') {\n                shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(currentSelector.resizerShape) || currentSelector.resizerShape === 'Square' ? 'Square' : currentSelector.resizerShape;\n            }\n            else {\n                var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n                shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.resizerShape) || annotationSelector.resizerShape === 'Square' ? 'Square' : annotationSelector.resizerShape;\n                if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                    shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerShape) || this.pdfViewer.annotationSelectorSettings.resizerShape !== 'Square' ? this.pdfViewer.annotationSelectorSettings.resizerShape : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape)) ? this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape : 'Square';\n                }\n                else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                    shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerShape) || this.pdfViewer.annotationSelectorSettings.resizerShape !== 'Square' ? this.pdfViewer.annotationSelectorSettings.resizerShape : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape)) ? this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape : 'Square';\n                }\n                else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                    shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerShape) || this.pdfViewer.annotationSelectorSettings.resizerShape !== 'Square' ? this.pdfViewer.annotationSelectorSettings.resizerShape : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape)) ? this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape : 'Square';\n                }\n                else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                    shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerShape) || this.pdfViewer.annotationSelectorSettings.resizerShape !== 'Square' ? this.pdfViewer.annotationSelectorSettings.resizerShape : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape)) ? this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape : 'Square';\n                }\n                else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                    shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerShape) || this.pdfViewer.annotationSelectorSettings.resizerShape !== 'Square' ? this.pdfViewer.annotationSelectorSettings.resizerShape : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape)) ? this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape : 'Square';\n                }\n                else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n                    shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerShape) || this.pdfViewer.annotationSelectorSettings.resizerShape !== 'Square' ? this.pdfViewer.annotationSelectorSettings.resizerShape : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape)) ? this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape : 'Square';\n                }\n                else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                    shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerShape) || this.pdfViewer.annotationSelectorSettings.resizerShape !== 'Square' ? this.pdfViewer.annotationSelectorSettings.resizerShape : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape)) ? this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape : 'Square';\n                }\n                else if ((type === 'Stamp' || type === 'Image') && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                    shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerShape) || this.pdfViewer.annotationSelectorSettings.resizerShape !== 'Square' ? this.pdfViewer.annotationSelectorSettings.resizerShape : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape)) ? this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape : 'Square';\n                }\n                else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                    shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerShape) || this.pdfViewer.annotationSelectorSettings.resizerShape !== 'Square' ? this.pdfViewer.annotationSelectorSettings.resizerShape : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape)) ? this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape : 'Square';\n                }\n                else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                    shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerShape) || this.pdfViewer.annotationSelectorSettings.resizerShape !== 'Square' ? this.pdfViewer.annotationSelectorSettings.resizerShape : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape)) ? this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape : 'Square';\n                }\n                else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n                    shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerShape) || this.pdfViewer.annotationSelectorSettings.resizerShape !== 'Square' ? this.pdfViewer.annotationSelectorSettings.resizerShape : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.perimeterSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape)) ? this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape : 'Square';\n                }\n                else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n                    shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerShape) || this.pdfViewer.annotationSelectorSettings.resizerShape !== 'Square' ? this.pdfViewer.annotationSelectorSettings.resizerShape : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.areaSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape)) ? this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape : 'Square';\n                }\n                else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n                    shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerShape) || this.pdfViewer.annotationSelectorSettings.resizerShape !== 'Square' ? this.pdfViewer.annotationSelectorSettings.resizerShape : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.volumeSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape)) ? this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape : 'Square';\n                }\n                else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                    shapeType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerShape) || this.pdfViewer.annotationSelectorSettings.resizerShape !== 'Square' ? this.pdfViewer.annotationSelectorSettings.resizerShape : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape)) ? this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape : 'Square';\n                }\n            }\n            return shapeType;\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotaion object.\n     * @param {CircleAttributes} options - Specified the circle attributes value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {Transforms} t - Specified the transforms value.\n     * @returns {void}\n     */\n    Drawing.prototype.getResizerColors = function (type, options, currentSelector, t) {\n        if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n            var annotationSelector = JSON.parse(currentSelector);\n            options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.resizerBorderColor) || annotationSelector.resizerBorderColor === 'black' ? 'black' : annotationSelector.resizerBorderColor;\n            options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.resizerFillColor) || annotationSelector.resizerFillColor === '#FF4081' ? '#FF4081' : annotationSelector.resizerFillColor;\n        }\n        else if (currentSelector && currentSelector !== '') {\n            options.stroke = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(currentSelector.resizerBorderColor) ? currentSelector.resizerBorderColor : 'black';\n            options.fill = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(currentSelector.resizerFillColor) ? currentSelector.resizerFillColor : '#FF4081';\n        }\n        else {\n            var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n            options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.resizerBorderColor) || annotationSelector.resizerBorderColor === 'black' ? 'black' : annotationSelector.resizerBorderColor;\n            options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.resizerFillColor) || annotationSelector.resizerFillColor === '#FF4081' ? '#FF4081' : annotationSelector.resizerFillColor;\n            if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.annotationSelectorSettings.resizerBorderColor !== 'black' ? this.pdfViewer.annotationSelectorSettings.resizerBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor)) ? this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor : 'black';\n                options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.annotationSelectorSettings.resizerFillColor !== '#FF4081' ? this.pdfViewer.annotationSelectorSettings.resizerFillColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor)) ? this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor : 'FF4081';\n            }\n            else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.annotationSelectorSettings.resizerBorderColor !== 'black' ? this.pdfViewer.annotationSelectorSettings.resizerBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor)) ? this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor : 'black';\n                options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.annotationSelectorSettings.resizerFillColor !== '#FF4081' ? this.pdfViewer.annotationSelectorSettings.resizerFillColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor)) ? this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor : 'FF4081';\n            }\n            else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.annotationSelectorSettings.resizerBorderColor !== 'black' ? this.pdfViewer.annotationSelectorSettings.resizerBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor)) ? this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor : 'black';\n                options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.annotationSelectorSettings.resizerFillColor !== '#FF4081' ? this.pdfViewer.annotationSelectorSettings.resizerFillColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor)) ? this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor : 'FF4081';\n            }\n            else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.annotationSelectorSettings.resizerBorderColor !== 'black' ? this.pdfViewer.annotationSelectorSettings.resizerBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor)) ? this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor : 'black';\n                options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.annotationSelectorSettings.resizerFillColor !== '#FF4081' ? this.pdfViewer.annotationSelectorSettings.resizerFillColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor)) ? this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor : 'FF4081';\n            }\n            else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n                options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.annotationSelectorSettings.resizerBorderColor !== 'black' ? this.pdfViewer.annotationSelectorSettings.resizerBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor)) ? this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor : 'black';\n                options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.annotationSelectorSettings.resizerFillColor !== '#FF4081' ? this.pdfViewer.annotationSelectorSettings.resizerFillColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor)) ? this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor : 'FF4081';\n            }\n            else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.annotationSelectorSettings.resizerBorderColor !== 'black' ? this.pdfViewer.annotationSelectorSettings.resizerBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor)) ? this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor : 'black';\n                options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.annotationSelectorSettings.resizerFillColor !== '#FF4081' ? this.pdfViewer.annotationSelectorSettings.resizerFillColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor)) ? this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor : 'FF4081';\n            }\n            else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.annotationSelectorSettings.resizerBorderColor !== 'black' ? this.pdfViewer.annotationSelectorSettings.resizerBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor)) ? this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor : 'black';\n                options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.annotationSelectorSettings.resizerFillColor !== '#FF4081' ? this.pdfViewer.annotationSelectorSettings.resizerFillColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor)) ? this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor : 'FF4081';\n            }\n            else if ((type === 'Stamp' || type === 'Image') && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.annotationSelectorSettings.resizerBorderColor !== 'black' ? this.pdfViewer.annotationSelectorSettings.resizerBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor)) ? this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor : 'black';\n                options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.annotationSelectorSettings.resizerFillColor !== '#FF4081' ? this.pdfViewer.annotationSelectorSettings.resizerFillColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor)) ? this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor : 'FF4081';\n            }\n            else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.annotationSelectorSettings.resizerBorderColor !== 'black' ? this.pdfViewer.annotationSelectorSettings.resizerBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor)) ? this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor : 'black';\n                options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.annotationSelectorSettings.resizerFillColor !== '#FF4081' ? this.pdfViewer.annotationSelectorSettings.resizerFillColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor)) ? this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor : 'FF4081';\n            }\n            else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.annotationSelectorSettings.resizerBorderColor !== 'black' ? this.pdfViewer.annotationSelectorSettings.resizerBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor)) ? this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor : 'black';\n                options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.annotationSelectorSettings.resizerFillColor !== '#FF4081' ? this.pdfViewer.annotationSelectorSettings.resizerFillColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor)) ? this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor : 'FF4081';\n            }\n            else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n                options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.annotationSelectorSettings.resizerBorderColor !== 'black' ? this.pdfViewer.annotationSelectorSettings.resizerBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.perimeterSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor)) ? this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor : 'black';\n                options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.annotationSelectorSettings.resizerFillColor !== '#FF4081' ? this.pdfViewer.annotationSelectorSettings.resizerFillColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.perimeterSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor)) ? this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor : 'FF4081';\n            }\n            else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n                options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.annotationSelectorSettings.resizerBorderColor !== 'black' ? this.pdfViewer.annotationSelectorSettings.resizerBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.areaSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor)) ? this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor : 'black';\n                options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.annotationSelectorSettings.resizerFillColor !== '#FF4081' ? this.pdfViewer.annotationSelectorSettings.resizerFillColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.areaSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor)) ? this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor : 'FF4081';\n            }\n            else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n                options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.annotationSelectorSettings.resizerBorderColor !== 'black' ? this.pdfViewer.annotationSelectorSettings.resizerBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.volumeSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor)) ? this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor : 'black';\n                options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.annotationSelectorSettings.resizerFillColor !== '#FF4081' ? this.pdfViewer.annotationSelectorSettings.resizerFillColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.volumeSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor)) ? this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor : 'FF4081';\n            }\n            else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                options.stroke = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.annotationSelectorSettings.resizerBorderColor !== 'black' ? this.pdfViewer.annotationSelectorSettings.resizerBorderColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor)) ? this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor : 'black';\n                options.fill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.annotationSelectorSettings.resizerFillColor !== '#FF4081' ? this.pdfViewer.annotationSelectorSettings.resizerFillColor : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor)) ? this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor : 'FF4081';\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {DrawingElement} wrapper - Specified the drawing element.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n     * @param {Transforms} transform - Specified the transform value.\n     * @param {SelectorConstraints} selectorConstraints - Specified the selector constraints value.\n     * @param {boolean} canMask - Specified the is mask or not.\n     * @returns {void}\n     */\n    Drawing.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var newPoint;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX, y: pivotY - 25 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.identityMatrix)();\n            (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.rotateMatrix)(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, newPoint);\n        }\n        var options = (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.getBaseShapeAttributes)(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.opacity = 1;\n        options.fill = '#FF4081';\n        options.centerX = newPoint.x;\n        options.centerY = newPoint.y;\n        options.radius = 4;\n        options.angle = 0;\n        options.visible = true;\n        options.class = 'e-diagram-rotate-handle';\n        options.id = 'rotateThumb';\n        var checkBorder = this.shownBorder();\n        if (checkBorder) {\n            this.svgRenderer.drawCircle(canvas, options, _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.Rotate, { 'aria-label': 'Thumb to rotate the selected object' });\n        }\n        var circleHandle = canvas.querySelector('#' + options.id);\n        if (circleHandle) {\n            circleHandle.setAttribute('role', 'separator');\n        }\n    };\n    /**\n     * @private\n     * @param {DrawingElement} element - Specified the drawing element.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n     * @param {ThumbsConstraints} constraints - Specified the thumbs constraints element.\n     * @param {number} currentZoom - Specified the current zoom value.\n     * @param {boolean} canMask - Specified the is mask or not.\n     * @param {number} enableNode - Specified the node number.\n     * @param {boolean} nodeConstraints - Specified the node constraints or not.\n     * @param {boolean} isStamp - Specified is stamp or not.\n     * @param {boolean} isSticky - Specified is sticky or not.\n     * @param {boolean} isPath - Specified is path or not.\n     * @param {boolean} isFreeText - Specified is free text or not.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector settings value.\n     * @returns {void}\n     */\n    Drawing.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, canMask, enableNode, nodeConstraints, isStamp, isSticky, isPath, isFreeText, currentSelector) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        var transform = { scale: currentZoom, tx: 0, ty: 0 };\n        if (isStamp) {\n            this.renderPivotLine(element, canvas, transform);\n            this.renderRotateThumb(element, canvas, transform);\n        }\n        if (isFreeText) {\n            isStamp = true;\n        }\n        this.renderBorder(element, canvas, currentSelector, transform, enableNode, nodeConstraints, true, isSticky);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        var shapeType = this.pdfViewer.selectedItems.annotations.length > 0 ?\n            this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType :\n            this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n        var allowPermission = false;\n        if (!this.pdfViewer.formDesignerModule) {\n            var annotation = this.pdfViewer.selectedItems.annotations[0];\n            var allowedInteraction = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n            var isLock = this.pdfViewer.annotationModule.checkIsLockSettings(annotation);\n            if ((isLock || annotation.annotationSettings.isLock) && this.getAllowedInteractions(allowedInteraction)) {\n                allowPermission = true;\n            }\n            if (allowedInteraction[0] === 'Select') {\n                allowPermission = false;\n            }\n        }\n        var resizerLocation = this.getResizerLocation(shapeType, currentSelector);\n        if (resizerLocation < 1 || resizerLocation > 3) {\n            resizerLocation = 3;\n        }\n        var isNodeShape = false;\n        if (this.pdfViewer.selectedItems.annotations[0] && (this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Ellipse' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Radius' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Rectangle' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Ink')) {\n            isNodeShape = true;\n        }\n        if (!this.pdfViewer.viewerBase.checkSignatureFormField(element.id) && !nodeConstraints && !isSticky &&\n            !isPath && !allowPermission) {\n            if (isStamp || (isNodeShape && (nodeWidth >= 40 && nodeHeight >= 40) &&\n                (resizerLocation === 1 || resizerLocation === 3))) {\n                //Hide corners when the size is less than 40\n                this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, true, constraints & _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-pv-diagram-resize-handle e-northwest', currentSelector);\n                this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, true, constraints & _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-pv-diagram-resize-handle e-northeast', currentSelector);\n                this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, true, constraints & _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-pv-diagram-resize-handle e-southwest', currentSelector);\n                this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, true, constraints & _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-pv-diagram-resize-handle e-southeast', currentSelector);\n            }\n            if ((!isStamp && !isNodeShape) || (isNodeShape && (resizerLocation === 2 ||\n                resizerLocation === 3 ||\n                (!(nodeWidth >= 40 && nodeHeight >= 40) && resizerLocation === 1)))) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, true, constraints & _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-pv-diagram-resize-handle e-north', currentSelector);\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, true, constraints & _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-pv-diagram-resize-handle e-south', currentSelector);\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, true, constraints & _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-pv-diagram-resize-handle e-west', currentSelector);\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, true, constraints & _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-pv-diagram-resize-handle e-east', currentSelector);\n            }\n        }\n        if ((shapeType === 'Textbox' || shapeType === 'Checkbox' || shapeType === 'RadioButton' || shapeType === 'SignatureField' || shapeType === 'InitialField' || shapeType === 'DropdownList' ||\n            shapeType === 'ListBox' || shapeType === 'PasswordField')) {\n            this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, true, constraints & _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-pv-diagram-resize-handle e-north', currentSelector);\n            this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, true, constraints & _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-pv-diagram-resize-handle e-south', currentSelector);\n            this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, true, constraints & _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-pv-diagram-resize-handle e-west', currentSelector);\n            this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, true, constraints & _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-pv-diagram-resize-handle e-east', currentSelector);\n        }\n    };\n    Drawing.prototype.getAllowedInteractions = function (allowedInteraction) {\n        if (allowedInteraction && allowedInteraction.length > 0) {\n            for (var i = 0; i < allowedInteraction.length; i++) {\n                if (allowedInteraction[0] !== 'None' && allowedInteraction[parseInt(i.toString(), 10)] === 'Resize') {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation base model.\n     * @param {any} currentSelector - Specified the current selector value\n     * @returns {AnnotationResizerLocation} - Returns the annotation resizer location value.\n     */\n    Drawing.prototype.getResizerLocation = function (type, currentSelector) {\n        var resizerLocation;\n        {\n            if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n                var annotationSelector = JSON.parse(currentSelector);\n                resizerLocation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.resizerLocation) ||\n                    annotationSelector.resizerLocation === 3 ? 3 : annotationSelector.resizerLocation;\n            }\n            else if (currentSelector && currentSelector !== '') {\n                resizerLocation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(currentSelector.resizerLocation) ||\n                    currentSelector.resizerLocation === 3 ? 3 : currentSelector.resizerLocation;\n            }\n            else {\n                var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n                resizerLocation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSelector.resizerLocation) ||\n                    annotationSelector.resizerLocation === 3 ? 3 : annotationSelector.resizerLocation;\n                if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                    resizerLocation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation) ||\n                        this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation ===\n                            3 ? 3 : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings)\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation))\n                        ? this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation : 3;\n                }\n                else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                    resizerLocation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation) ||\n                        this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation ===\n                            3 ? 3 : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings)\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation))\n                        ? this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation : 3;\n                }\n                else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                    resizerLocation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation) ||\n                        this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation ===\n                            3 ? 3 : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings)\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation))\n                        ? this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation : 3;\n                }\n                else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                    resizerLocation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation) ||\n                        this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation ===\n                            3 ? 3 : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings)\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation))\n                        ? this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation : 3;\n                }\n                else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                    resizerLocation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation) ||\n                        this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation ===\n                            3 ? 3 : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings)\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation))\n                        ? this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation : 3;\n                }\n                else if (type === 'Distance') {\n                    resizerLocation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation) ||\n                        this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation ===\n                            3 ? 3 : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings)\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation))\n                        ? this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation : 3;\n                }\n                else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                    resizerLocation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation) ||\n                        this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation ===\n                            3 ? 3 : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings)\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation))\n                        ? this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation : 3;\n                }\n                else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                    resizerLocation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation) ||\n                        this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation ===\n                            3 ? 3 : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings)\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation))\n                        ? this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation : 3;\n                }\n                else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                    resizerLocation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation) ||\n                        this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation ===\n                            3 ? 3 : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings)\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation))\n                        ? this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation : 3;\n                }\n                else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                    resizerLocation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.\n                        annotationSelectorSettings.resizerLocation) || this.pdfViewer.handWrittenSignatureSettings.\n                        annotationSelectorSettings.resizerLocation === 3 ? 3 : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.\n                        pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings)\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.handWrittenSignatureSettings.\n                            annotationSelectorSettings.resizerLocation)) ? this.pdfViewer.\n                        handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation : 3;\n                }\n                else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                    resizerLocation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation)\n                        || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation ===\n                            3 ? 3 : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings)\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation))\n                        ? this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation : 3;\n                }\n            }\n            return resizerLocation;\n        }\n    };\n    /**\n     * @private\n     * @param {DrawingElement} element - Specified the drawing element.\n     * @param {HTMLCanvasElement | SVGAElement} canvas - Specified the canvas element.\n     * @param {Transforms} transform - Specified the transform values.\n     * @param {SelectorConstraints} selectorConstraints - Specified the selector constraints value.\n     * @param {boolean} canMask - Specified is mask value or not.\n     * @returns {void}\n     */\n    Drawing.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = true;\n        if (canMask) {\n            visible = false;\n        }\n        var options = (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.getBaseShapeAttributes)(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        var checkBorder = this.shownBorder();\n        if (checkBorder) {\n            this.svgRenderer.drawLine(canvas, options);\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} selector - Specified the annotation element.\n     * @param {HTMLCanvasElement | SVGAElement} canvas - Specified the canvas element.\n     * @param {SelectorConstraints} constraints - Specified the selector constraints value.\n     * @param {Transforms} transform - Specified the transform values.\n     * @param {boolean} connectedSource - Specified is connected source or not.\n     * @param {boolean} connectedTarget - Specified is connected target or not.\n     * @param {boolean} isSegmentEditing - Specified is segment editing or not.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n     * @returns {void}\n     */\n    Drawing.prototype.renderEndPointHandle = function (selector, canvas, constraints, transform, connectedSource, connectedTarget, isSegmentEditing, currentSelector) {\n        transform = transform || { tx: 0, ty: 0, scale: 1 };\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var checkBorder = this.shownBorder();\n        if (checkBorder) {\n            for (i = 0; i < selector.vertexPoints.length; i++) {\n                var segment = selector.vertexPoints[parseInt(i.toString(), 10)];\n                this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.x, segment.y, canvas, true, constraints & _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i, 'e-pv-diagram-resize-handle', currentSelector);\n            }\n        }\n        var leaderCount = 0;\n        if (selector.shapeAnnotationType === 'Distance') {\n            for (i = 0; i < selector.wrapper.children.length; i++) {\n                var segment = selector.wrapper.children[parseInt(i.toString(), 10)];\n                var newPoint1 = void 0;\n                var angle = _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.Point.findAngle(selector.sourcePoint, selector.targetPoint);\n                if (segment.id.indexOf('leader') > -1) {\n                    var center = selector.wrapper.children[0].bounds.center;\n                    if (leaderCount === 0) {\n                        newPoint1 = { x: selector.sourcePoint.x, y: selector.sourcePoint.y - selector.leaderHeight };\n                        center = sourcePoint;\n                    }\n                    else {\n                        newPoint1 = { x: selector.targetPoint.x, y: selector.targetPoint.y - selector.leaderHeight };\n                        center = targetPoint;\n                    }\n                    var matrix = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.identityMatrix)();\n                    (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.rotateMatrix)(matrix, angle, center.x, center.y);\n                    if (checkBorder) {\n                        var rotatedPoint = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, { x: newPoint1.x, y: newPoint1.y });\n                        this.renderCircularHandle(('leaderThumb_' + (i + 1)), wrapper, rotatedPoint.x, rotatedPoint.y, canvas, true, constraints & _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i, 'e-pv-diagram-resize-handle', currentSelector);\n                    }\n                    leaderCount++;\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Drawing.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.pdfViewer.selectedItems;\n        selectorModel.init(this);\n    };\n    /**\n     * @private\n     * @param {string[]} objArray - Specified the annotation object array.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {boolean} multipleSelection - Specified the multiple selection or not.\n     * @param {boolean} preventUpdate - Specified the prevent update or not.\n     * @returns {void}\n     */\n    Drawing.prototype.select = function (objArray, currentSelector, multipleSelection, preventUpdate) {\n        var selectorModel = this.pdfViewer.selectedItems;\n        var _loop_1 = function (i) {\n            var obj = this_1.pdfViewer.nameTable[objArray[parseInt(i.toString(), 10)]];\n            if (obj.formFieldAnnotationType && this_1.pdfViewer.designerMode) {\n                selectorModel.formFields.push(obj);\n                this_1.initSelectorWrapper();\n                selectorModel.wrapper.children.push(obj.wrapper);\n                this_1.renderSelector(obj.pageIndex, currentSelector, obj, true);\n            }\n            else if (obj && !obj.formFieldAnnotationType) {\n                if (!(obj instanceof _selector__WEBPACK_IMPORTED_MODULE_3__.Selector) && obj.wrapper.visible && this_1.pdfViewer.annotationModule) {\n                    var annotationSettings = void 0;\n                    if (obj.annotationSettings) {\n                        annotationSettings = obj.annotationSettings;\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSettings) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSettings.isLock)) {\n                            annotationSettings.isLock = JSON.parse(annotationSettings.isLock);\n                        }\n                    }\n                    else if (!obj.formFieldAnnotationType) {\n                        annotationSettings = this_1.pdfViewer.annotationModule.findAnnotationSettings(obj, true);\n                        obj.annotationSettings = annotationSettings;\n                    }\n                    var isLock = !obj.formFieldAnnotationType ? (annotationSettings ? annotationSettings.isLock : false) : false;\n                    if (annotationSettings && annotationSettings.isLock && this_1.pdfViewer.annotationModule.checkAllowedInteractions('Select', obj)) {\n                        isLock = false;\n                    }\n                    var isSign = obj.shapeAnnotationType === 'Path' || obj.shapeAnnotationType === 'SignatureText'\n                        || obj.shapeAnnotationType === 'SignatureImage';\n                    var isReadOnly_1 = false;\n                    this_1.pdfViewer.formFieldCollection.filter(function (field) { return field.id === obj.id.split('_')[0]; })\n                        .forEach(function (field) { return isReadOnly_1 = field.isReadonly; });\n                    if (!(isLock || (isReadOnly_1 && isSign))) {\n                        selectorModel.annotations.push(obj);\n                        var checkBorder = this_1.shownBorder();\n                        if (checkBorder) {\n                            this_1.initSelectorWrapper();\n                            selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                            selectorModel.wrapper.children.push(obj.wrapper);\n                            if (!preventUpdate) {\n                                this_1.renderSelector(obj.pageIndex, currentSelector, obj, true);\n                            }\n                        }\n                    }\n                }\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < objArray.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * @private\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {number} pageIndex - Specified the page index value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {PdfAnnotationBaseModel} helper - Specified the helper object.\n     * @returns {boolean} - boolean value\n     */\n    Drawing.prototype.dragSelectedObjects = function (tx, ty, pageIndex, currentSelector, helper) {\n        var obj = this.pdfViewer.selectedItems;\n        this.drag(obj, tx, ty, currentSelector, helper);\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {PdfAnnotationBaseModel} helper - Specified the helper object.\n     * @returns {void}\n     */\n    Drawing.prototype.drag = function (obj, tx, ty, currentSelector, helper) {\n        if (obj instanceof _selector__WEBPACK_IMPORTED_MODULE_3__.Selector) {\n            if (obj.annotations.length) {\n                for (var _i = 0, _a = obj.annotations; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty, currentSelector, helper);\n                    this.renderSelector(node.pageIndex, currentSelector, helper);\n                }\n            }\n            else if (obj.formFields.length) {\n                for (var _b = 0, _c = obj.formFields; _b < _c.length; _b++) {\n                    var node = _c[_b];\n                    this.drag(node, tx, ty, currentSelector, helper);\n                    this.renderSelector(node.pageIndex, currentSelector, helper);\n                }\n            }\n        }\n        else {\n            this.dragAnnotation(obj, tx, ty);\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @returns {void}\n     */\n    Drawing.prototype.dragAnnotation = function (obj, tx, ty) {\n        //bug (EJ2-62649) : fixed an issue with difficulty on moving/ resizing free text annotation that added in edge of viewer\n        var newDiff = this.moveInsideViewer(obj, tx, ty);\n        obj.wrapper.offsetX += newDiff.tx;\n        obj.wrapper.offsetY += newDiff.ty;\n        if ((0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.isLineShapes)(obj) || obj.shapeAnnotationType === 'Polygon') {\n            if (obj.wrapper.children.length) {\n                var nodes = obj.wrapper.children;\n                for (var i = 0; i < nodes.length; i++) {\n                    nodes[parseInt(i.toString(), 10)].offsetX += tx;\n                    nodes[parseInt(i.toString(), 10)].offsetY += ty;\n                }\n            }\n            this.dragControlPoint(obj, tx, ty, true);\n        }\n        this.nodePropertyChange(obj, { bounds: { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY } });\n        obj.wrapper.measureChildren = false;\n        var canvas = this.pdfViewer.viewerBase.getAnnotationCanvas('_annotationCanvas_', obj.pageIndex);\n        this.pdfViewer.renderDrawing(canvas, obj.pageIndex);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {boolean} preventUpdate - Specified the prevent update or not.\n     * @param {number} segmentNumber - Specified the segment value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.pdfViewer.nameTable[obj.id];\n        for (var i = 0; i < connector.vertexPoints.length; i++) {\n            (connector.vertexPoints[parseInt(i.toString(), 10)]).x += tx;\n            (connector.vertexPoints[parseInt(i.toString(), 10)]).y += ty;\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} connector - Specified the connector object.\n     * @returns {void}\n     */\n    Drawing.prototype.updateEndPoint = function (connector) {\n        this.nodePropertyChange(connector, { vertexPoints: connector.vertexPoints });\n        this.renderSelector(connector.pageIndex);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} actualObject - Specified the actual annotaion object.\n     * @param {PdfAnnotationBaseModel} node - Specified the node annotation object.\n     * @returns {void}\n     */\n    Drawing.prototype.nodePropertyChange = function (actualObject, node) {\n        var updateConnector = false;\n        var i;\n        var update;\n        if (node.bounds) {\n            if (node.bounds.width !== undefined) {\n                actualObject.bounds.width = actualObject.wrapper.width = node.bounds.width;\n            }\n            if (node.bounds.height !== undefined) {\n                actualObject.bounds.height = actualObject.wrapper.height = node.bounds.height;\n            }\n            if (node.bounds.x !== undefined) {\n                actualObject.bounds.x = node.bounds.x - (actualObject.bounds.width * 0.5);\n                actualObject.wrapper.offsetX = node.bounds.x;\n                update = true;\n                updateConnector = true;\n            }\n            if (node.bounds.y !== undefined) {\n                actualObject.bounds.y = node.bounds.y - (actualObject.bounds.height * 0.5);\n                actualObject.wrapper.offsetY = node.bounds.y;\n                update = true;\n                updateConnector = true;\n            }\n            if (node.leaderHeight !== undefined) {\n                actualObject.leaderHeight = node.leaderHeight;\n                this.updateConnector(actualObject, actualObject.vertexPoints);\n            }\n            if (actualObject.wrapper.children.length) {\n                var children = actualObject.wrapper.children;\n                for (var i_1 = 0; i_1 < children.length; i_1++) {\n                    if (children[parseInt(i_1.toString(), 10)].id) {\n                        var names = children[parseInt(i_1.toString(), 10)].id.split('_');\n                        if (names.length && (names.indexOf('perimeter') > -1 || names.indexOf('radius') > -1)) {\n                            this.setNodePosition(children[parseInt(i_1.toString(), 10)], actualObject);\n                        }\n                        else if (names.length && (names.indexOf('srcDec') > -1)) {\n                            children[parseInt(i_1.toString(), 10)].offsetX = actualObject.vertexPoints[0].x;\n                            children[parseInt(i_1.toString(), 10)].offsetY = actualObject.vertexPoints[0].y;\n                        }\n                        else if (names.length && names.indexOf('tarDec') > -1) {\n                            children[parseInt(i_1.toString(), 10)].offsetX =\n                                actualObject.vertexPoints[actualObject.vertexPoints.length - 1].x;\n                            children[parseInt(i_1.toString(), 10)].offsetY =\n                                actualObject.vertexPoints[actualObject.vertexPoints.length - 1].y;\n                        }\n                        else if (names.length && (names.indexOf('stamp') > -1)) {\n                            var ratio = 0;\n                            var heightRatio = 2;\n                            if (actualObject.wrapper.width !== undefined && actualObject.wrapper.height !== undefined) {\n                                ratio = 20;\n                                heightRatio = 2.9;\n                            }\n                            if (actualObject.isDynamicStamp) {\n                                children[parseInt(i_1.toString(), 10)].width = actualObject.bounds.width - ratio;\n                                children[parseInt(i_1.toString(), 10)].height = (actualObject.bounds.height / 2) - ratio;\n                                var element = children[1];\n                                var annotationSettings = this.pdfViewer.stampSettings ?\n                                    this.pdfViewer.stampSettings : this.pdfViewer.annotationSettings;\n                                if (annotationSettings && (annotationSettings.maxHeight ||\n                                    annotationSettings.maxWidth) && (actualObject.bounds.height > 60)) {\n                                    if (ratio !== 0) {\n                                        element.style.fontSize = (actualObject.bounds.width / ratio);\n                                    }\n                                    else {\n                                        element.style.fontSize = (actualObject.wrapper.bounds.width / 20);\n                                    }\n                                }\n                                else {\n                                    if (ratio !== 0) {\n                                        element.style.fontSize = this.fontSizeCalculation(actualObject, element, (actualObject.bounds.width - 20));\n                                    }\n                                    else {\n                                        element.style.fontSize = this.\n                                            fontSizeCalculation(actualObject, element, (actualObject.wrapper.bounds.width - 20));\n                                    }\n                                }\n                                if (ratio !== 0) {\n                                    element.margin.bottom = -(children[parseInt(i_1.toString(), 10)].height / 2);\n                                }\n                            }\n                            else {\n                                children[parseInt(i_1.toString(), 10)].width = actualObject.bounds.width - ratio;\n                                children[parseInt(i_1.toString(), 10)].height = actualObject.bounds.height - ratio;\n                            }\n                            children[parseInt(i_1.toString(), 10)].offsetX = actualObject.wrapper.offsetX;\n                            children[parseInt(i_1.toString(), 10)].offsetY = actualObject.wrapper.offsetX;\n                            children[parseInt(i_1.toString(), 10)].isDirt = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.sourceDecoraterShapes !== undefined) {\n            actualObject.sourceDecoraterShapes = node.sourceDecoraterShapes;\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (node.isReadonly !== undefined && actualObject.shapeAnnotationType === 'FreeText') {\n            actualObject.isReadonly = node.isReadonly;\n        }\n        if (node.annotationSelectorSettings !== undefined) {\n            actualObject.annotationSelectorSettings = node.annotationSelectorSettings;\n        }\n        if (node.taregetDecoraterShapes !== undefined) {\n            actualObject.taregetDecoraterShapes = node.taregetDecoraterShapes;\n            update = true;\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (node.fillColor !== undefined) {\n            actualObject.fillColor = node.fillColor;\n            actualObject.wrapper.children[0].style.fill = node.fillColor;\n            if ((actualObject.enableShapeLabel || actualObject.measureType) && actualObject.wrapper && actualObject.wrapper.children) {\n                var children = actualObject.wrapper.children;\n                for (var i_2 = 0; i_2 < children.length; i_2++) {\n                    if (children[parseInt(i_2.toString(), 10)].textNodes) {\n                        if (actualObject.enableShapeLabel) {\n                            actualObject.labelFillColor = node.fillColor;\n                            children[parseInt(i_2.toString(), 10)].style.fill = node.fillColor;\n                        }\n                        if (actualObject.measureType) {\n                            children[parseInt(i_2.toString(), 10)].style.fill = node.fillColor;\n                        }\n                    }\n                }\n            }\n            update = true;\n        }\n        if (actualObject.enableShapeLabel && node.labelFillColor !== undefined) {\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                var children = actualObject.wrapper.children;\n                for (var i_3 = 0; i_3 < children.length; i_3++) {\n                    if (children[parseInt(i_3.toString(), 10)].textNodes) {\n                        actualObject.labelFillColor = node.labelFillColor;\n                        children[parseInt(i_3.toString(), 10)].style.fill = node.labelFillColor;\n                    }\n                }\n            }\n        }\n        if (node.opacity !== undefined) {\n            if (actualObject.shapeAnnotationType === 'Stamp' || actualObject.shapeAnnotationType === 'FreeText') {\n                actualObject.wrapper.children[1].style.opacity = node.opacity;\n                if (actualObject.wrapper.children[2]) {\n                    actualObject.wrapper.children[2].style.opacity = node.opacity;\n                }\n            }\n            else {\n                if (actualObject.shapeAnnotationType === 'StickyNotes') {\n                    this.pdfViewer.nameTable[actualObject.annotName].wrapper.children[0].style.opacity = node.opacity;\n                }\n            }\n            actualObject.opacity = node.opacity;\n            actualObject.wrapper.children[0].style.opacity = node.opacity;\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                var children = actualObject.wrapper.children;\n                for (var i_4 = 0; i_4 < children.length; i_4++) {\n                    if (children[parseInt(i_4.toString(), 10)].textNodes) {\n                        children[parseInt(i_4.toString(), 10)].style.opacity = node.labelOpacity;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (actualObject.enableShapeLabel && node.labelOpacity !== undefined) {\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                var children = actualObject.wrapper.children;\n                for (var i_5 = 0; i_5 < children.length; i_5++) {\n                    if (children[parseInt(i_5.toString(), 10)].textNodes) {\n                        children[parseInt(i_5.toString(), 10)].style.opacity = node.labelOpacity;\n                    }\n                }\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            actualObject.rotateAngle = node.rotateAngle;\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.strokeColor !== undefined) {\n            actualObject.strokeColor = node.strokeColor;\n            actualObject.wrapper.children[0].style.strokeColor = node.strokeColor;\n            update = true;\n            if (actualObject.shapeAnnotationType === 'Radius' && actualObject.wrapper.children[1]) {\n                actualObject.wrapper.children[1].style.strokeColor = node.strokeColor;\n            }\n            updateConnector = true;\n        }\n        if (node.fontColor !== undefined) {\n            actualObject.fontColor = node.fontColor;\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                var children = actualObject.wrapper.children;\n                children[1].style.color = node.fontColor;\n                if (actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                }\n                else {\n                    children[1].horizontalAlignment = 'Auto';\n                }\n            }\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                var children = actualObject.wrapper.children;\n                for (var i_6 = 0; i_6 < children.length; i_6++) {\n                    if (children[parseInt(i_6.toString(), 10)].textNodes) {\n                        children[parseInt(i_6.toString(), 10)].style.color = node.fontColor;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.fontFamily !== undefined) {\n            actualObject.fontFamily = node.fontFamily;\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                var children = actualObject.wrapper.children;\n                children[1].style.fontFamily = node.fontFamily;\n            }\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                var children = actualObject.wrapper.children;\n                for (var i_7 = 0; i_7 < children.length; i_7++) {\n                    if (children[parseInt(i_7.toString(), 10)].textNodes) {\n                        children[parseInt(i_7.toString(), 10)].style.fontFamily = node.fontFamily;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.fontSize !== undefined) {\n            if ((actualObject.shapeAnnotationType === 'FreeText' || actualObject.shapeAnnotationType === 'SignatureText') && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                var children = actualObject.wrapper.children;\n                children[1].style.fontSize = node.fontSize;\n                if (actualObject.shapeAnnotationType === 'SignatureText') {\n                    actualObject.wrapper.children[1].bounds.width = actualObject.bounds.width;\n                    actualObject.wrapper.children[1].desiredSize.width = actualObject.bounds.width;\n                    actualObject.wrapper.children[1].actualSize.width = actualObject.bounds.width;\n                    children[1].horizontalAlignment = 'Center';\n                    children[1].verticalAlignment = 'Center';\n                    children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n                }\n            }\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                var children = actualObject.wrapper.children;\n                for (var i_8 = 0; i_8 < children.length; i_8++) {\n                    if (children[parseInt(i_8.toString(), 10)].textNodes) {\n                        children[parseInt(i_8.toString(), 10)].style.fontSize = node.fontSize;\n                    }\n                }\n            }\n            if (this.pdfViewer.enableToolbar && this.pdfViewer.toolbarModule) {\n                this.pdfViewer.toolbarModule.annotationToolbarModule.updateFontSizeInIcon(node.fontSize);\n            }\n            else if (this.pdfViewer.annotationModule && actualObject.fontSize !== node.fontSize) {\n                this.pdfViewer.annotationModule.handleFontSizeUpdate(node.fontSize);\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.font !== undefined) {\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                var children = actualObject.wrapper.children;\n                if (node.font.isBold !== undefined) {\n                    children[1].style.bold = node.font.isBold;\n                    actualObject.font.isBold = node.font.isBold;\n                }\n                if (node.font.isItalic !== undefined) {\n                    children[1].style.italic = node.font.isItalic;\n                    actualObject.font.isItalic = node.font.isItalic;\n                }\n                if (node.font.isUnderline !== undefined) {\n                    if (node.font.isUnderline) {\n                        actualObject.font.isStrikeout = false;\n                    }\n                    if (node.font.isUnderline === true) {\n                        children[1].style.textDecoration = 'Underline';\n                    }\n                    else {\n                        if (!node.font.isStrikeout) {\n                            children[1].style.textDecoration = 'None';\n                        }\n                    }\n                    actualObject.font.isUnderline = node.font.isUnderline;\n                }\n                if (node.font.isStrikeout !== undefined) {\n                    if (node.font.isStrikeout) {\n                        actualObject.font.isUnderline = false;\n                    }\n                    if (node.font.isStrikeout === true) {\n                        children[1].style.textDecoration = 'LineThrough';\n                    }\n                    else {\n                        if (!node.font.isUnderline) {\n                            children[1].style.textDecoration = 'None';\n                        }\n                    }\n                    actualObject.font.isStrikeout = node.font.isStrikeout;\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.textAlign !== undefined) {\n            var currentAnnotation = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.selectedItems.annotations) && this.pdfViewer.selectedItems.annotations.length > 0) ?\n                this.pdfViewer.selectedItems.annotations[0] : actualObject;\n            var clonedObject = (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.cloneObject)(currentAnnotation);\n            var redoClonedObject = (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.cloneObject)(currentAnnotation);\n            if (actualObject.textAlign !== node.textAlign) {\n                actualObject.textAlign = node.textAlign;\n                redoClonedObject.textAlign = node.textAlign;\n                if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                    var children = actualObject.wrapper.children;\n                    children[1].style.textAlign = node.textAlign;\n                    if (children[1].childNodes.length === 1) {\n                        if (actualObject.textAlign === 'Justify') {\n                            children[1].horizontalAlignment = 'Left';\n                            children[1].setOffsetWithRespectToBounds(0.01, 0, null);\n                        }\n                        else if (actualObject.textAlign === 'Right') {\n                            children[1].horizontalAlignment = 'Right';\n                            children[1].setOffsetWithRespectToBounds(1, 0, null);\n                        }\n                        else if (actualObject.textAlign === 'Left') {\n                            children[1].horizontalAlignment = 'Left';\n                            children[1].setOffsetWithRespectToBounds(0.01, 0, null);\n                        }\n                        else if (actualObject.textAlign === 'Center') {\n                            children[1].horizontalAlignment = 'Center';\n                            children[1].setOffsetWithRespectToBounds(0.51, 0, null);\n                        }\n                    }\n                    else if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n                        children[1].horizontalAlignment = 'Center';\n                    }\n                    else {\n                        children[1].horizontalAlignment = 'Auto';\n                    }\n                    if (!this.pdfViewer.annotation.isUndoRedoAction) {\n                        this.pdfViewer.annotation.addAction(this.pdfViewer.viewerBase.getActivePage(false), null, currentAnnotation, 'textAlign', '', clonedObject, redoClonedObject);\n                    }\n                }\n                update = true;\n                updateConnector = true;\n            }\n        }\n        if (node.thickness !== undefined) {\n            actualObject.thickness = node.thickness;\n            actualObject.wrapper.children[0].style.strokeWidth = node.thickness;\n            if (actualObject.shapeAnnotationType === 'Line' || actualObject.shapeAnnotationType === 'LineWidthArrowHead') {\n                for (var i_9 = 0; i_9 < actualObject.wrapper.children.length; i_9++) {\n                    var child = actualObject.wrapper.children[parseInt(i_9.toString(), 10)];\n                    if (child.id.includes('srcDec') || child.id.includes('tarDec')) {\n                        child.width = 12 * node.thickness;\n                        child.height = 12 * node.thickness;\n                    }\n                }\n            }\n            if (actualObject.shapeAnnotationType === 'Radius' && actualObject.wrapper.children[1]) {\n                actualObject.wrapper.children[1].style.strokeWidth = node.thickness;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.borderDashArray !== undefined) {\n            actualObject.borderDashArray = node.borderDashArray;\n            actualObject.wrapper.children[0].style.strokeDashArray = node.borderDashArray;\n        }\n        if (node.borderStyle !== undefined) {\n            actualObject.borderStyle = node.borderStyle;\n        }\n        if (node.author !== undefined) {\n            actualObject.author = node.author;\n        }\n        if (node.modifiedDate !== undefined) {\n            actualObject.modifiedDate = node.modifiedDate;\n        }\n        if (node.subject !== undefined) {\n            actualObject.subject = node.subject;\n        }\n        if (node.vertexPoints !== undefined) {\n            actualObject.vertexPoints = node.vertexPoints;\n            this.pdfViewer.nameTable[actualObject.id].vertexPoints = node.vertexPoints;\n            this.updateConnector(actualObject, node.vertexPoints);\n        }\n        if (node.leaderHeight !== undefined && actualObject.shapeAnnotationType !== 'Polygon') {\n            actualObject.leaderHeight = node.leaderHeight;\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (node.notes !== undefined) {\n            actualObject.notes = node.notes;\n        }\n        if (node.annotName !== undefined) {\n            actualObject.annotName = node.annotName;\n        }\n        if (actualObject.shapeAnnotationType === 'Distance') {\n            for (i = 0; i < actualObject.wrapper.children.length; i++) {\n                var segment = actualObject.wrapper.children[parseInt(i.toString(), 10)];\n                var points = (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.getConnectorPoints)(actualObject);\n                if (segment.id.indexOf('leader1') > -1) {\n                    this.setLineDistance(actualObject, points, segment, false);\n                }\n                if (segment.id.indexOf('leader2') > -1) {\n                    this.setLineDistance(actualObject, points, segment, true);\n                }\n            }\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (actualObject.shapeAnnotationType === 'Polygon' && node.vertexPoints) {\n            actualObject.data = (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.getPolygonPath)(actualObject.vertexPoints);\n            var path = actualObject.wrapper.children[0];\n            path.data = actualObject.data;\n            path.canMeasurePath = true;\n        }\n        if ((0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.isLineShapes)(actualObject)) {\n            for (var i_10 = 0; i_10 < actualObject.wrapper.children.length; i_10++) {\n                var childElement = actualObject.wrapper.children[parseInt(i_10.toString(), 10)];\n                if (!childElement.textNodes) {\n                    (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.setElementStype)(actualObject, actualObject.wrapper.children[parseInt(i_10.toString(), 10)]);\n                }\n                if (actualObject.enableShapeLabel === true) {\n                    if (actualObject.wrapper.children[parseInt(i_10.toString(), 10)] instanceof _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.TextElement) {\n                        actualObject.wrapper.children[parseInt(i_10.toString(), 10)].style.fill = actualObject.labelFillColor;\n                    }\n                    if ((actualObject.wrapper.children[parseInt(i_10.toString(), 10)] instanceof _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.PathElement && actualObject.measureType === 'Perimeter')) {\n                        actualObject.wrapper.children[parseInt(i_10.toString(), 10)].style.fill = 'transparent';\n                    }\n                }\n                else {\n                    if ((actualObject.wrapper.children[parseInt(i_10.toString(), 10)] instanceof _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.PathElement && actualObject.measureType === 'Perimeter') || actualObject.wrapper.children[parseInt(i_10.toString(), 10)] instanceof _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.TextElement) {\n                        actualObject.wrapper.children[parseInt(i_10.toString(), 10)].style.fill = 'transparent';\n                    }\n                }\n            }\n        }\n        if (actualObject && (actualObject.shapeAnnotationType === 'FreeText' || actualObject.enableShapeLabel === true)) {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                var children = actualObject.wrapper.children;\n                for (var i_11 = 0; i_11 < children.length; i_11++) {\n                    if (children[parseInt(i_11.toString(), 10)].textNodes) {\n                        if (actualObject.shapeAnnotationType === 'FreeText') {\n                            if (node.dynamicText) {\n                                children[parseInt(i_11.toString(), 10)].content = node.dynamicText;\n                                actualObject.dynamicText = node.dynamicText;\n                            }\n                            else {\n                                children[parseInt(i_11.toString(), 10)].content = actualObject.dynamicText;\n                            }\n                            children[parseInt(i_11.toString(), 10)].width = actualObject.bounds.width;\n                        }\n                        else if (actualObject.enableShapeLabel === true && actualObject.measureType) {\n                            if (node.labelContent) {\n                                children[parseInt(i_11.toString(), 10)].content = node.labelContent;\n                                actualObject.labelContent = node.labelContent;\n                            }\n                            else {\n                                children[parseInt(i_11.toString(), 10)].content = actualObject.labelContent;\n                            }\n                            actualObject.notes = children[parseInt(i_11.toString(), 10)].content;\n                        }\n                        else if (actualObject.enableShapeLabel === true) {\n                            if (node.labelContent) {\n                                children[parseInt(i_11.toString(), 10)].content = node.labelContent;\n                                actualObject.labelContent = node.labelContent;\n                            }\n                            else {\n                                children[parseInt(i_11.toString(), 10)].content = actualObject.labelContent;\n                            }\n                            actualObject.notes = children[parseInt(i_11.toString(), 10)].content;\n                        }\n                        children[parseInt(i_11.toString(), 10)].isDirt = true;\n                    }\n                    /** set text node width less than the parent */\n                }\n            }\n        }\n        if (actualObject && actualObject.shapeAnnotationType === 'SignatureText' && actualObject.wrapper) {\n            if (actualObject.wrapper.children && actualObject.wrapper.children.length > 1) {\n                actualObject.wrapper.children[1].isDirt = true;\n            }\n        }\n        if (actualObject && actualObject.shapeAnnotationType === 'FreeText' && this.pdfViewer.annotationModule.stickyNotesAnnotationModule.textFromCommentPanel) {\n            actualObject.wrapper.width = undefined;\n            actualObject.wrapper.height = undefined;\n            var pageHeight = this.pdfViewer.viewerBase.pageSize[actualObject.pageIndex].height;\n            actualObject.wrapper.measureFreeText(new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height), pageHeight);\n            this.pdfViewer.annotationModule.stickyNotesAnnotationModule.textFromCommentPanel = false;\n        }\n        else {\n            var pageHeight = this.pdfViewer.viewerBase.pageSize[actualObject.pageIndex].height;\n            actualObject.wrapper.measureFreeText(new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height), pageHeight);\n        }\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (actualObject && actualObject.formFieldAnnotationType) {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                var children = actualObject.wrapper.children[0];\n                children.actualSize.width = actualObject.wrapper.desiredSize.width;\n                children.actualSize.height = actualObject.wrapper.desiredSize.height;\n            }\n        }\n        if (actualObject && actualObject.shapeAnnotationType === 'FreeText' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(actualObject.subject)) {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                var children = actualObject.wrapper.children;\n                if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                }\n                else if (children[1].childNodes.length === 1) {\n                    if (actualObject.textAlign === 'Justify') {\n                        children[1].horizontalAlignment = 'Left';\n                        children[1].setOffsetWithRespectToBounds(0.01, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Right') {\n                        children[1].horizontalAlignment = 'Right';\n                        children[1].setOffsetWithRespectToBounds(1, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Left') {\n                        children[1].horizontalAlignment = 'Left';\n                        children[1].setOffsetWithRespectToBounds(0.01, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Center') {\n                        children[1].horizontalAlignment = 'Center';\n                        children[1].setOffsetWithRespectToBounds(0.51, 0, null);\n                    }\n                }\n                for (var i_12 = 0; i_12 < children.length; i_12++) {\n                    if (children[parseInt(i_12.toString(), 10)].textNodes && children[parseInt(i_12.toString(), 10)].textNodes.length > 0) {\n                        children[parseInt(i_12.toString(), 10)].isDirt = true;\n                        var childNodeHeight = children[parseInt(i_12.toString(), 10)].textNodes.length *\n                            children[parseInt(i_12.toString(), 10)].textNodes[0].dy;\n                        var heightDiff = actualObject.bounds.height - childNodeHeight;\n                        if (heightDiff > 0 && heightDiff < children[parseInt(i_12.toString(), 10)].textNodes[0].dy) {\n                            childNodeHeight = childNodeHeight + children[parseInt(i_12.toString(), 10)].textNodes[0].dy;\n                        }\n                        if (childNodeHeight > actualObject.bounds.height) {\n                            var contString = '';\n                            for (var index = 0; index < children[parseInt(i_12.toString(), 10)].textNodes.length; index++) {\n                                contString = contString + children[parseInt(i_12.toString(), 10)].\n                                    textNodes[parseInt(index.toString(), 10)].text;\n                            }\n                            children[parseInt(i_12.toString(), 10)].content = contString;\n                        }\n                    }\n                    /** set text node width less than the parent */\n                    children[parseInt(i_12.toString(), 10)].width = actualObject.bounds.width;\n                }\n            }\n            var pageHeight = this.pdfViewer.viewerBase.pageSize[actualObject.pageIndex].height;\n            actualObject.wrapper.measureFreeText(new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height), pageHeight);\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        }\n        this.pdfViewer.renderDrawing(undefined, actualObject.pageIndex);\n        if (actualObject && actualObject.shapeAnnotationType === 'FreeText') {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                var children = actualObject.wrapper.children;\n                if (children[1].childNodes.length === 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Left';\n                    children[1].setOffsetWithRespectToBounds(0.5, 0, null);\n                }\n                else if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                    children[1].setOffsetWithRespectToBounds(0, 0, null);\n                }\n            }\n        }\n    };\n    Drawing.prototype.fontSizeCalculation = function (actualObject, element, boundsWidth) {\n        var canvas = this.pdfViewer.viewerBase.getAnnotationCanvas('_annotationCanvas_', actualObject.pageIndex);\n        var context = canvas.getContext('2d');\n        var textwidth = 0;\n        var newsize = 0;\n        var fontStyle = '';\n        if (element.style.italic && element.style.bold) {\n            fontStyle = 'bold italic ';\n        }\n        else if (element.style.bold) {\n            fontStyle = 'bold ';\n        }\n        else if (element.style.italic) {\n            fontStyle = 'italic ';\n        }\n        while (boundsWidth > textwidth) {\n            context.font = fontStyle + newsize + 'px ' + element.style.fontFamily;\n            textwidth = context.measureText(actualObject.dynamicText).width;\n            newsize += 0.1;\n        }\n        newsize -= 0.1;\n        return newsize;\n    };\n    Drawing.prototype.setLineDistance = function (actualObject, points, segment, leader) {\n        var node1;\n        if (leader) {\n            node1 = (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.initLeader)(actualObject, points[1], points[0], leader);\n        }\n        else {\n            node1 = (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.initLeader)(actualObject, points[0], points[1], leader);\n        }\n        segment.data = node1.data;\n        segment.offsetX = node1.offsetX;\n        segment.offsetY = node1.offsetY;\n        segment.rotateAngle = node1.rotateAngle;\n        segment.width = node1.width;\n        segment.height = node1.height;\n        segment.pivot = node1.pivot;\n        segment.canMeasurePath = true;\n        segment.isDirt = true;\n    };\n    /**\n     * @private\n     * @param {number} sx - Specified the sx value.\n     * @param {number} sy - Specified the sy value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.pdfViewer.selectedItems;\n        return this.scale(obj, sx, sy, pivot);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | SelectorModel} obj - Specified the annotaion object.\n     * @param {number} sx - Specified the sx value.\n     * @param {number} sy - Specified the sy value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof _selector__WEBPACK_IMPORTED_MODULE_3__.Selector) {\n            if (obj.annotations && obj.annotations.length) {\n                for (var _i = 0, _a = obj.annotations; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.scaleAnnotation(node, sx, sy, pivot, obj);\n                }\n            }\n            else if (obj.formFields && obj.formFields.length) {\n                for (var _b = 0, _c = obj.formFields; _b < _c.length; _b++) {\n                    var node = _c[_b];\n                    checkBoundaryConstraints = this.scaleAnnotation(node, sx, sy, pivot, obj);\n                }\n            }\n        }\n        else {\n            checkBoundaryConstraints = this.scaleAnnotation(obj, sx, sy, pivot, undefined);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * @private\n     * @param {number} sw - Specified the sw value.\n     * @param {number} sh - Specified the sh value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @param {IElement} obj - Specified the annotation object.\n     * @param {DrawingElement} element - Specified the annotation element.\n     * @param {IElement} refObject - Specified the annotation reference object.\n     * @returns {void}\n     */\n    Drawing.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (!(0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.isLineShapes)(obj)) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.wrapper.actualSize.width;\n                sh = height / node.wrapper.actualSize.height;\n            }\n            var matrix = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.identityMatrix)();\n            if (!refObject) {\n                refObject = obj;\n            }\n            var refWrapper = refObject.wrapper;\n            (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.rotateMatrix)(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.scaleMatrix)(matrix, sw, sh, pivot.x, pivot.y);\n            (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.rotateMatrix)(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (!(0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.isLineShapes)(obj)) {\n                var node = obj;\n                var newPosition = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                if (width > 0) {\n                    node.wrapper.width = width;\n                    node.wrapper.offsetX = newPosition.x;\n                }\n                if (height > 0) {\n                    node.wrapper.height = height;\n                    node.wrapper.offsetY = newPosition.y;\n                }\n                this.nodePropertyChange(obj, {\n                    bounds: { width: node.wrapper.width, height: node.wrapper.height, x: node.wrapper.offsetX, y: node.wrapper.offsetY }\n                });\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} sw - Specified the sw value.\n     * @param {number} sh - Specified the sh value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @param {IElement} refObject - Specified the reference object.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.scaleAnnotation = function (obj, sw, sh, pivot, refObject) {\n        var node = this.pdfViewer.nameTable[obj.id];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = this.getShapePoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined) {\n            this.scaleObject(sw, sh, refPoint, node, element, refObject);\n        }\n        var constraints = this.checkBoundaryConstraints(undefined, undefined, obj.pageIndex, obj.wrapper.bounds);\n        if (!constraints) {\n            this.scaleObject(1 / sw, 1 / sh, refPoint, node, element, refObject);\n            //bug (EJ2-62649) : fixed an issue with difficulty on moving/ resizing free text annotation that added in edge of viewer\n            if (obj.shapeAnnotationType === 'FreeText' && (obj.id.slice(0, 9) === 'free_text' || obj.id.slice(0, 8) === 'freetext')) {\n                var newDiff = this.moveInsideViewer(obj);\n                this.nodePropertyChange(obj, {\n                    bounds: { width: obj.wrapper.width, height: obj.wrapper.height, x: obj.wrapper.offsetX + newDiff.tx,\n                        y: obj.wrapper.offsetY + newDiff.ty }\n                });\n            }\n        }\n        return constraints;\n    };\n    //bug (EJ2-62649) : Implemnted method for calculating optimal bound for free text annotation that outside viewer container\n    Drawing.prototype.moveInsideViewer = function (obj, tx, ty) {\n        tx = tx ? tx : 0;\n        ty = ty ? ty : 0;\n        if (obj.shapeAnnotationType === 'FreeText' && (obj.id.slice(0, 9) === 'free_text' || obj.id.slice(0, 8) === 'freetext')) {\n            var canvas = this.pdfViewer.viewerBase.getAnnotationCanvas('_annotationCanvas_', obj.pageIndex);\n            if (canvas) {\n                var bounds = obj.wrapper.bounds;\n                var width = canvas.clientWidth / this.pdfViewer.viewerBase.getZoomFactor();\n                var height = canvas.clientHeight / this.pdfViewer.viewerBase.getZoomFactor();\n                var right = bounds.right;\n                var left = bounds.left;\n                var top_1 = bounds.top;\n                var bottom = bounds.bottom;\n                if (!(right + tx <= width - 3 && left + tx >= 1 && bottom + ty <= height - 3 && top_1 + ty >= 1)) {\n                    var txNew = 0;\n                    var tyNew = 0;\n                    if (!(right <= width - 3)) {\n                        txNew = width - right - 3;\n                    }\n                    if (!(left >= 1)) {\n                        txNew = txNew - left + 1;\n                    }\n                    if (!(bottom <= height - 3)) {\n                        tyNew = height - bottom - 3;\n                    }\n                    if (!(top_1 >= 1)) {\n                        tyNew = tyNew - top_1 + 1;\n                    }\n                    if (txNew !== 0) {\n                        tx = txNew;\n                    }\n                    if (tyNew !== 0) {\n                        ty = tyNew;\n                    }\n                }\n            }\n        }\n        return { tx: tx, ty: ty };\n    };\n    /**\n     * @private\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {number} pageIndex - Specified the page index value.\n     * @param {Rect} nodeBounds - Specified the node bounds value.\n     * @param {boolean} isStamp - Specified the annotation is stamp or not.\n     * @param {boolean} isSkip - Specified the annotaion is skip or not.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.checkBoundaryConstraints = function (tx, ty, pageIndex, nodeBounds, isStamp, isSkip) {\n        var selectorBounds = !nodeBounds ? this.pdfViewer.selectedItems.wrapper.bounds : undefined;\n        var bounds = nodeBounds;\n        var canvas = this.pdfViewer.viewerBase.getAnnotationCanvas('_annotationCanvas_', pageIndex);\n        var heightDifference = 1;\n        if (canvas) {\n            var width = canvas.clientWidth / this.pdfViewer.viewerBase.getZoomFactor();\n            var height = canvas.clientHeight / this.pdfViewer.viewerBase.getZoomFactor();\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (isStamp) {\n                heightDifference = 50;\n                if (this.pdfViewer.viewerBase.eventArgs && this.pdfViewer.viewerBase.eventArgs.source) {\n                    if (this.RestrictStamp(this.pdfViewer.viewerBase.eventArgs.source)) {\n                        return false;\n                    }\n                }\n            }\n            if (right <= width - 3 && left >= 1 && bottom <= height - 3 && top_2 >= heightDifference) {\n                return true;\n            }\n            if (isSkip) {\n                heightDifference = 10;\n                if (right <= width - 10 && left >= 10 && bottom <= height - 10 && top_2 >= heightDifference) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Drawing.prototype.RestrictStamp = function (source) {\n        if (source && source.pageIndex !== undefined && this.pdfViewer.viewerBase.activeElements &&\n            source.pageIndex !== this.pdfViewer.viewerBase.activeElements.activePageID) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @param {DrawingElement} shapeElement - Specified the shape element.\n     * @returns {Rect} - Returns the rectangle object.\n     */\n    Drawing.prototype.getShapeBounds = function (shapeElement) {\n        var shapeBounds = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.Rect();\n        var shapeCorners = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.cornersPointsBeforeRotation)(shapeElement);\n        var shapeMiddleLeft = shapeCorners.middleLeft;\n        var shapeTopCenter = shapeCorners.topCenter;\n        var shapeBottomCenter = shapeCorners.bottomCenter;\n        var shapeMiddleRight = shapeCorners.middleRight;\n        var shapeTopLeft = shapeCorners.topLeft;\n        var shapeTopRight = shapeCorners.topRight;\n        var shapeBottomLeft = shapeCorners.bottomLeft;\n        var shapeBottomRight = shapeCorners.bottomRight;\n        shapeElement.corners = {\n            topLeft: shapeTopLeft, topCenter: shapeTopCenter, topRight: shapeTopRight, middleLeft: shapeMiddleLeft,\n            middleRight: shapeMiddleRight, bottomLeft: shapeBottomLeft, bottomCenter: shapeBottomCenter, bottomRight: shapeBottomRight\n        };\n        if (shapeElement.rotateAngle !== 0 || shapeElement.parentTransform !== 0) {\n            var matrix = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.identityMatrix)();\n            (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.rotateMatrix)(matrix, shapeElement.rotateAngle + shapeElement.parentTransform, shapeElement.offsetX, shapeElement.offsetY);\n            shapeElement.corners.topLeft = shapeTopLeft = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, shapeTopLeft);\n            shapeElement.corners.topCenter = shapeTopCenter = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, shapeTopCenter);\n            shapeElement.corners.topRight = shapeTopRight = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, shapeTopRight);\n            shapeElement.corners.middleLeft = shapeMiddleLeft = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, shapeMiddleLeft);\n            shapeElement.corners.middleRight = shapeMiddleRight = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, shapeMiddleRight);\n            shapeElement.corners.bottomLeft = shapeBottomLeft = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, shapeBottomLeft);\n            shapeElement.corners.bottomCenter = shapeBottomCenter = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, shapeBottomCenter);\n            shapeElement.corners.bottomRight = shapeBottomRight = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, shapeBottomRight);\n            //Set corners based on rotate angle\n        }\n        shapeBounds = _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.Rect.toBounds([shapeTopLeft, shapeTopRight, shapeBottomLeft, shapeBottomRight]);\n        shapeElement.corners.left = shapeBounds.left;\n        shapeElement.corners.right = shapeBounds.right;\n        shapeElement.corners.top = shapeBounds.top;\n        shapeElement.corners.bottom = shapeBounds.bottom;\n        shapeElement.corners.center = shapeBounds.center;\n        shapeElement.corners.width = shapeBounds.width;\n        shapeElement.corners.height = shapeBounds.height;\n        return shapeBounds;\n    };\n    /**\n     * @private\n     * @param {number} x - Specified the x value.\n     * @param {number} y - Specified the y value.\n     * @param {number} w - Specified the w value.\n     * @param {number} h - Specified the h value.\n     * @param {number} angle - Specified the angle value.\n     * @param {number} offsetX - Specified the offset x value.\n     * @param {number} offsetY - Specified the offset y value.\n     * @param {PointModel} cornerPoint - Specified the corner point value.\n     * @returns {PointModel} - Returns the point model.\n     */\n    Drawing.prototype.getShapePoint = function (x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n        var pivotPoint = { x: 0, y: 0 };\n        var transformMatrix = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.identityMatrix)();\n        (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.rotateMatrix)(transformMatrix, angle, offsetX, offsetY);\n        switch (cornerPoint.x) {\n            case 1:\n                switch (cornerPoint.y) {\n                    case 1:\n                        pivotPoint = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(transformMatrix, ({ x: x + w, y: y + h }));\n                        break;\n                    case 0:\n                        pivotPoint = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(transformMatrix, ({ x: x + w, y: y }));\n                        break;\n                    case 0.5:\n                        pivotPoint = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(transformMatrix, ({ x: x + w, y: y + h / 2 }));\n                        break;\n                }\n                break;\n            case 0:\n                switch (cornerPoint.y) {\n                    case 0.5:\n                        pivotPoint = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(transformMatrix, ({ x: x, y: y + h / 2 }));\n                        break;\n                    case 1:\n                        pivotPoint = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(transformMatrix, ({ x: x, y: y + h }));\n                        break;\n                    case 0:\n                        pivotPoint = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(transformMatrix, ({ x: x, y: y }));\n                        break;\n                }\n                break;\n            case 0.5:\n                switch (cornerPoint.y) {\n                    case 0:\n                        pivotPoint = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(transformMatrix, ({ x: x + w / 2, y: y }));\n                        break;\n                    case 0.5:\n                        pivotPoint = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(transformMatrix, ({ x: x + w / 2, y: y + h / 2 }));\n                        break;\n                    case 1:\n                        pivotPoint = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(transformMatrix, ({ x: x + w / 2, y: y + h }));\n                        break;\n                }\n                break;\n        }\n        return { x: pivotPoint.x, y: pivotPoint.y };\n    };\n    /**\n     * @private\n     * @param {string} endPoint - Specified the end point value.\n     * @param {IElement} obj - Specified the annotaion object.\n     * @param {PointModel} point - Specified the annotation points.\n     * @param {PointModel} segment - Specified the annotaion segment.\n     * @param {IElement} target - Specified the target element.\n     * @param {string} targetPortId - Specified the target port id.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId, currentSelector) {\n        var selectorModel;\n        var connector;\n        var tx;\n        var ty;\n        if (obj instanceof _selector__WEBPACK_IMPORTED_MODULE_3__.Selector) {\n            selectorModel = obj;\n            connector = selectorModel.annotations[0];\n        }\n        else {\n            connector = obj;\n        }\n        point = { x: point.x / this.pdfViewer.viewerBase.getZoomFactor(), y: point.y / this.pdfViewer.viewerBase.getZoomFactor() };\n        if (this.checkBoundaryConstraints(undefined, undefined, connector.pageIndex, connector.wrapper.bounds)) {\n            if (connector.shapeAnnotationType === 'Distance') {\n                var leader = (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.isLeader)(connector, endPoint);\n                if (endPoint === 'Leader0') {\n                    if (this.pdfViewer.viewerBase.tool instanceof _index__WEBPACK_IMPORTED_MODULE_0__.LineTool) {\n                        connector.vertexPoints[0].x = point.x;\n                        connector.vertexPoints[0].y = point.y;\n                    }\n                    else {\n                        tx = point.x - leader.point.x;\n                        ty = point.y - leader.point.y;\n                        connector.vertexPoints[0].x += tx;\n                        connector.vertexPoints[0].y += ty;\n                    }\n                }\n                else if (endPoint === 'Leader1') {\n                    var length_2 = connector.vertexPoints.length - 1;\n                    if (this.pdfViewer.viewerBase.tool instanceof _index__WEBPACK_IMPORTED_MODULE_0__.LineTool) {\n                        connector.vertexPoints[parseInt(length_2.toString(), 10)].x = point.x;\n                        connector.vertexPoints[parseInt(length_2.toString(), 10)].y = point.y;\n                    }\n                    else {\n                        tx = point.x - leader.point.x;\n                        ty = point.y - leader.point.y;\n                        connector.vertexPoints[parseInt(length_2.toString(), 10)].x += tx;\n                        connector.vertexPoints[parseInt(length_2.toString(), 10)].y += ty;\n                    }\n                }\n                else {\n                    var angle = _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.Point.findAngle(connector.sourcePoint, connector.targetPoint);\n                    var center = obj.wrapper.children[0].bounds.center;\n                    var matrix = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.identityMatrix)();\n                    (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.rotateMatrix)(matrix, -angle, center.x, center.y);\n                    var rotatedPoint = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix, { x: point.x, y: point.y });\n                    if (endPoint.split('_')[0] === 'ConnectorSegmentPoint') {\n                        var matrix_1 = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.identityMatrix)();\n                        (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.rotateMatrix)(matrix_1, -angle, center.x, center.y);\n                        var rotatedPoint1 = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix_1, connector.vertexPoints[0]);\n                        var rotatedPoint2 = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix_1, connector.vertexPoints[connector.vertexPoints.length - 1]);\n                        ty = rotatedPoint.y - rotatedPoint1.y;\n                        if (connector.leaderHeight === 0 && connector.leaderHeight != null) {\n                            connector.leaderHeight = this.pdfViewer.distanceSettings.leaderLength;\n                        }\n                        else {\n                            connector.leaderHeight += ty;\n                            rotatedPoint1.y += ty;\n                            rotatedPoint2.y += ty;\n                            var matrix_2 = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.identityMatrix)();\n                            (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.rotateMatrix)(matrix_2, angle, center.x, center.y);\n                            connector.vertexPoints[0] = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix_2, rotatedPoint1);\n                            connector.vertexPoints[connector.vertexPoints.length - 1] = (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.transformPointByMatrix)(matrix_2, rotatedPoint2);\n                        }\n                    }\n                }\n            }\n            else if (endPoint.split('_')[0] === 'ConnectorSegmentPoint') {\n                var i = Number(endPoint.split('_')[1]);\n                tx = point.x - connector.vertexPoints[parseInt(i.toString(), 10)].x;\n                ty = point.y - connector.vertexPoints[parseInt(i.toString(), 10)].y;\n                connector.vertexPoints[parseInt(i.toString(), 10)].x += tx;\n                connector.vertexPoints[parseInt(i.toString(), 10)].y += ty;\n                if (connector.vertexPoints.length > 2 && obj.measureType !== 'Perimeter') {\n                    if (parseFloat(endPoint.split('_')[1]) === 0) {\n                        connector.vertexPoints[connector.vertexPoints.length - 1].x += tx;\n                        connector.vertexPoints[connector.vertexPoints.length - 1].y += ty;\n                    }\n                    else if (parseFloat(endPoint.split('_')[1]) === connector.vertexPoints.length - 1) {\n                        connector.vertexPoints[0].x += tx;\n                        connector.vertexPoints[0].y += ty;\n                    }\n                }\n            }\n            this.nodePropertyChange(connector, { vertexPoints: connector.vertexPoints });\n            this.renderSelector(connector.pageIndex, currentSelector);\n        }\n        this.pdfViewer.renderDrawing();\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the y value.\n     * @param {number} i - Specified the index value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.dragSourceEnd = function (obj, tx, ty, i) {\n        var connector = this.pdfViewer.nameTable[obj.id];\n        connector.vertexPoints[parseInt(i.toString(), 10)].x += tx;\n        connector.vertexPoints[parseInt(i.toString(), 10)].y += ty;\n        this.pdfViewer.renderDrawing();\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} connector - Specified the connector object.\n     * @param {PointModel[]} points - Specified the points value.\n     * @returns {void}\n     */\n    Drawing.prototype.updateConnector = function (connector, points) {\n        var targetPoint;\n        connector.vertexPoints = points;\n        (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.updateSegmentElement)(connector, points, connector.wrapper.children[0]);\n        var anglePoint = connector.vertexPoints;\n        //  points = this.clipDecorators(connector, points);\n        var element = connector.wrapper.children[0];\n        element.canMeasurePath = true;\n        for (var i = 0; i < connector.wrapper.children.length; i++) {\n            element = connector.wrapper.children[parseInt(i.toString(), 10)];\n            if (connector.shapeAnnotationType !== 'Polygon') {\n                if (element.id.indexOf('srcDec') > -1) {\n                    (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.updateDecoratorElement)(connector, element, points[0], anglePoint[1], true);\n                }\n                targetPoint = connector.targetPoint;\n                if (element.id.indexOf('tarDec') > -1) {\n                    (0,_connector_util__WEBPACK_IMPORTED_MODULE_5__.updateDecoratorElement)(connector, element, points[points.length - 1], anglePoint[anglePoint.length - 2], false);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {object} - Returns the object.\n     */\n    Drawing.prototype.copy = function () {\n        var annotationSettings;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(this.pdfViewer.annotationModule)) {\n            annotationSettings = this.pdfViewer.annotationModule.findAnnotationSettings(this.pdfViewer.selectedItems.annotations[0]);\n        }\n        if (((this.pdfViewer.formDesignerModule && !this.pdfViewer.formDesigner.isPropertyDialogOpen) ||\n            this.pdfViewer.annotationModule) && (this.pdfViewer.designerMode || this.pdfViewer.enableAnnotation) &&\n            (this.pdfViewer.selectedItems.formFields.length !== 0 || (this.pdfViewer.selectedItems.annotations.length !== 0 &&\n                !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(annotationSettings) && !annotationSettings.isLock))) {\n            this.pdfViewer.clipboardData.pasteIndex = 1;\n            this.pdfViewer.clipboardData.clipObject = this.copyObjects();\n            this.copiedElementID = this.pdfViewer.clipboardData.clipObject[0].id;\n        }\n        var isSearchboxDialogOpen;\n        var searchBoxId = document.getElementById(this.pdfViewer.element.id + '_search_box');\n        if (searchBoxId) {\n            isSearchboxDialogOpen = searchBoxId.style.display !== 'none';\n        }\n        if (this.pdfViewer.formDesigner && this.pdfViewer.formDesigner.isPropertyDialogOpen || isSearchboxDialogOpen) {\n            this.pdfViewer.clipboardData.clipObject = {};\n        }\n        return this.pdfViewer.clipboardData.clipObject;\n    };\n    /**\n     * @private\n     * @returns {object[]} - Returns the object array.\n     */\n    Drawing.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.pdfViewer.clipboardData.childTable = {};\n        if (this.pdfViewer.selectedItems.annotations.length > 0) {\n            selectedItems = this.pdfViewer.selectedItems.annotations;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.cloneObject)((selectedItems[parseInt(j.toString(), 10)]));\n                obj.push(element);\n            }\n        }\n        if (this.pdfViewer.selectedItems.formFields.length > 0) {\n            selectedItems = this.pdfViewer.selectedItems.formFields;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.cloneObject)((selectedItems[parseInt(j.toString(), 10)]));\n                obj.push(element);\n            }\n        }\n        if (this.pdfViewer.clipboardData.pasteIndex === 0) {\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.pdfViewer.nameTable[item.id]) {\n                    if (!item.formFieldAnnotationType) {\n                        if (item.annotName) {\n                            this.pdfViewer.annotationModule.deleteAnnotationById(item.annotName);\n                        }\n                        else {\n                            this.pdfViewer.annotationModule.deleteAnnotation();\n                        }\n                    }\n                    else {\n                        this.pdfViewer.clearSelection(item.pageIndex);\n                        this.pdfViewer.formDesignerModule.deleteFormField(item.id);\n                    }\n                }\n            }\n            //this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    Drawing.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.pdfViewer.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.cloneObject)(obj[parseInt(i.toString(), 10)]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    Drawing.prototype.isWithinBounds = function (pageCurrentRect, events) {\n        var clientX = events.clientX, clientY = events.clientY;\n        var left = pageCurrentRect.left, right = pageCurrentRect.right, top = pageCurrentRect.top, bottom = pageCurrentRect.bottom;\n        return left < clientX && clientX < right && top < clientY && clientY < bottom;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel[]} obj - Specified the annotation object.\n     * @param {number} index - Specified the annotation index.\n     * @returns {void}\n     */\n    Drawing.prototype.paste = function (obj, index) {\n        var zoomfactor = this.pdfViewer.viewerBase.getZoomFactor();\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        var fieldId;\n        this.isPasted = true;\n        if (obj || this.pdfViewer.clipboardData.clipObject) {\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.pdfViewer.clipboardData.clipObject;\n            if (copiedItems) {\n                var objectTable = {};\n                if (this.pdfViewer.clipboardData.pasteIndex !== 0) {\n                    this.pdfViewer.clearSelection(index);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isNullOrUndefined)(copiedItems[0])) {\n                    if (this.pdfViewer.currentPageNumber === copiedItems[0].pageIndex + 1) {\n                        for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                            var copy = copiedItems_1[_i];\n                            fieldId = copy.id;\n                            copy.id += (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.randomId)();\n                            var fieldName = this.splitFormFieldName(copy);\n                            var maxNumber = 0; // this.pdfViewer.formFieldCollection.length;\n                            if (this.pdfViewer.formDesigner) {\n                                this.pdfViewer.formDesigner.setFormFieldIndex();\n                                maxNumber = this.pdfViewer.formDesigner.formFieldIndex;\n                                copy.name = fieldName + maxNumber;\n                            }\n                            objectTable[copy.id] = copy;\n                        }\n                        for (var j = 0; j < copiedItems.length; j++) {\n                            var copy = copiedItems[parseInt(j.toString(), 10)];\n                            var pageDiv = this.pdfViewer.viewerBase.getElement('_pageDiv_' + copy.pageIndex);\n                            var events = event;\n                            var pageCurrentRect = pageDiv.getBoundingClientRect();\n                            if (events && !events.clientX && !events.clientY) {\n                                events = { clientX: this.pdfViewer.viewerBase.mouseLeft, clientY: this.pdfViewer.viewerBase.mouseTop };\n                            }\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_6__.isBlazor)()) {\n                                events = this.pdfViewer.viewerBase.mouseDownEvent;\n                            }\n                            if ((0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.isLineShapes)(copy)) {\n                                this.calculateCopyPosition(copy, pageDiv, events);\n                            }\n                            else {\n                                if (pageDiv) {\n                                    if ((pageCurrentRect.right - events.clientX) < copy.bounds.width * zoomfactor) {\n                                        copy.bounds.x = (pageDiv.clientWidth - copy.bounds.width * zoomfactor) / zoomfactor;\n                                    }\n                                    else {\n                                        copy.bounds.x = (events.clientX - pageCurrentRect.left) / zoomfactor;\n                                    }\n                                    if ((pageCurrentRect.bottom - events.clientY) > copy.bounds.height * zoomfactor) {\n                                        copy.bounds.y = (events.clientY - pageCurrentRect.top) / zoomfactor;\n                                    }\n                                    else {\n                                        copy.bounds.y = (pageDiv.clientHeight - copy.bounds.height * zoomfactor) / zoomfactor;\n                                    }\n                                }\n                            }\n                            if (this.isWithinBounds(pageCurrentRect, events)) {\n                                var newNode = (0,_drawing_util__WEBPACK_IMPORTED_MODULE_4__.cloneObject)(copy);\n                                if (this.pdfViewer.viewerBase.contextMenuModule.previousAction !== 'Cut') {\n                                    newNode.id += (0,_syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_2__.randomId)();\n                                    if (this.pdfViewer.annotationModule && newNode.shapeAnnotationType !== 'HandWrittenSignature') {\n                                        newNode.annotName = newNode.id;\n                                        this.pdfViewer.annotationModule.stickyNotesAnnotationModule.\n                                            updateAnnotationCollection(newNode, copiedItems[0], false);\n                                    }\n                                    if (newNode.shapeAnnotationType === 'SignatureText' || newNode.shapeAnnotationType === 'HandWrittenSignature' || newNode.shapeAnnotationType === 'SignatureImage') {\n                                        this.pdfViewer.viewerBase.signatureModule.storeSignatureData(newNode.pageIndex, newNode);\n                                    }\n                                    if (!newNode.formFieldAnnotationType && newNode.shapeAnnotationType !== 'SignatureText' && newNode.shapeAnnotationType !== 'HandWrittenSignature' && newNode.shapeAnnotationType !== 'SignatureImage') {\n                                        this.pdfViewer.annotation.addAction(this.pdfViewer.viewerBase.getActivePage(false), null, newNode, 'Addition', '', newNode, newNode);\n                                    }\n                                }\n                                else {\n                                    if (this.pdfViewer.annotationModule) {\n                                        this.pdfViewer.annotationModule.stickyNotesAnnotationModule.\n                                            updateAnnotationCollection(newNode, copiedItems[0], true);\n                                    }\n                                    if (newNode.shapeAnnotationType === 'SignatureText' || newNode.shapeAnnotationType === 'HandWrittenSignature' || newNode.shapeAnnotationType === 'SignatureImage') {\n                                        this.pdfViewer.viewerBase.signatureModule.storeSignatureData(newNode.pageIndex, newNode);\n                                    }\n                                    if (!newNode.formFieldAnnotationType && newNode.shapeAnnotationType !== 'SignatureText' && newNode.shapeAnnotationType !== 'HandWrittenSignature' && newNode.shapeAnnotationType !== 'SignatureImage') {\n                                        this.pdfViewer.annotation.addAction(this.pdfViewer.viewerBase.getActivePage(false), null, newNode, 'Addition', '', newNode, newNode);\n                                    }\n                                }\n                                var addedAnnot = this.add(newNode);\n                                if (this.pdfViewer.formDesigner && addedAnnot.formFieldAnnotationType && this.pdfViewer.annotation) {\n                                    this.pdfViewer.annotation.addAction(this.pdfViewer.viewerBase.getActivePage(true), null, addedAnnot, 'Addition', '', addedAnnot, addedAnnot);\n                                }\n                                if ((newNode.shapeAnnotationType === 'FreeText' || newNode.enableShapeLabel) && addedAnnot) {\n                                    this.nodePropertyChange(addedAnnot, {});\n                                }\n                                if (addedAnnot.formFieldAnnotationType && addedAnnot.pageIndex === index) {\n                                    this.pdfViewer.formFieldCollection.push(addedAnnot);\n                                    // eslint-disable-next-line max-len\n                                    var formField = {\n                                        id: addedAnnot.id, name: addedAnnot.name,\n                                        value: addedAnnot.value,\n                                        type: addedAnnot.formFieldAnnotationType,\n                                        isReadOnly: addedAnnot.isReadonly, fontFamily: addedAnnot.fontFamily,\n                                        fontSize: addedAnnot.fontSize, fontStyle: addedAnnot.fontStyle,\n                                        color: addedAnnot.color,\n                                        backgroundColor: addedAnnot.backgroundColor,\n                                        alignment: addedAnnot.alignment,\n                                        visibility: addedAnnot.visibility,\n                                        maxLength: addedAnnot.maxLength,\n                                        isRequired: addedAnnot.isRequired,\n                                        isPrint: addedAnnot.isPrint, isSelected: addedAnnot.isSelected,\n                                        isChecked: addedAnnot.isChecked,\n                                        tooltip: addedAnnot.tooltip,\n                                        bounds: addedAnnot.bounds,\n                                        thickness: addedAnnot.thickness, borderColor: addedAnnot.borderColor,\n                                        signatureIndicatorSettings: addedAnnot.signatureIndicatorSettings,\n                                        insertSpaces: addedAnnot.insertSpaces,\n                                        isMultiline: addedAnnot.isMultiline,\n                                        isTransparent: addedAnnot.isTransparent,\n                                        options: addedAnnot.options, pageIndex: addedAnnot.pageIndex,\n                                        pageNumber: addedAnnot.pageNumber,\n                                        rotateAngle: addedAnnot.rotateAngle,\n                                        signatureType: addedAnnot.signatureType,\n                                        zIndex: addedAnnot.zIndex,\n                                        selectedIndex: addedAnnot.selectedIndex\n                                    };\n                                    if (addedAnnot.options &&\n                                        addedAnnot.options.length > 0) {\n                                        formField.options = addedAnnot.options;\n                                    }\n                                    this.pdfViewer.formFieldCollections.push(formField);\n                                    this.pdfViewer.formDesigner.drawHTMLContent(addedAnnot.formFieldAnnotationType, addedAnnot.wrapper.children[0], addedAnnot, addedAnnot.pageIndex, this.pdfViewer, fieldId);\n                                }\n                                this.pdfViewer.select([newNode.id], this.pdfViewer.annotationSelectorSettings);\n                                if (!addedAnnot.formFieldAnnotationType) {\n                                    this.pdfViewer.annotationModule.triggerAnnotationAddEvent(newNode);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            this.pdfViewer.renderDrawing(undefined, index);\n            this.pdfViewer.clipboardData.pasteIndex++;\n        }\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    };\n    Drawing.prototype.splitFormFieldName = function (obj) {\n        var field = null;\n        if (obj) {\n            switch (obj.formFieldAnnotationType) {\n                case 'Textbox':\n                    field = 'Textbox';\n                    break;\n                case 'PasswordField':\n                    field = 'Password';\n                    break;\n                case 'Checkbox':\n                    field = 'Check Box';\n                    break;\n                case 'RadioButton':\n                    field = 'Radio Button';\n                    break;\n                case 'DropdownList':\n                    field = 'Dropdown';\n                    break;\n                case 'ListBox':\n                    field = 'List Box';\n                    break;\n                case 'SignatureField':\n                    field = 'Signature';\n                    break;\n                case 'InitialField':\n                    field = 'Initial';\n                    break;\n            }\n        }\n        return field;\n    };\n    Drawing.prototype.calculateCopyPosition = function (copy, pageDiv, events) {\n        var zoomfactor = this.pdfViewer.viewerBase.getZoomFactor();\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        for (var i = 0; i < copy.vertexPoints.length; i++) {\n            if (pageDiv) {\n                if (i === 0) {\n                    var pageCurrentRect = pageDiv.getBoundingClientRect();\n                    x1 = copy.vertexPoints[parseInt(i.toString(), 10)].x;\n                    y1 = copy.vertexPoints[parseInt(i.toString(), 10)].y;\n                    copy.vertexPoints[parseInt(i.toString(), 10)].x = (events.clientX - pageCurrentRect.left) / zoomfactor;\n                    copy.vertexPoints[parseInt(i.toString(), 10)].y = (events.clientY - pageCurrentRect.top) / zoomfactor;\n                    x2 = copy.vertexPoints[parseInt(i.toString(), 10)].x;\n                    y2 = copy.vertexPoints[parseInt(i.toString(), 10)].y;\n                }\n                else {\n                    copy.vertexPoints[parseInt(i.toString(), 10)].x += x2 - x1;\n                    copy.vertexPoints[parseInt(i.toString(), 10)].y += y2 - y1;\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the annotaion index.\n     * @returns {void}\n     */\n    Drawing.prototype.cut = function (index) {\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        if (this.pdfViewer.annotationModule) {\n            this.pdfViewer.annotationModule.removedAnnotationCollection = [];\n        }\n        if (((this.pdfViewer.formDesignerModule && !this.pdfViewer.formDesigner.isPropertyDialogOpen) ||\n            this.pdfViewer.selectedItems.annotations.length > 0) && (this.pdfViewer.designerMode ||\n            this.pdfViewer.selectedItems.annotations.length > 0) && (this.pdfViewer.selectedItems.formFields.length !== 0 ||\n            this.pdfViewer.selectedItems.annotations.length !== 0)) {\n            this.pdfViewer.clipboardData.pasteIndex = 0;\n            this.pdfViewer.clipboardData.clipObject = this.copyObjects();\n            this.pdfViewer.renderDrawing(undefined, index);\n            this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n            this.copiedElementID = this.pdfViewer.clipboardData.clipObject[0].id;\n        }\n        var isSearchboxDialogOpen;\n        var searchBoxId = document.getElementById(this.pdfViewer.element.id + '_search_box');\n        if (searchBoxId) {\n            isSearchboxDialogOpen = searchBoxId.style.display !== 'none';\n        }\n        if (this.pdfViewer.formDesigner && this.pdfViewer.formDesigner.isPropertyDialogOpen || isSearchboxDialogOpen) {\n            this.pdfViewer.clipboardData.clipObject = {};\n        }\n    };\n    /**\n     * @private\n     * @param {object[]} nodeArray - Specified the node array.\n     * @param {string} sortID - Specified the sort id.\n     * @returns {object[]} - Returns the node array.\n     */\n    Drawing.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[\"\" + id] - b[\"\" + id];\n        });\n        return nodeArray;\n    };\n    return Drawing;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/drawing.js?");

/***/ })

}]);