"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-image-editor_src_image-editor_renderer_toolbar_js-a923a93d"],{

/***/ "./node_modules/@syncfusion/ej2-image-editor/src/image-editor/renderer/toolbar.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-image-editor/src/image-editor/renderer/toolbar.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToolbarModule: () => (/* binding */ ToolbarModule)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\");\n/* harmony import */ var _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\");\n/* harmony import */ var _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-splitbuttons */ \"./node_modules/@syncfusion/ej2-splitbuttons/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../index */ \"./node_modules/@syncfusion/ej2-image-editor/src/image-editor/index.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n\n\n\n\n\n\n\n\n\n\nvar ToolbarModule = /** @class */ (function () {\n    function ToolbarModule(parent) {\n        this.defToolbarItems = [];\n        this.toolbarHeight = 46;\n        this.currToolbar = '';\n        this.preventZoomBtn = false;\n        this.currentToolbar = 'main';\n        this.selFhdColor = '#42a5f5';\n        this.preventEnableDisableUr = false;\n        this.isAspectRatio = true;\n        this.isFrameToolbar = false;\n        this.presetColors = {\n            'custom': ['#000000', '#f44336', '#e91e63', '#9c27b0', '#673ab7', '#2196f3',\n                '#03a9f4', '#00bcd4', '#009688', '#ffeb3b', '#ffffff', '#ffebee', '#fce4ec', '#f3e5f5', '#ede7f6', '#e3f2fd',\n                '#e1f5fe', '#e0f7fa', '#e0f2f1', '#fffde7', '#f2f2f2', '#ffcdd2', '#f8bbd0', '#e1bee7', '#d1c4e9', '#bbdefb',\n                '#b3e5fc', '#b2ebf2', '#b2dfdb', '#fff9c4', '#e6e6e6', '#ef9a9a', '#f48fb1', '#ce93d8', '#b39ddb', '#90caf9',\n                '#81d4fa', '#80deea', '#80cbc4', '#fff59d', '#cccccc', '#e57373', '#f06292', '#ba68c8', '#9575cd', '#64b5f6',\n                '#4fc3f7', '#4dd0e1', '#4db6ac', '#fff176', '#b3b3b3', '#ef5350', '#ec407a', '#ab47bc', '#7e57c2', '#42a5f5',\n                '#29b6f6', '#26c6da', '#26a69a', '#ffee58', '#999999', '#e53935', '#d81b60', '#8e24aa', '#5e35b1', '#1e88e5',\n                '#039be5', '#00acc1', '#00897b', '#fdd835', '#808080', '#d32f2f', '#c2185b', '#7b1fa2', '#512da8', '#1976d2',\n                '#0288d1', '#0097a7', '#00796b', '#fbc02d', '#666666', '#c62828', '#ad1457', '#6a1b9a', '#4527a0', '#1565c0',\n                '#0277bd', '#00838f', '#00695c', '#f9a825', '#4d4d4d', '#b71c1c', '#880e4f', '#4a148c', '#311b92', '#0d47a1',\n                '#01579b', '#006064', '#004d40', '#f57f17']\n        };\n        this.isSlider = false;\n        this.currentQuality = 1;\n        this.imageQuality = 'highest';\n        this.parent = parent;\n        this.addEventListener();\n        this.initLocale();\n    }\n    ToolbarModule.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeEventListener();\n    };\n    ToolbarModule.prototype.addEventListener = function () {\n        this.parent.on('toolbar', this.toolbar, this);\n        this.parent.on('destroyed', this.destroy, this);\n    };\n    ToolbarModule.prototype.removeEventListener = function () {\n        this.parent.off('toolbar', this.toolbar);\n        this.parent.off('destroyed', this.destroy);\n    };\n    ToolbarModule.prototype.initLocale = function () {\n        this.defaultLocale = {\n            Crop: 'Crop',\n            ZoomIn: 'Zoom In',\n            ZoomOut: 'Zoom Out',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            Transform: 'Transform',\n            Annotation: 'Annotation',\n            Finetune: 'Finetune',\n            Brightness: 'Brightness',\n            Contrast: 'Contrast',\n            Hue: 'Hue',\n            Saturation: 'Saturation',\n            Opacity: 'Opacity',\n            Blur: 'Blur',\n            Sharpen: 'Sharpen',\n            Exposure: 'Exposure',\n            Filter: 'Filter',\n            Default: 'Default',\n            Chrome: 'Chrome',\n            Cold: 'Cold',\n            Warm: 'Warm',\n            Grayscale: 'Grayscale',\n            BlackAndWhite: 'Black and White',\n            Sepia: 'Sepia',\n            Invert: 'Invert',\n            Text: 'Add Text',\n            Pen: 'Pen',\n            Reset: 'Reset',\n            Save: 'Save',\n            Select: 'Select',\n            RotateLeft: 'Rotate Left',\n            RotateRight: 'Rotate Right',\n            HorizontalFlip: 'Horizontal Flip',\n            VerticalFlip: 'Vertical Flip',\n            OK: 'Apply',\n            Cancel: 'Discard',\n            FillColor: 'Fill Color',\n            StrokeColor: 'Stroke Color',\n            StrokeWidth: 'Stroke Width',\n            FontFamily: 'Font Family',\n            FontStyle: 'Font Style',\n            FontSize: 'Font Size',\n            FontColor: 'Font Color',\n            Pan: 'Pan',\n            Move: 'Move',\n            Load: 'Load',\n            Custom: 'Custom',\n            Square: 'Square',\n            Circle: 'Circle',\n            Ellipse: 'Ellipse',\n            Rectangle: 'Rectangle',\n            Line: 'Line',\n            Arrow: 'Arrow',\n            Path: 'Path',\n            Bold: 'Bold',\n            Italic: 'Italic',\n            BoldItalic: 'Bold Italic',\n            XSmall: 'X-Small',\n            Small: 'Small',\n            Medium: 'Medium',\n            Large: 'Large',\n            XLarge: 'X-Large',\n            ABC: 'ABC',\n            Browse: 'Browse',\n            Duplicate: 'Duplicate',\n            Remove: 'Remove',\n            EditText: 'Edit Text',\n            Start: 'Start',\n            End: 'End',\n            Bar: 'Bar',\n            ArrowSolid: 'Arrow Solid',\n            CircleSolid: 'Circle Solid',\n            SquareSolid: 'Square Solid',\n            None: 'None',\n            CropAndTransform: 'Crop and Transform',\n            CropSelection: 'Crop Selection',\n            Image: 'Add Image',\n            Transparency: 'Transparency',\n            Height: 'Height',\n            Width: 'Width',\n            AspectRatio: 'Maintain aspect ratio',\n            W: 'W',\n            H: 'H',\n            DragText: 'Drag and drop your image here or',\n            DropText: 'Drop your image here or',\n            BrowseText: 'Browse here...',\n            SupportText: 'Supports:',\n            Frame: 'Frame',\n            Mat: 'Mat',\n            Bevel: 'Bevel',\n            Inset: 'Inset',\n            Hook: 'Hook',\n            Color: 'Color',\n            Size: 'Size',\n            Offset: 'Offset',\n            Radius: 'Radius',\n            Amount: 'Amount',\n            Resize: 'Resize',\n            0: '0%',\n            20: '20%',\n            40: '40%',\n            60: '60%',\n            80: '80%',\n            100: '100%',\n            1: '1',\n            2: '2',\n            3: '3',\n            4: '4',\n            5: '5',\n            Border: 'Border',\n            Solid: 'Solid',\n            Dashed: 'Dashed',\n            Dotted: 'Dotted',\n            GradientColor: 'Gradient Color',\n            ConfirmDialogHeader: 'Confirm Save Changes',\n            ConfirmDialogContent: 'Do you want to save the changes you made to the image?',\n            AlertDialogHeader: 'Unsupported file',\n            AlertDialogContent: 'The selected file is unsupported.',\n            MinMaxSize: 'with file size between',\n            MinMaxSizeAlert: 'File size between',\n            MinSize: 'with minimum file size of',\n            MinSizeAlert: 'A minimum file size of',\n            MaxSize: 'with maximum file size of',\n            MaxSizeAlert: 'A maximum file size of',\n            To: 'to',\n            Bytes: 'bytes',\n            Yes: 'Yes',\n            No: 'No',\n            ImageErrorDialogHeader: 'Image Selection Error',\n            ImageErrorDialogContent: 'Please select only one image to open.',\n            Straighten: 'Straighten',\n            NoOutline: 'No outline',\n            DlgOK: 'OK',\n            SaveAs: 'Save As',\n            ImageName: 'Image name',\n            Format: 'Format',\n            Quality: 'Quality',\n            Download: 'Download',\n            Close: 'Close',\n            ImageSize: 'Image Size',\n            QualityInfo: 'The image quality option is only available for JPEG format',\n            Good: 'Good',\n            Great: 'Great',\n            Highest: 'Highest',\n            BringForward: 'Bring Forward',\n            SendBackward: 'Send Backward',\n            SendToBack: 'Send to Back',\n            BringToFront: 'Bring to Front',\n            ZOrder: 'Z-Order',\n            Redact: 'Redact',\n            Pixelate: 'Pixelate',\n            BorderRadius: 'Border Radius',\n            TextOutlineColor: 'Outline Color',\n            TextOutlineWidth: 'Outline Width',\n            PixelSize: 'Pixel Size',\n            And: 'and'\n        };\n        this.l10n = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('image-editor', this.defaultLocale, this.parent.locale);\n    };\n    ToolbarModule.prototype.toolbar = function (args) {\n        var parent = this.parent;\n        this.updatePrivateVariables();\n        switch (args.prop) {\n            case 'create-toolbar':\n                this.createToolbar();\n                break;\n            case 'create-contextual-toolbar':\n                this.createContextualToolbar();\n                break;\n            case 'update-toolbar-items':\n                this.updateToolbarItems();\n                break;\n            case 'refresh-toolbar':\n                this.refreshToolbar(args.value['type'], args.value['isApplyBtn'], args.value['isCropping'], args.value['isZooming'], args.value['cType']);\n                break;\n            case 'renderQAT':\n                this.renderQAT(args.value['isPenEdit']);\n                break;\n            case 'enable-disable-btns':\n                this.enableDisableTbrBtn();\n                break;\n            case 'init-main-toolbar':\n                this.initMainToolbar(args.value['isApplyBtn'], args.value['isDevice'], args.value['isOkBtn'], args.value['isResize'], args.value['isFrame'], args.value['isMainToolbar']);\n                break;\n            case 'create-bottom-toolbar':\n                this.createBottomToolbar();\n                break;\n            case 'refresh-main-toolbar':\n                this.refreshMainToolbar();\n                break;\n            case 'create-qa-toolbar':\n                this.createQuickAccessToolbar();\n                break;\n            case 'destroy-qa-toolbar':\n                this.destroyQuickAccessToolbar();\n                break;\n            case 'zoom-up-handler':\n                this.zoomBtnMouseUpHandler();\n                break;\n            case 'refresh-dropdown-btn':\n                this.refreshDropDownBtn(args.value['isDisabled']);\n                break;\n            case 'close-contextual-toolbar':\n                this.closeContextualToolbar();\n                break;\n            case 'destroy-bottom-toolbar':\n                this.destroyBottomToolbar();\n                break;\n            case 'destroy-top-toolbar':\n                this.destroyTopToolbar();\n                break;\n            case 'destroySubComponents':\n                this.destroySubComponents();\n                break;\n            case 'setLocale':\n                this.l10n.setLocale(args.value['locale']);\n                break;\n            case 'setPreventZoomBtn':\n                this.preventZoomBtn = args.value['isPrevent'];\n                break;\n            case 'getToolbarHeight':\n                args.value['obj']['toolbarHeight'] = this.toolbarHeight;\n                break;\n            case 'setToolbarHeight':\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.length > 0 && parent.toolbar.indexOf('Open') > -1)) {\n                    this.toolbarHeight = args.value['height'];\n                }\n                break;\n            case 'setCurrentToolbar':\n                this.currentToolbar = args.value['type'];\n                break;\n            case 'setSelectedFreehandColor':\n                this.selFhdColor = args.value['color'];\n                break;\n            case 'setInitialAdjustmentValue':\n                parent.initialAdjustmentValue = args.value['value'];\n                break;\n            case 'getCanvasFilter':\n                args.value['obj']['canvasFilter'] = parent.canvasFilter;\n                break;\n            case 'getDefToolbarItems':\n                args.value['obj']['defToolbarItems'] = this.defToolbarItems;\n                break;\n            case 'getPenStroke':\n                this.getPenStroke(args.value['value']);\n                break;\n            case 'performDefToolbarClickAction':\n                this.performDefTbrClick(args.value['type'], args.value['isContextualToolbar'], args.value['isDisabledAdjustment'], args.value['isDisabledFilter'], args.value['isFilterFinetune']);\n                break;\n            case 'setTempFilterProperties':\n                parent.setTempFilterProperties();\n                break;\n            case 'refreshSlider':\n                this.refreshSlider();\n                break;\n            case 'getCurrAdjustmentValue':\n                parent.getCurrAdjustmentValue(args.value['type']);\n                break;\n            case 'setCurrAdjustmentValue':\n                parent.setCurrAdjustmentValue(args.value['type'], args.value['value']);\n                break;\n            case 'refreshShapeDrawing':\n                this.refreshShapeDrawing();\n                break;\n            case 'setEnableDisableUndoRedo':\n                this.preventEnableDisableUr = args.value['isPrevent'];\n                break;\n            case 'reset':\n                this.reset();\n                break;\n            case 'getLocaleText':\n                args.value['obj']['value'] = this.l10n.getConstant(args.value['obj']['key']);\n                break;\n            case 'initResizeToolbar':\n                this.initResizeToolbar();\n                break;\n            case 'getFrameToolbar':\n                args.value['obj']['bool'] = this.isFrameToolbar;\n                break;\n            case 'resizeClick':\n                this.resizeClick();\n                break;\n            case 'frameToolbarClick':\n                this.frameToolbarClick();\n                break;\n            case 'performCropTransformClick':\n                this.performCropTransformClick(args.value['shape'], args.value['isTransform']);\n                break;\n            case 'duplicateShape':\n                this.duplicateShape(args.value['isPreventUndoRedo'], true);\n                break;\n            case 'editText':\n                this.editText();\n                break;\n            case 'setInitialSize':\n                this.initialSize = Number(args.value['value']);\n                break;\n            case 'widthPress':\n                this.widthPress(args.value['e']);\n                break;\n            case 'heightPress':\n                this.heightPress(args.value['e']);\n                break;\n            case 'widthAspectRatio':\n                this.widthAspectRatio(args.value['e']);\n                break;\n            case 'heightAspectRatio':\n                this.heightAspectRatio(args.value['e']);\n                break;\n            case 'cancelPan':\n                this.cancelPan();\n                break;\n            case 'zoomInBtnMouseDownHandler':\n                this.zoomInBtnMouseDownHandler(args.value['event']);\n                break;\n            case 'zoomOutBtnMouseDownHandler':\n                this.zoomOutBtnMouseDownHandler(args.value['event']);\n                break;\n            case 'drawDashedLine':\n                this.drawDashedLine(args.value['context']);\n                break;\n            case 'saveDialogClosed':\n                this.saveDialogClosed(args.value['id']);\n                break;\n            case 'getIndex':\n                this.getIndex(args.value['item']);\n                break;\n            case 'getRectRadius':\n                this.getRectRadius(args.value['text']);\n                break;\n            case 'applyPreviewFilter':\n                this.applyPreviewFilter();\n                break;\n            case 'renderSlider':\n                this.renderSlider(args.value['type'], args.value['isSelect']);\n                break;\n            case 'zoomInBtnClickHandler':\n                this.zoomInBtnClickHandler(args.value['e']);\n                break;\n            case 'zoomOutBtnClickHandler':\n                this.zoomOutBtnClickHandler(args.value['e']);\n                break;\n            case 'getAdjustmentToolbarItem':\n                this.getAdjustmentToolbarItem();\n                break;\n            case 'getFilterToolbarItem':\n                this.getFilterToolbarItem();\n                break;\n            case 'renderCropBtn':\n                this.renderCropBtn();\n                break;\n        }\n    };\n    ToolbarModule.prototype.updatePrivateVariables = function () {\n        var parent = this.parent;\n        this.inMemoryCanvas = parent.inMemoryCanvas;\n        if (parent.lowerCanvas) {\n            this.lowerContext = parent.lowerCanvas.getContext('2d');\n        }\n        if (parent.upperCanvas) {\n            this.upperContext = parent.upperCanvas.getContext('2d');\n        }\n        if (this.inMemoryCanvas) {\n            this.inMemoryContext = this.inMemoryCanvas.getContext('2d');\n        }\n    };\n    ToolbarModule.prototype.reset = function () {\n        var parent = this.parent;\n        this.toolbarHeight = 46;\n        parent.prevCurrSelectionPoint = null;\n        this.zoomBtnHold = null;\n        this.currToolbar = '';\n        parent.cxtTbarHeight = null;\n        this.currentToolbar = 'main';\n        this.selFhdColor = '#42a5f5';\n        parent.currentFilter = '';\n        this.preventZoomBtn = parent.isCropToolbar = this.preventEnableDisableUr = this.isFrameToolbar = false;\n        parent.initialAdjustmentValue = parent.canvasFilter =\n            'brightness(' + 1 + ') ' + 'contrast(' + 100 + '%) ' + 'hue-rotate(' + 0 + 'deg) ' +\n                'saturate(' + 100 + '%) ' + 'opacity(' + 1 + ') ' + 'blur(' + 0 + 'px) ' + 'sepia(0%) ' + 'grayscale(0%) ' + 'invert(0%)';\n        parent.tempStraighten = 0;\n        parent.isStraightening = false;\n    };\n    ToolbarModule.prototype.destroyTopToolbar = function () {\n        var parent = this.parent;\n        var toolbar = document.getElementById(parent.element.id + '_toolbar');\n        if (this.isToolbar() && toolbar && toolbar.classList.contains('e-control')) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(toolbar, 'toolbar').destroy();\n        }\n    };\n    ToolbarModule.prototype.destroyBottomToolbar = function () {\n        var parent = this.parent;\n        var toolbar = document.getElementById(parent.element.id + '_bottomToolbar');\n        if (toolbar && toolbar.classList.contains('e-control')) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(toolbar, 'toolbar').destroy();\n        }\n    };\n    ToolbarModule.prototype.isToolbar = function () {\n        var parent = this.parent;\n        return ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.length > 0)\n            || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbarTemplate));\n    };\n    ToolbarModule.prototype.createToolbar = function () {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.length > 0)) {\n            parent.element.appendChild(parent.createElement('div', {\n                id: id + '_toolbarArea', className: 'e-toolbar-area'\n            }));\n            var toolbarItems = { cssClass: 'e-image-upload', align: 'Left', type: 'Input',\n                tooltipText: this.l10n.getConstant('Browse'), template: new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.Uploader({ allowedExtensions: parent.uploadSettings.allowedExtensions, multiple: false }) };\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.defToolbarItems)) {\n                this.defToolbarItems = [];\n            }\n            this.defToolbarItems.push(toolbarItems);\n            var toolbarArea = document.getElementById(id + '_toolbarArea');\n            var toolbar_1 = parent.createElement('div', { id: id + '_toolbar' });\n            toolbarArea.appendChild(toolbar_1);\n            var uploadItems = [\n                {\n                    cssClass: 'e-image-upload',\n                    align: 'Left', type: 'Input',\n                    tooltipText: this.l10n.getConstant('Browse'),\n                    template: new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.Uploader({\n                        allowedExtensions: parent.uploadSettings.allowedExtensions,\n                        multiple: false,\n                        selected: function () {\n                            var toolbar = document.getElementById(id + '_toolbar');\n                            var bToolbar = document.getElementById(id + '_bottomToolbar');\n                            if (!parent.disabled) {\n                                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                                    if (_this.defToolbarItems.length > 0 && toolbar) {\n                                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(toolbar, 'toolbar').destroy();\n                                    }\n                                    if (bToolbar) {\n                                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(bToolbar, 'toolbar').destroy();\n                                    }\n                                    _this.initMainToolbar(false, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice, null);\n                                    _this.createBottomToolbar();\n                                }\n                                else {\n                                    if (_this.defToolbarItems.length > 0 && toolbar) {\n                                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(toolbar, 'toolbar').destroy();\n                                    }\n                                    _this.initMainToolbar(false, false, null);\n                                }\n                            }\n                        }\n                    })\n                }\n            ];\n            var toolbarObj = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.Toolbar({ items: uploadItems, width: '100%',\n                created: function () {\n                    parent.trigger('toolbarCreated', { toolbarType: 'main' });\n                },\n                clicked: this.defToolbarClicked.bind(this) });\n            toolbarObj.appendTo('#' + id + '_toolbar');\n            this.createLeftToolbarControls();\n            var mToolbar = document.getElementById(id + '_toolbar');\n            if (toolbar_1) {\n                this.toolbarHeight = mToolbar.clientHeight;\n                if (parent.toolbar && parent.toolbar.length > 0 && parent.toolbar.indexOf('Open') === -1) {\n                    var toolabr = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(document.getElementById(parent.element.id + '_toolbar'), 'toolbar');\n                    if (toolabr) {\n                        toolabr.destroy();\n                        document.getElementById(parent.element.id + '_toolbar').innerHTML = '';\n                    }\n                }\n            }\n        }\n        else {\n            this.toolbarHeight = 0;\n        }\n    };\n    ToolbarModule.prototype.createContextualToolbar = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.length > 0)) {\n            var contextualToolbarArea = parent.createElement('div', { id: id + '_contextualToolbarArea', className: 'e-contextual-toolbar-wrapper e-hide' });\n            contextualToolbarArea.style.position = 'absolute';\n            parent.element.appendChild(contextualToolbarArea);\n            var toolbarArea = document.getElementById(id + '_contextualToolbarArea');\n            var toolbar_2 = parent.createElement('div', { id: id + '_contextualToolbar' });\n            toolbarArea.appendChild(toolbar_2);\n        }\n    };\n    ToolbarModule.prototype.createBottomToolbar = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (parent.element.querySelector('#' + id + '_bottomToolbarArea')) {\n            parent.element.querySelector('#' + id + '_bottomToolbarArea').remove();\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.length > 0)) {\n            parent.element.appendChild(parent.createElement('div', {\n                id: id + '_bottomToolbarArea', className: 'e-bottom-toolbar'\n            }));\n            if (!parent.toolbarTemplate) {\n                var toolbarArea = document.getElementById(id + '_bottomToolbarArea');\n                var toolbarElem = parent.createElement('div', {\n                    id: id + '_bottomToolbar'\n                });\n                toolbarArea.appendChild(toolbarElem);\n            }\n            this.initBottomToolbar();\n        }\n    };\n    ToolbarModule.prototype.createQuickAccessToolbar = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (parent.showQuickAccessToolbar) {\n            var toolbarItems = { cssClass: 'e-image-upload', align: 'Left', type: 'Input',\n                tooltipText: this.l10n.getConstant('Browse'), template: new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.Uploader({ allowedExtensions: parent.uploadSettings.allowedExtensions, multiple: false }) };\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.defToolbarItems)) {\n                this.defToolbarItems = [];\n            }\n            this.defToolbarItems.push(toolbarItems);\n            var toolbarArea = document.getElementById(id + '_quickAccessToolbarArea');\n            var toolbar_3 = parent.createElement('div', {\n                id: id + '_quickAccessToolbar'\n            });\n            toolbarArea.appendChild(toolbar_3);\n            var toolbarObj = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.Toolbar({ clicked: this.defToolbarClicked.bind(this) });\n            toolbarObj.appendTo('#' + id + '_quickAccessToolbar');\n        }\n    };\n    ToolbarModule.prototype.initMainToolbar = function (isApplyOption, isDevice, isOkBtn, isResize, isFrame, isMainToolbar, isRedact) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (this.isToolbar()) {\n            var leftItem = this.getLeftToolbarItem(isOkBtn, isResize);\n            var rightItem = this.getRightToolbarItem(isOkBtn, isMainToolbar, isRedact);\n            var mainItem = this.getMainToolbarItem(isApplyOption, isFrame, isRedact);\n            var zoomItem = this.getZoomToolbarItem();\n            if (isDevice) {\n                if (isFrame || isRedact) {\n                    this.defToolbarItems = mainItem;\n                }\n                else {\n                    this.defToolbarItems = leftItem.concat(rightItem);\n                }\n            }\n            else {\n                this.defToolbarItems = leftItem.concat(mainItem, rightItem, zoomItem);\n            }\n            var args = { toolbarType: 'main', toolbarItems: this.defToolbarItems };\n            parent.trigger('toolbarUpdating', args);\n            this.defToolbarItems = args.toolbarItems;\n            if (this.defToolbarItems.length > 0) {\n                var toolbarObj = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.Toolbar({\n                    width: '100%',\n                    items: this.defToolbarItems,\n                    clicked: this.defToolbarClicked.bind(this),\n                    created: function () {\n                        if (!isDevice) {\n                            _this.renderAnnotationBtn();\n                        }\n                        _this.wireZoomBtnEvents();\n                        parent.trigger('toolbarCreated', { toolbarType: 'main' });\n                    }\n                });\n                if ((isDevice && isFrame) || (isDevice && isRedact)) {\n                    toolbarObj.appendTo('#' + id + '_bottomToolbar');\n                }\n                else {\n                    toolbarObj.appendTo('#' + id + '_toolbar');\n                }\n                this.createLeftToolbarControls();\n                this.enableDisableTbrBtn();\n                if (this.isToolbar() && document.getElementById(id + '_toolbar')) {\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    var toolbar_4 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_toolbar', 'toolbar');\n                    toolbar_4.refreshOverflow();\n                }\n            }\n        }\n    };\n    ToolbarModule.prototype.initBottomToolbar = function () {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.length > 0)) {\n            var items = this.getMainToolbarItem();\n            var args = { toolbarType: 'bottom-toolbar', toolbarItems: items };\n            parent.trigger('toolbarUpdating', args);\n            items = args.toolbarItems;\n            var toolbarObj = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.Toolbar({ items: items, width: '100%',\n                created: function () {\n                    _this.renderAnnotationBtn();\n                    _this.renderCropBtn();\n                    _this.renderTransformBtn();\n                    parent.trigger('toolbarCreated', { toolbarType: 'main' });\n                },\n                clicked: this.defToolbarClicked.bind(this)\n            });\n            toolbarObj.appendTo('#' + id + '_bottomToolbar');\n            if (this.defToolbarItems.length > 0 && document.getElementById(id + '_bottomToolbar')) {\n                /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                var toolbar_5 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_bottomToolbar', 'toolbar');\n                toolbar_5.refreshOverflow();\n            }\n        }\n    };\n    ToolbarModule.prototype.getLeftToolbarItem = function (isOkBtn, isResize) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var toolbarItems = [];\n        if (!isOkBtn || isResize) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('Open') > -1)) {\n                toolbarItems.push({ id: id + '_upload', cssClass: 'e-image-upload', align: 'Left', type: 'Input', template: new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.Uploader({ allowedExtensions: parent.uploadSettings.allowedExtensions, multiple: false }) });\n                toolbarItems.push({ visible: false, cssClass: 'e-image-position e-btn e-flat', tooltipText: this.l10n.getConstant('Browse'), align: 'Left' });\n            }\n            else if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && (parent.toolbar && parent.toolbar.indexOf('Open') === -1)) {\n                toolbarItems.push({ visible: false, id: id + '_upload', cssClass: 'e-image-upload', align: 'Left', type: 'Input', template: new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.Uploader({ allowedExtensions: parent.uploadSettings.allowedExtensions, multiple: false }) });\n                toolbarItems.push({ visible: false, cssClass: 'e-image-position e-btn e-flat', tooltipText: this.l10n.getConstant('Browse'), align: 'Left' });\n            }\n        }\n        if (parent.allowUndoRedo && !isResize) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('Undo') > -1)) {\n                toolbarItems.push({ id: id + '_undo', prefixIcon: 'e-icons e-undo', cssClass: 'top-icon e-undo',\n                    tooltipText: this.l10n.getConstant('Undo'), align: 'Left' });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('Redo') > -1)) {\n                toolbarItems.push({ id: id + '_redo', prefixIcon: 'e-icons e-redo', cssClass: 'top-icon e-redo',\n                    tooltipText: this.l10n.getConstant('Redo'), align: 'Left' });\n            }\n        }\n        if (!this.preventZoomBtn && (parent.zoomSettings.zoomTrigger & _index__WEBPACK_IMPORTED_MODULE_5__.ZoomTrigger.Toolbar) === _index__WEBPACK_IMPORTED_MODULE_5__.ZoomTrigger.Toolbar && !isResize) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('ZoomOut') > -1)) {\n                toolbarItems.push({ id: id + '_zoomOut', prefixIcon: 'e-icons e-zoom-out', cssClass: 'top-icon e-dec-zoom',\n                    tooltipText: this.l10n.getConstant('ZoomOut'), align: 'Left' });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('ZoomIn') > -1)) {\n                toolbarItems.push({ id: id + '_zoomIn', prefixIcon: 'e-icons e-zoom-in', cssClass: 'top-icon e-inc-zoom',\n                    tooltipText: this.l10n.getConstant('ZoomIn'), align: 'Left' });\n            }\n        }\n        var tempToolbarItems = this.processToolbar('left');\n        for (var i = 0, len = tempToolbarItems.length; i < len; i++) {\n            toolbarItems.push(tempToolbarItems[i]);\n        }\n        return toolbarItems;\n    };\n    ToolbarModule.prototype.getRightToolbarItem = function (isOkBtn, isMainToolbar, isRedact) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var toolbarItems = [];\n        if (isOkBtn || isRedact) {\n            toolbarItems.push({ id: id + '_ok', prefixIcon: 'e-icons e-check', cssClass: 'top-icon e-tick',\n                tooltipText: this.l10n.getConstant('OK'), align: 'Right', tabIndex: 0 });\n            toolbarItems.push({ id: id + '_cancel', prefixIcon: 'e-icons e-close', cssClass: 'top-icon e-save',\n                tooltipText: this.l10n.getConstant('Cancel'), align: 'Right' });\n        }\n        if ((isMainToolbar || !_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('Reset') > -1))) {\n            toolbarItems.push({ id: id + '_reset', prefixIcon: 'e-icons e-btn-reset', cssClass: 'top-icon e-img-reset',\n                tooltipText: this.l10n.getConstant('Reset'), align: 'Right' });\n        }\n        if (!isOkBtn) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('Save') > -1)) {\n                toolbarItems.push({ id: id + '_save', prefixIcon: 'e-icons e-btn-save', cssClass: 'e-caret-hide top-icon e-save',\n                    tooltipText: this.l10n.getConstant('Save'), align: 'Right' });\n            }\n        }\n        var tempToolbarItems = this.processToolbar('right');\n        for (var i = 0, len = tempToolbarItems.length; i < len; i++) {\n            toolbarItems.push(tempToolbarItems[i]);\n        }\n        return toolbarItems;\n    };\n    ToolbarModule.prototype.getMainToolbarItem = function (isApplyOption, isFrame, isRedact) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var toolbarItems = [];\n        if (isFrame) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) && parent.toolbar.indexOf('None') > -1) || parent.toolbar.indexOf('Frame') > -1) {\n                toolbarItems.push({ id: id + '_none', prefixIcon: 'e-icons e-frame-none', cssClass: 'top-icon e-frame-none',\n                    tooltipText: this.l10n.getConstant('None'), align: 'Center' });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) && parent.toolbar.indexOf('Mat') > -1) || parent.toolbar.indexOf('Frame') > -1) {\n                toolbarItems.push({ id: id + '_mat', prefixIcon: 'e-icons e-frame-mat', cssClass: 'top-icon e-frame-mat',\n                    tooltipText: this.l10n.getConstant('Mat'), align: 'Center' });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) && parent.toolbar.indexOf('Bevel') > -1) || parent.toolbar.indexOf('Frame') > -1) {\n                toolbarItems.push({ id: id + '_bevel', prefixIcon: 'e-icons e-frame-bevel', cssClass: 'top-icon e-frame-bevel',\n                    tooltipText: this.l10n.getConstant('Bevel'), align: 'Center' });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) && parent.toolbar.indexOf('Line') > -1) || parent.toolbar.indexOf('Frame') > -1) {\n                toolbarItems.push({ id: id + '_line', prefixIcon: 'e-icons e-frame-line', cssClass: 'top-icon e-frame-line',\n                    tooltipText: this.l10n.getConstant('Line'), align: 'Center' });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) && parent.toolbar.indexOf('Inset') > -1) || parent.toolbar.indexOf('Frame') > -1) {\n                toolbarItems.push({ id: id + '_inset', prefixIcon: 'e-icons e-frame-inset', cssClass: 'top-icon e-frame-inset',\n                    tooltipText: this.l10n.getConstant('Inset'), align: 'Center' });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) && parent.toolbar.indexOf('Hook') > -1) || parent.toolbar.indexOf('Frame') > -1) {\n                toolbarItems.push({ id: id + '_hook', prefixIcon: 'e-icons e-frame-hook', cssClass: 'top-icon e-frame-hook',\n                    tooltipText: this.l10n.getConstant('Hook'), align: 'Center' });\n            }\n        }\n        else if (isRedact) {\n            toolbarItems.push({ id: id + '_redactBlur', prefixIcon: 'e-icons e-tint', cssClass: 'top-icon e-opacity',\n                tooltipText: this.l10n.getConstant('Blur'), align: 'Center' });\n            toolbarItems.push({ id: id + '_pixelate', prefixIcon: 'e-icons e-opacity', cssClass: 'top-icon e-opacity',\n                tooltipText: this.l10n.getConstant('Pixelate'), align: 'Center' });\n            toolbarItems.push({ id: id + '_duplicate', prefixIcon: 'e-icons e-order', cssClass: 'top-icon e-order',\n                tooltipText: this.l10n.getConstant('Duplicate'), align: 'Center' });\n            toolbarItems.push({ id: id + '_remove', prefixIcon: 'e-icons e-trash', cssClass: 'top-icon e-trash',\n                tooltipText: this.l10n.getConstant('Remove'), align: 'Center' });\n        }\n        else {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('Crop') > -1)) {\n                toolbarItems.push({ id: id + '_cropTransform', prefixIcon: 'e-icons e-crop', cssClass: 'top-icon e-crop',\n                    tooltipText: this.l10n.getConstant('CropAndTransform'), align: 'Center' });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('Annotate') > -1)) {\n                toolbarItems.push({ id: id + '_annotation', tooltipText: this.l10n.getConstant('Annotation'), align: 'Center',\n                    template: '<button id=\"' + id + '_annotationBtn\"></button>' });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('Finetune') > -1)) {\n                toolbarItems.push({ id: id + '_adjustment', prefixIcon: 'e-icons e-adjustment', cssClass: 'top-icon e-adjustment',\n                    tooltipText: this.l10n.getConstant('Finetune'), align: 'Center' });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('Filter') > -1)) {\n                toolbarItems.push({ id: id + '_filter', prefixIcon: 'e-icons e-filters', cssClass: 'top-icon e-filters',\n                    tooltipText: this.l10n.getConstant('Filter'), align: 'Center' });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) && parent.toolbar.indexOf('Frame') > -1)) {\n                toolbarItems.push({ id: id + '_frame', prefixIcon: 'e-icons e-border-frame', cssClass: 'top-icon e-border-frame',\n                    tooltipText: this.l10n.getConstant('Frame'), align: 'Center' });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) && parent.toolbar.indexOf('Resize') > -1)) {\n                toolbarItems.push({ id: id + '_resize', prefixIcon: 'e-icons e-resize', cssClass: 'top-icon e-resize',\n                    tooltipText: this.l10n.getConstant('Resize'), align: 'Center' });\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) && parent.toolbar.indexOf('Redact') > -1)) {\n                toolbarItems.push({ id: id + '_redact', prefixIcon: 'e-icons e-redact', cssClass: 'top-icon e-opacity',\n                    tooltipText: this.l10n.getConstant('Redact'), align: 'Center' });\n            }\n        }\n        var tempToolbarItems = this.processToolbar('center');\n        for (var i = 0, len = tempToolbarItems.length; i < len; i++) {\n            toolbarItems.push(tempToolbarItems[i]);\n        }\n        if (isApplyOption) {\n            toolbarItems.push({ id: id + '_ok', prefixIcon: 'e-icons e-check', cssClass: 'top-icon e-tick',\n                tooltipText: this.l10n.getConstant('OK'), align: 'Right', tabIndex: 0 });\n            toolbarItems.push({ id: id + '_cancel', prefixIcon: 'e-icons e-close', cssClass: 'top-icon e-save',\n                tooltipText: this.l10n.getConstant('Cancel'), align: 'Right' });\n        }\n        return toolbarItems;\n    };\n    ToolbarModule.prototype.getZoomToolbarItem = function () {\n        var toolbarItems = [];\n        return toolbarItems;\n    };\n    ToolbarModule.prototype.updateContextualToolbar = function (type, cType, isSelect) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var toolbarArea = parent.element.querySelector('#' + id + '_toolbarArea');\n        var contextualToolbarArea = parent.element.querySelector('#' + id + '_contextualToolbarArea');\n        if (!contextualToolbarArea) {\n            return;\n        }\n        contextualToolbarArea.classList.remove('e-hide');\n        contextualToolbarArea.style.left = toolbarArea.offsetLeft + 'px';\n        if (type === 'filter') {\n            var toolbar_6 = document.getElementById(id + '_toolbar');\n            if (toolbar_6 && this.defToolbarItems.length > 0) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(toolbar_6, 'toolbar').destroy();\n            }\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                this.initMainToolbar(false, true, true);\n            }\n            else {\n                this.initMainToolbar(true, null, null);\n            }\n            this.refreshSlider();\n            this.initFilterToolbarItem();\n        }\n        else {\n            var ctxToolbar = document.querySelector('#' + id + '_contextualToolbar');\n            if (ctxToolbar.classList.contains('e-control')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(ctxToolbar, 'toolbar').destroy();\n            }\n            this.refreshSlider();\n            if (type === 'frame') {\n                this.initFrameToolbarItem();\n            }\n            else {\n                this.renderSlider(cType, isSelect);\n            }\n        }\n        if (parent.toolbarTemplate) {\n            this.toolbarHeight = parent.element.querySelector('#' + id + '_toolbarArea').clientHeight;\n        }\n        else if (parent.element.querySelector('#' + id + '_toolbar')) {\n            this.toolbarHeight = parent.element.querySelector('#' + id + '_toolbar').clientHeight;\n        }\n        parent.toolbarHeight = this.toolbarHeight;\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            var cHt = contextualToolbarArea.offsetHeight + 1;\n            var cusWrapper = parent.element.querySelector('#' + id + '_customizeWrapper');\n            if (this.isFrameToolbar && cusWrapper) {\n                cHt = cusWrapper.offsetHeight + 2;\n            }\n            var ht = parent.element.querySelector('#' + id + '_canvasWrapper').offsetHeight;\n            contextualToolbarArea.style.top = this.toolbarHeight + 1 + ht - cHt + 'px';\n            if (cType === 'straighten') {\n                parent.isStraightening = true;\n                var ctxToolbar = parent.element.querySelector('#' + id + '_contextualToolbarArea');\n                if (ctxToolbar.style.position === 'absolute') {\n                    ctxToolbar.style.position = '';\n                    parent.element.insertBefore(ctxToolbar, parent.element.querySelector('#' + id + '_bottomToolbarArea'));\n                    parent.update();\n                    if (isSelect) {\n                        parent.notify('draw', { prop: 'select', onPropertyChange: false,\n                            value: { type: this.getCropTextContent(document.getElementById(id + '_cropBtn')).toLowerCase(),\n                                startX: null, startY: null, width: null, height: null } });\n                    }\n                }\n            }\n        }\n        else {\n            contextualToolbarArea.style.top = this.toolbarHeight + 1 + 'px';\n        }\n    };\n    ToolbarModule.prototype.processToolbar = function (position) {\n        var parent = this.parent;\n        var toolbarItems = [];\n        if (parent.toolbar) {\n            for (var i = 0, len = parent.toolbar.length; i < len; i++) {\n                if (typeof (parent.toolbar[i]) === 'object') {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar[i].align)) {\n                        if (position === 'left') {\n                            toolbarItems.push(parent.toolbar[i]);\n                        }\n                    }\n                    else if (parent.toolbar[i].align.toLowerCase() === position) {\n                        toolbarItems.push(parent.toolbar[i]);\n                    }\n                }\n            }\n        }\n        return toolbarItems;\n    };\n    ToolbarModule.prototype.processSubToolbar = function (items) {\n        var toolbarItems = [];\n        if (items) {\n            for (var i = 0, len = items.length; i < len; i++) {\n                if (typeof (items[i]) === 'object') {\n                    items[i].align = 'Center';\n                    toolbarItems.push(items[i]);\n                }\n            }\n        }\n        return toolbarItems;\n    };\n    ToolbarModule.prototype.wireZoomBtnEvents = function () {\n        var zoomIn = document.querySelector('#' + this.parent.element.id + '_zoomIn');\n        var zoomOut = document.querySelector('#' + this.parent.element.id + '_zoomOut');\n        if (zoomIn) {\n            zoomIn.addEventListener('mousedown', this.zoomInBtnMouseDownHandler.bind(this));\n            zoomIn.addEventListener('mouseup', this.zoomBtnMouseUpHandler.bind(this));\n            zoomIn.addEventListener('click', this.zoomInBtnClickHandler.bind(this));\n        }\n        if (zoomOut) {\n            zoomOut.addEventListener('mousedown', this.zoomOutBtnMouseDownHandler.bind(this));\n            zoomOut.addEventListener('mouseup', this.zoomBtnMouseUpHandler.bind(this));\n            zoomOut.addEventListener('click', this.zoomOutBtnClickHandler.bind(this));\n        }\n    };\n    ToolbarModule.prototype.widthPress = function (e) {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        if (e.keyCode === 109) {\n            e.preventDefault();\n            return;\n        }\n    };\n    ToolbarModule.prototype.heightPress = function (e) {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        if (e.keyCode === 109) {\n            e.preventDefault();\n            return;\n        }\n    };\n    ToolbarModule.prototype.widthAspectRatio = function (e) {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        if (e.keyCode === 109 || e.keyCode === 9) {\n            return;\n        }\n        var parent = this.parent;\n        var id = parent.element.id;\n        var aspectRatioHeight = parent.element.querySelector('#' + id + '_resizeHeight');\n        var aspectRatioWidth = parent.element.querySelector('#' + id + '_resizeWidth');\n        var icon = parent.element.querySelector('#' + id + '_aspectratio');\n        var originalWidth = parent.img.destWidth;\n        var originalHeight = parent.img.destHeight;\n        var aspectRatioHeightValue = parseFloat(aspectRatioHeight.value);\n        var val = aspectRatioHeightValue / (originalHeight / originalWidth);\n        var width = val % 1 >= 0.5 || val % 1 <= -0.5 ? Math.round(val) : (val < 0) ? Math.ceil(val) : Math.floor(val);\n        var widthNumeric = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioWidth, 'numerictextbox');\n        var heightNumeric = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioWidth, 'numerictextbox');\n        if (icon) {\n            if (width != null && !isNaN(width)) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((widthNumeric).value)) {\n                    (widthNumeric).placeholder = width + ' px';\n                    aspectRatioWidth.placeholder = width.toString() + ' px';\n                }\n                else {\n                    (widthNumeric).value = width;\n                    aspectRatioWidth.value = width.toString() + ' px';\n                }\n            }\n            else {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((widthNumeric).value)) {\n                    (widthNumeric).placeholder = '0 px';\n                    aspectRatioWidth.placeholder = '0 px';\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(heightNumeric.value) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(heightNumeric.placeholder)) {\n                        (widthNumeric).placeholder = \"\" + parent.img.srcWidth;\n                        aspectRatioWidth.placeholder = \"\" + parent.img.srcWidth;\n                    }\n                }\n                else {\n                    (widthNumeric).value = 0;\n                    aspectRatioWidth.value = '0 px';\n                }\n            }\n        }\n    };\n    ToolbarModule.prototype.heightAspectRatio = function (e) {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        if (e.keyCode === 109 || e.keyCode === 9) {\n            return;\n        }\n        var parent = this.parent;\n        var id = parent.element.id;\n        var aspectRatioHeight = parent.element.querySelector('#' + id + '_resizeHeight');\n        var aspectRatioWidth = parent.element.querySelector('#' + id + '_resizeWidth');\n        var icon = parent.element.querySelector('#' + id + '_aspectratio');\n        var originalWidth = parent.img.destWidth;\n        var originalHeight = parent.img.destHeight;\n        var aspectRatioWidthValue = parseFloat(aspectRatioWidth.value);\n        var value = aspectRatioWidthValue / (originalWidth / originalHeight);\n        var ht = value % 1 >= 0.5 || value % 1 <= -0.5 ? Math.round(value) : (value < 0) ? Math.ceil(value) : Math.floor(value);\n        var heightNumeric = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioHeight, 'numerictextbox');\n        var widthNumeric = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioWidth, 'numerictextbox');\n        if (icon) {\n            if (!isNaN(ht)) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((heightNumeric).value)) {\n                    (heightNumeric).placeholder = ht + ' px';\n                    aspectRatioHeight.placeholder = ht.toString() + ' px';\n                }\n                else {\n                    (heightNumeric).value = ht;\n                    aspectRatioHeight.value = ht.toString() + ' px';\n                }\n            }\n            else {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((heightNumeric).value)) {\n                    (heightNumeric).placeholder = '0 px';\n                    aspectRatioHeight.placeholder = '0 px';\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widthNumeric.value) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widthNumeric.placeholder)) {\n                        (heightNumeric).placeholder = \"\" + parent.img.srcHeight;\n                        aspectRatioHeight.placeholder = \"\" + parent.img.srcHeight;\n                    }\n                }\n                else {\n                    (heightNumeric).value = 0;\n                    aspectRatioHeight.value = '0 px';\n                }\n            }\n        }\n    };\n    ToolbarModule.prototype.getResizeToolbarItem = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var isResize = parent.aspectWidth && parent.aspectHeight ? true : false;\n        var width = this.parent.transform.degree % 90 === 0 && this.parent.transform.degree % 180 !== 0 ?\n            Math.ceil(this.parent.img.srcHeight).toString() : Math.ceil(this.parent.img.srcWidth).toString();\n        var height = this.parent.transform.degree % 90 === 0 && this.parent.transform.degree % 180 !== 0 ?\n            Math.ceil(this.parent.img.srcWidth).toString() : Math.ceil(this.parent.img.srcHeight).toString();\n        var toolbarItems = [];\n        var spanWidth = document.createElement('span');\n        spanWidth.innerHTML = this.l10n.getConstant('W');\n        toolbarItems.push({ id: id + '_width', cssClass: 'e-ie-resize-width', template: spanWidth, align: 'Center' });\n        toolbarItems.push({ id: id + '_resizeWidth', prefixIcon: 'e-icons e-anti-clock-wise',\n            tooltipText: this.l10n.getConstant('Width'), align: 'Center', type: 'Input', template: new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.NumericTextBox({ width: 75, htmlAttributes: { maxLength: '4' },\n                showSpinButton: false, value: isResize ? parent.aspectWidth : null,\n                placeholder: isResize ? null : width, format: '###.## px' })\n        });\n        var spanHeight = document.createElement('span');\n        spanHeight.innerHTML = this.l10n.getConstant('H');\n        toolbarItems.push({ id: id + '_height', cssClass: 'e-ie-resize-height', template: spanHeight, align: 'Center' });\n        toolbarItems.push({ id: id + '_resizeHeight', prefixIcon: 'e-icons e-clock-wise',\n            tooltipText: this.l10n.getConstant('Height'), align: 'Center', type: 'Input', template: new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.NumericTextBox({ width: 75, htmlAttributes: { maxLength: '4' },\n                showSpinButton: false, value: isResize ? parent.aspectHeight : null,\n                placeholder: isResize ? null : height, format: '###.## px' })\n        });\n        if (!this.isAspectRatio) {\n            toolbarItems.push({ id: id + '_aspectratio', prefixIcon: 'e-icons e-lock', align: 'Center',\n                tooltipText: this.l10n.getConstant('AspectRatio'), type: 'Button', tabIndex: 0 });\n            this.isAspectRatio = true;\n        }\n        else {\n            toolbarItems.push({ id: id + '_nonaspectratio', prefixIcon: 'e-icons e-unlock', align: 'Center', tooltipText: this.l10n.getConstant('AspectRatio'), type: 'Button' });\n            this.isAspectRatio = false;\n        }\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            toolbarItems.push({ id: id + '_ok', prefixIcon: 'e-icons e-check', cssClass: 'top-icon e-tick',\n                tooltipText: this.l10n.getConstant('OK'), align: 'Right', tabIndex: 0 });\n            toolbarItems.push({ id: id + '_cancel', prefixIcon: 'e-icons e-close', cssClass: 'top-icon e-save',\n                tooltipText: this.l10n.getConstant('Cancel'), align: 'Right' });\n        }\n        return toolbarItems;\n    };\n    ToolbarModule.prototype.initResizeToolbar = function () {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        var leftItem = this.getLeftToolbarItem(false, true);\n        var rightItem = this.getRightToolbarItem();\n        var mainItem = this.getResizeToolbarItem();\n        var zoomItem = this.getZoomToolbarItem();\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.defToolbarItems = mainItem;\n        }\n        else {\n            this.defToolbarItems = leftItem.concat(zoomItem, mainItem, rightItem);\n        }\n        var args = { toolbarType: 'resize', toolbarItems: this.defToolbarItems };\n        parent.trigger('toolbarUpdating', args);\n        this.defToolbarItems = args.toolbarItems;\n        var toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.Toolbar({\n            width: '100%',\n            items: this.defToolbarItems,\n            clicked: this.defToolbarClicked.bind(this),\n            created: function () {\n                _this.wireResizeBtnEvents();\n                parent.trigger('toolbarCreated', { toolbarType: 'shapes' });\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    if (_this.defToolbarItems.length > 0 && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.getElementById(id + '_bottomToolbar')))) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        toolbar.refreshOverflow();\n                    }\n                }\n                else {\n                    _this.createLeftToolbarControls();\n                    if (_this.defToolbarItems.length > 0 && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.getElementById(id + '_toolbar')))) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        toolbar.refreshOverflow();\n                    }\n                }\n            }\n        });\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            toolbar.appendTo('#' + id + '_bottomToolbar');\n        }\n        else {\n            toolbar.appendTo('#' + id + '_toolbar');\n        }\n        parent.isResize = false;\n        this.enableDisableTbrBtn();\n        parent.isResize = true;\n        parent.notify('transform', { prop: 'disableZoomOutBtn', value: { isZoomOut: true } });\n    };\n    ToolbarModule.prototype.wireResizeBtnEvents = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var aspectRatioHeight = parent.element.querySelector('#' + id + '_resizeHeight');\n        var aspectRatioWidth = parent.element.querySelector('#' + id + '_resizeWidth');\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(aspectRatioHeight)) {\n            aspectRatioHeight.addEventListener('keydown', this.widthPress.bind(this));\n            aspectRatioWidth.addEventListener('keyup', this.heightAspectRatio.bind(this));\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(aspectRatioWidth)) {\n            aspectRatioWidth.addEventListener('keydown', this.heightPress.bind(this));\n            aspectRatioHeight.addEventListener('keyup', this.widthAspectRatio.bind(this));\n        }\n    };\n    ToolbarModule.prototype.enableDisableTbrBtn = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (!this.preventEnableDisableUr) {\n            var object = { appliedUndoRedoColl: [] };\n            parent.notify('undo-redo', { prop: 'getAppliedUndoRedoColl', value: { obj: object } });\n            var undoRedoObj = { undoRedoStep: null };\n            parent.notify('undo-redo', { prop: 'getUndoRedoStep', value: { obj: undoRedoObj } });\n            var undo = parent.element.querySelector('#' + id + '_undo');\n            if (undo && undoRedoObj['undoRedoStep'] === 0) {\n                undo.classList.add('e-disabled');\n                undo.parentElement.classList.add('e-overlay');\n            }\n            else if (undo && undoRedoObj['undoRedoStep'] > 0) {\n                undo.classList.remove('e-disabled');\n                undo.parentElement.classList.remove('e-overlay');\n            }\n            var redo = parent.element.querySelector('#' + id + '_redo');\n            if (redo && (undoRedoObj['undoRedoStep'] === object['appliedUndoRedoColl'].length)) {\n                redo.classList.add('e-disabled');\n                redo.parentElement.classList.add('e-overlay');\n            }\n            else if (redo && (undoRedoObj['undoRedoStep'] === 0 && object['appliedUndoRedoColl'].length > 0)) {\n                redo.classList.remove('e-disabled');\n                redo.parentElement.classList.remove('e-overlay');\n            }\n            else if (redo && undoRedoObj['undoRedoStep'] > 0) {\n                redo.classList.remove('e-disabled');\n                redo.parentElement.classList.remove('e-overlay');\n            }\n        }\n        var zoomIn = document.querySelector('#' + id + '_zoomIn');\n        if (zoomIn && parent.zoomSettings.zoomFactor >= parent.zoomSettings.maxZoomFactor) {\n            zoomIn.classList.add('e-disabled');\n            zoomIn.parentElement.classList.add('e-overlay');\n        }\n        else if (zoomIn) {\n            zoomIn.classList.remove('e-disabled');\n            zoomIn.parentElement.classList.remove('e-overlay');\n        }\n        var zoomOut = document.querySelector('#' + id + '_zoomOut');\n        if (zoomOut && parent.zoomSettings.zoomFactor <= parent.zoomSettings.minZoomFactor) {\n            zoomOut.classList.add('e-disabled');\n            zoomOut.parentElement.classList.add('e-overlay');\n        }\n        else if (zoomOut) {\n            zoomOut.classList.remove('e-disabled');\n            zoomOut.parentElement.classList.remove('e-overlay');\n        }\n        var frame = document.querySelector('#' + id + '_frame');\n        if (frame && ((parent.currSelectionPoint && parent.currSelectionPoint.shape === 'crop-circle') || parent.isCircleCrop)) {\n            frame.classList.add('e-overlay');\n        }\n        else if (frame) {\n            frame.classList.remove('e-overlay');\n        }\n        var ratio = document.querySelector('#' + id + '_aspectratio');\n        if (ratio && ((parent.currSelectionPoint && parent.currSelectionPoint.shape === 'crop-circle') || parent.isCircleCrop)) {\n            ratio.classList.add('e-overlay');\n        }\n        else if (ratio) {\n            ratio.classList.remove('e-overlay');\n        }\n    };\n    ToolbarModule.prototype.createLeftToolbarControls = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (this.defToolbarItems !== undefined && this.defToolbarItems.length > 0 &&\n            (document.getElementById(id + '_toolbar'))) {\n            var uploadDiv = document.getElementById(id + '_toolbar')\n                .querySelector('.e-image-upload');\n            if (uploadDiv) {\n                var uploadElem = uploadDiv.getElementsByTagName('input')[0];\n                var uploadBtnElem = uploadDiv.getElementsByTagName('button')[0];\n                uploadBtnElem.className = 'e-tbar-btn e-tbtn-txt top-icon';\n                uploadBtnElem.innerHTML = '';\n                uploadBtnElem.title = this.l10n.getConstant('Browse');\n                uploadBtnElem.appendChild(parent.createElement('span', {\n                    className: 'e-btn-icon e-icons e-upload-icon e-icon-left'\n                }));\n                uploadElem.onchange = this.fileSelect.bind(this, uploadElem);\n            }\n        }\n    };\n    ToolbarModule.prototype.fileSelect = function (inputElement, args) {\n        var parent = this.parent;\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var type = inputElement.files[0].type.split('/')[1];\n        var filesTypes = this.parent.getExtensionArray();\n        var isJPG = ((type === 'jpg' || type === 'jpeg') &&\n            (parent.uploadSettings.allowedExtensions.indexOf('jpg') > -1 ||\n                parent.uploadSettings.allowedExtensions.indexOf('jpeg') > -1));\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.fileName = inputElement.files[0].name.split('.')[0];\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var size = inputElement.files[0].size;\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.parent.notify('toolbar', { prop: 'setInitialSize', value: { value: inputElement.files[0].size } });\n        if ((filesTypes.indexOf(type) > -1 || isJPG || (type.indexOf('svg') > -1 && filesTypes.indexOf('svg') > -1)) &&\n            (!this.parent.uploadSettings.minFileSize || size > this.parent.uploadSettings.minFileSize) &&\n            (!this.parent.uploadSettings.maxFileSize || size < this.parent.uploadSettings.maxFileSize)) {\n            this.parent.notify('draw', { prop: 'fileSelect', value: { inputElement: inputElement, args: args } });\n        }\n        else {\n            if (!this.parent.isImageLoaded) {\n                this.destroyTopToolbar();\n                this.createToolbar();\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.destroyBottomToolbar();\n                }\n            }\n            this.parent.showDialogPopup('unsupported', !((filesTypes.indexOf(type) > -1 || isJPG || (type.indexOf('svg') > -1 && filesTypes.indexOf('svg') > -1))));\n        }\n    };\n    ToolbarModule.prototype.triggerTbarClickEvent = function (args) {\n        var clickEvent = { item: args.item, originalEvent: args.event };\n        this.parent.trigger('toolbarItemClicked', clickEvent);\n    };\n    ToolbarModule.prototype.renderAnnotationBtn = function (isContextualToolbar) {\n        var _this = this;\n        var parent = this.parent;\n        var isCustomized = false;\n        var items = [];\n        var id = parent.element.id;\n        var defItems = ['Ellipse', 'Arrow', 'Line', 'Rectangle', 'Pen', 'Path', 'Text', 'Image'];\n        if (parent.toolbar) {\n            for (var i = 0; i < defItems.length; i++) {\n                if (parent.toolbar.indexOf(defItems[i]) !== -1) {\n                    isCustomized = true;\n                    break;\n                }\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Pen') > -1)) {\n            items.push({ text: this.l10n.getConstant('Pen'), id: 'pen', iconCss: 'e-icons e-free-pen' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Line') > -1)) {\n            items.push({ text: this.l10n.getConstant('Line'), id: 'line', iconCss: 'e-icons e-line' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Rectangle') > -1)) {\n            items.push({ text: this.l10n.getConstant('Rectangle'), id: 'rectangle', iconCss: 'e-icons e-rectangle' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Ellipse') > -1)) {\n            items.push({ text: this.l10n.getConstant('Ellipse'), id: 'ellipse', iconCss: 'e-icons e-circle' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Arrow') > -1)) {\n            items.push({ text: this.l10n.getConstant('Arrow'), id: 'arrow', iconCss: 'e-icons e-arrow-right-up' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Path') > -1)) {\n            items.push({ text: this.l10n.getConstant('Path'), id: 'path', iconCss: 'e-icons e-critical-path' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Text') > -1)) {\n            items.push({ text: this.l10n.getConstant('Text'), id: 'text', iconCss: 'e-icons e-add-text' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Image') > -1)) {\n            items.push({ text: this.l10n.getConstant('Image'), id: 'image', iconCss: 'e-icons e-image' });\n        }\n        var obj = { freehandDrawSelectedId: null };\n        parent.notify('freehand-draw', { prop: 'getFreehandDrawSelectedId', onPropertyChange: false, value: { obj: obj } });\n        var toolbarId = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? '#' + id + '_bottomToolbar ' + '#' + id : '#' + id;\n        this.enableDisableCloneBtn(toolbarId, obj);\n        var iconCss = isContextualToolbar ? this.getCurrentShapeIcon(parent.activeObj.shape) : 'e-annotation';\n        var drpDownBtn = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({ items: items, iconCss: 'e-icons ' + iconCss,\n            cssClass: 'e-image-popup',\n            open: function (args) {\n                if (parent.currObjType.isFiltered || parent.currObjType.isRedact) {\n                    parent.okBtn();\n                    parent.element.querySelector('#' + id + '_annotationBtn').click();\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    args.element.parentElement.style.top = drpDownBtn.element.getBoundingClientRect().top -\n                        args.element.parentElement.offsetHeight + 'px';\n                }\n                if (parent.activeObj.shape) {\n                    document.getElementById(parent.activeObj.shape).classList.add('e-selected');\n                }\n                else if (parent.togglePen) {\n                    document.getElementById('pen').classList.add('e-selected');\n                }\n            },\n            select: function (args) {\n                parent.noPushUndo = false;\n                _this.triggerTbarClickEvent(args);\n                parent.okBtn();\n                var isCropSelection = false;\n                var splitWords;\n                if (parent.activeObj.shape !== undefined) {\n                    splitWords = parent.activeObj.shape.split('-');\n                }\n                if (splitWords === undefined && parent.currObjType.isCustomCrop) {\n                    isCropSelection = true;\n                }\n                else if (splitWords !== undefined && splitWords[0] === 'crop') {\n                    isCropSelection = true;\n                }\n                parent.currObjType.isCustomCrop = false;\n                if (isCropSelection || parent.togglePan) {\n                    parent.notify('shape', { prop: 'refreshActiveObj', onPropertyChange: false });\n                    _this.upperContext.clearRect(0, 0, parent.upperCanvas.width, parent.upperCanvas.height);\n                    _this.refreshToolbar('main');\n                }\n                var obj = { currentFreehandDrawIndex: null };\n                parent.notify('freehand-draw', { prop: 'getCurrentFreehandDrawIndex', value: { obj: obj } });\n                var prevObj = { shapeSettingsObj: {} };\n                var shapeSettings;\n                var shapeChangingArgs;\n                var shapes = ['ellipse', 'rectangle', 'text', 'image'];\n                var allowOutofBound;\n                drpDownBtn.iconCss = 'e-icons ' + _this.getCurrentShapeIcon(args.item.id);\n                parent.notify('draw', { prop: 'updateTempObjColl' });\n                parent.notify('draw', { prop: 'updateTempPointColl' });\n                var penStrokeWidthObj = { penStrokeWidth: 2 };\n                switch (args.item.id) {\n                    case 'pen':\n                        parent.notify('freehand-draw', { prop: 'getPenStrokeWidth', onPropertyChange: false, value: { obj: penStrokeWidthObj } });\n                        parent.notify('draw', { prop: 'setTempStrokeWidth', value: { strokeWidth: penStrokeWidthObj['penStrokeWidth'] } });\n                        parent.drawingShape = null;\n                        parent.notify('draw', { prop: 'setTempFreehandCounter', value: { tempFreehandCounter: parent.freehandCounter } });\n                        parent.notify('draw', { prop: 'setTempCurrentFreehandDrawIndex', value: { tempCurrentFreehandDrawIndex: obj['currentFreehandDrawIndex'] } });\n                        _this.currentToolbar = 'pen';\n                        parent.freeHandDraw(true);\n                        parent.notify('selection', { prop: 'updatePrevShapeSettings', onPropertyChange: false, value: { obj: prevObj } });\n                        shapeSettings = prevObj['shapeSettingsObj'];\n                        parent.notify('freehand-draw', { prop: 'getPenStrokeWidth', onPropertyChange: false, value: { obj: penStrokeWidthObj } });\n                        shapeSettings.strokeWidth = penStrokeWidthObj['penStrokeWidth'];\n                        shapeSettings.type = _index__WEBPACK_IMPORTED_MODULE_5__.ShapeType.FreehandDraw;\n                        shapeChangingArgs = { cancel: false, action: 'insert', previousShapeSettings: shapeSettings,\n                            currentShapeSettings: shapeSettings };\n                        parent.notify('freehand-draw', { prop: 'triggerShapeChanging', value: { shapeChangingArgs: shapeChangingArgs } });\n                        break;\n                    case 'text':\n                        _this.currentToolbar = 'text';\n                        parent.drawingShape = args.item.id;\n                        _this.currentToolbar = 'text';\n                        _this.setInitialShapeSettings(args);\n                        parent.notify('selection', { prop: 'annotate', value: { shape: args.item.id } });\n                        parent.notify('toolbar', { prop: 'refresh-toolbar', onPropertyChange: false, value: { type: 'text',\n                                isApplyBtn: null, isCropping: null, isZooming: null, cType: null } });\n                        break;\n                    case 'image':\n                        parent.drawingShape = null;\n                        _this.currentToolbar = 'shapes';\n                        parent.element.querySelector('#' + id + '_fileUpload').click();\n                        break;\n                    case 'ellipse':\n                    case 'arrow':\n                    case 'line':\n                    case 'rectangle':\n                    case 'path':\n                        parent.drawingShape = args.item.id;\n                        _this.currentToolbar = 'shapes';\n                        _this.setInitialShapeSettings(args);\n                        parent.notify('selection', { prop: 'annotate', value: { shape: args.item.id } });\n                        parent.notify('toolbar', { prop: 'refresh-toolbar', onPropertyChange: false, value: { type: 'shapes',\n                                isApplyBtn: null, isCropping: null, isZooming: null, cType: null } });\n                        parent.notify('selection', { prop: 'updatePrevShapeSettings', onPropertyChange: false, value: { obj: prevObj } });\n                        shapeSettings = prevObj['shapeSettingsObj'];\n                        allowOutofBound = shapes.indexOf(_this.parent.activeObj.shape) !== -1 ? false : true;\n                        shapeChangingArgs = { cancel: false, action: 'insert', previousShapeSettings: shapeSettings,\n                            currentShapeSettings: shapeSettings, allowShapeOverflow: allowOutofBound };\n                        parent.trigger('shapeChanging', shapeChangingArgs);\n                        parent.editCompleteArgs = shapeChangingArgs;\n                        parent.notify('shape', { prop: 'updateShapeChangeEventArgs', value: { shapeSettings: shapeChangingArgs.currentShapeSettings } });\n                        break;\n                }\n                _this.updateToolbarItems();\n                var tempTogglePen = parent.togglePen;\n                if (args.item.id === 'pen') {\n                    parent.togglePen = false;\n                }\n                parent.notify('draw', { prop: 'redrawDownScale' });\n                parent.togglePen = tempTogglePen;\n            }\n        });\n        // Render initialized DropDownButton.\n        drpDownBtn.appendTo('#' + id + '_annotationBtn');\n    };\n    ToolbarModule.prototype.enableDisableCloneBtn = function (toolbarId, obj) {\n        var parent = this.parent;\n        var isDummyTextClick = false;\n        var width = Math.floor(parent.activeObj.activePoint.width);\n        if (parent.activeObj.shape && parent.activeObj.shape === 'text' &&\n            parent.activeObj.textSettings.fontSize === 11 && (width === 55 || (parent.activeObj.textSettings.bold && width === 58)) &&\n            Math.floor(parent.activeObj.activePoint.height) === 11) {\n            isDummyTextClick = true;\n        }\n        var duplicateElement = document.querySelector(toolbarId + '_duplicate');\n        var removeElement = document.querySelector(toolbarId + '_remove');\n        var editTextElement = document.querySelector(toolbarId + '_editText');\n        var zOrderElement = document.querySelector(toolbarId + '_zOrderBtn');\n        if (isDummyTextClick || (parent.activeObj.activePoint.width === 0 && parent.activeObj.activePoint.height === 0) &&\n            ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.activeObj.pointColl) || (parent.activeObj.pointColl\n                && parent.activeObj.pointColl.length === 0)) &&\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(obj['freehandDrawSelectedId'])) {\n            if (duplicateElement) {\n                duplicateElement.classList.add('e-overlay');\n            }\n            if (removeElement) {\n                removeElement.classList.add('e-overlay');\n            }\n            if (editTextElement) {\n                editTextElement.classList.add('e-overlay');\n            }\n            if (zOrderElement) {\n                zOrderElement.classList.add('e-overlay');\n            }\n        }\n        else {\n            if (duplicateElement) {\n                duplicateElement.classList.remove('e-overlay');\n            }\n            if (removeElement) {\n                removeElement.classList.remove('e-overlay');\n            }\n            if (editTextElement) {\n                editTextElement.classList.remove('e-overlay');\n            }\n            if (zOrderElement) {\n                zOrderElement.classList.remove('e-overlay');\n            }\n        }\n        if (zOrderElement && (parent.shapeColl.length === 0 || (obj['freehandDrawSelectedId'] && parent.shapeColl.length === 1))) {\n            zOrderElement.classList.add('e-overlay');\n        }\n    };\n    ToolbarModule.prototype.renderStraightenSlider = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('Straightening') > -1)) &&\n            parent.element.querySelector('#' + id + '_straightenSlider')) {\n            var slider = this.createSlider(-45, 45, parent.cropObj.straighten, 'straighten');\n            slider.appendTo('#' + id + '_straightenSlider');\n            var sliderHandle = slider.element.querySelector('.e-handle');\n            if (sliderHandle && !_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                sliderHandle.addEventListener('mousedown', function (e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                });\n                sliderHandle.addEventListener('touchstart', function (e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                });\n            }\n        }\n    };\n    ToolbarModule.prototype.renderCropBtn = function (shapeString) {\n        var _this = this;\n        var parent = this.parent;\n        var items = [];\n        var isCustomized = false;\n        var defItems = ['CustomSelection', 'CircleSelection', 'SquareSelection', 'RatioSelection'];\n        if (parent.toolbar) {\n            for (var i = 0; i < defItems.length; i++) {\n                if (parent.toolbar.indexOf(defItems[i]) !== -1) {\n                    isCustomized = true;\n                    break;\n                }\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('CustomSelection') > -1)) {\n            items.push({ text: this.l10n.getConstant('Custom'), id: 'custom', iconCss: 'e-icons e-custom' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('CircleSelection') > -1)) {\n            items.push({ text: this.l10n.getConstant('Circle'), id: 'circle', iconCss: 'e-icons e-circle' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('SquareSelection') > -1)) {\n            items.push({ text: this.l10n.getConstant('Square'), id: 'square', iconCss: 'e-icons e-square' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('RatioSelection') > -1)) {\n            items.push({ text: '2:3', id: '2:3', iconCss: 'e-icons e-custom-f' });\n            items.push({ text: '3:2', id: '3:2', iconCss: 'e-icons e-custom-a' });\n            items.push({ text: '3:4', id: '3:4', iconCss: 'e-icons e-custom-g' });\n            items.push({ text: '4:3', id: '4:3', iconCss: 'e-icons e-custom-b' });\n            items.push({ text: '4:5', id: '4:5', iconCss: 'e-icons e-custom-h' });\n            items.push({ text: '5:4', id: '5:4', iconCss: 'e-icons e-custom-c' });\n            items.push({ text: '5:7', id: '5:7', iconCss: 'e-icons e-custom-i' });\n            items.push({ text: '7:5', id: '7:5', iconCss: 'e-icons e-custom-d' });\n            items.push({ text: '9:16', id: '9:16', iconCss: 'e-icons e-custom-j' });\n            items.push({ text: '16:9', id: '16:9', iconCss: 'e-icons e-custom-e' });\n        }\n        var iconCss;\n        var shape;\n        if (shapeString) {\n            iconCss = this.getCurrentShapeIcon(shapeString);\n            shape = shapeString;\n        }\n        else if (parent.activeObj.shape &&\n            (parent.activeObj.activePoint.width !== 0 || parent.activeObj.activePoint.height !== 0) ||\n            (parent.activeObj.shape === 'path' && parent.activeObj.pointColl.length > 0)) {\n            iconCss = this.getCurrentShapeIcon(parent.activeObj.shape);\n            shape = parent.activeObj.shape;\n        }\n        else if (parent.currSelectionPoint) {\n            iconCss = this.getCurrentShapeIcon(parent.currSelectionPoint.shape);\n            shape = parent.currSelectionPoint.shape;\n        }\n        else {\n            iconCss = items[0].iconCss;\n            shape = items[0].id;\n        }\n        var drpDownBtn = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({\n            open: function (args) {\n                if (parent.togglePan) {\n                    _this.cancelPan();\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    args.element.parentElement.style.top = drpDownBtn.element.getBoundingClientRect().top -\n                        args.element.parentElement.offsetHeight + 'px';\n                }\n                if (parent.activeObj.shape && parent.activeObj.shape.split('-').length > 1) {\n                    var elem = document.getElementById(parent.activeObj.shape.split('-')[1]);\n                    if (elem) {\n                        elem.classList.add('e-selected');\n                        elem.focus();\n                    }\n                }\n                parent.notify('transform', { prop: 'disableZoomOutBtn', value: { isZoomOut: true } });\n            },\n            items: items,\n            select: function (args) {\n                _this.triggerTbarClickEvent(args);\n                _this.cropSelect(args);\n                drpDownBtn.iconCss = 'e-icons ' + _this.getCurrentShapeIcon('crop-' + args.item.id);\n                drpDownBtn.content = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? null : parent.toPascalCase(args.item.id);\n            },\n            iconCss: 'e-icons ' + iconCss, cssClass: 'e-image-popup e-ie-crop-ddb-popup',\n            content: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? null : parent.toPascalCase(shape.replace('crop-', ''))\n        });\n        drpDownBtn.appendTo('#' + parent.element.id + '_cropBtn');\n    };\n    ToolbarModule.prototype.renderTransformBtn = function () {\n        var _this = this;\n        var parent = this.parent;\n        var items = [];\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('RotateLeft') > -1)) {\n            items.push({ text: this.l10n.getConstant('RotateLeft'), id: 'rotateleft', iconCss: 'e-icons e-anti-clock-wise' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('RotateRight') > -1)) {\n            items.push({ text: this.l10n.getConstant('RotateRight'), id: 'rotateright', iconCss: 'e-icons e-clock-wise' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('FlipHorizontal') > -1)) {\n            items.push({ text: this.l10n.getConstant('HorizontalFlip'), id: 'horizontalflip', iconCss: 'e-icons e-horizontal-flip' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('FlipVertical') > -1)) {\n            items.push({ text: this.l10n.getConstant('VerticalFlip'), id: 'verticalflip', iconCss: 'e-icons e-vertical-flip' });\n        }\n        var drpDownBtn = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({\n            open: function (args) {\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    var elem = args.element.parentElement;\n                    var ht = elem.offsetHeight;\n                    elem.style.display = 'none';\n                    elem.style.top = drpDownBtn.element.getBoundingClientRect().top - ht + 'px';\n                    elem.style.display = 'block';\n                }\n            },\n            items: items,\n            select: function (args) {\n                _this.triggerTbarClickEvent(args);\n                parent.transformSelect.bind(_this);\n            },\n            iconCss: 'e-icons e-transform', cssClass: 'e-image-popup'\n        });\n        drpDownBtn.appendTo('#' + parent.element.id + '_transformBtn');\n    };\n    ToolbarModule.prototype.saveDialogPopup = function () {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        var quality = ['Good', 'Great', 'Highest'];\n        parent.element.appendChild(parent.createElement('div', { id: id + '_saveDialog' }));\n        var dialogContent = parent.createElement('div', {\n            id: id + '_dialogContent'\n        });\n        dialogContent.style.display = 'flex';\n        var dialogImgContent = dialogContent.appendChild(parent.createElement('div', {\n            id: id + '_dialogImgContent', className: 'e-ie-dlg-img-content'\n        }));\n        dialogImgContent.appendChild(parent.createElement('canvas', {\n            id: id + '_imgPic', className: 'e-ie-img-dlg-canvas'\n        }));\n        var imageNameContainer = dialogImgContent.appendChild(parent.createElement('div', {\n            id: id + '_imageNameContainer', className: 'e-ie-img-size'\n        }));\n        imageNameContainer.appendChild(parent.createElement('span', {\n            id: id + '_imageNameLabel', className: 'e-ie-quality-info'\n        }));\n        var dialogRightContent = dialogContent.appendChild(parent.createElement('div', {\n            id: id + '_dialogRightContent', className: 'e-ie-dlg-right-content'\n        }));\n        var imageNameDiv = dialogRightContent.appendChild(parent.createElement('div', {\n            id: id + '_namediv', className: 'e-ie-img-save-name'\n        }));\n        imageNameDiv.appendChild(parent.createElement('span', {\n            id: id + '_labelImgname', className: 'e-ie-img-label-name', innerHTML: this.l10n.getConstant('ImageName')\n        }));\n        imageNameDiv.appendChild(parent.createElement('input', {\n            id: id + '_imgNametext', className: 'e-ie-img-input', attrs: { type: 'text' }\n        }));\n        var formatNameDiv = dialogRightContent.appendChild(parent.createElement('div', {\n            id: id + '_imgNamediv', className: 'e-ie-img-save-dlg'\n        }));\n        formatNameDiv.appendChild(parent.createElement('span', {\n            id: id + '_labelname', className: 'e-ie-img-label-name', innerHTML: this.l10n.getConstant('Format')\n        }));\n        formatNameDiv.appendChild(parent.createElement('button', {\n            id: id + '_saveDropdownbtn', attrs: { tabindex: '1' }\n        }));\n        var qualityNameDiv = dialogRightContent.appendChild(parent.createElement('div', {\n            id: id + '_imgQualitydiv', className: 'e-ie-img-quality-name'\n        }));\n        var qualityDiv = parent.createElement('div', {\n            id: id + '_qualityContainer'\n        });\n        qualityDiv.appendChild(parent.createElement('span', {\n            id: id + '_qualityLabel', className: 'e-ie-img-quality-label',\n            innerHTML: this.l10n.getConstant('Quality')\n        }));\n        qualityDiv.appendChild(parent.createElement('span', {\n            id: id + '_qualityInfo', className: 'e-circle-info e-icons e-ie-quality-span',\n            attrs: { title: this.l10n.getConstant('QualityInfo') }\n        }));\n        var qualityValueElem = qualityDiv.appendChild(parent.createElement('div', {\n            id: id + '_imgsizeSpan',\n            className: 'e-ie-img-size-value-span'\n        }));\n        qualityValueElem.appendChild(parent.createElement('span', {\n            id: id + '_imgsizeValueSpan', className: ''\n        }));\n        qualityNameDiv.appendChild(qualityDiv);\n        var qualityOptionDiv = parent.createElement('div', {\n            id: id + '_qualityOptionContainer', className: 'e-ie-quality-option-container'\n        });\n        var buttonGroup = qualityNameDiv.appendChild(parent.createElement('div', {\n            id: id + '_qualityButtonGroup', className: 'e-btn-group'\n        }));\n        // eslint-disable-next-line @typescript-eslint/tslint/config\n        quality.forEach(function (option) {\n            var input = document.createElement('input');\n            input.type = 'radio';\n            input.id = id + '_' + option.toLowerCase();\n            input.name = 'quality';\n            input.value = option.toLowerCase();\n            var label = document.createElement('label');\n            label.className = 'e-btn';\n            label.htmlFor = option.toLowerCase();\n            label.textContent = _this.l10n.getConstant(option);\n            buttonGroup.appendChild(input);\n            buttonGroup.appendChild(label);\n        });\n        qualityOptionDiv.appendChild(buttonGroup);\n        qualityOptionDiv.appendChild(parent.createElement('div', {\n            id: id + '_qualitySlider', className: 'e-ie-img-quality-slider'\n        }));\n        qualityOptionDiv.appendChild(parent.createElement('button', { id: id + '_qualitybuttonIcon', className: 'e-ie-img-icon-button', attrs: { type: 'button' } }));\n        qualityNameDiv.appendChild(qualityOptionDiv);\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            dialogRightContent.appendChild(parent.createElement('span', {\n                id: id + '_qualitySize', className: 'e-ie-img-quality-size'\n            }));\n        }\n        parent.element.querySelector('#' + id + '_saveDialog').style.display = 'block';\n        parent.element.appendChild(dialogContent);\n        var dialog = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.Dialog({\n            target: parent.element,\n            header: this.l10n.getConstant('SaveAs'),\n            closeOnEscape: true, content: document.getElementById(id + '_dialogContent'),\n            width: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? '345px' : '570px', isModal: true, animationSettings: { effect: 'Zoom' }, beforeOpen: this.onBeforeopen(),\n            close: this.saveDialogClosed.bind(this, id),\n            cssClass: 'e-ie-save-dialog',\n            buttons: [\n                {\n                    'click': function () {\n                        dialog.hide();\n                    },\n                    buttonModel: {\n                        content: this.l10n.getConstant('Close'), cssClass: 'e-save-cancel-btn'\n                    }\n                },\n                {\n                    'click': function () {\n                        _this.download();\n                        dialog.hide();\n                        _this.isSlider = false;\n                    },\n                    buttonModel: {\n                        isPrimary: true, content: this.l10n.getConstant('Download'), cssClass: 'e-flat e-save-download-btn'\n                    }\n                }\n            ]\n        });\n        dialog.appendTo('#' + id + '_saveDialog');\n    };\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    ToolbarModule.prototype.saveDialogClosed = function (id) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(document.getElementById(id + '_saveDropdownbtn'), 'dropdownbutton')) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(document.getElementById(id + '_saveDropdownbtn'), 'dropdownbutton').destroy();\n        }\n        this.isSlider = false;\n        if (document.querySelector('#' + id + '_qualityButtonGroup') &&\n            document.querySelector('#' + id + '_qualitySlider')) {\n            document.querySelector('#' + id + '_qualityButtonGroup').remove();\n            document.querySelector('#' + id + '_qualitySlider').remove();\n            document.querySelector('#' + id + '_imgsizeValueSpan').remove();\n            document.querySelector('#' + id + '_imageNameLabel').remove();\n            document.querySelector('#' + id + '_imgsizeSpan').remove();\n        }\n        document.getElementById(id + '_dialogContent').remove();\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(document.getElementById(id + '_saveDialog'), 'dialog').destroy();\n        document.getElementById(id + '_saveDialog').remove();\n    };\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    ToolbarModule.prototype.onBeforeopen = function () {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        var obj = { canvas: null };\n        var items = [\n            { id: 'jpeg', text: 'JPEG' },\n            { id: 'png', text: 'PNG' },\n            { id: 'svg', text: 'SVG' },\n            { id: 'webp', text: 'WebP' }\n        ];\n        var inputObj = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.TextBox({\n            placeholder: this.l10n.getConstant('ImageName')\n        });\n        inputObj.appendTo('#' + id + '_imgNametext');\n        var qualityContainer = document.getElementById(id + '_imgQualitydiv');\n        var slider = document.getElementById(id + '_qualitySlider');\n        var qualityBtnGrp = document.querySelector('#' + id + '_qualityButtonGroup');\n        var qualityBtnIcon = document.querySelector('#' + id + '_qualitybuttonIcon');\n        var qualitySliderValue = document.querySelector('#' + id + '_imgsizeSpan');\n        var imageNameLabel;\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            imageNameLabel = document.getElementById(id + '_qualitySize');\n        }\n        else {\n            imageNameLabel = document.getElementById(id + '_imageNameLabel');\n        }\n        var fileObj = { fileName: '', fileType: '' };\n        parent.notify('draw', { prop: 'getFileName', onPropertyChange: false, value: { obj: fileObj } });\n        this.fileType = fileObj['fileType'] ? fileObj['fileType'] : 'JPEG';\n        parent.notify('export', { prop: 'exportToCanvas', value: { object: obj } });\n        var tempCanvas = obj['canvas'];\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var canvas = document.getElementById(id + '_imgPic');\n        canvas.width = tempCanvas.width;\n        canvas.height = tempCanvas.height;\n        var buttonIcon = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__.Button({ iconCss: 'e-icons e-settings' });\n        buttonIcon.appendTo('#' + id + '_qualitybuttonIcon');\n        var ddbElem = document.getElementById(id + '_saveDropdownbtn');\n        if (ddbElem) {\n            var spanElem_1 = document.createElement('span');\n            spanElem_1.innerHTML = this.fileType === 'Webp' ? 'Webp' : this.fileType.toUpperCase();\n            if (ddbElem) {\n                ddbElem.appendChild(spanElem_1);\n            }\n            var drpDownBtn_1 = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({\n                items: items,\n                open: function (args) {\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        args.element.parentElement.style.top = drpDownBtn_1.element.getBoundingClientRect().top -\n                            args.element.parentElement.offsetHeight + 'px';\n                    }\n                    var activeBtn = spanElem_1.innerHTML;\n                    if (activeBtn !== '') {\n                        args.element.querySelector('[aria-label = ' + '\"' + activeBtn + '\"' + ']').classList.add('e-selected-btn');\n                    }\n                },\n                select: function (args) {\n                    qualitySliderValue.style.display = 'none';\n                    _this.fileType = spanElem_1.innerHTML = args.item.text;\n                    if (args.item.id !== 'jpeg') {\n                        qualityContainer.style.display = 'none';\n                        imageNameLabel.style.display = 'block';\n                        _this.updateImageSize(1, obj['canvas'], _this.fileType);\n                        if (slider) {\n                            if (_this.isSlider) {\n                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(slider, 'slider').destroy();\n                            }\n                            slider.style.display = 'none';\n                        }\n                        _this.isSlider = false;\n                    }\n                    else {\n                        qualityContainer.style.display = 'block';\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([qualityBtnGrp], 'e-hide');\n                        slider.style.display = 'none';\n                        imageNameLabel.style.display = 'block';\n                        _this.updateImageSize((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.currentQuality) ? 1 : _this.currentQuality, obj['canvas'], _this.fileType);\n                        document.getElementById(id + '_' + _this.imageQuality).checked = true;\n                    }\n                }\n            });\n            drpDownBtn_1.appendTo('#' + id + '_saveDropdownbtn');\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n            var imgName = document.getElementById(id + '_imgNametext');\n            imgName.value = this.fileName ? this.fileName : fileObj['fileName'];\n            if (fileObj['fileType'] && fileObj['fileType'].toUpperCase() !== 'JPEG') {\n                qualityContainer.style.display = 'none';\n                qualitySliderValue.style.display = 'none';\n            }\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                document.getElementById(id + '_dialogImgContent').style.display = 'none';\n                document.getElementById(id + '_dialogRightContent').style.width = '100%';\n                this.updateImageSize(1, obj['canvas'], this.fileType);\n            }\n            else {\n                this.updateImageSize(1, obj['canvas'], this.fileType);\n            }\n        }\n        document.getElementById(id + '_' + this.imageQuality).checked = true;\n        qualityBtnGrp.addEventListener('click', this.qualityBtnClickHandler.bind(this));\n        qualityBtnIcon.addEventListener('click', this.qualityBtnClickHandler.bind(this));\n    };\n    ToolbarModule.prototype.qualityBtnClickHandler = function (event) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        var target = event.target;\n        var fileObj = { fileName: '' };\n        var obj = { canvas: null };\n        var compressionValues = {\n            'Good': 0.8,\n            'Great': 0.9,\n            'Highest': 1\n        };\n        var qualityBtnGrp = document.querySelector('#' + id + '_qualityButtonGroup');\n        var qualitySlider = document.querySelector('#' + id + '_qualitySlider');\n        var qualityOption = document.querySelector('#' + id + '_qualityOptionContainer');\n        var qualitySliderValueDiv = document.querySelector('#' + id + '_imgsizeSpan');\n        var qualitySliderValueSpan = document.querySelector('#' + id + '_imgsizeValueSpan');\n        parent.notify('draw', { prop: 'getFileName', onPropertyChange: false, value: { obj: fileObj } });\n        parent.notify('export', { prop: 'exportToCanvas', value: { object: obj } });\n        if (event.currentTarget.id === id + '_qualitybuttonIcon' && !this.isSlider) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([qualityBtnGrp], 'e-hide');\n            qualitySlider.style.display = 'block';\n            qualitySliderValueDiv.style.display = 'inline-block';\n            qualityOption.style.display = 'flex';\n            var sliderObj = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.Slider({\n                tooltip: { placement: 'Before', isVisible: true, format: 'P0', showOn: 'Focus' },\n                min: 0.01, max: 1, step: 0.01, value: this.currentQuality,\n                type: 'MinRange',\n                width: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? '80%' : '190px',\n                created: function () {\n                    _this.updateImageSize(_this.currentQuality, obj['canvas'], 'jpeg');\n                    qualitySliderValueSpan.innerHTML = (Math.round(_this.currentQuality * 100)).toString();\n                },\n                changed: function (args) {\n                    _this.currentQuality = args.value;\n                    qualitySliderValueSpan.innerHTML = (Math.round(_this.currentQuality * 100)).toString();\n                    parent.notify('export', { prop: 'setImageQuality', value: { value: args.value } });\n                    _this.updateImageSize(args.value, obj['canvas'], 'jpeg');\n                }\n            });\n            sliderObj.appendTo('#' + id + '_qualitySlider');\n            sliderObj.element.parentElement.classList.add('e-ie-quality-slider');\n            this.isSlider = true;\n        }\n        else if (event.currentTarget.id === id + '_qualitybuttonIcon' && this.isSlider) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(qualitySlider, 'slider').destroy();\n            qualitySlider.style.display = 'none';\n            qualitySliderValueDiv.style.display = 'none';\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([qualityBtnGrp], 'e-hide');\n            qualityOption.style.display = 'block';\n            this.isSlider = false;\n            // eslint-disable-next-line no-prototype-builtins\n        }\n        else if (compressionValues.hasOwnProperty(target.textContent) && !this.isSlider) {\n            event.target.previousElementSibling.checked = true;\n            this.currentQuality = compressionValues[target.textContent];\n            this.imageQuality = target.textContent.toLowerCase();\n            this.updateImageSize(compressionValues[target.textContent], obj['canvas'], 'jpeg');\n        }\n    };\n    ToolbarModule.prototype.updateImageSize = function (quality, tempCanvas, fileType) {\n        var fileSize;\n        var parent = this.parent;\n        var id = parent.element.id;\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var canvas = document.getElementById(id + '_imgPic');\n        var ctx = canvas.getContext('2d');\n        var imageNameLabel;\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            imageNameLabel = document.getElementById(id + '_qualitySize');\n        }\n        else {\n            imageNameLabel = document.getElementById(id + '_imageNameLabel');\n        }\n        if (fileType.toLowerCase() === 'jpeg') {\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n            tempCanvas.toBlob((function (blob) {\n                fileSize = Math.floor(blob.size / 1024);\n                if (fileSize > 1000) {\n                    var megabytes = fileSize / 1024;\n                    imageNameLabel.innerHTML = this.l10n.getConstant('ImageSize') + ': ' + megabytes.toFixed(2) + ' MB';\n                    fileSize = +megabytes.toFixed(2);\n                }\n                else {\n                    imageNameLabel.innerHTML = this.l10n.getConstant('ImageSize') + ': ' + fileSize.toFixed(2) + ' KB';\n                    fileSize = +fileSize.toFixed(2);\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    canvas.style.display = 'none';\n                }\n                else {\n                    var compressedImage_1 = new Image();\n                    compressedImage_1.src = URL.createObjectURL(blob);\n                    // eslint-disable-next-line @typescript-eslint/tslint/config\n                    compressedImage_1.onload = function () {\n                        ctx.drawImage(compressedImage_1, 0, 0);\n                        URL.revokeObjectURL(compressedImage_1.src);\n                    };\n                }\n                this.fileSize = fileSize;\n            }).bind(this), 'image/jpeg', quality);\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(fileType) && (fileType.toLowerCase() === 'png' || fileType.toLowerCase() === 'webp')) {\n            var type = 'image/' + fileType.toLowerCase();\n            ctx.drawImage(tempCanvas, 0, 0);\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n            tempCanvas.toBlob((function (blob) {\n                fileSize = Math.floor(blob.size / 1024);\n                if (fileSize > 1000) {\n                    var megabytes = fileSize / 1024;\n                    imageNameLabel.innerHTML = this.l10n.getConstant('ImageSize') + ': ' + megabytes.toFixed(2) + ' MB';\n                    fileSize = +megabytes.toFixed(2);\n                }\n                else {\n                    imageNameLabel.innerHTML = this.l10n.getConstant('ImageSize') + ': ' + fileSize.toFixed(2) + ' KB';\n                    fileSize = +fileSize.toFixed(2);\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    canvas.style.display = 'none';\n                }\n                this.fileSize = fileSize;\n            }).bind(this), type, 1);\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(fileType) && fileType.toLowerCase() === 'svg') {\n            ctx.drawImage(tempCanvas, 0, 0);\n            var svgDataUrl = tempCanvas.toDataURL('image/svg+xml');\n            var base64Data = svgDataUrl.split(',')[1];\n            var binaryStringLength = base64Data.length;\n            var rawByteSize = binaryStringLength;\n            var fileSize_1 = Math.floor(rawByteSize / 1024); // KB\n            if (fileSize_1 > 1000) {\n                var megabytes = fileSize_1 / 1024; // Convert to MB\n                imageNameLabel.innerHTML = this.l10n.getConstant('ImageSize') + ': ' + megabytes.toFixed(2) + ' MB';\n                fileSize_1 = +megabytes.toFixed(2);\n            }\n            else {\n                imageNameLabel.innerHTML = this.l10n.getConstant('ImageSize') + ': ' + fileSize_1.toFixed(2) + ' KB';\n                fileSize_1 = +fileSize_1.toFixed(2);\n            }\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                canvas.style.display = 'none';\n            }\n            this.fileSize = fileSize_1;\n        }\n        else {\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                canvas.style.display = 'none';\n            }\n            else {\n                ctx.drawImage(tempCanvas, 0, 0);\n                if (this.initialSize > 1000) {\n                    var megabytes = this.initialSize / 1048576;\n                    imageNameLabel.innerHTML = this.l10n.getConstant('ImageSize') + ': ' + megabytes.toFixed(2) + ' MB';\n                }\n                else {\n                    imageNameLabel.innerHTML = this.l10n.getConstant('ImageSize') + ': ' + this.initialSize.toFixed(2) + ' KB';\n                }\n            }\n        }\n    };\n    ToolbarModule.prototype.download = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (this.fileType === 'JPEG' && this.isSlider) {\n            var value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(document.getElementById(id + '_qualitySlider'), 'slider').value;\n            parent.notify('export', { prop: 'setImageQuality', value: { value: value } });\n        }\n        else {\n            parent.notify('export', { prop: 'setImageQuality', value: { value: this.currentQuality } });\n        }\n        var fileName = document.getElementById(id + '_imgNametext').value;\n        parent.export(this.fileType, fileName);\n    };\n    ToolbarModule.prototype.getCropTransformToolbarItem = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var toolbarItems = [];\n        toolbarItems.push({ id: id + '_crop', tooltipText: this.l10n.getConstant('CropSelection'), align: 'Center',\n            template: '<button id=\"' + id + '_cropBtn\"></button>'\n        });\n        toolbarItems.push({ align: 'Center', type: 'Separator' });\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && (parent.toolbar.indexOf('Transform') > -1 || parent.toolbar.indexOf('RotateLeft') > -1))) {\n            toolbarItems.push({ id: id + '_rotateLeft', prefixIcon: 'e-icons e-anti-clock-wise', tooltipText: this.l10n.getConstant('RotateLeft'), align: 'Center' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && (parent.toolbar.indexOf('Transform') > -1 || parent.toolbar.indexOf('RotateRight') > -1))) {\n            toolbarItems.push({ id: id + '_rotateRight', prefixIcon: 'e-icons e-clock-wise', tooltipText: this.l10n.getConstant('RotateRight'), align: 'Center' });\n        }\n        if (toolbarItems.length > 2) {\n            toolbarItems.push({ align: 'Center', type: 'Separator' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && (parent.toolbar.indexOf('Transform') > -1 || parent.toolbar.indexOf('HorizontalFlip') > -1))) {\n            toolbarItems.push({ id: id + '_horizontalFlip', prefixIcon: 'e-icons e-horizontal-flip', tooltipText: this.l10n.getConstant('HorizontalFlip'), align: 'Center' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && (parent.toolbar.indexOf('Transform') > -1 || parent.toolbar.indexOf('VerticalFlip') > -1))) {\n            toolbarItems.push({ id: id + '_verticalFlip', prefixIcon: 'e-icons e-vertical-flip', tooltipText: this.l10n.getConstant('VerticalFlip'), align: 'Center' });\n        }\n        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('Straightening') > -1)) && !_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            toolbarItems.push({ align: 'Center', type: 'Separator' });\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('Straightening') > -1)) {\n                var spanWidth = document.createElement('span');\n                spanWidth.innerHTML = this.l10n.getConstant('Straighten');\n                toolbarItems.push({ id: id + '_straightenSpan', cssClass: 'e-ie-straighten-span', template: spanWidth, align: 'Center' });\n                toolbarItems.push({ id: id + '_straighten',\n                    cssClass: 'top-icon e-straighten', tooltipText: this.l10n.getConstant('Straighten'), align: 'Center', type: 'Input',\n                    template: '<div id=\"' + id + '_straightenSlider\"></div>' });\n                var straightenSpan = document.createElement('span');\n                straightenSpan.innerHTML = parent.transform.straighten.toString() + '&#176';\n                toolbarItems.push({ id: id + '_straightenSpan', cssClass: 'e-ie-straighten-value-span',\n                    template: straightenSpan, align: 'Center' });\n            }\n        }\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            toolbarItems.push({ id: id + '_ok', prefixIcon: 'e-icons e-check', cssClass: 'top-icon e-tick',\n                tooltipText: this.l10n.getConstant('OK'), align: 'Right', tabIndex: 0 });\n            toolbarItems.push({ id: id + '_cancel', prefixIcon: 'e-icons e-close', cssClass: 'top-icon e-save',\n                tooltipText: this.l10n.getConstant('Cancel'), align: 'Right' });\n        }\n        return toolbarItems;\n    };\n    ToolbarModule.prototype.getShapesToolbarItem = function (items) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var toolbarItems = [];\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar)) {\n            toolbarItems.push({ id: id + '_annotation', tooltipText: this.l10n.getConstant('Annotation'), align: 'Center',\n                template: '<button id=\"' + id + '_annotationBtn\"></button>' });\n        }\n        if (items.indexOf('fillColor') > -1) {\n            toolbarItems.push({ prefixIcon: 'e-icons e-copy', id: id + '_fillcolor',\n                cssClass: 'top-icon e-fill', tooltipText: this.l10n.getConstant('FillColor'), align: 'Center', type: 'Input',\n                template: '<button id=\"' + id + '_fillColorBtn\"></button>' });\n        }\n        if (items.indexOf('strokeColor') > -1) {\n            toolbarItems.push({ prefixIcon: 'e-icons e-copy', id: id + '_strokecolor',\n                cssClass: 'top-icon e-stroke', tooltipText: this.l10n.getConstant('StrokeColor'), align: 'Center', type: 'Input',\n                template: '<button id=\"' + id + '_borderColorBtn\"></button>' });\n        }\n        if (items.indexOf('strokeWidth') > -1) {\n            toolbarItems.push({ id: id + '_strokeWidth', cssClass: 'top-icon e-size', tooltipText: this.l10n.getConstant('StrokeWidth'), align: 'Center',\n                type: 'Input', template: '<button id=\"' + id + '_borderWidthBtn\"></button>' });\n        }\n        if (items.indexOf('start') > -1) {\n            toolbarItems.push({ id: id + '_start', cssClass: 'top-icon e-size', tooltipText: this.l10n.getConstant('Start'), align: 'Center',\n                type: 'Input', template: '<button id=\"' + id + '_startBtn\"></button>' });\n        }\n        if (items.indexOf('borderRadius') > -1) {\n            toolbarItems.push({ id: id + '_rectangleRadius', cssClass: 'top-icon e-size', tooltipText: this.l10n.getConstant('BorderRadius'), align: 'Center',\n                type: 'Input', template: '<button id=\"' + id + '_rectangleRadiusBtn\"></button>' });\n        }\n        if (items.indexOf('end') > -1) {\n            toolbarItems.push({ id: id + '_end', cssClass: 'top-icon e-size', tooltipText: this.l10n.getConstant('End'), align: 'Center',\n                type: 'Input', template: '<button id=\"' + id + '_endBtn\"></button>' });\n        }\n        if (items.indexOf('flip') > -1) {\n            toolbarItems.push({ id: id + '_rotLeft', prefixIcon: 'e-anti-clock-wise',\n                tooltipText: this.l10n.getConstant('RotateLeft'), align: 'Center' });\n            toolbarItems.push({ id: id + '_rotRight', prefixIcon: 'e-clock-wise',\n                tooltipText: this.l10n.getConstant('RotateRight'), align: 'Center' });\n            toolbarItems.push({ id: id + '_hFlip', prefixIcon: 'e-horizontal-flip',\n                tooltipText: this.l10n.getConstant('HorizontalFlip'), align: 'Center' });\n            toolbarItems.push({ id: id + '_vFlip', prefixIcon: 'e-vertical-flip',\n                tooltipText: this.l10n.getConstant('VerticalFlip'), align: 'Center' });\n        }\n        if (items.indexOf('transparency') > -1) {\n            toolbarItems.push({ align: 'Center', type: 'Separator' });\n            toolbarItems.push({ id: id + '_transparency', prefixIcon: 'e-opacity',\n                tooltipText: this.l10n.getConstant('Opacity'), align: 'Center' });\n        }\n        toolbarItems.push({ align: 'Center', type: 'Separator' });\n        if (items.indexOf('z-order') > -1) {\n            toolbarItems.push({ id: id + '_zOrder', cssClass: 'top-icon e-list-unordered-3', tooltipText: this.l10n.getConstant('ZOrder'), align: 'Center',\n                type: 'Input', template: '<button id=\"' + id + '_zOrderBtn\"></button>' });\n        }\n        if (items.indexOf('duplicate') > -1) {\n            toolbarItems.push({ id: id + '_duplicate', prefixIcon: 'e-icons e-order', cssClass: 'top-icon e-order',\n                tooltipText: this.l10n.getConstant('Duplicate'), align: 'Center' });\n        }\n        if (items.indexOf('remove') > -1) {\n            toolbarItems.push({ id: id + '_remove', prefixIcon: 'e-icons e-trash', cssClass: 'top-icon e-trash',\n                tooltipText: this.l10n.getConstant('Remove'), align: 'Center' });\n        }\n        if (items.indexOf('text') > -1) {\n            toolbarItems.push({ id: id + '_editText', prefixIcon: 'e-icons e-annotation-edit', cssClass: 'top-icon e-annotation-edit',\n                tooltipText: this.l10n.getConstant('EditText'), align: 'Center' });\n        }\n        var tempToolbarItems = this.processSubToolbar(items);\n        for (var i = 0, len = tempToolbarItems.length; i < len; i++) {\n            toolbarItems.push(tempToolbarItems[i]);\n        }\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            var obj = { shape: null };\n            parent.notify('selection', { prop: 'getCurrentDrawingShape', value: { obj: obj } });\n            if (obj['shape'] !== 'path') {\n                toolbarItems.push({ id: id + '_ok', prefixIcon: 'e-icons e-check', cssClass: 'top-icon e-tick',\n                    tooltipText: this.l10n.getConstant('OK'), align: 'Right', tabIndex: 0 });\n                toolbarItems.push({ id: id + '_cancel', prefixIcon: 'e-icons e-close', cssClass: 'top-icon e-save',\n                    tooltipText: this.l10n.getConstant('Cancel'), align: 'Right' });\n            }\n        }\n        return toolbarItems;\n    };\n    ToolbarModule.prototype.initCropTransformToolbar = function (shape, isTransform) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        var leftItem = this.getLeftToolbarItem();\n        var rightItem = this.getRightToolbarItem();\n        var mainItem = this.getCropTransformToolbarItem();\n        var zoomItem = this.getZoomToolbarItem();\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.defToolbarItems = mainItem;\n        }\n        else {\n            this.defToolbarItems = leftItem.concat(zoomItem, mainItem, rightItem);\n        }\n        var args = { toolbarType: 'crop-transform', toolbarItems: this.defToolbarItems };\n        parent.trigger('toolbarUpdating', args);\n        this.defToolbarItems = args.toolbarItems;\n        var toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.Toolbar({\n            width: '100%',\n            items: this.defToolbarItems,\n            clicked: this.defToolbarClicked.bind(this),\n            created: function () {\n                _this.renderCropBtn(shape);\n                _this.renderStraightenSlider();\n                _this.wireZoomBtnEvents();\n                parent.trigger('toolbarCreated', { toolbarType: 'shapes' });\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    if (_this.defToolbarItems.length > 0 && document.getElementById(id + '_bottomToolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        toolbar.refreshOverflow();\n                        toolbar.refreshOverflow();\n                        toolbar.refreshOverflow();\n                    }\n                }\n                else {\n                    _this.createLeftToolbarControls();\n                    if (_this.defToolbarItems.length > 0 && document.getElementById(id + '_toolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        toolbar.refreshOverflow();\n                    }\n                }\n                if (document.getElementById(id + '_cropBtn') && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isTransform)) {\n                    if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        parent.notify('draw', { prop: 'select', onPropertyChange: false,\n                            value: { type: _this.getCropTextContent(document.getElementById(id + '_cropBtn')).toLowerCase(),\n                                startX: null, startY: null, width: null, height: null } });\n                    }\n                }\n            }\n        });\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            toolbar.appendTo('#' + id + '_bottomToolbar');\n        }\n        else {\n            toolbar.appendTo('#' + id + '_toolbar');\n        }\n        var slider = parent.element.querySelector('#' + id + '_straightenSlider');\n        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar && parent.toolbar.indexOf('Straightening') > -1))\n            && slider && slider.parentElement.clientHeight > this.toolbarHeight) {\n            this.toolbarHeight = parent.toolbarHeight = slider.parentElement.clientHeight;\n        }\n        this.enableDisableTbrBtn();\n        parent.notify('transform', { prop: 'disableZoomOutBtn', value: { isZoomOut: true } });\n    };\n    ToolbarModule.prototype.getCropTextContent = function (elem) {\n        if (elem) {\n            var classToContentMap = { 'e-custom': 'Custom', 'e-circle': 'Circle',\n                'e-square': 'Square', 'e-custom-a': '3:2', 'e-custom-b': '4:3', 'e-custom-c': '5:4', 'e-custom-d': '7:5',\n                'e-custom-e': '16:9', 'e-custom-f': '2:3', 'e-custom-g': '3:4', 'e-custom-h': '4:5', 'e-custom-i': '5:7',\n                'e-custom-j': '9:16'\n            };\n            var classList = elem.children[0].classList;\n            for (var className in classToContentMap) {\n                if (classList.contains(className)) {\n                    return classToContentMap[className];\n                }\n            }\n        }\n        return '';\n    };\n    ToolbarModule.prototype.getCurrentShapeIcon = function (shape) {\n        // eslint-disable-next-line @typescript-eslint/tslint/config\n        var shapeIcons = {\n            rectangle: 'e-rectangle',\n            ellipse: 'e-circle',\n            line: 'e-line',\n            arrow: 'e-arrow-right-up',\n            path: 'e-critical-path',\n            text: 'e-add-text',\n            image: 'e-image',\n            pen: 'e-free-pen',\n            'crop-custom': 'e-custom',\n            'crop-circle': 'e-circle',\n            'crop-square': 'e-square',\n            'crop-3:2': 'e-custom-a',\n            'crop-4:3': 'e-custom-b',\n            'crop-5:4': 'e-custom-c',\n            'crop-7:5': 'e-custom-d',\n            'crop-16:9': 'e-custom-e',\n            'crop-2:3': 'e-custom-f',\n            'crop-3:4': 'e-custom-g',\n            'crop-4:5': 'e-custom-h',\n            'crop-5:7': 'e-custom-i',\n            'crop-9:16': 'e-custom-j'\n        };\n        return shapeIcons[shape] ? shapeIcons[shape] : (shape && shape.indexOf('crop-') !== -1) ? 'e-custom' : 'e-free-pen';\n    };\n    ToolbarModule.prototype.initShapesToolbarItem = function (items) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        var leftItem = this.getLeftToolbarItem();\n        var rightItem = this.getRightToolbarItem();\n        var mainItem = this.getShapesToolbarItem(items);\n        var zoomItem = this.getZoomToolbarItem();\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.defToolbarItems = mainItem;\n        }\n        else {\n            this.defToolbarItems = leftItem.concat(zoomItem, mainItem, rightItem);\n        }\n        var args = { toolbarType: parent.activeObj.shape ? parent.activeObj.shape : 'shapes',\n            toolbarItems: this.defToolbarItems };\n        parent.trigger('toolbarUpdating', args);\n        if (this.isToolbarString(args.toolbarItems)) {\n            items = args.toolbarItems;\n            this.excludeItems(args.toolbarItems);\n        }\n        else {\n            this.defToolbarItems = args.toolbarItems;\n        }\n        var toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.Toolbar({\n            width: '100%',\n            items: this.defToolbarItems,\n            clicked: this.defToolbarClicked.bind(this),\n            created: function () {\n                _this.renderAnnotationBtn(true);\n                _this.createRectangleRadius(items);\n                _this.createShapeColor(items);\n                _this.createShapeBtn(items);\n                _this.createZOrderBtn(items);\n                if (parent.activeObj.shape === 'arrow') {\n                    // eslint-disable-next-line @typescript-eslint/tslint/config\n                    if (items.some(function (item) { return item.toLowerCase().indexOf('start') > -1; })) {\n                        _this.createStartBtn();\n                    }\n                    // eslint-disable-next-line @typescript-eslint/tslint/config\n                    if (items.some(function (item) { return item.toLowerCase().indexOf('end') > -1; })) {\n                        _this.createEndBtn();\n                    }\n                }\n                _this.wireZoomBtnEvents();\n                parent.trigger('toolbarCreated', { toolbarType: 'shapes' });\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    if (_this.defToolbarItems.length > 0 && document.getElementById(id + '_bottomToolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        toolbar.refreshOverflow();\n                        toolbar.refreshOverflow();\n                        toolbar.refreshOverflow();\n                    }\n                }\n                else {\n                    _this.createLeftToolbarControls();\n                    if (_this.defToolbarItems.length > 0 && document.getElementById(id + '_toolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        toolbar.refreshOverflow();\n                    }\n                }\n            }\n        });\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            toolbar.appendTo('#' + id + '_bottomToolbar');\n        }\n        else {\n            toolbar.appendTo('#' + id + '_toolbar');\n        }\n        this.enableDisableTbrBtn();\n    };\n    ToolbarModule.prototype.createRectangleRadius = function (items) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (items.indexOf('borderRadius') > -1) {\n            var strokeWidthItems = [\n                { id: '1', text: this.l10n.getConstant('0') },\n                { id: '2', text: this.l10n.getConstant('20') },\n                { id: '3', text: this.l10n.getConstant('40') },\n                { id: '4', text: this.l10n.getConstant('60') },\n                { id: '5', text: this.l10n.getConstant('80') },\n                { id: '6', text: this.l10n.getConstant('100') }\n            ];\n            var strokeWidthBtn = document.getElementById(id + '_rectangleRadiusBtn');\n            var spanElem_2 = document.createElement('span');\n            spanElem_2.innerHTML = this.l10n.getConstant(parent.frameObj.radius.toString());\n            spanElem_2.className = 'e-shape-rectangle-radius';\n            strokeWidthBtn.appendChild(spanElem_2);\n            // Initialize the DropDownButton component.\n            var drpDownBtn_2 = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({ items: strokeWidthItems,\n                open: function (args) {\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        var parentElem = args.element.parentElement;\n                        parentElem.style.top = drpDownBtn_2.element.getBoundingClientRect().top -\n                            parentElem.offsetHeight + 'px';\n                    }\n                    var activeBtn = drpDownBtn_2.element.childNodes[0].textContent;\n                    if (activeBtn !== '') {\n                        args.element.querySelector('[aria-label = ' + '\"' + activeBtn + '\"' + ']').classList.add('e-selected-btn');\n                    }\n                },\n                select: function (args) {\n                    _this.triggerTbarClickEvent(args);\n                    spanElem_2.textContent = args.item.text;\n                    parent.updateStrokeWidth(args.item.id, 'radius');\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        if (document.getElementById(id + '_bottomToolbar')) {\n                            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                            var toolbar_7 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_bottomToolbar', 'toolbar');\n                            toolbar_7.refreshOverflow();\n                        }\n                    }\n                    else {\n                        if (document.getElementById(id + '_toolbar')) {\n                            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                            var toolbar_8 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_toolbar', 'toolbar');\n                            toolbar_8.refreshOverflow();\n                        }\n                    }\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                }\n            });\n            // Render initialized DropDownButton.\n            drpDownBtn_2.appendTo('#' + id + '_rectangleRadiusBtn');\n        }\n    };\n    ToolbarModule.prototype.beforeModeSwitch = function (args, inst) {\n        this.popupLeft = args.element.offsetParent.style.left;\n        if (args.mode === 'Picker') {\n            inst.showButtons = true;\n            inst.dataBind();\n            args.element.querySelector('.e-apply').title = this.l10n.getConstant('Apply');\n            args.element.querySelector('.e-cancel').title = this.l10n.getConstant('Cancel');\n            args.element.querySelector('.e-mode-switch-btn').title = this.l10n.getConstant('StandardColors');\n        }\n        else {\n            inst.showButtons = false;\n            inst.dataBind();\n            args.element.querySelector('.e-mode-switch-btn').title = this.l10n.getConstant('MoreColors');\n        }\n    };\n    ToolbarModule.prototype.createShapeColor = function (items) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (items.indexOf('fillColor') > -1) {\n            parent.element.querySelector('.e-template.e-fill').appendChild(parent.createElement('input', {\n                id: id + '_shape_fill'\n            }));\n            var fillColor_1 = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.ColorPicker({\n                modeSwitcher: true, noColor: true, value: '', inline: true,\n                showButtons: false, mode: 'Palette', cssClass: 'e-shape-fill-color',\n                beforeModeSwitch: function (args) { return _this.beforeModeSwitch(args, fillColor_1); },\n                presetColors: {\n                    'custom': ['', '#f44336', '#e91e63', '#9c27b0', '#673ab7', '#2196f3',\n                        '#03a9f4', '#00bcd4', '#009688', '#ffeb3b', '#ffffff', '#ffebee', '#fce4ec', '#f3e5f5', '#ede7f6', '#e3f2fd',\n                        '#e1f5fe', '#e0f7fa', '#e0f2f1', '#fffde7', '#f2f2f2', '#ffcdd2', '#f8bbd0', '#e1bee7', '#d1c4e9', '#bbdefb',\n                        '#b3e5fc', '#b2ebf2', '#b2dfdb', '#fff9c4', '#e6e6e6', '#ef9a9a', '#f48fb1', '#ce93d8', '#b39ddb', '#90caf9',\n                        '#81d4fa', '#80deea', '#80cbc4', '#fff59d', '#cccccc', '#e57373', '#f06292', '#ba68c8', '#9575cd', '#64b5f6',\n                        '#4fc3f7', '#4dd0e1', '#4db6ac', '#fff176', '#b3b3b3', '#ef5350', '#ec407a', '#ab47bc', '#7e57c2', '#42a5f5',\n                        '#29b6f6', '#26c6da', '#26a69a', '#ffee58', '#999999', '#e53935', '#d81b60', '#8e24aa', '#5e35b1', '#1e88e5',\n                        '#039be5', '#00acc1', '#00897b', '#fdd835', '#808080', '#d32f2f', '#c2185b', '#7b1fa2', '#512da8', '#1976d2',\n                        '#0288d1', '#0097a7', '#00796b', '#fbc02d', '#666666', '#c62828', '#ad1457', '#6a1b9a', '#4527a0', '#1565c0',\n                        '#0277bd', '#00838f', '#00695c', '#f9a825', '#4d4d4d', '#b71c1c', '#880e4f', '#4a148c', '#311b92', '#0d47a1',\n                        '#01579b', '#006064', '#004d40', '#f57f17']\n                },\n                beforeTileRender: function (args) {\n                    if (args.value === '') {\n                        args.element.classList.add('e-nocolor-item');\n                    }\n                },\n                change: function (args) {\n                    parent.updateFillColor(args.value);\n                    if (args.currentValue.rgba === '') {\n                        fillDDB_1.element.children[0].classList.add('e-nocolor-item');\n                    }\n                    else {\n                        fillDDB_1.element.children[0].classList.remove('e-nocolor-item');\n                        fillDDB_1.element.children[0].style.backgroundColor = args.currentValue.rgba;\n                    }\n                    fillDDB_1.toggle();\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                },\n                onModeSwitch: function (args) {\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        args.element.parentElement.parentElement.style.left = _this.popupLeft;\n                        args.element.parentElement.parentElement.style.top = (fillDDB_1.element.getBoundingClientRect().top - args.element.parentElement.parentElement.offsetHeight) + 'px';\n                    }\n                },\n                beforeClose: function () {\n                    fillDDB_1.toggle();\n                }\n            }, '#' + id + '_shape_fill');\n            var fillDDB_1 = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({\n                open: function (args) {\n                    var parenElem = args.element.parentElement;\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        parenElem.style.top = fillDDB_1.element.getBoundingClientRect().top -\n                            parenElem.offsetHeight + 'px';\n                        if (window.innerWidth <= 520) {\n                            parenElem.style.left = parent.element.offsetLeft + 'px';\n                        }\n                    }\n                },\n                target: '.e-shape-fill-color',\n                iconCss: 'e-dropdownbtn-preview',\n                cssClass: 'e-ie-ddb-popup'\n            }, '#' + id + '_fillColorBtn');\n            fillColor_1.inline = true;\n            fillColor_1.value = fillColor_1.getValue(fillColor_1.value, 'rgba');\n            parent.element.querySelector('.e-fill.e-template .e-dropdownbtn-preview').classList.add('e-nocolor-item');\n        }\n        if (items.indexOf('strokeColor') > -1) {\n            parent.element.querySelector('.e-template.e-stroke').appendChild(parent.createElement('input', {\n                id: id + '_shape_stroke'\n            }));\n            var strokeColor_1 = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.ColorPicker({\n                modeSwitcher: true, noColor: false, value: '#fff', inline: true,\n                showButtons: false, mode: 'Palette', cssClass: 'e-shape-stroke-color',\n                beforeModeSwitch: function (args) {\n                    _this.popupLeft = args.element.offsetParent.style.left;\n                    strokeColor_1.value = parent.activeObj.strokeSettings.strokeColor !== '#fff' ? parent.activeObj.strokeSettings.strokeColor : '#008000ff';\n                    _this.beforeModeSwitch(args, strokeColor_1);\n                },\n                presetColors: this.presetColors,\n                change: function (args) {\n                    parent.updateStrokeColor(args.value);\n                    strokeDDB_1.element.children[0].style.backgroundColor = args.currentValue.rgba;\n                    strokeDDB_1.toggle();\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                },\n                onModeSwitch: function (args) {\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        args.element.parentElement.parentElement.style.left = _this.popupLeft;\n                        args.element.parentElement.parentElement.style.top = (strokeDDB_1.element.getBoundingClientRect().top - args.element.parentElement.parentElement.offsetHeight) + 'px';\n                    }\n                },\n                beforeClose: function () {\n                    strokeDDB_1.toggle();\n                }\n            }, '#' + id + '_shape_stroke');\n            var strokeDDB_1 = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({\n                open: function (args) {\n                    var parenElem = args.element.parentElement;\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        parenElem.style.top = strokeDDB_1.element.getBoundingClientRect().top -\n                            parenElem.offsetHeight + 'px';\n                        if (window.innerWidth <= 520) {\n                            parenElem.style.left = parent.element.offsetLeft + 'px';\n                        }\n                    }\n                },\n                target: '.e-shape-stroke-color',\n                iconCss: 'e-dropdownbtn-preview',\n                cssClass: 'e-ie-ddb-popup'\n            }, '#' + id + '_borderColorBtn');\n            strokeColor_1.inline = true;\n            strokeColor_1.value = strokeColor_1.getValue(strokeColor_1.value, 'rgba');\n            parent.element.querySelector('.e-stroke.e-template .e-dropdownbtn-preview').style.background = '#fff';\n        }\n    };\n    ToolbarModule.prototype.createShapeBtn = function (items) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (items.indexOf('strokeWidth') > -1) {\n            var strokeWidthItems = [\n                { id: '1', text: this.l10n.getConstant('XSmall') },\n                { id: '2', text: this.l10n.getConstant('Small') },\n                { id: '3', text: this.l10n.getConstant('Medium') },\n                { id: '4', text: this.l10n.getConstant('Large') },\n                { id: '5', text: this.l10n.getConstant('XLarge') }\n            ];\n            if (parent.activeObj.shape && (parent.activeObj.shape === 'rectangle' || parent.activeObj.shape === 'ellipse')) {\n                strokeWidthItems = [\n                    { id: '1', text: this.l10n.getConstant('NoOutline') },\n                    { id: '2', text: this.l10n.getConstant('XSmall') },\n                    { id: '3', text: this.l10n.getConstant('Small') },\n                    { id: '4', text: this.l10n.getConstant('Medium') },\n                    { id: '5', text: this.l10n.getConstant('Large') },\n                    { id: '6', text: this.l10n.getConstant('XLarge') }\n                ];\n            }\n            var strokeWidthBtn = document.getElementById(id + '_borderWidthBtn');\n            var spanElem_3 = document.createElement('span');\n            spanElem_3.innerHTML = this.l10n.getConstant('XSmall');\n            spanElem_3.className = 'e-shape-stroke-width';\n            strokeWidthBtn.appendChild(spanElem_3);\n            // Initialize the DropDownButton component.\n            var drpDownBtn_3 = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({ items: strokeWidthItems,\n                open: function (args) {\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        args.element.parentElement.style.top = drpDownBtn_3.element.getBoundingClientRect().top -\n                            args.element.parentElement.offsetHeight + 'px';\n                    }\n                    var activeBtn = spanElem_3.innerHTML;\n                    if (activeBtn !== '') {\n                        args.element.querySelector('[aria-label = ' + '\"' + activeBtn + '\"' + ']').classList.add('e-selected-btn');\n                    }\n                },\n                select: function (args) {\n                    _this.triggerTbarClickEvent(args);\n                    spanElem_3.textContent = args.item.text;\n                    parent.updateStrokeWidth(args.item.id, 'width', parent.activeObj.shape);\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        if (document.getElementById(id + '_bottomToolbar')) {\n                            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                            var toolbar_9 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_bottomToolbar', 'toolbar');\n                            toolbar_9.refreshOverflow();\n                        }\n                    }\n                    else {\n                        if (document.getElementById(id + '_toolbar')) {\n                            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                            var toolbar_10 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_toolbar', 'toolbar');\n                            toolbar_10.refreshOverflow();\n                        }\n                    }\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                }\n            });\n            // Render initialized DropDownButton.\n            drpDownBtn_3.appendTo('#' + id + '_borderWidthBtn');\n        }\n    };\n    ToolbarModule.prototype.createZOrderBtn = function (items) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (items.indexOf('z-order') > -1) {\n            var zOrderItems = [\n                { text: this.l10n.getConstant('BringForward'), id: 'bringForward', iconCss: 'e-icons e-bring-forward' },\n                { text: this.l10n.getConstant('SendBackward'), id: 'sendBackward', iconCss: 'e-icons e-send-backward' },\n                { text: this.l10n.getConstant('BringToFront'), id: 'bringToFront', iconCss: 'e-icons e-bring-to-front' },\n                { text: this.l10n.getConstant('SendToBack'), id: 'sendToBack', iconCss: 'e-icons e-send-to-back' }\n            ];\n            // Initialize the DropDownButton component.\n            var drpDownBtn_4 = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({ items: zOrderItems, iconCss: 'e-icons e-layers',\n                beforeOpen: function (args) {\n                    if (document.getElementById(parent.element.id + '_zOrderBtn').classList.contains('e-disabled')) {\n                        args.cancel = true;\n                    }\n                    var indexObj = { freehandSelectedIndex: -1 };\n                    parent.notify('freehand-draw', { prop: 'getFreehandSelectedIndex', onPropertyChange: false, value: { obj: indexObj } });\n                    var orderObj = { order: null };\n                    parent.notify('shape', { prop: 'getHighestOrder', onPropertyChange: false, value: { obj: orderObj } });\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var order = parent.activeObj.order ? parent.activeObj.order : parent.getObjFromId(parent.pointColl[indexObj['freehandSelectedIndex']].id).order;\n                    if (order && order >= orderObj['order']) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        args.items[0].disabled = true;\n                        args.items[2].disabled = true;\n                    }\n                    else {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        args.items[0].disabled = false;\n                        args.items[2].disabled = false;\n                    }\n                    parent.notify('shape', { prop: 'getLowestOrder', onPropertyChange: false, value: { obj: orderObj } });\n                    if (order && order <= orderObj['order']) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        args.items[1].disabled = true;\n                        args.items[3].disabled = true;\n                    }\n                    else {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        args.items[1].disabled = false;\n                        args.items[3].disabled = false;\n                    }\n                },\n                open: function (args) {\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        args.element.parentElement.style.top = drpDownBtn_4.element.getBoundingClientRect().top -\n                            args.element.parentElement.offsetHeight + 'px';\n                    }\n                },\n                select: function (args) {\n                    _this.triggerTbarClickEvent(args);\n                    var obj = { freehandDrawSelectedId: null };\n                    parent.notify('freehand-draw', { prop: 'getFreehandDrawSelectedId', onPropertyChange: false, value: { obj: obj } });\n                    var shapeId = obj['freehandDrawSelectedId'] ? obj['freehandDrawSelectedId'] : parent.activeObj.currIndex;\n                    parent.updateShapeOrder(shapeId, args.item.id);\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        if (document.getElementById(id + '_bottomToolbar')) {\n                            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                            var toolbar_11 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_bottomToolbar', 'toolbar');\n                            toolbar_11.refreshOverflow();\n                        }\n                    }\n                    else {\n                        if (document.getElementById(id + '_toolbar')) {\n                            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                            var toolbar_12 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_toolbar', 'toolbar');\n                            toolbar_12.refreshOverflow();\n                        }\n                    }\n                    if (shapeId.indexOf('shape') > -1) {\n                        parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                    }\n                    else if (shapeId.indexOf('pen') > -1) {\n                        parent.notify('undo-redo', { prop: 'updateUndoRedoStack', value: { isPenDraw: true } });\n                    }\n                }\n            });\n            // Render initialized DropDownButton.\n            drpDownBtn_4.appendTo('#' + id + '_zOrderBtn');\n        }\n    };\n    ToolbarModule.prototype.createStartBtn = function () {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        var strokeWidthItems = [\n            { id: '1', text: this.l10n.getConstant('None') },\n            { id: '2', text: this.l10n.getConstant('Bar') },\n            { id: '3', text: this.l10n.getConstant('Arrow') },\n            { id: '4', text: this.l10n.getConstant('ArrowSolid') },\n            { id: '5', text: this.l10n.getConstant('Circle') },\n            { id: '6', text: this.l10n.getConstant('CircleSolid') },\n            { id: '7', text: this.l10n.getConstant('Square') },\n            { id: '8', text: this.l10n.getConstant('SquareSolid') }\n        ];\n        var strokeWidthBtn = document.getElementById(id + '_startBtn');\n        var spanElem = document.createElement('span');\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.activeObj.start)) {\n            parent.activeObj.start = 'none';\n        }\n        spanElem.innerHTML = parent.pascalToSplitWords(parent.activeObj.start);\n        spanElem.className = 'e-shape-start';\n        strokeWidthBtn.appendChild(spanElem);\n        // Initialize the DropDownButton component.\n        var drpDownBtn = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({ items: strokeWidthItems,\n            open: function (args) {\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    args.element.parentElement.style.top = drpDownBtn.element.getBoundingClientRect().top -\n                        args.element.parentElement.offsetHeight + 'px';\n                }\n                var activeBtn = spanElem.innerHTML;\n                if (activeBtn !== '') {\n                    args.element.querySelector('[aria-label = ' + '\"' + activeBtn + '\"' + ']').classList.add('e-selected-btn');\n                }\n            },\n            select: function (args) {\n                var idToValue = { '1': 'none', '2': 'bar', '3': 'arrow', '4': 'arrowSolid',\n                    '5': 'circle', '6': 'circleSolid', '7': 'square', '8': 'squareSolid' };\n                parent.notify('selection', { prop: 'setArrowShape', value: { type: 'initial', shape: idToValue[\"\" + args.item.id] } });\n                _this.triggerTbarClickEvent(args);\n                spanElem.textContent = args.item.text;\n                parent.updateArrow('startArrow', args.item.id);\n                parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n            }\n        });\n        // Render initialized DropDownButton.\n        drpDownBtn.appendTo('#' + id + '_startBtn');\n    };\n    ToolbarModule.prototype.createEndBtn = function () {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        var strokeWidthItems = [\n            { id: '1', text: this.l10n.getConstant('None') },\n            { id: '2', text: this.l10n.getConstant('Bar') },\n            { id: '3', text: this.l10n.getConstant('Arrow') },\n            { id: '4', text: this.l10n.getConstant('ArrowSolid') },\n            { id: '5', text: this.l10n.getConstant('Circle') },\n            { id: '6', text: this.l10n.getConstant('CircleSolid') },\n            { id: '7', text: this.l10n.getConstant('Square') },\n            { id: '8', text: this.l10n.getConstant('SquareSolid') }\n        ];\n        var strokeEndBtn = document.getElementById(id + '_endBtn');\n        var spanElem = document.createElement('span');\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.activeObj.end)) {\n            parent.activeObj.end = 'arrowSolid';\n        }\n        spanElem.innerHTML = parent.pascalToSplitWords(parent.activeObj.end);\n        spanElem.className = 'e-shape-end';\n        strokeEndBtn.appendChild(spanElem);\n        // Initialize the DropDownButton component.\n        var drpDownBtn = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({ items: strokeWidthItems,\n            open: function (args) {\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    args.element.parentElement.style.top = drpDownBtn.element.getBoundingClientRect().top -\n                        args.element.parentElement.offsetHeight + 'px';\n                }\n                var activeBtn = spanElem.innerHTML;\n                if (activeBtn !== '') {\n                    args.element.querySelector('[aria-label = ' + '\"' + activeBtn + '\"' + ']').classList.add('e-selected-btn');\n                }\n            },\n            select: function (args) {\n                var idToValue = { '1': 'none', '2': 'bar', '3': 'arrow', '4': 'arrowSolid',\n                    '5': 'circle', '6': 'circleSolid', '7': 'square', '8': 'squareSolid' };\n                parent.notify('selection', { prop: 'setArrowShape', value: { type: 'final', shape: idToValue[\"\" + args.item.id] } });\n                _this.triggerTbarClickEvent(args);\n                spanElem.textContent = args.item.text;\n                parent.updateArrow('endArrow', args.item.id);\n                parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n            }\n        });\n        // Render initialized DropDownButton.\n        drpDownBtn.appendTo('#' + id + '_endBtn');\n    };\n    ToolbarModule.prototype.getTextToolbarItem = function (items) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var toolbarItems = [];\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || (parent.toolbar)) {\n            toolbarItems.push({ id: id + '_annotation', tooltipText: this.l10n.getConstant('Annotation'), align: 'Center',\n                template: '<button id=\"' + id + '_annotationBtn\"></button>' });\n        }\n        if (items.indexOf('fontFamily') > -1) {\n            toolbarItems.push({ id: id + '_fontFamily', cssClass: 'top-icon e-img-font-family',\n                tooltipText: this.l10n.getConstant('FontFamily'), align: 'Center',\n                template: '<button id=\"' + id + '_fontFamilyBtn\"></button>' });\n        }\n        if (items.indexOf('fontSize') > -1) {\n            toolbarItems.push({ id: id + '_fontSize', cssClass: 'top-icon e-img-font-size',\n                tooltipText: this.l10n.getConstant('FontSize'), align: 'Center',\n                template: '<button id=\"' + id + '_fontSizeBtn\"></button>' });\n        }\n        if (items.indexOf('fontColor') > -1) {\n            toolbarItems.push({ cssClass: 'top-icon e-text-font-color', id: id + '_text_strokecolor',\n                tooltipText: this.l10n.getConstant('FontColor'), align: 'Center',\n                type: 'Input', template: '<button id=\"' + id + '_fontColorBtn\"></button>' });\n        }\n        if (items.indexOf('strokeColor') > -1) {\n            toolbarItems.push({ cssClass: 'top-icon e-stroke-text-font-color', id: id + '_stroke_text_color',\n                tooltipText: this.l10n.getConstant('TextOutlineColor'), align: 'Center',\n                type: 'Input', template: '<button id=\"' + id + '_strokeTextColorBtn\"></button>' });\n        }\n        if (items.indexOf('fillColor') > -1) {\n            toolbarItems.push({ cssClass: 'top-icon e-text-background-color', id: id + '_text_backgroundcolor',\n                tooltipText: this.l10n.getConstant('FillColor'), align: 'Center',\n                type: 'Input', template: '<button id=\"' + id + '_bgColorBtn\"></button>'\n            });\n        }\n        if (items.indexOf('bold') > -1) {\n            toolbarItems.push({ id: id + '_bold', prefixIcon: 'e-icons e-bold', cssClass: 'top-icon e-bold',\n                tooltipText: this.l10n.getConstant('Bold'), align: 'Center' });\n        }\n        if (items.indexOf('italic') > -1) {\n            toolbarItems.push({ id: id + '_italic', prefixIcon: 'e-icons e-italic', cssClass: 'top-icon e-italic',\n                tooltipText: this.l10n.getConstant('Italic'), align: 'Center' });\n        }\n        if (items.indexOf('strokeWidth') > -1) {\n            toolbarItems.push({ id: id + '_strokeWidth', cssClass: 'top-icon e-size', tooltipText: this.l10n.getConstant('TextOutlineWidth'), align: 'Center',\n                type: 'Input', template: '<button id=\"' + id + '_borderWidthBtn\"></button>' });\n        }\n        if (items.indexOf('transparency') > -1) {\n            toolbarItems.push({ id: id + '_transparency', prefixIcon: 'e-opacity',\n                tooltipText: this.l10n.getConstant('Opacity'), align: 'Center' });\n        }\n        toolbarItems.push({ align: 'Center', type: 'Separator' });\n        if (items.indexOf('z-order') > -1) {\n            toolbarItems.push({ id: id + '_zOrder', cssClass: 'top-icon e-list-unordered-3', tooltipText: this.l10n.getConstant('ZOrder'), align: 'Center',\n                type: 'Input', template: '<button id=\"' + id + '_zOrderBtn\"></button>' });\n        }\n        if (items.indexOf('duplicate') > -1) {\n            toolbarItems.push({ id: id + '_duplicate', prefixIcon: 'e-icons e-order', cssClass: 'top-icon e-order',\n                tooltipText: this.l10n.getConstant('Duplicate'), align: 'Center', disabled: (parent.textArea.style.display === 'block' || parent.textArea.style.display === 'inline-block') ? true : false });\n        }\n        if (items.indexOf('remove') > -1) {\n            toolbarItems.push({ id: id + '_remove', prefixIcon: 'e-icons e-trash', cssClass: 'top-icon e-trash',\n                tooltipText: this.l10n.getConstant('Remove'), align: 'Center', disabled: (parent.textArea.style.display === 'block' || parent.textArea.style.display === 'inline-block') ? true : false });\n        }\n        if (items.indexOf('text') > -1) {\n            toolbarItems.push({ id: id + '_editText', prefixIcon: 'e-icons e-annotation-edit', cssClass: 'top-icon e-annotation-edit',\n                tooltipText: this.l10n.getConstant('EditText'), align: 'Center', disabled: (parent.textArea.style.display === 'block' || parent.textArea.style.display === 'inline-block') ? true : false });\n        }\n        var tempToolbarItems = this.processSubToolbar(items);\n        for (var i = 0, len = tempToolbarItems.length; i < len; i++) {\n            toolbarItems.push(tempToolbarItems[i]);\n        }\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            toolbarItems.push({ id: id + '_ok', prefixIcon: 'e-icons e-check', cssClass: 'top-icon e-tick',\n                tooltipText: this.l10n.getConstant('OK'), align: 'Right', tabIndex: 0 });\n            toolbarItems.push({ id: id + '_cancel', prefixIcon: 'e-icons e-close', cssClass: 'top-icon e-save',\n                tooltipText: this.l10n.getConstant('Cancel'), align: 'Right' });\n        }\n        return toolbarItems;\n    };\n    ToolbarModule.prototype.getFontFamilyItems = function () {\n        var parent = this.parent;\n        var items = [];\n        if (parent.fontFamily && parent.fontFamily.items && parent.fontFamily.items.length > 0) {\n            items = parent.fontFamily.items;\n        }\n        else {\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                items = [{ id: 'arial', text: 'ABC' }, { id: 'calibri', text: 'ABC' }, { id: 'georgia', text: 'ABC' },\n                    { id: 'roboto', text: 'ABC' }, { id: 'tahoma', text: 'ABC' }];\n            }\n            else {\n                items = [{ id: 'arial', text: 'Arial' }, { id: 'calibri', text: 'Calibri' }, { id: 'georgia', text: 'Georgia' },\n                    { id: 'roboto', text: 'Roboto' }, { id: 'tahoma', text: 'Tahoma' }];\n            }\n        }\n        return items;\n    };\n    ToolbarModule.prototype.initTextToolbarItem = function (items) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        var leftItem = this.getLeftToolbarItem();\n        var rightItem = this.getRightToolbarItem();\n        var mainItem = this.getTextToolbarItem(items);\n        var zoomItem = this.getZoomToolbarItem();\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.defToolbarItems = mainItem;\n        }\n        else {\n            this.defToolbarItems = leftItem.concat(zoomItem, mainItem, rightItem);\n        }\n        var args = { toolbarType: 'text', toolbarItems: this.defToolbarItems };\n        parent.trigger('toolbarUpdating', args);\n        if (this.isToolbarString(args.toolbarItems)) {\n            items = args.toolbarItems;\n            this.excludeItems(args.toolbarItems);\n        }\n        else {\n            this.defToolbarItems = args.toolbarItems;\n        }\n        var toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.Toolbar({\n            width: '100%',\n            items: this.defToolbarItems,\n            clicked: this.defToolbarClicked.bind(this),\n            created: function () {\n                _this.renderAnnotationBtn(true);\n                _this.createTextColor(items);\n                _this.createStrokeTextColor(items);\n                _this.createShapeBtn(items);\n                _this.createBackgroundColor(items);\n                _this.createTextBtn(items);\n                _this.createZOrderBtn(items);\n                _this.wireZoomBtnEvents();\n                parent.trigger('toolbarCreated', { toolbarType: 'text' });\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    if (_this.defToolbarItems.length > 0 && document.getElementById(id + '_bottomToolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        toolbar.refreshOverflow();\n                        toolbar.refreshOverflow();\n                        toolbar.refreshOverflow();\n                    }\n                }\n                else {\n                    _this.createLeftToolbarControls();\n                    if (_this.defToolbarItems.length > 0 && document.getElementById(id + '_toolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        toolbar.refreshOverflow();\n                    }\n                }\n            }\n        });\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            toolbar.appendTo('#' + id + '_bottomToolbar');\n        }\n        else {\n            toolbar.appendTo('#' + id + '_toolbar');\n        }\n        this.enableDisableTbrBtn();\n    };\n    ToolbarModule.prototype.createTextColor = function (items) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (items.indexOf('fontColor') > -1 && parent.element.querySelector('.e-template.e-text-font-color')) {\n            parent.element.querySelector('.e-template.e-text-font-color').appendChild(parent.createElement('input', {\n                id: id + '_text_font'\n            }));\n            var fontColor_1 = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.ColorPicker({\n                modeSwitcher: true, noColor: false, value: '#fff', inline: true,\n                showButtons: false, mode: 'Palette', cssClass: 'e-text-fontt-color',\n                beforeModeSwitch: function (args) {\n                    _this.popupLeft = args.element.offsetParent.style.left;\n                    fontColor_1.value = parent.activeObj.strokeSettings.strokeColor !== '#fff' ? parent.activeObj.strokeSettings.strokeColor : '#008000ff';\n                    _this.beforeModeSwitch(args, fontColor_1);\n                },\n                presetColors: this.presetColors,\n                change: function (args) {\n                    parent.updateFontColor(args.value, 'Text');\n                    strokeDDB_2.element.children[0].style.backgroundColor = args.currentValue.rgba;\n                    strokeDDB_2.toggle();\n                    if (parent.activeObj.activePoint.width !== 0 || parent.activeObj.activePoint.height !== 0) {\n                        parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                    }\n                },\n                onModeSwitch: function (args) {\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        args.element.parentElement.parentElement.style.left = _this.popupLeft;\n                        args.element.parentElement.parentElement.style.top = (strokeDDB_2.element.getBoundingClientRect().top - args.element.parentElement.parentElement.offsetHeight) + 'px';\n                    }\n                },\n                beforeClose: function () {\n                    strokeDDB_2.toggle();\n                }\n            }, '#' + id + '_text_font');\n            var strokeDDB_2 = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({\n                open: function (args) {\n                    var parenElem = args.element.parentElement;\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        parenElem.style.top = strokeDDB_2.element.getBoundingClientRect().top -\n                            parenElem.offsetHeight + 'px';\n                        if (window.innerWidth <= 520) {\n                            parenElem.style.left = parent.element.offsetLeft + 'px';\n                        }\n                    }\n                },\n                target: '.e-text-fontt-color',\n                iconCss: 'e-dropdownbtn-preview',\n                cssClass: 'e-ie-ddb-popup'\n            }, '#' + id + '_fontColorBtn');\n            fontColor_1.inline = true;\n            fontColor_1.value = fontColor_1.getValue(fontColor_1.value, 'rgba');\n            parent.element.querySelector('.e-text-font-color.e-template .e-dropdownbtn-preview').style.background\n                = '#fff';\n        }\n    };\n    ToolbarModule.prototype.createBackgroundColor = function (items) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (items.indexOf('fillColor') > -1 && parent.element.querySelector('.e-template.e-text-background-color')) {\n            parent.element.querySelector('.e-template.e-text-background-color').appendChild(parent.createElement('input', {\n                id: id + '_text_bgColor'\n            }));\n            var backgroundColor_1 = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.ColorPicker({\n                modeSwitcher: true, noColor: true, value: '', inline: true,\n                showButtons: false, mode: 'Palette', cssClass: 'e-text-fontt-color',\n                beforeModeSwitch: function (args) {\n                    _this.popupLeft = args.element.offsetParent.style.left;\n                    _this.beforeModeSwitch(args, backgroundColor_1);\n                },\n                presetColors: {\n                    'custom': ['', '#f44336', '#e91e63', '#9c27b0', '#673ab7', '#2196f3',\n                        '#03a9f4', '#00bcd4', '#009688', '#ffeb3b', '#ffffff', '#ffebee', '#fce4ec', '#f3e5f5', '#ede7f6', '#e3f2fd',\n                        '#e1f5fe', '#e0f7fa', '#e0f2f1', '#fffde7', '#f2f2f2', '#ffcdd2', '#f8bbd0', '#e1bee7', '#d1c4e9', '#bbdefb',\n                        '#b3e5fc', '#b2ebf2', '#b2dfdb', '#fff9c4', '#e6e6e6', '#ef9a9a', '#f48fb1', '#ce93d8', '#b39ddb', '#90caf9',\n                        '#81d4fa', '#80deea', '#80cbc4', '#fff59d', '#cccccc', '#e57373', '#f06292', '#ba68c8', '#9575cd', '#64b5f6',\n                        '#4fc3f7', '#4dd0e1', '#4db6ac', '#fff176', '#b3b3b3', '#ef5350', '#ec407a', '#ab47bc', '#7e57c2', '#42a5f5',\n                        '#29b6f6', '#26c6da', '#26a69a', '#ffee58', '#999999', '#e53935', '#d81b60', '#8e24aa', '#5e35b1', '#1e88e5',\n                        '#039be5', '#00acc1', '#00897b', '#fdd835', '#808080', '#d32f2f', '#c2185b', '#7b1fa2', '#512da8', '#1976d2',\n                        '#0288d1', '#0097a7', '#00796b', '#fbc02d', '#666666', '#c62828', '#ad1457', '#6a1b9a', '#4527a0', '#1565c0',\n                        '#0277bd', '#00838f', '#00695c', '#f9a825', '#4d4d4d', '#b71c1c', '#880e4f', '#4a148c', '#311b92', '#0d47a1',\n                        '#01579b', '#006064', '#004d40', '#f57f17']\n                },\n                beforeTileRender: function (args) {\n                    if (args.value === '') {\n                        args.element.classList.add('e-nocolor-item');\n                    }\n                },\n                change: function (args) {\n                    parent.updateFontColor(args.value, 'Background');\n                    if (args.currentValue.rgba === '') {\n                        strokeDDB_3.element.children[0].classList.add('e-nocolor-item');\n                    }\n                    else {\n                        strokeDDB_3.element.children[0].classList.remove('e-nocolor-item');\n                        strokeDDB_3.element.children[0].style.backgroundColor = args.currentValue.rgba;\n                    }\n                    strokeDDB_3.toggle();\n                    if (parent.activeObj.activePoint.width !== 0 || parent.activeObj.activePoint.height !== 0) {\n                        parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                    }\n                },\n                onModeSwitch: function (args) {\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        args.element.parentElement.parentElement.style.left = _this.popupLeft;\n                        args.element.parentElement.parentElement.style.top = (strokeDDB_3.element.getBoundingClientRect().top - args.element.parentElement.parentElement.offsetHeight) + 'px';\n                    }\n                },\n                beforeClose: function () {\n                    strokeDDB_3.toggle();\n                }\n            }, '#' + id + '_text_bgColor');\n            var strokeDDB_3 = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({\n                open: function (args) {\n                    var parenElem = args.element.parentElement;\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        parenElem.style.top = strokeDDB_3.element.getBoundingClientRect().top -\n                            parenElem.offsetHeight + 'px';\n                        if (window.innerWidth <= 520) {\n                            parenElem.style.left = parent.element.offsetLeft + 'px';\n                        }\n                    }\n                },\n                target: '.e-text-fontt-color',\n                iconCss: 'e-dropdownbtn-preview',\n                cssClass: 'e-ie-ddb-popup'\n            }, '#' + id + '_bgColorBtn');\n            backgroundColor_1.inline = true;\n            backgroundColor_1.value = backgroundColor_1.getValue(backgroundColor_1.value, 'rgba');\n            parent.element.querySelector('.e-text-background-color.e-template .e-dropdownbtn-preview').style.background\n                = '#fff';\n        }\n    };\n    ToolbarModule.prototype.createStrokeTextColor = function (items) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (items.indexOf('strokeColor') > -1 && parent.element.querySelector('.e-template.e-stroke-text-font-color')) {\n            parent.element.querySelector('.e-template.e-stroke-text-font-color').appendChild(parent.createElement('input', {\n                id: id + '_stroke_text'\n            }));\n            var fontColor_2 = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.ColorPicker({\n                modeSwitcher: true, noColor: true, value: '', inline: true,\n                showButtons: false, mode: 'Palette', cssClass: 'e-text-fontt-color',\n                beforeModeSwitch: function (args) {\n                    _this.popupLeft = args.element.offsetParent.style.left;\n                    _this.beforeModeSwitch(args, fontColor_2);\n                },\n                presetColors: {\n                    'custom': ['', '#f44336', '#e91e63', '#9c27b0', '#673ab7', '#2196f3',\n                        '#03a9f4', '#00bcd4', '#009688', '#ffeb3b', '#ffffff', '#ffebee', '#fce4ec', '#f3e5f5', '#ede7f6', '#e3f2fd',\n                        '#e1f5fe', '#e0f7fa', '#e0f2f1', '#fffde7', '#f2f2f2', '#ffcdd2', '#f8bbd0', '#e1bee7', '#d1c4e9', '#bbdefb',\n                        '#b3e5fc', '#b2ebf2', '#b2dfdb', '#fff9c4', '#e6e6e6', '#ef9a9a', '#f48fb1', '#ce93d8', '#b39ddb', '#90caf9',\n                        '#81d4fa', '#80deea', '#80cbc4', '#fff59d', '#cccccc', '#e57373', '#f06292', '#ba68c8', '#9575cd', '#64b5f6',\n                        '#4fc3f7', '#4dd0e1', '#4db6ac', '#fff176', '#b3b3b3', '#ef5350', '#ec407a', '#ab47bc', '#7e57c2', '#42a5f5',\n                        '#29b6f6', '#26c6da', '#26a69a', '#ffee58', '#999999', '#e53935', '#d81b60', '#8e24aa', '#5e35b1', '#1e88e5',\n                        '#039be5', '#00acc1', '#00897b', '#fdd835', '#808080', '#d32f2f', '#c2185b', '#7b1fa2', '#512da8', '#1976d2',\n                        '#0288d1', '#0097a7', '#00796b', '#fbc02d', '#666666', '#c62828', '#ad1457', '#6a1b9a', '#4527a0', '#1565c0',\n                        '#0277bd', '#00838f', '#00695c', '#f9a825', '#4d4d4d', '#b71c1c', '#880e4f', '#4a148c', '#311b92', '#0d47a1',\n                        '#01579b', '#006064', '#004d40', '#f57f17']\n                },\n                beforeTileRender: function (args) {\n                    if (args.value === '') {\n                        args.element.classList.add('e-nocolor-item');\n                    }\n                },\n                change: function (args) {\n                    parent.updateStrokeTextColor(args.value);\n                    if (args.currentValue.rgba === '') {\n                        strokeDDB_4.element.children[0].classList.add('e-nocolor-item');\n                    }\n                    else {\n                        strokeDDB_4.element.children[0].classList.remove('e-nocolor-item');\n                        strokeDDB_4.element.children[0].style.backgroundColor = args.currentValue.rgba;\n                    }\n                    strokeDDB_4.toggle();\n                    if (parent.activeObj.activePoint.width !== 0 || parent.activeObj.activePoint.height !== 0) {\n                        parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                    }\n                },\n                onModeSwitch: function (args) {\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        args.element.parentElement.parentElement.style.left = _this.popupLeft;\n                        args.element.parentElement.parentElement.style.top = (strokeDDB_4.element.getBoundingClientRect().top - args.element.parentElement.parentElement.offsetHeight) + 'px';\n                    }\n                },\n                beforeClose: function () {\n                    strokeDDB_4.toggle();\n                }\n            }, '#' + id + '_stroke_text');\n            var strokeDDB_4 = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({\n                open: function (args) {\n                    var parenElem = args.element.parentElement;\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        parenElem.style.top = strokeDDB_4.element.getBoundingClientRect().top -\n                            parenElem.offsetHeight + 'px';\n                        if (window.innerWidth <= 520) {\n                            parenElem.style.left = parent.element.offsetLeft + 'px';\n                        }\n                    }\n                },\n                target: '.e-text-fontt-color',\n                iconCss: 'e-dropdownbtn-preview',\n                cssClass: 'e-ie-ddb-popup'\n            }, '#' + id + '_strokeTextColorBtn');\n            fontColor_2.inline = true;\n            fontColor_2.value = fontColor_2.getValue(fontColor_2.value, 'rgba');\n            parent.element.querySelector('.e-stroke-text-font-color.e-template .e-dropdownbtn-preview').style.background\n                = '#fff';\n        }\n    };\n    ToolbarModule.prototype.createTextBtn = function (items) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (items.indexOf('fontFamily') > -1) {\n            var fontNameBtn = document.getElementById(id + '_fontFamilyBtn');\n            var spanElem_4 = document.createElement('span');\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                spanElem_4.innerHTML = 'ABC';\n                spanElem_4.setAttribute('style', 'font-family: ' + parent.fontFamily.default.toLowerCase() + '\\'');\n            }\n            else {\n                spanElem_4.innerHTML = parent.fontFamily.default;\n            }\n            spanElem_4.className = 'e-text-font-family';\n            if (fontNameBtn) {\n                fontNameBtn.appendChild(spanElem_4);\n            }\n            var fontFamilyBtn_1 = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({ items: this.getFontFamilyItems(),\n                cssClass: 'e-font-family',\n                createPopupOnClick: true,\n                beforeItemRender: function (args) {\n                    args.element.setAttribute('style', 'font-family:' + args.element.id);\n                },\n                open: function (args) {\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        args.element.parentElement.style.top = fontFamilyBtn_1.element.getBoundingClientRect().top -\n                            args.element.parentElement.offsetHeight + 'px';\n                    }\n                    var fontFamily;\n                    if (parent.textArea.style.display === 'block' || parent.textArea.style.display === 'inline-block') {\n                        fontFamily = parent.textArea.style.fontFamily;\n                    }\n                    else {\n                        fontFamily = parent.activeObj.textSettings.fontFamily;\n                    }\n                    var elem = args.element.querySelector('[id *= ' + '\"' + fontFamily.toLowerCase() + '\"' + ']');\n                    if (elem) {\n                        elem.classList.add('e-selected-btn');\n                    }\n                },\n                select: function (args) {\n                    _this.triggerTbarClickEvent(args);\n                    spanElem_4.textContent = args.item.text;\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        spanElem_4.setAttribute('style', 'font-family:' + args.item.id);\n                    }\n                    parent.updateFontFamily(args.item.id);\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                    var toolbar = document.getElementById(parent.element.id + '_toolbar');\n                    if (toolbar && toolbar.classList.contains('e-control')) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(toolbar, 'toolbar').refreshOverflow();\n                    }\n                }\n            });\n            fontFamilyBtn_1.appendTo('#' + id + '_fontFamilyBtn');\n        }\n        if (items.indexOf('fontSize') > -1) {\n            var fontSizeBtnElem = document.getElementById(id + '_fontSizeBtn');\n            var fontSizeSpanElem_1 = document.createElement('span');\n            var fontSizes = parent.getFontSizes();\n            fontSizeSpanElem_1.innerHTML = fontSizes[0].text;\n            fontSizeSpanElem_1.className = 'e-text-font-size';\n            fontSizeBtnElem.appendChild(fontSizeSpanElem_1);\n            var fontSizeBtn_1 = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({\n                cssClass: 'e-font-size',\n                items: fontSizes,\n                open: function (args) {\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        args.element.parentElement.style.top = fontSizeBtn_1.element.getBoundingClientRect().top -\n                            args.element.parentElement.offsetHeight + 'px';\n                    }\n                    var activeBtn = fontSizeSpanElem_1.innerHTML;\n                    args.element.querySelector('[aria-label *= ' + '\"' + activeBtn + '\"' + ']').classList.add('e-selected-btn');\n                },\n                select: function (args) {\n                    _this.triggerTbarClickEvent(args);\n                    fontSizeSpanElem_1.textContent = args.item.text;\n                    parent.updateFontSize(args.item.text);\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                }\n            });\n            fontSizeBtn_1.appendTo('#' + id + '_fontSizeBtn');\n        }\n    };\n    ToolbarModule.prototype.refreshToolbar = function (type, isApplyBtn, isCropping, isZooming, cType, shape, isTransform) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (!parent.isImageLoaded || parent.isCropToolbar) {\n            return;\n        }\n        var args = {};\n        var aspectIcon;\n        var nonAspectIcon;\n        if (type !== 'filter' && type !== 'color') {\n            var toolbarElement = document.getElementById(id + '_toolbar');\n            var cusWrapper = document.getElementById(id + '_customizeWrapper');\n            var bottomToolbar = document.getElementById(id + '_bottomToolbar');\n            if (cusWrapper && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(cusWrapper, 'toolbar')) && this.defToolbarItems.length > 0) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(cusWrapper, 'toolbar').destroy();\n                cusWrapper.innerHTML = '';\n            }\n            if (toolbarElement && toolbarElement.classList.contains('e-control') && this.defToolbarItems.length > 0) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(toolbarElement, 'toolbar').destroy();\n                toolbarElement.innerHTML = '';\n            }\n            if (toolbarElement && (this.defToolbarItems.length > 0 || parent.toolbar && parent.toolbar.length > 0 && parent.toolbar.indexOf('Open') === -1)) {\n                var toolbar_13 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(toolbarElement, 'toolbar');\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(toolbar_13)) {\n                    toolbar_13.destroy();\n                    document.getElementById(parent.element.id + '_toolbar').innerHTML = '';\n                }\n            }\n            if (bottomToolbar && this.defToolbarItems.length > 0) {\n                if (bottomToolbar.className.indexOf('e-control') > -1) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(bottomToolbar, 'toolbar').destroy();\n                    bottomToolbar.innerHTML = '';\n                }\n            }\n        }\n        this.refreshSlider();\n        if (document.querySelector('.e-slider-tooltip')) {\n            document.querySelector('.e-slider-tooltip').remove();\n        }\n        this.isFrameToolbar = parent.isCropTab = false;\n        switch (type) {\n            case 'main':\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    if (isCropping) {\n                        this.initMainToolbar(false, true, true, false, false, true);\n                    }\n                    else {\n                        this.initMainToolbar(false, true, null, false, false, true);\n                    }\n                }\n                else if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || isZooming) {\n                    if (isZooming) {\n                        this.initMainToolbar(isApplyBtn, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice, null);\n                    }\n                    else {\n                        this.initMainToolbar(isApplyBtn, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice, null);\n                    }\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.initBottomToolbar();\n                }\n                break;\n            case 'shapes':\n                if (!parent.isPublicMethod) {\n                    parent.noPushUndo = true;\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.initMainToolbar(false, true, true);\n                }\n                if (parent.activeObj.shape === 'line' || parent.activeObj.shape === 'path') {\n                    args.toolbarItems = ['strokeColor', 'strokeWidth', 'z-order', 'duplicate', 'remove'];\n                }\n                else if (parent.activeObj.shape === 'arrow') {\n                    args.toolbarItems = ['strokeColor', 'strokeWidth', 'start', 'end', 'z-order', 'duplicate', 'remove'];\n                }\n                else if (parent.activeObj.shape === 'image') {\n                    args.toolbarItems = ['flip', 'z-order', 'duplicate', 'remove', 'transparency'];\n                }\n                else if (parent.activeObj.shape === 'rectangle') {\n                    args.toolbarItems = ['fillColor', 'strokeColor', 'strokeWidth', 'borderRadius', 'z-order', 'duplicate', 'remove'];\n                }\n                else {\n                    args.toolbarItems = ['fillColor', 'strokeColor', 'strokeWidth', 'z-order', 'duplicate', 'remove'];\n                }\n                this.initShapesToolbarItem(args.toolbarItems);\n                if (parent.activeObj.shape === 'image') {\n                    var actObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.activeObj, {}, true);\n                    parent.notify('shape', { prop: 'refreshActiveObj', onPropertyChange: false });\n                    parent.notify('draw', { prop: 'render-image', value: { isMouseWheel: null, isPreventClearRect: null, isFrame: true } });\n                    parent.activeObj = actObj;\n                    parent.notify('draw', { prop: 'drawObject', onPropertyChange: false, value: { canvas: 'duplicate', obj: parent.activeObj,\n                            isCropRatio: null, points: null, isPreventDrag: true } });\n                    this.renderQAT(false);\n                }\n                break;\n            case 'text':\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.initMainToolbar(false, true, true);\n                }\n                args.toolbarItems = ['fontFamily', 'fontSize', 'fontColor', 'fillColor', 'strokeColor', 'strokeWidth', 'bold', 'italic', 'z-order', 'duplicate', 'remove', 'text'];\n                this.initTextToolbarItem(args.toolbarItems);\n                break;\n            case 'pen':\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.initMainToolbar(false, true, true);\n                }\n                args.toolbarItems = ['strokeColor', 'strokeWidth', 'z-order', 'remove', 'transparency'];\n                this.initPenToolbarItem(args.toolbarItems);\n                break;\n            case 'adjustment':\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.initMainToolbar(false, true, true);\n                }\n                this.initAdjustmentToolbarItem();\n                break;\n            case 'filter':\n                this.updateContextualToolbar(type);\n                break;\n            case 'resize':\n                if (parent.isCircleCrop || (parent.currSelectionPoint && parent.currSelectionPoint.shape === 'crop-circle')) {\n                    parent.aspectHeight = parent.aspectWidth;\n                    this.isAspectRatio = false;\n                }\n                this.initResizeToolbar();\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.initMainToolbar(false, true, true, true);\n                }\n                aspectIcon = parent.element.querySelector('#' + id + '_aspectratio');\n                nonAspectIcon = parent.element.querySelector('#' + id + '_nonaspectratio');\n                if (parent.aspectWidth && parent.aspectHeight) {\n                    if (nonAspectIcon) {\n                        parent.notify('transform', { prop: 'resize', value: { width: parent.aspectWidth, height: parent.aspectHeight, isAspectRatio: false } });\n                    }\n                    else if (aspectIcon) {\n                        parent.notify('transform', { prop: 'resize', value: { width: parent.aspectWidth, height: null, isAspectRatio: true } });\n                    }\n                }\n                break;\n            case 'color':\n                this.updateContextualToolbar(type, cType);\n                break;\n            case 'croptransform':\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isTransform)) {\n                    parent.allowDownScale = false;\n                    parent.isCropTab = true;\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.initMainToolbar(false, true, true);\n                }\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isTransform)) {\n                    parent.updateCropTransformItems();\n                }\n                this.initCropTransformToolbar(shape, isTransform);\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.isToolbar()) {\n                    this.updateContextualToolbar('color', 'straighten', true);\n                }\n                if (parent.isMaskImage) {\n                    this.refreshToolbar('main');\n                }\n                break;\n            case 'frame':\n                this.isFrameToolbar = true;\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.initMainToolbar(false, true, true);\n                    this.initMainToolbar(false, true, true, false, true);\n                }\n                else {\n                    this.initMainToolbar(true, null, null, false, true);\n                }\n                // eslint-disable-next-line no-case-declarations\n                var frameElem = parent.element.querySelector('#' + id + '_' + parent.frameObj.type);\n                if (frameElem) {\n                    frameElem.classList.add('e-selected-btn');\n                }\n                if (parent.frameObj.type !== 'none') {\n                    this.updateContextualToolbar(type, cType);\n                }\n                parent.notify('draw', { prop: 'render-image', value: { isMouseWheel: null, isPreventClearRect: null, isFrame: true } });\n                break;\n            case 'redact':\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.initMainToolbar(false, true, true);\n                    this.initMainToolbar(false, true, true, null, null, null, true);\n                }\n                else {\n                    this.initMainToolbar(isApplyBtn, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice, null, null, null, null, true);\n                }\n                this.enableDisableTbrBtn();\n                if (parent.activeObj.redactType === 'blur') {\n                    var redactBlurElement = parent.element.querySelector('#' + id + '_' + 'redactBlur');\n                    if (redactBlurElement) {\n                        redactBlurElement.classList.add('e-selected-btn');\n                    }\n                }\n                else {\n                    var pixelateElement = parent.element.querySelector('#' + id + '_' + 'pixelate');\n                    if (pixelateElement) {\n                        pixelateElement.classList.add('e-selected-btn');\n                    }\n                }\n                this.redactSlider(parent.activeObj.redactType);\n                break;\n        }\n        this.refreshDropDownBtn(isCropping);\n        this.updateKBDNavigation(type);\n        this.currToolbar = type;\n    };\n    ToolbarModule.prototype.updateRedactObj = function () {\n        var parent = this.parent;\n        var objColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], parent.objColl, [], true);\n        parent.objColl = [];\n        var activeObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.activeObj, {}, true);\n        parent.notify('shape', { prop: 'refreshActiveObj', onPropertyChange: false });\n        parent.notify('draw', { prop: 'render-image', value: { isMouseWheel: null, isPreventClearRect: null, isFrame: true } });\n        parent.objColl = objColl;\n        for (var i = 0; i < parent.objColl.length; i++) {\n            var obj = parent.objColl[i];\n            if (obj.shape === 'redact') {\n                obj.redactImage = parent.createElement('canvas');\n                obj.redactImage.width = obj.activePoint.width;\n                obj.redactImage.height = obj.activePoint.height;\n                obj.redactImage.getContext('2d').drawImage(parent.lowerCanvas, obj.activePoint.startX, obj.activePoint.startY, obj.activePoint.width, obj.activePoint.height, 0, 0, obj.redactImage.width, obj.redactImage.height);\n            }\n        }\n        parent.isCropTab = false;\n        parent.notify('draw', { prop: 'render-image', value: { isMouseWheel: null, isPreventClearRect: null, isFrame: true } });\n        parent.isCropTab = true;\n        if (activeObj) {\n            parent.notify('draw', { prop: 'drawObject', onPropertyChange: false, value: { canvas: 'duplicate', obj: activeObj,\n                    isCropRatio: null, points: null, isPreventDrag: true } });\n        }\n        var panMoveObj = { panMove: null };\n        parent.notify('transform', { prop: 'getPanMove', onPropertyChange: false,\n            value: { obj: panMoveObj } });\n        if (panMoveObj['panMove']) {\n            parent.notify('transform', { prop: 'drawPannedImage', onPropertyChange: false,\n                value: { xDiff: null, yDiff: null } });\n        }\n    };\n    ToolbarModule.prototype.updateKBDNavigation = function (type) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (!parent.isKBDNavigation || this.currToolbar === type) {\n            return;\n        }\n        if (this.isToolbar()) {\n            var tbar = parent.element.querySelectorAll('#' + id + '_toolbar')[0];\n            var tbarInitialChild = void 0;\n            var tbarInitialBtn_1;\n            if (tbar) {\n                tbarInitialChild = tbar.querySelector('.e-toolbar-center');\n                if (!tbarInitialChild || !tbarInitialChild.children[0]) {\n                    return;\n                }\n                tbarInitialBtn_1 = tbarInitialChild.children[0].querySelector('.e-btn');\n                var tempElem = tbarInitialChild.children[1];\n                if (tempElem) {\n                    tempElem = tempElem.children[0];\n                }\n                if (tempElem) {\n                    tempElem = tempElem.children[0];\n                }\n                if (type === 'resize' && tempElem) {\n                    tbarInitialBtn_1 = tempElem;\n                }\n                if (type === 'filter') {\n                    var defaultFilter_1 = document.querySelector('#' + id + '_defaultCanvas');\n                    if (defaultFilter_1) {\n                        setTimeout(function () { return defaultFilter_1.focus(); }, 50);\n                    }\n                }\n                if (tbarInitialBtn_1) {\n                    if (type === 'main') {\n                        setTimeout(function () { return tbarInitialBtn_1.focus(); }, 50);\n                    }\n                    else {\n                        tbarInitialBtn_1.focus();\n                    }\n                }\n            }\n        }\n    };\n    ToolbarModule.prototype.performCropTransformClick = function (shape, isTransform) {\n        var parent = this.parent;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isTransform)) {\n            parent.notify('draw', { prop: 'setTempStraightenZoomDeg' });\n            parent.tempStraighten = parent.transform.straighten;\n            if (parent.currObjType.isFiltered || parent.currObjType.isRedact) {\n                parent.okBtn();\n            }\n            parent.isStraightening = true;\n        }\n        this.refreshToolbar('croptransform', null, null, null, null, shape, isTransform);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isTransform)) {\n            parent.notify('draw', { prop: 'setDestForStraighten' });\n            parent.notify('draw', { prop: 'setTempDestForStraighten' });\n        }\n    };\n    ToolbarModule.prototype.getAdjustmentToolbarItem = function () {\n        var toolbarItems = [];\n        var parent = this.parent;\n        var isCustomized = false;\n        var id = parent.element.id;\n        var defItems = ['Brightness', 'Contrast', 'Hue', 'Saturation', 'Exposure', 'Opacity', 'Blur'];\n        if (parent.toolbar) {\n            for (var i = 0; i < defItems.length; i++) {\n                if (parent.toolbar.indexOf(defItems[i]) !== -1) {\n                    isCustomized = true;\n                    break;\n                }\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Brightness') > -1)) {\n            toolbarItems.push({ id: id + '_brightness', prefixIcon: 'e-icons e-brightness', cssClass: 'top-icon e-brightness',\n                tooltipText: this.l10n.getConstant('Brightness'), align: 'Center' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Contrast') > -1)) {\n            toolbarItems.push({ id: id + '_contrast', prefixIcon: 'e-icons e-contrast', cssClass: 'top-icon e-contrast',\n                tooltipText: this.l10n.getConstant('Contrast'), align: 'Center' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Hue') > -1)) {\n            toolbarItems.push({ id: id + '_hue', prefixIcon: 'e-icons e-fade', cssClass: 'top-icon e-fade',\n                tooltipText: this.l10n.getConstant('Hue'), align: 'Center' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Saturation') > -1)) {\n            toolbarItems.push({ id: id + '_saturation', prefixIcon: 'e-icons e-saturation', cssClass: 'top-icon e-saturation',\n                tooltipText: this.l10n.getConstant('Saturation'), align: 'Center' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Exposure') > -1)) {\n            toolbarItems.push({ id: id + '_exposure', prefixIcon: 'e-icons e-grain', cssClass: 'top-icon e-grain',\n                tooltipText: this.l10n.getConstant('Exposure'), align: 'Center' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Opacity') > -1)) {\n            toolbarItems.push({ id: id + '_opacity', prefixIcon: 'e-icons e-opacity', cssClass: 'top-icon e-opacity',\n                tooltipText: this.l10n.getConstant('Opacity'), align: 'Center' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Blur') > -1)) {\n            toolbarItems.push({ id: id + '_blur', prefixIcon: 'e-icons e-tint', cssClass: 'top-icon e-tint',\n                tooltipText: this.l10n.getConstant('Blur'), align: 'Center' });\n        }\n        var tempToolbarItems = this.processToolbar('center');\n        for (var i = 0, len = tempToolbarItems.length; i < len; i++) {\n            toolbarItems.push(tempToolbarItems[i]);\n        }\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            toolbarItems.push({ id: id + '_ok', prefixIcon: 'e-icons e-check', cssClass: 'top-icon e-tick',\n                tooltipText: this.l10n.getConstant('OK'), align: 'Right', tabIndex: 0 });\n            toolbarItems.push({ id: id + '_cancel', prefixIcon: 'e-icons e-close', cssClass: 'top-icon e-save',\n                tooltipText: this.l10n.getConstant('Cancel'), align: 'Right' });\n        }\n        return toolbarItems;\n    };\n    ToolbarModule.prototype.getFrameToolbarItem = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var toolbarItems = [];\n        toolbarItems.push({ prefixIcon: 'e-icons e-copy', id: id + '_frameColor',\n            cssClass: 'top-icon e-stroke', tooltipText: this.l10n.getConstant('Color'), align: 'Center', type: 'Input',\n            template: '<span>' + this.l10n.getConstant('Color') + '</span><button id=\"' + id + '_frameColorBtn\"></button>' });\n        toolbarItems.push({ prefixIcon: 'e-icons e-copy', id: id + '_frameGradient',\n            cssClass: 'top-icon e-frame-stroke', tooltipText: this.l10n.getConstant('GradientColor'), align: 'Center', type: 'Input',\n            template: '<span>' + this.l10n.getConstant('GradientColor') + '</span><button id=\"' + id + '_frameGradientColorBtn\"></button>' });\n        toolbarItems.push({ id: id + '_frameSize', cssClass: 'top-icon e-size', tooltipText: this.l10n.getConstant('Size'), align: 'Center',\n            type: 'Input', template: '<span>' + this.l10n.getConstant('Size') + '</span><button id=\"' + id + '_frameSizeBtn\"></button>' });\n        if (parent.frameObj.type === 'line' || parent.frameObj.type === 'inset' || parent.frameObj.type === 'hook') {\n            toolbarItems.push({ id: id + '_frameInset', cssClass: 'top-icon e-size', tooltipText: this.l10n.getConstant('Inset'), align: 'Center',\n                type: 'Input', template: '<span>' + this.l10n.getConstant('Inset') + '</span><button id=\"' + id + '_frameInsetBtn\"></button>' });\n        }\n        if (parent.frameObj.type === 'line' || parent.frameObj.type === 'inset') {\n            toolbarItems.push({ id: id + '_frameOffset', cssClass: 'top-icon e-size', tooltipText: this.l10n.getConstant('Offset'), align: 'Center',\n                type: 'Input', template: '<span>' + this.l10n.getConstant('Offset') + '</span><button id=\"' + id + '_frameOffsetBtn\"></button>' });\n        }\n        if (parent.frameObj.type === 'line') {\n            toolbarItems.push({ id: id + '_frameRadius', cssClass: 'top-icon e-size', tooltipText: this.l10n.getConstant('Radius'), align: 'Center',\n                type: 'Input', template: '<span>' + this.l10n.getConstant('Radius') + '</span><button id=\"' + id + '_frameRadiusBtn\"></button>' });\n            toolbarItems.push({ id: id + '_frameAmount', cssClass: 'top-icon e-size', tooltipText: this.l10n.getConstant('Amount'), align: 'Center',\n                type: 'Input', template: '<span>' + this.l10n.getConstant('Amount') + '</span><button id=\"' + id + '_frameAmountBtn\"></button>' });\n            toolbarItems.push({ id: id + '_frameBorder', cssClass: 'top-icon e-size', tooltipText: this.l10n.getConstant('Border'), align: 'Center',\n                type: 'Input', template: '<span>' + this.l10n.getConstant('Border') + '</span><button id=\"' + id + '_frameBorderBtn\"></button>' });\n        }\n        return toolbarItems;\n    };\n    ToolbarModule.prototype.getFilterToolbarItem = function () {\n        var toolbarItems = [];\n        var parent = this.parent;\n        var isCustomized = false;\n        var id = parent.element.id;\n        var defItems = ['Default', 'Chrome', 'Cold', 'Warm', 'Grayscale', 'Sepia', 'Invert'];\n        if (parent.toolbar) {\n            for (var i = 0; i < defItems.length; i++) {\n                if (parent.toolbar.indexOf(defItems[i]) !== -1) {\n                    isCustomized = true;\n                    break;\n                }\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Default') > -1)) {\n            toolbarItems.push({ id: id + '_default', prefixIcon: 'e-icons e-none', cssClass: 'top-icon e-none',\n                tooltipText: this.l10n.getConstant('Default'), align: 'Center',\n                template: '<div class=\"filter-wrapper\"><canvas id=' + id + '_defaultCanvas' + ' tabindex=0></canvas><div><span>' + this.l10n.getConstant('Default') + '</span></div></div>' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Chrome') > -1)) {\n            toolbarItems.push({ id: id + '_chrome', prefixIcon: 'e-icons e-none', cssClass: 'top-icon e-none',\n                tooltipText: this.l10n.getConstant('Chrome'), align: 'Center',\n                template: '<div class=\"filter-wrapper\"><canvas id=' + id + '_chromeCanvas' + '></canvas><div><span>' + this.l10n.getConstant('Chrome') + '</span></div></div>' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Cold') > -1)) {\n            toolbarItems.push({ id: id + '_cold', prefixIcon: 'e-icons e-none', cssClass: 'top-icon e-none',\n                tooltipText: this.l10n.getConstant('Cold'), align: 'Center',\n                template: '<div class=\"filter-wrapper\"><canvas id=' + id + '_coldCanvas' + '></canvas><div><span>' + this.l10n.getConstant('Cold') + '</span></div></div>' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Warm') > -1)) {\n            toolbarItems.push({ id: id + '_warm', prefixIcon: 'e-icons e-none', cssClass: 'top-icon e-none',\n                tooltipText: this.l10n.getConstant('Warm'), align: 'Center',\n                template: '<div class=\"filter-wrapper\"><canvas id=' + id + '_warmCanvas' + '></canvas><div><span>' + this.l10n.getConstant('Warm') + '</span></div></div>' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Grayscale') > -1)) {\n            toolbarItems.push({ id: id + '_grayscale', prefixIcon: 'e-icons e-none', cssClass: 'top-icon e-none',\n                tooltipText: this.l10n.getConstant('Grayscale'), align: 'Center',\n                template: '<div class=\"filter-wrapper\"><canvas id=' + id + '_grayscaleCanvas' + '></canvas><div><span>' + this.l10n.getConstant('Grayscale') + '</span></div></div>' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Sepia') > -1)) {\n            toolbarItems.push({ id: id + '_sepia', prefixIcon: 'e-icons e-none', cssClass: 'top-icon e-none',\n                tooltipText: this.l10n.getConstant('Sepia'), align: 'Center',\n                template: '<div class=\"filter-wrapper\"><canvas id=' + id + '_sepiaCanvas' + '></canvas><div><span>' + this.l10n.getConstant('Sepia') + '</span></div></div>' });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || !isCustomized || (parent.toolbar && parent.toolbar.indexOf('Invert') > -1)) {\n            toolbarItems.push({ id: id + '_invert', prefixIcon: 'e-icons e-none', cssClass: 'top-icon e-none',\n                tooltipText: this.l10n.getConstant('Invert'), align: 'Center',\n                template: '<div class=\"filter-wrapper\"><canvas id=' + id + '_invertCanvas' + '></canvas><div><span>' + this.l10n.getConstant('Invert') + '</span></div></div>' });\n        }\n        var tempToolbarItems = this.processToolbar('center');\n        for (var i = 0, len = tempToolbarItems.length; i < len; i++) {\n            toolbarItems.push(tempToolbarItems[i]);\n        }\n        return toolbarItems;\n    };\n    ToolbarModule.prototype.getPenToolbarItem = function (items) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var toolbarItems = [];\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.toolbar) || parent.toolbar) {\n            toolbarItems.push({ id: id + '_annotation', tooltipText: this.l10n.getConstant('Annotation'), align: 'Center',\n                template: '<button id=\"' + id + '_annotationBtn\"></button>' });\n        }\n        if (items.indexOf('strokeColor') > -1) {\n            toolbarItems.push({ prefixIcon: 'e-icons e-copy', id: id + '_pen_strokecolor',\n                cssClass: 'top-icon e-pen-stroke-color',\n                tooltipText: this.l10n.getConstant('StrokeColor'), align: 'Center', type: 'Input',\n                template: '<button id=\"' + id + '_penColorBtn\"></button>' });\n        }\n        if (items.indexOf('strokeWidth') > -1) {\n            toolbarItems.push({ prefixIcon: 'e-icons e-copy', id: id + '_pen_strokewidth',\n                cssClass: 'top-icon e-size',\n                tooltipText: this.l10n.getConstant('StrokeWidth'),\n                align: 'Center', type: 'Input', template: '<button id=\"' + id + '_penStrokeWidth\"></button>' });\n        }\n        toolbarItems.push({ align: 'Center', type: 'Separator' });\n        if (items.indexOf('z-order') > -1) {\n            toolbarItems.push({ id: id + '_zOrder', cssClass: 'top-icon e-list-unordered-3', tooltipText: this.l10n.getConstant('ZOrder'), align: 'Center',\n                type: 'Input', template: '<button id=\"' + id + '_zOrderBtn\"></button>' });\n        }\n        if (items.indexOf('remove') > -1) {\n            toolbarItems.push({ id: id + '_remove', prefixIcon: 'e-icons e-trash', cssClass: 'top-icon e-trash',\n                tooltipText: this.l10n.getConstant('Remove'), align: 'Center' });\n        }\n        var tempToolbarItems = this.processSubToolbar(items);\n        for (var i = 0, len = tempToolbarItems.length; i < len; i++) {\n            toolbarItems.push(tempToolbarItems[i]);\n        }\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            toolbarItems.push({ id: id + '_ok', prefixIcon: 'e-icons e-check', cssClass: 'top-icon e-tick',\n                tooltipText: this.l10n.getConstant('OK'), align: 'Right', tabIndex: 0 });\n            toolbarItems.push({ id: id + '_cancel', prefixIcon: 'e-icons e-close', cssClass: 'top-icon e-save',\n                tooltipText: this.l10n.getConstant('Cancel'), align: 'Right' });\n        }\n        return toolbarItems;\n    };\n    ToolbarModule.prototype.initPenToolbarItem = function (items) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        var leftItem = this.getLeftToolbarItem();\n        var rightItem = this.getRightToolbarItem();\n        var mainItem = this.getPenToolbarItem(items);\n        var zoomItem = this.getZoomToolbarItem();\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.defToolbarItems = mainItem;\n        }\n        else {\n            this.defToolbarItems = leftItem.concat(zoomItem, mainItem, rightItem);\n        }\n        var args = { toolbarType: 'pen', toolbarItems: this.defToolbarItems };\n        parent.trigger('toolbarUpdating', args);\n        if (this.isToolbarString(args.toolbarItems)) {\n            items = args.toolbarItems;\n            this.excludeItems(args.toolbarItems);\n        }\n        else {\n            this.defToolbarItems = args.toolbarItems;\n        }\n        var toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.Toolbar({\n            width: '100%',\n            items: this.defToolbarItems,\n            clicked: this.defToolbarClicked.bind(this),\n            created: function () {\n                _this.renderAnnotationBtn(true);\n                _this.createPenColor(items);\n                _this.createPenBtn(items);\n                _this.createZOrderBtn(items);\n                _this.wireZoomBtnEvents();\n                parent.trigger('toolbarCreated', { toolbarType: 'pen' });\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    if (_this.defToolbarItems.length > 0 && document.getElementById(id + '_toolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        toolbar.refreshOverflow();\n                        toolbar.refreshOverflow();\n                    }\n                }\n                else {\n                    _this.createLeftToolbarControls();\n                    if (_this.defToolbarItems.length > 0 && document.getElementById(id + '_toolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        toolbar.refreshOverflow();\n                    }\n                }\n            }\n        });\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            toolbar.appendTo('#' + id + '_bottomToolbar');\n        }\n        else {\n            toolbar.appendTo('#' + id + '_toolbar');\n        }\n        this.enableDisableTbrBtn();\n    };\n    ToolbarModule.prototype.createPenColor = function (items) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (items.indexOf('strokeColor') > -1) {\n            parent.element.querySelector('.e-template.e-pen-stroke-color').appendChild(parent.createElement('input', {\n                id: id + '_pen_stroke'\n            }));\n            var presentVal = parent.activeObj.strokeSettings.strokeColor;\n            var penColor = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.ColorPicker({\n                modeSwitcher: false, value: '#fff',\n                showButtons: false, mode: 'Palette', cssClass: 'e-pen-color',\n                change: function (args) {\n                    parent.updatePenStrokeColor(args.currentValue.hex);\n                    _this.selFhdColor = args.currentValue.hex;\n                    strokeDDB_5.element.children[0].style.backgroundColor = args.currentValue.rgba;\n                    strokeDDB_5.toggle();\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoStack', value: { isPenDraw: true } });\n                }\n            }, '#' + id + '_pen_stroke');\n            var strokeDDB_5 = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({\n                open: function (args) {\n                    var parentElem = args.element.parentElement;\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        parentElem.style.top = strokeDDB_5.element.getBoundingClientRect().top -\n                            parentElem.offsetHeight + 'px';\n                        if (window.innerWidth <= 520) {\n                            parentElem.style.left = parent.element.offsetLeft + 'px';\n                        }\n                    }\n                },\n                target: '.e-pen-color',\n                iconCss: 'e-dropdownbtn-preview',\n                cssClass: 'e-ie-ddb-popup'\n            }, '#' + id + '_penColorBtn');\n            penColor.inline = true;\n            penColor.value = penColor.getValue(parent.activeObj.strokeSettings.strokeColor, 'rgba');\n            if (penColor.value === 'null') {\n                penColor.value = presentVal;\n            }\n            var obj = { tempFreeHandDrawEditingStyles: null };\n            parent.notify('freehand-draw', { prop: 'getTempFreeHandDrawEditingStyles', value: { obj: obj } });\n            var indexObj = { freehandSelectedIndex: null };\n            parent.notify('freehand-draw', { prop: 'getFreehandSelectedIndex', onPropertyChange: false, value: { obj: indexObj } });\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(indexObj['freehandSelectedIndex']) && indexObj['freehandSelectedIndex'] > -1) {\n                parent.element.querySelector('.e-pen-stroke-color.e-template .e-dropdownbtn-preview').style.background\n                    = this.selFhdColor === '#42a5f5' ? obj['tempFreeHandDrawEditingStyles'].strokeColor :\n                        parent.pointColl[indexObj['freehandSelectedIndex']].strokeColor;\n            }\n            else {\n                parent.element.querySelector('.e-pen-stroke-color.e-template .e-dropdownbtn-preview').style.background\n                    = penColor.value;\n            }\n        }\n    };\n    ToolbarModule.prototype.createPenBtn = function (items) {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        var strokeWidthItems = [\n            { id: '1', text: this.l10n.getConstant('XSmall') },\n            { id: '2', text: this.l10n.getConstant('Small') },\n            { id: '3', text: this.l10n.getConstant('Medium') },\n            { id: '4', text: this.l10n.getConstant('Large') },\n            { id: '5', text: this.l10n.getConstant('XLarge') }\n        ];\n        if (items.indexOf('strokeWidth') > -1) {\n            var strokeWidthBtn = document.getElementById(id + '_penStrokeWidth');\n            var spanElem_5 = document.createElement('span');\n            var indexObj = { freehandSelectedIndex: null };\n            parent.notify('freehand-draw', { prop: 'getFreehandSelectedIndex', onPropertyChange: false, value: { obj: indexObj } });\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(indexObj['freehandSelectedIndex']) && indexObj['freehandSelectedIndex'] > -1) {\n                spanElem_5.innerHTML = this.getPenStroke(parent.pointColl[indexObj['freehandSelectedIndex']].strokeWidth);\n            }\n            else {\n                var obj = { penStrokeWidth: 2 };\n                parent.notify('freehand-draw', { prop: 'getPenStrokeWidth', onPropertyChange: false, value: { obj: obj } });\n                if (obj['penStrokeWidth']) {\n                    spanElem_5.innerHTML = this.getPenStroke(obj['penStrokeWidth']);\n                }\n                else {\n                    spanElem_5.innerHTML = this.l10n.getConstant('Small');\n                }\n            }\n            spanElem_5.className = 'e-pen-stroke-width';\n            strokeWidthBtn.appendChild(spanElem_5);\n            var drpDownBtn_5 = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({ items: strokeWidthItems,\n                open: function (args) {\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        args.element.parentElement.style.top = drpDownBtn_5.element.getBoundingClientRect().top -\n                            args.element.parentElement.offsetHeight + 'px';\n                    }\n                    var activeBtn = spanElem_5.innerHTML;\n                    args.element.querySelector('[aria-label = ' + '\"' + activeBtn + '\"' + ']').classList.add('e-selected-btn');\n                },\n                select: function (args) {\n                    _this.triggerTbarClickEvent(args);\n                    spanElem_5.textContent = args.item.text;\n                    parent.updatePenStrokeWidth(args.item.id);\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        if (document.getElementById(id + '_bottomToolbar')) {\n                            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                            var toolbar_14 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_bottomToolbar', 'toolbar');\n                            toolbar_14.refreshOverflow();\n                        }\n                    }\n                    else {\n                        if (document.getElementById(id + '_toolbar')) {\n                            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                            var toolbar_15 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_toolbar', 'toolbar');\n                            toolbar_15.refreshOverflow();\n                        }\n                    }\n                    var widthObj = { penStrokeWidth: null };\n                    parent.notify('freehand-draw', { prop: 'getPenStrokeWidth', onPropertyChange: false, value: { obj: widthObj } });\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoStack', value: { isPenDraw: true } });\n                    parent.notify('freehand-draw', { prop: 'setPenStrokeWidth', onPropertyChange: false, value: { value: widthObj['penStrokeWidth'] } });\n                }\n            });\n            // Render initialized DropDownButton.\n            drpDownBtn_5.appendTo('#' + id + '_penStrokeWidth');\n        }\n    };\n    ToolbarModule.prototype.getPenStroke = function (value) {\n        var textContent = '';\n        var valueToTextContent = {\n            1: this.l10n.getConstant('XSmall'),\n            2: this.l10n.getConstant('Small'),\n            3: this.l10n.getConstant('Medium'),\n            4: this.l10n.getConstant('Large'),\n            5: this.l10n.getConstant('XLarge')\n        };\n        if (value >= 1 && value <= 5) {\n            textContent = valueToTextContent[value];\n        }\n        return textContent;\n    };\n    ToolbarModule.prototype.initAdjustmentToolbarItem = function () {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        var leftItem = this.getLeftToolbarItem(null);\n        var rightItem = this.getRightToolbarItem();\n        var mainItem = this.getAdjustmentToolbarItem();\n        var zoomItem = this.getZoomToolbarItem();\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.defToolbarItems = mainItem;\n        }\n        else {\n            this.defToolbarItems = leftItem.concat(zoomItem, mainItem, rightItem);\n        }\n        var args = { toolbarType: 'finetune', toolbarItems: this.defToolbarItems };\n        parent.trigger('toolbarUpdating', args);\n        this.defToolbarItems = args.toolbarItems;\n        var toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.Toolbar({\n            width: '100%',\n            items: this.defToolbarItems,\n            clicked: this.defToolbarClicked.bind(this),\n            created: function () {\n                _this.wireZoomBtnEvents();\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    if (_this.defToolbarItems.length > 0 && document.getElementById(id + '_toolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        toolbar.refreshOverflow();\n                    }\n                }\n                else {\n                    _this.createLeftToolbarControls();\n                    if (_this.defToolbarItems.length > 0 && document.getElementById(id + '_toolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        toolbar.refreshOverflow();\n                    }\n                }\n            }\n        });\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            toolbar.appendTo('#' + id + '_bottomToolbar');\n        }\n        else {\n            toolbar.appendTo('#' + id + '_toolbar');\n        }\n        this.enableDisableTbrBtn();\n    };\n    ToolbarModule.prototype.initFrameToolbarItem = function () {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        var canvasWrapper = document.querySelector('#' + id + '_contextualToolbarArea');\n        var frameWrapper = document.querySelector('#' + id + '_frameWrapper');\n        if (frameWrapper) {\n            frameWrapper.style.display = 'block';\n        }\n        else {\n            frameWrapper = canvasWrapper.appendChild(parent.createElement('div', {\n                id: id + '_frameWrapper', className: 'e-frame-wrapper', styles: 'position: relative'\n            }));\n        }\n        frameWrapper.appendChild(parent.createElement('div', {\n            id: id + '_customizeWrapper',\n            styles: 'position: absolute'\n        }));\n        var mainItem = this.getFrameToolbarItem();\n        var args = { toolbarType: 'frame', toolbarItems: mainItem };\n        parent.trigger('toolbarUpdating', args);\n        mainItem = args.toolbarItems;\n        var toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.Toolbar({\n            width: '100%',\n            items: mainItem,\n            clicked: this.defToolbarClicked.bind(this),\n            created: function () {\n                _this.createFrameColor();\n                _this.createFrameSize();\n                var frameType = parent.frameObj.type;\n                if (frameType === 'line') {\n                    _this.createFrameRadius();\n                }\n                if (frameType === 'line' || frameType === 'inset' || frameType === 'hook') {\n                    _this.createFrameInset();\n                }\n                if (frameType === 'line' || frameType === 'inset') {\n                    _this.createFrameOffset();\n                }\n                if (frameType === 'line') {\n                    _this.createFrameAmount();\n                    _this.createFrameBorder();\n                }\n                _this.createFrameGradientColor();\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    if (_this.defToolbarItems.length > 0 && document.getElementById(id + '_bottomToolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        toolbar.refreshOverflow();\n                        toolbar.refreshOverflow();\n                        toolbar.refreshOverflow();\n                    }\n                }\n                else {\n                    _this.createLeftToolbarControls();\n                    if (_this.defToolbarItems.length > 0 && document.getElementById(id + '_toolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        toolbar.refreshOverflow();\n                    }\n                }\n                parent.element.querySelector('#' + id + '_' + frameType).focus();\n            }\n        });\n        toolbar.appendTo('#' + id + '_customizeWrapper');\n    };\n    ToolbarModule.prototype.createFrameGradientColor = function () {\n        var parent = this.parent;\n        var prevFrameSettings;\n        var obj = { frameChangeEventArgs: null };\n        var id = parent.element.id;\n        parent.element.querySelector('.e-template.e-frame-stroke').appendChild(parent.createElement('input', {\n            id: id + '_frame_gradient_fill'\n        }));\n        var fillColor = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.ColorPicker({\n            modeSwitcher: false, noColor: true, value: parent.frameObj.gradientColor,\n            showButtons: false, mode: 'Palette', cssClass: 'e-frame-gradient-fill-color',\n            change: function (args) {\n                prevFrameSettings = { type: parent.toPascalCase(parent.frameObj.type), color: parent.frameObj.color,\n                    gradientColor: parent.frameObj.gradientColor, size: parent.frameObj.size, inset: parent.frameObj.inset,\n                    offset: parent.frameObj.offset, borderRadius: parent.frameObj.radius,\n                    frameLineStyle: parent.toPascalCase(parent.frameObj.border), lineCount: parent.frameObj.amount };\n                var temp = parent.frameObj.gradientColor;\n                var object = { currObj: {} };\n                parent.notify('filter', { prop: 'getCurrentObj', onPropertyChange: false, value: { object: object } });\n                parent.frameObj.gradientColor = args.currentValue.hex;\n                parent.notify('draw', { prop: 'triggerFrameChange', value: { prevFrameSettings: prevFrameSettings, obj: obj } });\n                if (obj['frameChangeEventArgs'] && !obj['frameChangeEventArgs'].cancel) {\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoColl', onPropertyChange: false, value: {\n                            operation: 'frame', previousObj: object['currObj'], previousObjColl: object['currObj']['objColl'],\n                            previousPointColl: object['currObj']['pointColl'], previousSelPointColl: object['currObj']['selPointColl'],\n                            previousCropObj: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.cropObj, {}, true), previousText: null, currentText: null,\n                            previousFilter: null, isCircleCrop: null\n                        } });\n                    parent.notify('draw', { prop: 'render-image', value: { isMouseWheel: null, isPreventClearRect: null, isFrame: true } });\n                    parent.notify('draw', { prop: 'redrawDownScale' });\n                    if (args.currentValue.rgba === '') {\n                        fillDDB.element.children[0].classList.add('e-nocolor-item');\n                    }\n                    else {\n                        fillDDB.element.children[0].classList.remove('e-nocolor-item');\n                        fillDDB.element.children[0].style.backgroundColor = args.currentValue.rgba;\n                    }\n                    parent.curFrameObjEvent = { previousFrameSetting: obj['frameChangeEventArgs'].previousFrameSetting,\n                        currentFrameSetting: obj['frameChangeEventArgs'].currentFrameSetting };\n                    parent.isFrameBtnClick = true;\n                }\n                else {\n                    parent.frameObj.gradientColor = temp;\n                }\n                fillDDB.toggle();\n            }\n        }, '#' + id + '_frame_gradient_fill');\n        var fillDDB = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({\n            open: function (args) {\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    var parentElem = args.element.parentElement;\n                    parentElem.style.top = fillDDB.element.getBoundingClientRect().top -\n                        parentElem.offsetHeight + 'px';\n                    if (window.innerWidth <= 520) {\n                        parentElem.style.left = parent.element.offsetLeft + 'px';\n                    }\n                }\n            },\n            target: '.e-frame-gradient-fill-color',\n            iconCss: 'e-dropdownbtn-preview',\n            cssClass: 'e-ie-ddb-popup'\n        }, '#' + id + '_frameGradientColorBtn');\n        fillColor.inline = true;\n        if (parent.frameObj.gradientColor === '') {\n            parent.element.querySelector('.e-frame-stroke.e-template .e-dropdownbtn-preview').classList.add('e-nocolor-item');\n        }\n        else {\n            parent.element.querySelector('.e-frame-stroke.e-template .e-dropdownbtn-preview').style.background\n                = parent.frameObj.gradientColor;\n        }\n    };\n    ToolbarModule.prototype.createFrameColor = function () {\n        var parent = this.parent;\n        var prevFrameSettings;\n        var obj = { frameChangeEventArgs: null };\n        var id = parent.element.id;\n        parent.element.querySelector('.e-template.e-stroke').appendChild(parent.createElement('input', {\n            id: id + '_frame_fill'\n        }));\n        var fillColor = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.ColorPicker({\n            modeSwitcher: false, value: parent.frameObj.color,\n            showButtons: false, mode: 'Palette', cssClass: 'e-frame-fill-color',\n            change: function (args) {\n                prevFrameSettings = { type: parent.toPascalCase(parent.frameObj.type), color: parent.frameObj.color,\n                    gradientColor: parent.frameObj.gradientColor, size: parent.frameObj.size, inset: parent.frameObj.inset,\n                    offset: parent.frameObj.offset, borderRadius: parent.frameObj.radius,\n                    frameLineStyle: parent.toPascalCase(parent.frameObj.border), lineCount: parent.frameObj.amount };\n                var temp = parent.frameObj.color;\n                var object = { currObj: {} };\n                parent.notify('filter', { prop: 'getCurrentObj', onPropertyChange: false, value: { object: object } });\n                parent.frameObj.color = args.currentValue.hex;\n                parent.notify('draw', { prop: 'triggerFrameChange', value: { prevFrameSettings: prevFrameSettings, obj: obj } });\n                if (obj['frameChangeEventArgs'] && !obj['frameChangeEventArgs'].cancel) {\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoColl', onPropertyChange: false, value: {\n                            operation: 'frame', previousObj: object['currObj'], previousObjColl: object['currObj']['objColl'],\n                            previousPointColl: object['currObj']['pointColl'], previousSelPointColl: object['currObj']['selPointColl'],\n                            previousCropObj: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.cropObj, {}, true), previousText: null, currentText: null,\n                            previousFilter: null, isCircleCrop: null\n                        } });\n                    parent.notify('draw', { prop: 'render-image', value: { isMouseWheel: null, isPreventClearRect: null, isFrame: true } });\n                    parent.notify('draw', { prop: 'redrawDownScale' });\n                    if (args.currentValue.rgba === '') {\n                        fillDDB.element.children[0].classList.add('e-nocolor-item');\n                    }\n                    else {\n                        fillDDB.element.children[0].classList.remove('e-nocolor-item');\n                        fillDDB.element.children[0].style.backgroundColor = args.currentValue.rgba;\n                    }\n                    parent.curFrameObjEvent = { previousFrameSetting: obj['frameChangeEventArgs'].previousFrameSetting,\n                        currentFrameSetting: obj['frameChangeEventArgs'].currentFrameSetting };\n                    parent.isFrameBtnClick = true;\n                }\n                else {\n                    parent.frameObj.color = temp;\n                }\n                fillDDB.toggle();\n            }\n        }, '#' + id + '_frame_fill');\n        var fillDDB = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({\n            open: function (args) {\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    var parentElem = args.element.parentElement;\n                    parentElem.style.top = fillDDB.element.getBoundingClientRect().top -\n                        parentElem.offsetHeight + 'px';\n                    if (window.innerWidth <= 520) {\n                        parentElem.style.left = parent.element.offsetLeft + 'px';\n                    }\n                }\n            },\n            target: '.e-frame-fill-color',\n            iconCss: 'e-dropdownbtn-preview',\n            cssClass: 'e-ie-ddb-popup'\n        }, '#' + id + '_frameColorBtn');\n        fillColor.inline = true;\n        parent.element.querySelector('.e-stroke.e-template .e-dropdownbtn-preview').style.background = parent.frameObj.color;\n    };\n    ToolbarModule.prototype.createFrameSize = function () {\n        var _this = this;\n        var parent = this.parent;\n        var prevFrameSettings;\n        var obj = { frameChangeEventArgs: null };\n        var id = parent.element.id;\n        var strokeWidthItems = [\n            { id: '1', text: this.l10n.getConstant('20') },\n            { id: '2', text: this.l10n.getConstant('40') },\n            { id: '3', text: this.l10n.getConstant('60') },\n            { id: '4', text: this.l10n.getConstant('80') },\n            { id: '5', text: this.l10n.getConstant('100') }\n        ];\n        var strokeWidthBtn = document.getElementById(id + '_frameSizeBtn');\n        var spanElem = document.createElement('span');\n        spanElem.innerHTML = this.l10n.getConstant(parent.frameObj.size.toString());\n        spanElem.className = 'e-frame-stroke-width';\n        strokeWidthBtn.appendChild(spanElem);\n        // Initialize the DropDownButton component.\n        var drpDownBtn = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({ items: strokeWidthItems,\n            open: function (args) {\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    var parentElem = args.element.parentElement;\n                    parentElem.style.top = drpDownBtn.element.getBoundingClientRect().top -\n                        parentElem.offsetHeight + 'px';\n                }\n                var activeBtn = drpDownBtn.element.childNodes[0].textContent;\n                if (activeBtn !== '') {\n                    args.element.querySelector('[aria-label = ' + '\"' + activeBtn + '\"' + ']').classList.add('e-selected-btn');\n                }\n            },\n            select: function (args) {\n                _this.triggerTbarClickEvent(args);\n                prevFrameSettings = { type: parent.toPascalCase(parent.frameObj.type), color: parent.frameObj.color,\n                    gradientColor: parent.frameObj.gradientColor, size: parent.frameObj.size, inset: parent.frameObj.inset,\n                    offset: parent.frameObj.offset, borderRadius: parent.frameObj.radius,\n                    frameLineStyle: parent.toPascalCase(parent.frameObj.border), lineCount: parent.frameObj.amount };\n                var temp = parent.frameObj.size;\n                var object = { currObj: {} };\n                parent.notify('filter', { prop: 'getCurrentObj', onPropertyChange: false, value: { object: object } });\n                parent.frameObj.size = parseInt(args.item.text, 10);\n                parent.notify('draw', { prop: 'triggerFrameChange', value: { prevFrameSettings: prevFrameSettings, obj: obj } });\n                if (obj['frameChangeEventArgs'] && !obj['frameChangeEventArgs'].cancel) {\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoColl', onPropertyChange: false, value: {\n                            operation: 'frame', previousObj: object['currObj'], previousObjColl: object['currObj']['objColl'],\n                            previousPointColl: object['currObj']['pointColl'], previousSelPointColl: object['currObj']['selPointColl'],\n                            previousCropObj: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.cropObj, {}, true), previousText: null, currentText: null,\n                            previousFilter: null, isCircleCrop: null\n                        } });\n                    parent.notify('draw', { prop: 'render-image', value: { isMouseWheel: null, isPreventClearRect: null, isFrame: true } });\n                    parent.notify('draw', { prop: 'redrawDownScale' });\n                    drpDownBtn.content = args.item.text;\n                    parent.curFrameObjEvent = { previousFrameSetting: obj['frameChangeEventArgs'].previousFrameSetting,\n                        currentFrameSetting: obj['frameChangeEventArgs'].currentFrameSetting };\n                    parent.isFrameBtnClick = true;\n                }\n                else {\n                    parent.frameObj.size = temp;\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    if (document.getElementById(id + '_bottomToolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        var toolbar_16 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_bottomToolbar', 'toolbar');\n                        toolbar_16.refreshOverflow();\n                    }\n                }\n                else {\n                    if (document.getElementById(id + '_toolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        var toolbar_17 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_toolbar', 'toolbar');\n                        toolbar_17.refreshOverflow();\n                    }\n                }\n            }\n        });\n        // Render initialized DropDownButton.\n        drpDownBtn.appendTo('#' + id + '_frameSizeBtn');\n    };\n    ToolbarModule.prototype.createFrameInset = function () {\n        var _this = this;\n        var parent = this.parent;\n        var prevFrameSettings;\n        var obj = { frameChangeEventArgs: null };\n        var id = parent.element.id;\n        var strokeWidthItems = [\n            { id: '1', text: this.l10n.getConstant('20') },\n            { id: '2', text: this.l10n.getConstant('40') },\n            { id: '3', text: this.l10n.getConstant('60') },\n            { id: '4', text: this.l10n.getConstant('80') },\n            { id: '5', text: this.l10n.getConstant('100') }\n        ];\n        var strokeWidthBtn = document.getElementById(id + '_frameInsetBtn');\n        var spanElem = document.createElement('span');\n        spanElem.innerHTML = this.l10n.getConstant(parent.frameObj.inset.toString());\n        spanElem.className = 'e-frame-inset';\n        strokeWidthBtn.appendChild(spanElem);\n        // Initialize the DropDownButton component.\n        var drpDownBtn = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({ items: strokeWidthItems,\n            open: function (args) {\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    var parentElem = args.element.parentElement;\n                    parentElem.style.top = drpDownBtn.element.getBoundingClientRect().top -\n                        parentElem.offsetHeight + 'px';\n                }\n                var activeBtn = drpDownBtn.element.childNodes[0].textContent;\n                if (activeBtn !== '') {\n                    args.element.querySelector('[aria-label = ' + '\"' + activeBtn + '\"' + ']').classList.add('e-selected-btn');\n                }\n            },\n            select: function (args) {\n                _this.triggerTbarClickEvent(args);\n                prevFrameSettings = { type: parent.toPascalCase(parent.frameObj.type), color: parent.frameObj.color,\n                    gradientColor: parent.frameObj.gradientColor, size: parent.frameObj.size, inset: parent.frameObj.inset,\n                    offset: parent.frameObj.offset, borderRadius: parent.frameObj.radius,\n                    frameLineStyle: parent.toPascalCase(parent.frameObj.border), lineCount: parent.frameObj.amount };\n                var temp = parent.frameObj.inset;\n                var object = { currObj: {} };\n                parent.notify('filter', { prop: 'getCurrentObj', onPropertyChange: false, value: { object: object } });\n                parent.frameObj.inset = parseInt(args.item.text, 10);\n                parent.notify('draw', { prop: 'triggerFrameChange', value: { prevFrameSettings: prevFrameSettings, obj: obj } });\n                if (obj['frameChangeEventArgs'] && !obj['frameChangeEventArgs'].cancel) {\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoColl', onPropertyChange: false, value: {\n                            operation: 'frame', previousObj: object['currObj'], previousObjColl: object['currObj']['objColl'],\n                            previousPointColl: object['currObj']['pointColl'], previousSelPointColl: object['currObj']['selPointColl'],\n                            previousCropObj: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.cropObj, {}, true), previousText: null, currentText: null,\n                            previousFilter: null, isCircleCrop: null\n                        } });\n                    parent.notify('draw', { prop: 'render-image', value: { isMouseWheel: null, isPreventClearRect: null, isFrame: true } });\n                    parent.notify('draw', { prop: 'redrawDownScale' });\n                    drpDownBtn.content = args.item.text;\n                    parent.curFrameObjEvent = { previousFrameSetting: obj['frameChangeEventArgs'].previousFrameSetting,\n                        currentFrameSetting: obj['frameChangeEventArgs'].currentFrameSetting };\n                    parent.isFrameBtnClick = true;\n                }\n                else {\n                    parent.frameObj.inset = temp;\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    if (document.getElementById(id + '_bottomToolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        var toolbar_18 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_bottomToolbar', 'toolbar');\n                        toolbar_18.refreshOverflow();\n                    }\n                }\n                else {\n                    if (document.getElementById(id + '_toolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        var toolbar_19 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_toolbar', 'toolbar');\n                        toolbar_19.refreshOverflow();\n                    }\n                }\n            }\n        });\n        // Render initialized DropDownButton.\n        drpDownBtn.appendTo('#' + id + '_frameInsetBtn');\n    };\n    ToolbarModule.prototype.createFrameOffset = function () {\n        var _this = this;\n        var parent = this.parent;\n        var prevFrameSettings;\n        var obj = { frameChangeEventArgs: null };\n        var id = parent.element.id;\n        var strokeWidthItems = [\n            { id: '1', text: this.l10n.getConstant('20') },\n            { id: '2', text: this.l10n.getConstant('40') },\n            { id: '3', text: this.l10n.getConstant('60') },\n            { id: '4', text: this.l10n.getConstant('80') },\n            { id: '5', text: this.l10n.getConstant('100') }\n        ];\n        var strokeWidthBtn = document.getElementById(id + '_frameOffsetBtn');\n        var spanElem = document.createElement('span');\n        spanElem.innerHTML = this.l10n.getConstant(parent.frameObj.offset.toString());\n        spanElem.className = 'e-frame-offset';\n        strokeWidthBtn.appendChild(spanElem);\n        // Initialize the DropDownButton component.\n        var drpDownBtn = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({ items: strokeWidthItems,\n            open: function (args) {\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    var parentElem = args.element.parentElement;\n                    parentElem.style.top = drpDownBtn.element.getBoundingClientRect().top -\n                        parentElem.offsetHeight + 'px';\n                }\n                var activeBtn = drpDownBtn.element.childNodes[0].textContent;\n                if (activeBtn !== '') {\n                    args.element.querySelector('[aria-label = ' + '\"' + activeBtn + '\"' + ']').classList.add('e-selected-btn');\n                }\n            },\n            select: function (args) {\n                _this.triggerTbarClickEvent(args);\n                prevFrameSettings = { type: parent.toPascalCase(parent.frameObj.type), color: parent.frameObj.color,\n                    gradientColor: parent.frameObj.gradientColor, size: parent.frameObj.size, inset: parent.frameObj.inset,\n                    offset: parent.frameObj.offset, borderRadius: parent.frameObj.radius,\n                    lineCount: parent.frameObj.amount, frameLineStyle: parent.toPascalCase(parent.frameObj.border) };\n                var temp = parent.frameObj.offset;\n                var object = { currObj: {} };\n                parent.notify('filter', { prop: 'getCurrentObj', onPropertyChange: false, value: { object: object } });\n                parent.frameObj.offset = parseInt(args.item.text, 10);\n                parent.notify('draw', { prop: 'triggerFrameChange', value: { prevFrameSettings: prevFrameSettings, obj: obj } });\n                if (obj['frameChangeEventArgs'] && !obj['frameChangeEventArgs'].cancel) {\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoColl', onPropertyChange: false, value: {\n                            operation: 'frame', previousObj: object['currObj'], previousObjColl: object['currObj']['objColl'],\n                            previousPointColl: object['currObj']['pointColl'], previousSelPointColl: object['currObj']['selPointColl'],\n                            previousCropObj: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.cropObj, {}, true), previousText: null, currentText: null,\n                            previousFilter: null, isCircleCrop: null\n                        } });\n                    parent.notify('draw', { prop: 'render-image', value: { isMouseWheel: null, isPreventClearRect: null, isFrame: true } });\n                    parent.notify('draw', { prop: 'redrawDownScale' });\n                    drpDownBtn.content = args.item.text;\n                    parent.curFrameObjEvent = { previousFrameSetting: obj['frameChangeEventArgs'].previousFrameSetting,\n                        currentFrameSetting: obj['frameChangeEventArgs'].currentFrameSetting };\n                    parent.isFrameBtnClick = true;\n                }\n                else {\n                    parent.frameObj.offset = temp;\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    if (document.getElementById(id + '_bottomToolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        var toolbar_20 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_bottomToolbar', 'toolbar');\n                        toolbar_20.refreshOverflow();\n                    }\n                }\n                else {\n                    if (document.getElementById(id + '_toolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        var toolbar_21 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_toolbar', 'toolbar');\n                        toolbar_21.refreshOverflow();\n                    }\n                }\n            }\n        });\n        // Render initialized DropDownButton.\n        drpDownBtn.appendTo('#' + id + '_frameOffsetBtn');\n    };\n    ToolbarModule.prototype.createFrameRadius = function () {\n        var _this = this;\n        var parent = this.parent;\n        var prevFrameSettings;\n        var obj = { frameChangeEventArgs: null };\n        var id = parent.element.id;\n        var strokeWidthItems = [\n            { id: '1', text: this.l10n.getConstant('0') },\n            { id: '2', text: this.l10n.getConstant('20') },\n            { id: '3', text: this.l10n.getConstant('40') },\n            { id: '4', text: this.l10n.getConstant('60') },\n            { id: '5', text: this.l10n.getConstant('80') },\n            { id: '6', text: this.l10n.getConstant('100') }\n        ];\n        var strokeWidthBtn = document.getElementById(id + '_frameRadiusBtn');\n        var spanElem = document.createElement('span');\n        spanElem.innerHTML = this.l10n.getConstant(parent.frameObj.radius.toString());\n        spanElem.className = 'e-frame-radius';\n        strokeWidthBtn.appendChild(spanElem);\n        // Initialize the DropDownButton component.\n        var drpDownBtn = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({ items: strokeWidthItems,\n            open: function (args) {\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    var parentElem = args.element.parentElement;\n                    parentElem.style.top = drpDownBtn.element.getBoundingClientRect().top -\n                        parentElem.offsetHeight + 'px';\n                }\n                var activeBtn = drpDownBtn.element.childNodes[0].textContent;\n                if (activeBtn !== '') {\n                    args.element.querySelector('[aria-label = ' + '\"' + activeBtn + '\"' + ']').classList.add('e-selected-btn');\n                }\n            },\n            select: function (args) {\n                _this.triggerTbarClickEvent(args);\n                prevFrameSettings = { type: parent.toPascalCase(parent.frameObj.type), color: parent.frameObj.color,\n                    gradientColor: parent.frameObj.gradientColor, size: parent.frameObj.size, inset: parent.frameObj.inset,\n                    offset: parent.frameObj.offset, borderRadius: parent.frameObj.radius,\n                    frameLineStyle: parent.toPascalCase(parent.frameObj.border),\n                    lineCount: parent.frameObj.amount };\n                var temp = parent.frameObj.radius;\n                var object = { currObj: {} };\n                parent.notify('filter', { prop: 'getCurrentObj', onPropertyChange: false, value: { object: object } });\n                parent.frameObj.radius = parseInt(args.item.text, 10);\n                parent.notify('draw', { prop: 'triggerFrameChange', value: { prevFrameSettings: prevFrameSettings, obj: obj } });\n                if (obj['frameChangeEventArgs'] && !obj['frameChangeEventArgs'].cancel) {\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoColl', onPropertyChange: false, value: {\n                            operation: 'frame', previousObj: object['currObj'], previousObjColl: object['currObj']['objColl'],\n                            previousPointColl: object['currObj']['pointColl'], previousSelPointColl: object['currObj']['selPointColl'],\n                            previousCropObj: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.cropObj, {}, true), previousText: null, currentText: null,\n                            previousFilter: null, isCircleCrop: null\n                        } });\n                    parent.notify('draw', { prop: 'render-image', value: { isMouseWheel: null, isPreventClearRect: null, isFrame: true } });\n                    parent.notify('draw', { prop: 'redrawDownScale' });\n                    drpDownBtn.content = args.item.text;\n                    parent.curFrameObjEvent = { previousFrameSetting: obj['frameChangeEventArgs'].previousFrameSetting,\n                        currentFrameSetting: obj['frameChangeEventArgs'].currentFrameSetting };\n                    parent.isFrameBtnClick = true;\n                }\n                else {\n                    parent.frameObj.radius = temp;\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    if (document.getElementById(id + '_bottomToolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        var toolbar_22 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_bottomToolbar', 'toolbar');\n                        toolbar_22.refreshOverflow();\n                    }\n                }\n                else {\n                    if (document.getElementById(id + '_toolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        var toolbar_23 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_toolbar', 'toolbar');\n                        toolbar_23.refreshOverflow();\n                    }\n                }\n            }\n        });\n        // Render initialized DropDownButton.\n        drpDownBtn.appendTo('#' + id + '_frameRadiusBtn');\n    };\n    ToolbarModule.prototype.createFrameAmount = function () {\n        var _this = this;\n        var parent = this.parent;\n        var prevFrameSettings;\n        var obj = { frameChangeEventArgs: null };\n        var id = parent.element.id;\n        var strokeWidthItems = [\n            { id: '1', text: this.l10n.getConstant('1') },\n            { id: '2', text: this.l10n.getConstant('2') },\n            { id: '3', text: this.l10n.getConstant('3') },\n            { id: '4', text: this.l10n.getConstant('4') },\n            { id: '5', text: this.l10n.getConstant('5') }\n        ];\n        var strokeWidthBtn = document.getElementById(id + '_frameAmountBtn');\n        var spanElem = document.createElement('span');\n        spanElem.innerHTML = this.l10n.getConstant(parent.frameObj.amount.toString());\n        spanElem.className = 'e-frame-amount';\n        strokeWidthBtn.appendChild(spanElem);\n        // Initialize the DropDownButton component.\n        var drpDownBtn = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({ items: strokeWidthItems,\n            open: function (args) {\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    var parentElem = args.element.parentElement;\n                    parentElem.style.top = drpDownBtn.element.getBoundingClientRect().top -\n                        parentElem.offsetHeight + 'px';\n                }\n                var activeBtn = drpDownBtn.element.childNodes[0].textContent;\n                if (activeBtn !== '') {\n                    args.element.querySelector('[aria-label = ' + '\"' + activeBtn + '\"' + ']').classList.add('e-selected-btn');\n                }\n            },\n            select: function (args) {\n                _this.triggerTbarClickEvent(args);\n                prevFrameSettings = { type: parent.toPascalCase(parent.frameObj.type), color: parent.frameObj.color,\n                    gradientColor: parent.frameObj.gradientColor, size: parent.frameObj.size, inset: parent.frameObj.inset,\n                    offset: parent.frameObj.offset, borderRadius: parent.frameObj.radius,\n                    lineCount: parent.frameObj.amount, frameLineStyle: parent.toPascalCase(parent.frameObj.border) };\n                var temp = parent.frameObj.amount;\n                var object = { currObj: {} };\n                parent.notify('filter', { prop: 'getCurrentObj', onPropertyChange: false, value: { object: object } });\n                parent.frameObj.amount = parseInt(args.item.text, 10);\n                parent.notify('draw', { prop: 'triggerFrameChange', value: { prevFrameSettings: prevFrameSettings, obj: obj } });\n                if (obj['frameChangeEventArgs'] && !obj['frameChangeEventArgs'].cancel) {\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoColl', onPropertyChange: false, value: {\n                            operation: 'frame', previousObj: object['currObj'], previousObjColl: object['currObj']['objColl'],\n                            previousPointColl: object['currObj']['pointColl'], previousSelPointColl: object['currObj']['selPointColl'],\n                            previousCropObj: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.cropObj, {}, true), previousText: null, currentText: null,\n                            previousFilter: null, isCircleCrop: null\n                        } });\n                    parent.notify('draw', { prop: 'render-image', value: { isMouseWheel: null, isPreventClearRect: null, isFrame: true } });\n                    parent.notify('draw', { prop: 'redrawDownScale' });\n                    drpDownBtn.content = args.item.text;\n                    parent.curFrameObjEvent = { previousFrameSetting: obj['frameChangeEventArgs'].previousFrameSetting, currentFrameSetting: obj['frameChangeEventArgs'].currentFrameSetting };\n                    parent.isFrameBtnClick = true;\n                }\n                else {\n                    parent.frameObj.amount = temp;\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    if (document.getElementById(id + '_bottomToolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        var toolbar_24 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_bottomToolbar', 'toolbar');\n                        toolbar_24.refreshOverflow();\n                    }\n                }\n                else {\n                    if (document.getElementById(id + '_toolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        var toolbar_25 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_toolbar', 'toolbar');\n                        toolbar_25.refreshOverflow();\n                    }\n                }\n            }\n        });\n        // Render initialized DropDownButton.\n        drpDownBtn.appendTo('#' + id + '_frameAmountBtn');\n    };\n    ToolbarModule.prototype.createFrameBorder = function () {\n        var _this = this;\n        var parent = this.parent;\n        var prevFrameSettings;\n        var obj = { frameChangeEventArgs: null };\n        var id = parent.element.id;\n        var strokeWidthItems = [\n            { id: '1', text: this.l10n.getConstant('Solid') },\n            { id: '2', text: this.l10n.getConstant('Dashed') },\n            { id: '3', text: this.l10n.getConstant('Dotted') }\n        ];\n        var strokeWidthBtn = document.getElementById(id + '_frameBorderBtn');\n        var spanElem = document.createElement('span');\n        spanElem.innerHTML = this.l10n.getConstant(parent.toPascalCase(parent.frameObj.border));\n        spanElem.className = 'e-frame-border';\n        strokeWidthBtn.appendChild(spanElem);\n        // Initialize the DropDownButton component.\n        var drpDownBtn = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_4__.DropDownButton({ items: strokeWidthItems,\n            open: function (args) {\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    var parentElem = args.element.parentElement;\n                    parentElem.style.top = drpDownBtn.element.getBoundingClientRect().top -\n                        parentElem.offsetHeight + 'px';\n                }\n                var activeBtn = drpDownBtn.element.childNodes[0].textContent;\n                if (activeBtn !== '') {\n                    args.element.querySelector('[aria-label = ' + '\"' + activeBtn + '\"' + ']').classList.add('e-selected-btn');\n                }\n            },\n            select: function (args) {\n                _this.triggerTbarClickEvent(args);\n                prevFrameSettings = { lineCount: parent.frameObj.amount, color: parent.frameObj.color, borderRadius: parent.frameObj.radius,\n                    gradientColor: parent.frameObj.gradientColor, size: parent.frameObj.size, inset: parent.frameObj.inset,\n                    offset: parent.frameObj.offset, frameLineStyle: parent.toPascalCase(parent.frameObj.border),\n                    type: parent.toPascalCase(parent.frameObj.type) };\n                var temp = parent.frameObj.border;\n                var object = { currObj: {} };\n                parent.notify('filter', { prop: 'getCurrentObj', onPropertyChange: false, value: { object: object } });\n                parent.frameObj.border = args.item.text.toLowerCase();\n                parent.notify('draw', { prop: 'triggerFrameChange', value: { prevFrameSettings: prevFrameSettings, obj: obj } });\n                if (obj['frameChangeEventArgs'] && !obj['frameChangeEventArgs'].cancel) {\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoColl', onPropertyChange: false, value: {\n                            operation: 'frame', previousObj: object['currObj'], previousObjColl: object['currObj']['objColl'],\n                            previousPointColl: object['currObj']['pointColl'], previousSelPointColl: object['currObj']['selPointColl'],\n                            previousCropObj: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.cropObj, {}, true), previousText: null, currentText: null,\n                            previousFilter: null, isCircleCrop: null\n                        } });\n                    parent.notify('draw', { prop: 'render-image', value: { isMouseWheel: null, isPreventClearRect: null, isFrame: true } });\n                    parent.notify('draw', { prop: 'redrawDownScale' });\n                    drpDownBtn.content = args.item.text;\n                    parent.curFrameObjEvent = { previousFrameSetting: obj['frameChangeEventArgs'].previousFrameSetting, currentFrameSetting: obj['frameChangeEventArgs'].currentFrameSetting };\n                    parent.isFrameBtnClick = true;\n                }\n                else {\n                    parent.frameObj.border = temp;\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    if (document.getElementById(id + '_bottomToolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        var toolbar_26 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_bottomToolbar', 'toolbar');\n                        toolbar_26.refreshOverflow();\n                    }\n                }\n                else {\n                    if (document.getElementById(id + '_toolbar')) {\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        var toolbar_27 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_toolbar', 'toolbar');\n                        toolbar_27.refreshOverflow();\n                    }\n                }\n            }\n        });\n        // Render initialized DropDownButton.\n        drpDownBtn.appendTo('#' + id + '_frameBorderBtn');\n    };\n    ToolbarModule.prototype.initFilterToolbarItem = function () {\n        var _this = this;\n        var parent = this.parent;\n        var id = parent.element.id;\n        var mainItem = this.getFilterToolbarItem();\n        var args = { toolbarType: 'filter', toolbarItems: mainItem };\n        parent.trigger('toolbarUpdating', args);\n        mainItem = args.toolbarItems;\n        if (document.querySelector('#' + id + '_contextualToolbar').classList.contains('e-control')) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(document.getElementById(id + '_contextualToolbar'), 'toolbar').destroy();\n        }\n        var toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.Toolbar({\n            width: '100%',\n            items: mainItem,\n            clicked: this.contextualToolbarClicked.bind(this),\n            created: function () {\n                _this.updatePrivateVariables();\n                _this.createCanvasFilter();\n                if (parent.currentFilter === '') {\n                    parent.currentFilter = id + '_default';\n                }\n                var hdrWrapper = document.querySelector('#' + id + '_headWrapper');\n                if (hdrWrapper) {\n                    hdrWrapper.style.display = 'none';\n                }\n                var filterElem = document.getElementById(parent.currentFilter + 'Canvas');\n                if (filterElem) {\n                    filterElem.parentElement.parentElement.classList.add('e-selected');\n                }\n                _this.enableDisableTbrBtn();\n                toolbar.refreshOverflow();\n            }\n        });\n        toolbar.appendTo('#' + id + '_contextualToolbar');\n    };\n    ToolbarModule.prototype.drawDashedLine = function (ctx) {\n        ctx.beginPath();\n        ctx.setLineDash([5]);\n        ctx.rect(10, 10, 280, 130);\n        ctx.stroke();\n        ctx.closePath();\n    };\n    ToolbarModule.prototype.createCanvasFilter = function () {\n        var parent = this.parent;\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.showSpinner)(parent.element);\n        parent.element.style.opacity = '0.5';\n        var imageData = parent.getCurrentCanvasData();\n        this.inMemoryCanvas.width = imageData.width;\n        this.inMemoryCanvas.height = imageData.height;\n        this.inMemoryContext.putImageData(imageData, 0, 0);\n        this.updateFilterCanvas('_defaultCanvas', 'default');\n        this.updateFilterCanvas('_chromeCanvas', 'chrome');\n        this.updateFilterCanvas('_coldCanvas', 'cold');\n        this.updateFilterCanvas('_warmCanvas', 'warm');\n        this.updateFilterCanvas('_grayscaleCanvas', 'grayscale');\n        this.updateFilterCanvas('_sepiaCanvas', 'sepia');\n        this.updateFilterCanvas('_invertCanvas', 'invert');\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.hideSpinner)(parent.element);\n        parent.element.style.opacity = '1';\n        parent.initialAdjustmentValue = this.lowerContext.filter;\n    };\n    ToolbarModule.prototype.updateFilterCanvas = function (selector, type) {\n        var parent = this.parent;\n        var filter = parent.element.querySelector('#' + parent.element.id + selector);\n        if (filter) {\n            var ctx = filter.getContext('2d');\n            ctx = filter.getContext('2d');\n            filter.style.width = '100px';\n            filter.style.height = '100px';\n            parent.notify('filter', { prop: 'updateAdj', value: { type: type, value: null, isPreview: true, ctx: ctx } });\n            ctx.drawImage(this.inMemoryCanvas, 0, 0, 300, 150);\n            if (parent.isSafari) {\n                parent.notify('filter', { prop: 'apply-filter', onPropertyChange: false, value: { context: ctx } });\n            }\n        }\n    };\n    ToolbarModule.prototype.getQuickAccessToolbarItem = function (isPenEdit) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var args = { cancel: false, toolbarItems: [] };\n        var toolbarItems = [];\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isPenEdit)) {\n            if (parent.activeObj.shape === 'image') {\n                toolbarItems.push('Flip');\n            }\n            if (parent.activeObj.shape !== 'redact') {\n                toolbarItems.push('BringToFront');\n            }\n            toolbarItems.push('Clone');\n            toolbarItems.push('Delete');\n            if (parent.activeObj.shape === 'text') {\n                toolbarItems.push('EditText');\n            }\n            args.shape = parent.toPascalCase(parent.activeObj.shape);\n        }\n        else if (isPenEdit) {\n            toolbarItems.push('BringToFront');\n            toolbarItems.push('Delete');\n            args.shape = 'Freehand draw';\n        }\n        args.toolbarItems = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], toolbarItems, null, true);\n        parent.trigger('quickAccessToolbarOpen', args);\n        var orgToolbarItems = [];\n        if (args.cancel) {\n            orgToolbarItems = [];\n        }\n        else {\n            for (var i = 0; i < args.toolbarItems.length; i++) {\n                switch (args.toolbarItems[i]) {\n                    case 'BringToFront':\n                        orgToolbarItems.push({ id: id + '_bringToFront', prefixIcon: 'e-icons e-bring-to-front',\n                            tooltipText: this.l10n.getConstant('BringToFront'), align: 'Left' });\n                        break;\n                    case 'Clone':\n                        orgToolbarItems.push({ id: id + '_duplicate', prefixIcon: 'e-icons e-order', cssClass: 'top-icon e-order',\n                            tooltipText: this.l10n.getConstant('Duplicate'), align: 'Left' });\n                        break;\n                    case 'Delete':\n                        orgToolbarItems.push({ id: id + '_remove', prefixIcon: 'e-icons e-trash', cssClass: 'top-icon e-trash',\n                            tooltipText: this.l10n.getConstant('Remove'), align: 'Left' });\n                        break;\n                    case 'EditText':\n                        orgToolbarItems.push({ id: id + '_editText', prefixIcon: 'e-icons e-annotation-edit', cssClass: 'top-icon e-annotation-edit',\n                            tooltipText: this.l10n.getConstant('EditText'), align: 'Left' });\n                        break;\n                    case 'Flip':\n                        orgToolbarItems.push({ id: id + '_hFlip', prefixIcon: 'e-icons e-horizontal-flip',\n                            tooltipText: this.l10n.getConstant('HorizontalFlip'), align: 'Left' });\n                        orgToolbarItems.push({ id: id + '_vFlip', prefixIcon: 'e-icons e-vertical-flip',\n                            tooltipText: this.l10n.getConstant('VerticalFlip'), align: 'Left' });\n                        break;\n                    default:\n                        orgToolbarItems.push(args.toolbarItems[i]);\n                        break;\n                }\n            }\n        }\n        return orgToolbarItems;\n    };\n    ToolbarModule.prototype.renderQAT = function (isPenEdit) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (parent.activeObj && parent.showQuickAccessToolbar) {\n            var qtArea = document.getElementById(id + '_quickAccessToolbarArea');\n            if (qtArea) {\n                this.destroyQuickAccessToolbar();\n                qtArea.style.display = 'block';\n            }\n            var items = this.getQuickAccessToolbarItem(isPenEdit);\n            if (items.length === 0) {\n                return;\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.quickAccessToolbarTemplate)) {\n                var toolbarObj = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.Toolbar({\n                    items: items,\n                    clicked: this.quickAccessToolbarClicked.bind(this)\n                });\n                toolbarObj.appendTo('#' + id + '_quickAccessToolbar');\n            }\n            var height = this.toolbarHeight && this.toolbarHeight !== 0 ? this.toolbarHeight : qtArea.clientHeight;\n            var wrapperElement = parent.element.querySelector('#' + id + '_headWrapper');\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isPenEdit) && (parent.activeObj.activePoint.width !== 0 ||\n                parent.activeObj.activePoint.height !== 0 ||\n                (parent.activeObj.shape && parent.activeObj.shape === 'path' && parent.activeObj.pointColl.length > 0))) {\n                var orderObj = { order: null };\n                parent.notify('shape', { prop: 'getHighestOrder', onPropertyChange: false, value: { obj: orderObj } });\n                if (parent.activeObj.order > orderObj['order'] && document.getElementById(parent.element.id + '_bringToFront')) {\n                    document.getElementById(parent.element.id + '_bringToFront').classList.add('e-overlay');\n                }\n                else {\n                    if (document.getElementById(parent.element.id + '_bringToFront')) {\n                        document.getElementById(parent.element.id + '_bringToFront').classList.remove('e-overlay');\n                    }\n                }\n                qtArea.style.width = 'auto';\n                parent.activeObj.activePoint.width = Math.abs(parent.activeObj.activePoint.width);\n                parent.activeObj.activePoint.height = Math.abs(parent.activeObj.activePoint.height);\n                var x = parent.activeObj.activePoint.startX < parent.activeObj.activePoint.endX ?\n                    parent.activeObj.activePoint.startX : parent.activeObj.activePoint.endX;\n                var y = parent.activeObj.activePoint.startY < parent.activeObj.activePoint.endY ?\n                    parent.activeObj.activePoint.startY : parent.activeObj.activePoint.endY;\n                var width = parent.activeObj.activePoint.width;\n                if (parent.activeObj.rotatedAngle !== 0 && parent.activeObj.shape !== 'arrow') {\n                    var object = { activePoint: null };\n                    parent.notify('shape', { prop: 'getSquarePointForRotatedShape', onPropertyChange: false,\n                        value: { obj: parent.activeObj, object: object } });\n                    var point = object['activePoint'];\n                    x = point.startX;\n                    y = point.startY;\n                    width = point.width;\n                }\n                else if (parent.activeObj.shape === 'path') {\n                    var path = parent.getSquarePointForPath(parent.activeObj);\n                    x = path.startX;\n                    y = path.startY;\n                    width = path.width;\n                }\n                qtArea.style.left = (x + (width / 2)) - (items.length * 25) + 'px';\n                if (parseFloat(qtArea.style.left) + (qtArea.clientWidth / 2) !== x + (width / 2)) {\n                    var diff = (x + (width / 2)) - (parseFloat(qtArea.style.left) + (qtArea.clientWidth / 2));\n                    qtArea.style.left = parseFloat(qtArea.style.left) + diff + 'px';\n                }\n                if (wrapperElement) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    height = wrapperElement.offsetHeight + height;\n                }\n                if (y - (height + (height / 1.5)) < parent.img.destTop) {\n                    qtArea.style.top = parent.img.destTop + 'px';\n                    if (wrapperElement) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        qtArea.style.top = (parent.img.destTop < 0 ? 0 : parent.img.destTop) + wrapperElement.offsetHeight + 'px';\n                    }\n                }\n                else {\n                    height = this.toolbarHeight;\n                    qtArea.style.top = y - (height + (height / 1.5)) + 'px';\n                }\n            }\n            else if (isPenEdit) {\n                var indexObj = { freehandSelectedIndex: -1 };\n                parent.notify('freehand-draw', { prop: 'getFreehandSelectedIndex', onPropertyChange: false, value: { obj: indexObj } });\n                var orderObj = { order: null };\n                parent.notify('shape', { prop: 'getHighestOrder', onPropertyChange: false, value: { obj: orderObj } });\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if (parent.getObjFromId(parent.pointColl[indexObj['freehandSelectedIndex']].id).order >= orderObj['order'] && document.getElementById(parent.element.id + '_bringToFront')) {\n                    document.getElementById(parent.element.id + '_bringToFront').classList.add('e-overlay');\n                }\n                else {\n                    if (document.getElementById(parent.element.id + '_bringToFront')) {\n                        document.getElementById(parent.element.id + '_bringToFront').classList.remove('e-overlay');\n                    }\n                }\n                var obj = { activePoint: null };\n                parent.notify('freehand-draw', { prop: 'getSqPtFD',\n                    value: { idx: indexObj['freehandSelectedIndex'], obj: obj } });\n                var point = obj['activePoint'];\n                qtArea.style.width = 'auto';\n                qtArea.style.left = (point.startX + (point.width / 2)) - (items.length * 24) + 'px';\n                if (point.startY - (height + (height / 1.5)) < parent.img.destTop) {\n                    qtArea.style.top = parent.img.destTop + 'px';\n                }\n                else {\n                    qtArea.style.top = point.startY - (height + (height / 1.5)) + 'px';\n                }\n            }\n            else {\n                qtArea.style.display = 'none';\n            }\n            if (parseFloat(qtArea.style.top) < 0) {\n                qtArea.style.top = '0px';\n            }\n        }\n    };\n    ToolbarModule.prototype.refreshDropDownBtn = function (isDisabled) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isDisabled)) {\n            return;\n        }\n        var parent = this.parent;\n        var id = parent.element.id;\n        var annotation = document.querySelector('#' + id + '_annotationBtn');\n        if (annotation) {\n            if (isDisabled) {\n                annotation.classList.add('e-disabled');\n                annotation.parentElement.classList.add('e-overlay');\n            }\n            else {\n                annotation.classList.remove('e-disabled');\n                annotation.parentElement.classList.remove('e-overlay');\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(annotation, 'dropdown-btn').disabled = isDisabled;\n        }\n        var transform = document.querySelector('#' + id + '_transformBtn');\n        if (transform) {\n            if (isDisabled) {\n                transform.classList.add('e-disabled');\n                transform.parentElement.classList.add('e-overlay');\n            }\n            else {\n                transform.classList.remove('e-disabled');\n                transform.parentElement.classList.remove('e-overlay');\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(transform, 'dropdown-btn').disabled = isDisabled;\n        }\n        var adjustment = document.querySelector('#' + id + '_adjustment');\n        if (adjustment) {\n            if (isDisabled) {\n                adjustment.classList.add('e-disabled');\n                adjustment.parentElement.classList.add('e-overlay');\n            }\n            else {\n                adjustment.classList.remove('e-disabled');\n                adjustment.parentElement.classList.remove('e-overlay');\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(adjustment, 'btn').disabled = isDisabled;\n        }\n        var filter = document.querySelector('#' + id + '_filter');\n        if (filter) {\n            if (isDisabled) {\n                filter.classList.add('e-disabled');\n                filter.parentElement.classList.add('e-overlay');\n            }\n            else {\n                filter.classList.remove('e-disabled');\n                filter.parentElement.classList.remove('e-overlay');\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(filter, 'btn').disabled = isDisabled;\n        }\n    };\n    ToolbarModule.prototype.cropSelect = function (args) {\n        var parent = this.parent;\n        parent.isCropTab = true;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.transform.cropZoomFactor)) {\n            parent.transform.cropZoomFactor = parent.transform.zoomFactor;\n            parent.notify('draw', { prop: 'setTempZoomFactor', onPropertyChange: false, value: { tempZoomFactor: parent.transform.zoomFactor } });\n        }\n        parent.transform.zoomFactor = parent.transform.cropZoomFactor;\n        var text = args.item.id;\n        this.currentToolbar = 'crop';\n        parent.currSelectionPoint = null;\n        parent.notify('draw', { prop: 'setIsCropSelect', value: { bool: true } });\n        var obj = { prevObj: null };\n        parent.notify('crop', { prop: 'getPreviousCropCurrentObj', value: { obj: obj } });\n        parent.notify('draw', { prop: 'select', onPropertyChange: false,\n            value: { type: text, startX: null, startY: null, width: null, height: null } });\n        parent.notify('crop', { prop: 'setPreviousCropCurrentObj', value: { obj: obj['prevObj'] } });\n        this.enableDisableTbrBtn();\n        parent.notify('transform', { prop: 'disableZoomOutBtn', value: { isZoomOut: true } });\n    };\n    ToolbarModule.prototype.quickAccessToolbarClicked = function (args, isContextualToolbar) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (args.item) {\n            var isPreventUndoRedo = null;\n            var obj = { prevActObj: null };\n            var object = { tempObj: null };\n            parent.notify('draw', { prop: 'getPrevActObj', onPropertyChange: false, value: { obj: obj } });\n            parent.notify('selection', { prop: 'getTempActObj', onPropertyChange: false, value: { obj: object } });\n            object['tempObj']['activePoint']['height'] = Math.abs(object['tempObj']['activePoint']['height']);\n            var pathObject = { isNewPath: null };\n            var ctx = void 0;\n            parent.notify('draw', { prop: 'getNewPath', value: { obj: pathObject } });\n            var type = args.item.id.replace(id + '_', '').toLowerCase();\n            var left = void 0;\n            var right = void 0;\n            var indexObj = { freehandSelectedIndex: null };\n            var shapeId = void 0;\n            var isDisabled = void 0;\n            var orderObj = { order: null };\n            switch (type) {\n                case 'duplicate':\n                    if (!parent.element.querySelector('#' + id + '_duplicate').classList.contains('e-overlay')) {\n                        this.refreshSlider();\n                        if (!pathObject['isNewPath'] && JSON.stringify(object['tempObj']) === JSON.stringify(parent.activeObj)) {\n                            isPreventUndoRedo = true;\n                        }\n                        this.duplicateShape(isPreventUndoRedo);\n                    }\n                    break;\n                case 'remove':\n                    if (!parent.element.querySelector('#' + id + '_remove').classList.contains('e-overlay')) {\n                        parent.noPushUndo = false;\n                        this.refreshSlider();\n                        parent.notify('selection', { prop: 'deleteItem', onPropertyChange: false });\n                    }\n                    break;\n                case 'edittext':\n                    if (!parent.element.querySelector('#' + id + '_editText').classList.contains('e-overlay')) {\n                        this.editText();\n                    }\n                    break;\n                case 'rotleft':\n                case 'rotright':\n                    left = parent.element.querySelector('#' + id + '_rotLeft');\n                    right = parent.element.querySelector('#' + id + '_rotRight');\n                    if ((left && !left.classList.contains('e-disabled')) ||\n                        (right && !right.classList.contains('e-disabled'))) {\n                        parent.rotateImage(args.item.id.replace(id + '_', '').toLowerCase());\n                    }\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                    break;\n                case 'hflip':\n                    if (!parent.element.querySelector('#' + id + '_hFlip').classList.contains('e-disabled')) {\n                        ctx = parent.activeObj.imageCanvas.getContext('2d');\n                        parent.horizontalFlip(ctx);\n                    }\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                    break;\n                case 'vflip':\n                    if (!parent.element.querySelector('#' + id + '_vFlip').classList.contains('e-disabled')) {\n                        ctx = parent.activeObj.imageCanvas.getContext('2d');\n                        parent.verticalFlip(ctx);\n                    }\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                    break;\n                case 'bringtofront':\n                    if (!parent.element.querySelector('#' + id + '_bringToFront').classList.contains('e-overlay')) {\n                        parent.notify('freehand-draw', { prop: 'getFreehandSelectedIndex', onPropertyChange: false, value: { obj: indexObj } });\n                        shapeId = indexObj['freehandSelectedIndex'] !== null ? parent.pointColl[indexObj['freehandSelectedIndex']].id :\n                            parent.activeObj.currIndex;\n                        parent.updateShapeOrder(shapeId, type);\n                        isDisabled = false;\n                        parent.notify('shape', { prop: 'getHighestOrder', onPropertyChange: false, value: { obj: orderObj } });\n                        if (shapeId.indexOf('pen') > -1) {\n                            parent.notify('shape', { prop: 'updateShapeColl', onPropertyChange: false });\n                            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                            var order = parent.getObjFromId(shapeId).order;\n                            isDisabled = order >= orderObj['order'] ? true : false;\n                        }\n                        else {\n                            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                            var order = parent.getObjFromId(shapeId).order;\n                            isDisabled = order > orderObj['order'] ? true : false;\n                        }\n                        if (isDisabled) {\n                            document.getElementById(parent.element.id + '_bringToFront').classList.add('e-overlay');\n                        }\n                        else {\n                            document.getElementById(parent.element.id + '_bringToFront').classList.remove('e-overlay');\n                        }\n                        parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                    }\n                    break;\n            }\n            if (type === 'duplicate' || type === 'remove') {\n                parent.notify('draw', { prop: 'redrawDownScale' });\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isContextualToolbar)) {\n            parent.trigger('quickAccessToolbarItemClick', args);\n        }\n    };\n    ToolbarModule.prototype.editText = function () {\n        var parent = this.parent;\n        var points = { x: parent.activeObj.activePoint.startX, y: parent.activeObj.activePoint.startY };\n        this.upperContext.clearRect(0, 0, parent.upperCanvas.width, parent.upperCanvas.height);\n        parent.notify('selection', { prop: 'setTempActObj', onPropertyChange: false,\n            value: { obj: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.activeObj, {}, true) } });\n        parent.notify('selection', { prop: 'setInitialTextEdit', onPropertyChange: false,\n            value: { bool: true } });\n        parent.notify('draw', { prop: 'setPrevActObj', onPropertyChange: false,\n            value: { prevActObj: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.activeObj, {}, true) } });\n        if (parent.activeObj.rotatedAngle !== 0) {\n            var object = { x: points.x, y: points.y };\n            parent.notify('shape', { prop: 'getTextBoxPosition', onPropertyChange: false,\n                value: { obj: parent.activeObj, object: object } });\n            points.x = object['x'];\n            points.y = object['y'];\n            var object1 = { x: points.x, y: points.y };\n            parent.notify('shape', { prop: 'setFlipState', onPropertyChange: false,\n                value: { x: points.x, y: points.y, obj: parent.activeObj, object: object1 } });\n            points.x = object1['x'];\n            points.y = object1['y'];\n        }\n        var tempActiveObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.activeObj, {}, true);\n        parent.notify('shape', { prop: 'refreshActiveObj', onPropertyChange: false });\n        this.upperContext.clearRect(0, 0, parent.upperCanvas.width, parent.upperCanvas.height);\n        this.lowerContext.clearRect(0, 0, parent.upperCanvas.width, parent.upperCanvas.height);\n        parent.notify('draw', { prop: 'redrawImgWithObj', onPropertyChange: false });\n        parent.notify('draw', { prop: 'redrawDownScale' });\n        parent.notify('draw', { prop: 'clearOuterCanvas', onPropertyChange: false, value: { context: this.lowerContext } });\n        parent.notify('draw', { prop: 'clearOuterCanvas', onPropertyChange: false, value: { context: this.upperContext } });\n        parent.activeObj = tempActiveObj;\n        parent.notify('shape', { prop: 'renderTextArea', onPropertyChange: false,\n            value: { x: points.x, y: points.y, actObj: parent.activeObj } });\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.activeObj.currIndex)) {\n            parent.notify('draw', { prop: 'setShapeTextInsert', onPropertyChange: false, value: { bool: true } });\n        }\n        if (document.getElementById(parent.element.id + '_quickAccessToolbarArea')) {\n            document.getElementById(parent.element.id + '_quickAccessToolbarArea').style.display = 'none';\n        }\n    };\n    ToolbarModule.prototype.duplicateShape = function (isPreventUndoRedo, isPublicMethod) {\n        var parent = this.parent;\n        var tempObj = { activePoint: { startX: 0, startY: 0, endX: 0, endY: 0, width: 0, height: 0 },\n            flipObjColl: [], triangle: [], triangleRatio: [] };\n        parent.notify('selection', { prop: 'setTempActObj', onPropertyChange: false,\n            value: { obj: tempObj } });\n        var obj = { prevActObj: null };\n        parent.notify('draw', { prop: 'getPrevActObj', onPropertyChange: false, value: { obj: obj } });\n        var pathObject = { isNewPath: null };\n        parent.notify('draw', { prop: 'getNewPath', value: { obj: pathObject } });\n        var objColl;\n        var duplicateObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.activeObj, {}, true);\n        var orderObj = { order: null };\n        parent.notify('shape', { prop: 'getHighestOrder', onPropertyChange: false, value: { obj: orderObj } });\n        if (duplicateObj.order) {\n            parent.notify('shape', { prop: 'updateShapeColl', onPropertyChange: false });\n            duplicateObj.order = orderObj['order'] > duplicateObj.order ? orderObj['order'] + 1 : duplicateObj.order + 1;\n        }\n        else {\n            parent.noPushUndo = true;\n            parent.okBtn();\n            parent.noPushUndo = false;\n            parent.selectShape(duplicateObj.currIndex);\n            duplicateObj.order = orderObj['order'] > duplicateObj.order ? orderObj['order'] + 1 : duplicateObj.order + 1;\n        }\n        if (duplicateObj.shape === 'image') {\n            objColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], parent.objColl, [], true);\n            parent.notify('undo-redo', { prop: 'updateUrObj', onPropertyChange: false, value: { objColl: objColl } });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.activeObj.currIndex)) {\n            parent.notify('shape', { prop: 'applyActObj', onPropertyChange: false, value: { isMouseDown: isPreventUndoRedo } });\n        }\n        else if (obj['prevActObj'] || isPublicMethod) {\n            parent.activeObj.currIndex = null;\n            duplicateObj.currIndex = null;\n            parent.notify('shape', { prop: 'applyActObj', onPropertyChange: false, value: { isMouseDown: isPreventUndoRedo } });\n        }\n        else {\n            parent.notify('shape', { prop: 'applyActObj', onPropertyChange: false, value: { isMouseDown: true } });\n        }\n        var noPushUndo = parent.noPushUndo;\n        parent.noPushUndo = false;\n        parent.notify('undo-redo', { prop: 'updateCurrUrc', value: { type: 'ok' } });\n        parent.noPushUndo = noPushUndo;\n        objColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], parent.objColl, [], true);\n        duplicateObj.activePoint.startX += 10;\n        duplicateObj.activePoint.startY -= 10;\n        duplicateObj.activePoint.endX += 10;\n        duplicateObj.activePoint.endY -= 10;\n        if (duplicateObj.shape === 'path') {\n            for (var i = 0; i < duplicateObj.pointColl.length; i++) {\n                duplicateObj.pointColl[i].x += 10;\n                duplicateObj.pointColl[i].y -= 10;\n            }\n        }\n        else if (duplicateObj.shape === 'image') {\n            duplicateObj.imageCanvas = parent.createElement('canvas');\n        }\n        var shapeIDObj = { id: 'shape_' + (parent.objColl.length + 1) };\n        parent.notify('shape', { prop: 'getNewShapeId', onPropertyChange: false, value: { obj: shapeIDObj } });\n        duplicateObj.currIndex = shapeIDObj['id'];\n        parent.activeObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, duplicateObj, {}, true);\n        if (parent.activeObj.shape === 'image') {\n            var activePoint = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, duplicateObj.activePoint, {}, true);\n            var dimObj = { width: 0, height: 0 };\n            parent.notify('transform', { prop: 'calcMaxDimension', onPropertyChange: false,\n                value: { width: parent.activeObj.imageElement.width, height: parent.activeObj.imageElement.height,\n                    obj: dimObj, isImgShape: null } });\n            parent.activeObj.activePoint.width = dimObj['width'];\n            parent.activeObj.activePoint.height = dimObj['height'];\n            if (parent.activeObj.isHorImageFlip && parent.activeObj.isVerImageFlip) {\n                parent.activeObj.isHorImageFlip = parent.activeObj.isVerImageFlip = false;\n                parent.notify('draw', { prop: 'downScaleImgCanvas', onPropertyChange: false,\n                    value: { ctx: duplicateObj.imageCanvas.getContext('2d'), isImgAnnotation: true, isHFlip: true, isVFlip: true } });\n                parent.activeObj.isHorImageFlip = parent.activeObj.isVerImageFlip = true;\n            }\n            else if (parent.activeObj.isHorImageFlip) {\n                parent.activeObj.isHorImageFlip = false;\n                parent.notify('draw', { prop: 'downScaleImgCanvas', onPropertyChange: false,\n                    value: { ctx: duplicateObj.imageCanvas.getContext('2d'), isImgAnnotation: true, isHFlip: true, isVFlip: null } });\n                parent.activeObj.isHorImageFlip = true;\n            }\n            else if (parent.activeObj.isVerImageFlip) {\n                parent.activeObj.isVerImageFlip = false;\n                parent.notify('draw', { prop: 'downScaleImgCanvas', onPropertyChange: false,\n                    value: { ctx: duplicateObj.imageCanvas.getContext('2d'), isImgAnnotation: true, isHFlip: null, isVFlip: true } });\n                parent.activeObj.isVerImageFlip = true;\n            }\n            else {\n                parent.notify('draw', { prop: 'downScaleImgCanvas', onPropertyChange: false,\n                    value: { ctx: duplicateObj.imageCanvas.getContext('2d'), isImgAnnotation: true, isHFlip: null, isVFlip: null } });\n            }\n            parent.activeObj.activePoint = activePoint;\n        }\n        if (parent.activeObj.shape === 'line' || parent.activeObj.shape === 'arrow') {\n            parent.notify('shape', { prop: 'setPointCollForLineArrow', onPropertyChange: false,\n                value: { obj: parent.activeObj } });\n        }\n        parent.notify('draw', { prop: 'drawObject', onPropertyChange: false, value: { canvas: 'duplicate', obj: parent.activeObj,\n                isCropRatio: null, points: null, isPreventDrag: true } });\n        parent.notify('undo-redo', { prop: 'updateUrObj', onPropertyChange: false, value: { objColl: objColl } });\n        parent.notify('shape', { prop: 'applyActObj', onPropertyChange: false, value: { isMouseDown: true } });\n        parent.noPushUndo = false;\n        parent.notify('undo-redo', { prop: 'updateCurrUrc', value: { type: 'ok' } });\n        parent.noPushUndo = true;\n        parent.notify('selection', { prop: 'redrawShape', onPropertyChange: false,\n            value: { obj: parent.objColl[parent.objColl.length - 1] } });\n        var id = parent.element.id;\n        var toolbarId = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? '#' + id + '_bottomToolbar ' + '#' + id : '#' + id;\n        var object = { freehandDrawSelectedId: null };\n        parent.notify('freehand-draw', { prop: 'getFreehandDrawSelectedId', onPropertyChange: false, value: { obj: object } });\n        this.enableDisableCloneBtn(toolbarId, object);\n        this.renderQAT();\n        if (parent.activeObj.shape && parent.activeObj.shape === 'redact') {\n            this.redactSlider(parent.activeObj.redactType);\n        }\n    };\n    ToolbarModule.prototype.defToolbarClicked = function (args) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var isContextualToolbar = false;\n        var isFilterFinetune = false;\n        if (!this.isFrameToolbar && parent.element.querySelector('.e-contextual-toolbar-wrapper')) {\n            if (!parent.element.querySelector('.e-contextual-toolbar-wrapper').classList.contains('e-hide')) {\n                isContextualToolbar = isFilterFinetune = true;\n            }\n            var straightenObj = { bool: parent.isStraightening };\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !straightenObj['bool'])) {\n                parent.element.querySelector('.e-contextual-toolbar-wrapper').classList.add('e-hide');\n            }\n        }\n        if (args.item) {\n            var type = args.item.id.replace(id + '_', '').toLowerCase();\n            if (type === 'duplicate' || type === 'remove' || type === 'edittext' ||\n                type === 'hflip' || type === 'vflip' || type === 'rotleft' || type === 'rotright') {\n                this.quickAccessToolbarClicked(args, true);\n                parent.trigger('toolbarItemClicked', args);\n            }\n            else {\n                var isDisabledFilter = false;\n                var isDisabledAdjustment = false;\n                var adjustment = document.querySelector('#' + id + '_adjustment');\n                if (adjustment && adjustment.classList.contains('e-disabled')) {\n                    isDisabledAdjustment = true;\n                }\n                var filter = document.querySelector('#' + id + '_filter');\n                if (filter && filter.classList.contains('e-disabled')) {\n                    isDisabledFilter = true;\n                }\n                this.enableDisableTbrBtn();\n                this.performDefTbrClick(type, isContextualToolbar, isDisabledAdjustment, isDisabledFilter, isFilterFinetune);\n                parent.trigger('toolbarItemClicked', args);\n                if (parent.isStraightening) {\n                    parent.notify('transform', { prop: 'disableZoomOutBtn', value: { isZoomOut: true } });\n                }\n                var validTypes = ['undo', 'redo', 'cancel', 'aspectratio', 'nonaspectratio',\n                    'save', 'duplicate', 'filter', 'frame', 'none', 'mat', 'bevel', 'line', 'inset', 'hook', 'resize',\n                    'remove'];\n                if (validTypes.indexOf(type) !== -1) {\n                    parent.notify('draw', { prop: 'redrawDownScale' });\n                }\n            }\n        }\n    };\n    ToolbarModule.prototype.performDefTbrClick = function (type, isContextualToolbar, isDisabledAdjustment, isDisabledFilter, isFilterFinetune) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var zoomIn = parent.element.querySelector('#' + id + '_zoomIn');\n        var aspectRatioHeight = parent.element.querySelector('#' + id + '_resizeHeight');\n        var aspectRatioWidth = parent.element.querySelector('#' + id + '_resizeWidth');\n        var isCropSelection = false;\n        var panBtn;\n        var splitWords;\n        var actionType;\n        var actionArgs;\n        var isRedactClick = false;\n        if (parent.activeObj.shape !== undefined) {\n            splitWords = parent.activeObj.shape.split('-');\n        }\n        if (splitWords === undefined && parent.currObjType.isCustomCrop) {\n            isCropSelection = true;\n        }\n        else if (splitWords !== undefined && splitWords[0] === 'crop') {\n            isCropSelection = true;\n        }\n        if (!parent.disabled) {\n            switch (type) {\n                case 'pan':\n                    parent.currObjType.isCustomCrop = parent.currObjType.isFiltered = false;\n                    parent.currObjType.isRedact = false;\n                    if (parent.currObjType.isUndoAction) {\n                        parent.notify('undo-redo', { prop: 'refreshUrc', value: { bool: null } });\n                    }\n                    if (isCropSelection) {\n                        parent.currObjType.isCustomCrop = false;\n                        parent.notify('shape', { prop: 'refreshActiveObj', onPropertyChange: false });\n                        this.upperContext.clearRect(0, 0, parent.upperCanvas.width, parent.upperCanvas.height);\n                        this.refreshToolbar('main');\n                    }\n                    if (parent.togglePan) {\n                        this.cancelPan();\n                        parent.notify('transform', { prop: 'setDisablePan', onPropertyChange: false, value: { bool: true } });\n                        if (this.currentToolbar === 'pen') {\n                            parent.freeHandDraw(true);\n                        }\n                    }\n                    else {\n                        panBtn = parent.element.querySelector('.e-img-pan .e-btn');\n                        if (panBtn) {\n                            panBtn.classList.add('e-selected-btn');\n                        }\n                        parent.pan(true);\n                        parent.notify('transform', { prop: 'setDisablePan', onPropertyChange: false, value: { bool: false } });\n                    }\n                    if (zoomIn && parent.zoomSettings.zoomFactor >= parent.zoomSettings.maxZoomFactor) {\n                        zoomIn.classList.add('e-disabled');\n                        zoomIn.parentElement.classList.add('e-overlay');\n                    }\n                    else if (zoomIn) {\n                        zoomIn.classList.remove('e-disabled');\n                        zoomIn.parentElement.classList.remove('e-overlay');\n                    }\n                    this.refreshToolbar('main');\n                    break;\n                case 'cancel':\n                    if (parent.currObjType.isRedact) {\n                        parent.currObjType.isRedact = false;\n                    }\n                    if (this.isFrameToolbar && parent.element.querySelector('.e-contextual-toolbar-wrapper') && !parent.element.querySelector('.e-contextual-toolbar-wrapper').classList.contains('e-hide')) {\n                        parent.element.querySelector('.e-contextual-toolbar-wrapper').classList.add('e-hide');\n                    }\n                    parent.notify('draw', { prop: 'performCancel', value: { isContextualToolbar: isContextualToolbar, isFinalCancel: true } });\n                    break;\n                case 'ok':\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.isFrameToolbar && parent.element.querySelector('.e-contextual-toolbar-wrapper') && !parent.element.querySelector('.e-contextual-toolbar-wrapper').classList.contains('e-hide')) {\n                        parent.element.querySelector('.e-contextual-toolbar-wrapper').classList.add('e-hide');\n                    }\n                    parent.okBtn(null, true);\n                    parent.drawingShape = null;\n                    this.refreshDropDownBtn(false);\n                    this.currentToolbar = 'main';\n                    parent.isStraightening = false;\n                    parent.notify('draw', { prop: 'resetTempObjColl' });\n                    parent.notify('draw', { prop: 'resetTempPointColl' });\n                    break;\n                case 'crop':\n                    parent.notify('transform', { prop: 'disableZoomOutBtn', value: { isZoomOut: true } });\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        this.updateContextualToolbar('color', 'straighten');\n                    }\n                    break;\n                case 'reset':\n                    parent.reset();\n                    this.imageHeight = null;\n                    this.imageWidth = null;\n                    parent.aspectHeight = null;\n                    parent.aspectWidth = null;\n                    this.isAspectRatio = true;\n                    this.currentToolbar = 'main';\n                    break;\n                case 'undo':\n                    parent.noPushUndo = false;\n                    if (parent.togglePen || parent.drawingShape) {\n                        parent.okBtn();\n                        parent.drawingShape = null;\n                    }\n                    parent.notify('undo-redo', { prop: 'call-undo' });\n                    break;\n                case 'redo':\n                    parent.noPushUndo = false;\n                    if (parent.togglePen || parent.drawingShape) {\n                        parent.okBtn();\n                        parent.drawingShape = null;\n                    }\n                    parent.notify('undo-redo', { prop: 'call-redo' });\n                    break;\n                case 'aspectratio':\n                    if (!parent.isCircleCrop && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.currSelectionPoint)) ||\n                        (parent.currSelectionPoint && parent.currSelectionPoint.shape !== 'crop-circle')) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioWidth, 'numerictextbox').value) {\n                            parent.aspectWidth = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioWidth, 'numerictextbox').value;\n                            parent.aspectHeight = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioHeight, 'numerictextbox').value;\n                            parent.notify('transform', { prop: 'resize', value: { width: parent.aspectWidth, height: null, isAspectRatio: true } });\n                        }\n                        else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioHeight, 'numerictextbox').value) {\n                            parent.aspectWidth = parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioWidth, 'numerictextbox').placeholder);\n                            parent.aspectHeight = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioHeight, 'numerictextbox').value;\n                            parent.notify('transform', { prop: 'resize', value: { width: parent.aspectWidth, height: parent.aspectHeight, isAspectRatio: true } });\n                        }\n                        parent.resizeSrc = { startX: parent.img.srcLeft, startY: parent.img.srcTop, width: parent.img.srcWidth,\n                            height: parent.img.srcHeight };\n                        this.refreshToolbar('resize');\n                    }\n                    break;\n                case 'nonaspectratio':\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioWidth, 'numerictextbox').value ||\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioHeight, 'numerictextbox').value) {\n                        parent.aspectWidth = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioWidth, 'numerictextbox').value ?\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioWidth, 'numerictextbox').value :\n                            parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioWidth, 'numerictextbox').placeholder);\n                        parent.aspectHeight = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioHeight, 'numerictextbox').value ?\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioHeight, 'numerictextbox').value :\n                            parseFloat((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(aspectRatioHeight, 'numerictextbox').placeholder);\n                        parent.notify('transform', { prop: 'resize', value: { width: parent.aspectWidth, height: parent.aspectHeight, isAspectRatio: false } });\n                    }\n                    parent.resizeSrc = { startX: parent.img.srcLeft, startY: parent.img.srcTop, width: parent.img.srcWidth,\n                        height: parent.img.srcHeight };\n                    this.refreshToolbar('resize');\n                    break;\n                case 'resize':\n                    if (parent.currObjType.isFiltered || parent.currObjType.isRedact) {\n                        parent.okBtn();\n                    }\n                    this.resizeClick();\n                    break;\n                case 'adjustment':\n                    if (!isDisabledAdjustment) {\n                        if (parent.currObjType.isFiltered || parent.currObjType.isRedact) {\n                            parent.okBtn();\n                        }\n                        this.refreshToolbar('adjustment');\n                        parent.setTempFilterProperties();\n                        parent.notify('draw', { prop: 'updateFinetune' });\n                        parent.notify('filter', { prop: 'setTempAdjVal' });\n                        this.openSlider('brightness');\n                    }\n                    break;\n                case 'brightness':\n                case 'contrast':\n                case 'hue':\n                case 'saturation':\n                case 'opacity':\n                case 'blur':\n                case 'exposure':\n                    this.openSlider(type);\n                    break;\n                case 'filter':\n                    if (!isDisabledFilter) {\n                        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.showSpinner)(parent.element);\n                        this.refreshToolbar('filter');\n                        parent.setTempFilterProperties();\n                        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.hideSpinner)(parent.element);\n                    }\n                    break;\n                case 'default':\n                case 'chrome':\n                case 'cold':\n                case 'warm':\n                case 'grayscale':\n                case 'blackandwhite':\n                case 'sepia':\n                case 'invert':\n                case 'sharpen':\n                    parent.currObjType.isFiltered = true;\n                    parent.notify('filter', { prop: 'applyImageFilter', value: { option: type } });\n                    break;\n                case 'upload':\n                    if (isFilterFinetune) {\n                        parent.element.querySelector('.e-contextual-toolbar-wrapper').classList.remove('e-hide');\n                    }\n                    break;\n                case 'bold':\n                    parent.notify('selection', { prop: 'setInitialTextEdit', value: { bool: false } });\n                    if (parent.activeObj.textSettings.bold && parent.activeObj.textSettings.italic) {\n                        parent.notify('shape', { prop: 'applyFontStyle', onPropertyChange: false,\n                            value: { item: 'italic' } });\n                    }\n                    else if (parent.activeObj.textSettings.bold && !parent.activeObj.textSettings.italic) {\n                        parent.notify('shape', { prop: 'applyFontStyle', onPropertyChange: false,\n                            value: { item: 'default' } });\n                    }\n                    else if (!parent.activeObj.textSettings.bold && parent.activeObj.textSettings.italic) {\n                        parent.notify('shape', { prop: 'applyFontStyle', onPropertyChange: false,\n                            value: { item: 'bolditalic' } });\n                    }\n                    else if (!parent.activeObj.textSettings.bold && !parent.activeObj.textSettings.italic) {\n                        parent.notify('shape', { prop: 'applyFontStyle', onPropertyChange: false,\n                            value: { item: 'bold' } });\n                    }\n                    if (parent.element.querySelector('#' + id + '_bold').classList.contains('e-selected-btn')) {\n                        parent.element.querySelector('#' + id + '_bold').classList.remove('e-selected-btn');\n                    }\n                    else {\n                        parent.element.querySelector('#' + id + '_bold').classList.add('e-selected-btn');\n                    }\n                    if (parent.activeObj.activePoint.width !== 0 || parent.activeObj.activePoint.height !== 0) {\n                        parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                    }\n                    break;\n                case 'italic':\n                    parent.notify('selection', { prop: 'setInitialTextEdit', value: { bool: false } });\n                    if (parent.activeObj.textSettings.bold && parent.activeObj.textSettings.italic) {\n                        parent.notify('shape', { prop: 'applyFontStyle', onPropertyChange: false,\n                            value: { item: 'bold' } });\n                    }\n                    else if (parent.activeObj.textSettings.bold && !parent.activeObj.textSettings.italic) {\n                        parent.notify('shape', { prop: 'applyFontStyle', onPropertyChange: false,\n                            value: { item: 'bolditalic' } });\n                    }\n                    else if (!parent.activeObj.textSettings.bold && parent.activeObj.textSettings.italic) {\n                        parent.notify('shape', { prop: 'applyFontStyle', onPropertyChange: false,\n                            value: { item: 'default' } });\n                    }\n                    else if (!parent.activeObj.textSettings.bold && !parent.activeObj.textSettings.italic) {\n                        parent.notify('shape', { prop: 'applyFontStyle', onPropertyChange: false,\n                            value: { item: 'italic' } });\n                    }\n                    if (parent.element.querySelector('#' + id + '_italic').classList.contains('e-selected-btn')) {\n                        parent.element.querySelector('#' + id + '_italic').classList.remove('e-selected-btn');\n                    }\n                    else {\n                        parent.element.querySelector('#' + id + '_italic').classList.add('e-selected-btn');\n                    }\n                    if (parent.activeObj.activePoint.width !== 0 || parent.activeObj.activePoint.height !== 0) {\n                        parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                    }\n                    break;\n                case 'croptransform':\n                    this.performCropTransformClick();\n                    break;\n                case 'rotateleft':\n                case 'rotateright':\n                case 'horizontalflip':\n                case 'verticalflip':\n                    parent.transformSelect(type);\n                    this.updateRedactObj();\n                    if (type === 'rotateleft' || type === 'rotateright') {\n                        parent.notify('draw', { prop: 'resetStraightenDestPoints' });\n                        parent.notify('draw', { prop: 'setDestForStraighten' });\n                    }\n                    parent.notify('transform', { prop: 'disableZoomOutBtn', value: { isZoomOut: true } });\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        this.updateContextualToolbar('color', 'straighten');\n                    }\n                    actionType = type === 'rotateleft' || type === 'rotateright' ?\n                        'rotate' : 'flip';\n                    actionArgs = { action: actionType, actionEventArgs: parent.editCompleteArgs };\n                    parent.triggerEditCompleteEvent(actionArgs);\n                    break;\n                case 'save':\n                    parent.noPushUndo = false;\n                    parent.okBtn();\n                    parent.drawingShape = null;\n                    this.saveDialogPopup();\n                    break;\n                case 'transparency':\n                    this.updateContextualToolbar('transparency', 'transparency');\n                    break;\n                case 'frame':\n                    this.frameToolbarClick();\n                    break;\n                case 'none':\n                case 'mat':\n                case 'bevel':\n                case 'line':\n                case 'inset':\n                case 'hook':\n                    this.unselectFrameBtn();\n                    if (parent.element.querySelector('#' + id + '_' + type)) {\n                        parent.element.querySelector('#' + id + '_' + type).classList.add('e-selected-btn');\n                    }\n                    parent.frameObj.type = type;\n                    parent.frameObj.size = 20;\n                    parent.frameObj.inset = 20;\n                    parent.frameObj.radius = 0;\n                    parent.frameObj.amount = 1;\n                    if (type === 'inset') {\n                        parent.frameObj.offset = 60;\n                    }\n                    else {\n                        parent.frameObj.offset = 20;\n                    }\n                    this.refreshToolbar('frame');\n                    parent.notify('draw', { prop: 'render-image', value: { isMouseWheel: null, isPreventClearRect: null, isFrame: true } });\n                    parent.isFrameBtnClick = true;\n                    parent.curFrameObjEvent = { previousFrameSetting: parent.tempFrameObj, currentFrameSetting: parent.frameObj };\n                    parent.notify('draw', { prop: 'triggerFrameChange', value: { prevFrameSettings: parent.tempFrameObj, obj: { frameChangeEventArgs: null } } });\n                    break;\n                case 'redact':\n                    parent.currObjType.isRedact = isRedactClick = true;\n                    parent.drawingShape = 'redact';\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.activeObj.redactBlur)) {\n                        parent.activeObj.redactBlur = 20;\n                    }\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.activeObj.redactPixelate)) {\n                        parent.activeObj.redactPixelate = 20;\n                    }\n                    parent.notify('selection', { prop: 'annotate', value: { shape: 'redact' } });\n                    this.refreshToolbar('redact');\n                    this.redactSlider(parent.activeObj.redactType);\n                    break;\n                case 'pixelate':\n                    parent.currObjType.isRedact = isRedactClick = true;\n                    parent.drawingShape = 'redact';\n                    parent.notify('selection', { prop: 'annotate', value: { shape: 'redact' } });\n                    if (parent.activeObj.redactType === 'blur') {\n                        this.updateRedactType('pixelate');\n                    }\n                    parent.notify('shape', { prop: 'setRedactType', onPropertyChange: false,\n                        value: { redactType: 'pixelate' } });\n                    if (parent.activeObj.redactType === 'pixelate') {\n                        var pixelateBtn = parent.element.querySelector('#' + id + '_' + 'pixelate');\n                        var redactBlurBtn = parent.element.querySelector('#' + id + '_' + 'redactBlur');\n                        if (pixelateBtn) {\n                            pixelateBtn.classList.add('e-selected-btn');\n                        }\n                        if (redactBlurBtn && redactBlurBtn.classList.contains('e-selected-btn')) {\n                            redactBlurBtn.classList.remove('e-selected-btn');\n                        }\n                    }\n                    else {\n                        var redactBlurBtn = parent.element.querySelector('#' + id + '_' + 'redactBlur');\n                        if (redactBlurBtn) {\n                            redactBlurBtn.classList.add('e-selected-btn');\n                        }\n                    }\n                    this.redactSlider(parent.activeObj.redactType);\n                    if (parent.activeObj.activePoint.width !== 0 || parent.activeObj.activePoint.height !== 0) {\n                        parent.notify('undo-redo', { prop: 'updateUndoRedoColl', onPropertyChange: false,\n                            value: { operation: 'shapeTransform', previousObj: null, previousObjColl: null,\n                                previousPointColl: null, previousSelPointColl: null,\n                                previousCropObj: null, previousText: null,\n                                currentText: null, previousFilter: null, isCircleCrop: null } });\n                    }\n                    break;\n                case 'redactblur':\n                    parent.currObjType.isRedact = isRedactClick = true;\n                    parent.drawingShape = 'redact';\n                    parent.notify('selection', { prop: 'annotate', value: { shape: 'redact' } });\n                    parent.notify('shape', { prop: 'setRedactType', onPropertyChange: false,\n                        value: { redactType: 'blur' } });\n                    if (parent.activeObj.redactType === 'pixelate') {\n                        this.updateRedactType('blur');\n                    }\n                    parent.notify('shape', { prop: 'setRedactType', onPropertyChange: false, value: { redactType: 'blur' } });\n                    if (parent.activeObj.redactType === 'blur') {\n                        var redactBlurBtn = parent.element.querySelector('#' + id + '_' + 'redactBlur');\n                        var pixelateBtn = parent.element.querySelector('#' + id + '_' + 'pixelate');\n                        if (redactBlurBtn) {\n                            redactBlurBtn.classList.add('e-selected-btn');\n                        }\n                        if (pixelateBtn && pixelateBtn.classList.contains('e-selected-btn')) {\n                            pixelateBtn.classList.remove('e-selected-btn');\n                        }\n                    }\n                    else {\n                        var pixelateBtn = parent.element.querySelector('#' + id + '_' + 'pixelate');\n                        if (pixelateBtn) {\n                            pixelateBtn.classList.add('e-selected-btn');\n                        }\n                    }\n                    this.redactSlider(parent.activeObj.redactType);\n                    if (parent.activeObj.activePoint.width !== 0 || parent.activeObj.activePoint.height !== 0) {\n                        parent.notify('undo-redo', { prop: 'updateUndoRedoColl', onPropertyChange: false,\n                            value: { operation: 'shapeTransform', previousObj: null, previousObjColl: null,\n                                previousPointColl: null, previousSelPointColl: null,\n                                previousCropObj: null, previousText: null,\n                                currentText: null, previousFilter: null, isCircleCrop: null } });\n                    }\n                    break;\n            }\n            if (isRedactClick) {\n                parent.notify('draw', { prop: 'updateTempObjColl' });\n                parent.notify('draw', { prop: 'updateTempPointColl' });\n            }\n        }\n    };\n    ToolbarModule.prototype.updateRedactType = function (value) {\n        var parent = this.parent;\n        parent.activeObj.redactType = value;\n        parent.notify('shape', { prop: 'setRedactType', value: { type: value } });\n        this.parent.objColl.push(parent.activeObj);\n        parent.notify('selection', { prop: 'redrawShape', value: { obj: parent.objColl[parent.objColl.length - 1] } });\n    };\n    ToolbarModule.prototype.frameToolbarClick = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var frame = document.querySelector('#' + id + '_frame');\n        var zoom;\n        var frameObj;\n        var tempFrameObj;\n        parent.notify('draw', { prop: 'updateCropSelection', onPropertyChange: false });\n        if (parent.currObjType.isFiltered || parent.currObjType.isRedact) {\n            parent.okBtn();\n        }\n        if (frame && !frame.classList.contains('e-overlay')) {\n            zoom = parent.transform.zoomFactor;\n            parent.frameDestPoints = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.img, {}, true);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.cxtTbarHeight)) {\n                frameObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.frameObj, {}, true);\n                tempFrameObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.tempFrameObj, {}, true);\n                this.callFrameToolbar();\n                parent.frameObj.type = 'mat';\n                this.callFrameToolbar();\n                parent.cxtTbarHeight = parent.element.querySelector('#' + id + '_customizeWrapper').scrollHeight;\n                parent.frameObj = frameObj;\n                parent.tempFrameObj = tempFrameObj;\n            }\n            this.zoomToFrameRange();\n            parent.tempFrameZoomLevel = zoom;\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                parent.img.destTop -= (parent.cxtTbarHeight / 2);\n            }\n            else {\n                parent.img.destTop += (parent.cxtTbarHeight / 2);\n            }\n            this.callFrameToolbar();\n            parent.notify('draw', { prop: 'triggerFrameChange', value: { prevFrameSettings: parent.frameObj, obj: { frameChangeEventArgs: null } } });\n        }\n    };\n    ToolbarModule.prototype.zoomToFrameRange = function () {\n        var parent = this.parent;\n        this.isFrameToolbar = false;\n        parent.notify('transform', { prop: 'resetZoom', onPropertyChange: false });\n        var isSmaller = true;\n        while (isSmaller) {\n            if (this.toolbarHeight + parent.img.destTop >= (this.toolbarHeight + parent.cxtTbarHeight)) {\n                isSmaller = false;\n                break;\n            }\n            parent.notify('transform', { prop: 'zoomAction', onPropertyChange: false,\n                value: { zoomFactor: -.1, zoomPoint: null, isResize: true } });\n        }\n        this.isFrameToolbar = true;\n    };\n    ToolbarModule.prototype.resizeClick = function () {\n        var parent = this.parent;\n        parent.notify('draw', { prop: 'updateCropSelection', onPropertyChange: false });\n        parent.upperCanvas.style.cursor = 'default';\n        parent.notify('transform', { prop: 'updateResize', value: { bool: false } });\n        if (this.isAspectRatio) {\n            this.isAspectRatio = false;\n        }\n        else {\n            this.isAspectRatio = true;\n        }\n        parent.isResize = true;\n        this.refreshToolbar('resize');\n    };\n    ToolbarModule.prototype.callFrameToolbar = function () {\n        var parent = this.parent;\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(parent.tempFrameObj, parent.frameObj);\n        var undoRedoObj = { appliedUndoRedoColl: [] };\n        parent.notify('undo-redo', { prop: 'getAppliedUndoRedoColl', value: { obj: undoRedoObj } });\n        if (undoRedoObj['appliedUndoRedoColl']['length'] === 0) {\n            var object = { currObj: {} };\n            parent.notify('filter', { prop: 'getCurrentObj', onPropertyChange: false, value: { object: object } });\n            parent.notify('undo-redo', { prop: 'updateUndoRedoColl', onPropertyChange: false, value: {\n                    operation: 'frame', previousObj: object['currObj'], previousObjColl: object['currObj']['objColl'],\n                    previousPointColl: object['currObj']['pointColl'], previousSelPointColl: object['currObj']['selPointColl'],\n                    previousCropObj: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.cropObj, {}, true), previousText: null, currentText: null,\n                    previousFilter: null, isCircleCrop: null\n                } });\n        }\n        this.refreshToolbar('frame');\n    };\n    ToolbarModule.prototype.contextualToolbarClicked = function (args) {\n        var parent = this.parent;\n        var selEle = parent.element.querySelector('.e-contextual-toolbar-wrapper .e-toolbar-item.e-selected');\n        if (selEle) {\n            selEle.classList.remove('e-selected');\n        }\n        var type = args.item.id.replace(parent.element.id, '').split('_')[1];\n        var imageFiltering = { filter: parent.toPascalCase(type), cancel: false };\n        parent.trigger('imageFiltering', imageFiltering);\n        parent.editCompleteArgs = imageFiltering;\n        if (imageFiltering.cancel) {\n            return;\n        }\n        document.getElementById(args.item.id + 'Canvas').parentElement.parentElement.classList.add('e-selected');\n        parent.currObjType.isFiltered = true;\n        parent.notify('filter', { prop: 'applyImageFilter', value: { option: type.toLowerCase() } });\n        parent.notify('draw', { prop: 'redrawDownScale' });\n        parent.currentFilter = args.item.id;\n        this.enableDisableTbrBtn();\n        parent.isFilterCanvasClick = true;\n        parent.curFilterObjEvent = imageFiltering;\n    };\n    ToolbarModule.prototype.refreshShapeDrawing = function () {\n        var parent = this.parent;\n        var object = { shape: '' };\n        parent.notify('selection', { prop: 'getCurrentDrawingShape', onPropertyChange: false, value: { obj: object } });\n        if (object['shape'] !== '') {\n            parent.notify('selection', { prop: 'setCurrentDrawingShape', onPropertyChange: false, value: { value: '' } });\n            parent.notify('shape', { prop: 'refreshActiveObj', onPropertyChange: false });\n            this.refreshToolbar('main', false);\n        }\n    };\n    ToolbarModule.prototype.zoomInBtnClickHandler = function (e) {\n        if (e) {\n            var parent_1 = this.parent;\n            if ((parent_1.zoomSettings.zoomTrigger & _index__WEBPACK_IMPORTED_MODULE_5__.ZoomTrigger.Toolbar) === _index__WEBPACK_IMPORTED_MODULE_5__.ZoomTrigger.Toolbar) {\n                parent_1.noPushUndo = false;\n                if (parent_1.currObjType.isFiltered) {\n                    parent_1.okBtn();\n                }\n                var drawingShape = parent_1.drawingShape;\n                if (parent_1.drawingShape) {\n                    var id = parent_1.activeObj.currIndex;\n                    parent_1.noPushUndo = true;\n                    parent_1.okBtn();\n                    parent_1.noPushUndo = false;\n                    parent_1.drawingShape = null;\n                    if (id) {\n                        parent_1.selectShape(id);\n                    }\n                }\n                this.refreshShapeDrawing();\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && e.type === 'touchstart') {\n                    if (!e.returnValue) {\n                        return;\n                    }\n                    e.preventDefault();\n                }\n                var zoomIn = document.querySelector('#' + parent_1.element.id + '_zoomIn');\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.trigger(zoomIn, 'click');\n                var obj = { bool: false };\n                parent_1.notify('selection', { prop: 'getFreehandDrawEditing', onPropertyChange: false, value: { obj: obj } });\n                if (obj['bool']) {\n                    parent_1.notify('freehand-draw', { prop: 'applyFhd', onPropertyChange: false });\n                    this.destroyQuickAccessToolbar();\n                }\n                parent_1.isZoomBtnClick = true;\n                this.applyPreviewFilter();\n                parent_1.currObjType.isFiltered = false;\n                parent_1.currObjType.isRedact = false;\n                if (parent_1.togglePen) {\n                    parent_1.currObjType.isZoomed = true;\n                    parent_1.freeHandDraw(false);\n                    parent_1.notify('undo-redo', { prop: 'updateCurrUrc', value: { type: 'ok' } });\n                }\n                parent_1.notify('draw', { prop: 'resetCurrentSelectionPoint' });\n                parent_1.drawingShape = drawingShape;\n                parent_1.notify('transform', { prop: 'zoomAction', onPropertyChange: false,\n                    value: { zoomFactor: .1, zoomPoint: null, isResize: null } });\n                parent_1.notify('draw', { prop: 'redrawDownScale' });\n                if (parent_1.isCropTab || parent_1.activeObj.shape) {\n                    parent_1.notify('draw', { prop: 'setStraightenActObj', value: { activeObj: null } });\n                    parent_1.notify('freehand-draw', { prop: 'resetStraightenPoint' });\n                }\n                if (parent_1.isStraightening) {\n                    parent_1.notify('draw', { prop: 'resetStraightenDestPoints' });\n                    parent_1.notify('draw', { prop: 'setDestForStraighten' });\n                }\n                var actionArgs = { action: 'zoom-in',\n                    actionEventArgs: parent_1.editCompleteArgs };\n                parent_1.triggerEditCompleteEvent(actionArgs);\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    zoomIn.focus();\n                }\n            }\n        }\n    };\n    ToolbarModule.prototype.zoomOutBtnClickHandler = function (e) {\n        if (e) {\n            var parent_2 = this.parent;\n            if ((parent_2.zoomSettings.zoomTrigger & _index__WEBPACK_IMPORTED_MODULE_5__.ZoomTrigger.Toolbar) === _index__WEBPACK_IMPORTED_MODULE_5__.ZoomTrigger.Toolbar) {\n                parent_2.noPushUndo = false;\n                if (parent_2.currObjType.isFiltered) {\n                    parent_2.okBtn();\n                }\n                var drawingShape = parent_2.drawingShape;\n                if (parent_2.drawingShape) {\n                    var id = parent_2.activeObj.currIndex;\n                    parent_2.noPushUndo = true;\n                    parent_2.okBtn();\n                    parent_2.noPushUndo = false;\n                    parent_2.drawingShape = null;\n                    if (id) {\n                        parent_2.selectShape(id);\n                    }\n                }\n                this.refreshShapeDrawing();\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && e.type === 'touchstart') {\n                    if (!e.returnValue) {\n                        return;\n                    }\n                    e.preventDefault();\n                }\n                var zoomOut = document.querySelector('#' + parent_2.element.id + '_zoomOut');\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.trigger(zoomOut, 'click');\n                var obj = { bool: false };\n                parent_2.notify('selection', { prop: 'getFreehandDrawEditing', onPropertyChange: false, value: { obj: obj } });\n                if (obj['bool']) {\n                    parent_2.notify('freehand-draw', { prop: 'applyFhd', onPropertyChange: false });\n                    this.destroyQuickAccessToolbar();\n                }\n                parent_2.isZoomBtnClick = true;\n                this.applyPreviewFilter();\n                parent_2.currObjType.isFiltered = false;\n                parent_2.currObjType.isRedact = false;\n                if (parent_2.togglePen) {\n                    parent_2.currObjType.isZoomed = true;\n                    parent_2.freeHandDraw(false);\n                    parent_2.notify('undo-redo', { prop: 'updateCurrUrc', value: { type: 'ok' } });\n                }\n                parent_2.notify('draw', { prop: 'resetCurrentSelectionPoint' });\n                parent_2.drawingShape = drawingShape;\n                parent_2.notify('transform', { prop: 'zoomAction', onPropertyChange: false,\n                    value: { zoomFactor: -.1, zoomPoint: null, isResize: null } });\n                parent_2.notify('draw', { prop: 'redrawDownScale' });\n                if (parent_2.isCropTab || parent_2.activeObj.shape) {\n                    parent_2.notify('draw', { prop: 'setStraightenActObj', value: { activeObj: null } });\n                    parent_2.notify('freehand-draw', { prop: 'resetStraightenPoint' });\n                }\n                if (parent_2.isStraightening) {\n                    parent_2.notify('draw', { prop: 'resetStraightenDestPoints' });\n                    parent_2.notify('draw', { prop: 'setDestForStraighten' });\n                }\n                var actionArgs = { action: 'zoom-out',\n                    actionEventArgs: parent_2.editCompleteArgs };\n                parent_2.triggerEditCompleteEvent(actionArgs);\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    zoomOut.focus();\n                }\n            }\n        }\n    };\n    ToolbarModule.prototype.zoomInBtnMouseDownHandler = function (e) {\n        e.preventDefault();\n        this.zoomBtnHold = setInterval(this.zoomInBtnClickHandler.bind(this), 250);\n    };\n    ToolbarModule.prototype.zoomOutBtnMouseDownHandler = function (e) {\n        e.preventDefault();\n        this.zoomBtnHold = setInterval(this.zoomOutBtnClickHandler.bind(this), 250);\n    };\n    ToolbarModule.prototype.zoomBtnMouseUpHandler = function () {\n        clearInterval(this.zoomBtnHold);\n        this.zoomBtnHold = 0;\n    };\n    ToolbarModule.prototype.closeContextualToolbar = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var isContextualToolbar = false;\n        var straightenObj = { bool: parent.isStraightening };\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !straightenObj['bool'])) {\n            if ((parent.element.querySelector('#' + id + '_contextualToolbar') &&\n                !parent.element.querySelector('#' + id + '_contextualToolbar').parentElement.classList.contains('e-hide')) ||\n                (parent.element.querySelector('#' + id + '_headWrapper')\n                    && !parent.element.querySelector('#' + id + '_headWrapper').parentElement.classList.contains('e-hide'))) {\n                parent.element.querySelector('.e-contextual-toolbar-wrapper').classList.add('e-hide');\n                parent.okBtn();\n                this.refreshMainToolbar();\n                isContextualToolbar = true;\n            }\n        }\n        return isContextualToolbar;\n    };\n    ToolbarModule.prototype.destroyQuickAccessToolbar = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var quickToolbar = document.getElementById(id + '_quickAccessToolbar');\n        if (quickToolbar && quickToolbar.classList.contains('e-control')) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(quickToolbar, 'toolbar').destroy();\n        }\n        var qatArea = document.getElementById(id + '_quickAccessToolbarArea');\n        if (qatArea) {\n            qatArea.style.display = 'none';\n        }\n    };\n    ToolbarModule.prototype.renderSlider = function (type, isSelect) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var canvasWrapper = document.querySelector('#' + id + '_contextualToolbarArea');\n        var hdrWrapper = document.querySelector('#' + id + '_headWrapper');\n        var labelWrapper = document.querySelector('#' + id + '_labelWrapper');\n        if (hdrWrapper) {\n            hdrWrapper.remove();\n            labelWrapper.remove();\n        }\n        hdrWrapper = canvasWrapper.appendChild(parent.createElement('div', {\n            id: id + '_headWrapper',\n            styles: 'position: relative'\n        }));\n        if (type === 'transparency') {\n            labelWrapper = hdrWrapper.appendChild(parent.createElement('label', {\n                id: id + '_labelWrapper',\n                className: 'e-ie-finetune-slider-label',\n                styles: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? 'position: absolute; top: 31%; left: calc(50% - 150px); font-size: 15px; text-transform: capitalize; font-weight: 400;'\n                    : 'position: absolute; top: 31%; left: calc(50% - 220px); font-size: 15px; text-transform: capitalize; font-weight: 400;'\n            }));\n        }\n        else {\n            labelWrapper = hdrWrapper.appendChild(parent.createElement('label', {\n                id: id + '_labelWrapper',\n                className: 'e-ie-finetune-slider-label',\n                styles: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? ('position: absolute; top: 31%; left: calc(50% - 160px); font-size: 15px; text-transform: capitalize; font-weight: 400;')\n                    : 'position: absolute; top: 25%; left: calc(50% - 226px); font-size: 15px; text-transform: capitalize; font-weight: 400;'\n            }));\n        }\n        labelWrapper.textContent = this.l10n.getConstant(parent.toPascalCase(type === 'transparency' ? 'opacity' : type));\n        var sliderWrapper = hdrWrapper.appendChild(parent.createElement('div', {\n            id: id + '_sliderWrapper',\n            className: 'e-ie-finetune-slider-wrap',\n            styles: 'position: absolute'\n        }));\n        var value = parent.getCurrAdjustmentValue(type);\n        if (isSelect && type === 'straighten' && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            value = parent.cropObj.straighten;\n        }\n        var min;\n        var max;\n        var slider;\n        if (type === 'brightness' || type === 'contrast' || type === 'saturation' || type === 'exposure') {\n            if (parent.finetuneSettings) {\n                if (type === 'brightness' && parent.finetuneSettings.brightness) {\n                    min = parent.finetuneSettings.brightness.min;\n                    max = parent.finetuneSettings.brightness.max;\n                }\n                else if (type === 'contrast' && parent.finetuneSettings.contrast) {\n                    min = parent.finetuneSettings.contrast.min;\n                    max = parent.finetuneSettings.contrast.max;\n                }\n                else if (type === 'saturation' && parent.finetuneSettings.saturation) {\n                    min = parent.finetuneSettings.saturation.min;\n                    max = parent.finetuneSettings.saturation.max;\n                }\n                else if (type === 'exposure' && parent.finetuneSettings.exposure) {\n                    min = parent.finetuneSettings.exposure.min;\n                    max = parent.finetuneSettings.exposure.max;\n                }\n                else {\n                    min = -100;\n                    max = 100;\n                }\n            }\n            else {\n                min = -100;\n                max = 100;\n            }\n            slider = this.createSlider(min, max, value, type);\n        }\n        else if (type === 'hue' || type === 'blur' || type === 'opacity') {\n            if (parent.finetuneSettings) {\n                if (type === 'hue' && parent.finetuneSettings.hue) {\n                    min = parent.finetuneSettings.hue.min;\n                    max = parent.finetuneSettings.hue.max;\n                }\n                else if (type === 'blur' && parent.finetuneSettings.blur) {\n                    min = parent.finetuneSettings.blur.min;\n                    max = parent.finetuneSettings.blur.max;\n                }\n                else if (type === 'opacity' && parent.finetuneSettings.opacity) {\n                    min = parent.finetuneSettings.opacity.min;\n                    max = parent.finetuneSettings.opacity.max;\n                }\n                else {\n                    min = 0;\n                    max = 100;\n                }\n            }\n            else {\n                min = 0;\n                max = 100;\n            }\n            slider = this.createSlider(min, max, value, type);\n        }\n        else if (type === 'transparency') {\n            min = 0;\n            max = 100;\n            slider = this.createSlider(min, max, value, type);\n        }\n        else if (type === 'straighten') {\n            min = -45;\n            max = 45;\n            slider = this.createSlider(min, max, value, type);\n        }\n        slider.appendTo('#' + id + '_sliderWrapper');\n        sliderWrapper.style.left = (parseFloat(canvasWrapper.style.width) - parseFloat(slider.width)) / 2 + 'px';\n        if (type === 'straighten' && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            var sLabelWrapper = hdrWrapper.appendChild(parent.createElement('label', {\n                id: id + '_sLabelWrapper',\n                className: 'e-ie-straighten-value-span e-ie-finetune-value-span',\n                styles: 'position: absolute; top: 31%; margin-left: 20px; font-size: 15px; text-transform: capitalize; font-weight: 400;'\n            }));\n            sLabelWrapper.innerHTML = parent.transform.straighten.toString() + '&#176';\n            sliderWrapper.parentElement.classList.add('e-straighten-slider');\n        }\n        if (type !== 'straighten') {\n            hdrWrapper.appendChild(parent.createElement('label', {\n                id: id + '_finetuneSpan',\n                className: 'e-ie-finetune-value-span',\n                styles: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? ('position: absolute; top: 25%; margin-left: 20px; font-size: 15px; text-transform: capitalize; font-weight: 400;') :\n                    'position: absolute; top: 25%; left: calc(50% + 190px); font-size: 15px; text-transform: capitalize; font-weight: 400;'\n            }));\n            sliderWrapper.parentElement.classList.add('e-finetune-slider');\n            if (type === 'transparency' && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                sliderWrapper.parentElement.classList.add('e-ie-device-transparency-slider');\n            }\n            this.updateFinetuneSpan(type);\n        }\n    };\n    ToolbarModule.prototype.createSlider = function (min, max, value, type) {\n        var _this = this;\n        var parent = this.parent;\n        var step = type === 'straighten' ? 3 : 1;\n        return new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.Slider({\n            value: value, type: 'MinRange', min: min, max: max,\n            step: step, width: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? '180px' : (type === 'straighten' ? '200px' : '300px'),\n            cssClass: 'e-slider',\n            change: function (args) {\n                parent.notify('selection', { prop: 'setSliderActive', onPropertyChange: false, value: { bool: true } });\n                if (type === 'transparency') {\n                    if (parent.activeObj.shape) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.activeObj.imageRatio)) {\n                            parent.notify('shape', { prop: 'updImgRatioForActObj', onPropertyChange: false });\n                        }\n                        parent.notify('shape', { prop: 'pushActItemIntoObj' });\n                        var prevCropObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.cropObj, {}, true);\n                        var object = { currObj: {} };\n                        parent.notify('filter', { prop: 'getCurrentObj', onPropertyChange: false, value: { object: object } });\n                        var prevObj = object['currObj'];\n                        prevObj.objColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], parent.objColl, [], true);\n                        prevObj.pointColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], parent.pointColl, [], true);\n                        prevObj.afterCropActions = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], parent.afterCropActions, [], true);\n                        var selPointCollObj = { selPointColl: null };\n                        parent.notify('freehand-draw', { prop: 'getSelPointColl', onPropertyChange: false,\n                            value: { obj: selPointCollObj } });\n                        prevObj.selPointColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], selPointCollObj['selPointColl'], [], true);\n                        parent.objColl.pop();\n                        parent.activeObj.opacity = args.value / 100;\n                        _this.upperContext.clearRect(0, 0, parent.upperCanvas.width, parent.upperCanvas.height);\n                        parent.notify('draw', { prop: 'drawObject', onPropertyChange: false, value: { canvas: 'duplicate' } });\n                        parent.objColl.push(parent.activeObj);\n                        parent.notify('undo-redo', { prop: 'updateUndoRedoColl', onPropertyChange: false,\n                            value: { operation: 'shapeTransform', previousObj: prevObj, previousObjColl: prevObj.objColl,\n                                previousPointColl: prevObj.pointColl, previousSelPointColl: prevObj.selPointColl,\n                                previousCropObj: prevCropObj, previousText: null,\n                                currentText: null, previousFilter: null, isCircleCrop: null } });\n                        parent.notify('selection', { prop: 'redrawShape', value: { obj: parent.objColl[parent.objColl.length - 1] } });\n                        _this.updateFinetuneSpan(type);\n                    }\n                }\n                else if (type === 'straighten') {\n                    parent.setStraighten(args.value);\n                }\n                else {\n                    if (parent.transform.zoomFactor && parent.transform.zoomFactor < 0) {\n                        parent.isFinetuning = true;\n                    }\n                    parent.notify('selection', { prop: 'setSliding', value: { bool: true } });\n                    parent.setCurrAdjustmentValue(type, args.value);\n                    _this.updateFinetuneSpan(type);\n                    _this.enableDisableTbrBtn();\n                    parent.isFinetuning = false;\n                }\n            },\n            changed: function () {\n                if (type !== 'transparency' && type !== 'straighten') {\n                    parent.notify('selection', { prop: 'setSliding', value: { bool: false } });\n                    parent.notify('draw', { prop: 'redrawDownScale' });\n                }\n                parent.notify('selection', { prop: 'setSliderActive', onPropertyChange: false, value: { bool: false } });\n                if (type === 'transparency') {\n                    setTimeout(function () {\n                        parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                        parent.element.querySelector('#' + parent.element.id + '_transparency').click();\n                    }, 50);\n                }\n            }\n        });\n    };\n    ToolbarModule.prototype.updateFinetuneSpan = function (type) {\n        var parent = this.parent;\n        var ftValPan = parent.element.querySelector('.e-ie-finetune-value-span');\n        if (ftValPan) {\n            var adjObj = { adjustmentLevel: null };\n            parent.notify('filter', { prop: 'getAdjustmentLevel', onPropertyChange: false, value: { obj: adjObj } });\n            ftValPan.innerHTML = Math.round(adjObj['adjustmentLevel'][type]).toString();\n        }\n    };\n    ToolbarModule.prototype.applyPreviewFilter = function () {\n        var parent = this.parent;\n        if (document.querySelector('#' + parent.element.id + '_sliderWrapper') ||\n            parent.currObjType.isFiltered) {\n            parent.initialAdjustmentValue = this.lowerContext.filter;\n            parent.canvasFilter = this.lowerContext.filter;\n            parent.currObjType.isFiltered = false;\n        }\n    };\n    ToolbarModule.prototype.unselectBtn = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var selectors = [\n            '#' + id + '_brightness',\n            '#' + id + '_contrast',\n            '#' + id + '_hue',\n            '#' + id + '_saturation',\n            '#' + id + '_opacity',\n            '#' + id + '_blur',\n            '#' + id + '_exposure'\n        ];\n        for (var _i = 0, selectors_1 = selectors; _i < selectors_1.length; _i++) {\n            var selector = selectors_1[_i];\n            var element = document.querySelector(selector);\n            if (element && element.classList.contains('e-selected-btn')) {\n                element.classList.remove('e-selected-btn');\n                break;\n            }\n        }\n    };\n    ToolbarModule.prototype.openSlider = function (type) {\n        this.unselectBtn();\n        this.parent.currObjType.isFiltered = true;\n        this.refreshToolbar('color', null, null, null, type);\n        document.getElementById(this.parent.element.id + '_' + type).classList.add('e-selected-btn');\n    };\n    ToolbarModule.prototype.refreshSlider = function () {\n        var id = this.parent.element.id;\n        var sliderWrapper = document.querySelector('#' + id + '_sliderWrapper');\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var slider = document.querySelector('.e-slider');\n        var hdrWrapper = document.querySelector('#' + id + '_headWrapper');\n        if (hdrWrapper) {\n            hdrWrapper.style.display = 'none';\n        }\n        if (sliderWrapper && slider) {\n            slider.ej2_instances[0].destroy();\n            sliderWrapper.remove();\n        }\n    };\n    ToolbarModule.prototype.unselectFrameBtn = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var selectors = [\n            '#' + id + '_none',\n            '#' + id + '_mat',\n            '#' + id + '_line',\n            '#' + id + '_inset',\n            '#' + id + '_bevel',\n            '#' + id + '_hook'\n        ];\n        for (var _i = 0, selectors_2 = selectors; _i < selectors_2.length; _i++) {\n            var selector = selectors_2[_i];\n            var element = document.querySelector(selector);\n            if (element.classList.contains('e-selected-btn')) {\n                element.classList.remove('e-selected-btn');\n                break;\n            }\n        }\n    };\n    ToolbarModule.prototype.updateToolbarItems = function () {\n        var parent = this.parent;\n        var id = parent.element.id;\n        if (!parent.isImageLoaded) {\n            return;\n        }\n        if (this.isToolbar()) {\n            var selFillElem = parent.element.querySelector('.e-fill.e-template .e-dropdownbtn-preview');\n            var selStrokeElem = parent.element.querySelector('.e-stroke.e-template .e-dropdownbtn-preview');\n            var selTextStrokeElem = parent.element.querySelector('.e-text-font-color.e-template .e-dropdownbtn-preview');\n            var selStrokeTextColorElem = parent.element.querySelector('.e-stroke-text-font-color.e-template .e-dropdownbtn-preview');\n            var selTextBGElem = parent.element.querySelector('.e-text-background-color.e-template .e-dropdownbtn-preview');\n            var selPenStrokeElem = parent.element.querySelector('.e-pen-stroke-color.e-template .e-dropdownbtn-preview');\n            var strokeWidthElem = parent.element.querySelector('.e-shape-stroke-width');\n            var rectangleRadiusElem = parent.element.querySelector('.e-shape-rectangle-radius');\n            var fontFamilyElem = parent.element.querySelector('.e-text-font-family');\n            var fontSizeElem = parent.element.querySelector('.e-text-font-size');\n            var boldBtn = parent.element.querySelector('#' + id + '_bold');\n            var italicBtn = parent.element.querySelector('#' + id + '_italic');\n            if (parent.activeObj.strokeSettings && parent.activeObj.textSettings) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.activeObj.strokeSettings.strokeWidth)) {\n                    parent.activeObj.strokeSettings.strokeWidth = 2;\n                }\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.activeObj.strokeSettings.outlineWidth)) {\n                    parent.activeObj.strokeSettings.outlineWidth = 2;\n                }\n                if (selFillElem) {\n                    var value = parent.activeObj.strokeSettings.fillColor;\n                    if (parent.activeObj.strokeSettings.fillColor === '') {\n                        selFillElem.classList.add('e-nocolor-item');\n                    }\n                    else {\n                        selFillElem.classList.remove('e-nocolor-item');\n                        selFillElem.style.background = value;\n                    }\n                    if (document.querySelector('#' + id + '_shape_fill')) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_shape_fill', 'colorpicker').value = value;\n                    }\n                }\n                if (selStrokeElem) {\n                    var value = parent.activeObj.strokeSettings.strokeColor;\n                    selStrokeElem.style.background = value;\n                    if (document.querySelector('#' + id + '_shape_stroke')) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_shape_stroke', 'colorpicker').value = value;\n                    }\n                }\n                if (selTextStrokeElem) {\n                    var value = parent.activeObj.strokeSettings.strokeColor;\n                    selTextStrokeElem.style.background = value;\n                    if (document.querySelector('#' + id + '_text_font')) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_text_font', 'colorpicker').value = value;\n                    }\n                }\n                if (selStrokeTextColorElem) {\n                    var value = parent.activeObj.strokeSettings.outlineColor;\n                    if (!/^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6}|[0-9A-Fa-f]{8})$|^[a-zA-Z]+$/.test(parent.activeObj.strokeSettings.outlineColor)) {\n                        selStrokeTextColorElem.classList.add('e-nocolor-item');\n                    }\n                    else {\n                        selStrokeTextColorElem.classList.remove('e-nocolor-item');\n                        selStrokeTextColorElem.style.background = value;\n                    }\n                    if (document.querySelector('#' + id + '_stroke_text')) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_stroke_text', 'colorpicker').value = value;\n                    }\n                }\n                if (selTextBGElem) {\n                    var value = parent.activeObj.strokeSettings.fillColor;\n                    if (parent.activeObj.strokeSettings.fillColor === '' || parent.activeObj.strokeSettings.fillColor === 'transparent') {\n                        selTextBGElem.classList.add('e-nocolor-item');\n                    }\n                    else {\n                        selTextBGElem.classList.remove('e-nocolor-item');\n                        selTextBGElem.style.background = value;\n                    }\n                    if (document.querySelector('#' + id + '_text_bgColor')) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_text_bgColor', 'colorpicker').value = value;\n                    }\n                }\n                if (selPenStrokeElem) {\n                    var value = parent.activeObj.strokeSettings.strokeColor;\n                    selPenStrokeElem.style.background = value;\n                    if (document.querySelector('#' + id + '_pen_stroke')) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(id + '_pen_stroke', 'colorpicker').value = value;\n                    }\n                    var obj = { penOpacity: 1 };\n                    parent.notify('freehand-draw', { prop: 'getPenOpacity', onPropertyChange: false, value: { obj: obj } });\n                }\n                if (fontFamilyElem) {\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        fontFamilyElem.setAttribute('style', 'font-family:' + parent.activeObj.textSettings.fontFamily.toLowerCase());\n                    }\n                    else {\n                        fontFamilyElem.textContent = parent.activeObj.textSettings.fontFamily;\n                    }\n                }\n                if (fontSizeElem) {\n                    for (var i = 0; i < parent.fontSizeColl.length; i++) {\n                        if (parseInt(parent.fontSizeColl[i].text, 10) >= Math.round(parent.activeObj.textSettings.fontSize)) {\n                            fontSizeElem.textContent = (i + 1).toString();\n                            break;\n                        }\n                        else {\n                            if (Math.round(parent.activeObj.textSettings.fontSize) < parseInt(parent.fontSizeColl[0].text, 10)) {\n                                fontSizeElem.textContent = '1';\n                                break;\n                            }\n                            else if (Math.round(parent.activeObj.textSettings.fontSize) >\n                                parseInt(parent.fontSizeColl[parent.fontSizeColl.length - 1].text, 10)) {\n                                fontSizeElem.textContent = ((parent.fontSizeColl.length - 1) + 1).toString();\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (boldBtn) {\n                    if (parent.activeObj.textSettings.bold) {\n                        boldBtn.classList.add('e-selected-btn');\n                    }\n                    else {\n                        boldBtn.classList.remove('e-selected-btn');\n                    }\n                }\n                if (italicBtn) {\n                    if (parent.activeObj.textSettings.italic) {\n                        italicBtn.classList.add('e-selected-btn');\n                    }\n                    else {\n                        italicBtn.classList.remove('e-selected-btn');\n                    }\n                }\n                if (strokeWidthElem) {\n                    var width = parent.activeObj.shape === 'text' ? parent.activeObj.strokeSettings.outlineWidth : parent.activeObj.strokeSettings.strokeWidth;\n                    var strokeWidth = Math.round(width).toString();\n                    strokeWidthElem.textContent = this.getStrokeWidth(strokeWidth);\n                }\n                if (rectangleRadiusElem) {\n                    var rectRadius = Math.round((parent.activeObj.strokeSettings.radius)).toString();\n                    rectangleRadiusElem.textContent = this.getRectRadius(rectRadius);\n                }\n            }\n        }\n    };\n    ToolbarModule.prototype.getStrokeWidth = function (text) {\n        var strokeWidth;\n        var currentWidth = parseInt(text, 10) / 2;\n        switch (currentWidth) {\n            case 0:\n                strokeWidth = this.l10n.getConstant('NoOutline');\n                break;\n            case 1:\n                strokeWidth = this.l10n.getConstant('XSmall');\n                break;\n            case 2:\n                strokeWidth = this.l10n.getConstant('Small');\n                break;\n            case 3:\n                strokeWidth = this.l10n.getConstant('Medium');\n                break;\n            case 4:\n                strokeWidth = this.l10n.getConstant('Large');\n                break;\n            case 5:\n                strokeWidth = this.l10n.getConstant('XLarge');\n                break;\n        }\n        return strokeWidth;\n    };\n    ToolbarModule.prototype.getRectRadius = function (text) {\n        var rectRadius;\n        var currentWidth = parseInt(text, 10) / 2;\n        switch (currentWidth) {\n            case 0:\n                rectRadius = this.l10n.getConstant('0');\n                break;\n            case 1:\n                rectRadius = this.l10n.getConstant('20');\n                break;\n            case 2:\n                rectRadius = this.l10n.getConstant('40');\n                break;\n            case 3:\n                rectRadius = this.l10n.getConstant('60');\n                break;\n            case 4:\n                rectRadius = this.l10n.getConstant('80');\n                break;\n            case 5:\n                rectRadius = this.l10n.getConstant('100');\n                break;\n        }\n        return rectRadius;\n    };\n    ToolbarModule.prototype.cancelPan = function () {\n        var parent = this.parent;\n        parent.notify('shape', { prop: 'applyActObj', onPropertyChange: false, value: { isMouseDown: true } });\n        var panBtn = parent.element.querySelector('.e-img-pan .e-btn');\n        if (panBtn) {\n            panBtn.classList.remove('e-selected-btn');\n        }\n        parent.pan(false);\n    };\n    ToolbarModule.prototype.refreshMainToolbar = function () {\n        if (this.currToolbar !== 'main') {\n            this.refreshToolbar('main');\n        }\n    };\n    ToolbarModule.prototype.destroySubComponents = function () {\n        var parent = this.parent;\n        var inputElement = parent.element.querySelectorAll('input.e-control');\n        var btnElement = parent.element.querySelectorAll('button.e-control');\n        for (var i = 0, len = inputElement.length; i < len; i++) {\n            if (inputElement[i].classList.contains('e-color-picker')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(inputElement[i], 'color-picker').destroy();\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('input#' + inputElement[i].id, parent.element));\n            }\n        }\n        for (var i = 0, len = btnElement.length; i < len; i++) {\n            if (btnElement[i].classList.contains('e-dropdown-btn')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(btnElement[i], 'dropdown-btn').destroy();\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('button#' + btnElement[i].id, parent.element));\n            }\n            else if (btnElement[i].classList.contains('e-btn')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(btnElement[i], 'btn').destroy();\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('button#' + btnElement[i].id, parent.element));\n            }\n        }\n    };\n    ToolbarModule.prototype.setInitialShapeSettings = function (args) {\n        var parent = this.parent;\n        parent.notify('shape', { prop: 'refreshActiveObj', onPropertyChange: false });\n        parent.currObjType.shape = args.item.id;\n        parent.activeObj.shape = parent.currObjType.shape.toLowerCase();\n        parent.currObjType.isDragging = parent.currObjType.isCustomCrop = false;\n        parent.activeObj.shapeDegree = parent.transform.degree;\n        parent.activeObj.shapeFlip = parent.transform.currFlipState;\n        parent.activeObj.textFlip = parent.transform.currFlipState;\n        parent.activeObj.flipObjColl = [];\n        var orderObj = { order: null };\n        parent.notify('shape', { prop: 'getNewOrder', onPropertyChange: false, value: { obj: orderObj } });\n        parent.activeObj.order = orderObj['order'];\n    };\n    ToolbarModule.prototype.isToolbarString = function (items) {\n        var isString = false;\n        for (var i = 0; i < items.length; i++) {\n            if (typeof (items[i]) === 'string') {\n                isString = true;\n                break;\n            }\n        }\n        return isString;\n    };\n    ToolbarModule.prototype.excludeItems = function (items) {\n        var indexArr = [];\n        for (var i = 0; i < items.length; i++) {\n            var index = this.getIndex(items[i]);\n            if (index !== -1) {\n                indexArr.push(index);\n            }\n        }\n        var negativeIndexArr = [];\n        for (var i = 0; i < this.defToolbarItems.length; i++) {\n            if (this.defToolbarItems[i].align === 'Center' && !this.isSameIndex(indexArr, i) &&\n                this.defToolbarItems[i].id !== this.parent.element.id + '_' + 'annotation') {\n                negativeIndexArr.push(i);\n            }\n        }\n        for (var i = negativeIndexArr.length - 1; i >= 0; i--) {\n            this.defToolbarItems.splice(negativeIndexArr[i], 1);\n        }\n    };\n    ToolbarModule.prototype.isSameIndex = function (indexArr, index) {\n        for (var i = 0; i < indexArr.length; i++) {\n            if (indexArr[i] === index) {\n                return true;\n            }\n        }\n        return false;\n    };\n    ToolbarModule.prototype.getIndex = function (item) {\n        var index = -1;\n        var isFontColor = false;\n        if (item === 'rotateLeft') {\n            item = 'rotLeft';\n        }\n        if (item === 'rotateRight') {\n            item = 'rotRight';\n        }\n        if (item === 'horizontalFlip') {\n            item = 'hflip';\n        }\n        if (item === 'verticalFlip') {\n            item = 'vflip';\n        }\n        if (item === 'arrowStart') {\n            item = 'start';\n        }\n        if (item === 'arrowEnd') {\n            item = 'end';\n        }\n        if (item === 'fontColor') {\n            item = 'strokeColor';\n            isFontColor = true;\n        }\n        for (var i = 0; i < this.defToolbarItems.length; i++) {\n            var id = this.defToolbarItems[i].id;\n            if (id && id.toLowerCase().indexOf(item.toLowerCase()) !== -1) {\n                index = i;\n                break;\n            }\n        }\n        if (isFontColor) {\n            item = 'fontColor';\n        }\n        return index;\n    };\n    ToolbarModule.prototype.getModuleName = function () {\n        return 'toolbar-module';\n    };\n    ToolbarModule.prototype.redactSlider = function (type) {\n        var parent = this.parent;\n        var id = parent.element.id;\n        var toolbarArea = parent.element.querySelector('#' + id + '_toolbarArea');\n        var contextualToolbarArea = parent.element.querySelector('#' + id + '_contextualToolbarArea');\n        if (!contextualToolbarArea) {\n            return;\n        }\n        contextualToolbarArea.classList.remove('e-hide');\n        contextualToolbarArea.style.left = toolbarArea.offsetLeft + 'px';\n        var canvasWrapper = document.querySelector('#' + id + '_contextualToolbarArea');\n        var hdrWrapper = document.querySelector('#' + id + '_headWrapper');\n        var labelWrapper = document.querySelector('#' + id + '_labelWrapper');\n        var ctxTbar = document.querySelector('#' + id + '_contextualToolbar');\n        if (hdrWrapper) {\n            hdrWrapper.remove();\n            labelWrapper.remove();\n        }\n        if (ctxTbar) {\n            ctxTbar.remove();\n            this.createContextualToolbar();\n        }\n        hdrWrapper = canvasWrapper.appendChild(parent.createElement('div', {\n            id: id + '_headWrapper',\n            styles: 'position: relative'\n        }));\n        labelWrapper = hdrWrapper.appendChild(parent.createElement('label', {\n            id: id + '_labelWrapper',\n            className: 'e-ie-finetune-slider-label',\n            styles: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? ('position: absolute; top: 31%; left: calc(50% - 160px); font-size: 15px; text-transform: capitalize; font-weight: 400;')\n                : 'position: absolute; top: 25%; left: calc(50% - 226px); font-size: 15px; text-transform: capitalize; font-weight: 400;'\n        }));\n        var text = type === 'blur' ? this.l10n.getConstant('Blur') : this.l10n.getConstant('PixelSize');\n        labelWrapper.textContent = text;\n        var sliderWrapper = hdrWrapper.appendChild(parent.createElement('div', {\n            id: id + '_sliderWrapper',\n            className: 'e-ie-finetune-slider-wrap',\n            styles: 'position: absolute'\n        }));\n        hdrWrapper.appendChild(parent.createElement('label', {\n            id: id + '_redactSpan',\n            className: 'e-ie-redact-value-span',\n            styles: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? ('position: absolute; top: 30%; margin-left: 20px; font-size: 15px; text-transform: capitalize; font-weight: 400;') :\n                'position: absolute; top: 30%; left: calc(50% + 190px); font-size: 15px; text-transform: capitalize; font-weight: 400;'\n        }));\n        sliderWrapper.parentElement.classList.add('e-finetune-slider');\n        var value = parent.activeObj.redactType === 'blur' ? parent.activeObj.redactBlur :\n            parent.activeObj.redactPixelate;\n        var redactSlider = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_1__.Slider({\n            tooltip: { placement: 'Before', isVisible: true, showOn: 'Focus' },\n            min: 10, max: 100, step: 1, value: value,\n            type: 'MinRange',\n            width: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? '130px' : '300px',\n            created: function () {\n                parent.element.querySelector('.e-ie-redact-value-span').innerText = value.toString();\n            },\n            change: function (args) {\n                parent.element.querySelector('.e-ie-redact-value-span').innerText = args.value.toString();\n                if (parent.activeObj.redactType === 'blur') {\n                    parent.activeObj.redactBlur = parent.tempRedactBlur = args.value;\n                }\n                else if (parent.activeObj.redactType === 'pixelate') {\n                    parent.activeObj.redactPixelate = parent.tempRedactPixel = args.value;\n                }\n                parent.notify('draw', { prop: 'drawObject', onPropertyChange: false, value: { canvas: 'duplicate', obj: parent.activeObj, isCropRatio: null,\n                        points: null, isPreventDrag: true, saveContext: null, isPreventSelection: true } });\n            },\n            changed: function () {\n                setTimeout(function () {\n                    parent.notify('undo-redo', { prop: 'updateUndoRedoStack', onPropertyChange: false });\n                }, 50);\n            }\n        });\n        redactSlider.appendTo('#' + id + '_sliderWrapper');\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            var cHt = contextualToolbarArea.offsetHeight + 1;\n            var cusWrapper = parent.element.querySelector('#' + id + '_customizeWrapper');\n            if (this.isFrameToolbar && cusWrapper) {\n                cHt = cusWrapper.offsetHeight + 2;\n            }\n            var ht = parent.element.querySelector('#' + id + '_canvasWrapper').offsetHeight;\n            contextualToolbarArea.style.top = this.toolbarHeight + 1 + ht - cHt + 'px';\n        }\n    };\n    return ToolbarModule;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-image-editor/src/image-editor/renderer/toolbar.js?");

/***/ })

}]);