"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-pdf-export_src_implementation_input-output_pdf-s"],{

/***/ "./node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-stream-writer.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-stream-writer.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PdfStreamWriter: () => (/* binding */ PdfStreamWriter)\n/* harmony export */ });\n/* harmony import */ var _pdf_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-operators */ \"./node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-operators.js\");\n/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-number */ \"./node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js\");\n/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../drawing/pdf-drawing */ \"./node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js\");\n/* harmony import */ var _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../primitives/pdf-string */ \"./node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-string.js\");\n/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../primitives/pdf-name */ \"./node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js\");\n\n\n\n\n\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_4__.PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.paintXObject);\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.evenOdd);\n        }\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.endPath);\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.evenOdd);\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n        }\n        else {\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.evenOdd);\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n        }\n        else {\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.evenOdd);\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n        }\n        else {\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.closePath);\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.evenOdd);\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n        }\n        else {\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__.PdfNumber.floatToString(textScaling));\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.goToNextLine);\n        }\n        else if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__.PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__.PdfNumber.floatToString(leading));\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__.RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__.PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__.PdfNumber.floatToString(charSpacing));\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setCharacterSpace);\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__.PdfNumber.floatToString(wordSpacing));\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_3__.PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_4__.PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? _pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.selectcolorspaceforstroking : _pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_4__.PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_4__.PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n            this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__.PdfNumber.floatToString(size));\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_3__.PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_3__.PdfString.hexStringMark[0];\n                end = _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_3__.PdfString.hexStringMark[1];\n            }\n            else {\n                start = _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_3__.PdfString.stringMark[0];\n                end = _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_3__.PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__.PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__.PdfNumber.floatToString(temparg1));\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__.PdfNumber.floatToString(arg2));\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += _pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += _pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.comment;\n            builder += _pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + _pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__.PdfNumber.floatToString(miterLimit));\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__.PdfNumber.floatToString(width));\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* tslint:disable-next-line:max-line-length */\n    PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__.PointF && arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__.PointF && arg3 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__.PointF) {\n            this.writePoint(arg1.x, arg1.y);\n            this.writePoint(arg2.x, arg2.y);\n            this.writePoint(arg3.x, arg3.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writePoint(arg5, arg6);\n        }\n        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.appendbeziercurve);\n    };\n    PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n        if ((colours != null)) {\n            var count = colours.length;\n            var i = 0;\n            for (i = 0; i < count; ++i) {\n                this.stream.write(colours[i].toString());\n                this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n            }\n        }\n        if ((patternName != null)) {\n            this.stream.write(patternName.toString());\n            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.whiteSpace);\n        }\n        if (forStroking) {\n            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setColorAndPatternStroking);\n        }\n        else {\n            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__.Operators.setColorAndPattern);\n        }\n    };\n    return PdfStreamWriter;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-stream-writer.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-writer.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-writer.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PdfArrayBuffer: () => (/* binding */ PdfArrayBuffer),\n/* harmony export */   PdfWriter: () => (/* binding */ PdfWriter),\n/* harmony export */   PdfWriterHelper: () => (/* binding */ PdfWriterHelper)\n/* harmony export */ });\n/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\n\n/**\n * Helper class for PDF writer.\n * @private\n */\nvar PdfWriterHelper = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriterHelper` class.\n     * @private\n     */\n    function PdfWriterHelper() {\n        this.buffer = new PdfArrayBuffer();\n    }\n    /**\n     * Writes the specified data.\n     * @private\n     */\n    PdfWriterHelper.prototype.write = function (data) {\n        this.buffer.write(data);\n    };\n    /**\n     * Destroy the array buffer.\n     * @private\n     */\n    PdfWriterHelper.prototype.destroy = function () {\n        if (this.buffer) {\n            this.buffer.destroy();\n            this.buffer = undefined;\n        }\n    };\n    return PdfWriterHelper;\n}());\n\n/**\n * Helper class for PDF writer.\n * @private\n */\nvar PdfArrayBuffer = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfArrayBuffer` class.\n     * @private\n     */\n    function PdfArrayBuffer() {\n        this.buffer = [];\n    }\n    Object.defineProperty(PdfArrayBuffer.prototype, \"size\", {\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            return this.buffer.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the specified data.\n     * @private\n     */\n    PdfArrayBuffer.prototype.write = function (value) {\n        for (var i = 0; i < value.length; i++) {\n            this.buffer.push(value.charCodeAt(i) & 0xff);\n        }\n    };\n    /**\n     * Destroy the array buffer.\n     * @private\n     */\n    PdfArrayBuffer.prototype.destroy = function () {\n        if (this.buffer) {\n            this.buffer = [];\n            this.buffer = undefined;\n        }\n    };\n    return PdfArrayBuffer;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-writer.js?");

/***/ })

}]);