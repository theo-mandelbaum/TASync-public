"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-image-editor_src_image-editor_action_export_js-f8d60bb0"],{

/***/ "./node_modules/@syncfusion/ej2-image-editor/src/image-editor/action/export.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-image-editor/src/image-editor/action/export.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Export: () => (/* binding */ Export)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n/* eslint-disable max-len */\n\n\nvar Export = /** @class */ (function () {\n    function Export(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Export.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeEventListener();\n    };\n    Export.prototype.addEventListener = function () {\n        this.parent.on('export', this.export, this);\n        this.parent.on('destroyed', this.destroy, this);\n    };\n    Export.prototype.removeEventListener = function () {\n        this.parent.off('export', this.export);\n        this.parent.off('destroyed', this.destroy);\n    };\n    Export.prototype.export = function (args) {\n        this.parent.notify('toolbar', { prop: 'refreshShapeDrawing', onPropertyChange: false });\n        this.updatePvtVar();\n        switch (args.prop) {\n            case 'export':\n                this.exportImg(args.value['type'], args.value['fileName'], args.value['imgQuality']);\n                break;\n            case 'exportToCanvas':\n                this.exportToCanvas(args.value['object']);\n                break;\n            case 'updateSaveContext':\n                this.updateSaveContext(args.value['context']);\n                break;\n            case 'setImageQuality':\n                this.imageQuality = args.value['value'];\n                break;\n            case 'drawAnnotation':\n                this.drawAnnotation(args.value['context'], args.value['ratio']);\n                break;\n        }\n    };\n    Export.prototype.getModuleName = function () {\n        return 'export';\n    };\n    Export.prototype.updatePvtVar = function () {\n        var parent = this.parent;\n        if (parent.lowerCanvas) {\n            this.lowerContext = parent.lowerCanvas.getContext('2d');\n        }\n    };\n    Export.prototype.exportImg = function (type, fileName, imgQuality) {\n        var parent = this.parent;\n        var obj = { fileName: '' };\n        parent.notify('draw', { prop: 'getFileName', onPropertyChange: false, value: { obj: obj } });\n        var imageName = obj['fileName'];\n        if (!parent.disabled && parent.isImageLoaded) {\n            parent.notify('shape', { prop: 'applyActObj', onPropertyChange: false, value: { isMouseDown: null } });\n            var obj_1 = { canvasFilter: this.parent.canvasFilter };\n            this.lowerContext.filter = obj_1['canvasFilter'];\n            type = type ? type : 'Png';\n            parent.notify('shape', { prop: 'redrawActObj', onPropertyChange: false,\n                value: { x: null, y: null, isMouseDown: null } });\n            var beforeSave = { cancel: false, fileName: fileName ? fileName : imageName,\n                fileType: type, imageQuality: imgQuality };\n            parent.trigger('beforeSave', beforeSave);\n            this.beforeSaveEvent(beforeSave, type, fileName, imageName, imgQuality);\n        }\n    };\n    Export.prototype.beforeSaveEvent = function (observableSaveArgs, type, fileName, imageName, imgQuality) {\n        var parent = this.parent;\n        if (!observableSaveArgs.cancel) {\n            parent.currObjType.isSave = true;\n            fileName = observableSaveArgs.fileName ? observableSaveArgs.fileName : fileName;\n            var lowerCaseType = type.toLowerCase();\n            fileName = fileName || imageName;\n            if (lowerCaseType === 'svg') {\n                this.toSVGImg(fileName);\n            }\n            else {\n                this.toBlobFn(fileName, lowerCaseType, imgQuality);\n            }\n            var saved = { fileName: fileName ? fileName : imageName, fileType: type };\n            parent.trigger('saved', saved);\n            var actionArgs = { action: 'save', actionEventArgs: saved };\n            parent.triggerEditCompleteEvent(actionArgs);\n            parent.notify('toolbar', { prop: 'refresh-main-toolbar', onPropertyChange: false });\n            parent.lowerCanvas.style.left = parent.upperCanvas.style.left = '';\n            parent.lowerCanvas.style.top = parent.upperCanvas.style.top = '';\n            parent.lowerCanvas.style.maxWidth = parent.upperCanvas.style.maxWidth = '';\n            parent.lowerCanvas.style.maxHeight = parent.upperCanvas.style.maxHeight = '';\n        }\n    };\n    Export.prototype.toSVGImg = function (fileName) {\n        var parent = this.parent;\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__.showSpinner)(parent.element);\n        parent.element.style.opacity = '0.5';\n        var tempCanvas = this.exportToCanvas();\n        var dataUrl = tempCanvas.toDataURL();\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__.hideSpinner)(parent.element);\n        parent.element.style.opacity = '1';\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', tempCanvas.style.maxWidth);\n        svg.setAttribute('height', tempCanvas.style.maxHeight);\n        var XLinkNS = 'http://www.w3.org/1999/xlink';\n        var img = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n        img.setAttributeNS(null, 'height', tempCanvas.height.toString());\n        img.setAttributeNS(null, 'width', tempCanvas.width.toString());\n        img.setAttributeNS(XLinkNS, 'xlink:href', dataUrl);\n        svg.appendChild(img);\n        var prefix = 'data:image/svg+xml;base64,';\n        var header = '<svg' + ' xmlns=\"http://www.w3.org/2000/svg\"' + ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"'\n            + (\" width=\\\"\" + tempCanvas.width + \"\\\"\") + (\" height=\\\"\" + tempCanvas.height + \"\\\"\") + '>';\n        var footer = '</svg>';\n        var body = svg.innerHTML;\n        var data = header + body + footer;\n        var svgDataUrl = prefix + btoa(data);\n        if (fileName === null) {\n            return svgDataUrl;\n        }\n        else {\n            this.downloadImg(svgDataUrl, fileName + '.' + 'svg');\n            return null;\n        }\n    };\n    Export.prototype.toBlobFn = function (fileName, type, imgQuality) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var proxy = this;\n        var parent = this.parent;\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__.showSpinner)(parent.element);\n        parent.element.style.opacity = '0.5';\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(imgQuality)) {\n            imgQuality = imgQuality > 1 ? 1 : (imgQuality <= 0 ? 0.01 : imgQuality);\n            this.imageQuality = imgQuality ? imgQuality : null;\n        }\n        var tempCanvas = this.exportToCanvas();\n        var imagetype = (type === 'jpeg' ? 'image/jpeg' : (type === 'webp' ? 'image/webp' : 'image/png'));\n        // eslint-disable-next-line @typescript-eslint/tslint/config\n        tempCanvas.toBlob(function (blob) {\n            var blobUrl = URL.createObjectURL(blob);\n            proxy.downloadImg(blobUrl, fileName + '.' + type);\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__.hideSpinner)(parent.element);\n            parent.element.style.opacity = '1';\n        }, imagetype, this.imageQuality ? this.imageQuality : null);\n    };\n    Export.prototype.exportToCanvas = function (object) {\n        var parent = this.parent;\n        var width;\n        var height;\n        var tempCropObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.cropObj, {}, true);\n        var tempObj = { currObj: {} };\n        parent.notify('filter', { prop: 'getCurrentObj', onPropertyChange: false, value: { object: tempObj } });\n        var prevObj = tempObj['currObj'];\n        prevObj.objColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], parent.objColl, [], true);\n        prevObj.pointColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], parent.pointColl, [], true);\n        prevObj.afterCropActions = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], parent.afterCropActions, [], true);\n        var selPointCollObj = { selPointColl: null };\n        parent.notify('freehand-draw', { prop: 'getSelPointColl', onPropertyChange: false,\n            value: { obj: selPointCollObj } });\n        if (this.parent.aspectWidth) {\n            parent.notify('undo-redo', { prop: 'setPreventUR', value: { bool: true } });\n            parent.notify('toolbar', { prop: 'resizeClick', value: { bool: false } });\n            parent.okBtn();\n            if (parent.transform.degree % 90 === 0 && parent.transform.degree % 180 !== 0) {\n                width = this.parent.aspectHeight;\n                height = this.parent.aspectWidth;\n            }\n            else {\n                width = this.parent.aspectWidth;\n                height = this.parent.aspectHeight;\n            }\n            parent.notify('undo-redo', { prop: 'setPreventUR', value: { bool: false } });\n        }\n        else if (parent.currSelectionPoint) {\n            width = parent.img.srcWidth;\n            height = parent.img.srcHeight;\n        }\n        else {\n            width = parent.baseImgCanvas.width;\n            height = parent.baseImgCanvas.height;\n        }\n        var obj = { width: 0, height: 0 };\n        parent.notify('crop', { prop: 'calcRatio', onPropertyChange: false,\n            value: { obj: obj, dimension: { width: width, height: height } } });\n        var ratio = obj;\n        var tempContextFilter = this.lowerContext.filter;\n        // Manipulating blur value\n        if (this.lowerContext.filter !== 'none') {\n            var splitWords = this.lowerContext.filter.split(' ');\n            var value = parseFloat(splitWords[5].split('(')[1]);\n            value *= ((ratio.width + ratio.height) / 2);\n            splitWords[5] = 'blur(' + value + 'px)';\n            this.lowerContext.filter = splitWords.join(' ');\n        }\n        var tempCanvas = parent.createElement('canvas', {\n            id: parent.element.id + '_tempCanvas', attrs: { name: 'canvasImage' }\n        });\n        var tempContext = tempCanvas.getContext('2d');\n        tempCanvas.width = width;\n        tempCanvas.height = height;\n        var dimObj = { width: 0, height: 0 };\n        parent.notify('transform', { prop: 'calcMaxDimension', onPropertyChange: false,\n            value: { width: width, height: height, obj: dimObj } });\n        var maxDimension = dimObj;\n        tempCanvas.style.maxWidth = maxDimension.width + 'px';\n        tempCanvas.style.maxHeight = maxDimension.height + 'px';\n        var temp = this.lowerContext.filter;\n        tempContext.filter = this.lowerContext.filter;\n        this.downScaleImgCanvas(tempContext, width, height);\n        this.lowerContext.filter = temp;\n        if (parent.transform.degree !== 0 || parent.transform.currFlipState !== '' || parent.transform.straighten !== 0) {\n            this.updateSaveContext(tempContext);\n            this.exportTransformedImage(tempContext);\n        }\n        if (parent.isSafari) {\n            parent.notify('filter', { prop: 'apply-filter', onPropertyChange: false, value: { context: tempContext } });\n        }\n        this.drawAnnotation(tempContext, ratio);\n        if (parent.isCircleCrop) {\n            parent.notify('crop', { prop: 'cropCircle', onPropertyChange: false,\n                value: { context: tempContext, isSave: true, isFlip: null } });\n        }\n        this.updateFrame(tempContext, true);\n        this.lowerContext.filter = tempContextFilter;\n        parent.canvasFilter = tempContextFilter;\n        if (object) {\n            object['canvas'] = tempCanvas;\n        }\n        if (parent.aspectWidth) {\n            parent.objColl = [];\n            parent.pointColl = [];\n            parent.freehandCounter = 0;\n            parent.notify('freehand-draw', { prop: 'setSelPointColl', onPropertyChange: false,\n                value: { obj: { selPointColl: [] } } });\n            parent.notify('draw', { prop: 'setCurrentObj', onPropertyChange: false, value: { obj: prevObj } });\n            prevObj.selPointColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], selPointCollObj['selPointColl'], [], true);\n            parent.notify('freehand-draw', { prop: 'setSelPointColl', onPropertyChange: false,\n                value: { obj: { selPointColl: prevObj.selPointColl } } });\n            parent.cropObj = tempCropObj;\n            parent.objColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], prevObj.objColl, [], true);\n            parent.pointColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], prevObj.pointColl, [], true);\n            parent.freehandCounter = parent.pointColl.length;\n            parent.transform.straighten = 0;\n            this.lowerContext.filter = 'none';\n            parent.notify('shape', { prop: 'drawAnnotations', onPropertyChange: false,\n                value: { ctx: this.lowerContext, shape: 'zoom', pen: 'zoom', isPreventApply: null } });\n            this.lowerContext.filter = prevObj.filter;\n            parent.notify('draw', { prop: 'clearOuterCanvas', onPropertyChange: false, value: { context: this.lowerContext } });\n            if (parent.isCircleCrop || (parent.currSelectionPoint && parent.currSelectionPoint.shape === 'crop-circle')) {\n                parent.notify('crop', { prop: 'cropCircle', onPropertyChange: false,\n                    value: { context: this.lowerContext, isSave: null, isFlip: null } });\n            }\n        }\n        return tempCanvas;\n    };\n    Export.prototype.drawAnnotation = function (tempContext, ratio) {\n        var parent = this.parent;\n        var tempObjColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], parent.objColl, [], true);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var tempPointColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], parent.pointColl, [], true);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var nonRedact = parent.shapeColl.filter(function (item) { return item.shape !== 'redact'; });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var redact = parent.shapeColl.filter(function (item) { return item.shape === 'redact'; });\n        parent.shapeColl = redact.concat(nonRedact);\n        for (var i = 0; i < parent.shapeColl.length; i++) {\n            if (parent.shapeColl[i].order) {\n                if (parent.shapeColl[i].currIndex && parent.shapeColl[i].currIndex.indexOf('shape') > -1) {\n                    parent.objColl = [];\n                    parent.objColl.push((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.shapeColl[i], {}, true));\n                    this.drawShape(tempContext, ratio);\n                }\n                else if (parent.shapeColl[i].id && parent.shapeColl[i].id.indexOf('pen') > -1) {\n                    parent.pointColl = [];\n                    parent.freehandCounter = 0;\n                    parent.pointColl.push((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.shapeColl[i], {}, true));\n                    parent.freehandCounter = parent.pointColl.length;\n                    this.drawPen(tempContext, ratio);\n                }\n            }\n        }\n        parent.objColl = tempObjColl;\n        parent.pointColl = tempPointColl;\n        parent.freehandCounter = parent.pointColl.length;\n    };\n    Export.prototype.drawShape = function (tempContext, ratio) {\n        var parent = this.parent;\n        if (parent.objColl.length > 0) {\n            var temp = tempContext.filter;\n            tempContext.filter = 'none';\n            var indexObj = { index: null };\n            parent.notify('shape', { prop: 'getSmallestIndex', onPropertyChange: false, value: { obj: indexObj } });\n            var index = indexObj['index'];\n            var objColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], parent.objColl, [], true);\n            var tempObjColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], parent.objColl, [], true);\n            while (objColl.length > 0) {\n                var found = false;\n                for (var i = 0; i < objColl.length; i++) {\n                    var currentObj = objColl[i];\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentObj.order)) {\n                        objColl.splice(i, 1);\n                        i--;\n                        continue;\n                    }\n                    if (currentObj.order === index) {\n                        var temp_1 = tempContext.filter;\n                        tempContext.filter = 'none';\n                        var currObj = objColl[i];\n                        var activePoint = currObj.activePoint;\n                        // Subtracting destination left and top points\n                        activePoint.startX -= parent.img.destLeft;\n                        activePoint.startY -= parent.img.destTop;\n                        activePoint.endX -= parent.img.destLeft;\n                        activePoint.endY -= parent.img.destTop;\n                        activePoint.width = activePoint.endX - activePoint.startX;\n                        activePoint.height = activePoint.endY - activePoint.startY;\n                        // Manipulating points\n                        activePoint.startX *= ratio.width;\n                        activePoint.startY *= ratio.height;\n                        activePoint.endX *= ratio.width;\n                        activePoint.endY *= ratio.height;\n                        activePoint.width = activePoint.endX - activePoint.startX;\n                        activePoint.height = activePoint.endY - activePoint.startY;\n                        currObj.strokeSettings.strokeWidth *= ((ratio.width + ratio.height) / 2);\n                        if (currObj.shape === 'text') {\n                            currObj.textSettings.fontSize *= ((ratio.width + ratio.height) / 2);\n                        }\n                        else if (currObj.shape === 'path') {\n                            for (var l = 0; l < currObj.pointColl.length; l++) {\n                                currObj.pointColl[l].x =\n                                    (currObj.pointColl[l].x - parent.img.destLeft) * ratio.width;\n                                currObj.pointColl[l].y =\n                                    (currObj.pointColl[l].y - parent.img.destTop) * ratio.height;\n                            }\n                        }\n                        else if (currObj.shape === 'image') {\n                            parent.activeObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, objColl[i], {}, true);\n                            parent.notify('selection', { prop: 'upgradeImageQuality', onPropertyChange: false });\n                            objColl[i] = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.activeObj, {}, true);\n                        }\n                        parent.notify('draw', { prop: 'drawObject', onPropertyChange: false, value: { canvas: 'saveContext', obj: objColl[i], isCropRatio: null,\n                                points: null, isPreventDrag: true, saveContext: tempContext, isPreventSelection: null } });\n                        tempContext.filter = temp_1;\n                        parent.notify('shape', { prop: 'refreshActiveObj', onPropertyChange: false });\n                        index++;\n                        var indexBool = { bool: false };\n                        parent.notify('shape', { prop: 'isIndexInObjColl', onPropertyChange: false, value: { obj: indexBool, index: index } });\n                        if (!indexBool['bool']) {\n                            index++;\n                        }\n                        objColl.splice(i, 1);\n                        found = true;\n                        break; // Exit the loop to start from the beginning\n                    }\n                }\n                if (!found) {\n                    break; // If no matching order was found, exit the loop\n                }\n            }\n            tempContext.filter = temp;\n            parent.notify('shape', { prop: 'refreshActiveObj', onPropertyChange: false });\n            parent.objColl = tempObjColl;\n        }\n    };\n    Export.prototype.drawPen = function (tempContext, ratio) {\n        var parent = this.parent;\n        if (parent.freehandCounter > 0) {\n            var widthObj = { penStrokeWidth: null };\n            parent.notify('freehand-draw', { prop: 'getPenStrokeWidth', onPropertyChange: false, value: { obj: widthObj } });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var tempPointColl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, parent.pointColl, {}, true);\n            for (var n = 0; n < parent.freehandCounter; n++) {\n                parent.points = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], parent.pointColl[n].points, []);\n                parent.notify('freehand-draw', { prop: 'setPointCounter', onPropertyChange: false, value: { value: 0 } });\n                var len = parent.points.length;\n                parent.pointColl[n].strokeWidth *= ((ratio.width + ratio.height) / 2);\n                for (var l = 0; l < len; l++) {\n                    parent.points[l].x = (parent.points[l].x - parent.img.destLeft) * ratio.width;\n                    parent.points[l].y = (parent.points[l].y - parent.img.destTop) * ratio.height;\n                }\n            }\n            parent.notify('freehand-draw', { prop: 'freehandRedraw', onPropertyChange: false,\n                value: { context: tempContext, points: null } });\n            parent.pointColl = tempPointColl;\n            parent.notify('freehand-draw', { prop: 'setPenStrokeWidth', onPropertyChange: false, value: { value: widthObj['penStrokeWidth'] } });\n        }\n    };\n    Export.prototype.downScaleImgCanvas = function (ctx, width, height) {\n        var parent = this.parent;\n        var canvas = parent.baseImgCanvas;\n        var img = parent.baseImg;\n        var obj = { width: 0, height: 0 };\n        parent.notify('transform', { prop: 'calcMaxDimension', onPropertyChange: false,\n            value: { width: img.width, height: img.height, obj: obj, isImgShape: null } });\n        var bgObj = { color: null };\n        parent.notify('draw', { prop: 'getImageBackgroundColor', value: { obj: bgObj } });\n        if (bgObj['color'] !== '') {\n            ctx.fillStyle = bgObj['color'];\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        }\n        if (obj['width'] > width && obj['height'] > height) {\n            var tempCanvas = parent.createElement('canvas', {\n                id: parent.element.id + '_downScaleCanvas', attrs: { name: 'canvasImage' }\n            });\n            tempCanvas.width = this.parent.img.srcWidth;\n            tempCanvas.height = this.parent.img.srcHeight;\n            tempCanvas.getContext('2d').drawImage(canvas, parent.img.srcLeft, parent.img.srcTop, parent.img.srcWidth, parent.img.srcHeight, 0, 0, tempCanvas.width, tempCanvas.height);\n            parent.notify('draw', { prop: 'downScale', value: { canvas: tempCanvas, width: width, height: height } });\n            ctx.drawImage(tempCanvas, 0, 0);\n        }\n        else {\n            ctx.drawImage(parent.baseImgCanvas, parent.img.srcLeft, parent.img.srcTop, parent.img.srcWidth, parent.img.srcHeight, 0, 0, width, height);\n        }\n    };\n    Export.prototype.updateFrame = function (tempContext, isAnnotation) {\n        if (this.parent.frameObj.type !== 'none') {\n            var temp = tempContext.filter;\n            tempContext.filter = 'none';\n            this.parent.notify('draw', { prop: 'applyFrame', value: { ctx: tempContext, frame: this.parent.frameObj.type, preventImg: isAnnotation } });\n            tempContext.filter = temp;\n        }\n    };\n    Export.prototype.downloadImg = function (blob, fileName) {\n        var a = document.createElement('a');\n        a.href = blob;\n        a.target = '_parent';\n        a.download = fileName;\n        (document.body || document.documentElement).appendChild(a);\n        a.click();\n        a.parentNode.removeChild(a);\n    };\n    Export.prototype.exportTransformedImage = function (tempContext) {\n        var parent = this.parent;\n        var degree = parent.transform.degree;\n        if (parent.rotateFlipColl.length > 0) {\n            for (var i = 0, len = parent.rotateFlipColl.length; i < len; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var flip = parent.rotateFlipColl[i];\n                if (typeof flip === 'number') {\n                    this.exportRotate(tempContext, flip);\n                }\n                else if (flip === 'horizontal') {\n                    this.exportFlip(tempContext, true, false);\n                }\n                else if (flip === 'vertical') {\n                    this.exportFlip(tempContext, false, true);\n                }\n            }\n        }\n        parent.transform.degree = degree;\n    };\n    Export.prototype.exportRotate = function (tempContext, degree) {\n        var parent = this.parent;\n        tempContext.clearRect(0, 0, tempContext.canvas.width, tempContext.canvas.height);\n        this.setMaxDim(parent.transform.degree, tempContext.canvas);\n        tempContext.translate(tempContext.canvas.width / 2, tempContext.canvas.height / 2);\n        tempContext.rotate(Math.PI / 180 * degree);\n        tempContext.drawImage(parent.inMemoryCanvas, -tempContext.canvas.height / 2, -tempContext.canvas.width / 2, tempContext.canvas.height, tempContext.canvas.width);\n        this.updateSaveContext(tempContext);\n    };\n    Export.prototype.exportFlip = function (tempContext, flipHorizontal, flipVertical) {\n        tempContext.clearRect(0, 0, tempContext.canvas.width, tempContext.canvas.height);\n        if (flipHorizontal) {\n            tempContext.translate(tempContext.canvas.width, 0);\n            tempContext.scale(-1, 1);\n        }\n        if (flipVertical) {\n            tempContext.translate(0, tempContext.canvas.height);\n            tempContext.scale(1, -1);\n        }\n        tempContext.drawImage(this.parent.inMemoryCanvas, 0, 0);\n        this.updateSaveContext(tempContext);\n    };\n    Export.prototype.updateSaveContext = function (tempContext) {\n        var inMemoryContext = this.parent.inMemoryCanvas.getContext('2d');\n        tempContext.setTransform(1, 0, 0, 1, 0, 0);\n        var imageData = tempContext.getImageData(0, 0, tempContext.canvas.width, tempContext.canvas.height);\n        this.parent.inMemoryCanvas.width = imageData.width;\n        this.parent.inMemoryCanvas.height = imageData.height;\n        inMemoryContext.putImageData(imageData, 0, 0);\n    };\n    Export.prototype.setMaxDim = function (degree, tempCanvas) {\n        var newWidth;\n        var newHeight;\n        if (degree % 90 === 0 && degree % 180 !== 0) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.currSelectionPoint)) {\n                newWidth = this.parent.baseImgCanvas.height;\n                newHeight = this.parent.baseImgCanvas.width;\n            }\n            else {\n                newWidth = this.parent.img.srcHeight;\n                newHeight = this.parent.img.srcWidth;\n            }\n        }\n        else if (degree % 180 === 0 || degree === 0) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.currSelectionPoint)) {\n                newWidth = this.parent.baseImgCanvas.width;\n                newHeight = this.parent.baseImgCanvas.height;\n            }\n            else {\n                newWidth = this.parent.img.srcWidth;\n                newHeight = this.parent.img.srcHeight;\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.aspectWidth)) {\n            newWidth = this.parent.aspectWidth;\n            newHeight = this.parent.aspectHeight;\n        }\n        tempCanvas.width = newWidth;\n        tempCanvas.height = newHeight;\n        var obj = { width: 0, height: 0 };\n        this.parent.notify('transform', { prop: 'calcMaxDimension', onPropertyChange: false,\n            value: { width: newWidth, height: newHeight, obj: obj, isImgShape: null } });\n        var maxDimension = obj;\n        tempCanvas.style.maxWidth = maxDimension.width + 'px';\n        tempCanvas.style.maxHeight = maxDimension.height + 'px';\n    };\n    return Export;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-image-editor/src/image-editor/action/export.js?");

/***/ })

}]);