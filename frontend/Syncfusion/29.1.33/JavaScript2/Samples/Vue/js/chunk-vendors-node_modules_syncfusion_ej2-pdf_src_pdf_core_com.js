"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-pdf_src_pdf_core_com"],{

/***/ "./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/decompressed-output.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/decompressed-output.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _DecompressedOutput: () => (/* binding */ _DecompressedOutput)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils */ \"./node_modules/@syncfusion/ej2-pdf/src/pdf/core/utils.js\");\n\nvar _DecompressedOutput = /** @class */ (function () {\n    function _DecompressedOutput() {\n        this._end = 0;\n        this._usedBytes = 0;\n        this._dOutput = Array(_DecompressedOutput._dOutSize).fill(0);\n        this._end = 0;\n        this._usedBytes = 0;\n    }\n    Object.defineProperty(_DecompressedOutput.prototype, \"_unusedBytes\", {\n        get: function () {\n            return _DecompressedOutput._dOutSize - this._usedBytes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _DecompressedOutput.prototype._write = function (b) {\n        this._dOutput[this._end++] = b;\n        this._end &= _DecompressedOutput._dOutMask;\n        ++this._usedBytes;\n    };\n    _DecompressedOutput.prototype._writeLD = function (length, distance) {\n        this._usedBytes += length;\n        var copyStart = (this._end - distance) & _DecompressedOutput._dOutMask;\n        var border = _DecompressedOutput._dOutSize - length;\n        if (copyStart <= border && this._end < border) {\n            if (length <= distance) {\n                (0,_utils__WEBPACK_IMPORTED_MODULE_0__._copyRange)(this._dOutput, this._end, this._dOutput, copyStart, copyStart + length);\n                this._end += length;\n            }\n            else {\n                while (length-- > 0) {\n                    this._dOutput[this._end++] = this._dOutput[copyStart++];\n                }\n            }\n        }\n        else {\n            while (length-- > 0) {\n                this._dOutput[this._end++] = this._dOutput[copyStart++];\n                this._end &= _DecompressedOutput._dOutMask;\n                copyStart &= _DecompressedOutput._dOutMask;\n            }\n        }\n    };\n    _DecompressedOutput.prototype._copyFrom = function (input, length) {\n        length = Math.min(Math.min(length, _DecompressedOutput._dOutSize - this._usedBytes), input._bytes);\n        var copied;\n        var tailLen = _DecompressedOutput._dOutSize - this._end;\n        if (length > tailLen) {\n            copied = input._copyTo(this._dOutput, this._end, tailLen);\n            if (copied === tailLen) {\n                copied += input._copyTo(this._dOutput, 0, length - tailLen);\n            }\n        }\n        else {\n            copied = input._copyTo(this._dOutput, this._end, length);\n        }\n        this._end = (this._end + copied) & _DecompressedOutput._dOutMask;\n        this._usedBytes += copied;\n        return copied;\n    };\n    _DecompressedOutput.prototype._copyTo = function (output, offset, length) {\n        var end;\n        if (length > this._usedBytes) {\n            end = this._end;\n            length = this._usedBytes;\n        }\n        else {\n            end = (this._end - this._usedBytes + length) & _DecompressedOutput._dOutMask;\n        }\n        var copied = length;\n        var tailLen = length - end;\n        var sourceStart = _DecompressedOutput._dOutSize - tailLen;\n        if (tailLen > 0) {\n            for (var i = 0; i < tailLen && i + sourceStart < this._dOutput.length && i + offset < output.length; i++) {\n                output[offset + i] = this._dOutput[sourceStart + i];\n            }\n            var sourceStartIndex_1 = _DecompressedOutput._dOutSize - tailLen;\n            (0,_utils__WEBPACK_IMPORTED_MODULE_0__._copyRange)(output, offset, this._dOutput, sourceStartIndex_1, sourceStartIndex_1 + tailLen);\n            offset += tailLen;\n            length = end;\n        }\n        sourceStart = end - length;\n        var sourceStartIndex = end - length;\n        (0,_utils__WEBPACK_IMPORTED_MODULE_0__._copyRange)(output, offset, this._dOutput, sourceStartIndex, end);\n        this._usedBytes -= copied;\n        return { 'count': copied, 'data': output };\n    };\n    _DecompressedOutput._dOutSize = 32768;\n    _DecompressedOutput._dOutMask = 32767;\n    return _DecompressedOutput;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/decompressed-output.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/deflate-stream.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/deflate-stream.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _DeflateStream: () => (/* binding */ _DeflateStream)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"./node_modules/@syncfusion/ej2-pdf/src/pdf/core/utils.js\");\n/* harmony import */ var _inflater__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inflater */ \"./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/inflater.js\");\n\n\nvar _DeflateStream = /** @class */ (function () {\n    function _DeflateStream(data, offset, leaveOpen) {\n        if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__._isNullOrUndefined)(data)) {\n            this._data = data;\n        }\n        else {\n            this._data = [];\n        }\n        if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__._isNullOrUndefined)(leaveOpen)) {\n            this._leaveOpen = leaveOpen;\n        }\n        this._offset = offset;\n        this._inflater = new _inflater__WEBPACK_IMPORTED_MODULE_1__._Inflater();\n        this._buffer = Array(8192).fill(0);\n    }\n    _DeflateStream.prototype._read = function (array, offset, count) {\n        var length;\n        var cOffset = offset;\n        var rCount = count;\n        while (true) { // eslint-disable-line\n            var inflateResult = this._inflater._inflate(array, cOffset, rCount);\n            length = inflateResult.count;\n            array = inflateResult.data;\n            cOffset += length;\n            rCount -= length;\n            if (rCount === 0) {\n                break;\n            }\n            if (this._inflater._finished) {\n                break;\n            }\n            var result = this._readBytes();\n            var bytes = result.count;\n            this._buffer = result.buffer;\n            if (bytes === 0) {\n                break;\n            }\n            this._inflater._setInput(this._buffer, 0, bytes);\n        }\n        return { count: count - rCount, data: array };\n    };\n    _DeflateStream.prototype._readBytes = function () {\n        if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__._isNullOrUndefined)(this._offset) && this._offset >= this._data.length) {\n            return { buffer: [], count: 0 };\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < this._buffer.length && i + this._offset < this._data.length; i++) {\n                this._buffer[Number.parseInt(i.toString(), 10)] = this._data[this._offset + i];\n                count++;\n            }\n            this._offset += count;\n            return { buffer: this._buffer, count: count };\n        }\n    };\n    return _DeflateStream;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/deflate-stream.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/enum.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/enum.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _BlockType: () => (/* binding */ _BlockType),\n/* harmony export */   _InflaterState: () => (/* binding */ _InflaterState)\n/* harmony export */ });\nvar _InflaterState;\n(function (_InflaterState) {\n    _InflaterState[_InflaterState[\"readingHeader\"] = 0] = \"readingHeader\";\n    _InflaterState[_InflaterState[\"readingBFinal\"] = 1] = \"readingBFinal\";\n    _InflaterState[_InflaterState[\"readingBType\"] = 2] = \"readingBType\";\n    _InflaterState[_InflaterState[\"readingNlCodes\"] = 3] = \"readingNlCodes\";\n    _InflaterState[_InflaterState[\"readingNdCodes\"] = 4] = \"readingNdCodes\";\n    _InflaterState[_InflaterState[\"readingCodes\"] = 5] = \"readingCodes\";\n    _InflaterState[_InflaterState[\"readingClCodes\"] = 6] = \"readingClCodes\";\n    _InflaterState[_InflaterState[\"readingTcBefore\"] = 7] = \"readingTcBefore\";\n    _InflaterState[_InflaterState[\"readingTcAfter\"] = 8] = \"readingTcAfter\";\n    _InflaterState[_InflaterState[\"decodeTop\"] = 9] = \"decodeTop\";\n    _InflaterState[_InflaterState[\"iLength\"] = 10] = \"iLength\";\n    _InflaterState[_InflaterState[\"fLength\"] = 11] = \"fLength\";\n    _InflaterState[_InflaterState[\"dCode\"] = 12] = \"dCode\";\n    _InflaterState[_InflaterState[\"unCompressedAligning\"] = 13] = \"unCompressedAligning\";\n    _InflaterState[_InflaterState[\"unCompressedByte1\"] = 14] = \"unCompressedByte1\";\n    _InflaterState[_InflaterState[\"unCompressedByte2\"] = 15] = \"unCompressedByte2\";\n    _InflaterState[_InflaterState[\"unCompressedByte3\"] = 16] = \"unCompressedByte3\";\n    _InflaterState[_InflaterState[\"unCompressedByte4\"] = 17] = \"unCompressedByte4\";\n    _InflaterState[_InflaterState[\"decodeUnCompressedBytes\"] = 18] = \"decodeUnCompressedBytes\";\n    _InflaterState[_InflaterState[\"srFooter\"] = 19] = \"srFooter\";\n    _InflaterState[_InflaterState[\"rFooter\"] = 20] = \"rFooter\";\n    _InflaterState[_InflaterState[\"vFooter\"] = 21] = \"vFooter\";\n    _InflaterState[_InflaterState[\"done\"] = 22] = \"done\";\n})(_InflaterState || (_InflaterState = {}));\nvar _BlockType;\n(function (_BlockType) {\n    _BlockType[_BlockType[\"unCompressedType\"] = 0] = \"unCompressedType\";\n    _BlockType[_BlockType[\"staticType\"] = 1] = \"staticType\";\n    _BlockType[_BlockType[\"dynamicType\"] = 2] = \"dynamicType\";\n})(_BlockType || (_BlockType = {}));\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/enum.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/huffman-tree.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/huffman-tree.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _HuffmanTree: () => (/* binding */ _HuffmanTree)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils */ \"./node_modules/@syncfusion/ej2-pdf/src/pdf/core/utils.js\");\n\nvar _HuffmanTree = /** @class */ (function () {\n    function _HuffmanTree() {\n    }\n    _HuffmanTree.prototype._load = function (code) {\n        this._clArray = code;\n        this._initialize();\n    };\n    _HuffmanTree.prototype._loadTree = function (isLengthTree) {\n        this._clArray = isLengthTree ? this._getLengthTree() : this._getDepthTree();\n        this._initialize();\n    };\n    _HuffmanTree.prototype._initialize = function () {\n        if (this._clArray.length === _HuffmanTree._maxLengthTree) {\n            this._tBits = 9;\n        }\n        else {\n            this._tBits = 7;\n        }\n        this._tMask = (1 << this._tBits) - 1;\n        this._createTable();\n    };\n    _HuffmanTree.prototype._getLengthTree = function () {\n        var lTree = Array(_HuffmanTree._maxLengthTree).fill(0);\n        for (var i = 0; i <= 143; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toUnsigned)(8, 8);\n        }\n        for (var i = 144; i <= 255; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toUnsigned)(9, 8);\n        }\n        for (var i = 256; i <= 279; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toUnsigned)(7, 8);\n        }\n        for (var i = 280; i <= 287; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toUnsigned)(8, 8);\n        }\n        return lTree;\n    };\n    _HuffmanTree.prototype._getDepthTree = function () {\n        return Array(_HuffmanTree._maxDepthTree).fill(5);\n    };\n    _HuffmanTree.prototype._calculateHashCode = function () {\n        var bit = Array(17).fill(0);\n        for (var i = 0; i < this._clArray.length; i++) {\n            bit[this._clArray[Number.parseInt(i.toString(), 10)]]++;\n        }\n        bit[0] = 0;\n        var next = Array(17).fill(0);\n        var temp = 0;\n        for (var bits = 1; bits <= 16; bits++) {\n            temp = (temp + bit[bits - 1]) << 1;\n            next[Number.parseInt(bits.toString(), 10)] = temp;\n        }\n        var code = Array(_HuffmanTree._maxLengthTree).fill(0);\n        for (var i = 0; i < this._clArray.length; i++) {\n            var len = this._clArray[Number.parseInt(i.toString(), 10)];\n            if (len > 0) {\n                code[Number.parseInt(i.toString(), 10)] = this._bitReverse(next[Number.parseInt(len.toString(), 10)], len);\n                next[Number.parseInt(len.toString(), 10)]++;\n            }\n        }\n        return code;\n    };\n    _HuffmanTree.prototype._bitReverse = function (code, length) {\n        var newcode = 0;\n        do {\n            newcode |= code & 1;\n            newcode <<= 1;\n            code >>= 1;\n        } while (--length > 0);\n        return newcode >> 1;\n    };\n    _HuffmanTree.prototype._createTable = function () {\n        var codeArray = this._calculateHashCode();\n        this._table = Array(1 << this._tBits).fill(0);\n        this._left = Array(2 * this._clArray.length).fill(0);\n        this._right = Array(2 * this._clArray.length).fill(0);\n        var avail = (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toSigned16)(this._clArray.length);\n        for (var ch = 0; ch < this._clArray.length; ch++) {\n            var len = this._clArray[Number.parseInt(ch.toString(), 10)];\n            if (len > 0) {\n                var start = codeArray[Number.parseInt(ch.toString(), 10)];\n                if (len <= this._tBits) {\n                    var i = 1 << len;\n                    if (start >= i) {\n                        throw new Error('Invalid Data.');\n                    }\n                    var l = 1 << (this._tBits - len);\n                    for (var j = 0; j < l; j++) {\n                        this._table[Number.parseInt(start.toString(), 10)] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toSigned16)(ch);\n                        start += i;\n                    }\n                }\n                else {\n                    var ofBits = len - this._tBits;\n                    var bitMask = 1 << this._tBits;\n                    var index = start & ((1 << this._tBits) - 1);\n                    var array = this._table;\n                    do {\n                        var value = (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toSigned16)(array[Number.parseInt(index.toString(), 10)]);\n                        if (value === 0) {\n                            array[Number.parseInt(index.toString(), 10)] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toSigned16)(-avail);\n                            value = (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toSigned16)(-avail);\n                            avail++;\n                        }\n                        if (value > 0) {\n                            throw new Error('Invalid Data.');\n                        }\n                        if ((start & bitMask) === 0) {\n                            array = this._left;\n                        }\n                        else {\n                            array = this._right;\n                        }\n                        index = -value;\n                        bitMask <<= 1;\n                        ofBits--;\n                    } while (ofBits !== 0);\n                    array[Number.parseInt(index.toString(), 10)] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toSigned16)(ch);\n                }\n            }\n        }\n    };\n    _HuffmanTree.prototype._getNextSymbol = function (input) {\n        var bitBuffer = input._load16Bits();\n        if (input._bInBuffer === 0) {\n            return -1;\n        }\n        var symbol = this._table[bitBuffer & this._tMask];\n        if (symbol < 0) {\n            var mask = (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toUnsigned)((1 << this._tBits), 32);\n            do {\n                symbol = -symbol;\n                if ((bitBuffer & mask) === 0) {\n                    symbol = this._left[Number.parseInt(symbol.toString(), 10)];\n                }\n                else {\n                    symbol = this._right[Number.parseInt(symbol.toString(), 10)];\n                }\n                mask <<= 1;\n            } while (symbol < 0);\n        }\n        var codeLength = this._clArray[Number.parseInt(symbol.toString(), 10)];\n        if (codeLength <= 0) {\n            throw new Error('Invalid Data.');\n        }\n        if (codeLength > input._bInBuffer) {\n            return -1;\n        }\n        input._skipBits(codeLength);\n        return symbol;\n    };\n    _HuffmanTree._maxLengthTree = 288;\n    _HuffmanTree._maxDepthTree = 32;\n    _HuffmanTree._nCLength = 19;\n    return _HuffmanTree;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/huffman-tree.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/in-buffer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/in-buffer.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _InBuffer: () => (/* binding */ _InBuffer)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils */ \"./node_modules/@syncfusion/ej2-pdf/src/pdf/core/utils.js\");\n\nvar _InBuffer = /** @class */ (function () {\n    function _InBuffer() {\n        this._bBuffer = 0;\n        this._bInBuffer = 0;\n        this._begin = 0;\n        this._end = 0;\n    }\n    Object.defineProperty(_InBuffer.prototype, \"_bytes\", {\n        get: function () {\n            return (this._end - this._begin) + Math.floor(this._bInBuffer / 8);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _InBuffer.prototype._needsInput = function () {\n        return this._begin === this._end;\n    };\n    _InBuffer.prototype._availableBits = function (count) {\n        if (this._bInBuffer < count) {\n            if (this._needsInput()) {\n                return false;\n            }\n            this._bBuffer |= (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toUnsigned)(this._buffer[this._begin++], 32) << this._bInBuffer;\n            this._bInBuffer += 8;\n            if (this._bInBuffer < count) {\n                if (this._needsInput()) {\n                    return false;\n                }\n                this._bBuffer |= (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toUnsigned)(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        return true;\n    };\n    _InBuffer.prototype._load16Bits = function () {\n        if (this._bInBuffer < 8) {\n            if (this._begin < this._end) {\n                this._bBuffer |= (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toUnsigned)(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n            if (this._begin < this._end) {\n                this._bBuffer |= (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toUnsigned)(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        else if (this._bInBuffer < 16) {\n            if (this._begin < this._end) {\n                this._bBuffer |= (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toUnsigned)(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        return this._bBuffer;\n    };\n    _InBuffer.prototype._getBitMask = function (count) {\n        return ((0,_utils__WEBPACK_IMPORTED_MODULE_0__._toUnsigned)(1, 32) << count) - 1;\n    };\n    _InBuffer.prototype._getBits = function (count) {\n        if (!this._availableBits(count)) {\n            return -1;\n        }\n        var result = this._bBuffer & this._getBitMask(count);\n        this._bBuffer >>= count;\n        this._bInBuffer -= count;\n        return result;\n    };\n    _InBuffer.prototype._copyTo = function (output, offset, length) {\n        var bitBuffer = 0;\n        while (this._bInBuffer > 0 && length > 0) {\n            output[offset++] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__._toUnsigned)(this._bBuffer, 8);\n            this._bBuffer >>= 8;\n            this._bInBuffer -= 8;\n            length--;\n            bitBuffer++;\n        }\n        if (length === 0) {\n            return bitBuffer;\n        }\n        var avail = this._end - this._begin;\n        if (length > avail) {\n            length = avail;\n        }\n        for (var i = 0; i < length && i + this._begin < this._buffer.length && i + offset < output.length; i++) {\n            output[offset + i] = this._buffer[this._begin + i];\n        }\n        this._begin += length;\n        return bitBuffer + length;\n    };\n    _InBuffer.prototype._setInput = function (buffer, offset, length) {\n        this._buffer = buffer;\n        this._begin = offset;\n        this._end = offset + length;\n    };\n    _InBuffer.prototype._skipBits = function (n) {\n        this._bBuffer >>= n;\n        this._bInBuffer -= n;\n    };\n    _InBuffer.prototype._skipByteBoundary = function () {\n        this._bBuffer >>= this._bInBuffer % 8;\n        this._bInBuffer = this._bInBuffer - (this._bInBuffer % 8);\n    };\n    return _InBuffer;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/in-buffer.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-pdf/src/pdf/core/content-parser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdf/src/pdf/core/content-parser.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _ContentLexer: () => (/* binding */ _ContentLexer),\n/* harmony export */   _ContentParser: () => (/* binding */ _ContentParser),\n/* harmony export */   _PdfRecord: () => (/* binding */ _PdfRecord)\n/* harmony export */ });\n/* harmony import */ var _enumerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enumerator */ \"./node_modules/@syncfusion/ej2-pdf/src/pdf/core/enumerator.js\");\n\nvar _ContentParser = /** @class */ (function () {\n    function _ContentParser(contentStream) {\n        this._recordCollection = [];\n        this._operands = [];\n        this._lexer = new _ContentLexer(contentStream);\n    }\n    _ContentParser.prototype._readContent = function () {\n        this._parseObject(_enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.eof);\n        return this._recordCollection;\n    };\n    _ContentParser.prototype._parseObject = function (tokenType) {\n        var symbol;\n        while ((symbol = this._getNextToken()) !== _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.eof) { // eslint-disable-line\n            if (symbol === tokenType || symbol === _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.none) {\n                return;\n            }\n            switch (symbol) {\n                case _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.comment:\n                    break;\n                case _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.number:\n                    if (this._lexer._operatorParams === '-') {\n                        this._operands.push('0');\n                    }\n                    else {\n                        this._operands.push(this._lexer._operatorParams);\n                    }\n                    break;\n                case _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.real:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.string:\n                case _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.hexString:\n                case _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.unicodeHexString:\n                case _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.unicodeString:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.name:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.operator:\n                    this._createRecord();\n                    this._operands = [];\n                    break;\n                case _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.beginArray:\n                    break;\n                case _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.endArray:\n                    throw new Error('Error while parsing content');\n            }\n        }\n    };\n    _ContentParser.prototype._createRecord = function () {\n        var operand = this._lexer._operatorParams;\n        var record = new _PdfRecord(operand, this._operands);\n        record._splittedText = this._lexer._text;\n        this._recordCollection.push(record);\n    };\n    _ContentParser.prototype._getNextToken = function () {\n        return this._lexer._getNextToken();\n    };\n    return _ContentParser;\n}());\n\nvar _ContentLexer = /** @class */ (function () {\n    function _ContentLexer(data) {\n        this._tokenType = _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.none;\n        this._currentCharacter = '\\0';\n        this._nextCharacter = '\\0';\n        this._offset = 0;\n        this._text = [];\n        this._data = data instanceof Uint8Array ? data : new Uint8Array(data);\n    }\n    _ContentLexer.prototype._getNextToken = function () {\n        this._operatorParams = '';\n        var value = this._moveToNextChar();\n        switch (value) {\n            case '%':\n                return this._tokenType = this._getComment();\n            case '/':\n                return this._tokenType = this._getName();\n            case '[':\n            case '(':\n                return this._tokenType = this._getLiteralString();\n            case '+':\n            case '-':\n                return this._tokenType = this._getNumber();\n            case '<':\n                return this._tokenType = this._getEncodedDecimalString();\n            case '.':\n                return this._tokenType = this._getNumber();\n            case '\"':\n            case '\\'':\n                return this._tokenType = this._getOperator();\n        }\n        if (!isNaN(parseInt(value, 10))) {\n            return this._tokenType = this._getNumber();\n        }\n        if ((/[a-zA-Z]/).test(value)) {\n            return this._tokenType = this._getOperator();\n        }\n        if (value === String.fromCharCode(65535)) {\n            return this._tokenType = _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.eof;\n        }\n        return this._tokenType = _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.none;\n    };\n    _ContentLexer.prototype._getComment = function () {\n        this._operatorParams = '';\n        var value;\n        var flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        while (flag) {\n            flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        }\n        return _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.comment;\n    };\n    _ContentLexer.prototype._getName = function () {\n        this._operatorParams = '';\n        var flag = false;\n        while (!flag) {\n            var value = this._consumeValue();\n            switch (value) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                case '%':\n                case '(':\n                case ')':\n                case '<':\n                case '>':\n                case '[':\n                case ']':\n                case '/':\n                    flag = true;\n                    return _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.name;\n                default:\n                    break;\n            }\n        }\n        return _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.none;\n    };\n    _ContentLexer.prototype._getNumber = function () {\n        var value = this._currentCharacter;\n        if (value === '+' || value === '-') {\n            this._operatorParams += this._currentCharacter;\n            value = this._getNextChar();\n        }\n        while (!isNaN(parseInt(value, 10)) || value === '.') {\n            if (!isNaN(parseInt(value, 10))) {\n                this._operatorParams += this._currentCharacter;\n            }\n            else if (value === '.') {\n                if (this._operatorParams.includes('.')) {\n                    break;\n                }\n                else {\n                    this._operatorParams += this._currentCharacter;\n                }\n            }\n            value = this._getNextChar();\n        }\n        return _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.number;\n    };\n    _ContentLexer.prototype._getOperator = function () {\n        this._operatorParams = '';\n        var value = this._currentCharacter;\n        while (this._isOperator(value)) {\n            value = this._consumeValue();\n        }\n        return _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.operator;\n    };\n    _ContentLexer.prototype._isOperator = function (value) {\n        if ((/[a-zA-Z]/).test(value)) {\n            return true;\n        }\n        switch (value) {\n            case '*':\n            case '\\'':\n            case '\\\"': // eslint-disable-line\n            case '1':\n            case '0':\n                return true;\n        }\n        return false;\n    };\n    _ContentLexer.prototype._getLiteralString = function () {\n        this._operatorParams = '';\n        var beginChar = this._currentCharacter;\n        var literal;\n        var value = this._consumeValue();\n        var flag = true;\n        var index = 0;\n        var char = '';\n        this._text = [];\n        while (flag) {\n            if (beginChar === '(') {\n                literal = this._getLiteralStringValue(value);\n                this._operatorParams += literal;\n                value = this._getNextChar();\n                flag = false;\n                break;\n            }\n            else {\n                if (value === '(') {\n                    if (char !== '') {\n                        this._text[Number.parseInt(index.toString(), 10)] = char.slice(0, -1);\n                        char = '';\n                        index++;\n                    }\n                    value = this._consumeValue();\n                    literal = this._getLiteralStringValue(value);\n                    this._text[Number.parseInt(index.toString(), 10)] = '(' + literal;\n                    index++;\n                    this._operatorParams += literal;\n                    value = this._getNextChar();\n                    char += value;\n                    continue;\n                }\n                else if (value === ']') {\n                    flag = false;\n                    value = this._consumeValue();\n                    break;\n                }\n                else if (value === '>') {\n                    this._text[Number.parseInt(index.toString(), 10)] = '<' + char;\n                    index++;\n                    char = '';\n                }\n                else if (value === '<') {\n                    if (char !== '') {\n                        this._text[Number.parseInt(index.toString(), 10)] = char.slice(0, -1);\n                        index++;\n                    }\n                    char = '';\n                }\n                value = this._consumeValue();\n                char += value;\n            }\n        }\n        return _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.string;\n    };\n    _ContentLexer.prototype._getEncodedDecimalString = function () {\n        var startChar = '<';\n        var endChar = '>';\n        var space = ' ';\n        var parentLevel = 0;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (value === startChar) {\n                parentLevel++;\n                value = this._consumeValue();\n            }\n            else if (value === endChar) {\n                if (parentLevel === 0) {\n                    this._consumeValue();\n                    flag = false;\n                    break;\n                }\n                else if (parentLevel === 1) {\n                    value = this._consumeValue();\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    if (parentLevel === 1 && value === space) {\n                        flag = false;\n                        break;\n                    }\n                }\n                else {\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    value = this._consumeValue();\n                }\n            }\n            else {\n                value = this._consumeValue();\n                if (value === String.fromCharCode(65535)) {\n                    flag = false;\n                    break;\n                }\n            }\n        }\n        return _enumerator__WEBPACK_IMPORTED_MODULE_0__._TokenType.hexString;\n    };\n    _ContentLexer.prototype._getLiteralStringValue = function (value) {\n        var parenthesesCount = 0;\n        var literal = '';\n        var flag = true;\n        while (flag) {\n            if (value === '\\\\') {\n                literal += value;\n                value = this._getNextChar();\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === '(') {\n                parenthesesCount++;\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === ')' && parenthesesCount !== 0) {\n                literal += value;\n                value = this._getNextChar();\n                parenthesesCount--;\n                continue;\n            }\n            if (value === ')' && parenthesesCount === 0) {\n                literal += value;\n                flag = false;\n                return literal;\n            }\n            literal += value;\n            value = this._getNextChar();\n        }\n        return literal;\n    };\n    _ContentLexer.prototype._consumeValue = function () {\n        this._operatorParams += this._currentCharacter;\n        return this._getNextChar();\n    };\n    _ContentLexer.prototype._moveToNextChar = function () {\n        while (this._currentCharacter !== String.fromCharCode(65535)) {\n            switch (this._currentCharacter) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                    this._getNextChar();\n                    break;\n                default:\n                    return this._currentCharacter;\n            }\n        }\n        return this._currentCharacter;\n    };\n    _ContentLexer.prototype._getNextChar = function () {\n        if (this._data.length <= this._offset) {\n            if (this._nextCharacter === 'Q' || (this._currentCharacter === 'D' && this._nextCharacter === 'o')) {\n                this._currentCharacter = this._nextCharacter;\n                this._nextCharacter = String.fromCharCode(65535);\n                return this._currentCharacter;\n            }\n            this._currentCharacter = String.fromCharCode(65535);\n            this._nextCharacter = String.fromCharCode(65535);\n        }\n        else {\n            this._currentCharacter = this._nextCharacter;\n            this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n            if (this._currentCharacter === '\\x0D') {\n                if (this._nextCharacter === '\\x0A') {\n                    this._currentCharacter = this._nextCharacter;\n                    if (this._data.length <= this._offset) {\n                        this._nextCharacter = String.fromCharCode(65535);\n                    }\n                    else {\n                        this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n                    }\n                }\n                else {\n                    this._currentCharacter = '\\x0A';\n                }\n            }\n        }\n        return this._currentCharacter;\n    };\n    return _ContentLexer;\n}());\n\nvar _PdfRecord = /** @class */ (function () {\n    function _PdfRecord(operator, operands) {\n        this._operator = operator;\n        this._operands = operands;\n    }\n    return _PdfRecord;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdf/src/pdf/core/content-parser.js?");

/***/ })

}]);