"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-grids_src_grid_actions_batch-edit_js-29b31f92"],{

/***/ "./node_modules/@syncfusion/ej2-grids/src/grid/actions/batch-edit.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-grids/src/grid/actions/batch-edit.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BatchEdit: () => (/* binding */ BatchEdit)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/enum */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/util */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/constant */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _renderer_row_renderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../renderer/row-renderer */ \"./node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-renderer.js\");\n/* harmony import */ var _renderer_cell_renderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../renderer/cell-renderer */ \"./node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js\");\n/* harmony import */ var _models_row__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../models/row */ \"./node_modules/@syncfusion/ej2-grids/src/grid/models/row.js\");\n/* harmony import */ var _models_cell__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../models/cell */ \"./node_modules/@syncfusion/ej2-grids/src/grid/models/cell.js\");\n/* harmony import */ var _services_row_model_generator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../services/row-model-generator */ \"./node_modules/@syncfusion/ej2-grids/src/grid/services/row-model-generator.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"./node_modules/@syncfusion/ej2-data/index.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../base/string-literals */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent, serviceLocator, renderer) {\n        this.cellDetails = {};\n        this.originalCell = {};\n        this.cloneCell = {};\n        this.editNext = false;\n        this.preventSaveCell = false;\n        this.initialRender = true;\n        this.validationColObj = [];\n        /** @hidden */\n        this.addBatchRow = false;\n        this.prevEditedBatchCell = false;\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.renderer = renderer;\n        this.focus = serviceLocator.getService('focus');\n        this.addEventListener();\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.evtHandlers = [{ event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.click, handler: this.clickHandler },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.dblclick, handler: this.dblClickHandler },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.beforeCellFocused, handler: this.onBeforeCellFocused },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.cellFocused, handler: this.onCellFocused },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.doubleTap, handler: this.dblClickHandler },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.keyPressed, handler: this.keyDownHandler },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.editNextValCell, handler: this.editNextValCell },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.destroy, handler: this.destroy }];\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addRemoveEventListener)(this.parent, this.evtHandlers, true, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.parent.element, 'mousedown', this.mouseDownHandler, this);\n        this.dataBoundFunction = this.dataBound.bind(this);\n        this.batchCancelFunction = this.batchCancel.bind(this);\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_3__.dataBound, this.dataBoundFunction);\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_3__.batchCancel, this.batchCancelFunction);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addRemoveEventListener)(this.parent, this.evtHandlers, false);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.element, 'mousedown', this.mouseDownHandler);\n        this.parent.removeEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_3__.dataBound, this.dataBoundFunction);\n        this.parent.removeEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_3__.batchCancel, this.batchCancelFunction);\n    };\n    BatchEdit.prototype.batchCancel = function () {\n        this.parent.focusModule.restoreFocus({ requestType: 'batchCancel' });\n    };\n    BatchEdit.prototype.dataBound = function () {\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.toolbarRefresh, {});\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    BatchEdit.prototype.mouseDownHandler = function (e) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.element.querySelector('.e-gridform'))) {\n            this.mouseDownElement = e.target;\n        }\n        else {\n            this.mouseDownElement = undefined;\n        }\n    };\n    BatchEdit.prototype.clickHandler = function (e) {\n        if (!(0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.target, this.parent.element.id + '_add', true)) {\n            if ((this.parent.isEdit && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.form, 'td') !== (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, 'td'))\n                && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.mouseDownElement) || this.mouseDownElement === e.target) {\n                this.saveCell();\n                this.editNextValCell();\n            }\n            if ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.rowCell) && !this.parent.isEdit) {\n                this.setCellIdx(e.target);\n            }\n        }\n    };\n    BatchEdit.prototype.dblClickHandler = function (e) {\n        var target = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.rowCell);\n        var tr = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.row);\n        var rowIndex = tr && parseInt(tr.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.ariaRowIndex), 10) - 1;\n        var colIndex = target && parseInt(target.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.ariaColIndex), 10) - 1;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowIndex) && !isNaN(colIndex)\n            && !target.parentElement.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.editedRow) &&\n            this.parent.getColumns()[parseInt(colIndex.toString(), 10)].allowEditing) {\n            this.editCell(rowIndex, this.parent.getColumns()[parseInt(colIndex.toString(), 10)].field, this.isAddRow(rowIndex));\n        }\n    };\n    BatchEdit.prototype.onBeforeCellFocused = function (e) {\n        if (this.parent.isEdit && this.validateFormObj() &&\n            (e.byClick || (['tab', 'shiftTab', 'enter', 'shiftEnter'].indexOf(e.keyArgs.action) > -1))) {\n            e.cancel = true;\n            if (e.byClick) {\n                e.clickArgs.preventDefault();\n            }\n            else {\n                e.keyArgs.preventDefault();\n            }\n        }\n    };\n    BatchEdit.prototype.onCellFocused = function (e) {\n        var clear = (!e.container.isContent || !e.container.isDataCell) && !(this.parent.frozenRows && e.container.isHeader);\n        if (this.parent.focusModule.active) {\n            this.prevEditedBatchCell = this.parent.focusModule.active.matrix.current.toString() === this.prevEditedBatchCellMatrix()\n                .toString();\n            this.crtRowIndex = [].slice.call(this.parent.focusModule.active.getTable().rows).indexOf((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.element, 'tr'));\n        }\n        if (!e.byKey || clear) {\n            if ((this.parent.isEdit && clear)) {\n                this.saveCell();\n            }\n            return;\n        }\n        var _a = e.container.indexes, rowIndex = _a[0], cellIndex = _a[1];\n        var actualIndex = e.element.getAttribute('aria-colindex') ? parseInt(e.element.getAttribute('aria-colindex'), 10) - 1 : cellIndex;\n        if (actualIndex !== cellIndex) {\n            cellIndex = actualIndex;\n        }\n        if (this.parent.frozenRows && e.container.isContent) {\n            rowIndex += ((this.parent.getContent().querySelector('.e-hiddenrow') ? 0 : this.parent.frozenRows) +\n                this.parent.getHeaderContent().querySelectorAll('.e-insertedrow').length);\n        }\n        var isEdit = this.parent.isEdit;\n        if (!this.parent.element.getElementsByClassName('e-popup-open').length) {\n            isEdit = isEdit && !this.validateFormObj();\n            switch (e.keyArgs.action) {\n                case 'tab':\n                case 'shiftTab':\n                    // eslint-disable-next-line no-case-declarations\n                    var indent = this.parent.isRowDragable() && this.parent.isDetail() ? 2 :\n                        this.parent.isRowDragable() || this.parent.isDetail() ? 1 : 0;\n                    // eslint-disable-next-line no-case-declarations\n                    var col = this.parent.getColumns()[cellIndex - indent];\n                    if (col && !this.parent.isEdit) {\n                        this.editCell(rowIndex, col.field);\n                    }\n                    if (isEdit || this.parent.isLastCellPrimaryKey) {\n                        this.editCellFromIndex(rowIndex, cellIndex);\n                    }\n                    break;\n                case 'enter':\n                case 'shiftEnter':\n                    e.keyArgs.preventDefault();\n                    // eslint-disable-next-line no-case-declarations\n                    var args = { cancel: false, keyArgs: e.keyArgs };\n                    this.parent.notify('beforeFocusCellEdit', args);\n                    if (!args.cancel && isEdit) {\n                        this.editCell(rowIndex, this.cellDetails.column.field);\n                    }\n                    break;\n                case 'f2':\n                    this.editCellFromIndex(rowIndex, cellIndex);\n                    this.focus.focus();\n                    break;\n            }\n        }\n    };\n    BatchEdit.prototype.isAddRow = function (index) {\n        return this.parent.getDataRows()[parseInt(index.toString(), 10)].classList.contains('e-insertedrow');\n    };\n    BatchEdit.prototype.editCellFromIndex = function (rowIdx, cellIdx) {\n        this.cellDetails.rowIndex = rowIdx;\n        this.cellDetails.cellIndex = cellIdx;\n        this.editCell(rowIdx, this.parent.getColumns()[parseInt(cellIdx.toString(), 10)].field, this.isAddRow(rowIdx));\n    };\n    BatchEdit.prototype.closeEdit = function () {\n        var gObj = this.parent;\n        var rows = this.parent.getRowsObject();\n        var argument = { cancel: false, batchChanges: this.getBatchChanges() };\n        gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.beforeBatchCancel, argument);\n        if (argument.cancel) {\n            return;\n        }\n        if (gObj.isEdit) {\n            this.saveCell(true);\n        }\n        this.isAdded = false;\n        gObj.clearSelection();\n        for (var i = 0; i < rows.length; i++) {\n            var isInsert = false;\n            var isDirty = rows[parseInt(i.toString(), 10)].isDirty;\n            isInsert = this.removeBatchElementChanges(rows[parseInt(i.toString(), 10)], isDirty);\n            if (isInsert) {\n                rows.splice(i, 1);\n            }\n            if (isInsert) {\n                i--;\n            }\n        }\n        if (!gObj.getContentTable().querySelector('tr.e-row')) {\n            gObj.renderModule.renderEmptyRow();\n        }\n        var args = {\n            requestType: 'batchCancel', rows: this.parent.getRowsObject()\n        };\n        gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.batchCancel, {\n            rows: this.parent.getRowsObject().length ? this.parent.getRowsObject() :\n                [new _models_row__WEBPACK_IMPORTED_MODULE_6__.Row({ isDataRow: true, cells: [new _models_cell__WEBPACK_IMPORTED_MODULE_7__.Cell({ isDataCell: true, visible: true })] })]\n        });\n        gObj.selectRow(this.cellDetails.rowIndex);\n        this.refreshRowIdx();\n        gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.toolbarRefresh, {});\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.tooltipDestroy, {});\n        args = { requestType: 'batchCancel', rows: this.parent.getRowsObject() };\n        gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.batchCancel, args);\n    };\n    BatchEdit.prototype.removeBatchElementChanges = function (row, isDirty) {\n        var gObj = this.parent;\n        var rowRenderer = new _renderer_row_renderer__WEBPACK_IMPORTED_MODULE_4__.RowRenderer(this.serviceLocator, null, this.parent);\n        var isInstertedRemoved = false;\n        if (isDirty) {\n            row.isDirty = isDirty;\n            var tr = gObj.getRowElementByUID(row.uid);\n            if (tr) {\n                if (tr.classList.contains('e-insertedrow')) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(tr);\n                    isInstertedRemoved = true;\n                }\n                else {\n                    (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.refreshForeignData)(row, this.parent.getForeignKeyColumns(), row.data);\n                    delete row.changes;\n                    delete row.edit;\n                    row.isDirty = false;\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(tr, [], ['e-hiddenrow', 'e-updatedtd']);\n                    rowRenderer.refresh(row, gObj.getColumns(), false);\n                }\n                if (this.parent.aggregates.length > 0) {\n                    var type = 'type';\n                    var editType = [];\n                    editType[\"\" + type] = 'cancel';\n                    this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.refreshFooterRenderer, editType);\n                    if (this.parent.groupSettings.columns.length > 0) {\n                        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.groupAggregates, editType);\n                    }\n                }\n            }\n        }\n        return isInstertedRemoved;\n    };\n    BatchEdit.prototype.deleteRecord = function (fieldname, data) {\n        this.saveCell();\n        if (this.validateFormObj()) {\n            this.saveCell(true);\n        }\n        this.isAdded = false;\n        this.bulkDelete(fieldname, data);\n        if (this.parent.aggregates.length > 0) {\n            if (!(this.parent.isReact || this.parent.isVue)) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.refreshFooterRenderer, {});\n            }\n            if (this.parent.groupSettings.columns.length > 0) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.groupAggregates, {});\n            }\n            if (this.parent.isReact || this.parent.isVue) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.refreshFooterRenderer, {});\n            }\n        }\n    };\n    BatchEdit.prototype.addRecord = function (data) {\n        this.bulkAddRow(data);\n    };\n    BatchEdit.prototype.endEdit = function () {\n        if (this.parent.isEdit && this.validateFormObj()) {\n            return;\n        }\n        this.batchSave();\n    };\n    BatchEdit.prototype.validateFormObj = function () {\n        return this.parent.editModule.formObj && !this.parent.editModule.formObj.validate();\n    };\n    BatchEdit.prototype.batchSave = function () {\n        var gObj = this.parent;\n        var deletedRecords = 'deletedRecords';\n        if (gObj.isCheckBoxSelection) {\n            var checkAllBox = gObj.element.querySelector('.e-checkselectall').parentElement;\n            if (checkAllBox.classList.contains('e-checkbox-disabled') &&\n                gObj.pageSettings.totalRecordsCount > gObj.currentViewData.length) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([checkAllBox], ['e-checkbox-disabled']);\n            }\n        }\n        this.saveCell();\n        if (gObj.isEdit || this.editNextValCell() || gObj.isEdit) {\n            return;\n        }\n        var changes = this.getBatchChanges();\n        if (this.parent.selectionSettings.type === 'Multiple' && changes[\"\" + deletedRecords].length &&\n            this.parent.selectionSettings.persistSelection) {\n            changes[\"\" + deletedRecords] = this.removeSelectedData;\n            this.removeSelectedData = [];\n        }\n        var original = {\n            changedRecords: this.parent.getRowsObject()\n                .filter(function (row) { return row.isDirty && ['add', 'delete'].indexOf(row.edit) === -1; })\n                .map(function (row) { return row.data; })\n        };\n        var args = { batchChanges: changes, cancel: false };\n        gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.beforeBatchSave, args, function (beforeBatchSaveArgs) {\n            if (beforeBatchSaveArgs.cancel) {\n                return;\n            }\n            gObj.showSpinner();\n            gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.bulkSave, { changes: changes, original: original });\n        });\n    };\n    BatchEdit.prototype.getBatchChanges = function () {\n        var changes = {\n            addedRecords: [],\n            deletedRecords: [],\n            changedRecords: []\n        };\n        var rows = this.parent.getRowsObject();\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            if (row.isDirty) {\n                switch (row.edit) {\n                    case 'add':\n                        changes.addedRecords.push(row.changes);\n                        break;\n                    case 'delete':\n                        changes.deletedRecords.push(row.data);\n                        break;\n                    default:\n                        changes.changedRecords.push(row.changes);\n                }\n            }\n        }\n        return changes;\n    };\n    /**\n     * @param {string} uid - specifes the uid\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.removeRowObjectFromUID = function (uid) {\n        var rows = this.parent.getRowsObject();\n        var i = 0;\n        for (var len = rows.length; i < len; i++) {\n            if (rows[parseInt(i.toString(), 10)].uid === uid) {\n                break;\n            }\n        }\n        rows.splice(i, 1);\n    };\n    /**\n     * @param {Row<Column>} row - specifies the row object\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.addRowObject = function (row) {\n        var gObj = this.parent;\n        var isTop = gObj.editSettings.newRowPosition === 'Top';\n        var rowClone = row.clone();\n        if (isTop) {\n            gObj.getRowsObject().unshift(rowClone);\n        }\n        else {\n            gObj.getRowsObject().push(rowClone);\n        }\n    };\n    // tslint:disable-next-line:max-func-body-length\n    BatchEdit.prototype.bulkDelete = function (fieldname, data) {\n        var _this = this;\n        this.removeSelectedData = [];\n        var gObj = this.parent;\n        var index = gObj.selectedRowIndex;\n        var selectedRows = gObj.getSelectedRows();\n        var args = {\n            primaryKey: this.parent.getPrimaryKeyFieldNames(),\n            rowIndex: index,\n            rowData: data ? data : gObj.getSelectedRecords(),\n            cancel: false\n        };\n        if (data) {\n            args.row = gObj.editModule.deleteRowUid ? gObj.getRowElementByUID(gObj.editModule.deleteRowUid)\n                : gObj.getRows()[gObj.getCurrentViewRecords().indexOf(data)];\n        }\n        else {\n            args.row = selectedRows;\n        }\n        if (!args.row) {\n            return;\n        }\n        // tslint:disable-next-line:max-func-body-length\n        gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.beforeBatchDelete, args, function (beforeBatchDeleteArgs) {\n            if (beforeBatchDeleteArgs.cancel) {\n                return;\n            }\n            _this.removeSelectedData = gObj.getSelectedRecords();\n            gObj.clearSelection();\n            beforeBatchDeleteArgs.row = beforeBatchDeleteArgs.row ?\n                beforeBatchDeleteArgs.row : data ? gObj.getRows()[parseInt(index.toString(), 10)] :\n                selectedRows;\n            if (selectedRows.length === 1 || data) {\n                if (Array.isArray(beforeBatchDeleteArgs.row)) {\n                    beforeBatchDeleteArgs.row = beforeBatchDeleteArgs.row[0];\n                }\n                var uid = beforeBatchDeleteArgs.row.getAttribute('data-uid');\n                uid = data && _this.parent.editModule.deleteRowUid ? uid = _this.parent.editModule.deleteRowUid : uid;\n                if (beforeBatchDeleteArgs.row.classList.contains('e-insertedrow')) {\n                    _this.removeRowObjectFromUID(uid);\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(beforeBatchDeleteArgs.row);\n                }\n                else {\n                    var rowObj = gObj.getRowObjectFromUID(uid);\n                    rowObj.isDirty = true;\n                    rowObj.edit = 'delete';\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(beforeBatchDeleteArgs.row, ['e-hiddenrow', 'e-updatedtd'], []);\n                    if (gObj.frozenRows && index < gObj.frozenRows && gObj.getDataRows().length >= gObj.frozenRows) {\n                        gObj.getHeaderTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody).appendChild(gObj.getRowByIndex(gObj.frozenRows - 1));\n                    }\n                }\n                delete beforeBatchDeleteArgs.row;\n            }\n            else {\n                if (data) {\n                    index = parseInt(beforeBatchDeleteArgs.row.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.ariaRowIndex), 10) - 1;\n                }\n                for (var i = 0; i < selectedRows.length; i++) {\n                    var uniqueid = selectedRows[parseInt(i.toString(), 10)].getAttribute('data-uid');\n                    if (selectedRows[parseInt(i.toString(), 10)].classList.contains('e-insertedrow')) {\n                        _this.removeRowObjectFromUID(uniqueid);\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(selectedRows[parseInt(i.toString(), 10)]);\n                    }\n                    else {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(selectedRows[parseInt(i.toString(), 10)], ['e-hiddenrow', 'e-updatedtd'], []);\n                        var selectedRow = gObj.getRowObjectFromUID(uniqueid);\n                        selectedRow.isDirty = true;\n                        selectedRow.edit = 'delete';\n                        if (gObj.frozenRows && index < gObj.frozenRows && gObj.getDataRows().length >= gObj.frozenRows) {\n                            gObj.getHeaderTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody).appendChild(gObj.getRowByIndex(gObj.frozenRows - 1));\n                        }\n                    }\n                }\n                delete beforeBatchDeleteArgs.row;\n            }\n            _this.refreshRowIdx();\n            if (data) {\n                gObj.editModule.deleteRowUid = undefined;\n            }\n            if (!gObj.isCheckBoxSelection) {\n                gObj.selectRow(index);\n            }\n            gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.batchDelete, beforeBatchDeleteArgs);\n            gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.batchDelete, { rows: _this.parent.getRowsObject() });\n            gObj.focusModule.restoreFocus({ requestType: 'batchDelete' });\n            gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.toolbarRefresh, {});\n            if (!gObj.getContentTable().querySelector('tr.e-row')) {\n                gObj.renderModule.renderEmptyRow();\n            }\n        });\n    };\n    BatchEdit.prototype.refreshRowIdx = function () {\n        var gObj = this.parent;\n        var rows = gObj.getAllDataRows(true);\n        var dataObjects = gObj.getRowsObject().filter(function (row) { return !row.isDetailRow; });\n        for (var i = 0, j = 0, len = rows.length; i < len; i++) {\n            if (rows[parseInt(i.toString(), 10)].classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.row) && !rows[parseInt(i.toString(), 10)].classList.contains('e-hiddenrow')) {\n                rows[parseInt(i.toString(), 10)].setAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.ariaRowIndex, (j + 1).toString());\n                dataObjects[parseInt(i.toString(), 10)].index = j;\n                j++;\n            }\n            else {\n                rows[parseInt(i.toString(), 10)].removeAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.ariaRowIndex);\n                dataObjects[parseInt(i.toString(), 10)].index = -1;\n            }\n        }\n    };\n    BatchEdit.prototype.bulkAddRow = function (data) {\n        var _this = this;\n        var gObj = this.parent;\n        if (!gObj.editSettings.allowAdding) {\n            if (gObj.isEdit) {\n                this.saveCell();\n            }\n            return;\n        }\n        if (gObj.isEdit) {\n            this.saveCell();\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.editNextValCell, {});\n        }\n        if (this.validateFormObj()) {\n            return;\n        }\n        if (this.initialRender) {\n            var visibleColumns = gObj.getVisibleColumns();\n            for (var i = 0; i < visibleColumns.length; i++) {\n                if (visibleColumns[parseInt(i.toString(), 10)].validationRules &&\n                    visibleColumns[parseInt(i.toString(), 10)].validationRules['required']) {\n                    var obj = { field: (visibleColumns[parseInt(i.toString(), 10)]['field']).slice(), cellIdx: i };\n                    this.validationColObj.push(obj);\n                }\n            }\n            this.initialRender = false;\n        }\n        this.parent.element.classList.add('e-editing');\n        var defaultData = data ? data : this.getDefaultData();\n        var args = {\n            defaultData: defaultData,\n            primaryKey: gObj.getPrimaryKeyFieldNames(),\n            cancel: false\n        };\n        gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.beforeBatchAdd, args, function (beforeBatchAddArgs) {\n            if (beforeBatchAddArgs.cancel) {\n                return;\n            }\n            _this.isAdded = true;\n            gObj.clearSelection();\n            var row = new _renderer_row_renderer__WEBPACK_IMPORTED_MODULE_4__.RowRenderer(_this.serviceLocator, null, _this.parent);\n            var model = new _services_row_model_generator__WEBPACK_IMPORTED_MODULE_8__.RowModelGenerator(_this.parent);\n            var modelData = model.generateRows([beforeBatchAddArgs.defaultData]);\n            var tr = row.render(modelData[0], gObj.getColumns());\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addFixedColumnBorder)(tr);\n            var col;\n            var index;\n            for (var i = 0; i < _this.parent.groupSettings.columns.length; i++) {\n                tr.insertBefore(_this.parent.createElement('td', { className: 'e-indentcell' }), tr.firstChild);\n                modelData[0].cells.unshift(new _models_cell__WEBPACK_IMPORTED_MODULE_7__.Cell({ cellType: _base_enum__WEBPACK_IMPORTED_MODULE_1__.CellType.Indent }));\n            }\n            var tbody = gObj.getContentTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n            tr.classList.add('e-insertedrow');\n            if (tbody.querySelector('.e-emptyrow')) {\n                var emptyRow = tbody.querySelector('.e-emptyrow');\n                emptyRow.parentNode.removeChild(emptyRow);\n                if (gObj.frozenRows && gObj.element.querySelector('.e-frozenrow-empty')) {\n                    gObj.element.querySelector('.e-frozenrow-empty').classList.remove('e-frozenrow-empty');\n                }\n            }\n            if (gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top') {\n                tbody = gObj.getHeaderTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n            }\n            else {\n                tbody = gObj.getContentTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n            }\n            if (_this.parent.editSettings.newRowPosition === 'Top') {\n                tbody.insertBefore(tr, tbody.firstChild);\n            }\n            else {\n                tbody.appendChild(tr);\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([].slice.call(tr.getElementsByClassName(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.rowCell)), ['e-updatedtd']);\n            modelData[0].isDirty = true;\n            modelData[0].changes = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, {}, modelData[0].data, true);\n            modelData[0].edit = 'add';\n            _this.addRowObject(modelData[0]);\n            _this.refreshRowIdx();\n            _this.focus.forgetPrevious();\n            gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.batchAdd, { rows: _this.parent.getRowsObject() });\n            var changes = _this.getBatchChanges();\n            var btmIdx = _this.getBottomIndex();\n            if (_this.parent.editSettings.newRowPosition === 'Top') {\n                gObj.selectRow(0);\n            }\n            else {\n                gObj.selectRow(btmIdx);\n            }\n            if (!data) {\n                index = _this.findNextEditableCell(0, true);\n                col = gObj.getColumns()[parseInt(index.toString(), 10)];\n                if (_this.parent.editSettings.newRowPosition === 'Top') {\n                    _this.editCell(0, col.field, true);\n                }\n                else {\n                    _this.editCell(btmIdx, col.field, true);\n                }\n            }\n            if (_this.parent.aggregates.length > 0 && (data || changes[_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.addedRecords].length)) {\n                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.refreshFooterRenderer, {});\n            }\n            var args1 = {\n                defaultData: beforeBatchAddArgs.defaultData, row: tr,\n                columnObject: col, columnIndex: index, primaryKey: beforeBatchAddArgs.primaryKey,\n                cell: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(index) ? tr.cells[parseInt(index.toString(), 10)] : undefined\n            };\n            gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.batchAdd, args1);\n        });\n    };\n    BatchEdit.prototype.findNextEditableCell = function (columnIndex, isAdd, isValOnly) {\n        var cols = this.parent.getColumns();\n        var endIndex = cols.length;\n        var validation;\n        for (var i = columnIndex; i < endIndex; i++) {\n            validation = isValOnly ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cols[parseInt(i.toString(), 10)].validationRules) : false;\n            // if (!isAdd && this.checkNPCell(cols[parseInt(i.toString(), 10)])) {\n            //     return i;\n            // } else\n            if (isAdd && (!cols[parseInt(i.toString(), 10)].template || cols[parseInt(i.toString(), 10)].field)\n                && cols[parseInt(i.toString(), 10)].allowEditing && cols[parseInt(i.toString(), 10)].visible &&\n                !(cols[parseInt(i.toString(), 10)].isIdentity && cols[parseInt(i.toString(), 10)].isPrimaryKey) && !validation) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    BatchEdit.prototype.getDefaultData = function () {\n        var gObj = this.parent;\n        var data = {};\n        var dValues = { 'number': 0, 'string': null, 'boolean': false, 'date': null, 'datetime': null, 'dateonly': null };\n        for (var _i = 0, _a = (gObj.columnModel); _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.field) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)(col.field, Object.keys(col).indexOf('defaultValue') >= 0 ? col.defaultValue : dValues[col.type], data);\n            }\n        }\n        return data;\n    };\n    BatchEdit.prototype.setCellIdx = function (target) {\n        var gLen = 0;\n        if (this.parent.allowGrouping) {\n            gLen = this.parent.groupSettings.columns.length;\n        }\n        this.cellDetails.cellIndex = target.cellIndex - gLen;\n        this.cellDetails.rowIndex = parseInt(target.getAttribute('index'), 10);\n    };\n    BatchEdit.prototype.editCell = function (index, field, isAdd) {\n        var gObj = this.parent;\n        var col = gObj.getColumnByField(field);\n        this.index = index;\n        this.field = field;\n        this.isAdd = isAdd;\n        var visibleRows = gObj.getDataRows();\n        visibleRows = visibleRows.filter(function (row) { return row.style.display !== 'none' && !row.classList.contains('e-childrow-hidden'); });\n        var lastRowIndex = parseInt(visibleRows[visibleRows.length - 1].getAttribute('aria-rowindex'), 10) - 1;\n        var checkEdit = gObj.isEdit && !(this.cellDetails.column.field === field\n            && (this.cellDetails.rowIndex === index && lastRowIndex !== index && this.prevEditedBatchCell));\n        if (gObj.editSettings.allowEditing) {\n            if (!checkEdit && (col.allowEditing || (!col.allowEditing && gObj.focusModule.active\n                && gObj.focusModule.active.getTable().rows[this.crtRowIndex]\n                && gObj.focusModule.active.getTable().rows[this.crtRowIndex].classList.contains('e-insertedrow')))) {\n                this.editCellExtend(index, field, isAdd);\n            }\n            else if (checkEdit) {\n                this.editNext = true;\n                this.saveCell();\n            }\n        }\n    };\n    BatchEdit.prototype.editCellExtend = function (index, field, isAdd) {\n        var _this = this;\n        var gObj = this.parent;\n        var col = gObj.getColumnByField(field);\n        var keys = gObj.getPrimaryKeyFieldNames();\n        if (gObj.isEdit) {\n            return;\n        }\n        var rowData = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, {}, this.getDataByIndex(index), true);\n        var row = gObj.getDataRows()[parseInt(index.toString(), 10)];\n        rowData = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, {}, this.getDataByIndex(index), true);\n        if ((keys[0] === col.field && !row.classList.contains('e-insertedrow')) || col.columns ||\n            (col.isPrimaryKey && col.isIdentity) || col.commands) {\n            this.parent.isLastCellPrimaryKey = true;\n            return;\n        }\n        this.parent.isLastCellPrimaryKey = false;\n        this.parent.element.classList.add('e-editing');\n        var rowObj = gObj.getRowObjectFromUID(row.getAttribute('data-uid'));\n        var cells = [].slice.apply(row.cells);\n        var args = {\n            columnName: col.field, isForeignKey: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(col.foreignKeyValue),\n            primaryKey: keys, rowData: rowData,\n            validationRules: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, col.validationRules ? col.validationRules : {}),\n            value: (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getObject)(col.field, rowData),\n            type: !isAdd ? 'edit' : 'add', cancel: false,\n            foreignKeyData: rowObj && rowObj.foreignKeyData\n        };\n        args.cell = cells[this.getColIndex(cells, this.getCellIdx(col.uid))];\n        args.row = row;\n        args.columnObject = col;\n        if (!args.cell) {\n            return;\n        }\n        gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.cellEdit, args, function (cellEditArgs) {\n            if (cellEditArgs.cancel) {\n                return;\n            }\n            cellEditArgs.cell = cellEditArgs.cell ? cellEditArgs.cell : cells[_this.getColIndex(cells, _this.getCellIdx(col.uid))];\n            cellEditArgs.row = cellEditArgs.row ? cellEditArgs.row : row;\n            cellEditArgs.columnObject = cellEditArgs.columnObject ? cellEditArgs.columnObject : col;\n            // cellEditArgs.columnObject.index = isNullOrUndefined(cellEditArgs.columnObject.index) ? 0 : cellEditArgs.columnObject.index;\n            _this.cellDetails = {\n                rowData: rowData, column: col, value: cellEditArgs.value, isForeignKey: cellEditArgs.isForeignKey, rowIndex: index,\n                cellIndex: parseInt(cellEditArgs.cell.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.ariaColIndex), 10) - 1,\n                foreignKeyData: cellEditArgs.foreignKeyData\n            };\n            if (cellEditArgs.cell.classList.contains('e-updatedtd')) {\n                _this.isColored = true;\n                cellEditArgs.cell.classList.remove('e-updatedtd');\n            }\n            gObj.isEdit = true;\n            var checkSelect = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellEditArgs.row.querySelector('.e-selectionbackground')) ? true : false;\n            gObj.clearSelection();\n            if ((!gObj.isCheckBoxSelection || !gObj.isPersistSelection) && (checkSelect || !gObj.selectionSettings.checkboxOnly)) {\n                gObj.selectRow(_this.cellDetails.rowIndex, true);\n            }\n            _this.renderer.update(cellEditArgs);\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.batchEditFormRendered, cellEditArgs);\n            _this.form = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + gObj.element.id + 'EditForm', gObj.element);\n            gObj.editModule.applyFormValidation([col]);\n            _this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        });\n    };\n    BatchEdit.prototype.updateCell = function (rowIndex, field, value) {\n        var gObj = this.parent;\n        var col = gObj.getColumnByField(field);\n        var index = gObj.getColumnIndexByField(field);\n        var isInsertedBatchRow = gObj.getRowByIndex(rowIndex).classList.contains('e-insertedrow') &&\n            gObj.getRowByIndex(rowIndex).classList.contains('e-batchrow');\n        if (col && (!col.isPrimaryKey || isInsertedBatchRow) && col.allowEditing) {\n            var td_1 = this.parent.isSpan ? (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getCellFromRow)(gObj, rowIndex, index) :\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getCellByColAndRowIndex)(this.parent, col, rowIndex, index);\n            if (this.parent.isSpan && !td_1) {\n                return;\n            }\n            var rowObj_1 = gObj.getRowObjectFromUID(td_1.parentElement.getAttribute('data-uid'));\n            if (gObj.isEdit ||\n                (!rowObj_1.changes && ((!(value instanceof Date) && rowObj_1.data['' + field] !== value) ||\n                    ((value instanceof Date) && new Date(rowObj_1.data['' + field]).toString() !== new Date(value).toString()))) ||\n                (rowObj_1.changes && ((!(value instanceof Date) && rowObj_1.changes['' + field] !== value) ||\n                    ((value instanceof Date) && new Date(rowObj_1.changes['' + field]).toString() !== new Date(value).toString())))) {\n                this.refreshTD(td_1, col, rowObj_1, value);\n                var isReactChild = this.parent.parentDetails && this.parent.parentDetails.parentInstObj &&\n                    this.parent.parentDetails.parentInstObj.isReact;\n                if (((this.parent.isReact && this.parent.requireTemplateRef) || (isReactChild &&\n                    this.parent.parentDetails.parentInstObj.requireTemplateRef)) && col.template) {\n                    // eslint-disable-next-line @typescript-eslint/no-this-alias\n                    var thisRef_1 = this;\n                    var newReactTd_1 = this.newReactTd;\n                    thisRef_1.parent.renderTemplates(function () {\n                        thisRef_1.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.queryCellInfo, {\n                            cell: newReactTd_1 || td_1, column: col, data: rowObj_1.changes\n                        });\n                    });\n                }\n                else if ((this.parent.isReact || isReactChild) && col.template) {\n                    this.parent.renderTemplates();\n                    this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.queryCellInfo, {\n                        cell: this.newReactTd || td_1, column: col, data: rowObj_1.changes\n                    });\n                }\n                else {\n                    this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.queryCellInfo, {\n                        cell: this.newReactTd || td_1, column: col, data: rowObj_1.changes\n                    });\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.setChanges = function (rowObj, field, value) {\n        if (!rowObj.changes) {\n            rowObj.changes = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, {}, rowObj.data, true);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(field)) {\n            if (typeof value === 'string') {\n                value = this.parent.sanitize(value);\n            }\n            _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_9__.DataUtil.setValue(field, value, rowObj.changes);\n        }\n        if (rowObj.data[\"\" + field] !== value) {\n            var type = this.parent.getColumnByField(field).type;\n            if ((type === 'date' || type === 'datetime')) {\n                if (new Date(rowObj.data[\"\" + field]).toString() !== new Date(value).toString()) {\n                    rowObj.isDirty = true;\n                }\n            }\n            else {\n                rowObj.isDirty = true;\n            }\n        }\n    };\n    BatchEdit.prototype.updateRow = function (index, data) {\n        var keys = Object.keys(data);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var col = keys_1[_i];\n            this.updateCell(index, col, data[\"\" + col]);\n        }\n    };\n    BatchEdit.prototype.getCellIdx = function (uid) {\n        var cIdx = this.parent.getColumnIndexByUid(uid) + this.parent.groupSettings.columns.length;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.detailTemplate) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.childGrid)) {\n            cIdx++;\n        }\n        if (this.parent.isRowDragable()) {\n            cIdx++;\n        }\n        return cIdx;\n    };\n    BatchEdit.prototype.refreshTD = function (td, column, rowObj, value) {\n        var cell = new _renderer_cell_renderer__WEBPACK_IMPORTED_MODULE_5__.CellRenderer(this.parent, this.serviceLocator);\n        value = column.type === 'number' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value) ? parseFloat(value) : value;\n        if (rowObj) {\n            this.setChanges(rowObj, column.field, value);\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.refreshForeignData)(rowObj, this.parent.getForeignKeyColumns(), rowObj.changes);\n        }\n        var rowcell = rowObj ? rowObj.cells : undefined;\n        var parentElement;\n        var cellIndex;\n        if (this.parent.isReact) {\n            parentElement = td.parentElement;\n            cellIndex = td.cellIndex;\n        }\n        var index = 0;\n        if (rowObj) {\n            cell.refreshTD(td, rowcell[this.getCellIdx(column.uid) - index], rowObj.changes, { 'index': this.getCellIdx(column.uid) });\n        }\n        if (this.parent.isReact) {\n            this.newReactTd = parentElement.cells[parseInt(cellIndex.toString(), 10)];\n            parentElement.cells[parseInt(cellIndex.toString(), 10)].classList.add('e-updatedtd');\n        }\n        else {\n            td.classList.add('e-updatedtd');\n        }\n        td.classList.add('e-updatedtd');\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.toolbarRefresh, {});\n    };\n    BatchEdit.prototype.getColIndex = function (cells, index) {\n        var cIdx = 0;\n        if (this.parent.allowGrouping && this.parent.groupSettings.columns) {\n            cIdx = this.parent.groupSettings.columns.length;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.detailTemplate) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.childGrid)) {\n            cIdx++;\n        }\n        if (this.parent.isRowDragable()) {\n            cIdx++;\n        }\n        for (var m = 0; m < cells.length; m++) {\n            var colIndex = parseInt(cells[parseInt(m.toString(), 10)].getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.ariaColIndex), 10) - 1;\n            if (colIndex === index - cIdx) {\n                return m;\n            }\n        }\n        return -1;\n    };\n    BatchEdit.prototype.editNextValCell = function () {\n        var gObj = this.parent;\n        var insertedRows = gObj.element.querySelectorAll('.e-insertedrow');\n        var isSingleInsert = insertedRows.length === 1 ? true : false;\n        if (isSingleInsert && this.isAdded && !gObj.isEdit) {\n            var btmIdx = this.getBottomIndex();\n            for (var i = this.cellDetails.cellIndex; i < gObj.getColumns().length; i++) {\n                if (gObj.isEdit) {\n                    return;\n                }\n                var index = this.findNextEditableCell(this.cellDetails.cellIndex + 1, true, true);\n                var col = gObj.getColumns()[parseInt(index.toString(), 10)];\n                if (col) {\n                    if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                        this.editCell(btmIdx, col.field, true);\n                    }\n                    else {\n                        var args = { index: 0, column: col };\n                        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.nextCellIndex, args);\n                        this.editCell(args.index, col.field, true);\n                    }\n                    this.saveCell();\n                }\n            }\n            if (!gObj.isEdit) {\n                this.isAdded = false;\n            }\n        }\n        else if (!isSingleInsert && this.isAdded && !gObj.isEdit) {\n            for (var i = 0; i < insertedRows.length; i++) {\n                if (!gObj.isEdit) {\n                    for (var j = 0; j < this.validationColObj.length; j++) {\n                        if (gObj.isEdit) {\n                            break;\n                        }\n                        else if (insertedRows[parseInt(i.toString(), 10)].querySelectorAll('td:not(.e-hide)')[this.validationColObj[parseInt(j.toString(), 10)].cellIdx].innerHTML === '') {\n                            this.editCell(parseInt(insertedRows[parseInt(i.toString(), 10)].getAttribute('aria-rowindex'), 10) - 1, this.validationColObj[parseInt(j.toString(), 10)].field);\n                            if (this.validateFormObj()) {\n                                this.saveCell();\n                            }\n                        }\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            if (!gObj.isEdit) {\n                this.isAdded = false;\n            }\n        }\n    };\n    BatchEdit.prototype.escapeCellEdit = function () {\n        var args = this.generateCellArgs();\n        args.value = args.previousValue;\n        if (args.value || !this.cellDetails.column.validationRules) {\n            this.successCallBack(args, args.cell.parentElement, args.column, true)(args);\n        }\n    };\n    BatchEdit.prototype.generateCellArgs = function () {\n        var gObj = this.parent;\n        this.parent.element.classList.remove('e-editing');\n        var column = this.cellDetails.column;\n        var obj = {};\n        obj[column.field] = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getObject)(column.field, this.cellDetails.rowData);\n        var editedData = gObj.editModule.getCurrentEditedData(this.form, obj);\n        var cloneEditedData = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, editedData);\n        editedData = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, editedData, this.cellDetails.rowData);\n        var value = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getObject)(column.field, cloneEditedData);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.field) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(value)) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)(column.field, value, editedData);\n        }\n        var args = {\n            columnName: column.field,\n            value: (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getObject)(column.field, editedData),\n            rowData: this.cellDetails.rowData,\n            column: column,\n            previousValue: this.cellDetails.value,\n            isForeignKey: this.cellDetails.isForeignKey,\n            cancel: false\n        };\n        args.cell = this.form.parentElement;\n        args.columnObject = column;\n        return args;\n    };\n    BatchEdit.prototype.saveCell = function (isForceSave) {\n        if (this.preventSaveCell || !this.form) {\n            return;\n        }\n        var gObj = this.parent;\n        if (!isForceSave && (!gObj.isEdit || this.validateFormObj())) {\n            return;\n        }\n        this.preventSaveCell = true;\n        var args = this.generateCellArgs();\n        var tr = args.cell.parentElement;\n        var col = args.column;\n        args.cell.removeAttribute('aria-label');\n        if (!isForceSave) {\n            gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSave, args, this.successCallBack(args, tr, col));\n            gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.batchForm, { formObj: this.form });\n        }\n        else {\n            this.successCallBack(args, tr, col)(args);\n        }\n    };\n    BatchEdit.prototype.successCallBack = function (cellSaveArgs, tr, column, isEscapeCellEdit) {\n        var _this = this;\n        return function (cellSaveArgs) {\n            var gObj = _this.parent;\n            cellSaveArgs.cell = cellSaveArgs.cell ? cellSaveArgs.cell : _this.form.parentElement;\n            cellSaveArgs.columnObject = cellSaveArgs.columnObject ? cellSaveArgs.columnObject : column;\n            // cellSaveArgs.columnObject.index = isNullOrUndefined(cellSaveArgs.columnObject.index) ? 0 : cellSaveArgs.columnObject.index;\n            if (cellSaveArgs.cancel) {\n                _this.preventSaveCell = false;\n                if (_this.editNext) {\n                    _this.editNext = false;\n                    if (_this.cellDetails.rowIndex === _this.index && _this.cellDetails.column.field === _this.field) {\n                        return;\n                    }\n                    _this.editCellExtend(_this.index, _this.field, _this.isAdd);\n                }\n                return;\n            }\n            gObj.editModule.destroyWidgets([column]);\n            gObj.isEdit = false;\n            gObj.editModule.destroyForm();\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.tooltipDestroy, {});\n            var rowObj = gObj.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            _this.refreshTD(cellSaveArgs.cell, column, rowObj, cellSaveArgs.value);\n            if (_this.parent.isReact) {\n                cellSaveArgs.cell = _this.newReactTd;\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([tr], [_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.editedRow, 'e-batchrow']);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([cellSaveArgs.cell], ['e-editedbatchcell', 'e-boolcell']);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellSaveArgs.value) && cellSaveArgs.value.toString() ===\n                (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.cellDetails.value) ? _this.cellDetails.value : '').toString() && !_this.isColored\n                || ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellSaveArgs.value) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowObj.data[column.field]) &&\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.cellDetails.value) && !cellSaveArgs.cell.parentElement.classList.contains('e-insertedrow'))) {\n                cellSaveArgs.cell.classList.remove('e-updatedtd');\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isEscapeCellEdit)) {\n                var isReactCompiler = gObj.isReact && column.template && typeof (column.template) !== 'string';\n                var isReactChild = gObj.parentDetails && gObj.parentDetails.parentInstObj\n                    && gObj.parentDetails.parentInstObj.isReact;\n                if (isReactCompiler || isReactChild) {\n                    if (gObj.requireTemplateRef) {\n                        gObj.renderTemplates(function () {\n                            gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSaved, cellSaveArgs);\n                        });\n                    }\n                    else {\n                        gObj.renderTemplates();\n                        gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSaved, cellSaveArgs);\n                    }\n                }\n                else {\n                    gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSaved, cellSaveArgs);\n                }\n            }\n            gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.toolbarRefresh, {});\n            _this.isColored = false;\n            if (_this.parent.aggregates.length > 0) {\n                if (!(_this.parent.isReact || _this.parent.isVue)) {\n                    _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.refreshFooterRenderer, {});\n                }\n                if (_this.parent.groupSettings.columns.length > 0 && !_this.isAddRow(_this.cellDetails.rowIndex)) {\n                    _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.groupAggregates, {});\n                }\n                if (_this.parent.isReact || _this.parent.isVue) {\n                    _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.refreshFooterRenderer, {});\n                }\n            }\n            _this.preventSaveCell = false;\n            if (_this.editNext) {\n                _this.editNext = false;\n                if (_this.cellDetails.rowIndex === _this.index && _this.cellDetails.column.field === _this.field && _this.prevEditedBatchCell) {\n                    return;\n                }\n                var col = gObj.getColumnByField(_this.field);\n                if (col && (col.allowEditing || (!col.allowEditing && gObj.focusModule.active\n                    && gObj.focusModule.active.getTable().rows[_this.crtRowIndex]\n                    && gObj.focusModule.active.getTable().rows[_this.crtRowIndex].classList.contains('e-insertedrow')))) {\n                    _this.editCellExtend(_this.index, _this.field, _this.isAdd);\n                }\n            }\n            if (isEscapeCellEdit) {\n                gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.restoreFocus, {});\n            }\n        };\n    };\n    BatchEdit.prototype.prevEditedBatchCellMatrix = function () {\n        var editedBatchCellMatrix = [];\n        var gObj = this.parent;\n        var editedBatchCell = gObj.focusModule.active.getTable().querySelector('.e-editedbatchcell');\n        if (editedBatchCell) {\n            var tr = editedBatchCell.parentElement;\n            var rowIndex = [].slice.call(this.parent.focusModule.active.getTable().rows).indexOf(tr);\n            var cellIndex = [].slice.call(tr.cells).indexOf(editedBatchCell);\n            editedBatchCellMatrix = [rowIndex, cellIndex];\n        }\n        return editedBatchCellMatrix;\n    };\n    BatchEdit.prototype.getDataByIndex = function (index) {\n        var row = this.parent.getRowObjectFromUID(this.parent.getDataRows()[parseInt(index.toString(), 10)].getAttribute('data-uid'));\n        return row.changes ? row.changes : row.data;\n    };\n    BatchEdit.prototype.keyDownHandler = function (e) {\n        if (this.addBatchRow || ((e.action === 'tab' || e.action === 'shiftTab') && this.parent.isEdit)) {\n            var gObj = this.parent;\n            var btmIdx = this.getBottomIndex();\n            var rowcell = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.rowCell);\n            if (this.addBatchRow || (rowcell && !this.parent.isReact)) {\n                var cell = void 0;\n                if (rowcell) {\n                    cell = rowcell.querySelector('.e-field');\n                }\n                if (this.addBatchRow || cell) {\n                    var visibleColumns = this.parent.getVisibleColumns();\n                    var columnIndex = e.action === 'tab' ? visibleColumns.length - 1 : 0;\n                    if (this.addBatchRow\n                        || visibleColumns[parseInt(columnIndex.toString(), 10)].field === cell.getAttribute('id').slice(this.parent.element.id.length)) {\n                        if (this.cellDetails.rowIndex === btmIdx && e.action === 'tab') {\n                            if (gObj.editSettings.newRowPosition === 'Top') {\n                                gObj.editSettings.newRowPosition = 'Bottom';\n                                this.addRecord();\n                                gObj.editSettings.newRowPosition = 'Top';\n                            }\n                            else {\n                                this.addRecord();\n                            }\n                            this.addBatchRow = false;\n                        }\n                        else {\n                            this.saveCell();\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.addCancelWhilePaging = function () {\n        if (this.validateFormObj()) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.destroyForm, {});\n            this.parent.isEdit = false;\n            this.editNext = false;\n            this.mouseDownElement = undefined;\n            this.isColored = false;\n        }\n    };\n    BatchEdit.prototype.getBottomIndex = function () {\n        var changes = this.getBatchChanges();\n        return this.parent.getCurrentViewRecords().length + changes[_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.addedRecords].length -\n            changes[_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.deletedRecords].length - 1;\n    };\n    return BatchEdit;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-grids/src/grid/actions/batch-edit.js?");

/***/ })

}]);