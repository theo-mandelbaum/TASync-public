"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_selectio-6859ef32"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/selection/selection.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/selection/selection.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Selection: () => (/* binding */ Selection)\n/* harmony export */ });\n/* harmony import */ var _viewer_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../viewer/page */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/viewer/page.js\");\n/* harmony import */ var _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../editor/editor-helper */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor/editor-helper.js\");\n/* harmony import */ var _selection_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./selection-format */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/selection/selection-format.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../index */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_dictionary__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../base/dictionary */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/dictionary.js\");\n/* harmony import */ var _base_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../base/index */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/index.js\");\n/* harmony import */ var _writer_html_export__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../writer/html-export */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/writer/html-export.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n/* harmony import */ var _selection_helper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./selection-helper */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/selection/selection-helper.js\");\n/* harmony import */ var _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @syncfusion/ej2-splitbuttons */ \"./node_modules/@syncfusion/ej2-splitbuttons/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/* eslint-disable */\n/**\n * Selection\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * @param documentEditor\n     * @private\n     */\n    function Selection(documentEditor) {\n        var _this = this;\n        /**\n         * @private\n         */\n        this.upDownSelectionLength = 0;\n        /**\n         * @private\n         */\n        this.isSkipLayouting = false;\n        /**\n        * @private\n        */\n        this.isImageSelected = false;\n        /**\n        * @private\n        */\n        this.isExcludeBookmarkStartEnd = false;\n        this.contextTypeInternal = undefined;\n        /**\n         * @private\n         */\n        this.caret = undefined;\n        //Format Retrieval Field\n        /**\n         * @private\n         */\n        this.isRetrieveFormatting = false;\n        /**\n         * @private\n         */\n        this.isSelectCurrentWord = false;\n        /**\n         * @private\n         */\n        this.isSelectionisInCC = false;\n        /**\n         * @private\n         */\n        this.skipFormatRetrieval = false;\n        /**\n         * @private\n         */\n        this.isModifyingSelectionInternally = false;\n        this.isMoveDownOrMoveUp = false;\n        this.isSelectBookmark = false;\n        this.isHighlightContentControlEditRegionIn = true;\n        /**\n         * @private\n         * This will holds the selection html content to set data in clipboard. Avoid to use this field for other purpose.\n         */\n        this.htmlContent = undefined;\n        /**\n         * @private\n         * This will holds the selection sfdt content to set data in clipboard. Avoid to use this field for other purpose.\n         */\n        this.sfdtContent = undefined;\n        /**\n         * @private\n         */\n        this.isEndOffset = false;\n        /**\n         * @private\n         */\n        this.isViewPasteOptions = false;\n        /**\n         * @private\n         */\n        this.skipEditRangeRetrieval = false;\n        /**\n         * @private\n         */\n        this.selectedWidgets = undefined;\n        /**\n         * @private\n         */\n        this.isHighlightEditRegionIn = false;\n        /**\n         * @private\n         */\n        this.isHighlightFormFields = false;\n        /**\n         * @private\n         */\n        this.isHightlightEditRegionInternal = false;\n        /**\n         * @private\n         */\n        this.isCurrentUser = false;\n        /**\n         * @private\n         */\n        this.isHighlightNext = false;\n        /**\n         * @private\n         */\n        this.isWebLayout = false;\n        /**\n         * @private\n         */\n        this.contentControlHighlighters = undefined;\n        /**\n         * @private\n         */\n        this.editRegionHighlighters = undefined;\n        /**\n         * @private\n         */\n        this.contentControleditRegionHighlighters = undefined;\n        /**\n         * @private\n         */\n        this.formFieldHighlighters = undefined;\n        this.isSelectList = false;\n        /**\n         * @private\n         */\n        this.previousSelectedFormField = undefined;\n        /**\n         * @private\n         */\n        this.previousSelectedContentControl = undefined;\n        /**\n         * @private\n         */\n        this.currentContentControl = undefined;\n        /**\n         * @private\n         */\n        this.isFormatUpdated = false;\n        /**\n         * @private\n         */\n        this.isCellPrevSelected = false;\n        /**\n         * @private\n         */\n        this.currentFormField = undefined;\n        /**\n         * @private\n         */\n        this.contentControls = [];\n        /**\n         * @private\n         */\n        this.isHomeEnd = false;\n        /**\n         * @private\n         */\n        this.pasteOptions = function (event) {\n            var locale = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.L10n('documenteditor', _this.owner.defaultLocale);\n            locale.setLocale(_this.owner.locale);\n            if (event.item.text === locale.getConstant('Keep source formatting')) {\n                _this.owner.editorModule.applyPasteOptions('KeepSourceFormatting');\n            }\n            else if (event.item.text === locale.getConstant('Match destination formatting')) {\n                _this.owner.editorModule.applyPasteOptions('MergeWithExistingFormatting');\n            }\n            else if (event.item.text === locale.getConstant('NestTable')) {\n                _this.owner.editorModule.applyTablePasteOptions('NestTable');\n            }\n            else if (event.item.text === locale.getConstant('InsertAsRows')) {\n                _this.owner.editorModule.applyTablePasteOptions('InsertAsRows');\n            }\n            else if (event.item.text === locale.getConstant('InsertAsColumns')) {\n                _this.owner.editorModule.applyTablePasteOptions('InsertAsColumns');\n            }\n            else if (event.item.text === locale.getConstant('OverwriteCells')) {\n                _this.owner.editorModule.applyTablePasteOptions('OverwriteCells');\n            }\n            else {\n                _this.owner.editorModule.applyPasteOptions('KeepTextOnly');\n            }\n        };\n        /**\n         * Hides caret.\n         *\n         * @private\n         * @returns {void}\n         */\n        this.hideCaret = function () {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(_this.caret)) {\n                _this.caret.style.display = 'none';\n            }\n        };\n        this.owner = documentEditor;\n        this.documentHelper = this.owner.documentHelper;\n        this.start = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n        this.end = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n        this.selectedWidgets = new _base_dictionary__WEBPACK_IMPORTED_MODULE_5__.Dictionary();\n        this.characterFormatIn = new _selection_format__WEBPACK_IMPORTED_MODULE_2__.SelectionCharacterFormat(this);\n        this.paragraphFormatIn = new _selection_format__WEBPACK_IMPORTED_MODULE_2__.SelectionParagraphFormat(this, this.documentHelper);\n        this.sectionFormatIn = new _selection_format__WEBPACK_IMPORTED_MODULE_2__.SelectionSectionFormat(this);\n        this.rowFormatIn = new _selection_format__WEBPACK_IMPORTED_MODULE_2__.SelectionRowFormat(this);\n        this.cellFormatIn = new _selection_format__WEBPACK_IMPORTED_MODULE_2__.SelectionCellFormat(this);\n        this.tableFormatIn = new _selection_format__WEBPACK_IMPORTED_MODULE_2__.SelectionTableFormat(this);\n        this.imageFormatInternal = new _selection_format__WEBPACK_IMPORTED_MODULE_2__.SelectionImageFormat(this);\n        this.editRangeCollection = [];\n        this.editRegionHighlighters = new _base_dictionary__WEBPACK_IMPORTED_MODULE_5__.Dictionary();\n        this.contentControleditRegionHighlighters = new _base_dictionary__WEBPACK_IMPORTED_MODULE_5__.Dictionary();\n        this.formFieldHighlighters = new _base_dictionary__WEBPACK_IMPORTED_MODULE_5__.Dictionary();\n    }\n    Object.defineProperty(Selection.prototype, \"isHighlightEditRegion\", {\n        // Code for Comparing the offset calculated using old approach and optimized approach\n        // /**\n        //  * @private\n        //  */\n        // public isNewApproach: boolean;\n        /**\n         * @private\n         * @returns {boolean} - Retuens true if highlighting editing region\n         */\n        get: function () {\n            return this.isHighlightEditRegionIn;\n        },\n        /**\n         * @private\n         */\n        set: function (value) {\n            this.isHighlightEditRegionIn = value;\n            this.onHighlight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"isHighlightContentControlEditRegion\", {\n        /**\n         * @private\n         * @returns {boolean} - Retuens true if highlighting editing region\n         */\n        get: function () {\n            return this.isHighlightContentControlEditRegionIn;\n        },\n        /**\n         * @private\n         */\n        set: function (value) {\n            this.isHighlightContentControlEditRegionIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"htmlWriter\", {\n        /**\n         * @private\n         */\n        get: function () {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.htmlWriterIn)) {\n                this.htmlWriterIn = new _writer_html_export__WEBPACK_IMPORTED_MODULE_7__.HtmlExport();\n            }\n            return this.htmlWriterIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"start\", {\n        /**\n         * Gets the start text position of last range in the selection\n         *\n         * @private\n         * @returns {TextPosition} - Returns selection start position.\n         */\n        get: function () {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.viewer)) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.startInternal)) {\n                    this.startInternal = this.owner.documentStart;\n                }\n                return this.startInternal;\n            }\n            return undefined;\n        },\n        /**\n         * @private\n         */\n        set: function (value) {\n            this.startInternal = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"characterFormat\", {\n        //Format retrieval properties\n        /**\n         * Gets the instance of selection character format.\n         *\n         * @default undefined\n         * @aspType SelectionCharacterFormat\n         * @returns {SelectionCharacterFormat} Returns the selection character format.\n         */\n        get: function () {\n            return this.characterFormatIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"paragraphFormat\", {\n        /**\n         * Gets the instance of selection paragraph format.\n         *\n         * @default undefined\n         * @aspType SelectionParagraphFormat\n         * @returns {SelectionParagraphFormat} Returns the selection paragraph format.\n         */\n        get: function () {\n            return this.paragraphFormatIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"sectionFormat\", {\n        /**\n         * Gets the instance of selection section format.\n         *\n         * @default undefined\n         * @aspType SelectionSectionFormat\n         * @returns {SelectionSectionFormat} Returns the selection section format.\n         */\n        get: function () {\n            return this.sectionFormatIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"tableFormat\", {\n        /**\n         * Gets the instance of selection table format.\n         *\n         * @default undefined\n         * @aspType SelectionTableFormat\n         * @returns {SelectionTableFormat} Returns the selection table format.\n         */\n        get: function () {\n            return this.tableFormatIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"cellFormat\", {\n        /**\n         * Gets the instance of selection cell format.\n         *\n         * @default undefined\n         * @aspType SelectionCellFormat\n         * @returns {SelectionCellFormat} Returns the selection cell format.\n         */\n        get: function () {\n            return this.cellFormatIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"rowFormat\", {\n        /**\n         * Gets the instance of selection row format.\n         *\n         * @default undefined\n         * @aspType SelectionRowFormat\n         * @returns {SelectionRowFormat} Returns selection row format.\n         */\n        get: function () {\n            return this.rowFormatIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"imageFormat\", {\n        /**\n         * Gets the instance of selection image format.\n         *\n         * @default undefined\n         * @aspType SelectionImageFormat\n         * @returns {SelectionImageFormat} Returns the selection image format.\n         */\n        get: function () {\n            return this.imageFormatInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"end\", {\n        /**\n         * Gets the start text position of selection range.\n         *\n         * @private\n         * @returns {TextPosition} - Returns selection end position.\n         */\n        get: function () {\n            return this.endInternal;\n        },\n        /**\n         * For internal use\n         *\n         * @private\n         */\n        set: function (value) {\n            this.endInternal = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"startPage\", {\n        /**\n         * Gets the page number where the selection starts.\n         *\n         * @returns {number} Returns the selection start page number.\n         */\n        get: function () {\n            if (!this.owner.isDocumentLoaded || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.viewer)\n                || this.viewer instanceof _index__WEBPACK_IMPORTED_MODULE_3__.WebLayoutViewer || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.documentHelper.selectionStartPage)) {\n                return 1;\n            }\n            return this.documentHelper.pages.indexOf(this.documentHelper.selectionStartPage) + 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"endPage\", {\n        /**\n         * Gets the page number where the selection ends.\n         *\n         * @returns {number} Returns the selection end page number.\n         */\n        get: function () {\n            if (!this.owner.isDocumentLoaded || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.viewer)\n                || this.viewer instanceof _index__WEBPACK_IMPORTED_MODULE_3__.WebLayoutViewer || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.documentHelper.selectionEndPage)) {\n                return 1;\n            }\n            return this.documentHelper.pages.indexOf(this.documentHelper.selectionEndPage) + 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"isForward\", {\n        /**\n         * Determines whether the selection direction is forward or not.\n         *\n         * @default false\n         * @private\n         * @returns {boolean} Returns isForward\n         */\n        get: function () {\n            return this.start.isExistBefore(this.end);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"isinFootnote\", {\n        /**\n         * Determines whether the selection is in footnote or not.\n         *\n         * @default false\n         * @returns {boolean} Returns true if selection is in footnote\n         * @private\n         */\n        get: function () {\n            return this.isFootNoteParagraph(this.start.paragraph);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"isinEndnote\", {\n        /**\n         * Determines whether the selection is in endnote or not.\n         *\n         * @default false\n         * @returns {boolean}\n         * @private\n         */\n        get: function () {\n            return this.isEndNoteParagraph(this.start.paragraph);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"isEmpty\", {\n        /**\n         * Determines whether the start and end positions are same or not.\n         *\n         * @default false\n         * @returns {boolean}\n         * @private\n         */\n        get: function () {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n                return true;\n            }\n            return this.start.isAtSamePosition(this.end);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"startOffset\", {\n        /**\n         * Returns the start hierarchical index.\n         */\n        get: function () {\n            return this.getHierarchicalIndexByPosition(this.start);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"endOffset\", {\n        /**\n         * Returns the end hierarchical index.\n         */\n        get: function () {\n            return this.getHierarchicalIndexByPosition(this.end);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"isInShape\", {\n        /**\n         * @private\n         */\n        get: function () {\n            var container = this.start.paragraph.containerWidget;\n            do {\n                if (container instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextFrame) {\n                    return true;\n                }\n                if (container) {\n                    container = container.containerWidget;\n                }\n            } while (container);\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"text\", {\n        /**\n         * Gets the text within selection.\n         *\n         * @default ''\n         * @aspType string\n         * @returns {string} Returns the text within selection.\n         */\n        get: function () {\n            return this.getText(false);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"contextType\", {\n        /**\n         * Gets the context type of the selection.\n         */\n        get: function () {\n            return this.contextTypeInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"bookmarks\", {\n        /**\n         * Gets bookmark name collection.\n         */\n        get: function () {\n            return this.getSelBookmarks(false);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"sfdt\", {\n        /**\n        * Gets the selected content of the document as SFDT(Syncfusion Document Text) file format.\n        *\n        * @default undefined\n        * @returns {string}\n        */\n        get: function () {\n            if (this.owner.editorModule && !this.isEmpty) {\n                return JSON.stringify(this.writeSfdt());\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the bookmark name collection in current selection.\n     *\n     * @param includeHidden - Decide whether to include hidden bookmark name in current selection or not.\n     * @returns Returns the bookmark name collection in current selection.\n     */\n    Selection.prototype.getBookmarks = function (includeHidden) {\n        return this.getSelBookmarks(includeHidden);\n    };\n    Object.defineProperty(Selection.prototype, \"isCleared\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.end);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"isInField\", {\n        /**\n         * Returns true if selection is in field.\n         *\n         * @returns Returns true if selection is in field; Otherwise, false.\n         */\n        get: function () {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.getHyperlinkField(true))) {\n                return true;\n            }\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the field information for the selected field.\n     *\n     * @returns { FieldInfo } Returns `FieldInfo` if selection is in field, otherwise `undefined`\n     * > Returns `undefined` for text, image, table, shape. For nested fields, it returns combined field code and result.\n     */\n    Selection.prototype.getFieldInfo = function () {\n        var field = this.getHyperlinkField(true);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(field)) {\n            var code = this.getFieldCode(field);\n            var result = this.owner.editorModule.getFieldResultText(field);\n            return {\n                code: code,\n                result: result\n            };\n        }\n        return undefined;\n    };\n    Selection.prototype.isFootNoteParagraph = function (paragraph) {\n        var container = this.getContainerWidget(paragraph);\n        if (container instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget && container.footNoteType === 'Footnote') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Selection.prototype.isEndNoteParagraph = function (paragraph) {\n        var container = this.getContainerWidget(paragraph);\n        if (container instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget && container.footNoteType === 'Endnote') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param documentEditor\n     * @private\n     */\n    Selection.prototype.isFootEndNoteParagraph = function (paragraph) {\n        if (this.isFootNoteParagraph(paragraph)) {\n            return true;\n        }\n        else if (this.isEndNoteParagraph(paragraph)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Selection.prototype.getSelBookmarks = function (includeHidden) {\n        var bookmarkCln = [];\n        var bookmarks = this.documentHelper.bookmarks;\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        var bookmrkStart;\n        var bookmrkEnd;\n        var isCellSelected = false;\n        var selectedCells = this.getSelectedCells();\n        for (var i = 0; i < bookmarks.length; i++) {\n            if (includeHidden || !includeHidden && bookmarks.keys[i].indexOf('_') !== 0) {\n                bookmrkStart = bookmarks.get(bookmarks.keys[i]);\n                bookmrkEnd = bookmrkStart.reference;\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(bookmrkEnd)) {\n                    continue;\n                }\n                var bmStartPos = this.getElementPosition(bookmrkStart).startPosition;\n                var bmEndPos = this.getElementPosition(bookmrkEnd, true).startPosition;\n                if (bmStartPos.paragraph.isInsideTable || bmEndPos.paragraph.isInsideTable) {\n                    if (selectedCells.length > 0) {\n                        if (selectedCells.indexOf(bmStartPos.paragraph.associatedCell) >= 0\n                            || selectedCells.indexOf(bmEndPos.paragraph.associatedCell) >= 0) {\n                            isCellSelected = true;\n                        }\n                        else {\n                            isCellSelected = false;\n                            if (selectedCells.indexOf(bmStartPos.paragraph.associatedCell) < 0\n                                || selectedCells.indexOf(bmEndPos.paragraph.associatedCell) < 0) {\n                                var endCell = end.paragraph.isInsideTable && end.paragraph.associatedCell;\n                                var bmEndPosCell = bmEndPos.paragraph.associatedCell;\n                                if (endCell && bmEndPosCell && endCell.ownerTable.equals(bmEndPosCell.ownerTable) &&\n                                    !(endCell.ownerTable\n                                        && selectedCells.indexOf(this.getCellInTable(endCell.ownerTable, bmEndPosCell)) >= 0)) {\n                                    // Bug 891131: The below code is comment to resolve the bookmark is not retrieved when selecting the table cell\n                                    // continue;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        isCellSelected = false;\n                    }\n                }\n                else {\n                    isCellSelected = false;\n                }\n                if ((start.isExistAfter(bmStartPos) || start.isAtSamePosition(bmStartPos))\n                    && (end.isExistBefore(bmEndPos) || end.isAtSamePosition(bmEndPos)) ||\n                    ((bmStartPos.isExistAfter(start) || bmStartPos.isAtSamePosition(start))\n                        && (bmEndPos.isExistBefore(end) || bmEndPos.isAtSamePosition(end))) ||\n                    (bmStartPos.isExistAfter(start) && bmStartPos.isExistBefore(end)\n                        && (end.isExistAfter(bmEndPos) || end.isExistBefore(bmEndPos))) ||\n                    (bmEndPos.isExistBefore(end) && bmEndPos.isExistAfter(start)\n                        && (start.isExistBefore(bmStartPos) || start.isExistAfter(bmStartPos))) || isCellSelected) {\n                    bookmarkCln.push(bookmrkStart.name);\n                }\n            }\n        }\n        return bookmarkCln;\n    };\n    Object.defineProperty(Selection.prototype, \"viewer\", {\n        /**\n         *\n         * @private\n         */\n        get: function () {\n            return this.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Selection.prototype.getModuleName = function () {\n        return 'Selection';\n    };\n    Selection.prototype.checkLayout = function () {\n        if (this.owner.layoutType === 'Continuous') {\n            this.isWebLayout = true;\n            this.documentHelper.isHeaderFooter = true;\n            this.owner.layoutType = 'Pages';\n            this.owner.viewer.destroy();\n            this.owner.viewer = new _index__WEBPACK_IMPORTED_MODULE_3__.PageLayoutViewer(this.owner);\n            this.owner.editorModule.layoutWholeDocument();\n        }\n    };\n    //Public API\n    /**\n     * Moves the selection to the header of current page.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.goToHeader = function () {\n        this.checkLayout();\n        this.owner.enableHeaderAndFooter = true;\n        this.enableHeadersFootersRegion(this.start.paragraph.bodyWidget.page.headerWidget, this.start.paragraph.bodyWidget.page);\n        this.isWebLayout = false;\n    };\n    /**\n     * Moves the selection to the footer of current page.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.goToFooter = function () {\n        this.checkLayout();\n        this.owner.enableHeaderAndFooter = true;\n        this.enableHeadersFootersRegion(this.start.paragraph.bodyWidget.page.footerWidget, this.start.paragraph.bodyWidget.page);\n        this.isWebLayout = false;\n    };\n    /**\n     * Closes the header and footer region.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.closeHeaderFooter = function () {\n        this.disableHeaderFooter();\n        if (this.documentHelper.isHeaderFooter && this.owner.layoutType === 'Pages') {\n            this.owner.layoutType = 'Continuous';\n            this.documentHelper.isHeaderFooter = false;\n        }\n    };\n    /**\n    * Closes the xml Pane region.\n    *\n    * @returns {void}\n    */\n    Selection.prototype.closeXmlPane = function () {\n        this.disableXml();\n        this.owner.enableXMLPane = false;\n        if (this.documentHelper.isHeaderFooter && this.owner.layoutType === 'Pages') {\n            this.owner.layoutType = 'Continuous';\n            this.documentHelper.isHeaderFooter = false;\n        }\n    };\n    /**\n     * Moves the selection to the start of specified page number.\n     *\n     * @param pageNumber Specify the page number to move selection.\n     * @returns {void}\n     */\n    Selection.prototype.goToPage = function (pageNumber) {\n        this.owner.scrollToPage(pageNumber);\n        if (pageNumber >= 1 && pageNumber <= this.owner.documentHelper.pages.length) {\n            var page = this.owner.documentHelper.pages[pageNumber - 1];\n            this.updateTextPositionForBlockContainer(page.bodyWidgets[0]);\n        }\n    };\n    /**\n     * Selects the entire table if the context is within table.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.selectTable = function () {\n        if (!this.owner.enableSelection) {\n            return;\n        }\n        this.selectTableInternal();\n    };\n    /**\n     * Selects the entire row if the context is within table.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.selectRow = function () {\n        if (!this.owner.enableSelection) {\n            return;\n        }\n        this.selectTableRow();\n    };\n    /**\n     * Selects the entire column if the context is within table.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.selectColumn = function () {\n        if (!this.owner.enableSelection) {\n            return;\n        }\n        this.selectColumnInternal();\n    };\n    /**\n     * Selects the entire cell if the context is within table.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.selectCell = function () {\n        if (!this.owner.enableSelection) {\n            return;\n        }\n        this.selectTableCell();\n    };\n    Selection.prototype.select = function (selectionSettings, startOrEnd) {\n        if (typeof (selectionSettings) === 'string') {\n            var startPosition = this.getTextPosBasedOnLogicalIndex(selectionSettings);\n            var endPosition = this.getTextPosBasedOnLogicalIndex(startOrEnd);\n            this.selectPosition(startPosition, endPosition);\n        }\n        else {\n            var point = new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.Point(selectionSettings.x, selectionSettings.y);\n            var pageCoordinates = this.viewer.findFocusedPage(point, true);\n            if (selectionSettings.extend) {\n                this.moveTextPosition(pageCoordinates, this.end);\n            }\n            else {\n                this.documentHelper.updateTextPositionForSelection(pageCoordinates, 1);\n            }\n        }\n    };\n    /**\n     * Selects the content based on the specified start and end hierarchical index.\n     *\n     * @param start Specify the start index to select.\n     * @param end Specify the end index to select.\n     * @returns {void}\n     */\n    Selection.prototype.selectByHierarchicalIndex = function (start, end) {\n        var startPosition = this.getTextPosBasedOnLogicalIndex(start);\n        var endPosition = this.getTextPosBasedOnLogicalIndex(end);\n        this.selectPosition(startPosition, endPosition);\n    };\n    /**\n     * Selects the current field if selection is in field\n     *\n     * @param fieldStart Specify the field start to select.\n     * @returns {void}\n     */\n    Selection.prototype.selectField = function (fieldStart) {\n        if (this.isInField || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(fieldStart)) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(fieldStart)) {\n                fieldStart = this.getHyperlinkField(true);\n            }\n            this.selectFieldInternal(fieldStart);\n        }\n    };\n    /**\n     * @private\n     * @param fieldStart\n     * @returns {void}\n     */\n    Selection.prototype.selectContentControlInternal = function (fieldStart) {\n        if (fieldStart) {\n            var offset = fieldStart.line.getOffset(fieldStart, 1);\n            var startPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            var fieldEnd = fieldStart.reference;\n            startPosition.setPositionParagraph(fieldStart.line, offset);\n            var endoffset = fieldEnd.line.getOffset(fieldEnd, 0);\n            var endPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            endPosition.setPositionParagraph(fieldEnd.line, endoffset);\n            //selects the field range\n            this.documentHelper.selection.selectRange(startPosition, endPosition);\n        }\n    };\n    /**\n     * @private\n     * @param fieldStart\n     * @returns {void}\n     */\n    Selection.prototype.selectFieldInternal = function (fieldStart, isKeyBoardEvent, isReplacingFormResult) {\n        if (fieldStart) {\n            var formFillingMode = this.documentHelper.isFormFillProtectedMode || isReplacingFormResult;\n            var fieldEnd = fieldStart.fieldEnd;\n            if (formFillingMode) {\n                fieldStart = fieldStart.fieldSeparator;\n            }\n            var offset = fieldStart.line.getOffset(fieldStart, formFillingMode ? 1 : 0);\n            var startPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            startPosition.setPositionParagraph(fieldStart.line, offset);\n            var isBookmark = fieldStart.nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox;\n            if (isBookmark && !formFillingMode && fieldStart.nextElement.reference) {\n                fieldEnd = fieldStart.nextElement.reference;\n            }\n            var endoffset = fieldEnd.line.getOffset(fieldEnd, formFillingMode ? 0 : 1);\n            var endPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            endPosition.setPositionParagraph(fieldEnd.line, endoffset);\n            //selects the field range\n            this.documentHelper.selection.selectRange(startPosition, endPosition);\n            if (!isReplacingFormResult) {\n                this.triggerFormFillEvent(isKeyBoardEvent);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param contentControl\n     * @returns {void}\n     */\n    Selection.prototype.selectContentInternal = function (contentControl) {\n        if (contentControl) {\n            var fieldEnd = contentControl.reference;\n            var offset = contentControl.line.getOffset(contentControl, 0);\n            var startPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            startPosition.setPositionParagraph(contentControl.line, offset);\n            var endoffset = fieldEnd.line.getOffset(fieldEnd, 0);\n            var endPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            endPosition.setPositionParagraph(fieldEnd.line, endoffset);\n            startPosition.offset++;\n            endPosition.offset;\n            this.documentHelper.selection.selectRange(startPosition, endPosition);\n        }\n    };\n    /**\n     * @param shape\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectShape = function (shape) {\n        if (shape) {\n            var offset = shape.line.getOffset(shape, 0);\n            var startPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            startPosition.setPositionParagraph(shape.line, offset);\n            var endoffset = shape.line.getOffset(shape, 1);\n            var endPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            endPosition.setPositionParagraph(shape.line, endoffset);\n            this.documentHelper.selection.selectRange(startPosition, endPosition);\n        }\n    };\n    /**\n     * Toggles the bold property of selected contents.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleBold = function () {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleBold();\n        }\n    };\n    /**\n     * Toggles the italic property of selected contents.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleItalic = function () {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleItalic();\n        }\n    };\n    /**\n     * Toggles the allCaps property of selected contents.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleAllCaps = function () {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleAllCaps();\n        }\n    };\n    /**\n     * Toggles the underline property of selected contents.\n     *\n     * @param {Underline} underline Default value of ‘underline’ parameter is Single.\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleUnderline = function (underline) {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleUnderline(underline);\n        }\n    };\n    /**\n     * Toggles the strike through property of selected contents.\n     *\n     * @param {Strikethrough} strikethrough Default value of strikethrough parameter is SingleStrike.\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleStrikethrough = function (strikethrough) {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleStrikethrough(strikethrough);\n        }\n    };\n    /**\n     * Toggles the highlight color property of selected contents.\n     *\n     * @param {HighlightColor} highlightColor Default value of ‘underline’ parameter is Yellow.\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleHighlightColor = function (highlightColor) {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleHighlightColor(highlightColor);\n        }\n    };\n    /**\n     * Toggles the subscript formatting of selected contents.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleSubscript = function () {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleSubscript();\n        }\n    };\n    /**\n     * Toggles the superscript formatting of selected contents.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleSuperscript = function () {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleSuperscript();\n        }\n    };\n    /**\n     * Toggles the text alignment property of selected contents.\n     *\n     * @param {TextAlignment} textAlignment Default value of ‘textAlignment parameter is TextAlignment.Left.\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleTextAlignment = function (textAlignment) {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleTextAlignment(textAlignment);\n        }\n    };\n    /**\n     * Increases the left indent of selected paragraphs to a factor of 36 points.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.increaseIndent = function () {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.increaseIndent();\n        }\n    };\n    /**\n     * Decreases the left indent of selected paragraphs to a factor of 36 points.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.decreaseIndent = function () {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.decreaseIndent();\n        }\n    };\n    /**\n     * Fires the `requestNavigate` event if current selection context is in hyperlink.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.navigateHyperlink = function () {\n        var fieldBegin = this.getHyperlinkField();\n        if (fieldBegin) {\n            this.fireRequestNavigate(fieldBegin);\n        }\n    };\n    /**\n     * Navigate Hyperlink\n     *\n     * @param fieldBegin\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.fireRequestNavigate = function (fieldBegin) {\n        var code = this.getFieldCode(fieldBegin);\n        if (code.toLowerCase().indexOf('ref ') === 0 && !code.match('\\\\h')) {\n            return;\n        }\n        var hyperlink = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.Hyperlink(fieldBegin, this);\n        var eventArgs = {\n            isHandled: false,\n            navigationLink: hyperlink.navigationLink,\n            linkType: hyperlink.linkType,\n            localReference: hyperlink.localReference,\n            source: this.owner\n        };\n        this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.requestNavigateEvent, eventArgs);\n        if (!eventArgs.isHandled) {\n            this.documentHelper.selection.navigateBookmark(hyperlink.localReference, true);\n        }\n    };\n    /**\n     * Copies the hyperlink URL if the context is within hyperlink.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.copyHyperlink = function () {\n        var hyperLinkField = this.getHyperlinkField();\n        var linkText = this.getLinkText(hyperLinkField, true);\n        this.copyToClipboard(linkText);\n    };\n    Selection.prototype.isHideSelection = function (paragraph) {\n        var bodyWgt = paragraph.bodyWidget;\n        var sectionFormat = bodyWgt.sectionFormat;\n        var pageHt = sectionFormat.pageHeight - sectionFormat.footerDistance;\n        var headerFooterHt = bodyWgt.page.boundingRectangle.height / 100 * 40;\n        return this.contextType.indexOf('Footer') >= 0\n            && (paragraph.y + paragraph.height > _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(pageHt))\n            || this.contextType.indexOf('Header') >= 0 && paragraph.y + paragraph.height > headerFooterHt;\n    };\n    //Selection add, Highlight, remove API starts\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.highlightSelection = function (isSelectionChanged, isBookmark) {\n        if (this.owner.enableImageResizerMode) {\n            this.owner.imageResizerModule.hideImageResizer();\n        }\n        if (this.isEmpty) {\n            if (!this.isInShape && this.isHideSelection(this.start.paragraph)) {\n                this.hideCaret();\n                return;\n            }\n            if (this.isInShape) {\n                this.showResizerForShape();\n            }\n            this.updateCaretPosition();\n        }\n        else {\n            if (this.isForward) {\n                this.highlightSelectedContent(this.start, this.end);\n            }\n            else {\n                this.highlightSelectedContent(this.end, this.start);\n            }\n            if (this.documentHelper.isComposingIME) {\n                this.updateCaretPosition();\n            }\n        }\n        this.documentHelper.updateTouchMarkPosition();\n        if (isSelectionChanged) {\n            this.documentHelper.scrollToPosition(this.start, this.end, undefined, isBookmark);\n        }\n    };\n    Selection.prototype.createHighlightBorder = function (lineWidget, width, left, top, isElementBoxHighlight, contentControl) {\n        if (width < 0) {\n            width = 0;\n        }\n        var paragraph = lineWidget.paragraph;\n        var floatingItems = [];\n        if (paragraph.floatingElements.length > 0) {\n            for (var k = 0; k < paragraph.floatingElements.length; k++) {\n                var shapeElement = paragraph.floatingElements[k];\n                if (shapeElement.line === lineWidget) {\n                    var startTextPos = this.start;\n                    var endTextPos = this.end;\n                    if (!this.isForward) {\n                        startTextPos = this.end;\n                        endTextPos = this.start;\n                    }\n                    var offset = shapeElement.line.getOffset(shapeElement, 0);\n                    if ((startTextPos.currentWidget !== lineWidget && endTextPos.currentWidget !== lineWidget) ||\n                        (startTextPos.currentWidget === lineWidget && startTextPos.offset <= offset\n                            && (endTextPos.currentWidget === lineWidget && endTextPos.offset >= offset + 1\n                                || endTextPos.currentWidget !== lineWidget)) || (startTextPos.currentWidget !== lineWidget\n                        && endTextPos.currentWidget === lineWidget && endTextPos.offset >= offset)) {\n                        floatingItems.push(shapeElement);\n                    }\n                }\n            }\n        }\n        var page = this.getPage(lineWidget.paragraph);\n        var height = lineWidget.height;\n        var widgets = this.selectedWidgets;\n        var selectionWidget = undefined;\n        var selectionWidgetCollection = undefined;\n        if (this.isHighlightContentControlEditRegion && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(contentControl)) {\n            if (width === 0) {\n                width = this.documentHelper.textHelper.getParagraphMarkSize(paragraph.characterFormat).Width;\n            }\n            this.addContentControlEditRegionHighlight(lineWidget, left, width, contentControl);\n            return;\n        }\n        else if (this.isHightlightEditRegionInternal) {\n            this.addEditRegionHighlight(lineWidget, left, width);\n            return;\n        }\n        else if (this.isHighlightFormFields) {\n            this.addFormFieldHighlight(lineWidget, left, width);\n            return;\n        }\n        else {\n            if (widgets.containsKey(lineWidget)) {\n                if (widgets.get(lineWidget) instanceof _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo) {\n                    selectionWidget = widgets.get(lineWidget);\n                    // if the line element has already added with SelectionWidgetInfo\n                    // now its need to be added as ElementBox highlighting them remove it from dictionary and add it collection.\n                    if (isElementBoxHighlight) {\n                        widgets.remove(lineWidget);\n                        selectionWidgetCollection = [];\n                        widgets.add(lineWidget, selectionWidgetCollection);\n                    }\n                }\n                else {\n                    selectionWidgetCollection = widgets.get(lineWidget);\n                }\n            }\n            else {\n                if (isElementBoxHighlight) {\n                    selectionWidgetCollection = [];\n                    widgets.add(lineWidget, selectionWidgetCollection);\n                }\n                else {\n                    var wrapPosition = this.getWrapPosition(lineWidget, paragraph);\n                    if (wrapPosition.length > 0) {\n                        var selectionWidgetInfos = this.splitSelectionHighlightPosition(left, width, wrapPosition);\n                        if (selectionWidgetInfos.length > 0) {\n                            selectionWidgetInfos[0].floatingItems = floatingItems;\n                            widgets.add(lineWidget, selectionWidgetInfos);\n                            this.renderHighlight(page, lineWidget, selectionWidgetInfos, top, floatingItems);\n                            return;\n                        }\n                        else {\n                            selectionWidget = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo(left, width);\n                            selectionWidget.floatingItems = floatingItems;\n                            widgets.add(lineWidget, selectionWidget);\n                        }\n                    }\n                    else {\n                        selectionWidget = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo(left, width);\n                        selectionWidget.floatingItems = floatingItems;\n                        widgets.add(lineWidget, selectionWidget);\n                    }\n                }\n            }\n            if (selectionWidget === undefined) {\n                selectionWidget = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo(left, width);\n                selectionWidget.floatingItems = floatingItems;\n                widgets.add(lineWidget, selectionWidget);\n            }\n        }\n        this.renderHighlight(page, lineWidget, [selectionWidget], top, floatingItems);\n        if (isElementBoxHighlight) {\n            selectionWidgetCollection.push(selectionWidget);\n        }\n    };\n    Selection.prototype.renderHighlight = function (page, lineWidget, selectionWidget, top, floatingItems) {\n        var documentHelper = this.owner.documentHelper;\n        var pageTop = this.getPageTop(page);\n        var pageLeft = page.boundingRectangle.x;\n        var height = lineWidget.height;\n        if (this.viewer.containerTop <= pageTop\n            || pageTop < this.viewer.containerTop + documentHelper.selectionCanvas.height) {\n            var zoomFactor = documentHelper.zoomFactor;\n            this.clipSelection(page, pageTop);\n            for (var i = 0; i < selectionWidget.length; i++) {\n                var selectedWidget = selectionWidget[i];\n                var left = selectedWidget.left;\n                var width = selectedWidget.width;\n                if (this.documentHelper.isComposingIME) {\n                    this.renderDashLine(documentHelper.selectionContext, page, lineWidget, (pageLeft + (left * zoomFactor)) - this.viewer.containerLeft, top, width * zoomFactor, height);\n                }\n                else {\n                    this.documentHelper.selectionContext.fillStyle = 'gray';\n                    documentHelper.selectionContext.globalAlpha = 0.4;\n                    documentHelper.selectionContext.fillRect((pageLeft + (left * zoomFactor)) - this.viewer.containerLeft, (pageTop + (top * zoomFactor)) - this.viewer.containerTop, width * zoomFactor, height * zoomFactor);\n                }\n            }\n            if (floatingItems.length > 0) {\n                for (var z = 0; z < floatingItems.length; z++) {\n                    var left = floatingItems[z].x;\n                    var shapeTop = floatingItems[z].y;\n                    var shapeWidth = floatingItems[z].width;\n                    var shapeHeight = floatingItems[z].height;\n                    documentHelper.selectionContext.fillRect((pageLeft + (left * zoomFactor)) - this.viewer.containerLeft, (pageTop + (shapeTop * zoomFactor)) - this.viewer.containerTop, shapeWidth * zoomFactor, shapeHeight * zoomFactor);\n                }\n            }\n            documentHelper.selectionContext.restore();\n        }\n    };\n    Selection.prototype.getWrapPosition = function (lineWidget, paragraph) {\n        var bodyWidget = paragraph.bodyWidget;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(bodyWidget) && bodyWidget.floatingElements.length > 0 && lineWidget.children.length > 0) {\n            var startLeft = this.getLeftInternal(lineWidget, lineWidget.children[0], 0);\n            var width = 0;\n            var wrapPos = [];\n            var isStarted = false;\n            for (var z = 0; z < lineWidget.children.length; z++) {\n                var element = lineWidget.children[z];\n                if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeBase && element.textWrappingStyle !== 'Inline') {\n                    continue;\n                }\n                if (element.padding.left > 0) {\n                    if (wrapPos.length === 1 && wrapPos[0].end === 0) {\n                        wrapPos[0].end = wrapPos[0].start - paragraph.x;\n                        wrapPos[0].start = paragraph.x;\n                        startLeft = paragraph.x;\n                    }\n                    var clipInfo = {};\n                    clipInfo.start = startLeft + width;\n                    clipInfo.end = 0;\n                    if (isStarted) {\n                        clipInfo.end = startLeft + width + element.padding.left;\n                    }\n                    wrapPos.push(clipInfo);\n                }\n                width += element.padding.left + element.width;\n                if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                    isStarted = true;\n                }\n            }\n            if (wrapPos.length === 1 && wrapPos[0].end === 0) {\n                wrapPos[0].end = wrapPos[0].start - paragraph.x;\n                wrapPos[0].start = paragraph.x;\n            }\n            return wrapPos;\n        }\n        return [];\n    };\n    Selection.prototype.splitSelectionHighlightPosition = function (left, width, clipInfo) {\n        var selectedWidget = [];\n        for (var m = 0; m < clipInfo.length; m++) {\n            var info = clipInfo[m];\n            if ((left < info.start && left + width < info.end) || left > (info.end)) {\n                continue;\n            }\n            if (left < info.start && left + width > info.end) {\n                selectedWidget.push(new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo(left, info.start - left));\n                width = (left + width) - info.end;\n                left = info.end;\n            }\n            else if (left === info.start) {\n                if (width < info.end) {\n                    width = left + width - info.end;\n                    left = info.end;\n                }\n                else {\n                    left += info.end;\n                    width = width - info.end;\n                }\n            }\n            if (m === clipInfo.length - 1) {\n                selectedWidget.push(new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo(left, width));\n            }\n        }\n        return selectedWidget;\n    };\n    Selection.prototype.addEditRegionHighlight = function (lineWidget, left, width) {\n        var highlighters = undefined;\n        var collection = this.editRegionHighlighters;\n        if (collection.containsKey(lineWidget)) {\n            highlighters = collection.get(lineWidget);\n        }\n        else {\n            highlighters = [];\n            collection.add(lineWidget, highlighters);\n        }\n        var editRegionHighlight = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo(left, width);\n        if (this.isCurrentUser) {\n            editRegionHighlight.color = this.owner.userColor !== '' ? this.owner.userColor : '#FFFF00';\n        }\n        highlighters.push(editRegionHighlight);\n        return editRegionHighlight;\n    };\n    Selection.prototype.addContentControlEditRegionHighlight = function (lineWidget, left, width, contentControl) {\n        var collection = this.contentControleditRegionHighlighters;\n        var highlighters = [];\n        if (!collection.containsKey(contentControl)) {\n            collection.add(contentControl, new _base_dictionary__WEBPACK_IMPORTED_MODULE_5__.Dictionary());\n        }\n        var contentInfo = collection.get(contentControl);\n        contentInfo.add(lineWidget, highlighters);\n        var editRegionHighlight = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo(left, width);\n        highlighters.push(editRegionHighlight);\n    };\n    Selection.prototype.addFormFieldHighlight = function (lineWidget, left, width) {\n        var highlighters = undefined;\n        var collection = this.formFieldHighlighters;\n        if (collection.containsKey(lineWidget)) {\n            highlighters = collection.get(lineWidget);\n        }\n        else {\n            highlighters = [];\n            collection.add(lineWidget, highlighters);\n        }\n        var formFieldHighlight = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo(left, width);\n        highlighters.push(formFieldHighlight);\n    };\n    Selection.prototype.createHighlightBorderInsideTable = function (cellWidget) {\n        var page = this.getPage(cellWidget);\n        var selectionWidget = undefined;\n        var left = cellWidget.x - cellWidget.margin.left + cellWidget.leftBorderWidth;\n        var width = cellWidget.width + cellWidget.margin.left\n            + cellWidget.margin.right - cellWidget.leftBorderWidth - cellWidget.rightBorderWidth;\n        var top = cellWidget.y;\n        var height = cellWidget.height;\n        var pageTop = this.getPageTop(page);\n        var pageLeft = page.boundingRectangle.x;\n        var isVisiblePage = this.documentHelper.isPageInVisibleBound(page, pageTop);\n        var widgets = this.selectedWidgets;\n        if (!this.isHightlightEditRegionInternal && !this.isHighlightFormFields) {\n            if (widgets.containsKey(cellWidget) && widgets.get(cellWidget) instanceof _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo) {\n                selectionWidget = widgets.get(cellWidget);\n                if (isVisiblePage) {\n                    this.documentHelper.selectionContext.clearRect((pageLeft + (selectionWidget.left * this.documentHelper.zoomFactor) - this.viewer.containerLeft), (pageTop + (top * this.documentHelper.zoomFactor)) - this.viewer.containerTop, selectionWidget.width * this.documentHelper.zoomFactor, height * this.documentHelper.zoomFactor);\n                }\n            }\n            else {\n                selectionWidget = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo(left, width);\n                if (widgets.containsKey(cellWidget)) {\n                    widgets.remove(widgets.get(cellWidget));\n                }\n                widgets.add(cellWidget, selectionWidget);\n            }\n        }\n        if (isVisiblePage) {\n            this.documentHelper.selectionContext.fillStyle = 'gray';\n            this.documentHelper.selectionContext.globalAlpha = 0.4;\n            var zoomFactor = this.documentHelper.zoomFactor;\n            this.clipSelection(page, pageTop);\n            this.documentHelper.selectionContext.fillRect((pageLeft + (left * zoomFactor)) - this.viewer.containerLeft, (pageTop + (top * zoomFactor)) - this.viewer.containerTop, width * zoomFactor, height * zoomFactor);\n            this.documentHelper.selectionContext.restore();\n        }\n    };\n    Selection.prototype.clipSelection = function (page, pageTop) {\n        var documentHelper = this.owner.documentHelper;\n        var width;\n        var height;\n        if (this.viewer instanceof _index__WEBPACK_IMPORTED_MODULE_3__.WebLayoutViewer && this.documentHelper.zoomFactor < 1) {\n            width = page.boundingRectangle.width / this.documentHelper.zoomFactor;\n            height = page.boundingRectangle.height / this.documentHelper.zoomFactor;\n        }\n        else {\n            width = page.boundingRectangle.width * this.documentHelper.zoomFactor;\n            height = page.boundingRectangle.height * this.documentHelper.zoomFactor;\n        }\n        var left = page.boundingRectangle.x;\n        documentHelper.selectionContext.beginPath();\n        documentHelper.selectionContext.save();\n        documentHelper.selectionContext.rect(left - this.viewer.containerLeft, pageTop - this.viewer.containerTop, width, height);\n        documentHelper.selectionContext.clip();\n    };\n    /**\n     * Add selection highlight\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.addSelectionHighlight = function (canvasContext, widget, top, page) {\n        if (this.selectedWidgets.containsKey(widget)) {\n            var height = this.documentHelper.render.getScaledValue(widget.height);\n            var widgetInfo = this.selectedWidgets.get(widget);\n            var widgetInfoCollection = undefined;\n            if (widgetInfo instanceof _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo) {\n                widgetInfoCollection = [];\n                widgetInfoCollection.push(widgetInfo);\n            }\n            else {\n                widgetInfoCollection = widgetInfo;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(widgetInfoCollection)) {\n                for (var i = 0; i < widgetInfoCollection.length; i++) {\n                    var selectedWidgetInfo = widgetInfoCollection[i];\n                    var width = this.documentHelper.render.getScaledValue(widgetInfoCollection[i].width);\n                    var left = this.documentHelper.render.getScaledValue(widgetInfoCollection[i].left, 1);\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(page)) {\n                        page = this.owner.selectionModule.getPage(widget.paragraph);\n                    }\n                    this.owner.selectionModule.clipSelection(page, this.owner.selectionModule.getPageTop(page));\n                    if (this.documentHelper.isComposingIME) {\n                        this.renderDashLine(canvasContext, page, widget, left, top, width, height);\n                    }\n                    else {\n                        canvasContext.globalAlpha = 0.4;\n                        canvasContext.fillStyle = 'gray';\n                        canvasContext.fillRect(left, this.documentHelper.render.getScaledValue(top, 2), width, height);\n                        if (selectedWidgetInfo.floatingItems && selectedWidgetInfo.floatingItems.length > 0) {\n                            for (var j = 0; j < selectedWidgetInfo.floatingItems.length; j++) {\n                                var shape = selectedWidgetInfo.floatingItems[j];\n                                width = this.documentHelper.render.getScaledValue(shape.width);\n                                left = this.documentHelper.render.getScaledValue(shape.x, 1);\n                                var shapeTop = this.documentHelper.render.getScaledValue(shape.y, 2);\n                                canvasContext.fillRect(left, shapeTop, width, this.documentHelper.render.getScaledValue(shape.height));\n                            }\n                        }\n                    }\n                    canvasContext.restore();\n                }\n            }\n        }\n    };\n    Selection.prototype.renderDashLine = function (ctx, page, widget, left, top, width, height) {\n        var fontColor = this.characterFormat.fontColor;\n        var fillColor = fontColor ? _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.getColor(fontColor) : '#000000';\n        ctx.globalAlpha = 1;\n        // Get character format copied from selection format\n        var format = this.owner.editorModule.copyInsertFormat(new _index__WEBPACK_IMPORTED_MODULE_3__.WCharacterFormat(), false);\n        var heightInfo = this.documentHelper.textHelper.getHeight(format);\n        var pageTop = this.getPageTop(page);\n        var descent = heightInfo.Height - heightInfo.BaselineOffset;\n        top = this.documentHelper.render.getUnderlineYPosition(widget) + top + 4 - descent;\n        this.documentHelper.render.renderDashLine(ctx, left, (pageTop - this.viewer.containerTop) + (top * this.documentHelper.zoomFactor), width, fillColor, true);\n    };\n    /**\n     * Add Selection highlight inside table\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.addSelectionHighlightTable = function (canvasContext, tableCellWidget, page) {\n        if (this.selectedWidgets.containsKey(tableCellWidget)) {\n            var selectedWidgetInfo = this.selectedWidgets.get(tableCellWidget);\n            var selectedWidgetInfoCollection = undefined;\n            if (selectedWidgetInfo instanceof _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo) {\n                selectedWidgetInfoCollection = [];\n                selectedWidgetInfoCollection.push(selectedWidgetInfo);\n            }\n            else {\n                selectedWidgetInfoCollection = selectedWidgetInfo;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(selectedWidgetInfoCollection)) {\n                for (var i = 0; i < selectedWidgetInfoCollection.length; i++) {\n                    var left = this.documentHelper.render.getScaledValue(selectedWidgetInfoCollection[i].left, 1);\n                    var top_1 = this.documentHelper.render.getScaledValue(tableCellWidget.y, 2);\n                    var width = this.documentHelper.render.getScaledValue(selectedWidgetInfoCollection[i].width);\n                    var height = this.documentHelper.render.getScaledValue(tableCellWidget.height);\n                    canvasContext.fillStyle = 'gray';\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(page)) {\n                        page = this.owner.selectionModule.getPage(tableCellWidget);\n                    }\n                    this.owner.selectionModule.clipSelection(page, this.owner.selectionModule.getPageTop(page));\n                    canvasContext.fillRect(left, top_1, width, height);\n                    canvasContext.restore();\n                }\n            }\n        }\n    };\n    Selection.prototype.removeSelectionHighlight = function (widget) {\n        var left = 0;\n        var top = 0;\n        var width = 0;\n        var height = 0;\n        var page = undefined;\n        if (widget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.LineWidget) {\n            var lineWidget = widget;\n            var currentParaWidget = lineWidget.paragraph;\n            page = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentParaWidget) ?\n                this.getPage((lineWidget.paragraph)) : undefined;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(page)) {\n                return;\n            }\n            top = this.getTop(lineWidget);\n            height = lineWidget.height;\n        }\n        else if (widget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n            page = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(widget) ?\n                this.getPage(widget) : undefined;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(page)) {\n                return;\n            }\n            top = widget.y;\n            height = widget.height;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(page)) {\n            return;\n        }\n        var selectedWidget = this.selectedWidgets.get(widget);\n        var selectedWidgetCollection = undefined;\n        if (selectedWidget instanceof _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo) {\n            selectedWidgetCollection = [];\n            selectedWidgetCollection.push(selectedWidget);\n        }\n        else {\n            selectedWidgetCollection = selectedWidget;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(selectedWidgetCollection)) {\n            for (var i = 0; i < selectedWidgetCollection.length; i++) {\n                width = selectedWidgetCollection[i].width;\n                left = selectedWidgetCollection[i].left;\n                var pageRect = page.boundingRectangle;\n                var pageIndex = this.documentHelper.pages.indexOf(page);\n                var pageGap = this.viewer.pageGap;\n                var pageTop = (pageRect.y - pageGap * (pageIndex + 1)) * this.documentHelper.zoomFactor + pageGap * (pageIndex + 1);\n                var pageLeft = pageRect.x;\n                var zoomFactor = this.documentHelper.zoomFactor;\n                if (this.viewer.containerTop <= pageTop\n                    || pageTop < this.viewer.containerTop + this.documentHelper.selectionCanvas.height) {\n                    this.documentHelper.selectionContext.clearRect((pageLeft + (left * zoomFactor) - this.viewer.containerLeft) - 0.5, (pageTop + (top * zoomFactor)) - this.viewer.containerTop - 0.5, width * zoomFactor + 0.5, height * zoomFactor + 0.5);\n                }\n            }\n        }\n    };\n    /**\n     * Selects the current word.\n     *\n     * @param excludeSpace True if exclude white space; Otherwise, false.\n     * @returns {void}\n     */\n    Selection.prototype.selectCurrentWord = function (excludeSpace) {\n        this.isSelectCurrentWord = true;\n        var startPosition = this.start.clone();\n        var endPosition = this.end.clone();\n        this.selectCurrentWordRange(startPosition, endPosition, excludeSpace ? excludeSpace : false);\n        this.selectRange(startPosition, endPosition);\n        this.isSelectCurrentWord = false;\n    };\n    /**\n     * Selects the current paragraph.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.selectParagraph = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            this.start.paragraphStartInternal(this, false);\n            this.end.moveToParagraphEndInternal(this, false);\n            this.upDownSelectionLength = this.end.location.x;\n            this.fireSelectionChanged(true);\n        }\n    };\n    /**\n     * Selects the current line.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.selectLine = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            this.moveToLineStart();\n            this.handleShiftEndKey();\n        }\n    };\n    /**\n     * Moves the selection to the start of the document.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToDocumentStart = function () {\n        this.handleControlHomeKey();\n    };\n    /**\n     * Moves the selection to the end of the document.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToDocumentEnd = function () {\n        this.handleControlEndKey();\n    };\n    /**\n     * Moves the selection to the current paragraph start.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToParagraphStart = function () {\n        if (this.isForward) {\n            this.start.paragraphStartInternal(this, false);\n            this.end.setPositionInternal(this.start);\n            this.upDownSelectionLength = this.end.location.x;\n        }\n        else {\n            this.end.paragraphStartInternal(this, false);\n            this.start.setPositionInternal(this.end);\n            this.upDownSelectionLength = this.start.location.x;\n        }\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Moves the selection to the current paragraph end.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToParagraphEnd = function () {\n        if (this.isForward) {\n            this.start.moveToParagraphEndInternal(this, false);\n            this.end.setPositionInternal(this.start);\n            this.upDownSelectionLength = this.end.location.x;\n        }\n        else {\n            this.end.moveToParagraphEndInternal(this, false);\n            this.start.setPositionInternal(this.end);\n            this.upDownSelectionLength = this.start.location.x;\n        }\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Moves the selection to the next line.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToNextLine = function () {\n        this.moveDown();\n    };\n    /**\n     * Moves the selection to the previous line.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToPreviousLine = function () {\n        this.moveUp();\n    };\n    /**\n     * Moves the selection to the next character.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToNextCharacter = function () {\n        this.handleRightKey();\n    };\n    /**\n     * Moves the selection to the previous character.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToPreviousCharacter = function () {\n        this.handleLeftKey();\n    };\n    Selection.prototype.selectCurrentWordRange = function (startPosition, endPosition, excludeSpace) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startPosition)) {\n            if (startPosition.offset > 0) {\n                var wordStart = startPosition.clone();\n                var indexInInline = 0;\n                var inlineObj = startPosition.currentWidget.getInline(startPosition.offset, indexInInline);\n                var inline = inlineObj.element;\n                indexInInline = inlineObj.index;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline) && inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 1) {\n                    if (startPosition.offset > 2 && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.fieldSeparator) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.fieldBegin))) {\n                        wordStart.setPositionParagraph(wordStart.currentWidget, startPosition.offset - 2);\n                        wordStart.moveToWordEndInternal(0, false);\n                        if (!(wordStart.paragraph === startPosition.paragraph && wordStart.offset === startPosition.offset - 1)) {\n                            startPosition.moveToWordStartInternal(2);\n                        }\n                    }\n                    else if (startPosition.offset > 3 && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.fieldSeparator)) {\n                        wordStart.setPositionParagraph(wordStart.currentWidget, startPosition.offset - 3);\n                        wordStart.moveToWordEndInternal(0, false);\n                        if (!(wordStart.paragraph === startPosition.paragraph && wordStart.offset === startPosition.offset)) {\n                            startPosition.moveToWordStartInternal(2);\n                        }\n                    }\n                }\n                else {\n                    wordStart.setPositionParagraph(wordStart.currentWidget, startPosition.offset - 1);\n                    wordStart.moveToWordEndInternal(0, false);\n                    if (!(wordStart.paragraph === startPosition.paragraph && wordStart.offset === startPosition.offset)) {\n                        startPosition.moveToWordStartInternal(2);\n                    }\n                }\n            }\n            endPosition.moveToWordEndInternal(2, excludeSpace);\n        }\n    };\n    /**\n     * Extends the selection to the paragraph start.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToParagraphStart = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        this.end.paragraphStartInternal(this, true);\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extends the selection to the paragraph end.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToParagraphEnd = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        this.end.moveToParagraphEndInternal(this, true);\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Move to next text position\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.moveNextPosition = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        if (this.isEmpty) {\n            this.start.moveNextPosition();\n            this.end.setPositionInternal(this.start);\n        }\n        this.updateForwardSelection();\n        this.upDownSelectionLength = this.start.location.x;\n        this.fireSelectionChanged(true);\n        if (this.documentHelper.isFormFillProtectedMode) {\n            var formField = this.getCurrentFormField();\n            if (!formField) {\n                formField = this.getFormFieldInFormFillMode();\n                this.selectPrevNextFormField(true, formField);\n            }\n        }\n    };\n    /**\n     * Move to next paragraph\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.moveToNextParagraph = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        this.end.moveToNextParagraphStartInternal();\n        this.start.setPositionInternal(this.end);\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Navigates to the next footnote from the current selection.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.nextFootnote = function () {\n        if (this.isinFootnote) {\n            var footNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n            var colLength = this.documentHelper.footnoteCollection.length;\n            var indexCount = this.documentHelper.footnoteCollection.indexOf(footNoteElement);\n            var nextFootnoteElement = this.documentHelper.footnoteCollection[indexCount + 1];\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextFootnoteElement)) {\n                nextFootnoteElement = footNoteElement;\n            }\n            var start = this.start.clone();\n            var end = this.end.clone();\n            for (var i = 0; i < this.documentHelper.pages.length; i++) {\n                var referenceElement = this.documentHelper.pages[i].footnoteWidget;\n                for (var j = 1; j < referenceElement.bodyWidgets.length; j++) {\n                    var element = (referenceElement.bodyWidgets[j]).footNoteReference;\n                    if (element === nextFootnoteElement) {\n                        start.setPositionParagraph(referenceElement.bodyWidgets[j].childWidgets[0].childWidgets[0], 0);\n                        end.setPositionInternal(start);\n                        this.selectRange(start, end);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Navigates to the previous footnote from the current selection.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.previousFootnote = function () {\n        if (this.isinFootnote) {\n            var footNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n            var colLength = this.documentHelper.footnoteCollection.length;\n            var indexCount = this.documentHelper.footnoteCollection.indexOf(footNoteElement);\n            var previousFootnote = this.documentHelper.footnoteCollection[indexCount - 1];\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(previousFootnote)) {\n                previousFootnote = footNoteElement;\n            }\n            var startPosition = this.start.clone();\n            var endPosition = this.end.clone();\n            for (var i = 0; i < this.documentHelper.pages.length; i++) {\n                var footnote = this.documentHelper.pages[i].footnoteWidget;\n                for (var j = 1; j < footnote.bodyWidgets.length; j++) {\n                    var element = (footnote.bodyWidgets[j]).footNoteReference;\n                    if (element === previousFootnote) {\n                        startPosition.setPositionParagraph(footnote.bodyWidgets[j].childWidgets[0].childWidgets[0], 0);\n                        endPosition.setPositionInternal(startPosition);\n                        this.selectRange(startPosition, endPosition);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Navigates to the next endnote from the current selection\n     *\n     * @returns {void}\n     */\n    Selection.prototype.nextEndnote = function () {\n        if (this.isinEndnote) {\n            var endNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n            var indexCount = this.documentHelper.endnoteCollection.indexOf(endNoteElement);\n            var nextEndnote = this.documentHelper.endnoteCollection[indexCount + 1];\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextEndnote)) {\n                nextEndnote = endNoteElement;\n            }\n            var startPosition = this.start.clone();\n            var endPosition = this.end.clone();\n            var endnoteElement = this.documentHelper.pages[this.endPage - 1].endnoteWidget;\n            for (var j = 0; j < endnoteElement.childWidgets.length; j++) {\n                var element = (endnoteElement.bodyWidgets[j]).footNoteReference;\n                if (element === nextEndnote) {\n                    startPosition.setPositionParagraph(endnoteElement.bodyWidgets[j].childWidgets[0].childWidgets[0], 0);\n                    endPosition.setPositionInternal(startPosition);\n                    this.selectRange(startPosition, endPosition);\n                }\n            }\n        }\n    };\n    /**\n     * Navigates to the previous endnote from the current selection.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.previousEndnote = function () {\n        if (this.isinEndnote) {\n            var endNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n            var indexCount = this.documentHelper.endnoteCollection.indexOf(endNoteElement);\n            var inline = this.documentHelper.endnoteCollection[indexCount - 1];\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline)) {\n                inline = endNoteElement;\n            }\n            var startPosition = this.start.clone();\n            var endPosition = this.end.clone();\n            var referenceElement = this.documentHelper.pages[this.endPage - 1].endnoteWidget;\n            for (var j = 0; j < referenceElement.childWidgets.length; j++) {\n                var element = (referenceElement.bodyWidgets[j]).footNoteReference;\n                if (element === inline) {\n                    startPosition.setPositionParagraph(referenceElement.bodyWidgets[j].childWidgets[0].childWidgets[0], 0);\n                    endPosition.setPositionInternal(startPosition);\n                    this.selectRange(startPosition, endPosition);\n                }\n            }\n        }\n    };\n    /**\n     * Move to previous text position\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.movePreviousPosition = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        if (this.isEmpty) {\n            this.start.movePreviousPosition();\n            this.end.setPositionInternal(this.start);\n        }\n        this.updateBackwardSelection();\n        this.upDownSelectionLength = this.start.location.x;\n        this.fireSelectionChanged(true);\n        if (this.documentHelper.isFormFillProtectedMode) {\n            var formField = this.getCurrentFormField();\n            if (!formField) {\n                formField = this.getFormFieldInFormFillMode();\n                this.selectPrevNextFormField(false, formField);\n            }\n        }\n    };\n    /**\n     * Move to previous paragraph\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.moveToPreviousParagraph = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        this.end.moveToPreviousParagraph(this);\n        this.start.setPositionInternal(this.end);\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extends the selection to previous line.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToPreviousLine = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        this.end.moveToPreviousLine(this, this.upDownSelectionLength);\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extends the selection to line end\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToLineEnd = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        this.end.moveToLineEndInternal(this, true);\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extends the selection to line start.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToLineStart = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        this.end.moveToLineStartInternal(this, true);\n        this.upDownSelectionLength = this.end.location.x;\n        // To select Paragraph mark similar to MS WORD\n        if (this.start.paragraph === this.end.paragraph && this.start.offset === this.start.currentWidget.getEndOffset()\n            && this.isParagraphLastLine(this.start.currentWidget) && this.isParagraphFirstLine(this.end.currentWidget)) {\n            this.start.setPositionParagraph(this.start.currentWidget, this.start.offset + 1);\n        }\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.moveUp = function () {\n        if (this.documentHelper.isFormFillProtectedMode) {\n            this.selectPrevNextFormField(false);\n            return;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        if (!this.isEmpty) {\n            if (this.isForward) {\n                this.end.setPositionInternal(this.start);\n            }\n            else {\n                this.start.setPositionInternal(this.end);\n            }\n            this.upDownSelectionLength = this.start.location.x;\n        }\n        this.upDownSelectionLength = this.start.location.x;\n        var beforeUp = this.start.currentWidget.paragraph.bodyWidget.columnIndex;\n        var isMultiColumn = this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 ? true : false;\n        var beforeIndex = this.start.currentWidget.paragraph.bodyWidget.index;\n        this.start.moveUp(this, this.upDownSelectionLength);\n        isMultiColumn = this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 ? true : false;\n        var afterUp = this.start.currentWidget.paragraph.bodyWidget.columnIndex;\n        if (isMultiColumn) {\n            if (beforeUp === afterUp || beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns === 1) {\n                this.end.setPositionInternal(this.start);\n            }\n            else {\n                do {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start.currentWidget.paragraph.previousRenderedWidget) || (beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns === 1)) {\n                        break;\n                    }\n                    if (beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 && beforeUp > this.start.currentWidget.paragraph.bodyWidget.columnIndex) {\n                        break;\n                    }\n                    this.start.moveUp(this, this.upDownSelectionLength);\n                } while (beforeUp !== this.start.currentWidget.paragraph.bodyWidget.columnIndex);\n            }\n        }\n        this.end.setPositionInternal(this.start);\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.moveDown = function () {\n        if (this.documentHelper.isFormFillProtectedMode) {\n            this.selectPrevNextFormField(true);\n            return;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        if (!this.isEmpty) {\n            if (this.isForward) {\n                this.start.setPositionInternal(this.end);\n            }\n            else {\n                this.end.setPositionInternal(this.start);\n            }\n            this.upDownSelectionLength = this.start.location.x;\n        }\n        this.upDownSelectionLength = this.start.location.x;\n        var beforeDown = this.start.currentWidget.paragraph.bodyWidget.columnIndex;\n        var beforeIndex = this.start.currentWidget.paragraph.bodyWidget.index;\n        var isMultiColumn = this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 ? true : false;\n        this.start.moveDown(this, this.upDownSelectionLength);\n        var afterDown = this.start.currentWidget.paragraph.bodyWidget.columnIndex;\n        if (isMultiColumn) {\n            if (beforeDown === afterDown || beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns === 1) {\n                this.end.setPositionInternal(this.start);\n            }\n            else {\n                do {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start.currentWidget.paragraph.nextRenderedWidget) || (beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns === 1)) {\n                        break;\n                    }\n                    if (beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 && this.documentHelper.layout.getBodyWidget(this.start.currentWidget.paragraph.bodyWidget, false) === this.start.currentWidget.paragraph.bodyWidget) {\n                        break;\n                    }\n                    this.start.moveDown(this, this.upDownSelectionLength);\n                } while (beforeDown !== this.start.currentWidget.paragraph.bodyWidget.columnIndex);\n            }\n        }\n        this.end.setPositionInternal(this.start);\n        this.fireSelectionChanged(true);\n    };\n    Selection.prototype.updateForwardSelection = function () {\n        if (!this.isEmpty) {\n            if (this.isForward) {\n                this.start.setPositionInternal(this.end);\n            }\n            else {\n                this.end.setPositionInternal(this.start);\n            }\n        }\n    };\n    Selection.prototype.updateBackwardSelection = function () {\n        if (!this.isEmpty) {\n            if (this.isForward) {\n                this.end.setPositionInternal(this.start);\n            }\n            else {\n                this.start.setPositionInternal(this.end);\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.getFirstBlockInFirstCell = function (table) {\n        if (table.childWidgets.length > 0) {\n            var firstrow = table.childWidgets[0];\n            if (firstrow.childWidgets.length > 0) {\n                var firstcell = firstrow.childWidgets[0];\n                if (firstcell.childWidgets.length === 0) {\n                    return undefined;\n                }\n                return firstcell.childWidgets[0];\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.getFirstCellInRegion = function (row, startCell, selectionLength, isMovePrevious) {\n        var cellStart = this.getCellLeft(row, startCell);\n        var cellEnd = cellStart + startCell.cellFormat.cellWidth;\n        var flag = true;\n        if (cellStart <= selectionLength && selectionLength < cellEnd) {\n            for (var k = 0; k < row.childWidgets.length; k++) {\n                var left = this.getCellLeft(row, row.childWidgets[k]);\n                if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(cellStart, 2) <= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(left, 2) &&\n                    _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(left, 2) < _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(cellEnd, 2)) {\n                    flag = false;\n                    return row.childWidgets[k];\n                }\n            }\n        }\n        else {\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cellLeft = this.getCellLeft(row, row.childWidgets[j]);\n                if (cellLeft <= selectionLength && cellLeft +\n                    row.childWidgets[j].cellFormat.cellWidth > selectionLength) {\n                    flag = false;\n                    return row.childWidgets[j];\n                }\n            }\n        }\n        if (flag) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(row.previousRenderedWidget) && isMovePrevious) {\n                var previousWidget = row.previousRenderedWidget;\n                return this.getFirstCellInRegion(previousWidget, startCell, selectionLength, isMovePrevious);\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(row.nextRenderedWidget) && !isMovePrevious) {\n                return this.getFirstCellInRegion(row.nextRenderedWidget, startCell, selectionLength, isMovePrevious);\n            }\n        }\n        return row.childWidgets[0];\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.getFirstParagraph = function (tableCell) {\n        while (tableCell.previousSplitWidget) {\n            tableCell = tableCell.previousSplitWidget;\n        }\n        var firstBlock = tableCell.firstChild;\n        return this.documentHelper.getFirstParagraphBlock(firstBlock);\n    };\n    /**\n     * Get last block in last cell\n     *\n     * @private\n     * @returns {void}\n     */\n    //Table\n    Selection.prototype.getLastBlockInLastCell = function (table) {\n        if (table.childWidgets.length > 0) {\n            var lastRow = table.childWidgets[table.childWidgets.length - 1];\n            var lastCell = lastRow.childWidgets[lastRow.childWidgets.length - 1];\n            while (lastCell.childWidgets.length === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(lastCell.previousSplitWidget)) {\n                lastCell = lastCell.previousSplitWidget;\n            }\n            return lastCell.childWidgets[lastCell.childWidgets.length - 1];\n        }\n        return undefined;\n    };\n    /**\n     * Moves the selection to start of the current line.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToLineStart = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        this.updateBackwardSelection();\n        this.start.moveToLineStartInternal(this, false);\n        this.end.setPositionInternal(this.start);\n        this.upDownSelectionLength = this.start.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Moves the selection to end of the current line.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToLineEnd = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        this.updateForwardSelection();\n        this.start.moveToLineEndInternal(this, false);\n        this.end.setPositionInternal(this.start);\n        this.upDownSelectionLength = this.start.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Get Page top\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.getPageTop = function (page) {\n        return (page.boundingRectangle.y - this.viewer.pageGap * (this.documentHelper.pages.indexOf(page) + 1)) * this.documentHelper.zoomFactor + this.viewer.pageGap * (this.documentHelper.pages.indexOf(page) + 1);\n    };\n    /**\n     * Move text position to cursor point\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.moveTextPosition = function (cursorPoint, textPosition, isMouseLeave) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        //Updates the text position based on the cursor position.\n        var widget = this.documentHelper.getLineWidgetInternal(cursorPoint, true);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(widget)) {\n            this.updateTextPositionWidget(widget, cursorPoint, textPosition, true);\n        }\n        this.upDownSelectionLength = textPosition.location.x;\n        var selectionStartIndex = this.start.getHierarchicalIndexInternal();\n        var selectionEndIndex = this.end.getHierarchicalIndexInternal();\n        if (selectionStartIndex !== selectionEndIndex && !isMouseLeave) {\n            // Extends selection end to field begin or field end.\n            if (_selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition.isForwardSelection(selectionStartIndex, selectionEndIndex)) {\n                textPosition.validateForwardFieldSelection(selectionStartIndex, selectionEndIndex);\n            }\n            else {\n                textPosition.validateBackwardFieldSelection(selectionStartIndex, selectionEndIndex);\n            }\n        }\n        this.fireSelectionChanged(true);\n    };\n    //Helper Method Implementation\n    //Document\n    /**\n     * Get document start position\n     *\n     * @private\n     * @returns {TextPosition}\n     */\n    Selection.prototype.getDocumentStart = function () {\n        var textPosition = undefined;\n        var block = this.documentHelper.pages[0].bodyWidgets[0].childWidgets[0];\n        return this.setPositionForBlock(block, true);\n    };\n    /**\n     * Get document end position\n     *\n     * @private\n     * @returns {TextPosition}\n     */\n    Selection.prototype.getDocumentEnd = function () {\n        var textPosition = undefined;\n        var documentStart = this.owner.documentStart;\n        var lastPage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n        // Bug 893168: If the length of the page's body widgets is 1 and the length of the child widgets is 0, then it is necessary to check the previous page.\n        while (lastPage.previousPage && lastPage.bodyWidgets.length === 1\n            && lastPage.bodyWidgets[0].childWidgets.length === 0) {\n            lastPage = lastPage.previousPage;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(documentStart) && lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1].childWidgets.length > 0) {\n            var block = undefined;\n            var section = lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1];\n            var blocks = section.childWidgets;\n            var lastBlkItem = blocks.length - 1;\n            var lastBlock = blocks[lastBlkItem];\n            if (lastBlock instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BlockWidget) {\n                block = lastBlock;\n            }\n            textPosition = this.setPositionForBlock(block, false);\n        }\n        return textPosition;\n    };\n    //Keyboard shortcut internal API\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlEndKey = function () {\n        this.isHomeEnd = true;\n        var documentEnd = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.documentEnd)) {\n            documentEnd = this.owner.documentEnd;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(documentEnd)) {\n            this.owner.selectionModule.selectContent(documentEnd, true);\n        }\n        if (this.owner.enableAutoFocus) {\n            this.checkForCursorVisibility();\n        }\n        this.isHomeEnd = false;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlHomeKey = function () {\n        this.isHomeEnd = true;\n        var documentStart = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.documentStart)) {\n            documentStart = this.owner.documentStart;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(documentStart)) {\n            this.owner.selectionModule.selectContent(documentStart, true);\n        }\n        if (this.owner.enableAutoFocus) {\n            this.checkForCursorVisibility();\n        }\n        this.isHomeEnd = false;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlLeftKey = function () {\n        this.extendToWordStartInternal(true);\n        this.checkForCursorVisibility();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlRightKey = function () {\n        this.extendToWordEndInternal(true);\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles control down key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlDownKey = function () {\n        this.moveToNextParagraph();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles control up key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlUpKey = function () {\n        this.moveToPreviousParagraph();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleShiftLeftKey = function () {\n        this.extendBackward();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles shift up key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleShiftUpKey = function () {\n        this.extendToPreviousLine();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles shift right key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleShiftRightKey = function () {\n        this.extendForward();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles shift down key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleShiftDownKey = function () {\n        this.extendToNextLine();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlShiftLeftKey = function () {\n        var isForward = this.isForward ? this.start.isCurrentParaBidi : this.end.isCurrentParaBidi;\n        if (isForward) {\n            this.extendToWordEndInternal(false);\n        }\n        else {\n            this.extendToWordStartInternal(false);\n        }\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles control shift up key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlShiftUpKey = function () {\n        this.extendToParagraphStart();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles control shift right key\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlShiftRightKey = function () {\n        var isForward = this.isForward ? this.start.isCurrentParaBidi : this.end.isCurrentParaBidi;\n        if (isForward) {\n            this.extendToWordStartInternal(false);\n        }\n        else {\n            this.extendToWordEndInternal(false);\n        }\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles control shift down key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlShiftDownKey = function () {\n        this.extendToParagraphEnd();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles left key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleLeftKey = function () {\n        if (this.end.isCurrentParaBidi) {\n            this.moveNextPosition();\n        }\n        else {\n            this.movePreviousPosition();\n        }\n        if (this.owner.enableAutoFocus) {\n            this.checkForCursorVisibility();\n        }\n    };\n    /**\n     * Handles up key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleUpKey = function () {\n        this.isMoveDownOrMoveUp = true;\n        this.moveUp();\n        this.isMoveDownOrMoveUp = false;\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles right key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleRightKey = function () {\n        if (this.end.isCurrentParaBidi) {\n            this.movePreviousPosition();\n        }\n        else {\n            this.moveNextPosition();\n        }\n        if (this.owner.enableAutoFocus) {\n            this.checkForCursorVisibility();\n        }\n    };\n    /**\n     * Handles end key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleEndKey = function () {\n        this.isHomeEnd = true;\n        this.moveToLineEnd();\n        this.checkForCursorVisibility();\n        this.isHomeEnd = false;\n    };\n    /**\n     * Handles home key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleHomeKey = function () {\n        this.isHomeEnd = true;\n        this.moveToLineStart();\n        this.checkForCursorVisibility();\n        this.isHomeEnd = false;\n    };\n    /**\n     * Handles down key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleDownKey = function () {\n        this.isMoveDownOrMoveUp = true;\n        this.moveDown();\n        this.isMoveDownOrMoveUp = false;\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles shift end key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleShiftEndKey = function () {\n        this.isHomeEnd = true;\n        this.extendToLineEnd();\n        this.checkForCursorVisibility();\n        this.isHomeEnd = false;\n    };\n    /**\n     * Handles shift home key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleShiftHomeKey = function () {\n        this.isHomeEnd = true;\n        this.extendToLineStart();\n        this.checkForCursorVisibility();\n        this.isHomeEnd = false;\n    };\n    /**\n     * Handles control shift end key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlShiftEndKey = function () {\n        this.isHomeEnd = true;\n        var documentEnd = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.documentEnd)) {\n            documentEnd = this.owner.documentEnd;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(documentEnd)) {\n            this.end.setPosition(documentEnd.currentWidget, false);\n            this.fireSelectionChanged(true);\n        }\n        this.checkForCursorVisibility();\n        this.isHomeEnd = false;\n    };\n    /**\n     * Handles control shift home key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlShiftHomeKey = function () {\n        this.isHomeEnd = true;\n        var documentStart = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.documentStart)) {\n            documentStart = this.owner.documentStart;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(documentStart)) {\n            this.end.setPositionInternal(documentStart);\n            this.fireSelectionChanged(true);\n        }\n        this.checkForCursorVisibility();\n        this.isHomeEnd = false;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleSpaceBarKey = function () {\n        if (this.owner.documentHelper.isDocumentProtected && this.owner.documentHelper.protectionType === 'FormFieldsOnly'\n            && this.getFormFieldType() === 'CheckBox') {\n            this.owner.editorModule.toggleCheckBoxFormField(this.getCurrentFormField());\n        }\n    };\n    /**\n     * Handles tab key.\n     *\n     * @param isNavigateInCell\n     * @param isShiftTab\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleTabKey = function (isNavigateInCell, isShiftTab) {\n        var start = this.start;\n        if (!this.isForward) {\n            start = this.end;\n        }\n        var isCursorAtParaStart = false;\n        var isCursorAtLineStart = false;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(start)) {\n            return;\n        }\n        if ((start.offset === 0 || (!this.isForward && this.end.offset === 0)) && start.paragraph.paragraphFormat.listFormat.listId == -1) {\n            if (start.currentWidget.isFirstLine()) {\n                isCursorAtParaStart = true;\n            }\n            isCursorAtLineStart = true;\n        }\n        if (this.start.paragraph.isInsideTable && this.end.paragraph.isInsideTable && (isNavigateInCell || isShiftTab)) {\n            //Perform tab navigation\n            if (!this.owner.documentHelper.isDocumentProtected && !(this.documentHelper.protectionType === 'FormFieldsOnly')) {\n                if (isShiftTab) {\n                    this.selectPreviousCell();\n                }\n                else {\n                    this.selectNextCell();\n                }\n            }\n        }\n        else if ((isNavigateInCell || isShiftTab) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(start) && start.offset === this.getStartOffset(start.paragraph)\n            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(start.paragraph.paragraphFormat) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(start.paragraph.paragraphFormat.listFormat)\n            && start.paragraph.paragraphFormat.listFormat.listId !== -1 && !this.owner.isReadOnlyMode) {\n            var selection = this.documentHelper.selection;\n            var currentPara = start.paragraph;\n            var isFirstParaForList = false;\n            if (!selection.isForward) {\n                currentPara = selection.end.paragraph;\n            }\n            isFirstParaForList = this.owner.editorModule.isFirstParaForList(selection, currentPara);\n            if (isFirstParaForList) {\n                if (isShiftTab) {\n                    this.owner.editorModule.updateListLevelIndent(-this.documentHelper.defaultTabWidth, currentPara);\n                }\n                else {\n                    this.owner.editorModule.updateListLevelIndent(this.documentHelper.defaultTabWidth, currentPara);\n                }\n            }\n            else {\n                this.owner.editorModule.updateListLevel(isShiftTab ? false : true);\n            }\n        }\n        else if (!this.owner.isReadOnlyMode && !this.documentHelper.isFormFillProtectedMode) {\n            if (isCursorAtParaStart && start.paragraph.paragraphFormat.firstLineIndent < this.documentHelper.defaultTabWidth) {\n                this.documentHelper.owner.editorModule.onApplyParagraphFormat('firstLineIndent', this.documentHelper.defaultTabWidth, true, false);\n            }\n            else if (isCursorAtLineStart) {\n                if (isShiftTab) {\n                    this.owner.editorModule.decreaseIndent();\n                }\n                else {\n                    if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(start.paragraph.paragraphFormat.firstLineIndent + start.paragraph.paragraphFormat.leftIndent) < this.documentHelper.viewer.clientArea.width) {\n                        this.owner.editorModule.increaseIndent();\n                    }\n                }\n            }\n            else {\n                this.owner.editorModule.handleTextInput('\\t');\n            }\n        }\n        if (this.documentHelper.protectionType === 'FormFieldsOnly' && this.documentHelper.formFields.length > 0) {\n            this.selectPrevNextFormField(!isShiftTab);\n        }\n        this.checkForCursorVisibility();\n    };\n    /**\n    * @private\n    * @returns {void}\n    */\n    Selection.prototype.handlePageUpPageDownKey = function (isPageDown, shiftKey) {\n        var _this = this;\n        var offsetX = this.end.location.x;\n        var offsetY = this.end.location.y;\n        var page = this.end.paragraph.bodyWidget.page;\n        var pageTop = this.getPageTop(page);\n        var previousScrollTop = this.documentHelper.viewerContainer.scrollTop;\n        offsetY = (offsetY * this.documentHelper.zoomFactor) + (pageTop - previousScrollTop);\n        offsetX = (offsetX * this.documentHelper.zoomFactor) + page.boundingRectangle.x;\n        if (isPageDown) {\n            this.documentHelper.viewerContainer.scrollTop += this.documentHelper.visibleBounds.height;\n        }\n        else {\n            this.documentHelper.viewerContainer.scrollTop -= this.documentHelper.visibleBounds.height;\n        }\n        var isSameScrollTop = false;\n        if (previousScrollTop === this.documentHelper.viewerContainer.scrollTop) {\n            isSameScrollTop = true;\n        }\n        if (shiftKey) {\n            this.documentHelper.skipScrollToPosition = true;\n        }\n        setTimeout(function () {\n            if (isSameScrollTop) {\n                if (!shiftKey) {\n                    if (isPageDown)\n                        _this.moveToDocumentEnd();\n                    else\n                        _this.moveToDocumentStart();\n                }\n                else {\n                    var position = void 0;\n                    if (isPageDown) {\n                        position = _this.getDocumentEnd();\n                    }\n                    else {\n                        position = _this.getDocumentStart();\n                    }\n                    _this.end.setPositionForLineWidget(position.currentWidget, position.offset);\n                    _this.fireSelectionChanged(true);\n                }\n            }\n            else {\n                _this.select({ x: offsetX, y: offsetY, extend: shiftKey });\n            }\n        }, 0);\n    };\n    // returns current field in FormFill mode\n    Selection.prototype.getFormFieldInFormFillMode = function () {\n        var currentStart = this.owner.selectionModule.start;\n        var formField;\n        for (var i = (this.documentHelper.formFields.length - 1); i >= 0; i--) {\n            if (!this.documentHelper.formFields[i].formFieldData.enabled) {\n                continue;\n            }\n            var paraIndex = this.getElementPosition(this.documentHelper.formFields[i]).startPosition;\n            if (paraIndex.isExistBefore(currentStart)) {\n                formField = this.documentHelper.formFields[i];\n                break;\n            }\n            else if (i === 0) {\n                formField = this.documentHelper.formFields[(this.documentHelper.formFields.length - 1)];\n            }\n        }\n        return formField;\n    };\n    // Navigates & Selects next form field\n    Selection.prototype.selectPrevNextFormField = function (forward, formField) {\n        if (this.documentHelper.isFormFillProtectedMode) {\n            if (!formField) {\n                formField = this.getCurrentFormField();\n            }\n            var index = this.documentHelper.formFields.indexOf(formField);\n            if (index !== -1) {\n                if (forward) {\n                    for (var i = index;; i++) {\n                        if (i === (this.documentHelper.formFields.length - 1)) {\n                            i = 0;\n                        }\n                        else {\n                            i = i + 1;\n                        }\n                        if (!this.documentHelper.formFields[i].formFieldData.enabled) {\n                            i = i - 1;\n                            continue;\n                        }\n                        this.selectFieldInternal(this.documentHelper.formFields[i], true);\n                        break;\n                    }\n                }\n                else {\n                    for (var i = index;; i--) {\n                        if (i === 0) {\n                            i = (this.documentHelper.formFields.length - 1);\n                        }\n                        else {\n                            i = i - 1;\n                        }\n                        if (!this.documentHelper.formFields[i].formFieldData.enabled) {\n                            i = i + 1;\n                            continue;\n                        }\n                        this.selectFieldInternal(this.documentHelper.formFields[i], true);\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.navigateToNextFormField = function () {\n        var currentStart = this.owner.selectionModule.end;\n        var currentFormField;\n        for (var i = 0; i < this.documentHelper.formFields.length; i++) {\n            currentFormField = this.documentHelper.formFields[i];\n            if (!this.documentHelper.formFields[i].formFieldData.enabled) {\n                continue;\n            }\n            var paraIndex = this.getElementPosition(this.documentHelper.formFields[i]).startPosition;\n            if (paraIndex.isExistAfter(currentStart)) {\n                if (currentFormField.formFieldData instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextFormField && currentFormField.formFieldData.type === 'Text' &&\n                    this.documentHelper.isInlineFormFillProtectedMode) {\n                    this.selectTextElementStartOfField(this.documentHelper.formFields[i]);\n                }\n                else {\n                    this.selectFieldInternal(this.documentHelper.formFields[i]);\n                }\n                break;\n            }\n            else if (i === (this.documentHelper.formFields.length - 1)) {\n                currentFormField = this.documentHelper.formFields[0];\n                if (currentFormField.formFieldData instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextFormField && currentFormField.formFieldData.type === 'Text' &&\n                    this.documentHelper.isInlineFormFillProtectedMode) {\n                    this.selectTextElementStartOfField(this.documentHelper.formFields[0]);\n                }\n                else {\n                    this.selectFieldInternal(this.documentHelper.formFields[0]);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectTextElementStartOfField = function (formField) {\n        var fieldSeparator = formField.fieldSeparator;\n        var element = fieldSeparator.nextElement;\n        if (element) {\n            while (!(element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox)) {\n                element = element.nextElement;\n            }\n            var offset = formField.line.getOffset(element, 0);\n            var point = this.getPhysicalPositionInternal(formField.line, offset, false);\n            this.selectInternal(formField.line, element, 0, point);\n        }\n    };\n    Selection.prototype.triggerFormFillEvent = function (isKeyBoardNavigation) {\n        var previousField = this.previousSelectedFormField;\n        var currentField = this.currentFormField;\n        var previousFieldData;\n        var currentFieldData;\n        if (currentField !== previousField && previousField && previousField.formFieldData instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextFormField\n            && previousField.formFieldData.type === 'Text') {\n            if (previousField.formFieldData.format !== '' && !this.isFormatUpdated) {\n                // Need to handle update form field format\n                this.owner.editorModule.applyFormTextFormat(previousField);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.previousSelectedFormField)) {\n                    previousField = this.previousSelectedFormField;\n                }\n            }\n            previousFieldData = { 'fieldName': previousField.formFieldData.name, 'value': this.owner.editorModule.getFieldResultText(previousField) };\n            this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.afterFormFieldFillEvent, previousFieldData);\n        }\n        if (currentField !== previousField && currentField && ((currentField.formFieldData instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextFormField\n            && currentField.formFieldData.type === 'Text' && isKeyBoardNavigation == undefined) || (((currentField.formFieldData instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextFormField && this.owner.documentEditorSettings.formFieldSettings.formFillingMode === 'Inline') || (currentField.formFieldData instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.CheckBoxFormField)) && isKeyBoardNavigation))) {\n            currentFieldData = { 'fieldName': currentField.formFieldData.name, 'value': this.owner.editorModule.getFieldResultText(currentField) };\n            this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.beforeFormFieldFillEvent, currentFieldData);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.triggerContentControlFillEvent = function () {\n        var currentContentControl = this.currentContentControl;\n        var previousContentControl = this.previousSelectedContentControl;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(previousContentControl) && previousContentControl.contentControlProperties) {\n            var data = { 'Text': this.owner.editor.getResultContentControlText(previousContentControl) };\n            this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.aftercontentControlFillEvent, data);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(previousContentControl.contentControlProperties.xmlMapping)) {\n                var xpath = previousContentControl.contentControlProperties.xmlMapping.xPath;\n                this.owner.xmlPaneModule.updateContent(data.Text, xpath);\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentContentControl) && currentContentControl.contentControlProperties) {\n            var data = { 'Text': this.owner.editor.getResultContentControlText(currentContentControl) };\n            this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.beforecontentControlFillEvent, data);\n        }\n    };\n    Selection.prototype.selectPreviousCell = function () {\n        var tableCell = this.start.paragraph.associatedCell;\n        var tableRow = tableCell.ownerRow;\n        var tableAdv = tableRow.ownerTable;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(tableCell.previousWidget)) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(tableRow.previousRenderedWidget)) {\n                //Move text selection or cursor to previous row's last cell\n                var prevRow = undefined;\n                if (tableRow.previousRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableRowWidget) {\n                    prevRow = tableRow.previousRenderedWidget;\n                }\n                this.selectTableCellInternal(prevRow.childWidgets[prevRow.childWidgets.length - 1], true);\n            }\n        }\n        else {\n            //Move text selection or cursor to next cell in current row\n            var prevCell = undefined;\n            if (tableCell.previousWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n                prevCell = tableCell.previousWidget;\n            }\n            this.selectTableCellInternal(prevCell, true);\n        }\n    };\n    Selection.prototype.selectNextCell = function () {\n        var tableCell = this.start.paragraph.associatedCell;\n        var tableRow = tableCell.ownerRow;\n        var tableAdv = tableRow.ownerTable;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(tableCell.nextWidget)) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(tableRow.nextRenderedWidget) && !this.owner.isReadOnlyMode) {\n                //Insert new row below\n                this.owner.editorModule.insertRow(false);\n            }\n            else {\n                //Move text selection or cursor to next row's first cell\n                var nextRow = undefined;\n                if (tableRow.nextRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableRowWidget) {\n                    nextRow = tableRow.nextRenderedWidget;\n                }\n                this.selectTableCellInternal(nextRow.childWidgets[0], true);\n            }\n            // }\n        }\n        else {\n            //Move text selection or cursor to next cell in current row\n            var nextCell = undefined;\n            if (tableCell.nextRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n                nextCell = tableCell.nextRenderedWidget;\n            }\n            this.selectTableCellInternal(nextCell, true);\n        }\n    };\n    /**\n     * Select given table cell\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectTableCellInternal = function (tableCell, clearMultiSelection) {\n        var firstParagraph = this.getFirstParagraph(tableCell);\n        var lastParagraph = this.getLastParagraph(tableCell);\n        if (firstParagraph === lastParagraph && lastParagraph.isEmpty()) {\n            this.selectParagraphInternal(lastParagraph, true);\n        }\n        else {\n            var firstLineWidget = lastParagraph.childWidgets[0];\n            this.start.setPosition(firstParagraph.childWidgets[0], true);\n            this.end.setPositionParagraph(firstLineWidget, firstLineWidget.getEndOffset());\n            this.fireSelectionChanged(true);\n        }\n    };\n    /**\n     * Select while table\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectTableInternal = function () {\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(start) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(end) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.getTable(start, end))) {\n            var containerCell = this.getContainerCellOf(start.paragraph.associatedCell, end.paragraph.associatedCell);\n            var table = containerCell.ownerTable;\n            var firstPara = this.documentHelper.getFirstParagraphBlock(table);\n            var lastPara = this.documentHelper.getLastParagraphBlock(table);\n            var offset = lastPara.lastChild.getEndOffset();\n            this.start.setPosition(firstPara.childWidgets[0], true);\n            this.end.setPositionParagraph(lastPara.lastChild, offset + 1);\n        }\n        this.selectPosition(this.start, this.end);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getTableRevision = function () {\n        var start = this.start.clone();\n        var end = this.end.clone();\n        if (!this.isForward) {\n            start = this.end.clone();\n            end = this.start.clone();\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(start) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(end) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.getTable(start, end))) {\n            var containerCell = this.getContainerCellOf(start.paragraph.associatedCell, end.paragraph.associatedCell);\n            var table = containerCell.ownerTable;\n            var firstPara = this.documentHelper.getFirstParagraphBlock(table);\n            var lastPara = this.documentHelper.getLastParagraphBlock(table);\n            var offset = lastPara.lastChild.getEndOffset();\n            start.setPosition(firstPara.childWidgets[0], true);\n            end.setPositionParagraph(lastPara.lastChild, offset + 1);\n        }\n        var startIndex = this.getAbsolutePositionFromRelativePosition(start);\n        var endIndex = this.getAbsolutePositionFromRelativePosition(end);\n        return Math.abs(endIndex - startIndex);\n        // this.selectPosition(this.start, this.end);\n    };\n    /**\n     * Select single column\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectColumnInternal = function () {\n        var startTextPos = this.start;\n        var endTextPos = this.end;\n        if (!this.isForward) {\n            startTextPos = this.end;\n            endTextPos = this.start;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startTextPos) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(endTextPos) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.getTable(startTextPos, endTextPos))) {\n            var containerCell = this.getContainerCellOf(startTextPos.paragraph.associatedCell, endTextPos.paragraph.associatedCell);\n            if (containerCell.ownerTable.contains(endTextPos.paragraph.associatedCell)) {\n                var startCell = this.getSelectedCell(startTextPos.paragraph.associatedCell, containerCell);\n                var endCell = this.getSelectedCell(endTextPos.paragraph.associatedCell, containerCell);\n                if (this.containsCell(containerCell, endTextPos.paragraph.associatedCell)) {\n                    var row = startCell.ownerRow;\n                    var columnCells = containerCell.ownerTable.getColumnCellsForSelection(containerCell, containerCell);\n                    if (columnCells.length > 0) {\n                        var firstPara = this.getFirstParagraph(columnCells[0]);\n                        var lastPara = this.getLastParagraph(columnCells[columnCells.length - 1]);\n                        this.start.setPosition(firstPara.firstChild, true);\n                        var lastLine = lastPara.lastChild;\n                        this.end.setPositionParagraph(lastLine, lastLine.getEndOffset() + 1);\n                    }\n                }\n                else {\n                    var startCellColumnCells = containerCell.ownerTable.getColumnCellsForSelection(startCell, startCell);\n                    var endCellColumnCells = containerCell.ownerTable.getColumnCellsForSelection(endCell, endCell);\n                    if (startCellColumnCells.length > 0 && endCellColumnCells.length > 0) {\n                        var firstPara = this.getFirstParagraph(startCellColumnCells[0]);\n                        var lastPara = this.getLastParagraph(endCellColumnCells[endCellColumnCells.length - 1]);\n                        this.start.setPosition(firstPara.firstChild, true);\n                        var lastLine = lastPara.lastChild;\n                        this.end.setPositionParagraph(lastLine, lastLine.getEndOffset() + 1);\n                    }\n                }\n            }\n        }\n        this.selectPosition(this.start, this.end);\n    };\n    /**\n     * Select single row\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectTableRow = function () {\n        var startPos = this.start;\n        var endPos = this.end;\n        if (!this.isForward) {\n            startPos = this.end;\n            endPos = this.start;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startPos) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(endPos) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.getTable(startPos, endPos))) {\n            var containerCell = void 0;\n            containerCell = this.getContainerCellOf(startPos.paragraph.associatedCell, endPos.paragraph.associatedCell);\n            if (containerCell.ownerTable.contains(endPos.paragraph.associatedCell)) {\n                var startCell = this.getSelectedCell(startPos.paragraph.associatedCell, containerCell);\n                var endCell = this.getSelectedCell(endPos.paragraph.associatedCell, containerCell);\n                if (this.containsCell(containerCell, endPos.paragraph.associatedCell)) {\n                    var row = startCell.ownerRow;\n                    var firstPara = this.getFirstParagraph(row.childWidgets[0]);\n                    var lastPara = this.getLastParagraph(row.childWidgets[row.childWidgets.length - 1]);\n                    this.start.setPosition(firstPara.firstChild, true);\n                    this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n                }\n                else {\n                    var firstPara = this.getFirstParagraph(startCell.ownerRow.childWidgets[0]);\n                    var lastPara = void 0;\n                    lastPara = this.getLastParagraph(endCell.ownerRow.childWidgets[endCell.ownerRow.childWidgets.length - 1]);\n                    this.start.setPosition(firstPara.firstChild, true);\n                    this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n                }\n            }\n        }\n        this.selectPosition(this.start, this.end);\n    };\n    /**\n     * Select single cell\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectTableCell = function () {\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.getTable(start, end))) {\n            return;\n        }\n        if (this.isEmpty) {\n            if (start.paragraph.isInsideTable && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(start.paragraph.associatedCell)) {\n                var firstPara = this.getFirstParagraph(start.paragraph.associatedCell);\n                var lastPara = this.getLastParagraph(end.paragraph.associatedCell);\n                if (firstPara === lastPara) {\n                    this.start.setPosition(lastPara.firstChild, true);\n                    this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n                }\n                else {\n                    this.start.setPosition(firstPara.firstChild, true);\n                    this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n                }\n            }\n        }\n        else {\n            var containerCell = this.getContainerCell(start.paragraph.associatedCell);\n            if (this.containsCell(containerCell, start.paragraph.associatedCell) && this.containsCell(containerCell, end.paragraph.associatedCell)) {\n                var firstPara = this.getFirstParagraph(containerCell);\n                var lastPara = this.getLastParagraph(containerCell);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(firstPara) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(lastPara)) {\n                    this.start.setPosition(firstPara.firstChild, true);\n                    this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n                }\n            }\n        }\n        this.selectPosition(this.start, this.end);\n    };\n    /**\n     * Selects the entire document.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.selectAll = function () {\n        var documentStart;\n        var documentEnd;\n        this.documentHelper.skipScrollToPosition = true;\n        var container = this.getContainerWidget(this.start.paragraph);\n        if (this.owner.enableHeaderAndFooter) {\n            var headerFooter = this.getContainerWidget(this.start.paragraph);\n            documentStart = this.setPositionForBlock(headerFooter.firstChild, true);\n            documentEnd = this.setPositionForBlock(headerFooter.lastChild, false);\n        }\n        else if (this.isInShape) {\n            var textFrame = this.getCurrentTextFrame();\n            documentStart = this.setPositionForBlock(textFrame.firstChild, true);\n            documentEnd = this.setPositionForBlock(textFrame.lastChild, false);\n        }\n        else if (container instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget && container.footNoteType === 'Footnote') {\n            var i = void 0;\n            var j = void 0;\n            var pageLength = this.documentHelper.pages.length;\n            for (i = 0; i <= pageLength - 1; i++) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.documentHelper.pages[i].footnoteWidget)) {\n                    continue;\n                }\n                else {\n                    documentStart = this.setPositionForBlock(this.documentHelper.pages[i].footnoteWidget.bodyWidgets[0].firstChild, true);\n                    break;\n                }\n            }\n            for (j = pageLength - 1; j >= 0; j--) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.documentHelper.pages[j].footnoteWidget)) {\n                    continue;\n                }\n                else {\n                    var child = this.documentHelper.pages[j].footnoteWidget.bodyWidgets.length;\n                    var lastChild = this.documentHelper.pages[j].footnoteWidget.bodyWidgets[child - 1].childWidgets.length;\n                    documentEnd = this.setPositionForBlock(this.documentHelper.pages[j].footnoteWidget.bodyWidgets[child - 1].childWidgets[lastChild - 1], false);\n                    break;\n                }\n            }\n        }\n        else if (container instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget && container.footNoteType === 'Endnote') {\n            var endNotes = this.getContainerWidget(this.start.paragraph);\n            documentStart = this.setPositionForBlock(endNotes.bodyWidgets[0].firstChild, true);\n            documentEnd = this.setPositionForBlock(endNotes.bodyWidgets[endNotes.bodyWidgets.length - 1].firstChild, false);\n        }\n        else {\n            documentStart = this.owner.documentStart;\n            documentEnd = this.owner.documentEnd;\n        }\n        //Selects the entire document.\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(documentStart)) {\n            this.start.setPositionInternal(documentStart);\n            this.end.setPositionParagraph(documentEnd.currentWidget, documentEnd.offset + 1);\n            this.upDownSelectionLength = this.end.location.x;\n            this.fireSelectionChanged(true);\n        }\n    };\n    /**\n     * Extends the selection backward.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendBackward = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        var isForward = this.isForward ? this.start.isCurrentParaBidi : this.end.isCurrentParaBidi;\n        if (isForward) {\n            this.end.moveForward();\n        }\n        else {\n            this.end.moveBackward();\n        }\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extends the selection forward.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendForward = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        var isForward = this.isForward ? this.start.isCurrentParaBidi : this.end.isCurrentParaBidi;\n        if (isForward) {\n            this.end.moveBackward();\n        }\n        else {\n            this.end.moveForward();\n        }\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extend selection to word start and end\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.extendToWordStartEnd = function () {\n        if ((this.start.paragraph.isInsideTable || this.end.paragraph.isInsideTable)\n            && (this.start.paragraph.associatedCell !== this.end.paragraph.associatedCell\n                || this.isCellSelected(this.start.paragraph.associatedCell, this.start, this.end))) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Extends the selection to word start.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToWordStart = function () {\n        this.extendToWordStartInternal(false);\n    };\n    /**\n     * Extends the selection to word end.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToWordEnd = function () {\n        this.extendToWordEndInternal(false);\n    };\n    /**\n     * Extends selection to word start\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.extendToWordStartInternal = function (isNavigation) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        var isCellSelected = this.extendToWordStartEnd();\n        if (isCellSelected) {\n            this.end.moveToPreviousParagraphInTable(this);\n        }\n        else {\n            if (isNavigation && this.end.isCurrentParaBidi) {\n                this.end.moveToWordEndInternal(isNavigation ? 0 : 1, false);\n            }\n            else {\n                this.end.moveToWordStartInternal(isNavigation ? 0 : 1);\n            }\n        }\n        if (isNavigation) {\n            this.start.setPositionInternal(this.end);\n        }\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extends the selection to word end.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToWordEndInternal = function (isNavigation) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        var isCellSelect = this.extendToWordStartEnd();\n        if (isCellSelect) {\n            this.end.moveToNextParagraphInTable();\n        }\n        else {\n            if (isNavigation && this.end.isCurrentParaBidi) {\n                this.end.moveToWordStartInternal(isNavigation ? 0 : 1);\n            }\n            else {\n                this.end.moveToWordEndInternal(isNavigation ? 0 : 1, false);\n            }\n        }\n        if (isNavigation) {\n            this.start.setPositionInternal(this.end);\n        }\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extends the selection to next line.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToNextLine = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start)) {\n            return;\n        }\n        this.end.moveToNextLine(this.upDownSelectionLength);\n        this.fireSelectionChanged(true);\n    };\n    //Selection Text get API\n    //Selection add, Highlight, remove API enda\n    Selection.prototype.getTextPosition = function (hierarchicalIndex) {\n        var textPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n        textPosition.setPositionForCurrentIndex(hierarchicalIndex);\n        return textPosition;\n    };\n    /**\n     * Get Selected text\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.getText = function (includeObject) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.end)\n            || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start.paragraph) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.end.paragraph)) {\n            return undefined;\n        }\n        var startPosition = this.start;\n        var endPosition = this.end;\n        if (startPosition.isAtSamePosition(endPosition)) {\n            return '';\n        }\n        return this.getTextInternal(startPosition, endPosition, includeObject);\n    };\n    /**\n     * Get selected text\n     *\n     * @private\n     * @returns {string}\n     */\n    Selection.prototype.getTextInternal = function (start, end, includeObject) {\n        if (start.isExistAfter(end)) {\n            var temp = end;\n            end = start;\n            start = temp;\n        }\n        var startPosition = start;\n        var endPosition = end;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(start) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(end) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(start.paragraph) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(end.paragraph)) {\n            var startIndex = 0;\n            var endIndex = 0;\n            var startOffset = start.offset;\n            var endOffset = end.offset;\n            var startInlineObj = start.currentWidget.getInline(startOffset, startIndex);\n            startIndex = startInlineObj.index;\n            var inline = startInlineObj.element;\n            // If the start position is at the beginning of field begin that has field end, then field code should be skipped.\n            if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.fieldEnd)) {\n                var elementInfo = this.getRenderedInline(inline, startIndex);\n                inline = elementInfo.element;\n                startIndex = elementInfo.index;\n            }\n            var endInlineObj = end.currentWidget.getInline(endOffset, endIndex);\n            var endInline = endInlineObj.element;\n            endIndex = endInlineObj.index;\n            var text = '';\n            // Retrieves the text from start inline.\n            if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox && includeObject && startIndex === 0) {\n                text = _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ElementBox.objectCharacter;\n            }\n            else if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                text = (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.text)) || (inline.text) === '') || inline.text.length < startIndex ? text : inline.text.substring(startIndex);\n            }\n            if (startPosition.paragraph === endPosition.paragraph) {\n                if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ElementBox) {\n                    if (inline === endInline && inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                        text = text.length < endIndex - startIndex ? text : text.substring(0, endIndex - startIndex);\n                    }\n                    else if (inline.nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ElementBox) {\n                        text = text + this.getTextInline(inline.nextNode, endPosition.paragraph, endInline, endIndex, includeObject);\n                    }\n                }\n            }\n            else {\n                if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ElementBox && inline.nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ElementBox) {\n                    text = text + this.getTextInline(inline.nextNode, endPosition.paragraph, endInline, endIndex, includeObject);\n                }\n                else {\n                    var nextParagraphWidget = this.documentHelper.selection.getNextParagraphBlock(startPosition.paragraph);\n                    text = text + '\\r';\n                    while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextParagraphWidget) && nextParagraphWidget.isEmpty()) {\n                        text = text + '\\r';\n                        if (nextParagraphWidget === endPosition.paragraph) {\n                            return text;\n                        }\n                        nextParagraphWidget = this.documentHelper.selection.getNextParagraphBlock(nextParagraphWidget);\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextParagraphWidget) && !nextParagraphWidget.isEmpty()) {\n                        text = text + this.getTextInline(nextParagraphWidget.childWidgets[0].children[0], endPosition.paragraph, endInline, endIndex, includeObject);\n                    }\n                }\n            }\n            // If the selection includes end paragraph mark.\n            if (endOffset === (endPosition.currentWidget).getEndOffset() + 1) {\n                text = text + '\\r';\n            }\n            return text;\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     * @param block\n     * @param offset\n     * @returns {string}\n     */\n    Selection.prototype.getHierarchicalIndex = function (block, offset) {\n        var index;\n        if (block) {\n            if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.HeaderFooterWidget) {\n                var hfString = block.headerFooterType.indexOf('Header') !== -1 ? 'H' : 'F';\n                var pageIndex = block.page.index.toString();\n                // let headerFooterIndex: string = (this.viewer as PageLayoutViewer).getHeaderFooter(block.headerFooterType).toString();\n                var sectionIndex = block.page.sectionIndex;\n                index = sectionIndex + ';' + hfString + ';' + pageIndex + ';' + offset;\n            }\n            else {\n                if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(block.containerWidget) && block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget) {\n                    var ind = block.containerWidget.bodyWidgets.indexOf(block);\n                    index = ind + ';' + offset;\n                }\n                else {\n                    // if (block instanceof BodyWidget && block.sectionFormat.columns.length > 1) {\n                    //         index = block.indexInOwner + ';' + offset;\n                    // }\n                    // else {\n                    index = block.index + ';' + offset;\n                    // }\n                }\n            }\n            if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextFrame) {\n                var indexInOwner = block.containerShape.line.getOffset(block.containerShape, 1);\n                index = 'S' + ';' + indexInOwner + ';' + offset;\n                return this.getHierarchicalIndex(block.containerShape.paragraph, index);\n            }\n            if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget) {\n                // index = block.index + ';' + index;\n                //block = block.containerWidget;\n                var hfString = block.footNoteType === 'Footnote' ? 'FN' : 'EN';\n                var pageIndex = block.page.index.toString();\n                // let headerFooterIndex: string = (this.viewer as PageLayoutViewer).getHeaderFooter(block.headerFooterType).toString();\n                var sectionIndex = block.page.sectionIndex;\n                index = sectionIndex + ';' + hfString + ';' + pageIndex + ';' + offset;\n            }\n            if (block.containerWidget) {\n                if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget && block.rowIndex !== block.containerWidget.index) {\n                    index = block.rowIndex + ';' + index;\n                    block = block.containerWidget;\n                }\n                return this.getHierarchicalIndex(block.containerWidget, index);\n            }\n        }\n        return index;\n    };\n    /**\n     * @private\n     * @returns {string}\n     */\n    Selection.prototype.getHierarchicalIndexByPosition = function (position) {\n        var info = this.getParagraphInfo(position);\n        return this.getHierarchicalIndex(info.paragraph, info.offset.toString());\n    };\n    /**\n     * @private\n     * @returns {TextPosition}\n     */\n    Selection.prototype.getTextPosBasedOnLogicalIndex = function (hierarchicalIndex) {\n        var textPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n        var blockInfo = this.getParagraph({ index: hierarchicalIndex });\n        var lineInfo = this.getLineInfoBasedOnParagraph(blockInfo.paragraph, blockInfo.offset);\n        textPosition.setPositionForLineWidget(lineInfo.line, lineInfo.offset);\n        return textPosition;\n    };\n    /**\n     * Get offset value to update in selection\n     *\n     * @private\n     * @returns {LineInfo}\n     */\n    Selection.prototype.getLineInfoBasedOnParagraph = function (paragraph, offset) {\n        var position = undefined;\n        var element = undefined;\n        var length = this.getParagraphLength(paragraph);\n        var next = paragraph.nextSplitWidget;\n        if (offset > length + 1 && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(next)) {\n            offset = length;\n        }\n        while (offset > length && next instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            offset -= length;\n            paragraph = next;\n            length = this.getParagraphLength(paragraph);\n            next = paragraph.nextSplitWidget;\n        }\n        return this.getLineInfo(paragraph, offset);\n    };\n    /**\n     * @private\n     * @returns {ParagraphInfo}\n     */\n    Selection.prototype.getParagraph = function (position) {\n        var paragraph = this.getParagraphInternal(this.getBodyWidget(position), position);\n        return { paragraph: paragraph, offset: parseInt(position.index, 10) };\n    };\n    /**\n     * Gets body widget based on position.\n     *\n     * @private\n     * @returns {BlockContainer}\n     */\n    Selection.prototype.getBodyWidget = function (position) {\n        var index = position.index.indexOf(';');\n        var value = position.index.substring(0, index);\n        position.index = position.index.substring(index).replace(';', '');\n        var sectionIndex = parseInt(value, 10);\n        index = parseInt(value, 10);\n        index = position.index.indexOf(';');\n        value = position.index.substring(0, index);\n        // position = position.substring(index).replace(';', '');\n        if (value === 'H' || value === 'F') {\n            return this.getHeaderFooterWidget(position);\n        }\n        else if (value === 'FN' || value === 'EN') {\n            return this.getFootNoteWidget(position);\n        }\n        index = parseInt(value, 10);\n        return this.getBodyWidgetInternal(sectionIndex, index);\n    };\n    Selection.prototype.getFootNoteWidget = function (position) {\n        var index1 = position.index.indexOf(';');\n        var value1 = position.index.substring(0, index1);\n        position.index = position.index.substring(index1).replace(';', '');\n        var footNote = value1 === 'FN';\n        index1 = position.index.indexOf(';');\n        value1 = position.index.substring(0, index1);\n        position.index = position.index.substring(index1).replace(';', '');\n        index1 = parseInt(value1, 10);\n        var page = this.documentHelper.pages[index1];\n        index1 = position.index.indexOf(';');\n        value1 = position.index.substring(0, index1);\n        position.index = position.index.substring(index1).replace(';', '');\n        index1 = parseInt(value1, 10);\n        if (footNote) {\n            return page.footnoteWidget.bodyWidgets[index1];\n        }\n        else {\n            return page.endnoteWidget.bodyWidgets[index1];\n        }\n    };\n    Selection.prototype.getHeaderFooterWidget = function (position) {\n        //HEADER OR FOOTER WIDGET\n        var index = position.index.indexOf(';');\n        var value = position.index.substring(0, index);\n        position.index = position.index.substring(index).replace(';', '');\n        var isHeader = value === 'H';\n        index = position.index.indexOf(';');\n        value = position.index.substring(0, index);\n        position.index = position.index.substring(index).replace(';', '');\n        index = parseInt(value, 10);\n        var page = this.documentHelper.pages[index];\n        var headerFooterWidget;\n        if (isHeader) {\n            headerFooterWidget = page.headerWidget;\n        }\n        else {\n            headerFooterWidget = page.footerWidget;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(headerFooterWidget)) {\n            headerFooterWidget.page = page;\n        }\n        return headerFooterWidget;\n    };\n    /**\n     * @private\n     * @returns {BodyWidget}\n     */\n    Selection.prototype.getBodyWidgetInternal = function (sectionIndex, blockIndex) {\n        for (var i = 0; i < this.documentHelper.pages.length; i++) {\n            for (var j = 0; j < this.documentHelper.pages[i].bodyWidgets.length; j++) {\n                var bodyWidget = this.documentHelper.pages[i].bodyWidgets[j];\n                if (bodyWidget.index === sectionIndex) {\n                    if (bodyWidget.childWidgets.length > 0 && bodyWidget.firstChild.index <= blockIndex &&\n                        bodyWidget.lastChild.index >= blockIndex) {\n                        return bodyWidget;\n                    }\n                }\n                if (bodyWidget.index > sectionIndex) {\n                    break;\n                }\n            }\n        }\n        return undefined;\n    };\n    Selection.prototype.getParagraphInternal = function (container, position, cellIndex) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(position.index)) {\n            return undefined;\n        }\n        if (container instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableRowWidget && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(cellIndex)) {\n            cellIndex = position.index;\n        }\n        // let ins: Widget = container;\n        var index = position.index.indexOf(';');\n        var value = '0';\n        if (index >= 0) {\n            value = position.index.substring(0, index);\n            position.index = position.index.substring(index).replace(';', '');\n        }\n        // if (container instanceof BodyWidget && value === 'HF') {\n        //     return this.getParagraph(container.headerFooters, position);\n        // }\n        index = parseInt(value, 10);\n        if (container instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableRowWidget && index >= container.childWidgets.length) {\n            position.index = '0;0';\n            index = container.childWidgets.length - 1;\n        }\n        var childWidget = this.getBlockByIndex(container, index, position);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(cellIndex) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(childWidget) && container instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget && container.containerWidget && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(container.getSplitWidgets().pop().nextRenderedWidget)) {\n            index = cellIndex.indexOf(';');\n            index = parseInt(cellIndex.substring(0, index), 10) - 1;\n            position.index = cellIndex.substring(cellIndex.indexOf(';')).replace(';', '');\n            if (index >= 0) {\n                childWidget = this.getBlockByIndex(container.containerWidget, index);\n            }\n            cellIndex = undefined;\n        }\n        if (childWidget) {\n            value = position.index.substring(0, 1);\n            if (value === 'S') {\n                position.index = position.index.substring(1).replace(';', '');\n                var indexInOwner = position.index.substring(0, position.index.indexOf(';'));\n                position.index = position.index.substring(position.index.indexOf(';')).replace(';', '');\n                var paraIndex = position.index.substring(0, position.index.indexOf(';'));\n                position.index = position.index.substring(position.index.indexOf(';')).replace(';', '');\n                var shape = childWidget.getInline(parseInt(indexInOwner), 0).element;\n                childWidget = shape.textFrame.childWidgets[paraIndex];\n            }\n            var child = childWidget;\n            if (child instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                if (position.index.indexOf(';') > 0) {\n                    position.index = '0';\n                }\n                return child;\n            }\n            if (child instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.Widget) {\n                if (position.index.indexOf(';') > 0) {\n                    return this.getParagraphInternal(child, position, cellIndex);\n                }\n                else {\n                    //If table is shifted to previous text position then return the first paragraph within table.\n                    if (child instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n                        return this.documentHelper.getFirstParagraphInFirstCell(child);\n                    }\n                    return undefined;\n                }\n            }\n        }\n        else if (container) {\n            var nextWidget = container.getSplitWidgets().pop().nextRenderedWidget;\n            if (nextWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.Widget) {\n                position.index = '0';\n                if (nextWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n                    return this.documentHelper.getFirstParagraphInFirstCell(nextWidget);\n                }\n                return nextWidget;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     * @returns {Widget}\n     */\n    Selection.prototype.getBlockByIndex = function (container, blockIndex, position) {\n        var childWidget;\n        if (container) {\n            for (var j = 0; j < container.childWidgets.length; j++) {\n                if (container.childWidgets[j].index === blockIndex) {\n                    childWidget = container.childWidgets[j];\n                    break;\n                }\n            }\n            // If the row contains a vertically merged cell and the cell count differs between the current row and the split row. So, we have added the following code to update the split cell widget for selection.\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(childWidget) && childWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableRowWidget && childWidget.nextSplitWidget && this.documentHelper.layout.isVerticalMergedCellContinue(childWidget)) {\n                var positionIndex = position.index;\n                var index = positionIndex.indexOf(';');\n                var cellIndexValue = positionIndex.substring(0, index);\n                positionIndex = positionIndex.substring(index).replace(';', '');\n                var currentCell = this.getBlockByIndex(childWidget, parseInt(cellIndexValue, 10));\n                index = positionIndex.indexOf(';');\n                var blockIndexValue = positionIndex.substring(0, index);\n                if (currentCell && currentCell instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget && currentCell.childWidgets.length > 0 && currentCell.lastChild.index < parseInt(blockIndexValue, 10)) {\n                    var prevCell = this.getBlockByIndex(childWidget, parseInt(cellIndexValue, 10) - 1);\n                    if (prevCell && prevCell instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget && prevCell.childWidgets.length > 0 && prevCell.lastChild.index < parseInt(blockIndexValue, 10)) {\n                        return this.getBlockByIndex(container.nextSplitWidget, blockIndex, position);\n                    }\n                }\n            }\n            if (!childWidget && !(container instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.HeaderFooterWidget)) {\n                return this.getBlockByIndex(container.nextSplitWidget, blockIndex, position);\n            }\n        }\n        return childWidget;\n    };\n    /**\n     * Get logical offset of paragraph.\n     *\n     * @private\n     * @returns {ParagraphInfo}\n     */\n    Selection.prototype.getParagraphInfo = function (position) {\n        return this.getParagraphInfoInternal(position.currentWidget, position.offset);\n    };\n    /**\n     * Get the start or end cell from current selection\n     *\n     * @private\n     * @returns {TableCellWidget}\n     */\n    Selection.prototype.getCellFromSelection = function (type) {\n        var cell;\n        var selectedCells = this.getSelectedCells();\n        if (this.hasMergedCells()) {\n            return undefined;\n        }\n        if (type == 0 && selectedCells.length > 0) {\n            if (!(this.selectedWidgets.keys[0] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget)) {\n                return undefined;\n            }\n            cell = selectedCells[0];\n            var rowIndex = cell.rowIndex;\n            var colIndex = cell.columnIndex;\n            var tableIndex = cell.ownerTable.index;\n            for (var i = 0; i < selectedCells.length; i++) {\n                var widget = selectedCells[i];\n                if (widget.rowIndex < rowIndex) {\n                    rowIndex = widget.rowIndex;\n                }\n                if (widget.columnIndex < colIndex) {\n                    colIndex = widget.columnIndex;\n                }\n                if (widget.ownerTable.index < tableIndex) {\n                    tableIndex = widget.ownerTable.index;\n                }\n            }\n            for (var i = 0; i < selectedCells.length; i++) {\n                var widget = selectedCells[i];\n                if (rowIndex == widget.rowIndex && colIndex == widget.columnIndex && tableIndex == widget.ownerTable.index) {\n                    cell = widget;\n                }\n            }\n        }\n        else if (type == 1 && selectedCells.length > 0) {\n            if (!(this.selectedWidgets.keys[this.selectedWidgets.length - 1] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget)) {\n                return undefined;\n            }\n            cell = selectedCells[selectedCells.length - 1];\n            var rowIndex = cell.rowIndex;\n            var colIndex = cell.columnIndex;\n            var tableIndex = cell.ownerTable.index;\n            for (var i = selectedCells.length - 1; i >= 0; i--) {\n                var widget = selectedCells[i];\n                if (widget.rowIndex > rowIndex) {\n                    rowIndex = widget.rowIndex;\n                }\n                if (widget.columnIndex > colIndex) {\n                    colIndex = widget.columnIndex;\n                }\n                if (widget.ownerTable.index > tableIndex) {\n                    tableIndex = widget.ownerTable.index;\n                }\n            }\n            for (var i = 0; i < selectedCells.length; i++) {\n                var widget = selectedCells[i];\n                if (rowIndex == widget.rowIndex && colIndex == widget.columnIndex && tableIndex == widget.ownerTable.index) {\n                    cell = widget;\n                }\n            }\n        }\n        return (cell instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) ? cell : undefined;\n    };\n    /**\n     * Get the start cell or end cell in table with merged cells from current selection.\n     *\n     * @private\n     * @returns {TableCellWidget}\n     */\n    Selection.prototype.getCellFromSelectionInTable = function (type) {\n        var cell;\n        var selectedCells = this.getSelectedCells();\n        var bounds = this.getCellBoundsInfo();\n        var sortedRowIndexArray = [];\n        var sortedColumnIndexArray = [];\n        for (var i = 0; i < selectedCells.length; i++) {\n            var widget = selectedCells[i];\n            sortedRowIndexArray.push(widget.rowIndex);\n            sortedColumnIndexArray.push(widget.columnIndex);\n        }\n        sortedRowIndexArray.sort();\n        sortedColumnIndexArray.sort();\n        var requiredRow;\n        var requiredCol;\n        if (type == 1) {\n            requiredRow = bounds.row.rowLast;\n            requiredCol = bounds.column.colLast;\n            var isRequiredCellExist = false;\n            while (!isRequiredCellExist && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(cell)) {\n                for (var i = 0; i < selectedCells.length; i++) {\n                    var widget_1 = selectedCells[i];\n                    if (widget_1.rowIndex == requiredRow && widget_1.columnIndex == requiredCol) {\n                        isRequiredCellExist = true;\n                        cell = widget_1;\n                        break;\n                    }\n                }\n                if (!isRequiredCellExist) {\n                    requiredRow -= 1;\n                }\n            }\n        }\n        else if (type == 0) {\n            requiredRow = bounds.row.rowFirst;\n            requiredCol = bounds.column.colFirst;\n            var isRequiredCellExist = false;\n            while (!isRequiredCellExist && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(cell)) {\n                for (var i = 0; i < selectedCells.length; i++) {\n                    var widget_2 = selectedCells[i];\n                    if (widget_2.rowIndex == requiredRow && widget_2.columnIndex == requiredCol) {\n                        isRequiredCellExist = true;\n                        cell = widget_2;\n                        break;\n                    }\n                }\n                if (!isRequiredCellExist) {\n                    requiredCol += 1;\n                }\n            }\n        }\n        return cell;\n    };\n    /**\n     * Get the actual offset from the current selection.\n     *\n     * @private\n     * @returns {string}\n     */\n    Selection.prototype.getActualOffset = function (cell, type) {\n        var offset;\n        if (type == 0) {\n            var paraElement = this.getFirstParagraph(cell);\n            offset = this.getHierarchicalIndex(paraElement, this.getStartOffset(paraElement).toString());\n        }\n        else if (type == 1) {\n            var paraElement = this.getLastParagraph(cell);\n            var lastLine = paraElement.lastChild;\n            var length_1 = this.getParagraphLength(paraElement, lastLine) + this.getLineLength(lastLine) + 1;\n            offset = this.getHierarchicalIndex(paraElement, length_1.toString());\n        }\n        return offset;\n    };\n    /**\n     * Get the properties for Bookmark.\n     *\n     * @private\n     * @returns {object}\n     */\n    Selection.prototype.getBookmarkProperties = function (bookmark) {\n        var selectedWidgets = this.selectedWidgets.keys;\n        if (bookmark.bookmarkType == 0) {\n            if (!(selectedWidgets[0] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget)) {\n                return undefined;\n            }\n            var bounds = this.getCellBoundsInfo();\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(bounds)) {\n                return {\n                    'columnFirst': bounds.column.colFirst.toString(),\n                    'columnLast': bounds.column.colLast.toString()\n                };\n            }\n        }\n        if (bookmark.bookmarkType == 1) {\n            if (selectedWidgets[selectedWidgets.length - 1] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n                return undefined;\n            }\n            var properties = {};\n            // isAfterParagraphMark\n            // In Ms Word, If the paragraph mark is selected and the bookmark end is inside the table, then the bookmark end is considered to be after the paragraph mark.\n            if (this.isParagraphMarkSelected() && this.end.paragraph.isInsideTable) {\n                properties.isAfterParagraphMark = true;\n            }\n            // isAfterCellMark\n            var bookmarkStart = bookmark.reference;\n            var selectedCells = this.getSelectedCells();\n            if (bookmarkStart && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(bookmarkStart.properties)) {\n                if (selectedCells.length == 1) {\n                    if (this.isCellSelected(selectedCells[0], this.start, this.end)) {\n                        properties.isAfterCellMark = true;\n                        delete properties.isAfterParagraphMark;\n                    }\n                }\n            }\n            // isAfterTableMark\n            if (this.isTableSelected()) {\n                properties.isAfterTableMark = true;\n            }\n            // isAfterRowMark\n            if (this.isRowSelected()) {\n                properties.isAfterRowMark = true;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(properties.isAfterParagraphMark) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(properties.isAfterCellMark)) {\n                return properties;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Returns true if Paragraph Mark is selected.\n     *\n     * @private\n     * @returns {boolean}\n     */\n    Selection.prototype.isParagraphMarkSelected = function () {\n        var end = this.isForward ? this.end : this.start;\n        var line = end.currentWidget;\n        var paraElement;\n        if (line instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.LineWidget) {\n            paraElement = line.paragraph;\n        }\n        var paraLength = this.getParagraphLength(paraElement);\n        var endIndices = this.getHierarchicalIndexByPosition(end).split(';');\n        var endIndex = parseInt(endIndices[endIndices.length - 1]);\n        if (endIndex > paraLength) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Returns true if Row is selected.\n     *\n     * @private\n     * @returns {boolean}\n     */\n    Selection.prototype.isRowSelected = function () {\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(start.paragraph.associatedCell) ||\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(end.paragraph.associatedCell)) {\n            return false;\n        }\n        var row = end.paragraph.associatedCell.ownerRow.getSplitWidgets();\n        var firstParagraph;\n        var firstcell;\n        if (row[0].childWidgets.length > 0) {\n            firstcell = row[0].childWidgets[0];\n            if (firstcell.childWidgets.length === 0) {\n                return undefined;\n            }\n            firstParagraph = firstcell.childWidgets[0];\n        }\n        var lastParagraph;\n        var lastRow = row[row.length - 1];\n        var lastCell = lastRow.childWidgets[lastRow.childWidgets.length - 1];\n        while (lastCell.childWidgets.length === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(lastCell.previousSplitWidget)) {\n            lastCell = lastCell.previousSplitWidget;\n        }\n        lastParagraph = lastCell.childWidgets[lastCell.childWidgets.length - 1];\n        return firstcell.equals(firstParagraph.associatedCell) &&\n            end.paragraph.associatedCell.equals(lastParagraph.associatedCell)\n            && (!firstParagraph.associatedCell.equals(lastParagraph.associatedCell) || (start.offset === 0\n                && end.offset === this.getLineLength(lastParagraph.lastChild) + 1));\n    };\n    /**\n     * Get the bounds of row and col index from selected cells\n     *\n     * @private\n     * @returns {object}\n     */\n    Selection.prototype.getCellBoundsInfo = function () {\n        var selectedWidgets = this.getSelectedCells();\n        if (selectedWidgets.length > 0) {\n            var colFirst = selectedWidgets[0].columnIndex;\n            var colLast = selectedWidgets[selectedWidgets.length - 1].columnIndex;\n            var rowFirst = selectedWidgets[0].rowIndex;\n            var rowLast = selectedWidgets[selectedWidgets.length - 1].rowIndex;\n            for (var i = 0; i < selectedWidgets.length; i++) {\n                var widget = selectedWidgets[i];\n                if (widget.columnIndex < colFirst) {\n                    colFirst = widget.columnIndex;\n                }\n                if (widget.columnIndex > colLast) {\n                    colLast = widget.columnIndex;\n                }\n                if (widget.rowIndex < rowFirst) {\n                    rowFirst = widget.rowIndex;\n                }\n                if (widget.rowIndex > rowLast) {\n                    rowLast = widget.rowIndex;\n                }\n            }\n            return { 'column': {\n                    'colFirst': colFirst,\n                    'colLast': colLast\n                },\n                'row': {\n                    'rowFirst': rowFirst,\n                    'rowLast': rowLast\n                }\n            };\n        }\n        return undefined;\n    };\n    /**\n     * Return true if the selection has merged cells, else false.\n     *\n     * @private\n     * @returns {boolean}\n     */\n    Selection.prototype.hasMergedCells = function () {\n        var selectedCells = this.getSelectedCells();\n        for (var i = 0; i < selectedCells.length; i++) {\n            var widget = selectedCells[i];\n            if (widget.cellFormat.rowSpan > 1 || widget.cellFormat.columnSpan > 1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @returns {ParagraphInfo}\n     */\n    Selection.prototype.getParagraphInfoInternal = function (line, lineOffset) {\n        var paragraph = line.paragraph;\n        var offset = this.getParagraphLength(paragraph, line) + lineOffset;\n        var previous = paragraph.previousSplitWidget;\n        while (previous instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            paragraph = previous;\n            offset += this.documentHelper.selection.getParagraphLength(paragraph);\n            previous = paragraph.previousSplitWidget;\n        }\n        return { 'paragraph': paragraph, 'offset': offset };\n    };\n    /**\n     * @private\n     * @returns {ListTextElementBox}\n     */\n    Selection.prototype.getListTextElementBox = function (paragarph) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(paragarph)) {\n            return undefined;\n        }\n        var listTextElement;\n        if (!paragarph.isEmpty()) {\n            var lineWidget = paragarph.childWidgets[0];\n            if (lineWidget.children.length > 1) {\n                if (lineWidget.children[0] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                    listTextElement = lineWidget.children[0];\n                }\n            }\n        }\n        return listTextElement;\n    };\n    /**\n     * @private\n     * @returns {WListLevel}\n     */\n    Selection.prototype.getListLevel = function (paragraph) {\n        var currentList = undefined;\n        var listLevelNumber = 0;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(paragraph.paragraphFormat) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(paragraph.paragraphFormat.listFormat)) {\n            currentList = this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId);\n            listLevelNumber = paragraph.paragraphFormat.listFormat.listLevelNumber;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentList) &&\n            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.documentHelper.getAbstractListById(currentList.abstractListId))\n            // && !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId).levels.getItem(listLevelNumber))) {\n            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.documentHelper.getAbstractListById(currentList.abstractListId).levels)) {\n            return this.documentHelper.layout.getListLevel(currentList, listLevelNumber);\n        }\n        return undefined;\n    };\n    Selection.prototype.getTextInline = function (inlineElement, endParagraphWidget, endInline, endIndex, includeObject) {\n        var text = '';\n        do {\n            if (inlineElement === endInline) {\n                if (inlineElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                    var span = inlineElement;\n                    if (!((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(span.text) || span.text === '')) {\n                        if (span.text.length < endIndex) {\n                            text = text + span.text;\n                        }\n                        else {\n                            text = text + span.text.substring(0, endIndex);\n                        }\n                    }\n                }\n                else if (inlineElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox && includeObject && endIndex === inlineElement.length) {\n                    text = text + _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ElementBox.objectCharacter;\n                }\n                return text;\n            }\n            if (inlineElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                text = text + inlineElement.text;\n            }\n            else if (inlineElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox && includeObject) {\n                text = text + _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ElementBox.objectCharacter;\n            }\n            else if (inlineElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inlineElement.fieldEnd)) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inlineElement.fieldSeparator)) {\n                    inlineElement = inlineElement.fieldSeparator;\n                }\n                else {\n                    inlineElement = inlineElement.fieldEnd;\n                }\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inlineElement.nextNode)) {\n                break;\n            }\n            inlineElement = inlineElement.nextNode;\n        } while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inlineElement));\n        if (endParagraphWidget === inlineElement.line.paragraph) {\n            return text;\n        }\n        var nextParagraphWidget = this.documentHelper.selection.getNextParagraphBlock(inlineElement.line.paragraph);\n        while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextParagraphWidget) && nextParagraphWidget.isEmpty()) {\n            text = text + '\\r';\n            if (nextParagraphWidget === endParagraphWidget) {\n                return text;\n            }\n            nextParagraphWidget = this.documentHelper.selection.getNextParagraphBlock(nextParagraphWidget);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextParagraphWidget) && !nextParagraphWidget.isEmpty()) {\n            var lineWidget = nextParagraphWidget.childWidgets[0];\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextParagraphWidget.previousSplitWidget)) {\n                text = text + '\\r';\n            }\n            text = text + this.getTextInline(lineWidget.children[0], endParagraphWidget, endInline, endIndex, includeObject);\n        }\n        return text;\n    };\n    /**\n     * Returns field code.\n     *\n     * @private\n     * @param fieldBegin\n     * @returns {string}\n     */\n    Selection.prototype.getFieldCode = function (fieldBegin, isSkipTrim) {\n        var fieldCode = '';\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(fieldBegin) && !(fieldBegin.fieldEnd instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox)) {\n            return fieldCode;\n        }\n        var paragraph = fieldBegin.paragraph;\n        var endParagraph = fieldBegin.fieldEnd.paragraph;\n        if (fieldBegin.fieldSeparator instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n            endParagraph = fieldBegin.fieldSeparator.paragraph;\n        }\n        var startLineIndex = fieldBegin.line.indexInOwner;\n        var startIndex = fieldBegin.indexInOwner;\n        do {\n            fieldCode += this.getFieldCodeInternal(paragraph, startLineIndex, startIndex);\n            if (paragraph === endParagraph) {\n                break;\n            }\n            paragraph = this.getNextParagraphBlock(paragraph);\n            startLineIndex = 0;\n            startIndex = 0;\n        } while (paragraph instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget);\n        return isSkipTrim ? fieldCode : fieldCode.trim();\n    };\n    Selection.prototype.getFieldCodeInternal = function (paragraph, startLineIndex, inlineIndex) {\n        var fieldCode = '';\n        for (var i = startLineIndex; i < paragraph.childWidgets.length; i++) {\n            var line = paragraph.childWidgets[i];\n            for (var i_1 = inlineIndex; i_1 < line.children.length; i_1++) {\n                var element = line.children[i_1];\n                if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                    fieldCode += element.text;\n                }\n                if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox\n                    && (element.fieldType === 2 || element.fieldType === 1)) {\n                    return fieldCode;\n                }\n            }\n            inlineIndex = 0;\n        }\n        return fieldCode;\n    };\n    /**\n     * @private\n     * @returns {FieldElementBox}\n     */\n    Selection.prototype.getTocFieldInternal = function () {\n        var paragraph = this.start.paragraph;\n        if (!this.isEmpty && !this.isForward) {\n            paragraph = this.end.paragraph;\n        }\n        while (paragraph instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget && paragraph.childWidgets.length > 0) {\n            var line = paragraph.firstChild;\n            if (line.children.length > 0) {\n                var element = line.children[0];\n                var nextElement = element.nextNode;\n                if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && element.fieldType === 0 && nextElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox\n                    && nextElement.text.trim().toLowerCase().indexOf('toc') === 0) {\n                    return element;\n                }\n            }\n            paragraph = paragraph.previousRenderedWidget;\n        }\n        return undefined;\n    };\n    /**\n     * Get next paragraph in bodyWidget\n     *\n     * @private\n     * @returns {ParagraphWidget}\n     */\n    Selection.prototype.getNextParagraph = function (section) {\n        if (section.nextRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget) {\n            var block = section.nextRenderedWidget.childWidgets[0];\n            return this.documentHelper.getFirstParagraphBlock(block);\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     * @returns {ParagraphWidget}\n     */\n    Selection.prototype.getPreviousParagraph = function (section) {\n        if (section.previousRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget) {\n            var bodyWidget = section.previousRenderedWidget;\n            var block = bodyWidget.childWidgets[bodyWidget.childWidgets.length - 1];\n            return this.documentHelper.getLastParagraphBlock(block);\n        }\n        return undefined;\n    };\n    /**\n     * Get Next start inline\n     *\n     * @private\n     * @returns {ElementBox}\n     */\n    Selection.prototype.getNextStartInline = function (line, offset) {\n        var indexInInline = 0;\n        var inlineObj = line.getInline(offset, indexInInline);\n        var inline = inlineObj.element;\n        indexInInline = inlineObj.index;\n        if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline) && indexInInline === inline.length && inline.nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox)\n            || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox) {\n            var nextValidInline = this.documentHelper.getNextValidElement(inline.nextNode);\n            if (nextValidInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && nextValidInline.fieldType === 0) {\n                inline = nextValidInline;\n            }\n        }\n        return inline;\n    };\n    /**\n     * Get previous text inline\n     *\n     * @private\n     * @returns {ElementBox}\n     */\n    Selection.prototype.getPreviousTextInline = function (inline) {\n        if (inline.previousNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n            return inline.previousNode;\n        }\n        if (inline.previousNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.isLinkedFieldCharacter(inline.previousNode)) {\n            if (inline.previousNode.fieldType === 0 || inline.previousNode.fieldType === 1) {\n                return inline.previousNode;\n            }\n            return inline.previousNode.fieldBegin;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.previousNode)) {\n            return this.getPreviousTextInline((inline.previousNode));\n        }\n        return undefined;\n    };\n    /**\n     * Get next text inline\n     *\n     * @private\n     * @returns {ElementBox}\n     */\n    Selection.prototype.getNextTextInline = function (inline) {\n        if (inline.nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n            return inline.nextNode;\n        }\n        if (inline.nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.isLinkedFieldCharacter(inline.nextNode))) {\n            if (inline.nextNode.fieldType === 1 || inline.nextNode.fieldType === 0) {\n                return inline.nextNode;\n            }\n            return inline.nextNode.fieldEnd;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.nextNode)) {\n            return this.getNextTextInline((inline.nextNode));\n        }\n        return undefined;\n    };\n    /**\n     * Get container table\n     *\n     * @private\n     * @returns {TableWidget}\n     */\n    Selection.prototype.getContainerTable = function (block) {\n        if (block.isInsideTable) {\n            if (block.associatedCell.ownerTable.isInsideTable) {\n                block = this.getContainerTable(block.associatedCell.ownerTable);\n            }\n            else {\n                block = block.associatedCell.ownerTable;\n            }\n        }\n        if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n            return block;\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     * @param element\n     * @returns\n     */\n    Selection.prototype.isElementInSelection = function (element, isEnd) {\n        var offset = element.line.getOffset(element, isEnd ? 0 : 1);\n        var elemPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n        elemPosition.setPositionParagraph(element.line, offset);\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        return ((elemPosition.isExistAfter(start) || elemPosition.isAtSamePosition(start))\n            && (elemPosition.isExistBefore(end) || elemPosition.isAtSamePosition(end)));\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.isSelectionInsideElement = function (element) {\n        //Handled for spellcheck\n        if (this.isEmpty) {\n            var startOffset = element.line.getOffset(element, 0);\n            var startPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            startPosition.setPositionParagraph(element.line, startOffset);\n            var endOffset = element.line.getOffset(element, element.length);\n            var endPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            endPosition.setPositionParagraph(element.line, endOffset);\n            return ((this.start.isExistAfter(startPosition) || this.start.isAtSamePosition(startPosition))\n                && (this.start.isExistBefore(endPosition) || this.start.isAtSamePosition(endPosition)));\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @returns {boolean}\n     */\n    Selection.prototype.isExistBefore = function (start, block) {\n        if (start.isInsideTable) {\n            var cell1 = start.associatedCell;\n            if (block.isInsideTable) {\n                var cell2 = block.associatedCell;\n                if (cell1 === cell2) {\n                    return cell1.childWidgets.indexOf(start) < cell1.childWidgets.indexOf(block);\n                }\n                if (cell1.ownerRow === cell2.ownerRow) {\n                    return cell1.cellIndex < cell2.cellIndex;\n                }\n                if (cell1.ownerTable === cell2.ownerTable) {\n                    return cell1.ownerRow.rowIndex < cell2.ownerRow.rowIndex;\n                }\n                //Checks if current block exists before the block.\n                var containerCell = this.getContainerCellOf(cell1, cell2);\n                if (containerCell.ownerTable.contains(cell2)) {\n                    cell1 = this.getSelectedCell(cell1, containerCell);\n                    cell2 = this.getSelectedCell(cell2, containerCell);\n                    if (cell1 === containerCell) {\n                        return this.isExistBefore(start, cell2.ownerTable);\n                    }\n                    if (cell2 === containerCell) {\n                        return this.isExistBefore(cell1.ownerTable, block);\n                    }\n                    if (containerCell.ownerRow === cell2.ownerRow) {\n                        return containerCell.cellIndex < cell2.cellIndex;\n                    }\n                    if (containerCell.ownerTable === cell2.ownerTable) {\n                        return containerCell.ownerRow.rowIndex < cell2.ownerRow.rowIndex;\n                    }\n                    return this.isExistBefore(cell1.ownerTable, cell2.ownerTable);\n                }\n                return this.isExistBefore(containerCell.ownerTable, this.getContainerTable(cell2.ownerTable));\n            }\n            else {\n                var ownerTable = this.getContainerTable(start);\n                return this.isExistBefore(ownerTable, block);\n            }\n        }\n        else if (block.isInsideTable) {\n            var ownerTable = this.getContainerTable(block);\n            return this.isExistBefore(start, ownerTable);\n        }\n        else {\n            {\n                if (start.containerWidget === block.containerWidget) {\n                    return start.index <\n                        block.index;\n                }\n                if ((start.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget && block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget)) {\n                    //Splitted blocks\n                    var startPage = this.documentHelper.pages.indexOf(start.containerWidget.page);\n                    var endPage = this.documentHelper.pages.indexOf(block.containerWidget.page);\n                    if (startPage === endPage) {\n                        return start.containerWidget.indexInOwner < block.containerWidget.indexInOwner;\n                    }\n                    if (startPage === endPage && start.containerWidget.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget && block.containerWidget.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget) {\n                        var startindex = this.documentHelper.pages[startPage].footnoteWidget.bodyWidgets.indexOf(start.containerWidget);\n                        var endindex = this.documentHelper.pages[endPage].footnoteWidget.bodyWidgets.indexOf(block.containerWidget);\n                        return startindex < endindex;\n                    }\n                    else if (startPage === endPage && start.containerWidget.index !== block.containerWidget.index) {\n                        var startindex = this.documentHelper.pages[startPage].bodyWidgets.indexOf(start.containerWidget);\n                        var endindex = this.documentHelper.pages[endPage].bodyWidgets.indexOf(block.containerWidget);\n                        return startindex < endindex;\n                    }\n                    else {\n                        return startPage < endPage;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @returns {boolean}\n     */\n    Selection.prototype.isExistAfter = function (start, block) {\n        if (start.isInsideTable) {\n            var cell1 = start.associatedCell;\n            //Current paragraph in cell, paragraph in cell\n            if (block.isInsideTable) {\n                var cell2 = block.associatedCell;\n                if (cell1 === cell2) {\n                    return cell1.childWidgets.indexOf(start) > cell1.childWidgets.indexOf(block);\n                }\n                if (cell1.ownerRow === cell2.ownerRow) {\n                    return cell1.cellIndex > cell2.cellIndex;\n                }\n                if (cell1.ownerTable === cell2.ownerTable) {\n                    return cell1.ownerRow.rowIndex > cell2.ownerRow.rowIndex;\n                }\n                //Checks if this block exists before block.\n                var containerCell = this.getContainerCellOf(cell1, cell2);\n                if (containerCell.ownerTable.contains(cell2)) {\n                    cell1 = this.getSelectedCell(cell1, containerCell);\n                    cell2 = this.getSelectedCell(cell2, containerCell);\n                    if (cell1 === containerCell) {\n                        return this.isExistAfter(start, cell2.ownerTable);\n                    }\n                    if (cell2 === containerCell) {\n                        return this.isExistAfter(cell1.ownerTable, block);\n                    }\n                    if (containerCell.ownerRow === cell2.ownerRow) {\n                        return containerCell.cellIndex > cell2.cellIndex;\n                    }\n                    if (containerCell.ownerTable === cell2.ownerTable) {\n                        return containerCell.ownerRow.rowIndex > cell2.ownerRow.rowIndex;\n                    }\n                    return this.isExistAfter(cell1.ownerTable, cell2.ownerTable);\n                }\n                return this.isExistAfter(containerCell.ownerTable, this.getContainerTable(cell2.ownerTable));\n            }\n            else {\n                var ownerTable = this.getContainerTable(start);\n                return this.isExistAfter(ownerTable, block);\n            }\n        }\n        else if (block.isInsideTable) {\n            var ownerTable = this.getContainerTable(block);\n            return this.isExistAfter(start, ownerTable);\n        }\n        else {\n            if (start.containerWidget === block.containerWidget) {\n                return start.index >\n                    block.index;\n            }\n            if ((start.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget && block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget) || (start.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget && block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget)) {\n                //Splitted blocks\n                var startPage = this.documentHelper.pages.indexOf(start.containerWidget.page);\n                var endPage = this.documentHelper.pages.indexOf(block.containerWidget.page);\n                return startPage > endPage;\n            }\n            //     if (start.owner instanceof WHeaderFooter) {\n            //         return (start.owner as WHeaderFooter).childWidgets.indexOf(start)\n            // > (block.owner as WHeaderFooter).childWidgets.indexOf(block);\n            //     } else if (start.section === block.section && start.section instanceof WSection) {\n            //         return (start.section as WSection).childWidgets.indexOf(start)\n            //  > (start.section as WSection).childWidgets.indexOf(block);\n            //     } else if (start.wordDocument instanceof WordDocument) {\n            //         return (start.wordDocument as WordDocument).sections.indexOf(start.section as WSection) > (start.wordDocument as WordDocument).sections.indexOf(block.section as WSection);\n        }\n        return false;\n    };\n    /**\n     * Return true if current inline in exist before inline\n     *\n     * @private\n     * @returns {boolean}\n     */\n    Selection.prototype.isExistBeforeInline = function (currentInline, inline) {\n        if (currentInline.line === inline.line) {\n            return currentInline.line.children.indexOf(currentInline) <=\n                inline.line.children.indexOf(inline);\n        }\n        if (currentInline.line.paragraph === inline.line.paragraph) {\n            return currentInline.line.paragraph.childWidgets.indexOf(currentInline.line)\n                < inline.line.paragraph.childWidgets.indexOf(inline.line);\n        }\n        var startParagraph = currentInline.line.paragraph;\n        var endParagraph = inline.line.paragraph;\n        if (startParagraph.containerWidget === endParagraph.containerWidget) {\n            if (startParagraph.isInsideTable) {\n                return startParagraph.associatedCell.childWidgets.indexOf(startParagraph) <\n                    endParagraph.associatedCell.childWidgets.indexOf(endParagraph);\n            }\n            else if (startParagraph.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.HeaderFooterWidget) {\n                // return ((currentInline.owner as WParagraph).owner as WHeaderFooter).blocks.indexOf(currentInline.owner as WParagraph) <\n                //     ((inline.owner as WParagraph).owner as WHeaderFooter).blocks.indexOf(inline.owner as WParagraph);\n            }\n            else {\n                return startParagraph.containerWidget.childWidgets.indexOf(startParagraph) <\n                    endParagraph.containerWidget.childWidgets.indexOf(endParagraph);\n            }\n        }\n        return this.isExistBefore(startParagraph, endParagraph);\n    };\n    /**\n     * Return true id current inline is exist after inline\n     *\n     * @private\n     * @returns {boolean}\n     */\n    Selection.prototype.isExistAfterInline = function (currentInline, inline, isRetrieve) {\n        if (currentInline.line === inline.line) {\n            var selection = this.documentHelper.selection;\n            if (isRetrieve) {\n                return currentInline.line.children.indexOf(currentInline) >=\n                    inline.line.children.indexOf(inline);\n            }\n            else if (currentInline === inline && selection.start.offset !== selection.end.offset) {\n                return currentInline.line.children.indexOf(currentInline) ===\n                    inline.line.children.indexOf(inline);\n            }\n            else {\n                return currentInline.line.children.indexOf(currentInline) >\n                    inline.line.children.indexOf(inline);\n            }\n        }\n        if (currentInline.line.paragraph === inline.line.paragraph) {\n            return currentInline.line.paragraph.childWidgets.indexOf(currentInline.line)\n                > inline.line.paragraph.childWidgets.indexOf(inline.line);\n        }\n        var startParagraph = currentInline.line.paragraph;\n        var endParagraph = inline.line.paragraph;\n        if (startParagraph.containerWidget === endParagraph.containerWidget) {\n            if (startParagraph.isInsideTable) {\n                return startParagraph.associatedCell.childWidgets.indexOf(startParagraph) >\n                    endParagraph.associatedCell.childWidgets.indexOf(endParagraph);\n            }\n            else if (startParagraph.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.HeaderFooterWidget) {\n                // return ((currentInline.owner as WParagraph).owner as WHeaderFooter).blocks.indexOf(currentInline.owner as WParagraph) <\n                //     ((inline.owner as WParagraph).owner as WHeaderFooter).blocks.indexOf(inline.owner as WParagraph);\n            }\n            else {\n                return startParagraph.containerWidget.childWidgets.indexOf(startParagraph) >\n                    endParagraph.containerWidget.childWidgets.indexOf(endParagraph);\n            }\n        }\n        return this.isExistAfter(startParagraph, endParagraph);\n    };\n    /**\n     * Get next rendered block\n     *\n     * @private\n     * @returns {BlockWidget}\n     */\n    Selection.prototype.getNextRenderedBlock = function (block) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(block.nextWidget)) {\n            return block.nextRenderedWidget;\n        }\n        return block.nextWidget;\n    };\n    /**\n     * Get next rendered block\n     *\n     * @private\n     * @returns {BlockWidget}\n     */\n    Selection.prototype.getPreviousRenderedBlock = function (block) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(block.previousWidget)) {\n            return block.previousRenderedWidget;\n        }\n        return block.previousWidget;\n    };\n    /**\n     * Get Next paragraph in block\n     *\n     * @private\n     * @returns {ParagraphWidget}\n     */\n    Selection.prototype.getNextParagraphBlock = function (block) {\n        if (block.nextRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            return block.nextRenderedWidget;\n        }\n        else if (block.nextRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n            return this.documentHelper.getFirstParagraphInFirstCell(block.nextRenderedWidget);\n        }\n        if (block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n            return this.getNextParagraphCell(block.containerWidget);\n        }\n        else if (block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget) {\n            var bodyWidget = block.containerWidget;\n            return this.getNextParagraph(block.containerWidget);\n        }\n        else if (block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.HeaderFooterWidget && this.isMoveDownOrMoveUp) {\n            return this.getFirstBlockInNextHeaderFooter(block);\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     * @returns {ParagraphWidget}\n     */\n    Selection.prototype.getFirstBlockInNextHeaderFooter = function (block) {\n        var headerFooter = block.containerWidget;\n        var nextBlock;\n        if (headerFooter.headerFooterType.indexOf('Header') !== -1) {\n            nextBlock = headerFooter.page.footerWidget.firstChild;\n        }\n        else if (headerFooter.page.nextPage) {\n            var nextPage = headerFooter.page.nextPage;\n            var headerWidget = nextPage.headerWidget;\n            headerWidget.page = nextPage;\n            if (nextPage.footerWidget) {\n                nextPage.footerWidget.page = nextPage;\n            }\n            nextBlock = headerWidget.firstChild;\n        }\n        else {\n            return undefined;\n        }\n        if (nextBlock instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            return nextBlock;\n        }\n        else {\n            return this.getFirstBlockInFirstCell(nextBlock);\n        }\n    };\n    /**\n     * @private\n     * @returns {ParagraphWidget}\n     */\n    Selection.prototype.getLastBlockInPreviousHeaderFooter = function (block) {\n        var headerFooter = block.containerWidget;\n        var previousBlock;\n        if (headerFooter.headerFooterType.indexOf('Footer') !== -1) {\n            previousBlock = headerFooter.page.headerWidget.lastChild;\n        }\n        else if (headerFooter.page.previousPage) {\n            var previousPage = headerFooter.page.previousPage;\n            var footerWidget = previousPage.footerWidget;\n            footerWidget.page = previousPage;\n            if (previousPage.headerWidget) {\n                previousPage.headerWidget.page = previousPage;\n            }\n            previousBlock = footerWidget.lastChild;\n        }\n        else {\n            return undefined;\n        }\n        if (previousBlock instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            return previousBlock;\n        }\n        else {\n            return this.getFirstBlockInFirstCell(previousBlock);\n        }\n    };\n    /**\n     * Get previous paragraph in block\n     *\n     * @private\n     * @returns {ParagraphWidget}\n     */\n    Selection.prototype.getPreviousParagraphBlock = function (block, isAutoList) {\n        if (block.previousRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            return block.previousRenderedWidget;\n        }\n        else if (block.previousRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n            return this.documentHelper.getLastParagraphInLastCell((block.previousRenderedWidget));\n        }\n        if (block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n            return this.getPreviousParagraphCell((block.containerWidget));\n        }\n        else if (block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget) {\n            return this.getPreviousParagraph(block.containerWidget);\n        }\n        else if (block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.HeaderFooterWidget && this.isMoveDownOrMoveUp && !isAutoList) {\n            return this.getLastBlockInPreviousHeaderFooter(block);\n        }\n        return undefined;\n    };\n    /**\n     * Return true if paragraph has valid inline\n     *\n     * @private\n     * @returns {ParagraphWidget}\n     */\n    Selection.prototype.hasValidInline = function (paragraph, start, end) {\n        var index = paragraph.childWidgets.indexOf(start.line);\n        for (var i = index; i < paragraph.childWidgets.length; i++) {\n            for (var j = 0; j < paragraph.childWidgets[i].children.length; j++) {\n                var inline = paragraph.childWidgets[i].children[j];\n                if (inline.length === 0) {\n                    continue;\n                }\n                if (inline === end) {\n                    return false;\n                }\n                if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox\n                    || (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.isLinkedFieldCharacter(inline))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Get paragraph length\n     *\n     * @private\n     * @returns {number}\n     */\n    Selection.prototype.getParagraphLength = function (paragraph, endLine, elementInfo, includeShape) {\n        var length = 0;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(paragraph)) {\n            for (var j = 0; j < paragraph.childWidgets.length; j++) {\n                var line = paragraph.childWidgets[j];\n                if (endLine instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.LineWidget && endLine === line) {\n                    if (elementInfo) {\n                        length += this.getLineLength(line, elementInfo, includeShape);\n                    }\n                    break;\n                }\n                length += this.getLineLength(line, undefined, includeShape);\n            }\n        }\n        return length;\n    };\n    /**\n     * Get Line length\n     *\n     * @private\n     * @returns {number}\n     */\n    Selection.prototype.getLineLength = function (line, elementInfo, includeShape) {\n        var length = 0;\n        var bidi = line.paragraph.bidi;\n        for (var i = !bidi ? 0 : line.children.length - 1; bidi ? i > -1 : i < line.children.length; bidi ? i-- : i++) {\n            var element = line.children[i];\n            if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                continue;\n            }\n            if (includeShape) {\n                if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox) {\n                    for (var m = 0; m < element.textFrame.childWidgets.length; m++) {\n                        var para = element.textFrame.childWidgets[m];\n                        length += this.getParagraphLength(para) + 1;\n                    }\n                }\n                else if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootnoteElementBox) {\n                    for (var m = 0; m < element.bodyWidget.childWidgets.length; m++) {\n                        var para = element.bodyWidget.childWidgets[m];\n                        length += this.getParagraphLength(para) + 1;\n                    }\n                }\n            }\n            if (elementInfo && elementInfo.element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ElementBox && elementInfo.element === element) {\n                length += elementInfo.index;\n                break;\n            }\n            length += element.length;\n        }\n        return length;\n    };\n    /**\n     * Get line information\n     *\n     * @private\n     * @returns {LineInfo}\n     */\n    Selection.prototype.getLineInfo = function (paragraph, offset) {\n        var line = undefined;\n        var length = 0;\n        var childLength = paragraph.childWidgets.length;\n        for (var j = 0; j < childLength; j++) {\n            line = paragraph.childWidgets[j];\n            length = this.getLineLength(line);\n            if (offset <= length || j === childLength - 1) {\n                break;\n            }\n            else {\n                offset = offset - length;\n            }\n        }\n        return { 'line': line, 'offset': offset };\n    };\n    /**\n     * @private\n     * @returns {ElementInfo}\n     */\n    Selection.prototype.getElementInfo = function (line, offset) {\n        var index = 0;\n        var element = undefined;\n        for (var i = 0; i < line.children.length; i++) {\n            element = line.children[i];\n            if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                continue;\n            }\n            if (offset > element.length\n                && (!(offset === element.length + 1 && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element.nextNode)))) {\n                offset = offset - element.length;\n            }\n            else {\n                break;\n            }\n        }\n        return { 'element': element, 'index': offset };\n    };\n    /**\n     * Get paragraph start offset\n     *\n     * @private\n     * @returns {number}\n     */\n    Selection.prototype.getStartOffset = function (paragraph) {\n        var startOffset = 0;\n        if (paragraph.childWidgets.length > 0) {\n            var childWidgets = paragraph.childWidgets[0];\n            return this.getStartLineOffset(childWidgets);\n        }\n        return startOffset;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getStartLineOffset = function (line) {\n        var startOffset = 0;\n        var isHidden = true;\n        for (var i = 0; i < line.children.length; i++) {\n            var inline = line.children[i];\n            if (inline.length === 0) {\n                continue;\n            }\n            if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ElementBox && inline.characterFormat.hidden) {\n                startOffset += inline.length;\n                if (isHidden) {\n                    startOffset += 1;\n                    isHidden = false;\n                }\n                continue;\n            }\n            if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox\n                || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.EditRangeStartElementBox\n                || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.EditRangeEndElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox\n                || (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.isLinkedFieldCharacter(inline))\n                || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ContentControl) {\n                return startOffset;\n            }\n            if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                continue;\n            }\n            startOffset += inline.length;\n        }\n        return startOffset;\n    };\n    /**\n     * Get previous paragraph from selection\n     *\n     * @private\n     */\n    Selection.prototype.getPreviousSelectionCell = function (cell) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(cell.previousRenderedWidget)) {\n            if (!this.isForward) {\n                var block = cell.previousRenderedWidget.childWidgets[0];\n                if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                    return block;\n                }\n                else {\n                    return this.documentHelper.getFirstParagraphInLastRow(block);\n                }\n            }\n            else {\n                var widgets = cell.previousRenderedWidget.childWidgets;\n                var block = widgets[widgets.length - 1];\n                if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                    return block;\n                }\n                else {\n                    return this.getPreviousParagraphSelection(block.childWidgets[block.childWidgets.length - 1]);\n                }\n            }\n        }\n        return this.getPreviousSelectionRow(cell.ownerRow);\n    };\n    /**\n     * Get previous paragraph selection in selection\n     *\n     * @private\n     */\n    Selection.prototype.getPreviousSelectionRow = function (row) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(row.previousRenderedWidget)) {\n            if (!this.isForward) {\n                var cell = row.previousRenderedWidget.childWidgets[0];\n                var block = cell.childWidgets[0];\n                return this.documentHelper.getFirstParagraphBlock(block);\n            }\n            else {\n                return this.getPreviousParagraphSelection(row.previousRenderedWidget);\n            }\n        }\n        return this.getPreviousSelectionBlock(row.ownerTable);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getNextSelectionBlock = function (block) {\n        if (block.nextRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            return block.nextRenderedWidget;\n        }\n        else if (block.nextRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n            if (this.isEmpty || this.isForward) {\n                return this.documentHelper.getLastParagraphInFirstRow(block.nextRenderedWidget);\n            }\n            else {\n                return this.getNextParagraphSelection(block.nextRenderedWidget.childWidgets[0]);\n            }\n        }\n        if (block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n            return this.getNextSelectionCell(block.containerWidget);\n        }\n        else if (block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget) {\n            return this.getNextSelection(block.containerWidget);\n        }\n        return undefined;\n    };\n    /**\n     * Get next paragraph from selected cell\n     *\n     * @private\n     */\n    Selection.prototype.getNextSelectionCell = function (cell) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(cell.nextRenderedWidget)) {\n            if (this.isEmpty || this.isForward) {\n                var block = cell.nextRenderedWidget.childWidgets[cell.nextRenderedWidget.childWidgets.length - 1];\n                return this.documentHelper.getLastParagraphBlock(block);\n            }\n            else {\n                //Return first paragraph in cell.\n                var block = cell.nextRenderedWidget.childWidgets[0];\n                if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                    return block;\n                }\n                else {\n                    return this.getNextParagraphSelection(block.childWidgets[0]);\n                }\n            }\n        }\n        return this.getNextSelectionRow(cell.ownerRow);\n    };\n    /**\n     * Get next paragraph in selection\n     *\n     * @private\n     */\n    Selection.prototype.getNextSelectionRow = function (row) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(row.nextRenderedWidget)) {\n            var isForwardSelection = this.isEmpty || this.isForward;\n            if (isForwardSelection) {\n                var cell = row.nextRenderedWidget.childWidgets[row.nextRenderedWidget.childWidgets.length - 1];\n                var block = cell.childWidgets[cell.childWidgets.length - 1];\n                return this.documentHelper.getLastParagraphBlock(block);\n            }\n            else {\n                return this.getNextParagraphSelection(row.nextRenderedWidget);\n            }\n        }\n        return this.getNextSelectionBlock(row.ownerTable);\n    };\n    /**\n     * Get next block with selection\n     *\n     * @private\n     */\n    Selection.prototype.getNextSelection = function (section) {\n        if (section.nextRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget) {\n            var block = section.nextRenderedWidget.childWidgets[0];\n            if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                return block;\n            }\n            else {\n                if (this.isEmpty || this.isForward) {\n                    return this.documentHelper.getLastParagraphInFirstRow(block);\n                }\n                else {\n                    return this.getNextParagraphSelection(block.childWidgets[0]);\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getNextParagraphSelection = function (row) {\n        //Iterate the exact cell based on UP/Down selection length.\n        var cell = row.childWidgets[0];\n        if (this.start.paragraph.isInsideTable\n            && row.ownerTable.contains(this.start.paragraph.associatedCell)) {\n            var startCell = this.getCellInTable(row.ownerTable, this.start.paragraph.associatedCell);\n            cell = this.getFirstCellInRegion(row, startCell, this.upDownSelectionLength, false);\n        }\n        var block = cell.childWidgets[0];\n        return this.documentHelper.getFirstParagraphBlock(block);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getPreviousSelectionBlock = function (block) {\n        if (block.previousRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            return block.previousRenderedWidget;\n        }\n        else if (block.previousRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n            if (!this.isForward) {\n                return this.documentHelper.getFirstParagraphInLastRow(block.previousRenderedWidget);\n            }\n            else {\n                return this.getPreviousParagraphSelection(block.previousRenderedWidget.childWidgets[block.previousRenderedWidget.childWidgets.length - 1]);\n            }\n        }\n        if (block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n            return this.getPreviousSelectionCell(block.containerWidget);\n        }\n        else if (block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget) {\n            return this.getPreviousSelection(block.containerWidget);\n        }\n        return undefined;\n    };\n    /**\n     * Get previous paragraph in selection\n     *\n     * @private\n     */\n    Selection.prototype.getPreviousSelection = function (section) {\n        if (section.previousRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget) {\n            var prevBodyWidget = section.previousRenderedWidget;\n            var block = prevBodyWidget.childWidgets[prevBodyWidget.childWidgets.length - 1];\n            if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                return block;\n            }\n            else {\n                if (!this.isForward) {\n                    return this.documentHelper.getFirstParagraphInLastRow(block);\n                }\n                else {\n                    var tableWidget = block;\n                    return this.getPreviousParagraphSelection(tableWidget.childWidgets[tableWidget.childWidgets.length - 1]);\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getPreviousParagraphSelection = function (row) {\n        //Iterate the exact cell based on UP/Down selection length.\n        var cell = row.childWidgets[row.childWidgets.length - 1];\n        if (this.start.paragraph.isInsideTable\n            && row.ownerTable.contains(this.start.paragraph.associatedCell)) {\n            var startCell = this.getCellInTable(row.ownerTable, this.start.paragraph.associatedCell);\n            cell = this.getLastCellInRegion(row, startCell, this.upDownSelectionLength, true);\n        }\n        var block = cell.childWidgets[cell.childWidgets.length - 1];\n        return this.documentHelper.getLastParagraphBlock(block);\n    };\n    /**\n     * Get last cell in the selected region\n     *\n     * @private\n     */\n    Selection.prototype.getLastCellInRegion = function (row, startCell, selLength, isMovePrev) {\n        var start = this.getCellLeft(row, startCell);\n        var end = start + startCell.cellFormat.cellWidth;\n        var flag = true;\n        if (start <= selLength && selLength < end) {\n            for (var i = row.childWidgets.length - 1; i >= 0; i--) {\n                var left = this.getCellLeft(row, row.childWidgets[i]);\n                if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(start, 2) <= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(left, 2) &&\n                    _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(left, 2) < _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(end, 2)) {\n                    flag = false;\n                    return row.childWidgets[i];\n                }\n            }\n        }\n        else {\n            for (var i = row.childWidgets.length - 1; i >= 0; i--) {\n                var left = this.getCellLeft(row, row.childWidgets[i]);\n                if (left <= selLength && left + row.childWidgets[i].width > selLength) {\n                    flag = false;\n                    return row.childWidgets[i];\n                }\n            }\n        }\n        if (flag) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(row.previousRenderedWidget) && isMovePrev) {\n                return this.getLastCellInRegion(row.previousRenderedWidget, startCell, selLength, isMovePrev);\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(row.nextRenderedWidget) && !isMovePrev) {\n                return this.getLastCellInRegion(row.nextRenderedWidget, startCell, selLength, isMovePrev);\n            }\n        }\n        return row.childWidgets[row.childWidgets.length - 1];\n    };\n    /**\n     * Get Container table\n     *\n     * @private\n     */\n    Selection.prototype.getCellInTable = function (table, tableCell) {\n        while (tableCell.ownerTable.isInsideTable) {\n            if (table.equals(tableCell.ownerTable)) {\n                return tableCell;\n            }\n            tableCell = tableCell.ownerTable.associatedCell;\n        }\n        return tableCell;\n    };\n    /**\n     * Get previous valid offset\n     *\n     * @private\n     */\n    Selection.prototype.getPreviousValidOffset = function (line, offset) {\n        if (offset === 0) {\n            return 0;\n        }\n        var validOffset = 0;\n        var count = 0;\n        var hiddenTextLength = 0;\n        for (var j = 0; j < line.children.length; j++) {\n            var inline = line.children[j];\n            if (inline.length === 0 || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                continue;\n            }\n            if (inline.characterFormat.hidden) {\n                hiddenTextLength += inline.length;\n                count += inline.length;\n                continue;\n            }\n            hiddenTextLength = 0;\n            if (offset <= count + inline.length) {\n                return offset - 1 === count ? validOffset : offset - 1;\n            }\n            if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ContentControl || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox\n                || (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.isLinkedFieldCharacter(inline))) {\n                validOffset = count + inline.length;\n            }\n            count += inline.length;\n        }\n        return offset - 1 === count ? validOffset : hiddenTextLength > 0 ? offset - (hiddenTextLength + 1) : offset - 1;\n    };\n    /**\n     * Get next valid offset\n     *\n     * @private\n     */\n    Selection.prototype.getNextValidOffset = function (line, offset) {\n        var count = 0;\n        // if (!line.paragraph.paragraphFormat.bidi) {\n        for (var i = 0; i < line.children.length; i++) {\n            var inline = line.children[i];\n            if (inline.length === 0 || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                continue;\n            }\n            if (inline.characterFormat.hidden) {\n                count += inline.length;\n                continue;\n            }\n            if (offset < count + inline.length) {\n                if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ContentControl || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox\n                    || (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.isLinkedFieldCharacter(inline))) {\n                    return (offset > count ? offset : count) + 1;\n                }\n            }\n            if (offset === count + inline.length && inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox &&\n                inline.fieldType === 1 && inline.previousNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox) {\n                return offset;\n            }\n            count += inline.length;\n        }\n        // } else {\n        //     if (offset !== this.getLineLength(line)) {\n        //         offset = line.getInlineForOffset(offset, false, undefined, false, false, true).index;\n        //     }\n        // }\n        return offset;\n    };\n    /**\n     * Get paragraph mark size info\n     *\n     * @private\n     */\n    Selection.prototype.getParagraphMarkSize = function (paragraph, topMargin, bottomMargin) {\n        var size = this.documentHelper.textHelper.getParagraphMarkSize(paragraph.characterFormat);\n        var baselineOffset = size.BaselineOffset;\n        var maxHeight = size.Height;\n        var maxBaselineOffset = baselineOffset;\n        if (paragraph instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            // let paragraphWidget: ParagraphWidget[] = paragraph.renderedElement() as ParagraphWidget[];\n            if (paragraph.childWidgets.length > 0) {\n                var lineWidget = paragraph.childWidgets[0];\n            }\n            //Gets line spacing.\n            var lineSpacing = this.documentHelper.layout.getLineSpacing(paragraph, maxHeight);\n            var beforeSpacing = this.documentHelper.layout.getBeforeSpacing(paragraph);\n            topMargin = maxBaselineOffset - baselineOffset;\n            bottomMargin = maxHeight - maxBaselineOffset - (size.Height - baselineOffset);\n            //Updates line spacing, paragraph after/ before spacing and aligns the text to base line offset.\n            var lineSpacingType = paragraph.paragraphFormat.lineSpacingType;\n            if (lineSpacingType === 'Multiple') {\n                if (lineSpacing > maxHeight) {\n                    bottomMargin += lineSpacing - maxHeight;\n                }\n                else {\n                    topMargin += lineSpacing - maxHeight;\n                }\n            }\n            else if (lineSpacingType === 'Exactly') {\n                topMargin += lineSpacing - (topMargin + size.Height + bottomMargin);\n            }\n            else if (lineSpacing > topMargin + size.Height + bottomMargin) {\n                topMargin += lineSpacing - (topMargin + size.Height + bottomMargin);\n            }\n            topMargin += beforeSpacing;\n            bottomMargin += this.documentHelper.layout.getAfterSpacing(paragraph);\n        }\n        return { 'width': size.Width, 'height': size.Height, 'topMargin': topMargin, 'bottomMargin': bottomMargin };\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getPhysicalPositionInternal = function (line, offset, moveNextLine) {\n        if (line.paragraph.isEmpty()) {\n            var paragraphWidget = line.paragraph;\n            var left = paragraphWidget.x;\n            if (paragraphWidget.childWidgets.length > 0) {\n                var lineWidget = paragraphWidget.childWidgets[0];\n                left = this.getLeft(lineWidget);\n            }\n            var topMargin = 0;\n            var bottomMargin = 0;\n            var size = this.getParagraphMarkSize(line.paragraph, topMargin, bottomMargin);\n            if (offset > 0 || (offset === 0 && paragraphWidget.isEmpty() && paragraphWidget.bidi)) {\n                left += size.width;\n            }\n            return new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.Point(left, paragraphWidget.y + size.topMargin);\n        }\n        else {\n            var indexInInline = 0;\n            var inlineObj = line.getInline(offset, indexInInline, line.paragraph.bidi);\n            var inline = inlineObj.element; //return indexInInline must\n            indexInInline = inlineObj.index;\n            // if (inline.length === indexInInline && !isNullOrUndefined(inline.nextNode) && this.viewer.renderedElements.containsKey(inline) &&\n            //     this.viewer.renderedElements.get(inline).length > 0 && this.viewer.renderedElements.containsKey(inline.nextNode as WInline)\n            //     && this.viewer.renderedElements.get(inline.nextNode as WInline).length > 0 &&\n            //     (this.viewer.renderedElements.get(inline)[this.viewer.renderedElements.get(inline).length - 1] as ElementBox).line !== (this.viewer.renderedElements.get(inline.nextNode as WInline)[0] as ElementBox).line) {\n            //     //Handled specifically to move the cursor at start of next line.\n            //     inline = inline.nextNode as WInline;\n            //     indexInInline = 0;\n            // }\n            return this.getPhysicalPositionInline(inline, indexInInline, moveNextLine);\n        }\n    };\n    /**\n     * Highlight selected content\n     *\n     * @private\n     */\n    Selection.prototype.highlightSelectedContent = function (start, end) {\n        if (start.paragraph.isInsideTable && (!end.paragraph.isInsideTable\n            || (!start.paragraph.associatedCell.equals(end.paragraph.associatedCell))\n            || (!this.documentHelper.isSelectionChangedOnMouseMoved && this.isCellSelected(start.paragraph.associatedCell, start, end))\n            || this.isCellPrevSelected)) {\n            this.highlightCell(start.paragraph.associatedCell, this, start, end);\n            this.isCellPrevSelected = true;\n        }\n        else {\n            var inline = undefined;\n            var index = 0;\n            if (!this.owner.isReadOnlyMode && start.paragraph === end.paragraph) {\n                if (start.offset + 1 === end.offset) {\n                    var inlineObj = end.currentWidget.getInline(end.offset, index);\n                    inline = inlineObj.element; // return index value\n                    index = inlineObj.index;\n                    if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox) {\n                        var startOffset = start.currentWidget.getOffset(inline, 0);\n                        if (startOffset !== start.offset) {\n                            inline = undefined;\n                        }\n                    }\n                }\n                else {\n                    var indexInInline = 0;\n                    var startInlineObj = start.currentWidget.getInline(start.offset, indexInInline);\n                    var startInline = startInlineObj.element; //return indexInInline\n                    indexInInline = startInlineObj.index;\n                    if (indexInInline === startInline.length) {\n                        startInline = this.getNextRenderedElementBox(startInline, indexInInline);\n                    }\n                    var endInlineObj = end.currentWidget.getInline(end.offset, indexInInline);\n                    var endInline = endInlineObj.element; //return indexInInline\n                    indexInInline = endInlineObj.index;\n                    if (startInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && endInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startInline.fieldSeparator)) {\n                        var fieldValue = startInline.fieldSeparator.nextNode;\n                        if (fieldValue instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox && fieldValue.nextNode === endInline) {\n                            inline = fieldValue;\n                        }\n                    }\n                }\n            }\n            if (!this.owner.isReadOnlyMode && this.owner.isDocumentLoaded && (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox)) {\n                var elementBoxObj = this.getElementBoxInternal(inline, index);\n                var elementBox = elementBoxObj.element; //return index\n                index = elementBoxObj.index;\n                if (this.owner.enableImageResizerMode && !this.owner.editorModule.isRemoteAction) {\n                    this.owner.imageResizerModule.positionImageResizer(elementBox);\n                    this.owner.imageResizerModule.showImageResizer();\n                }\n                if (this.documentHelper.isTouchInput) {\n                    this.documentHelper.touchStart.style.display = 'none';\n                    this.documentHelper.touchEnd.style.display = 'none';\n                }\n            }\n            else {\n                if (start.paragraph.isInsideTable\n                    && start.paragraph.associatedCell.equals(end.paragraph.associatedCell)\n                    && end.paragraph.equals(this.getLastParagraph(end.paragraph.associatedCell))\n                    && (this.getParagraphLength(end.paragraph) + 1) == end.offset) {\n                    end.offset--;\n                }\n                this.highlight(start.paragraph, start, end);\n                if (this.isHighlightNext) {\n                    if (this.hightLightNextParagraph === start.paragraph) {\n                        this.highlightNextBlock(this.hightLightNextParagraph, start, end);\n                    }\n                    this.isHighlightNext = false;\n                    this.hightLightNextParagraph = undefined;\n                }\n            }\n            if (this.isInShape) {\n                this.showResizerForShape();\n            }\n        }\n    };\n    Selection.prototype.showResizerForShape = function () {\n        var shape = this.getCurrentTextFrame().containerShape;\n        this.owner.imageResizerModule.positionImageResizer(shape);\n        this.owner.imageResizerModule.showImageResizer();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.highlight = function (paragraph, start, end, contentControl) {\n        var selectionStartIndex = 0;\n        var selectionEndIndex = 0;\n        var startElement = undefined;\n        var endElement = undefined;\n        var startLineWidget = undefined;\n        var endLineWidget = undefined;\n        //return start Element and selection start index\n        var startLineObj = this.getStartLineWidget(paragraph, start, startElement, selectionStartIndex);\n        startElement = startLineObj.element;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startElement)) {\n            startLineWidget = paragraph.childWidgets[0];\n        }\n        else {\n            startLineWidget = startElement.line;\n        }\n        selectionStartIndex = startLineObj.index;\n        var endLineObj = this.getEndLineWidget(end, endElement, selectionEndIndex);\n        endElement = endLineObj.element;\n        if (endElement) {\n            endLineWidget = endElement.line;\n        }\n        else {\n            endLineWidget = end.paragraph.childWidgets[end.paragraph.childWidgets.length - 1];\n        }\n        selectionEndIndex = endLineObj.index;\n        var top = 0;\n        var left = 0;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startLineWidget)) {\n            top = this.getTop(startLineWidget);\n            left = this.getLeftInternal(startLineWidget, startElement, selectionStartIndex);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startLineWidget) && startLineWidget === endLineWidget) {\n            //Selection ends in current line.\n            var right = this.getLeftInternal(endLineWidget, endElement, selectionEndIndex);\n            var width = 0;\n            var isRtlText = false;\n            if (endElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                isRtlText = endElement.isRightToLeft;\n            }\n            if (!isRtlText && startElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                isRtlText = startElement.isRightToLeft;\n            }\n            width = Math.abs(right - left);\n            // Handled the highlighting approach as genric for normal and rtl text.\n            if (isRtlText || paragraph.bidi) {\n                var elementBoxCollection = this.getElementsForward(startLineWidget, startElement, endElement, paragraph.bidi);\n                if (elementBoxCollection && elementBoxCollection.length > 1) {\n                    for (var i = 0; i < elementBoxCollection.length; i++) {\n                        var element = elementBoxCollection[i];\n                        var elementIsRTL = false;\n                        var index = element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox ? element.length : 1;\n                        if (element === startElement) {\n                            left = this.getLeftInternal(startLineWidget, element, selectionStartIndex);\n                            right = this.getLeftInternal(startLineWidget, element, index);\n                        }\n                        else if (element === endElement) {\n                            left = this.getLeftInternal(startLineWidget, element, 0);\n                            right = this.getLeftInternal(startLineWidget, element, selectionEndIndex);\n                        }\n                        else {\n                            left = this.getLeftInternal(startLineWidget, element, 0);\n                            right = this.getLeftInternal(startLineWidget, element, index);\n                        }\n                        if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                            elementIsRTL = element.isRightToLeft;\n                        }\n                        width = Math.abs(right - left);\n                        // Handled the paragraph mark highliting as special case.\n                        if (element === endElement && element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox\n                            && selectionEndIndex > element.length) {\n                            var charFormat = element.line.paragraph.characterFormat;\n                            var paragraphMarkWidth = this.documentHelper.textHelper.getParagraphMarkSize(charFormat).Width;\n                            if (paragraph.bidi && !elementIsRTL) {\n                                width -= paragraphMarkWidth;\n                                // Highlight the element.\n                                this.createHighlightBorder(startLineWidget, width, left, top, true, contentControl);\n                                // Highlight the paragraph mark of Bidi paragrph. \n                                left = this.getLineStartLeft(startLineWidget) - paragraphMarkWidth;\n                                this.createHighlightBorder(startLineWidget, paragraphMarkWidth, left, top, true, contentControl);\n                                // continue to next element.\n                                continue;\n                            }\n                        }\n                        this.createHighlightBorder(startLineWidget, width, elementIsRTL ? right : left, top, true, contentControl);\n                    }\n                }\n                else { // Need to handle the Paragraph mark highlighting.\n                    if (endElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox && selectionEndIndex > endElement.length) {\n                        var charFormat = endElement.line.paragraph.characterFormat;\n                        var paragraphMarkWidth = this.documentHelper.textHelper.getParagraphMarkSize(charFormat).Width;\n                        // Since isRTLText is truo, so the right is considered as left\n                        if (!paragraph.bidi && isRtlText) {\n                            right += paragraphMarkWidth;\n                            width -= paragraphMarkWidth;\n                            // Highlight the element.\n                            this.createHighlightBorder(startLineWidget, width, right, top, true, contentControl);\n                            // Highlight the paragraph mark. \n                            right += endElement.width;\n                            this.createHighlightBorder(startLineWidget, paragraphMarkWidth, right, top, true, contentControl);\n                        }\n                        else if (paragraph.bidi && !isRtlText) {\n                            width -= paragraphMarkWidth;\n                            // Highlight the element.\n                            this.createHighlightBorder(startLineWidget, width, left, top, true, contentControl);\n                            // Highlight the paragraph mark of Bidi paragrph. \n                            left = this.getLineStartLeft(startLineWidget) - paragraphMarkWidth;\n                            this.createHighlightBorder(startLineWidget, paragraphMarkWidth, left, top, true, contentControl);\n                        }\n                        else {\n                            this.createHighlightBorder(startLineWidget, width, isRtlText ? right : left, top, false, contentControl);\n                        }\n                    }\n                    else {\n                        this.createHighlightBorder(startLineWidget, width, isRtlText ? right : left, top, false, contentControl);\n                    }\n                }\n            }\n            else {\n                // Start element and end element will be in reverese for Bidi paragraph highlighting. \n                // So, the right is considered based on Bidi property.\n                this.createHighlightBorder(startLineWidget, width, paragraph.bidi ? right : left, top, false, contentControl);\n            }\n        }\n        else {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startLineWidget)) {\n                var x = startLineWidget.paragraph.x;\n                if (paragraph !== startLineWidget.paragraph) {\n                    paragraph = startLineWidget.paragraph;\n                }\n                var width = this.getWidth(startLineWidget, true) - (left - startLineWidget.paragraph.x);\n                // Handled the  highlighting approach as genric for normal and rtl text.\n                if (paragraph.bidi || (startElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox && startElement.isRightToLeft)) {\n                    var right = 0;\n                    var elementCollection = this.getElementsForward(startLineWidget, startElement, endElement, paragraph.bidi);\n                    if (elementCollection) {\n                        var elementIsRTL = false;\n                        for (var i = 0; i < elementCollection.length; i++) {\n                            var element = elementCollection[i];\n                            elementIsRTL = false;\n                            if (element === startElement) {\n                                left = this.getLeftInternal(startLineWidget, element, selectionStartIndex);\n                            }\n                            else {\n                                left = this.getLeftInternal(startLineWidget, element, 0);\n                            }\n                            var index = element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox ? element.length : 1;\n                            right = this.getLeftInternal(startLineWidget, element, index);\n                            if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                                elementIsRTL = element.isRightToLeft;\n                            }\n                            width = Math.abs(right - left);\n                            this.createHighlightBorder(startLineWidget, width, elementIsRTL ? right : left, top, true, contentControl);\n                        }\n                        // Highlight the Paragrph mark for last line.\n                        if (startLineWidget.isLastLine()) {\n                            var charFormat = elementCollection[elementCollection.length - 1].line.paragraph.characterFormat;\n                            var paragraphMarkWidth = this.documentHelper.textHelper.getParagraphMarkSize(charFormat).Width;\n                            if (paragraph.bidi) {\n                                // The paragraph mark will be at the left most end.\n                                left = this.getLineStartLeft(startLineWidget) - paragraphMarkWidth;\n                            }\n                            else { // The paragraph mark will at right most end.\n                                left = elementIsRTL ? startLineWidget.paragraph.x + this.getWidth(startLineWidget, false) : right;\n                            }\n                            this.createHighlightBorder(startLineWidget, paragraphMarkWidth, left, top, true, contentControl);\n                        }\n                    }\n                    else {\n                        this.createHighlightBorder(startLineWidget, width, left, top, false, contentControl);\n                    }\n                }\n                else {\n                    this.createHighlightBorder(startLineWidget, width, left, top, false, contentControl);\n                }\n                var lineIndex = startLineWidget.paragraph.childWidgets.indexOf(startLineWidget);\n                //Iterates to last item of paragraph or selection end.                                             \n                this.highlightParagraph(paragraph, lineIndex + 1, endLineWidget, endElement, selectionEndIndex, contentControl);\n                if (paragraph.childWidgets.indexOf(end.currentWidget) !== -1) {\n                    return;\n                }\n            }\n            if (this.isHideSelection(paragraph)) {\n                this.isHighlightNext = false;\n                return;\n            }\n            this.isHighlightNext = true;\n            this.hightLightNextParagraph = paragraph;\n        }\n    };\n    Selection.prototype.highlightNextBlock = function (paragraph, start, end) {\n        var block = paragraph.nextRenderedWidget;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(block)) {\n            if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                this.isHighlightNext = false;\n                this.highlight(block, start, end);\n                if (this.isHighlightNext) {\n                    this.highlightNextBlock(this.hightLightNextParagraph, start, end);\n                    this.isHighlightNext = false;\n                    this.hightLightNextParagraph = undefined;\n                }\n            }\n            else {\n                this.highlightTable(block, start, end);\n            }\n        }\n    };\n    /**\n     * Get start line widget\n     * @private\n     * @returns {ElementInfo}\n     */\n    Selection.prototype.getStartLineWidget = function (paragraph, start, startElement, selectionStartIndex) {\n        var offset = paragraph === start.paragraph ? start.offset : this.getStartOffset(paragraph);\n        var startInlineObj = undefined;\n        if (paragraph === start.paragraph) {\n            startInlineObj = start.currentWidget.getInline(offset, selectionStartIndex);\n        }\n        else {\n            startInlineObj = paragraph.firstChild.getInline(offset, selectionStartIndex);\n        }\n        startElement = startInlineObj.element; //return selectionStartIndex\n        selectionStartIndex = startInlineObj.index;\n        if (startElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n            var inlineInfo = this.getRenderedInline(startElement, selectionStartIndex);\n            startElement = inlineInfo.element;\n            selectionStartIndex = inlineInfo.index;\n        }\n        if (offset === this.getParagraphLength(start.paragraph) + 1) {\n            selectionStartIndex++;\n        }\n        return {\n            'index': selectionStartIndex, 'element': startElement\n        };\n    };\n    /**\n     * Get end line widget\n     * @private\n     */\n    Selection.prototype.getEndLineWidget = function (end, endElement, selectionEndIndex) {\n        var endInlineObj = end.currentWidget.getInline(end.offset, selectionEndIndex);\n        endElement = endInlineObj.element; //return selection end index\n        selectionEndIndex = endInlineObj.index;\n        if (endElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n            var inlineInfo = this.getRenderedInline(endElement, selectionEndIndex);\n            endElement = inlineInfo.element;\n            selectionEndIndex = inlineInfo.index;\n        }\n        var lineIndex = end.paragraph.childWidgets.indexOf(end.currentWidget);\n        if (lineIndex === end.paragraph.childWidgets.length - 1 && end.offset === this.getLineLength(end.currentWidget) + 1) {\n            selectionEndIndex = endElement ? endElement.length + 1 : 1;\n        }\n        return { 'index': selectionEndIndex, 'element': endElement };\n    };\n    /**\n     * Get line widget\n     * @private\n     */\n    Selection.prototype.getLineWidgetInternal = function (line, offset, moveToNextLine) {\n        var lineWidget = undefined;\n        if (line.children.length === 0 && line instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.LineWidget) {\n            lineWidget = line;\n        }\n        else {\n            var indexInInline = 0;\n            var inlineInfo = line.getInline(offset, indexInInline);\n            var inline = inlineInfo.element;\n            indexInInline = inlineInfo.index;\n            lineWidget = inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ElementBox ? inline.line\n                : this.getLineWidgetInternalInline(inline, indexInInline, moveToNextLine);\n        }\n        return lineWidget;\n    };\n    /**\n     * Get last line widget\n     * @private\n     */\n    Selection.prototype.getLineWidgetParagraph = function (offset, line) {\n        var linewidget = undefined;\n        if (line.children.length === 0) {\n            linewidget = line;\n        }\n        else {\n            var indexInInline = 0;\n            var inlineInfo = line.getInline(offset, indexInInline);\n            var inline = inlineInfo.element;\n            indexInInline = inlineInfo.index;\n            linewidget = this.getLineWidget(inline, indexInInline);\n        }\n        return linewidget;\n    };\n    /**\n     * Highlight selected cell\n     * @private\n     */\n    Selection.prototype.highlightCells = function (table, startCell, endCell) {\n        var start = this.getCellLeft(startCell.ownerRow, startCell);\n        var end = start + startCell.cellFormat.cellWidth;\n        var endCellLeft = this.getCellLeft(endCell.ownerRow, endCell);\n        var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n        if (start > endCellLeft) {\n            start = endCellLeft;\n        }\n        if (end < endCellRight) {\n            end = endCellRight;\n        }\n        if (start > this.upDownSelectionLength) {\n            start = this.upDownSelectionLength;\n        }\n        if (end < this.upDownSelectionLength) {\n            end = this.upDownSelectionLength;\n        }\n        var tableWidgetCollection = table.getSplitWidgets();\n        var startTableIndex = tableWidgetCollection.indexOf(startCell.ownerRow.ownerTable);\n        var endTableIndex = tableWidgetCollection.indexOf(endCell.ownerRow.ownerTable);\n        if (startTableIndex === endTableIndex) {\n            var count = table.childWidgets.indexOf(endCell.ownerRow);\n            for (var i = table.childWidgets.indexOf(startCell.ownerRow); i <= count; i++) {\n                this.highlightRow(table.childWidgets[i], start, end);\n            }\n        }\n        else {\n            var startRowIndex = 0;\n            var endRowIndex = 0;\n            for (var i = startTableIndex; i <= endTableIndex; i++) {\n                table = tableWidgetCollection[i];\n                if (i === startTableIndex) {\n                    startRowIndex = table.childWidgets.indexOf(startCell.ownerRow);\n                }\n                else {\n                    startRowIndex = 0;\n                }\n                if (i === endTableIndex) {\n                    endRowIndex = table.childWidgets.indexOf(endCell.ownerRow);\n                }\n                else {\n                    endRowIndex = table.childWidgets.length - 1;\n                }\n                for (var j = startRowIndex; j <= endRowIndex; j++) {\n                    this.highlightRow(table.childWidgets[j], start, end);\n                }\n            }\n        }\n    };\n    /**\n     * highlight selected table\n     *\n     * @private\n     */\n    Selection.prototype.highlightTable = function (table, start, end) {\n        this.highlightInternal(table.childWidgets[0], start, end);\n        if (!end.paragraph.isInsideTable //Selection end is outside the table cell.\n            || !table.contains(end.paragraph.associatedCell)) { //Selection end is not inside the current table.\n            this.highlightNextBlock(table, start, end);\n        }\n    };\n    /**\n     * Get cell left\n     *\n     * @private\n     */\n    Selection.prototype.getCellLeft = function (row, cell) {\n        var left = 0;\n        left += cell.x - cell.margin.left;\n        return left;\n    };\n    /**\n     * Get next paragraph for row\n     *\n     * @private\n     */\n    Selection.prototype.getNextParagraphRow = function (row) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(row.nextRenderedWidget)) {\n            var cell = row.nextRenderedWidget.childWidgets[0];\n            var block = cell.childWidgets[0];\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(block)) {\n                return this.getNextParagraphCell(cell);\n            }\n            return this.documentHelper.getFirstParagraphBlock(block);\n        }\n        return this.getNextParagraphBlock(row.ownerTable);\n    };\n    /**\n     * Get previous paragraph from row\n     *\n     * @private\n     */\n    Selection.prototype.getPreviousParagraphRow = function (row) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(row.previousRenderedWidget)) {\n            var cell = row.previousRenderedWidget.lastChild;\n            var block = cell.lastChild ? cell.lastChild : (cell.previousSplitWidget).lastChild;\n            return this.documentHelper.getLastParagraphBlock(block);\n        }\n        return this.getPreviousParagraphBlock(row.ownerTable);\n    };\n    /**\n     * Return true if row contain cell\n     *\n     * @private\n     */\n    Selection.prototype.containsRow = function (row, tableCell) {\n        if (row.childWidgets.indexOf(tableCell) !== -1) {\n            return true;\n        }\n        while (tableCell.ownerTable.isInsideTable) {\n            if (row.childWidgets.indexOf(tableCell) !== -1) {\n                return true;\n            }\n            tableCell = tableCell.ownerTable.associatedCell;\n        }\n        return row.childWidgets.indexOf(tableCell) !== -1;\n    };\n    /**\n     * Highlight selected row\n     *\n     * @private\n     */\n    Selection.prototype.highlightRow = function (row, start, end) {\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var left = this.getCellLeft(row, row.childWidgets[i]);\n            if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(start, 2) <= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(left, 2) &&\n                _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(left, 2) < _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(end, 2)) {\n                this.highlightCellWidget(row.childWidgets[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.highlightInternal = function (row, start, end) {\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            this.highlightCellWidget(row.childWidgets[i]);\n        }\n        if (end.paragraph.isInsideTable && this.containsRow(row, end.paragraph.associatedCell)) {\n            return;\n        }\n        else if (row.nextRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableRowWidget) {\n            this.highlightInternal(row.nextRenderedWidget, start, end);\n        }\n    };\n    /**\n     * Get last paragraph in cell\n     *\n     * @private\n     */\n    Selection.prototype.getLastParagraph = function (cell) {\n        while (cell.nextSplitWidget) {\n            if (cell.nextSplitWidget.childWidgets.length > 0) {\n                cell = cell.nextSplitWidget;\n            }\n            else {\n                break;\n            }\n        }\n        var lastBlock;\n        if (cell.childWidgets.length > 0) {\n            lastBlock = cell.lastChild;\n        }\n        else {\n            lastBlock = cell.previousSplitWidget.lastChild;\n        }\n        return this.documentHelper.getLastParagraphBlock(lastBlock);\n    };\n    /**\n     * Return true is source cell contain cell\n     *\n     * @private\n     */\n    Selection.prototype.containsCell = function (sourceCell, cell) {\n        if (sourceCell.equals(cell)) {\n            return true;\n        }\n        while (cell.ownerTable.isInsideTable) {\n            if (sourceCell.equals(cell.ownerTable.associatedCell)) {\n                return true;\n            }\n            cell = cell.ownerTable.associatedCell;\n        }\n        return false;\n    };\n    /**\n     * Return true if cell is selected\n     *\n     * @private\n     */\n    Selection.prototype.isCellSelected = function (cell, startPosition, endPosition) {\n        var lastParagraph = this.getLastParagraph(cell);\n        var isAtCellEnd = lastParagraph === endPosition.paragraph && endPosition.offset === this.getParagraphLength(lastParagraph) + 1;\n        return isAtCellEnd || (!this.containsCell(cell, startPosition.paragraph.associatedCell) ||\n            !this.containsCell(cell, endPosition.paragraph.associatedCell));\n    };\n    /**\n     * Return Container cell\n     *\n     * @private\n     */\n    Selection.prototype.getContainerCellOf = function (cell, tableCell) {\n        while (cell.ownerTable.isInsideTable) {\n            if (cell.ownerTable.contains(tableCell)) {\n                return cell;\n            }\n            cell = cell.ownerTable.associatedCell;\n        }\n        return cell;\n    };\n    /**\n     * Get Selected cell\n     *\n     * @private\n     */\n    Selection.prototype.getSelectedCell = function (cell, containerCell) {\n        if (cell.ownerTable.equals(containerCell.ownerTable)) {\n            return cell;\n        }\n        while (cell.ownerTable.isInsideTable) {\n            if (cell.ownerTable.associatedCell.equals(containerCell)) {\n                return cell;\n            }\n            cell = cell.ownerTable.associatedCell;\n        }\n        return cell;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getSelectedCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.selectedWidgets.keys.length; i++) {\n            var widget = this.selectedWidgets.keys[i];\n            if (widget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n                cells.push(widget);\n            }\n        }\n        return cells;\n    };\n    /**\n     * @private\n     * @return\n     */\n    Selection.prototype.getLevelFormatNumber = function () {\n        var numberFormat = '%';\n        numberFormat = numberFormat + (((this.paragraphFormat.listLevelNumber <= 0) ? 0 : this.paragraphFormat.listLevelNumber) + 1) + '.';\n        return numberFormat;\n    };\n    /**\n     * Get Next paragraph from cell\n     *\n     * @private\n     */\n    Selection.prototype.getNextParagraphCell = function (cell) {\n        if (cell.nextRenderedWidget && cell.nextRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n            if (cell.ownerRow.index === cell.nextRenderedWidget.rowIndex) {\n                //Return first paragraph in cell.\n                cell = cell.nextRenderedWidget;\n                if (cell.getSplitWidgets()[0] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n                    cell = cell.getSplitWidgets()[0];\n                }\n                var block = cell.firstChild;\n                if (block) {\n                    return this.documentHelper.getFirstParagraphBlock(block);\n                }\n                else {\n                    return this.getNextParagraphCell(cell);\n                }\n            }\n            else {\n                cell = cell.nextRenderedWidget;\n                return this.getNextParagraphCell(cell);\n            }\n        }\n        else if (cell.nextSplitWidget && cell.nextSplitWidget.childWidgets.length === 0) {\n            cell = cell.getSplitWidgets().pop();\n        }\n        return this.getNextParagraphRow(cell.containerWidget);\n    };\n    /**\n     * Get previous paragraph from cell\n     *\n     * @private\n     */\n    Selection.prototype.getPreviousParagraphCell = function (cell) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(cell.previousRenderedWidget) && cell.previousRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n            cell = cell.previousRenderedWidget;\n            var block = cell.lastChild;\n            return this.documentHelper.getLastParagraphBlock(block);\n        }\n        return this.getPreviousParagraphRow(cell.ownerRow);\n    };\n    /**\n     * Get cell's container cell\n     *\n     * @private\n     */\n    Selection.prototype.getContainerCell = function (cell) {\n        while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(cell.ownerTable) && cell.ownerTable.isInsideTable) {\n            cell = cell.ownerTable.associatedCell;\n        }\n        return cell;\n    };\n    /**\n     * Highlight selected cell\n     *\n     * @private\n     */\n    Selection.prototype.highlightCell = function (cell, selection, start, end) {\n        if (end.paragraph.isInsideTable) {\n            var containerCell = this.getContainerCellOf(cell, end.paragraph.associatedCell);\n            if (containerCell.ownerTable.contains(end.paragraph.associatedCell)) {\n                var startCell = this.getSelectedCell(cell, containerCell);\n                var endCell = this.getSelectedCell(end.paragraph.associatedCell, containerCell);\n                if (this.containsCell(containerCell, end.paragraph.associatedCell)) {\n                    //Selection end is in container cell.\n                    if (this.isCellSelected(containerCell, start, end)) {\n                        this.highlightCellWidget(containerCell);\n                    }\n                    else {\n                        if (startCell === containerCell) {\n                            this.highlight(start.paragraph, start, end);\n                            if (this.isHighlightNext) {\n                                this.highlightNextBlock(this.hightLightNextParagraph, start, end);\n                                this.isHighlightNext = false;\n                                this.hightLightNextParagraph = undefined;\n                            }\n                        }\n                        else {\n                            this.highlightContainer(startCell, start, end);\n                        }\n                    }\n                }\n                else {\n                    //Selection end is not in container cell.\n                    this.highlightCellWidget(containerCell);\n                    if (containerCell.ownerRow.equals(endCell.ownerRow)) {\n                        //Highlight other selected cells in current row.\n                        startCell = containerCell;\n                        while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startCell.nextRenderedWidget)) {\n                            startCell = startCell.nextRenderedWidget;\n                            this.highlightCellWidget(startCell);\n                            if (startCell === endCell) {\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        this.highlightCells(containerCell.ownerTable, containerCell, endCell);\n                    }\n                }\n            }\n            else {\n                this.highlightContainer(containerCell, start, end);\n            }\n        }\n        else {\n            var cell1 = this.getContainerCell(cell);\n            this.highlightContainer(cell1, start, end);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.highlightContainer = function (cell, start, end) {\n        this.highlightInternal(cell.containerWidget, start, end);\n        this.highlightNextBlock(cell.ownerTable.getSplitWidgets().pop(), start, end);\n    };\n    /**\n     * Get previous valid element\n     *\n     * @private\n     */\n    Selection.prototype.getPreviousValidElement = function (inline) {\n        var previousValidInline = undefined;\n        if (this.documentHelper.isFormFillProtectedMode && inline.fieldType === 2) {\n            return inline;\n        }\n        while (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n            if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.isLinkedFieldCharacter(inline)) {\n                if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 0) {\n                    previousValidInline = inline;\n                }\n                else if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 1) {\n                    previousValidInline = inline;\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.fieldSeparator)) {\n                        inline = inline.fieldBegin;\n                        previousValidInline = inline;\n                    }\n                }\n                else {\n                    inline = inline.fieldBegin;\n                    previousValidInline = inline;\n                }\n            }\n            inline = inline.previousNode;\n        }\n        return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(previousValidInline) ? inline : previousValidInline;\n    };\n    /**\n     * Return next valid inline with index\n     *\n     * @private\n     */\n    Selection.prototype.validateTextPosition = function (inline, index) {\n        var nextNode = inline.nextNode;\n        if (inline.length === index && (nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox\n            || (!(inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox) && (nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox || nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox)))) {\n            //If inline is last item within field, then set field end as text position.\n            var nextInline = this.documentHelper.getNextValidElement(inline.nextNode);\n            if ((nextInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && nextInline.fieldType === 1)\n                || (nextInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox && nextInline.bookmarkType === 1)\n                || (nextInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox && nextInline.commentType === 1)) {\n                inline = nextInline;\n                index = this.documentHelper.isFormFillProtectedMode ? 0 : 1;\n            }\n        }\n        else if (index === 0 && inline.previousNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n            var prevInline = this.getPreviousValidElement(inline.previousNode);\n            inline = prevInline;\n            index = inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox ? 0 : inline.length;\n            if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 1) {\n                index++;\n            }\n        }\n        return { 'element': inline, 'index': index };\n    };\n    /**\n     * Get inline physical location\n     *\n     * @private\n     */\n    Selection.prototype.getPhysicalPositionInline = function (inline, index, moveNextLine) {\n        var element = undefined;\n        element = this.getElementBox(inline, index, moveNextLine).element;\n        var lineWidget = undefined;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element.line)) {\n            if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 1) {\n                element = inline;\n            }\n            else {\n                if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ContentControl) {\n                    return this.getFieldCharacterPosition(inline);\n                }\n                return new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.Point(0, 0);\n            }\n        }\n        var margin = element.margin;\n        var top = 0;\n        var left = 0;\n        if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox && element.text === '\\v' && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.nextNode) && !this.owner.editorModule.handledEnter) {\n            lineWidget = this.getNextLineWidget(element.line.paragraph, element);\n            index = 0;\n        }\n        else {\n            lineWidget = element.line;\n        }\n        top = this.getTop(lineWidget);\n        if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox && element.textWrappingStyle === 'Inline') {\n            var format = element.line.paragraph.characterFormat;\n            var previousInline = this.getPreviousTextElement(inline);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(previousInline)) {\n                format = previousInline.characterFormat;\n            }\n            else {\n                var nextInline = this.getNextTextElement(inline);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextInline)) {\n                    format = nextInline.characterFormat;\n                }\n            }\n            var measureObj = this.documentHelper.textHelper.getHeight(format);\n            if (element.margin.top + element.height - measureObj.BaselineOffset > 0) {\n                top += element.margin.top + element.height - measureObj.BaselineOffset;\n            }\n        }\n        else if (!(element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox)) {\n            top += margin.top > 0 ? margin.top : 0;\n        }\n        left = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(lineWidget)) ? 0 : this.getLeftInternal(lineWidget, element, index);\n        return new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.Point(left, top);\n    };\n    /**\n     * Get field character position\n     *\n     * @private\n     */\n    Selection.prototype.getFieldCharacterPosition = function (firstInline) {\n        var nextValidInline = this.documentHelper.getNextValidElementForField(firstInline);\n        //If field separator/end exists at end of paragraph, then move to next paragraph.\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextValidInline)) {\n            var nextParagraph = firstInline.line.paragraph;\n            return this.getEndPosition(nextParagraph);\n        }\n        else {\n            return this.getPhysicalPositionInline(nextValidInline, 0, true);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.isRenderBookmarkAtEnd = function (bookmark) {\n        var bookmarkElement;\n        if (bookmark.bookmarkType == 1) {\n            bookmarkElement = bookmark.reference;\n        }\n        else {\n            bookmarkElement = bookmark;\n        }\n        if (bookmarkElement && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(bookmarkElement.properties)) {\n            var endCell = bookmarkElement.reference ? bookmarkElement.reference.paragraph.associatedCell : undefined;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(endCell)) {\n                return false;\n            }\n            var lastRow = bookmarkElement.reference ? bookmarkElement.reference.paragraph.associatedCell.ownerRow : undefined;\n            var lastCell = lastRow ? lastRow.childWidgets[lastRow.childWidgets.length - 1] : undefined;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(lastCell)) {\n                return false;\n            }\n            if (endCell == lastCell && !(bookmark.bookmarkType === 1 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(bookmark.line) && bookmark.line.children.indexOf(bookmark) !== bookmark.line.children.length - 1)) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get paragraph end position\n     *\n     * @private\n     */\n    Selection.prototype.getEndPosition = function (widget) {\n        var left = widget.x;\n        var top = widget.y;\n        var lineWidget = undefined;\n        if (widget.childWidgets.length > 0) {\n            lineWidget = widget.childWidgets[widget.childWidgets.length - 1];\n            if (widget.paragraphFormat.bidi) {\n                left = this.getLeft(lineWidget);\n            }\n            else {\n                left += this.getWidth(lineWidget, false);\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(lineWidget)) {\n            top = this.getTop(lineWidget);\n        }\n        var topMargin = 0;\n        var bottomMargin = 0;\n        var size = this.getParagraphMarkSize(widget, topMargin, bottomMargin);\n        return new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.Point(left, top + size.topMargin);\n    };\n    /**\n     * Get element box\n     *\n     * @private\n     */\n    Selection.prototype.getElementBox = function (currentInline, index, moveToNextLine) {\n        var elementBox = undefined;\n        if (!(currentInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox || currentInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox || currentInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox || currentInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ContentControl)) {\n            elementBox = currentInline;\n        }\n        return { 'element': elementBox, 'index': index };\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getPreviousTextElement = function (inline) {\n        if (inline.previousNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n            return inline.previousNode;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.previousNode)) {\n            return this.getPreviousTextElement(inline.previousNode);\n        }\n        return undefined;\n    };\n    /**\n     * Get next text inline\n     *\n     * @private\n     */\n    Selection.prototype.getNextTextElement = function (inline) {\n        if (inline.nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n            return inline.nextNode;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.nextNode)) {\n            return this.getNextTextElement(inline.nextNode);\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getNextRenderedElementBox = function (inline, indexInInline) {\n        if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n            var fieldBegin = inline;\n            if (fieldBegin.fieldType === 0) {\n                inline = this.getRenderedField(fieldBegin);\n                if (fieldBegin === inline) {\n                    return fieldBegin;\n                }\n            }\n            indexInInline = 1;\n        }\n        while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline) && indexInInline === inline.length && inline.nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n            var nextValidInline = this.documentHelper.getNextValidElement((inline.nextNode));\n            if (nextValidInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && nextValidInline.fieldType === 0) {\n                var fieldBegin = nextValidInline;\n                inline = this.getRenderedField(fieldBegin);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline) && fieldBegin === inline) {\n                    return fieldBegin;\n                }\n                indexInInline = 1;\n            }\n            else {\n                inline = nextValidInline;\n            }\n        }\n        return inline;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getElementBoxInternal = function (inline, index) {\n        var element = undefined;\n        element = inline;\n        return {\n            'element': element, 'index': index\n        };\n    };\n    /**\n     * Get Line widget\n     *\n     * @private\n     */\n    Selection.prototype.getLineWidget = function (inline, index) {\n        return this.getLineWidgetInternalInline(inline, index, true);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getLineWidgetInternalInline = function (inline, index, moveToNextLine) {\n        var elementObj = this.getElementBox(inline, index, moveToNextLine);\n        var element = elementObj.element; //return index\n        index = elementObj.index;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element)) {\n            if (moveToNextLine && element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox && element.text === '\\v' && index === 1) {\n                return this.getNextLineWidget(element.line.paragraph, element);\n            }\n            else {\n                return element.line;\n            }\n        }\n        var startInline = inline;\n        //ToDo: Check previous inline here.\n        var nextValidInline = this.documentHelper.getNextValidElementForField(startInline);\n        //If field separator/end exists at end of paragraph, then move to next paragraph.\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextValidInline)) {\n            var lineWidget = undefined;\n            var widget = startInline.line.paragraph;\n            if (widget.childWidgets.length > 0) {\n                lineWidget = widget.childWidgets[widget.childWidgets.length - 1];\n            }\n            return lineWidget;\n        }\n        else {\n            return this.getLineWidget(nextValidInline, 0);\n        }\n    };\n    /**\n     * Get next line widget\n     *\n     * @private\n     */\n    Selection.prototype.getNextLineWidget = function (paragraph, element) {\n        var lineWidget = undefined;\n        var widget = paragraph;\n        if (widget.childWidgets.length > 0) {\n            var widgetIndex = widget.childWidgets.indexOf(element.line);\n            if (widgetIndex === widget.childWidgets.length - 1) {\n                widget = paragraph;\n                // widget = paragraph.leafWidgets[paragraph.leafWidgets.length - 1];\n                widgetIndex = -1;\n            }\n            else if (widgetIndex > widget.childWidgets.length - 1) {\n                widget = this.getNextParagraphBlock(paragraph);\n                widgetIndex = -1;\n            }\n            else if (widgetIndex < 0) {\n                // widget = paragraph.leafWidgets[paragraph.leafWidgets.length - 1];\n                widget = paragraph;\n                widgetIndex = widget.childWidgets.indexOf(element.line);\n            }\n            lineWidget = widget.childWidgets[widgetIndex + 1];\n        }\n        return lineWidget;\n    };\n    Selection.prototype.getCaretHeight = function (inline, index, format, isEmptySelection, topMargin, isItalic) {\n        var elementBoxInfo = this.getElementBox(inline, index, false);\n        var element = elementBoxInfo.element;\n        var currentInline = inline;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element)) {\n            if (currentInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                return this.getFieldCharacterHeight(currentInline, format, isEmptySelection, topMargin, isItalic);\n            }\n            return { 'height': this.documentHelper.textHelper.getHeight(format).Height, 'topMargin': topMargin, 'isItalic': isItalic };\n        }\n        var margin = element.margin;\n        var heightElement = element.height;\n        var maxLineHeight = 0;\n        if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox) {\n            var previousInline = this.getPreviousTextElement(inline);\n            var nextInline = this.getNextTextElement(inline);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(previousInline) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextInline)) {\n                var top_2 = 0;\n                var bottom = 0;\n                var paragarph = inline.line.paragraph;\n                var sizeInfo = this.getParagraphMarkSize(paragarph, top_2, bottom);\n                top_2 = sizeInfo.topMargin;\n                bottom = sizeInfo.bottomMargin;\n                maxLineHeight = sizeInfo.height;\n                isItalic = paragarph.characterFormat.italic;\n                if (!isEmptySelection) {\n                    maxLineHeight += this.documentHelper.layout.getAfterSpacing(paragarph);\n                }\n            }\n            else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(previousInline)) {\n                isItalic = nextInline.characterFormat.italic;\n                return this.getCaretHeight(nextInline, 0, nextInline.characterFormat, isEmptySelection, topMargin, isItalic);\n            }\n            else {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextInline) && element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox) {\n                    //Calculates the caret size using image character format.\n                    var textSizeInfo = this.documentHelper.textHelper.getHeight(element.characterFormat);\n                    var charHeight = textSizeInfo.Height;\n                    var baselineOffset = textSizeInfo.BaselineOffset;\n                    maxLineHeight = (element.margin.top < 0 && baselineOffset > element.margin.top + element.height) ? element.margin.top + element.height + charHeight - baselineOffset : charHeight;\n                    if (!isEmptySelection) {\n                        maxLineHeight += element.margin.bottom;\n                    }\n                }\n                else {\n                    isItalic = previousInline.characterFormat.italic;\n                    return this.getCaretHeight(previousInline, previousInline.length, previousInline.characterFormat, isEmptySelection, topMargin, isItalic);\n                }\n            }\n        }\n        else {\n            var baselineAlignment = this.characterFormat.baselineAlignment;\n            var elementHeight = heightElement;\n            if (baselineAlignment !== 'Normal' && isEmptySelection) {\n                //Set the caret height as sub/super script text height and updates the top margin for sub script text.\n                elementHeight = elementHeight / 1.5;\n                if (baselineAlignment === 'Subscript') {\n                    topMargin = heightElement - elementHeight;\n                }\n            }\n            maxLineHeight = (margin.top < 0 ? margin.top : 0) + elementHeight;\n            if (!isEmptySelection) {\n                maxLineHeight += margin.bottom;\n            }\n        }\n        if (!isEmptySelection) {\n            return { 'height': maxLineHeight, 'topMargin': topMargin, 'isItalic': isItalic };\n        }\n        var height = this.documentHelper.textHelper.getHeight(format).Height;\n        if (height > maxLineHeight) {\n            height = maxLineHeight;\n        }\n        return { 'height': height, 'topMargin': topMargin, 'isItalic': isItalic };\n    };\n    Selection.prototype.getFieldCharacterHeight = function (startInline, format, isEmptySelection, topMargin, isItalic) {\n        var nextValidInline = this.documentHelper.getNextValidElementForField(startInline);\n        //If field separator/end exists at end of paragraph, then move to next paragraph.\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextValidInline)) {\n            var nextParagraph = startInline.line.paragraph;\n            var height = this.documentHelper.textHelper.getParagraphMarkSize(format).Height;\n            var top_3 = 0;\n            var bottom = 0;\n            var sizeInfo = this.getParagraphMarkSize(nextParagraph, top_3, bottom);\n            var maxLineHeight = sizeInfo.height;\n            top_3 = sizeInfo.topMargin;\n            bottom = sizeInfo.bottomMargin;\n            if (!isEmptySelection) {\n                maxLineHeight += bottom;\n                return { 'height': maxLineHeight, 'topMargin': topMargin, 'isItalic': isItalic };\n            }\n            if (height > maxLineHeight) {\n                height = maxLineHeight;\n            }\n            return { 'height': height, 'topMargin': topMargin, 'isItalic': isItalic };\n        }\n        else {\n            return this.getCaretHeight(nextValidInline, 0, format, isEmptySelection, topMargin, isItalic);\n        }\n    };\n    /**\n     * Get rendered inline\n     *\n     * @private\n     */\n    //FieldCharacter\n    Selection.prototype.getRenderedInline = function (inline, inlineIndex) {\n        if (this.documentHelper.isFormFillProtectedMode && inline.fieldType === 2) {\n            return { 'element': inline, 'index': inlineIndex };\n        }\n        var prevInline = this.getPreviousValidElement(inline);\n        while (prevInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n            prevInline = this.getPreviousTextElement(prevInline);\n            if (prevInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                prevInline = prevInline.previousNode;\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(prevInline)) {\n            inlineIndex = prevInline.length;\n            return { 'element': prevInline, 'index': inlineIndex };\n        }\n        inlineIndex = 0;\n        var nextInline = this.getNextRenderedElementBox(inline, 0);\n        if (nextInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && nextInline.fieldType === 0) {\n            nextInline = nextInline.fieldSeparator;\n            nextInline = nextInline.nextNode;\n            while (nextInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                if (nextInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && nextInline.fieldType === 0\n                    && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.isLinkedFieldCharacter(nextInline)) {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextInline.fieldSeparator)) {\n                        nextInline = nextInline.fieldEnd;\n                    }\n                    else {\n                        nextInline = nextInline.fieldSeparator;\n                    }\n                }\n                nextInline = nextInline.nextNode;\n            }\n        }\n        return { 'element': nextInline, 'index': inlineIndex };\n    };\n    //Field Begin\n    /**\n     * Get rendered field\n     *\n     * @private\n     */\n    Selection.prototype.getRenderedField = function (fieldBegin) {\n        var inline = fieldBegin;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(fieldBegin.fieldSeparator)) {\n            inline = fieldBegin.fieldEnd;\n        }\n        else {\n            inline = fieldBegin.fieldSeparator;\n            var paragraph = inline.line.paragraph;\n            if (paragraph === fieldBegin.fieldEnd.line.paragraph\n                && !this.hasValidInline(paragraph, inline, fieldBegin.fieldEnd)) {\n                inline = fieldBegin.fieldEnd;\n            }\n            else {\n                return inline;\n            }\n        }\n        return inline;\n    };\n    /**\n     * Return true is inline is tha last inline\n     *\n     * @private\n     */\n    Selection.prototype.isLastRenderedInline = function (inline, index) {\n        while (index === inline.length && inline.nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n            var nextValidInline = this.documentHelper.getNextValidElement(inline.nextNode);\n            index = 0;\n            if (nextValidInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && nextValidInline.fieldType === 0) {\n                inline = nextValidInline;\n            }\n            if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.fieldEnd)) {\n                var fieldBegin = inline;\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(fieldBegin.fieldSeparator)) {\n                    inline = fieldBegin.fieldEnd;\n                    index = 1;\n                }\n                else {\n                    inline = fieldBegin.fieldSeparator;\n                    var paragraph = inline.line.paragraph;\n                    index = 1;\n                    if (paragraph === fieldBegin.fieldEnd.line.paragraph\n                        && !this.hasValidInline(paragraph, inline, fieldBegin.fieldEnd)) {\n                        inline = fieldBegin.fieldEnd;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n        }\n        return index === inline.length && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.nextNode);\n    };\n    /**\n     * Get page\n     *\n     * @private\n     */\n    Selection.prototype.getPage = function (widget) {\n        var page = undefined;\n        if (widget.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextFrame) {\n            var shape = widget.containerWidget.containerShape;\n            if (shape.line) {\n                page = this.getPage(shape.line.paragraph);\n            }\n        }\n        else if (widget.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BlockContainer) {\n            var bodyWidget = widget.containerWidget;\n            page = widget.containerWidget.page;\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(widget.containerWidget)) {\n            page = this.getPage(widget.containerWidget);\n        }\n        return page;\n    };\n    /**\n     * Clear Selection highlight\n     *\n     * @private\n     */\n    Selection.prototype.clearSelectionHighlightInSelectedWidgets = function () {\n        var isNonEmptySelection = false;\n        var widgets = this.selectedWidgets.keys;\n        if (!this.viewer.documentHelper.isDragStarted) {\n            for (var i = 0; i < widgets.length; i++) {\n                this.removeSelectionHighlight(widgets[i]);\n                isNonEmptySelection = true;\n            }\n            this.selectedWidgets.clear();\n        }\n        return isNonEmptySelection;\n    };\n    /**\n     * Clear selection highlight\n     *\n     * @private\n     */\n    Selection.prototype.clearChildSelectionHighlight = function (widget) {\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            if (widget.childWidgets[i] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.LineWidget) {\n                this.clearSelectionHighlightLineWidget(widget.childWidgets[i]);\n            }\n            else if (widget.childWidgets[i] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n                this.clearSelectionHighlight(widget.childWidgets[i]);\n            }\n            else if (widget.childWidgets[i] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.Widget) {\n                this.clearChildSelectionHighlight(widget.childWidgets[i]);\n            }\n        }\n    };\n    /**\n     * Get line widget from paragraph widget\n     *\n     * @private\n     */\n    //Body Widget \n    Selection.prototype.getLineWidgetBodyWidget = function (widget, point, isGetFirstChild) {\n        isGetFirstChild = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(isGetFirstChild) ? true : isGetFirstChild;\n        var bodyWgt = widget;\n        if (bodyWgt instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BlockContainer) {\n            for (var x = 0; x < bodyWgt.floatingElements.length; x++) {\n                var floatWidget = bodyWgt.floatingElements[x];\n                if (floatWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n                    var floatWidgetWidth = floatWidget.getTableCellWidth();\n                    if (point.x <= floatWidget.x + floatWidgetWidth && point.x >= floatWidget.x\n                        && point.y <= floatWidget.y + floatWidget.height && point.y >= floatWidget.y) {\n                        return this.getLineWidgetTableWidget(floatWidget, point);\n                    }\n                }\n                else if (floatWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeBase && floatWidget.textWrappingStyle !== 'Behind' && floatWidget.x <= point.x && (floatWidget.x + floatWidget.width) >= point.x\n                    && floatWidget.y <= point.y && (floatWidget.y + floatWidget.height) >= point.y) {\n                    return floatWidget.line;\n                }\n            }\n        }\n        if (widget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget) {\n            var selectionBody = void 0;\n            var isFit = false;\n            for (var j = 0; j < widget.bodyWidgets.length; j++) {\n                if (widget.sectionFormat.columns.length <= 1) {\n                    for (var k = 0; k < widget.bodyWidgets[j].childWidgets.length; k++) {\n                        var footChild = widget.bodyWidgets[j].childWidgets[k];\n                        if (footChild instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.Widget && footChild.y <= point.y\n                            && (footChild.y + footChild.height) >= point.y) {\n                            if (footChild instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                                return this.getLineWidgetParaWidget(footChild, point);\n                            }\n                            else {\n                                return this.getLineWidgetTableWidget(footChild, point);\n                            }\n                        }\n                    }\n                }\n                else {\n                    var bodyWidget = widget.bodyWidgets[j];\n                    if (bodyWidget.firstChild.x + bodyWidget.sectionFormat.columns[bodyWidget.columnIndex].width >= point.x && bodyWidget.firstChild.x <= point.x && bodyWidget.firstChild.y <= point.y && this.documentHelper.layout.getNextWidgetHeight(bodyWidget) >= point.y) {\n                        selectionBody = bodyWidget;\n                    }\n                    else if (bodyWidget.firstChild.x + bodyWidget.sectionFormat.columns[bodyWidget.columnIndex].width < point.x && bodyWidget.firstChild.y <= point.y && this.documentHelper.layout.getNextWidgetHeight(bodyWidget) >= point.y) {\n                        selectionBody = bodyWidget;\n                    }\n                    else if (widget.x > point.x && bodyWidget.firstChild.y <= point.y && this.documentHelper.layout.getNextWidgetHeight(bodyWidget) >= point.y && !isFit) {\n                        selectionBody = bodyWidget;\n                        isFit = true;\n                    }\n                    if (j === widget.bodyWidgets.length - 1 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(selectionBody)) {\n                        for (var k = 0; k < selectionBody.childWidgets.length; k++) {\n                            var footChild = selectionBody.childWidgets[k];\n                            if (footChild instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.Widget && footChild.y <= point.y\n                                && (footChild.y + footChild.height) >= point.y) {\n                                if (footChild instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                                    return this.getLineWidgetParaWidget(footChild, point);\n                                }\n                                else {\n                                    return this.getLineWidgetTableWidget(footChild, point);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            var childWidget = widget.childWidgets[i];\n            if (childWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget) {\n                return childWidget[i];\n            }\n            else {\n                if (childWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.Widget && childWidget.y <= point.y\n                    && (childWidget.y + childWidget.height) >= point.y) {\n                    if (childWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                        // if ((childWidget as Widget).x <= point.x\n                        // && ((childWidget as Widget).x + (childWidget as Widget).width) >= point.x) {\n                        return this.getLineWidgetParaWidget(childWidget, point);\n                        // }// return this.getLineWidgetParaWidget((childWidget as ParagraphWidget), point);\n                    }\n                    else {\n                        var table = childWidget;\n                        if (table.wrapTextAround) {\n                            continue;\n                        }\n                        return this.getLineWidgetTableWidget(table, point);\n                    }\n                }\n            }\n        }\n        var line = undefined;\n        if (isGetFirstChild) {\n            if (widget.childWidgets.length > 0) {\n                var firstChild = widget.childWidgets[0];\n                if (firstChild instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.Widget && firstChild.y <= point.y) {\n                    if (widget.childWidgets[widget.childWidgets.length - 1] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                        for (var i = 0; i < widget.childWidgets.length; i++) {\n                            line = this.getLineWidgetParaWidget(widget.childWidgets[i], point);\n                        }\n                    }\n                    else {\n                        for (var i = 0; i < widget.childWidgets.length; i++) {\n                            line = this.getLineWidgetTableWidget(widget.childWidgets[i], point);\n                        }\n                    }\n                }\n                else {\n                    var childWidget = undefined;\n                    if (firstChild instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.Widget) {\n                        childWidget = firstChild;\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(childWidget)) {\n                        if (childWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                            line = this.getLineWidgetParaWidget(firstChild, point);\n                        }\n                        else {\n                            line = this.getLineWidgetTableWidget(firstChild, point);\n                        }\n                    }\n                }\n            }\n        }\n        return line;\n    };\n    //ParagraphWidget\n    /**\n     * Get line widget from paragraph widget\n     *\n     * @private\n     */\n    Selection.prototype.getLineWidgetParaWidget = function (widget, point) {\n        var childWidgets = widget.childWidgets;\n        var top = widget.y;\n        for (var i = 0; i < childWidgets.length; i++) {\n            var line = childWidgets[i];\n            top += line.marginTop;\n            var lineTotalHeight = line.height;\n            if (line.nextLine && line.nextLine.marginTop > 0) {\n                lineTotalHeight += line.nextLine.marginTop;\n            }\n            if (top <= point.y\n                && (top + lineTotalHeight) >= point.y) {\n                return line;\n            }\n            top += line.height;\n        }\n        var lineWidget = undefined;\n        if (childWidgets.length > 0) {\n            if (widget.y <= point.y) {\n                lineWidget = childWidgets[childWidgets.length - 1];\n            }\n            else {\n                lineWidget = childWidgets[0];\n            }\n        }\n        return lineWidget;\n    };\n    Selection.prototype.highlightParagraph = function (widget, startIndex, endLine, endElement, endIndex, contentControl) {\n        var top = 0;\n        var width = 0;\n        var isRtlText = false;\n        var startElement = endElement;\n        if (widget.paragraphFormat.bidi && endLine.children.indexOf(endElement) > 0) {\n            startElement = endLine.children[0];\n        }\n        for (var i = startIndex; i < widget.childWidgets.length; i++) {\n            var line = widget.childWidgets[i];\n            if (i === startIndex) {\n                top = this.getTop(line);\n            }\n            else {\n                top += line.marginTop;\n            }\n            if (endElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                isRtlText = endElement.isRightToLeft;\n            }\n            var left = this.getLeft(line);\n            if (line === endLine) {\n                //Selection ends in current line.\n                var right = 0;\n                // highlighting approach for normal and rtl text.\n                if (isRtlText || widget.bidi) {\n                    var elementBoxCollection = this.getElementsBackward(line, startElement, endElement, widget.bidi);\n                    for (var i_2 = 0; i_2 < elementBoxCollection.length; i_2++) {\n                        var element = elementBoxCollection[i_2];\n                        var elementIsRTL = false;\n                        if (element === endElement) {\n                            right = this.getLeftInternal(line, element, element.length);\n                        }\n                        else {\n                            var index = element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox ? element.length : 1;\n                            right = this.getLeftInternal(line, element, index);\n                        }\n                        left = this.getLeftInternal(line, element, 0);\n                        if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                            elementIsRTL = element.isRightToLeft;\n                        }\n                        width = Math.abs(right - left);\n                        // Handled the paragraph mark highliting as special case.\n                        if (element === endElement && element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox && endIndex > element.length) {\n                            var paragraphMarkWidth = this.documentHelper.textHelper.getParagraphMarkSize(element.line.paragraph.characterFormat).Width;\n                            if (!widget.bidi && elementIsRTL) {\n                                right += paragraphMarkWidth;\n                            }\n                            else if (widget.bidi && !elementIsRTL) { // Paragrph and Selection ends in normal text\n                                width -= paragraphMarkWidth;\n                                // Highlight the element.\n                                this.createHighlightBorder(line, width, left, top, true, contentControl);\n                                // Highlight the paragraph mark of Bidi paragrph.\n                                left = this.getLineStartLeft(line) - paragraphMarkWidth;\n                                this.createHighlightBorder(line, paragraphMarkWidth, left, top, true, contentControl);\n                                // continue to next element.\n                                continue;\n                            }\n                        }\n                        this.createHighlightBorder(line, width, elementIsRTL ? right : left, top, true, contentControl);\n                    }\n                    return;\n                }\n                else {\n                    right = this.getLeftInternal(endLine, endElement, endIndex, true);\n                    width = Math.abs(right - left);\n                    this.createHighlightBorder(line, width, isRtlText ? right : left, top, false, contentControl);\n                    return;\n                }\n            }\n            else {\n                width = this.getWidth(line, true) - (left - widget.x);\n                // Highlight the paragrph mark for Bidi paragrph.\n                if (widget.bidi && line.isLastLine()) {\n                    left -= this.documentHelper.textHelper.getParagraphMarkSize(widget.characterFormat).Width;\n                }\n                this.createHighlightBorder(line, width, left, top, false, contentControl);\n                top += line.height;\n            }\n        }\n    };\n    //Table Widget\n    /**\n     * Get line widget form table widget\n     *\n     * @private\n     */\n    Selection.prototype.getLineWidgetTableWidget = function (widget, point) {\n        var lineWidget = undefined;\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            //Removed the height condition check to handle the vertically merged cells.\n            var childWidget = widget.childWidgets[i];\n            if (childWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableRowWidget && childWidget.y <= point.y) {\n                if (childWidget.rowFormat.heightType === 'Exactly' &&\n                    (childWidget.y + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(childWidget.rowFormat.height) < point.y)) {\n                    continue;\n                }\n                lineWidget = this.getLineWidgetRowWidget(childWidget, point);\n                var cellWidget = undefined;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(lineWidget) && lineWidget.paragraph.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n                    cellWidget = lineWidget.paragraph.containerWidget;\n                }\n                var cellSpacing = 0;\n                var rowSpan = 0;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(cellWidget)) {\n                    var tableWidget = cellWidget.ownerRow.containerWidget;\n                    cellSpacing = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(tableWidget.tableFormat.cellSpacing);\n                    rowSpan = cellWidget.cellFormat.rowSpan;\n                }\n                var leftCellSpacing = 0;\n                var rightCellSpacing = 0;\n                var topCellSpacing = 0;\n                var bottomCellSpacing = 0;\n                if (cellSpacing > 0) {\n                    leftCellSpacing = cellWidget.cellIndex === 0 ? cellSpacing : cellSpacing / 2;\n                    rightCellSpacing = cellWidget.cellIndex === cellWidget.ownerRow.childWidgets.length - 1 ? cellSpacing : cellSpacing / 2;\n                    var rowWidget = undefined;\n                    if (cellWidget.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableRowWidget) {\n                        rowWidget = cellWidget.containerWidget;\n                    }\n                    var tableWidget = undefined;\n                    if (cellWidget.containerWidget.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n                        tableWidget = cellWidget.containerWidget.containerWidget;\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(rowWidget) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(tableWidget)) {\n                        topCellSpacing = cellWidget.ownerRow.rowIndex === 0 ? cellSpacing : cellSpacing / 2;\n                        if (cellWidget.ownerRow.rowIndex + rowSpan === cellWidget.ownerTable.childWidgets.length) {\n                            bottomCellSpacing = cellSpacing;\n                        }\n                        else {\n                            bottomCellSpacing = cellSpacing / 2;\n                        }\n                    }\n                }\n                if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(lineWidget) && lineWidget.paragraph.x <= point.x\n                    && lineWidget.paragraph.x + lineWidget.width >= point.x\n                    && lineWidget.paragraph.y <= point.y && this.getTop(lineWidget) + lineWidget.height >= point.y)\n                    || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(cellWidget) && cellWidget.x - cellWidget.margin.left - leftCellSpacing <= point.x\n                        && cellWidget.x + cellWidget.width + cellWidget.margin.right + rightCellSpacing >= point.x\n                        && cellWidget.y - cellWidget.margin.top - topCellSpacing <= point.y\n                        && cellWidget.y + cellWidget.height + cellWidget.margin.bottom + bottomCellSpacing >= point.y)) {\n                    break;\n                }\n            }\n        }\n        return lineWidget;\n    };\n    //TableRowWidget\n    /**\n     * Get line widget fom row\n     *\n     * @private\n     */\n    Selection.prototype.getLineWidgetRowWidget = function (widget, point) {\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            var cellSpacing = 0;\n            cellSpacing = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(widget.ownerTable.tableFormat.cellSpacing);\n            var leftCellSpacing = 0;\n            var rightCellSpacing = 0;\n            if (cellSpacing > 0) {\n                leftCellSpacing = widget.childWidgets[i].columnIndex === 0 ? cellSpacing : cellSpacing / 2;\n                rightCellSpacing = widget.childWidgets[i].cellIndex === widget.childWidgets[i].ownerRow.childWidgets.length - 1 ? cellSpacing : cellSpacing / 2;\n            }\n            if (widget.childWidgets[i].x -\n                widget.childWidgets[i].margin.left - leftCellSpacing <= point.x && (widget.childWidgets[i].x +\n                widget.childWidgets[i].width) + widget.childWidgets[i].margin.right + rightCellSpacing >= point.x) {\n                return this.getLineWidgetCellWidget(widget.childWidgets[i], point);\n            }\n        }\n        var lineWidget = undefined;\n        if (widget.childWidgets.length > 0) {\n            if (widget.childWidgets[0].x <= point.x) {\n                lineWidget = this.getLineWidgetCellWidget(widget.childWidgets[widget.childWidgets.length - 1], point);\n            }\n            else {\n                lineWidget = this.getLineWidgetCellWidget(widget.childWidgets[0], point);\n            }\n        }\n        return lineWidget;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getFirstBlock = function (cell) {\n        if (cell.childWidgets.length > 0) {\n            return cell.childWidgets[0];\n        }\n        return undefined;\n    };\n    //Table Cell Widget\n    /**\n     * Highlight selected cell widget\n     *\n     * @private\n     */\n    Selection.prototype.highlightCellWidget = function (widget) {\n        var widgets = [];\n        if (widget.previousSplitWidget || widget.nextSplitWidget) {\n            widgets = widget.getSplitWidgets();\n        }\n        else {\n            widgets.push(widget);\n        }\n        for (var i = 0; i < widgets.length; i++) {\n            widget = widgets[i];\n            //Clears Selection highlight of the child widgets.\n            this.clearChildSelectionHighlight(widget);\n            //Highlights the entire cell.\n            this.createHighlightBorderInsideTable(widget);\n        }\n    };\n    /**\n     * Clear selection highlight\n     *\n     * @private\n     */\n    Selection.prototype.clearSelectionHighlight = function (widget) {\n        if (this.selectedWidgets.containsKey(widget)) {\n            this.removeSelectionHighlight(widget);\n            this.selectedWidgets.remove(widget);\n        }\n    };\n    /**\n     * Get line widget from cell widget\n     *\n     * @private\n     */\n    Selection.prototype.getLineWidgetCellWidget = function (widget, point) {\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            if (widget.childWidgets[i].y <= point.y\n                && (widget.childWidgets[i].y + widget.childWidgets[i].height) >= point.y) {\n                if (widget.childWidgets[i] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                    return this.getLineWidgetParaWidget(widget.childWidgets[i], point);\n                }\n                else {\n                    return this.getLineWidgetTableWidget(widget.childWidgets[i], point);\n                }\n            }\n        }\n        var lineWidget = undefined;\n        if (widget.childWidgets.length > 0) {\n            if (widget.childWidgets[0].y - widget.margin.top <= point.y) {\n                if (widget.childWidgets[widget.childWidgets.length - 1] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                    lineWidget = this.getLineWidgetParaWidget(widget.childWidgets[widget.childWidgets.length - 1], point);\n                }\n                else {\n                    lineWidget = this.getLineWidgetTableWidget(widget.childWidgets[0], point);\n                }\n            }\n        }\n        return lineWidget;\n    };\n    //LineWidget\n    /**\n     * update text position\n     *\n     * @private\n     */\n    Selection.prototype.updateTextPosition = function (widget, point) {\n        var caretPosition = point;\n        var element = undefined;\n        var index = 0;\n        var isImageSelected = false;\n        if (this.owner.enableHeaderAndFooter) {\n            var headerFooterWidget = this.start.paragraph.bodyWidget;\n            if (headerFooterWidget.headerFooterType.indexOf('Header') != -1) {\n                this.comparePageWidthAndMargins(headerFooterWidget.page.headerWidget, headerFooterWidget.page);\n            }\n            else {\n                this.comparePageWidthAndMargins(headerFooterWidget.page.footerWidget, headerFooterWidget.page);\n            }\n        }\n        var isImageSelectedObj = this.updateTextPositionIn(widget, element, index, point, false);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(isImageSelectedObj)) {\n            element = isImageSelectedObj.element;\n            index = isImageSelectedObj.index;\n            caretPosition = isImageSelectedObj.caretPosition;\n            isImageSelected = isImageSelectedObj.isImageSelected;\n            this.isImageSelected = isImageSelected;\n        }\n        if (isImageSelected) {\n            this.selectInternal(widget, element, index, caretPosition);\n            if (index === 0) {\n                this.extendForward();\n            }\n            else {\n                this.extendBackward();\n            }\n        }\n        else {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.imageResizerModule)) {\n                this.owner.imageResizerModule.selectedImageWidget.clear();\n            }\n            this.selectInternal(widget, element, index, caretPosition);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.updateTextPositionIn = function (widget, inline, index, caretPosition, includeParagraphMark) {\n        var isImageSelected = false;\n        var top = this.getTop(widget);\n        var left = widget.paragraph.x;\n        var elementValues = this.getFirstElement(widget, left);\n        var element = elementValues.element;\n        var isRtlText = false;\n        var isParaBidi = false;\n        left = elementValues.left;\n        var children = widget.renderedElements;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element)) {\n            var topMargin = 0;\n            var bottomMargin = 0;\n            var size = this.getParagraphMarkSize(widget.paragraph, topMargin, bottomMargin);\n            topMargin = size.topMargin;\n            bottomMargin = size.bottomMargin;\n            var selectParaMark = this.documentHelper.mouseDownOffset.y >= top && this.documentHelper.mouseDownOffset.y < top + widget.height ? (this.documentHelper.mouseDownOffset.x < left + size.width) : true;\n            if (selectParaMark && includeParagraphMark && caretPosition.x > left + size.width / 2) {\n                left += size.width;\n                if (children.length > 0) {\n                    inline = children[children.length - 1];\n                    index = inline.length;\n                }\n                index++;\n            }\n            else if (widget.paragraph.isEmpty() && widget.paragraph.bidi) {\n                left += size.width;\n            }\n            caretPosition = new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.Point(left, topMargin > 0 ? top + topMargin : top);\n        }\n        else {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element)) {\n                if (caretPosition.x > left + element.margin.left || (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeBase && element.textWrappingStyle !== 'Inline')) {\n                    var isInInline = false;\n                    if (widget.paragraph.floatingElements.length > 0) {\n                        isInInline = this.documentHelper.checkPointIsInLine(widget, caretPosition);\n                    }\n                    for (var i = children.indexOf(element); i < children.length; i++) {\n                        element = children[i];\n                        if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeBase && element.textWrappingStyle !== 'Inline') {\n                            if (this.documentHelper.isInShapeBorder(element, caretPosition) &&\n                                !this.documentHelper.isSelectionChangedOnMouseMoved && !isInInline) {\n                                left = element.x;\n                                top = element.y;\n                                break;\n                            }\n                            continue;\n                        }\n                        var isCurrentParaBidi = false;\n                        if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox || element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                            isCurrentParaBidi = element.line.paragraph.paragraphFormat.bidi;\n                        }\n                        if (caretPosition.x < left + element.margin.left + element.width + element.padding.left || i === children.length - 1\n                            || ((children[i + 1] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) && isCurrentParaBidi)) {\n                            break;\n                        }\n                        left += element.margin.left + element.width + element.padding.left;\n                    }\n                    if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                        isRtlText = element.isRightToLeft;\n                        isParaBidi = element.line.paragraph.paragraphFormat.bidi;\n                    }\n                    if (caretPosition.x > left + element.margin.left + element.width + element.padding.left && !(element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox)) {\n                        //Line End\n                        index = element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox ? element.length : 1;\n                        if (isRtlText && isParaBidi) {\n                            index = 0;\n                        }\n                        if ((element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox && (element.text !== \"\\v\" && element.text !== '\\f' && element.text !== String.fromCharCode(14))) || includeParagraphMark) {\n                            left += element.margin.left + element.width + element.padding.left;\n                        }\n                    }\n                    else if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                        if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox && isRtlText) {\n                            left += element.width + element.padding.left;\n                        }\n                        var x = 0;\n                        if (isRtlText) {\n                            x = (left + element.margin.left) - caretPosition.x;\n                        }\n                        else {\n                            x = caretPosition.x - left - element.margin.left - element.padding.left;\n                        }\n                        left += (element.margin.left + element.padding.left);\n                        var prevWidth = 0;\n                        var charIndex = 0;\n                        for (var i = 1; i <= element.length; i++) {\n                            var width = 0;\n                            if (i === element.length) {\n                                width = element.width + element.padding.left;\n                            }\n                            else {\n                                width = this.documentHelper.textHelper.getWidth(element.text.substr(0, i), element.characterFormat, element.scriptType);\n                            }\n                            if (x < width || i === element.length) {\n                                //Updates exact left position of the caret.\n                                var charWidth = width - prevWidth;\n                                if (x - prevWidth > charWidth / 2) {\n                                    if (isRtlText) {\n                                        left -= width;\n                                    }\n                                    else {\n                                        left += width;\n                                    }\n                                    charIndex = i;\n                                }\n                                else {\n                                    if (isRtlText) {\n                                        left -= prevWidth;\n                                    }\n                                    else {\n                                        left += prevWidth;\n                                    }\n                                    charIndex = i - 1;\n                                    if (i === 1 && element !== children[0] && !(children[0] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeBase &&\n                                        children[0].textWrappingStyle !== 'Inline')) {\n                                        var curIndex = children.indexOf(element);\n                                        if (!(children[curIndex - 1] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) && !isRtlText) {\n                                            element = children[curIndex - 1];\n                                            if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeBase && element.textWrappingStyle !== 'Inline' && charIndex == 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element.previousElement)) {\n                                                element = children[children.indexOf(element) - 1];\n                                            }\n                                            charIndex = element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox ? element.length : 1;\n                                        }\n                                    }\n                                }\n                                break;\n                            }\n                            prevWidth = width;\n                        }\n                        index = charIndex;\n                    }\n                    else {\n                        isImageSelected = element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox || element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox;\n                        if (caretPosition.x - left - element.margin.left > element.width / 2) {\n                            index = 1;\n                            left += (element.margin.left + element.width + element.padding.left);\n                        }\n                        else if (element !== children[0] && !isImageSelected) {\n                            var curIndex = children.indexOf(element);\n                            if (!(children[curIndex - 1] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox)) {\n                                element = children[curIndex - 1];\n                                index = element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox ? element.length : 1;\n                            }\n                        }\n                    }\n                    if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox && (element.text === '\\v' || element.text === '\\f' || element.text === String.fromCharCode(14))) {\n                        index = 0;\n                    }\n                }\n                else {\n                    isRtlText = element.isRightToLeft;\n                    isParaBidi = element.line.paragraph.paragraphFormat.bidi;\n                    if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox && (isParaBidi || isRtlText) && caretPosition.x < left + element.margin.left + element.width + element.padding.left) {\n                        index = this.getTextLength(element.line, element) + element.length;\n                    }\n                    else {\n                        index = this.getTextLength(element.line, element);\n                    }\n                    left += element.margin.left;\n                }\n                if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                    top += element.margin.top > 0 ? element.margin.top : 0;\n                }\n                else {\n                    var textMetrics = this.documentHelper.textHelper.getHeight(element.characterFormat); //for ascent and descent\n                    var height = element.height;\n                    if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox && !this.documentHelper.layout.hasValidElement(element.line.paragraph)) {\n                        height = textMetrics.Height; //after text helper class\n                    }\n                    top += element.margin.top + height - textMetrics.BaselineOffset;\n                }\n                inline = element;\n                if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 2 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.fieldBegin)) {\n                    inline = inline.fieldBegin;\n                    index = 0;\n                }\n                if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.EditRangeEndElementBox) {\n                    index = 0;\n                }\n                if (this.isMoveDownOrMoveUp && element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ContentControl) {\n                    index = element.type === 0 ? (index + 1) : (index - 1);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.previousElement) && inline.previousElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeBase && inline.previousElement.textWrappingStyle !== 'Inline' && index == 0) {\n                    inline = inline.previousElement;\n                }\n                var inlineObj = this.validateTextPosition(inline, index);\n                inline = inlineObj.element;\n                index = inlineObj.index;\n                var isParagraphEnd = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.nextNode) && index === inline.length;\n                var isLineEnd = inline.line.isEndsWithLineBreak\n                    && inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox && inline.text === '\\v';\n                if (includeParagraphMark && inline.nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && index === inline.length) {\n                    isParagraphEnd = this.isLastRenderedInline(inline, index);\n                }\n                if (includeParagraphMark && isParagraphEnd || isLineEnd) {\n                    var width = 0;\n                    //Include width of Paragraph mark.\n                    if (isParagraphEnd) {\n                        width = this.documentHelper.textHelper.getParagraphMarkWidth(widget.paragraph.characterFormat);\n                        var selectParaMark = this.documentHelper.mouseDownOffset.y >= top && this.documentHelper.mouseDownOffset.y < top + widget.height ? (this.documentHelper.mouseDownOffset.x < left + width) : true;\n                        if (selectParaMark && caretPosition.x > left + width / 2) {\n                            left += width;\n                            index = inline.length + 1;\n                        }\n                        //Include width of line break mark.\n                    }\n                    else if (isLineEnd) {\n                        width = element.width + element.padding.left;\n                        left += width;\n                        // index = inline.length;\n                    }\n                }\n                caretPosition = new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.Point(left, top);\n            }\n        }\n        return {\n            'element': inline,\n            'index': index,\n            'caretPosition': caretPosition,\n            'isImageSelected': isImageSelected\n        };\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.checkAllFloatingElements = function (widget, caretPosition) {\n        var bodyWidget;\n        var isShapeSelected = false;\n        var isInShapeBorder = false;\n        var floatElement;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(widget)) {\n            bodyWidget = widget.paragraph.bodyWidget;\n            isShapeSelected = false;\n            isInShapeBorder = false;\n            for (var i = 0; i < bodyWidget.floatingElements.length; i++) {\n                if (bodyWidget.floatingElements[i] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n                    continue;\n                }\n                floatElement = bodyWidget.floatingElements[i];\n                if (caretPosition.x < floatElement.x + floatElement.margin.left + floatElement.width && caretPosition.x > floatElement.x\n                    && caretPosition.y < floatElement.y + floatElement.margin.top + floatElement.height && caretPosition.y > floatElement.y) {\n                    isShapeSelected = true;\n                    if (this.documentHelper.isInShapeBorder(floatElement, caretPosition)) {\n                        isInShapeBorder = true;\n                    }\n                    break;\n                }\n            }\n        }\n        return {\n            'element': floatElement,\n            'caretPosition': caretPosition,\n            'isShapeSelected': isShapeSelected,\n            'isInShapeBorder': isInShapeBorder\n        };\n    };\n    /**\n     * Get text length if the line widget\n     *\n     * @private\n     */\n    Selection.prototype.getTextLength = function (widget, element) {\n        var length = 0;\n        var renderedElement = widget.renderedElements;\n        var count = renderedElement.indexOf(element);\n        if (renderedElement.length > 0 && renderedElement[0] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n            if (renderedElement[1] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                count -= 2;\n            }\n            else {\n                count -= 1;\n            }\n        }\n        for (var i = 1; i < count; i++) {\n            length += renderedElement[i].length;\n        }\n        return length;\n    };\n    /**\n     * Get Line widget left\n     *\n     * @private\n     */\n    Selection.prototype.getLeft = function (widget) {\n        var left = widget.paragraph.x;\n        var paragraphFormat = widget.paragraph.paragraphFormat;\n        if (this.isParagraphFirstLine(widget) && !paragraphFormat.bidi && !(paragraphFormat.textAlignment === 'Right')) {\n            left += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(paragraphFormat.firstLineIndent);\n        }\n        var renderedElements = widget.renderedElements;\n        for (var i = 0; i < renderedElements.length; i++) {\n            var element = renderedElements[i];\n            if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox && !paragraphFormat.bidi) { //after list implementation\n                if (i === 0) {\n                    left += element.margin.left + element.width;\n                    if (element.padding) {\n                        left += element.padding.left;\n                    }\n                }\n                else {\n                    left += element.width;\n                }\n            }\n            else {\n                left += element.margin.left;\n                break;\n            }\n        }\n        return left;\n    };\n    /**\n     * Get line widget top\n     *\n     * @private\n     */\n    Selection.prototype.getTop = function (widget) {\n        var top = widget.paragraph.y;\n        var count = widget.paragraph.childWidgets.indexOf(widget);\n        for (var i = 0; i < count; i++) {\n            var line = widget.paragraph.childWidgets[i];\n            top = (top + line.height + line.marginTop);\n        }\n        top += widget.marginTop;\n        return top;\n    };\n    /**\n     * Get first element the widget\n     *\n     * @private\n     */\n    Selection.prototype.getFirstElement = function (widget, left) {\n        var firstLineIndent = 0;\n        if (this.isParagraphFirstLine(widget) && !widget.paragraph.paragraphFormat.bidi) {\n            firstLineIndent = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(widget.paragraph.paragraphFormat.firstLineIndent);\n        }\n        left += firstLineIndent;\n        var element = undefined;\n        var renderedChild = widget.renderedElements;\n        for (var i = 0; i < renderedChild.length; i++) {\n            element = renderedChild[i];\n            if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                if (widget.paragraph.paragraphFormat.bidi) {\n                    left += element.margin.left;\n                    element = undefined;\n                }\n                else {\n                    left += element.margin.left + element.width + element.padding.left;\n                    element = undefined;\n                }\n                // }\n                //  else if (element instanceof FieldElementBox || element instanceof BookmarkElementBox\n                //     || (element.nextNode instanceof FieldElementBox && ((element.nextNode as FieldElementBox).fieldType === 2))) {\n                //     element = undefined;\n            }\n            else {\n                break;\n            }\n        }\n        return { 'element': element, 'left': left };\n    };\n    /**\n     * Return inline index\n     *\n     * @private\n     */\n    //ElementBox\n    Selection.prototype.getIndexInInline = function (elementBox) {\n        var indexInInline = 0;\n        if (elementBox instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n            var count = elementBox.line.children.indexOf(elementBox);\n            for (var i = 0; i < count; i++) {\n                var element = elementBox.line.children[i];\n                if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox || element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                    continue;\n                }\n                indexInInline += element.length;\n            }\n        }\n        return indexInInline;\n    };\n    /**\n     * Return true if widget is first inline of paragraph\n     *\n     * @private\n     */\n    Selection.prototype.isParagraphFirstLine = function (widget) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(widget.paragraph.previousSplitWidget) &&\n            widget === widget.paragraph.firstChild) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param widget\n     * @private\n     */\n    Selection.prototype.isParagraphLastLine = function (widget) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(widget.paragraph.nextSplitWidget)\n            && widget === widget.paragraph.lastChild) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Return line widget width\n     *\n     * @private\n     */\n    Selection.prototype.getWidth = function (widget, includeParagraphMark) {\n        var width = 0;\n        var paraFormat = widget.paragraph.paragraphFormat;\n        if (this.isParagraphFirstLine(widget) && !paraFormat.bidi) {\n            width += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(paraFormat.firstLineIndent);\n        }\n        for (var i = 0; i < widget.children.length; i++) {\n            var elementBox = widget.children[i];\n            if (elementBox instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeBase && elementBox.textWrappingStyle !== 'Inline') {\n                continue;\n            }\n            width += (elementBox.margin.left + elementBox.width + elementBox.padding.left);\n        }\n        if (includeParagraphMark && widget.paragraph.childWidgets.indexOf(widget) === widget.paragraph.childWidgets.length - 1\n            && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(widget.paragraph.nextSplitWidget)) {\n            width += this.documentHelper.textHelper.getParagraphMarkWidth(widget.paragraph.characterFormat);\n        }\n        return width;\n    };\n    /**\n     * Return line widget left\n     *\n     * @private\n     */\n    Selection.prototype.getLeftInternal = function (widget, elementBox, index, skipPadding) {\n        var left = widget.paragraph.x;\n        var paraFormat = widget.paragraph.paragraphFormat;\n        if (this.isParagraphFirstLine(widget) && !paraFormat.bidi) {\n            left += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(widget.paragraph.paragraphFormat.firstLineIndent);\n        }\n        var renderedWidget = widget.renderedElements;\n        var count = renderedWidget.indexOf(elementBox);\n        if ((renderedWidget.length === 1 && renderedWidget[0] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) || (renderedWidget.length === 2\n            && renderedWidget[0] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox && renderedWidget[1] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox)) {\n            count = renderedWidget.length;\n        }\n        var isFieldCode = false;\n        for (var i = 0; i < count; i++) {\n            var widgetInternal = renderedWidget[i];\n            if (widgetInternal instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && widgetInternal.fieldType === 2) {\n                isFieldCode = false;\n            }\n            if (isFieldCode) {\n                continue;\n            }\n            if (widgetInternal instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeBase && widgetInternal.textWrappingStyle !== 'Inline') {\n                continue;\n            }\n            if (i === 1 && widgetInternal instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                left += widgetInternal.width;\n                if (widgetInternal.padding && widgetInternal.padding.left) {\n                    left += widgetInternal.padding.left;\n                }\n            }\n            else if (widgetInternal instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TabElementBox && elementBox === widgetInternal) {\n                left += widgetInternal.margin.left;\n            }\n            else {\n                left += widgetInternal.margin.left + widgetInternal.width + widgetInternal.padding.left;\n            }\n            if (widgetInternal instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && widgetInternal.fieldType === 0) {\n                isFieldCode = true;\n            }\n        }\n        var isRtlText = false;\n        var isParaBidi = widget.paragraph.bidi;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(elementBox)) {\n            isRtlText = elementBox.characterRange === _base_index__WEBPACK_IMPORTED_MODULE_6__.CharacterRangeType.RightToLeft;\n            isParaBidi = elementBox.line.paragraph.paragraphFormat.bidi;\n            left = (index === 0 && skipPadding) ? left + elementBox.margin.left : left + elementBox.margin.left + elementBox.padding.left;\n            if (elementBox instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeBase && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(elementBox.nextElement)) {\n                left += (elementBox.nextElement.margin.left + elementBox.nextElement.padding.left);\n            }\n            if (isRtlText || (this.documentHelper.moveCaretPosition === 1 && !isRtlText && isParaBidi)) {\n                left += elementBox.width;\n            }\n        }\n        var width = 0;\n        if (elementBox instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n            if ((this.documentHelper.moveCaretPosition !== 0) && (isParaBidi || isRtlText)) {\n                if ((isRtlText && isParaBidi && this.documentHelper.moveCaretPosition === 2)\n                    || (isRtlText && !isParaBidi && this.documentHelper.moveCaretPosition === 1)) {\n                    left -= elementBox.width;\n                }\n                this.documentHelper.moveCaretPosition = 0;\n                return left;\n            }\n            if (index === elementBox.length && !isRtlText) {\n                left += elementBox.width;\n            }\n            else if (index > elementBox.length) {\n                width = this.documentHelper.textHelper.getParagraphMarkWidth(elementBox.line.paragraph.characterFormat);\n                if (isRtlText) {\n                    left -= elementBox.width + width;\n                }\n                else {\n                    left += elementBox.width + width;\n                }\n            }\n            else {\n                if (index === elementBox.length && isRtlText && paraFormat.textAlignment === 'Justify') {\n                    width = elementBox.width;\n                }\n                else {\n                    width = this.documentHelper.textHelper.getWidth(elementBox.text.substr(0, index), elementBox.characterFormat, elementBox.scriptType);\n                }\n                if (isRtlText) {\n                    left -= width;\n                }\n                else {\n                    left += width;\n                }\n            }\n            this.documentHelper.moveCaretPosition = 0;\n        }\n        else if (index > 0) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(elementBox) && !(elementBox instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox)) {\n                if (!(elementBox instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeBase && elementBox.textWrappingStyle !== 'Inline')) {\n                    left += elementBox.width;\n                }\n                if (index === 2) {\n                    var paragraph = elementBox.line.paragraph;\n                    left += this.documentHelper.textHelper.getParagraphMarkWidth(paragraph.characterFormat);\n                }\n            }\n            else {\n                left += this.documentHelper.textHelper.getParagraphMarkWidth(widget.paragraph.characterFormat);\n            }\n        }\n        return left;\n    };\n    /**\n     * Return line widget start offset\n     * @private\n     */\n    Selection.prototype.getLineStartLeft = function (widget) {\n        var left = widget.paragraph.x;\n        var paragraphFormat = widget.paragraph.paragraphFormat;\n        if (this.isParagraphFirstLine(widget) && !paragraphFormat.bidi) {\n            left += _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(paragraphFormat.firstLineIndent);\n        }\n        if (widget.children.length > 0) {\n            left += widget.children[0].margin.left;\n        }\n        return left;\n    };\n    /**\n     * Update text position\n     * @private\n     */\n    Selection.prototype.updateTextPositionWidget = function (widget, point, textPosition, includeParagraphMark) {\n        var caretPosition = point;\n        var inline = undefined;\n        var index = 0;\n        var updatePositionObj;\n        updatePositionObj = this.updateTextPositionIn(widget, inline, index, caretPosition, includeParagraphMark);\n        inline = updatePositionObj.element;\n        index = updatePositionObj.index;\n        caretPosition = updatePositionObj.caretPosition;\n        textPosition.setPositionForSelection(widget, inline, index, caretPosition);\n    };\n    /**\n     * Clear selection highlight\n     * @private\n     */\n    Selection.prototype.clearSelectionHighlightLineWidget = function (widget) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner) && this.selectedWidgets.length > 0) {\n            this.clearSelectionHighlight(this);\n        }\n    };\n    /**\n     * Return first element from line widget\n     * @private\n     */\n    Selection.prototype.getFirstElementInternal = function (widget) {\n        var element = undefined;\n        var childLen = widget.children.length;\n        for (var i = 0; i < childLen; i++) {\n            element = widget.children[i];\n            if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                element = undefined;\n            }\n            else {\n                break;\n            }\n        }\n        return element;\n    };\n    //Selection API.   \n    /**\n     * Select content between given range\n     * @private\n     */\n    Selection.prototype.selectRange = function (startPosition, endPosition, isBookmark) {\n        this.start.setPositionInternal(startPosition);\n        this.end.setPositionInternal(endPosition);\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true, true, isBookmark);\n    };\n    /**\n     * Selects current paragraph\n     * @private\n     */\n    Selection.prototype.selectParagraphInternal = function (paragraph, positionAtStart) {\n        var line;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(paragraph) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(paragraph.firstChild)) {\n            line = paragraph.firstChild;\n            if (positionAtStart) {\n                this.start.setPosition(line, positionAtStart);\n            }\n            else {\n                var endOffset = line.getEndOffset();\n                this.start.setPositionParagraph(line, endOffset);\n            }\n        }\n        this.end.setPositionInternal(this.start);\n        this.upDownSelectionLength = this.start.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.setPositionForBlock = function (block, selectFirstBlock) {\n        var position;\n        if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n            if (selectFirstBlock) {\n                block = this.documentHelper.getFirstParagraphInFirstCell(block);\n            }\n            else {\n                block = this.documentHelper.getLastParagraphInLastCell(block);\n            }\n        }\n        if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            position = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            if (selectFirstBlock) {\n                position.setPosition(block.firstChild, true);\n            }\n            else {\n                var line = block.lastChild;\n                position.setPositionParagraph(line, line.getEndOffset());\n            }\n        }\n        return position;\n    };\n    /**\n     * Select content in given text position\n     * @private\n     */\n    Selection.prototype.selectContent = function (textPosition, clearMultiSelection) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(textPosition)) {\n            throw new Error('textPosition is undefined.');\n        }\n        this.start.setPositionInternal(textPosition);\n        this.end.setPositionInternal(textPosition);\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Select paragraph\n     * @private\n     */\n    Selection.prototype.selectInternal = function (lineWidget, element, index, physicalLocation) {\n        this.start.setPositionForSelection(lineWidget, element, index, physicalLocation);\n        this.end.setPositionInternal(this.start);\n        this.upDownSelectionLength = physicalLocation.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.selects = function (lineWidget, offset, skipSelectionChange) {\n        this.documentHelper.clearSelectionHighlight();\n        this.start.setPositionForLineWidget(lineWidget, offset);\n        this.end.setPositionInternal(this.start);\n        if (!skipSelectionChange) {\n            this.fireSelectionChanged(true);\n        }\n    };\n    /**\n     * Select content between start and end position\n     * @private\n     */\n    Selection.prototype.selectPosition = function (startPosition, endPosition) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startPosition) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(endPosition)) {\n            throw new Error('TextPosition cannot be undefined');\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startPosition.paragraph)\n            || startPosition.offset > this.getParagraphLength(startPosition.paragraph) + 1) {\n            throw new Error('Start TextPosition is not valid.');\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(endPosition.paragraph)\n            || endPosition.offset > this.getParagraphLength(endPosition.paragraph) + 1) {\n            throw new Error('End TextPosition is not valid.');\n        }\n        if (startPosition.isAtSamePosition(endPosition)) {\n            // Select start position.\n            this.selectRange(startPosition, startPosition);\n        }\n        else {\n            // If both text position exists within same comment or outside comment, and not at same position.\n            if (startPosition.isExistBefore(endPosition)) {\n                endPosition.validateForwardFieldSelection(startPosition.getHierarchicalIndexInternal(), endPosition.getHierarchicalIndexInternal());\n            }\n            else {\n                startPosition.validateForwardFieldSelection(endPosition.getHierarchicalIndexInternal(), startPosition.getHierarchicalIndexInternal());\n            }\n            this.selectRange(startPosition, endPosition);\n        }\n    };\n    /**\n     * Notify selection change event\n     * @private\n     */\n    Selection.prototype.fireSelectionChanged = function (isSelectionChanged, isKeyBoardNavigation, isBookmark) {\n        if (!this.isSelectBookmark) {\n            this.isExcludeBookmarkStartEnd = false;\n        }\n        if (!this.isEmpty) {\n            if (this.isForward) {\n                this.start.updatePhysicalPosition(true);\n                this.end.updatePhysicalPosition(false);\n            }\n            else {\n                this.start.updatePhysicalPosition(false);\n                this.end.updatePhysicalPosition(true);\n            }\n        }\n        if (this.isModifyingSelectionInternally) {\n            return;\n        }\n        if (this.documentHelper.formFields.length > 0 && !this.owner.editor.isRemoteAction) {\n            this.currentFormField = this.getCurrentFormField();\n        }\n        else {\n            this.currentFormField = undefined;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.previousSelectedFormField) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.previousSelectedFormField.fieldSeparator)) {\n            this.previousSelectedFormField = this.currentFormField;\n        }\n        if (isSelectionChanged) {\n            this.previousSelectedContentControl = this.currentContentControl;\n        }\n        if (this.documentHelper.contentControlCollection.length > 0) {\n            this.currentContentControl = this.owner.editor.getContentControl();\n        }\n        else {\n            this.currentContentControl = undefined;\n        }\n        if (!this.skipFormatRetrieval && !(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.optionsPaneModule) && this.owner.optionsPaneModule.isBuildHeading)) {\n            this.retrieveCurrentFormatProperties();\n        }\n        this.updateContentControlHighlightSelection();\n        this.documentHelper.clearSelectionHighlight();\n        this.hideToolTip();\n        if (this.owner.isLayoutEnabled && !this.owner.isShiftingEnabled) {\n            this.highlightSelection(true, isBookmark);\n        }\n        if (this.documentHelper.restrictEditingPane.isShowRestrictPane && !this.skipEditRangeRetrieval) {\n            this.documentHelper.restrictEditingPane.updateUserInformation();\n        }\n        if (isSelectionChanged) {\n            if (this.start.paragraph.isInHeaderFooter && !this.owner.enableHeaderAndFooter) {\n                this.owner.enableHeaderAndFooter = true;\n            }\n            else if (!this.start.paragraph.isInHeaderFooter && this.owner.enableHeaderAndFooter) {\n                this.owner.enableHeaderAndFooter = false;\n            }\n            this.owner.fireSelectionChange();\n        }\n        this.triggerSpellCheckWhenSelectionChanges();\n        if (this.owner.enableAutoFocus) {\n            this.documentHelper.updateFocus();\n        }\n        if (this.documentHelper.isFormFillProtectedMode && isSelectionChanged) {\n            this.triggerFormFillEvent(isKeyBoardNavigation);\n            this.previousSelectedFormField = this.currentFormField;\n        }\n        if (this.owner.rulerHelper && this.owner.documentEditorSettings && this.owner.documentEditorSettings.showRuler &&\n            !this.owner.isReadOnlyMode) {\n            this.owner.rulerHelper.updateRuler(this.owner, false);\n        }\n    };\n    /**\n     * Notify selection change event\n     * @private\n     */\n    Selection.prototype.updateContentControlHighlightSelection = function () {\n        this.contentControleditRegionHighlighters.clear();\n        if (!this.isHighlightContentControlEditRegion) {\n            return;\n        }\n        if (this.documentHelper.contentControlCollection.length > 0 && !(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.optionsPaneModule) && this.owner.optionsPaneModule.isBuildHeading)) {\n            this.contentControls = this.owner.editor.getContentControls();\n        }\n        else {\n            this.contentControls = [];\n        }\n        if (this.contentControls && this.contentControls.length > 0) {\n            for (var i = 0; i < this.contentControls.length; i++) {\n                this.highlightContentControlEditRegionInternal(this.contentControls[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    //Formats Retrieval\n    /**\n     * Retrieve all current selection format\n     * @private\n     */\n    Selection.prototype.retrieveCurrentFormatProperties = function () {\n        this.isRetrieveFormatting = true;\n        var startPosition = this.start;\n        var endPosition = this.end;\n        if (!this.isForward) {\n            startPosition = this.end;\n            endPosition = this.start;\n        }\n        this.retrieveImageFormat(startPosition, endPosition);\n        this.retrieveCharacterFormat(startPosition, endPosition);\n        this.retrieveParagraphFormat(startPosition, endPosition);\n        this.retrieveSectionFormat(startPosition, endPosition);\n        this.retrieveTableFormat(startPosition, endPosition);\n        this.isRetrieveFormatting = false;\n        this.setCurrentContextType();\n    };\n    Selection.prototype.triggerSpellCheckWhenSelectionChanges = function () {\n        if (this.documentHelper.isSpellCheckPending && this.documentHelper.owner.isSpellCheck && !this.documentHelper.isTextInput) {\n            this.documentHelper.triggerElementsOnLoading = true;\n            this.documentHelper.triggerSpellCheck = true;\n            this.viewer.updateScrollBars();\n            this.documentHelper.isSpellCheckPending = false;\n            this.documentHelper.triggerElementsOnLoading = false;\n            this.documentHelper.triggerSpellCheck = false;\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.retrieveImageFormat = function (start, end) {\n        var image;\n        if (start.currentWidget === end.currentWidget && start.offset + 1 === end.offset) {\n            var elementInfo = end.currentWidget.getInline(end.offset, 0);\n            image = elementInfo.element;\n            var index = elementInfo.index;\n            if (image instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox) {\n                var startOffset = start.currentWidget.getOffset(image, 0);\n                if (startOffset !== start.offset) {\n                    image = undefined;\n                }\n            }\n        }\n        if (image instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox) {\n            this.imageFormat.copyImageFormat(image);\n        }\n        else {\n            this.imageFormat.clearImageFormat();\n        }\n    };\n    /**\n     * Gets the context type of previous character or element.\n     * @param isElement - Decides whether to get previous context type from element or character. By default, character.\n     * @returns Returns the context type of previous character or element.\n     */\n    Selection.prototype.getPreviousContextType = function (isElement) {\n        var contextType;\n        var start = this.start;\n        if (start.offset > 0) {\n            var element = start.currentWidget.getInline(start.offset, 0).element;\n            if (isElement) {\n                element = element.previousElement;\n            }\n            else {\n                element = start.currentWidget.getInline(start.offset - 1, 0).element;\n            }\n            contextType = this.getContextElement(element);\n            return contextType;\n        }\n        return undefined;\n    };\n    /**\n     * Gets the context type of next character or element.\n     * @param isElement - Decides whether to get next context type from element or character. By default, character.\n     * @return Returns the context type of next character or element.\n     */\n    Selection.prototype.getNextContextType = function (isElement) {\n        var contextType;\n        var start = this.start;\n        var element = start.currentWidget.getInline(start.offset, 0).element;\n        if (isElement && element.nextElement) {\n            element = element.nextElement;\n        }\n        else {\n            element = start.currentWidget.getInline(start.offset + 1, 0).element;\n        }\n        contextType = this.getContextElement(element);\n        return contextType;\n    };\n    Selection.prototype.getContextElement = function (element) {\n        if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n            return 'Text';\n        }\n        else if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox || element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldTextElementBox) {\n            return 'Field';\n        }\n        else if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox) {\n            return 'Bookmark';\n        }\n        else if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox) {\n            return 'Image';\n        }\n        else if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox) {\n            return 'Shape';\n        }\n        else if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.CommentElementBox || element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox) {\n            return 'Comment';\n        }\n        else if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n            return 'List';\n        }\n        else if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.EditRangeStartElementBox || element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.EditRangeEndElementBox) {\n            return 'EditRange';\n        }\n        else {\n            return undefined;\n        }\n    };\n    Selection.prototype.getContentControlPositions = function (contenControl) {\n        var offset = contenControl.line.getOffset(contenControl, 1);\n        var startPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n        startPosition.setPositionParagraph(contenControl.line, offset);\n        var contentControlEnd = contenControl.reference;\n        var endoffset = contentControlEnd.line.getOffset(contentControlEnd, 0);\n        var endPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n        endPosition.setPositionParagraph(contentControlEnd.line, endoffset);\n        return { startPosition: startPosition, endPosition: endPosition };\n    };\n    /**\n    * Retrieves the information about the content control associated with the current selection.\n    *\n    * @returns {ContentControlInfo} An object containing details about the content control, including\n    * its title, tag, value, editability, deletability, type, and any XML mapping if applicable.\n    */\n    Selection.prototype.getContentControlInfo = function () {\n        var contentControl = this.currentContentControl;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(contentControl)) {\n            var ccValue = '';\n            if (contentControl.contentControlProperties.type === 'Text') {\n                var position = this.getContentControlPositions(contentControl);\n                ccValue = this.documentHelper.selection.getTextInternal(position.startPosition, position.endPosition, false);\n            }\n            else if (contentControl.contentControlProperties.type === 'RichText') {\n                // When writing SFDT if the block is Richtext this will write has rich block not as paragraph block. To skip this changing the type as BuldingBlockGallery \n                contentControl.contentControlProperties.type = 'BuildingBlockGallery';\n                var position = this.getContentControlPositions(contentControl);\n                var documentContent = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.sfdtExportModule) ?\n                    this.owner.sfdtExportModule.write((this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0), position.startPosition.currentWidget, position.startPosition.offset, position.endPosition.currentWidget, position.endPosition.offset, false, true) : {};\n                ccValue = JSON.stringify(documentContent);\n                contentControl.contentControlProperties.type = 'RichText';\n            }\n            else if (contentControl.contentControlProperties.type === 'CheckBox') {\n                ccValue = contentControl.contentControlProperties.isChecked ? 'true' : 'false';\n            }\n            else if (contentControl.contentControlProperties.type === 'ComboBox' || contentControl.contentControlProperties.type === 'DropDownList' || contentControl.contentControlProperties.type === 'Date') {\n                var element = contentControl;\n                while (element !== contentControl.reference) {\n                    if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                        ccValue += element.text;\n                    }\n                    element = element.nextNode;\n                }\n            }\n            else if (contentControl.contentControlProperties.type === 'Picture') {\n                if (contentControl.nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox) {\n                    ccValue = this.documentHelper.getImageString(contentControl.nextNode);\n                }\n            }\n            var contentControlInfo = {\n                title: contentControl.contentControlProperties.title,\n                tag: contentControl.contentControlProperties.tag,\n                value: ccValue,\n                canDelete: contentControl.contentControlProperties.lockContentControl,\n                canEdit: contentControl.contentControlProperties.lockContents,\n                type: contentControl.contentControlProperties.type\n            };\n            return contentControlInfo;\n        }\n        return undefined;\n    };\n    Selection.prototype.setCurrentContextType = function () {\n        var contextIsinImage = this.imageFormat.image ? true : false;\n        var contextIsinTable = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.tableFormat) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.tableFormat.table)) ? false : true;\n        var style = this.start.paragraph.paragraphFormat.baseStyle;\n        if (style instanceof _index__WEBPACK_IMPORTED_MODULE_3__.WParagraphStyle && style.name.toLowerCase().indexOf('toc') === 0) {\n            var tocField = this.getTocFieldInternal();\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(tocField)) {\n                this.contextTypeInternal = 'TableOfContents';\n                return;\n            }\n        }\n        var currentRevision = this.getCurrentRevision();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentRevision) && this.owner.showRevisions && this.owner.isUpdateTrackChanges) {\n            this.owner.trackChangesPane.currentSelectedRevision = currentRevision[0];\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.documentHelper.currentSelectedComment)) {\n                this.owner.commentReviewPane.selectReviewTab('Changes');\n            }\n            this.owner.notify('reviewPane', { comment: this.owner.showComments, changes: true, isUserClosed: false });\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.trackChangesPane.currentSelectedRevision)) {\n            this.owner.trackChangesPane.currentSelectedRevision = undefined;\n        }\n        if (this.start.paragraph.isInHeaderFooter) {\n            var isInHeader = this.start.paragraph.bodyWidget.headerFooterType.indexOf('Header') !== -1;\n            if (contextIsinTable) {\n                if (contextIsinImage) {\n                    this.contextTypeInternal = isInHeader ? 'HeaderTableImage' : 'FooterTableImage';\n                }\n                else {\n                    this.contextTypeInternal = isInHeader ? 'HeaderTableText' : 'FooterTableText';\n                }\n            }\n            else {\n                if (contextIsinImage) {\n                    this.contextTypeInternal = isInHeader ? 'HeaderImage' : 'FooterImage';\n                }\n                else {\n                    this.contextTypeInternal = isInHeader ? 'HeaderText' : 'FooterText';\n                }\n            }\n        }\n        else {\n            if (contextIsinTable) {\n                this.contextTypeInternal = contextIsinImage ? 'TableImage' : 'TableText';\n            }\n            else {\n                this.contextTypeInternal = contextIsinImage ? 'Image' : 'Text';\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.editor) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.editor.documentHelper) &&\n            this.owner.editor.documentHelper.contentControlCollection &&\n            this.owner.editor.documentHelper.contentControlCollection.length > 0) {\n            var contentControl = this.currentContentControl;\n            var contentControlImage = this.owner.getImageContentControl();\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(contentControl) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(contentControlImage)) {\n                var type = contentControl ? contentControl.contentControlProperties.type :\n                    contentControlImage.contentControlProperties.type;\n                switch (type) {\n                    case 'RichText':\n                        this.contextTypeInternal = \"RichTextContentControl\";\n                        break;\n                    case 'Text':\n                        this.contextTypeInternal = \"PlainTextContentControl\";\n                        break;\n                    case 'Picture':\n                        this.contextTypeInternal = \"PictureContentControl\";\n                        break;\n                    case 'ComboBox':\n                        this.contextTypeInternal = \"ComboBoxContentControl\";\n                        break;\n                    case 'DropDownList':\n                        this.contextTypeInternal = \"DropDownListContentControl\";\n                        break;\n                    case 'CheckBox':\n                        this.contextTypeInternal = \"CheckBoxContentControl\";\n                        break;\n                    case 'Date':\n                        this.contextTypeInternal = \"DatePickerContentControl\";\n                        break;\n                }\n            }\n        }\n    };\n    Selection.prototype.addItemRevisions = function (currentItem, isFromAccept) {\n        for (var i = 0; i < currentItem.revisions.length; i++) {\n            var currentRevision = currentItem.revisions[i];\n            this.selectRevision(currentRevision);\n            if (isFromAccept) {\n                currentRevision.accept();\n            }\n            else {\n                currentRevision.reject();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.hasRevisions = function () {\n        if (this.getCurrentRevision()) {\n            return true;\n        }\n        return false;\n    };\n    Selection.prototype.getCurrentRevision = function () {\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        var isUpdateSelection = false;\n        if (this.owner.enableTrackChanges && this.owner.editorHistoryModule && this.owner.editorHistoryModule.currentBaseHistoryInfo && this.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'BackSpace') {\n            isUpdateSelection = true;\n        }\n        var elementInfo;\n        if (isUpdateSelection && this.getLineLength(start.currentWidget) >= start.offset + 1) {\n            elementInfo = start.currentWidget.getInline(start.offset + 1, 0);\n        }\n        else {\n            elementInfo = start.currentWidget.getInline(start.offset, 0);\n        }\n        var currentElement = elementInfo.element;\n        var startPara = start.paragraph;\n        var nextOffsetElement;\n        if (isUpdateSelection && this.getLineLength(start.currentWidget) >= start.offset + 2) {\n            nextOffsetElement = start.currentWidget.getInline(start.offset + 2, 0).element;\n        }\n        else {\n            nextOffsetElement = start.currentWidget.getInline(start.offset + 1, 0).element;\n        }\n        var eleEndPosition;\n        if (currentElement && currentElement === nextOffsetElement) {\n            var offset = currentElement.line.getOffset(currentElement, (currentElement.length));\n            eleEndPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            eleEndPosition.setPositionParagraph(currentElement.line, offset);\n            if (end.offset === eleEndPosition.offset && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentElement.nextElement)) {\n                return undefined;\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentElement) && currentElement.revisions.length > 0) {\n            return currentElement.revisions;\n        }\n        if (startPara.isInsideTable) {\n            var cellWidget = startPara.associatedCell;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(cellWidget.ownerRow) && cellWidget.ownerRow.rowFormat.revisions.length > 0) {\n                return cellWidget.ownerRow.rowFormat.revisions;\n            }\n        }\n        if (end.offset > end.paragraph.getLength()) {\n            if (end.paragraph.characterFormat.revisions.length > 0) {\n                return end.paragraph.characterFormat.revisions;\n            }\n        }\n        return undefined;\n    };\n    Selection.prototype.processLineRevisions = function (linewidget, isFromAccept) {\n        for (var i = 0; i < linewidget.children.length; i++) {\n            var element = linewidget.children[i];\n            if (element.revisions.length > 0) {\n                this.addItemRevisions(element, isFromAccept);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param isFromAccept\n     */\n    Selection.prototype.handleAcceptReject = function (isFromAccept) {\n        if (this.isEmpty) {\n            var elementInfo = this.start.currentWidget.getInline((this.start.offset + 1), 0);\n            var currentElement = elementInfo.element;\n            var startPara = this.start.paragraph;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentElement) && currentElement.revisions.length > 0) {\n                this.addItemRevisions(currentElement, isFromAccept);\n            }\n            if (startPara.isInsideTable) {\n                var cellWidget = startPara.associatedCell;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(cellWidget)) {\n                    if (cellWidget.ownerRow.rowFormat.revisions.length > 0) {\n                        this.addItemRevisions(cellWidget.ownerRow.rowFormat, isFromAccept);\n                    }\n                }\n                else if (!startPara.isEmpty()) {\n                    for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n                        var paraWidget = cellWidget.childWidgets[i];\n                        for (var lineIndex = void 0; lineIndex < paraWidget.childWidgets.length; lineIndex++) {\n                            var linewidget = paraWidget.childWidgets[lineIndex];\n                            this.processLineRevisions(linewidget, isFromAccept);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            var revisions = this.getselectedRevisionElements();\n            for (var i = 0; i < revisions.length; i++) {\n                this.acceptReject(revisions[i], isFromAccept);\n            }\n        }\n    };\n    Selection.prototype.acceptReject = function (currentRevision, toAccept) {\n        this.selectRevision(currentRevision);\n        if (toAccept) {\n            currentRevision.accept();\n        }\n        else {\n            currentRevision.reject();\n        }\n    };\n    Selection.prototype.getselectedRevisionElements = function () {\n        var revisionCollec = [];\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        for (var i = 0; i < this.selectedWidgets.length; i++) {\n            var currentWidget = this.selectedWidgets.keys[i];\n            if (currentWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.LineWidget) {\n                revisionCollec = this.getSelectedLineRevisions(currentWidget, start, end, revisionCollec);\n            }\n            else if (currentWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n                if (currentWidget.ownerRow.rowFormat.revisions.length > 0) {\n                    revisionCollec = this.addRevisionsCollec(currentWidget.ownerRow.rowFormat.revisions, revisionCollec);\n                }\n                for (var i_3 = 0; i_3 < currentWidget.childWidgets.length; i_3++) {\n                    var paraWidget = currentWidget.childWidgets[i_3];\n                    for (var lineIndex = 0; lineIndex < paraWidget.childWidgets.length; lineIndex++) {\n                        var linewidget = paraWidget.childWidgets[lineIndex];\n                        revisionCollec = this.getSelectedLineRevisions(linewidget, start, end, revisionCollec);\n                    }\n                }\n            }\n        }\n        return revisionCollec;\n    };\n    Selection.prototype.getSelectedLineRevisions = function (currentWidget, start, end, elements) {\n        if (currentWidget.paragraph.characterFormat.revisions.length > 0) {\n            elements = this.addRevisionsCollec(currentWidget.paragraph.characterFormat.revisions, elements);\n        }\n        for (var j = 0; j < currentWidget.children.length; j++) {\n            var currentElement = currentWidget.children[j];\n            var offset = currentElement.line.getOffset(currentElement, 0);\n            var eleStartPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            eleStartPosition.setPositionParagraph(currentElement.line, offset);\n            offset = currentElement.line.getOffset(currentElement, (currentElement.length));\n            var eleEndPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            eleEndPosition.setPositionParagraph(currentElement.line, offset);\n            if (((eleEndPosition.isExistAfter(start) && eleEndPosition.isExistBefore(end))\n                || (eleStartPosition.isExistAfter(start) && eleStartPosition.isExistBefore(end))\n                || eleStartPosition.isAtSamePosition(start)\n                || (start.isExistAfter(eleStartPosition) && end.isExistBefore(eleEndPosition))) && currentElement.revisions.length > 0) {\n                elements = this.addRevisionsCollec(currentElement.revisions, elements);\n            }\n        }\n        return elements;\n    };\n    Selection.prototype.addRevisionsCollec = function (element, revisCollec) {\n        for (var i = 0; i < element.length; i++) {\n            if (revisCollec.indexOf(element[i]) === -1) {\n                revisCollec.push(element[i]);\n            }\n        }\n        return revisCollec;\n    };\n    //Table Format retrieval starts\n    /**\n     * Retrieve selection table format\n     * @private\n     */\n    Selection.prototype.retrieveTableFormat = function (start, end) {\n        var tableAdv = this.getTable(start, end);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(tableAdv)) {\n            this.tableFormat.table = tableAdv;\n            this.tableFormat.copyFormat(tableAdv.tableFormat);\n            this.retrieveCellFormat(start, end);\n            this.retrieveRowFormat(start, end);\n        }\n        else {\n            //When the selection is out of table\n            this.tableFormat.clearFormat();\n        }\n    };\n    /**\n     * Retrieve selection cell format\n     * @private\n     */\n    Selection.prototype.retrieveCellFormat = function (start, end) {\n        if (start.paragraph.isInsideTable && end.paragraph.isInsideTable) {\n            this.cellFormat.copyFormat(start.paragraph.associatedCell.cellFormat);\n            this.getCellFormat(start.paragraph.associatedCell.ownerTable, start, end);\n        }\n        else {\n            //When the selection is out of table\n            this.cellFormat.clearCellFormat();\n        }\n    };\n    /**\n     * Retrieve selection row format\n     * @private\n     */\n    Selection.prototype.retrieveRowFormat = function (start, end) {\n        if (start.paragraph.isInsideTable && end.paragraph.isInsideTable) {\n            this.rowFormat.copyFormat(start.paragraph.associatedCell.ownerRow.rowFormat);\n            this.getRowFormat(start.paragraph.associatedCell.ownerTable, start, end);\n        }\n        else {\n            //When the selection is out of table\n            this.rowFormat.clearRowFormat();\n        }\n    };\n    /**\n     * Get selected cell format\n     * @private\n     */\n    Selection.prototype.getCellFormat = function (table, start, end) {\n        if (start.paragraph.associatedCell.equals(end.paragraph.associatedCell)) {\n            return;\n        }\n        var isStarted = false;\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            if (row === start.paragraph.associatedCell.ownerRow) {\n                isStarted = true;\n            }\n            if (isStarted) {\n                for (var j = 0; j < row.childWidgets.length; j++) {\n                    var cell = row.childWidgets[j];\n                    if (this.isCellSelected(cell, start, end)) {\n                        this.cellFormat.combineFormat(cell.cellFormat);\n                    }\n                    if (cell === end.paragraph.associatedCell) {\n                        this.cellFormat.combineFormat(cell.cellFormat);\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Get selected row format\n     * @private\n     */\n    Selection.prototype.getRowFormat = function (table, start, end) {\n        var tableRow = start.paragraph.associatedCell.ownerRow;\n        if (tableRow === end.paragraph.associatedCell.ownerRow) {\n            return;\n        }\n        for (var i = table.childWidgets.indexOf(tableRow) + 1; i < table.childWidgets.length; i++) {\n            var tempTableRow = table.childWidgets[i];\n            this.rowFormat.combineFormat(tempTableRow.rowFormat);\n            if (tempTableRow === end.paragraph.associatedCell.ownerRow) {\n                return;\n            }\n        }\n    };\n    /**\n     * Return table with given text position\n     * @private\n     */\n    Selection.prototype.getTable = function (startPosition, endPosition) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startPosition.paragraph.associatedCell) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(endPosition.paragraph.associatedCell)) {\n            var startTable = startPosition.paragraph.associatedCell.ownerTable;\n            var endTable = startPosition.paragraph.associatedCell.ownerTable;\n            if (startTable === endTable) {\n                return startTable;\n            }\n            else {\n                if (startTable.contains(startPosition.paragraph.associatedCell)) {\n                    return startTable;\n                }\n                else if (endTable.contains(startPosition.paragraph.associatedCell)) {\n                    return endTable;\n                }\n                else if (!startTable.isInsideTable || !endTable.isInsideTable) {\n                    return undefined;\n                }\n                else {\n                    do {\n                        startTable = startTable.associatedCell.ownerTable;\n                        if (startTable === endTable || startTable.contains(endTable.associatedCell)) {\n                            return startTable;\n                        }\n                        else if (endTable.contains(startTable.associatedCell)) {\n                            return endTable;\n                        }\n                    } while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startTable.associatedCell));\n                }\n            }\n        }\n        return undefined;\n    };\n    Selection.prototype.getContainerWidget = function (block) {\n        var bodyWidget;\n        if (block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextFrame) {\n            bodyWidget = block.containerWidget.containerShape.line.paragraph.bodyWidget;\n        }\n        else if (block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BlockContainer) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(block.containerWidget.containerWidget) && block.containerWidget.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget) {\n                bodyWidget = block.containerWidget.containerWidget;\n            }\n            else {\n                bodyWidget = block.containerWidget;\n            }\n        }\n        else {\n            bodyWidget = block.containerWidget;\n            while (!(bodyWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BlockContainer)) {\n                if (bodyWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextFrame) {\n                    bodyWidget = bodyWidget.containerShape.line.paragraph;\n                }\n                bodyWidget = bodyWidget.containerWidget;\n            }\n        }\n        return bodyWidget;\n    };\n    //Table format retrieval ends\n    //Section format retrieval starts\n    /**\n     * Retrieve selection section format\n     * @private\n     */\n    Selection.prototype.retrieveSectionFormat = function (start, end) {\n        var startParaSection = this.getContainerWidget(start.paragraph);\n        var endParaSection = this.getContainerWidget(end.paragraph);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startParaSection)) {\n            this.sectionFormat.copyFormat(startParaSection.sectionFormat);\n            var startPageIndex = this.documentHelper.pages.indexOf(startParaSection.page);\n            var endPageIndex = this.documentHelper.pages.indexOf(endParaSection.page);\n            for (var i = startPageIndex + 1; i <= endPageIndex; i++) {\n                this.sectionFormat.combineFormat(this.documentHelper.pages[i].bodyWidgets[0].sectionFormat);\n            }\n        }\n    };\n    //section format retrieval ends.\n    //Paragraph format retrieval implementation starts.\n    /**\n     * Retrieve selection paragraph format\n     * @private\n     */\n    Selection.prototype.retrieveParagraphFormat = function (start, end) {\n        this.getParagraphFormatForSelection(start.paragraph, this, start, end);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphFormatForSelection = function (paragraph, selection, start, end) {\n        //Selection start in cell.\n        if (start.paragraph.isInsideTable && (!end.paragraph.isInsideTable\n            || start.paragraph.associatedCell !== end.paragraph.associatedCell\n            || this.isCellSelected(start.paragraph.associatedCell, start, end))) {\n            this.getParagraphFormatInternalInCell(start.paragraph.associatedCell, start, end);\n        }\n        else {\n            this.getParagraphFormatInternalInParagraph(paragraph, start, end);\n            if (end.paragraph === paragraph) {\n                return;\n            }\n            var block = this.getNextRenderedBlock(paragraph);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(block)) {\n                this.getParagraphFormatInternalInBlock(block, start, end);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphsInSelection = function () {\n        var selection = this.owner.selectionModule;\n        var selectedWidgets = selection.selectedWidgets.keys;\n        var paragraphsInSelection = [];\n        if (selection.isEmpty || selection.start.paragraph === selection.end.paragraph) {\n            return [selection.start.paragraph];\n        }\n        for (var i = 0; i < selectedWidgets.length; i++) {\n            var widget = selectedWidgets[i];\n            if (paragraphsInSelection.indexOf(widget.paragraph) === -1) {\n                paragraphsInSelection.push(widget.paragraph);\n            }\n        }\n        return paragraphsInSelection;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInternalInParagraph = function (paragraph, start, end) {\n        if (start.paragraph === paragraph) {\n            this.paragraphFormat.copyFormat(paragraph.paragraphFormat);\n        }\n        else {\n            this.paragraphFormat.combineFormat(paragraph.paragraphFormat);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInternalInBlock = function (block, start, end) {\n        if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            this.getParagraphFormatInternalInParagraph(block, start, end);\n            if (end.paragraph === block) {\n                return;\n            }\n            var para = this.getNextRenderedBlock(block);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(para)) {\n                this.getParagraphFormatInternalInBlock(para, start, end);\n            }\n        }\n        else {\n            this.getParagraphFormatInternalInTable(block, start, end);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInternalInTable = function (table, start, end) {\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var tableRow = table.childWidgets[i];\n            for (var j = 0; j < tableRow.childWidgets.length; j++) {\n                this.getParagraphFormatInCell(tableRow.childWidgets[j]);\n            }\n            if (end.paragraph.isInsideTable && this.containsRow(tableRow, end.paragraph.associatedCell)) {\n                return;\n            }\n        }\n        var block = this.getNextRenderedBlock(table);\n        //Goto the next block.\n        this.getParagraphFormatInternalInBlock(block, start, end);\n    };\n    /**\n     * Get paragraph format in cell\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInCell = function (cell) {\n        for (var i = 0; i < cell.childWidgets.length; i++) {\n            this.getParagraphFormatInBlock(cell.childWidgets[i]);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInBlock = function (block) {\n        if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            this.getParagraphFormatInParagraph(block);\n        }\n        else {\n            this.getParagraphFormatInTable(block);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInTable = function (tableAdv) {\n        for (var i = 0; i < tableAdv.childWidgets.length; i++) {\n            var tableRow = tableAdv.childWidgets[i];\n            for (var j = 0; j < tableRow.childWidgets.length; j++) {\n                this.getParagraphFormatInCell(tableRow.childWidgets[j]);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInParagraph = function (paragraph) {\n        if (this.start.paragraph === paragraph) {\n            this.paragraphFormat.copyFormat(paragraph.paragraphFormat);\n        }\n        else {\n            this.paragraphFormat.combineFormat(paragraph.paragraphFormat);\n        }\n    };\n    /**\n     * Get paragraph format in cell\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInternalInCell = function (cellAdv, start, end) {\n        if (end.paragraph.isInsideTable) {\n            var containerCell = this.getContainerCellOf(cellAdv, end.paragraph.associatedCell);\n            if (containerCell.ownerTable.contains(end.paragraph.associatedCell)) {\n                var startCell = this.getSelectedCell(cellAdv, containerCell);\n                var endCell = this.getSelectedCell(end.paragraph.associatedCell, containerCell);\n                if (this.containsCell(containerCell, end.paragraph.associatedCell)) {\n                    //Selection end is in container cell.\n                    if (this.isCellSelected(containerCell, start, end)) {\n                        this.getParagraphFormatInCell(containerCell);\n                    }\n                    else {\n                        if (startCell === containerCell) {\n                            this.getParagraphFormatInternalInParagraph(start.paragraph, start, end);\n                            if (end.paragraph === start.paragraph) {\n                                return;\n                            }\n                            var block = this.getNextRenderedBlock(start.paragraph);\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(block)) {\n                                this.getParagraphFormatInternalInBlock(block, start, end);\n                            }\n                        }\n                        else {\n                            this.getParagraphFormatInRow(startCell.ownerRow, start, end);\n                        }\n                    }\n                }\n                else {\n                    //Format other selected cells in current table.\n                    this.getParaFormatForCell(containerCell.ownerTable, containerCell, endCell);\n                }\n            }\n            else {\n                this.getParagraphFormatInRow(containerCell.ownerRow, start, end);\n            }\n        }\n        else {\n            var cell = this.getContainerCell(cellAdv);\n            this.getParagraphFormatInRow(cell.ownerRow, start, end);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParaFormatForCell = function (table, startCell, endCell) {\n        var startCellIn = this.getCellLeft(startCell.ownerRow, startCell);\n        var endCellIn = startCellIn + startCell.cellFormat.cellWidth;\n        var endCellLeft = this.getCellLeft(endCell.ownerRow, endCell);\n        var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n        if (startCellIn > endCellLeft) {\n            startCellIn = endCellLeft;\n        }\n        if (endCellIn < endCellRight) {\n            endCellIn = endCellRight;\n        }\n        if (startCellIn > this.upDownSelectionLength) {\n            startCellIn = this.upDownSelectionLength;\n        }\n        if (startCellIn < this.upDownSelectionLength) {\n            startCellIn = this.upDownSelectionLength;\n        }\n        var count = table.childWidgets.indexOf(endCell.ownerRow);\n        for (var i = table.childWidgets.indexOf(startCell.ownerRow); i <= count; i++) {\n            var tableRow = table.childWidgets[i];\n            for (var j = 0; j < tableRow.childWidgets.length; j++) {\n                var cell = tableRow.childWidgets[j];\n                var left = this.getCellLeft(tableRow, cell);\n                if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(startCellIn, 2) <= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(left, 2)\n                    && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(left, 2) < _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(endCellIn, 2)) {\n                    this.getParagraphFormatInCell(cell);\n                }\n            }\n        }\n    };\n    /**\n     * Get paragraph format ins row\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInRow = function (tableRow, start, end) {\n        for (var i = tableRow.rowIndex; i < tableRow.ownerTable.childWidgets.length; i++) {\n            var row = tableRow.ownerTable.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                this.getParagraphFormatInCell(row.childWidgets[j]);\n            }\n            if (end.paragraph.isInsideTable && this.containsRow(row, end.paragraph.associatedCell)) {\n                return;\n            }\n        }\n        var block = this.getNextRenderedBlock(tableRow.ownerTable);\n        //Goto the next block.\n        this.getParagraphFormatInternalInBlock(block, start, end);\n    };\n    // paragraph format retrieval implementation ends\n    // Character format retrieval implementation starts.\n    /**\n     * Retrieve Selection character format\n     * @private\n     */\n    Selection.prototype.retrieveCharacterFormat = function (start, end) {\n        this.characterFormat.copyFormat(start.paragraph.characterFormat);\n        if (start.paragraph.isEmpty()) {\n            this.characterFormat.copyFormat(start.paragraph.characterFormat, this.documentHelper.textHelper.getFontNameToRender(0, start.paragraph.characterFormat));\n        }\n        if (start.paragraph === end.paragraph && start.currentWidget.isLastLine()\n            && start.offset === this.getLineLength(start.currentWidget) && start.offset + 1 === end.offset) {\n            return;\n        }\n        var para = start.paragraph;\n        if (start.paragraph === end.paragraph && this.isSelectList) {\n            var listLevel = this.getListLevel(start.paragraph);\n            // let breakCharacterFormat: WCharacterFormat = start.paragraph.characterFormat;\n            if (listLevel && listLevel.characterFormat.uniqueCharacterFormat) {\n                this.characterFormat.copyFormat(listLevel.characterFormat);\n            }\n            return;\n        }\n        if (start.offset === this.getParagraphLength(para) && !this.isEmpty) {\n            para = this.getNextParagraphBlock(para);\n        }\n        while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(para) && para !== end.paragraph && para.isEmpty()) {\n            para = this.getNextParagraphBlock(para);\n        }\n        var offset = para === start.paragraph ? start.offset : 0;\n        var indexInInline = 0;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(para) && !para.isEmpty()) {\n            var position = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n            var elemInfo = start.currentWidget.getInline(offset, indexInInline);\n            var physicalLocation = this.getPhysicalPositionInternal(start.currentWidget, offset, true);\n            position.setPositionForSelection(start.currentWidget, elemInfo.element, elemInfo.index, physicalLocation);\n            this.getCharacterFormatForSelection(para, this, position, end);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getCharacterFormatForSelection = function (paragraph, selection, startPosition, endPosition) {\n        //Selection start in cell.\n        if (startPosition.paragraph instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget && startPosition.paragraph.isInsideTable\n            && (!endPosition.paragraph.isInsideTable\n                || startPosition.paragraph.associatedCell !== endPosition.paragraph.associatedCell\n                || this.isCellSelected(startPosition.paragraph.associatedCell, startPosition, endPosition))) {\n            this.getCharacterFormatInTableCell(startPosition.paragraph.associatedCell, selection, startPosition, endPosition);\n        }\n        else {\n            this.getCharacterFormat(paragraph, startPosition, endPosition);\n        }\n    };\n    /**\n     * Get Character format\n     * @private\n     */\n    //Format Retrieval\n    Selection.prototype.getCharacterFormatForTableRow = function (tableRowAdv, start, end) {\n        for (var i = tableRowAdv.rowIndex; i < tableRowAdv.ownerTable.childWidgets.length; i++) {\n            var tableRow = tableRowAdv.ownerTable.childWidgets[i];\n            for (var j = 0; j < tableRow.childWidgets.length; j++) {\n                this.getCharacterFormatForSelectionCell(tableRow.childWidgets[j], start, end);\n            }\n            if (end.paragraph.isInsideTable && this.containsRow(tableRow, end.paragraph.associatedCell)) {\n                return;\n            }\n        }\n        var block = this.getNextRenderedBlock(tableRowAdv.ownerTable);\n        // //Goto the next block.\n        this.getCharacterFormatForBlock(block, start, end);\n    };\n    /**\n     * Get Character format in table\n     * @private\n     */\n    Selection.prototype.getCharacterFormatInTableCell = function (tableCell, selection, start, end) {\n        if (end.paragraph.isInsideTable) {\n            var containerCell = this.getContainerCellOf(tableCell, end.paragraph.associatedCell);\n            if (containerCell.ownerTable.contains(end.paragraph.associatedCell)) {\n                var startCell = this.getSelectedCell(tableCell, containerCell);\n                var endCell = this.getSelectedCell(end.paragraph.associatedCell, containerCell);\n                if (this.containsCell(containerCell, end.paragraph.associatedCell)) {\n                    //Selection end is in container cell.\n                    if (this.isCellSelected(containerCell, start, end)) {\n                        this.getCharacterFormatForSelectionCell(containerCell, start, end);\n                    }\n                    else {\n                        if (startCell === containerCell) {\n                            this.getCharacterFormat(start.paragraph, start, end);\n                        }\n                        else {\n                            this.getCharacterFormatForTableRow(startCell.ownerRow, start, end);\n                        }\n                    }\n                }\n                else {\n                    //Format other selected cells in current table.\n                    this.getCharacterFormatInternalInTable(containerCell.ownerTable, containerCell, endCell, start, end);\n                }\n            }\n            else {\n                this.getCharacterFormatForTableRow(containerCell.ownerRow, start, end);\n            }\n        }\n        else {\n            var cell = this.getContainerCell(tableCell);\n            this.getCharacterFormatForTableRow(cell.ownerRow, start, end);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getCharacterFormatInternalInTable = function (table, startCell, endCell, startPosition, endPosition) {\n        var startIn = this.getCellLeft(startCell.ownerRow, startCell);\n        var endIn = startIn + startCell.cellFormat.cellWidth;\n        var endCellLeft = this.getCellLeft(endCell.ownerRow, endCell);\n        var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n        if (startIn > endCellLeft) {\n            startIn = endCellLeft;\n        }\n        if (endIn < endCellRight) {\n            endIn = endCellRight;\n        }\n        if (startIn > this.upDownSelectionLength) {\n            startIn = this.upDownSelectionLength;\n        }\n        if (endIn < this.upDownSelectionLength) {\n            endIn = this.upDownSelectionLength;\n        }\n        var count = table.childWidgets.indexOf(endCell.ownerRow);\n        for (var i = table.childWidgets.indexOf(startCell.ownerRow); i <= count; i++) {\n            var row = table.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[j];\n                var left = this.getCellLeft(row, cell);\n                if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(startIn, 2) <= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(left, 2) &&\n                    _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(left, 2) < _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.round(endIn, 2)) {\n                    this.getCharacterFormatForSelectionCell(cell, startPosition, endPosition);\n                }\n            }\n        }\n    };\n    /**\n     * Get character format with in selection\n     * @private\n     */\n    Selection.prototype.getCharacterFormat = function (paragraph, start, end) {\n        if (paragraph !== start.paragraph && paragraph !== end.paragraph && !paragraph.isEmpty()) {\n            this.getCharacterFormatInternal(paragraph, this);\n            if (!this.characterFormat.canRetrieveNextCharacterFormat())\n                return;\n        }\n        if (end.paragraph === paragraph && start.paragraph !== paragraph && end.offset === 0) {\n            return;\n        }\n        var startOffset = 0;\n        var length = this.getParagraphLength(paragraph);\n        if (paragraph === start.paragraph) {\n            startOffset = start.offset;\n            //Sets selection character format.            \n            var isUpdated = this.setCharacterFormat(paragraph, start, end, length);\n            if (isUpdated) {\n                return;\n            }\n        }\n        var startLineWidget = paragraph.childWidgets.indexOf(start.currentWidget) !== -1 ?\n            paragraph.childWidgets.indexOf(start.currentWidget) : 0;\n        var endLineWidget = paragraph.childWidgets.indexOf(end.currentWidget) !== -1 ?\n            paragraph.childWidgets.indexOf(end.currentWidget) : paragraph.childWidgets.length - 1;\n        var endOffset = end.offset;\n        if (paragraph !== end.paragraph) {\n            endOffset = length;\n        }\n        var isFieldStartSelected = false;\n        for (var i = startLineWidget; i <= endLineWidget; i++) {\n            var lineWidget = paragraph.childWidgets[i];\n            if (i !== startLineWidget) {\n                startOffset = this.getStartLineOffset(lineWidget);\n            }\n            if (lineWidget === end.currentWidget) {\n                endOffset = end.offset;\n            }\n            else {\n                endOffset = this.getLineLength(lineWidget);\n            }\n            var count = 0;\n            for (var j = 0; j < lineWidget.children.length; j++) {\n                var inline = lineWidget.children[j];\n                if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                    continue;\n                }\n                if (startOffset >= count + inline.length) {\n                    count += inline.length;\n                    continue;\n                }\n                if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 0\n                    && _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.isLinkedFieldCharacter(inline)) {\n                    var nextInline = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.fieldEnd) ?\n                        inline.fieldBegin : inline.fieldEnd;\n                    j--;\n                    do {\n                        this.characterFormat.combineFormat(inline.characterFormat);\n                        count += inline.length;\n                        inline = inline.nextNode;\n                        i++;\n                        j++;\n                    } while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline) && inline !== nextInline);\n                    continue;\n                    //isFieldStartSelected = true;\n                }\n                // if (inline instanceof FieldElementBox && (inline as FieldElementBox).fieldType === 1\n                //     && HelperMethods.isLinkedFieldCharacter((inline as FieldElementBox)) && isFieldStartSelected) {\n                //     let fieldInline: ElementBox = (inline as FieldElementBox).fieldBegin;\n                //     do {\n                //         this.characterFormat.combineFormat(fieldInline.characterFormat);\n                //         fieldInline = fieldInline.nextNode as ElementBox;\n                //     } while (!(fieldInline instanceof FieldElementBox));\n                // }\n                if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                    this.characterFormat.combineFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n                }\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline) || endOffset <= count + inline.length) {\n                    break;\n                }\n                count += inline.length;\n            }\n        }\n        if (end.paragraph === paragraph) {\n            return;\n        }\n        var block = this.getNextRenderedBlock(paragraph);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(block)) {\n            this.getCharacterFormatForBlock(block, start, end);\n        }\n    };\n    Selection.prototype.setCharacterFormat = function (para, startPos, endPos, length) {\n        var index = 0;\n        var startOffset = startPos.offset;\n        var inlineAndIndex = startPos.currentWidget.getInline(startOffset, index);\n        index = inlineAndIndex.index;\n        var inline = inlineAndIndex.element;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline)) {\n            var currentLineIndex = startPos.paragraph.childWidgets.indexOf(startPos.currentWidget);\n            if (startPos.currentWidget.previousLine) {\n                inline = startPos.currentWidget.previousLine.children[startPos.currentWidget.previousLine.children.length - 1];\n                this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n                return true;\n            }\n        }\n        if (startOffset < length) {\n            if (this.isEmpty) {\n                if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox || (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox\n                    && (inline.fieldType === 0 || inline.fieldType === 1))) {\n                    var previousNode = this.getPreviousTextElement(inline);\n                    if (startOffset === 0 && previousNode) {\n                        inline = previousNode;\n                    }\n                    this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n                }\n                else {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.getPreviousTextElement(inline))) {\n                        var element = this.getPreviousTextElement(inline);\n                        this.characterFormat.copyFormat(element.characterFormat, this.documentHelper.textHelper.getFontNameToRender(element.scriptType, inline.characterFormat));\n                    }\n                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.getNextTextElement(inline))) {\n                        var element = this.getNextTextElement(inline);\n                        this.characterFormat.copyFormat(element.characterFormat, this.documentHelper.textHelper.getFontNameToRender(element.scriptType, inline.characterFormat));\n                    }\n                    else {\n                        this.characterFormat.copyFormat(para.characterFormat);\n                    }\n                }\n                return true;\n            }\n            else {\n                if (index === inline.length && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.nextNode)) {\n                    this.characterFormat.copyFormat(this.getNextValidCharacterFormat(inline), this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n                }\n                else if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                    this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n                }\n                else if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                    this.characterFormat.copyFormat(this.getNextValidCharacterFormatOfField(inline));\n                }\n            }\n        }\n        else {\n            if (length === endPos.offset) {\n                if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                    this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n                }\n                else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline)) {\n                    inline = this.getPreviousTextElement(inline);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline)) {\n                        this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n                    }\n                }\n                else {\n                    this.characterFormat.copyFormat(para.characterFormat);\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getCharacterFormatForBlock = function (block, start, end) {\n        if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            this.getCharacterFormat(block, start, end);\n        }\n        else {\n            this.getCharacterFormatInTable(block, start, end);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getCharacterFormatInTable = function (table, start, end) {\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                this.getCharacterFormatForSelectionCell(row.childWidgets[j], start, end);\n            }\n            if (end.paragraph.isInsideTable && this.containsRow(row, end.paragraph.associatedCell)) {\n                return;\n            }\n        }\n        var blockAdv = this.getNextRenderedBlock(table);\n        // //Goto the next block.\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(blockAdv)) {\n            this.getCharacterFormatForBlock(blockAdv, start, end);\n        }\n    };\n    /**\n     * Get character format in selection\n     * @private\n     */\n    Selection.prototype.getCharacterFormatForSelectionCell = function (cell, start, end) {\n        for (var i = 0; i < cell.childWidgets.length; i++) {\n            this.getCharacterFormatForBlock(cell.childWidgets[i], start, end);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getCharacterFormatInternal = function (paragraph, selection) {\n        for (var i = 0; i < paragraph.childWidgets.length; i++) {\n            var linewidget = paragraph.childWidgets[i];\n            for (var j = 0; j < linewidget.children.length; j++) {\n                var element = linewidget.children[j];\n                if (!(element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox || element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox || element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox)) {\n                    selection.characterFormat.combineFormat(element.characterFormat);\n                }\n            }\n        }\n    };\n    /**\n     * Get next valid character format from inline\n     * @private\n     */\n    Selection.prototype.getNextValidCharacterFormat = function (inline) {\n        var startInline = this.getNextTextElement(inline);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startInline)) {\n            return inline.characterFormat;\n        }\n        var fieldBegin = undefined;\n        if (startInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n            if (fieldBegin.fieldType === 0) {\n                fieldBegin = startInline;\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(fieldBegin)) {\n            return startInline.characterFormat;\n        }\n        else {\n            return this.getNextValidCharacterFormatOfField(fieldBegin);\n        }\n    };\n    /**\n     * Get next valid paragraph format from field\n     * @private\n     */\n    Selection.prototype.getNextValidCharacterFormatOfField = function (fieldBegin) {\n        var startInline = fieldBegin;\n        if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.isLinkedFieldCharacter(fieldBegin)) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(fieldBegin.fieldSeparator)) {\n                startInline = fieldBegin.fieldEnd;\n            }\n            else {\n                startInline = fieldBegin.fieldSeparator;\n            }\n        }\n        var nextValidInline = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startInline.nextNode)) {\n            //Check the next node is a valid and returns inline.\n            nextValidInline = this.documentHelper.getNextValidElement(startInline.nextNode);\n        }\n        //If field separator/end exists at end of paragraph, then move to next paragraph.\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextValidInline)) {\n            return startInline.characterFormat;\n        }\n        return nextValidInline.characterFormat;\n    };\n    /**\n     * Return true if cursor point with in selection range\n     * @private\n     */\n    Selection.prototype.checkCursorIsInSelection = function (widget, point) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.start) || this.isEmpty || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(widget)) {\n            return false;\n        }\n        var isSelected = false;\n        do {\n            if (this.selectedWidgets.containsKey(widget)) {\n                var top_4 = void 0;\n                var left = void 0;\n                if (widget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.LineWidget) {\n                    top_4 = this.owner.selectionModule.getTop(widget);\n                    left = this.owner.selectionModule.getLeft(widget);\n                }\n                else {\n                    top_4 = widget.y;\n                    left = widget.x;\n                }\n                var widgetInfo = this.selectedWidgets.get(widget);\n                if (widgetInfo instanceof _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo) {\n                    isSelected = widgetInfo.left <= point.x && top_4 <= point.y &&\n                        top_4 + widget.height >= point.y && widgetInfo.left + widgetInfo.width >= point.x;\n                }\n                else {\n                    var widgetIn = widgetInfo;\n                    for (var j = 0; j < widgetIn.length; j++) {\n                        if (widgetIn[j] instanceof _selection_helper__WEBPACK_IMPORTED_MODULE_9__.SelectionWidgetInfo) {\n                            isSelected = widgetIn[j].left <= point.x && top_4 <= point.y &&\n                                top_4 + widget.height >= point.y && widgetIn[j].left + widgetIn[j].width >= point.x;\n                            if (isSelected) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            widget = (widget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.LineWidget) ? widget.paragraph : widget.containerWidget;\n        } while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(widget) && !isSelected);\n        return isSelected;\n    };\n    /**\n     * Copy paragraph for to selection paragraph format\n     * @private\n     */\n    Selection.prototype.copySelectionParagraphFormat = function () {\n        var format = new _index__WEBPACK_IMPORTED_MODULE_3__.WParagraphFormat();\n        this.paragraphFormat.copyToFormat(format);\n        return format;\n    };\n    /**\n     * Get hyperlink display text\n     * @private\n     */\n    Selection.prototype.getHyperlinkDisplayText = function (paragraph, fieldSeparator, fieldEnd, isNestedField, format) {\n        var para = paragraph;\n        if (para !== fieldEnd.line.paragraph) {\n            isNestedField = true;\n            return { displayText: '<<Selection in Document>>', 'isNestedField': isNestedField, 'format': format };\n        }\n        var displayText = '';\n        var lineIndex = para.childWidgets.indexOf(fieldSeparator.line);\n        var index = para.childWidgets[lineIndex].children.indexOf(fieldSeparator);\n        for (var j = lineIndex; j < para.childWidgets.length; j++) {\n            var lineWidget = para.childWidgets[j];\n            if (j !== lineIndex) {\n                index = -1;\n            }\n            for (var i = index + 1; i < lineWidget.children.length; i++) {\n                var inline = lineWidget.children[i];\n                if (inline === fieldEnd) {\n                    return { 'displayText': displayText, 'isNestedField': isNestedField, 'format': format };\n                }\n                if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                    displayText += inline.text;\n                    format = inline.characterFormat;\n                }\n                else if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                    if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 0\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.fieldEnd)) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.fieldSeparator)) {\n                            index = lineWidget.children.indexOf(inline.fieldEnd);\n                        }\n                        else {\n                            index = lineWidget.children.indexOf(inline.fieldSeparator);\n                        }\n                    }\n                }\n                else {\n                    isNestedField = true;\n                    return { 'displayText': '<<Selection in Document>>', 'isNestedField': isNestedField, 'format': format };\n                }\n            }\n        }\n        return { 'displayText': displayText, 'isNestedField': isNestedField, 'format': format };\n    };\n    /**\n     * Navigates hyperlink on mouse Event.\n     * @private\n     */\n    Selection.prototype.navigateHyperLinkOnEvent = function (cursorPoint, isTouchInput) {\n        var _this = this;\n        var widget = this.documentHelper.getLineWidget(cursorPoint);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(widget)) {\n            var hyperLinkField = this.getHyperLinkFieldInCurrentSelection(widget, cursorPoint);\n            //Invokes Hyperlink navigation events.\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(hyperLinkField)) {\n                this.documentHelper.updateTextPositionForSelection(cursorPoint, 1);\n                this.fireRequestNavigate(hyperLinkField);\n                setTimeout(function () {\n                    if (_this.viewer) {\n                        _this.documentHelper.isTouchInput = isTouchInput;\n                        _this.documentHelper.updateFocus();\n                        _this.documentHelper.isTouchInput = false;\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getLinkText = function (fieldBegin, copyAddress) {\n        var hyperlink = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.Hyperlink(fieldBegin, this);\n        var link = hyperlink.navigationLink;\n        var screenTip = hyperlink.screenTip;\n        if (copyAddress) {\n            if (hyperlink.localReference.length > 0) {\n                if (hyperlink.localReference[0] === '_' && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(link) || link.length === 0)) {\n                    link = 'Current Document';\n                }\n                else {\n                    if (hyperlink.isCrossRef) {\n                        link += hyperlink.localReference;\n                    }\n                    else {\n                        link += '#' + hyperlink.localReference;\n                    }\n                }\n            }\n            hyperlink.destroy();\n            return link;\n        }\n        else {\n            hyperlink.destroy();\n            return screenTip;\n        }\n    };\n    /**\n     * Set Hyperlink content to tool tip element\n     * @private\n     */\n    Selection.prototype.setHyperlinkContentToToolTip = function (fieldBegin, widget, xPos, isFormField) {\n        if (fieldBegin) {\n            if (this.owner.contextMenuModule &&\n                this.owner.contextMenuModule.contextMenuInstance.element.style.display === 'block') {\n                return;\n            }\n            if (!this.toolTipElement) {\n                this.toolTipElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.createElement)('div', { className: 'e-de-tooltip' });\n                this.documentHelper.viewerContainer.appendChild(this.toolTipElement);\n                this.screenTipElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.createElement)('p');\n                this.toolTipElement.appendChild(this.screenTipElement);\n                this.toolTipTextElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.createElement)('p', { styles: 'font-weight:bold' });\n                this.toolTipElement.appendChild(this.toolTipTextElement);\n            }\n            this.toolTipElement.style.display = 'block';\n            var l10n = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.L10n('documenteditor', this.owner.defaultLocale);\n            l10n.setLocale(this.owner.locale);\n            var toolTipText = l10n.getConstant('Click to follow link');\n            if (this.owner.useCtrlClickToFollowHyperlink) {\n                if (this.documentHelper.isIosDevice) {\n                    toolTipText = 'Command+' + toolTipText;\n                }\n                else {\n                    toolTipText = 'Ctrl+' + toolTipText;\n                }\n            }\n            var linkText = this.getScreenTipText(fieldBegin);\n            if (isFormField) {\n                var helpText = fieldBegin.formFieldData.helpText;\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(helpText) || helpText === '') {\n                    return;\n                }\n                this.screenTipElement.innerText = helpText;\n            }\n            else {\n                this.screenTipElement.innerText = linkText;\n                this.toolTipTextElement.innerText = toolTipText;\n            }\n            var position = this.getTooltipPosition(fieldBegin.line, xPos, this.toolTipElement, false);\n            this.showToolTip(position.x, position.y);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.toolTipField) && fieldBegin !== this.toolTipField) {\n                this.toolTipObject.position = { X: position.x, Y: position.y };\n            }\n            this.toolTipObject.show();\n            this.toolTipField = fieldBegin;\n        }\n        else {\n            this.hideToolTip();\n        }\n    };\n    /**\n    * Get screenTip text\n    * @private\n    */\n    Selection.prototype.getScreenTipText = function (fieldBegin) {\n        var hyperlink = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.Hyperlink(fieldBegin, this);\n        if (!hyperlink.screenTip && !hyperlink.localReference) {\n            return hyperlink.navigationLink;\n        }\n        else if (hyperlink.screenTip) {\n            return hyperlink.screenTip;\n        }\n        else {\n            return hyperlink.localReference;\n        }\n    };\n    /**\n     * Set Hyperlink content to tool tip element\n     * @private\n     */\n    Selection.prototype.setFootnoteContentToToolTip = function (footnote, widget, xPos) {\n        if (footnote) {\n            if (this.owner.contextMenuModule.contextMenuInstance.element.style.display === 'block' &&\n                this.owner.contextMenuModule) {\n                return;\n            }\n            if (!this.toolTipElement) {\n                this.toolTipElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.createElement)('div', { className: 'e-de-tooltip' });\n                this.documentHelper.viewerContainer.appendChild(this.toolTipElement);\n            }\n            this.toolTipElement.style.display = 'block';\n            var ln = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.L10n('documenteditor', this.owner.defaultLocale);\n            ln.setLocale(this.owner.locale);\n            var toolTipText = void 0;\n            if (footnote.footnoteType === 'Endnote') {\n                toolTipText = ln.getConstant('Click to View/Edit Endnote');\n            }\n            else if (footnote.footnoteType === 'Footnote') {\n                toolTipText = ln.getConstant('Click to View/Edit Footnote');\n            }\n            this.toolTipElement.innerHTML = '<b>' + toolTipText + '</b>';\n            var positions = this.getTooltipPosition(footnote.line, xPos, this.toolTipElement, false);\n            this.showToolTip(positions.x, positions.y);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.toolTipField)) {\n                this.toolTipObject.position = { X: positions.x, Y: positions.y };\n            }\n            this.toolTipObject.show();\n            // this.toolTipField = fieldBegin;\n        }\n        else {\n            this.hideToolTip();\n        }\n    };\n    /**\n     * Set locked content info to tool tip element\n     * @private\n     */\n    Selection.prototype.setLockInfoTooptip = function (widget, xPos, user) {\n        if (widget) {\n            if (this.owner.contextMenuModule &&\n                this.owner.contextMenuModule.contextMenuInstance.element.style.display === 'block') {\n                return;\n            }\n            var toolTipElement = this.toolTipElement;\n            if (!this.toolTipElement) {\n                toolTipElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.createElement)('div', { className: 'e-de-tooltip' });\n                this.documentHelper.viewerContainer.appendChild(toolTipElement);\n                this.toolTipElement = toolTipElement;\n            }\n            toolTipElement.style.display = 'block';\n            var l10n = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.L10n('documenteditor', this.owner.defaultLocale);\n            l10n.setLocale(this.owner.locale);\n            var toolTipInfo = l10n.getConstant('This region is locked by');\n            toolTipElement.innerHTML = toolTipInfo + ' <b>' + user + '</b>';\n            var position = this.getTooltipPosition(widget, xPos, toolTipElement, false);\n            this.showToolTip(position.x, position.y);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.toolTipField) && user !== this.toolTipField) {\n                this.toolTipObject.position = { X: position.x, Y: position.y };\n            }\n            this.toolTipObject.show();\n            this.toolTipField = user;\n        }\n        else {\n            this.hideToolTip();\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getTooltipPosition = function (widget, xPos, toolTipElement, isFormField) {\n        var widgetTop = this.getTop(widget) * this.documentHelper.zoomFactor;\n        var page = this.getPage(widget.paragraph);\n        var containerWidth = this.documentHelper.viewerContainer.getBoundingClientRect().width + this.documentHelper.viewerContainer.scrollLeft;\n        var left = page.boundingRectangle.x + xPos * this.documentHelper.zoomFactor;\n        if ((left + toolTipElement.clientWidth + 10) > containerWidth) {\n            left = left - ((toolTipElement.clientWidth - (containerWidth - left)) + 15);\n        }\n        var offsetHeight = !isFormField ? toolTipElement.offsetHeight : 0;\n        var top = this.getPageTop(page) + (widgetTop - offsetHeight);\n        top = top > this.documentHelper.viewerContainer.scrollTop ? top : top + widget.height + offsetHeight;\n        return new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.Point(left, top);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.updateSelectionInfo = function (info) {\n        var cells = this.selectedWidgets.keys;\n        if (cells[0] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget && cells[cells.length - 1] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n            if (cells.length > 0) {\n                var firstcell = cells[0];\n                var lastCell = cells[cells.length - 1];\n                var firstrow = firstcell.ownerRow;\n                var lastRow = lastCell.ownerRow;\n                var startCell = firstrow.getCell(firstrow.rowIndex, undefined, 0);\n                var firstPara = this.owner.documentHelper.getFirstParagraphInCell(startCell);\n                info.start = this.owner.documentHelper.selection.getHierarchicalIndex(firstPara, \"0\");\n                var lastCellInRow = lastRow.getCell(lastRow.rowIndex, undefined, lastRow.childWidgets.length - 1);\n                var lastPara = this.getLastParagraph(lastCellInRow);\n                var offset = this.getParagraphLength(lastPara);\n                info.end = this.owner.documentHelper.selection.getHierarchicalIndex(lastPara, offset.toString());\n            }\n        }\n        return info;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.createPasteElement = function (top, left) {\n        var items;\n        var locale = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.L10n('documenteditor', this.owner.defaultLocale);\n        locale.setLocale(this.owner.locale);\n        switch (this.currentPasteAction) {\n            case 'DefaultPaste':\n                items = [\n                    {\n                        text: locale.getConstant('Keep source formatting'),\n                        iconCss: 'e-icons e-de-paste-source'\n                    },\n                    {\n                        text: locale.getConstant('Match destination formatting'),\n                        iconCss: 'e-icons e-de-paste-merge'\n                    },\n                    {\n                        text: locale.getConstant('Text only'),\n                        iconCss: 'e-icons e-de-paste-text'\n                    }\n                ];\n                break;\n            case 'TextOnly':\n                items = [\n                    {\n                        text: locale.getConstant('Text only'),\n                        iconCss: 'e-icons e-de-paste-text'\n                    }\n                ];\n                break;\n            case 'InsertAsColumns':\n            case 'OverwriteCells':\n            case 'InsertAsRows':\n                items = [\n                    {\n                        text: locale.getConstant('NestTable'),\n                        iconCss: 'e-icons e-de-paste-nested-table'\n                    },\n                    {\n                        text: locale.getConstant('InsertAsRows'),\n                        iconCss: 'e-icons e-de-paste-row'\n                    }\n                ];\n                if (this.currentPasteAction === 'InsertAsColumns') {\n                    var obj = {\n                        text: locale.getConstant('InsertAsColumns'),\n                        iconCss: 'e-icons e-de-paste-column'\n                    };\n                    items.unshift(obj);\n                }\n                else if (this.currentPasteAction === 'OverwriteCells') {\n                    var obj = {\n                        text: locale.getConstant('OverwriteCells'),\n                        iconCss: 'e-icons e-de-paste-overwrite-cells'\n                    };\n                    items.splice(2, 0, obj);\n                }\n                break;\n        }\n        if (!this.pasteElement) {\n            this.pasteElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.createElement)('div', { className: 'e-de-tooltip' });\n            this.documentHelper.viewerContainer.appendChild(this.pasteElement);\n            var splitButtonEle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.createElement)('button', { id: this.owner.containerId + '_iconsplitbtn' });\n            this.pasteElement.appendChild(splitButtonEle);\n            this.pasteDropDwn = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_10__.DropDownButton({\n                items: items, iconCss: 'e-icons e-de-paste', select: this.pasteOptions\n            });\n            this.pasteDropDwn.appendTo(splitButtonEle);\n        }\n        else {\n            this.pasteDropDwn.items = items;\n        }\n        this.pasteElement.style.display = 'block';\n        this.pasteElement.style.position = 'absolute';\n        this.pasteElement.style.left = left;\n        this.pasteElement.style.top = top;\n        this.pasteDropDwn.dataBind();\n    };\n    /**\n    * Returns an array of context-based paste options.\n    *\n    * @returns {(PasteOptions | TablePasteOptions)[]} An array containing the available paste options.\n    */\n    Selection.prototype.getContextBasedPasteOptions = function (sfdtContent) {\n        // Parse the sfdt content\n        var content = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.getSfdtDocument(sfdtContent);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(content.optimizeSfdt) && content.optimizeSfdt) {\n            this.owner.editorModule.keywordIndex = 1;\n        }\n        else {\n            this.owner.editorModule.keywordIndex = 0;\n        }\n        var widgets = [];\n        this.owner.editorModule.getBlocks(content, true, widgets, [], [], true);\n        var selection = this.documentHelper.selection;\n        // Check the sfdt has table alone \n        if (selection.start.paragraph.isInsideTable && selection.end.paragraph.isInsideTable) {\n            var isTablePaste = false;\n            if (widgets.length === 1) {\n                var childWidgets = widgets[0].childWidgets;\n                if ((childWidgets.length < 3)) {\n                    if (childWidgets.length === 1 && childWidgets[0] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget || childWidgets.length === 2 && childWidgets[0] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget && childWidgets[1].isEmpty()) {\n                        isTablePaste = true;\n                    }\n                }\n            }\n            if (isTablePaste) {\n                var startCell = selection.start.paragraph.associatedCell;\n                var endCell = selection.end.paragraph.associatedCell;\n                var newTable = widgets[0].childWidgets[0];\n                // tslint:disable-next-line:max-line-length\n                if (startCell.ownerTable.equals(endCell.ownerTable)) {\n                    if (selection.start.paragraph.associatedCell.rowIndex === 0 && selection.end.paragraph.associatedCell.rowIndex === 0\n                        && startCell.equals(endCell) && !this.isCellSelected(startCell, selection.start, selection.end)) {\n                        return ['NewColumn', 'NestTable', 'NewRow'];\n                    }\n                    else {\n                        return ['NestTable', 'NewRow', 'OverwriteCells'];\n                    }\n                }\n            }\n        }\n        return ['KeepSourceFormatting', 'MergeWithExistingFormatting', 'KeepTextOnly'];\n    };\n    /**\n     * Show hyperlink tooltip\n     * @private\n     */\n    Selection.prototype.showToolTip = function (x, y) {\n        if (!this.toolTipObject) {\n            this.toolTipObject = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_8__.Popup(this.toolTipElement, {\n                height: 'auto',\n                width: 'auto',\n                relateTo: this.documentHelper.viewerContainer.parentElement,\n                position: { X: x, Y: y }\n            });\n        }\n    };\n    /**\n     * Hide tooltip object\n     * @private\n     */\n    Selection.prototype.hideToolTip = function () {\n        this.toolTipField = undefined;\n        if (this.toolTipObject) {\n            this.toolTipElement.style.display = 'none';\n            this.toolTipObject.hide();\n            this.toolTipObject.destroy();\n            this.toolTipObject = undefined;\n        }\n    };\n    /**\n     * Return hyperlink field\n     * @private\n     */\n    Selection.prototype.getHyperLinkFieldInCurrentSelection = function (widget, cursorPosition, isFormField) {\n        var inline = undefined;\n        var top = this.getTop(widget);\n        var lineStartLeft = this.getLineStartLeft(widget);\n        var leftIndent = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(widget.paragraph.paragraphFormat.leftIndent);\n        var rightIndent = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(widget.paragraph.paragraphFormat.rightIndent);\n        if (cursorPosition.y < top || cursorPosition.y > top + widget.height\n            || cursorPosition.x < lineStartLeft || cursorPosition.x > lineStartLeft + widget.paragraph.width + leftIndent + rightIndent) {\n            return undefined;\n        }\n        var left = widget.paragraph.x;\n        var elementValues = this.getFirstElement(widget, left);\n        left = elementValues.left;\n        var element = elementValues.element;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element)) {\n            var width = this.documentHelper.textHelper.getParagraphMarkWidth(widget.paragraph.characterFormat);\n            if (cursorPosition.x <= lineStartLeft + width || cursorPosition.x >= lineStartLeft + width) {\n                //Check if paragraph is within a field result.\n                var checkedFields = [];\n                var field = this.getHyperLinkFields(widget.paragraph, checkedFields, false, isFormField);\n                checkedFields = [];\n                checkedFields = undefined;\n                return field;\n            }\n        }\n        else {\n            var renderedChild = widget.renderedElements;\n            if (cursorPosition.x > left + element.margin.left) {\n                for (var i = renderedChild.indexOf(element); i < renderedChild.length; i++) {\n                    element = renderedChild[i];\n                    if (cursorPosition.x < left + element.margin.left + element.width || i === renderedChild.length - 1) {\n                        break;\n                    }\n                    left += element.margin.left + element.width;\n                }\n            }\n            inline = element;\n            var width = element.margin.left + element.width;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline.nextNode)) {\n                //Include width of Paragraph mark.\n                width += this.documentHelper.textHelper.getParagraphMarkWidth(inline.line.paragraph.characterFormat);\n            }\n            if (cursorPosition.x <= left + width) {\n                //Check if inline is within a field result.\n                var checkedFields = [];\n                var field = this.getHyperLinkFieldInternal(inline.line.paragraph, inline, checkedFields, false, isFormField);\n                checkedFields = [];\n                checkedFields = undefined;\n                return field;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Return FootnoteElementBox\n     * @private\n     */\n    Selection.prototype.getFootNoteElementInCurrentSelection = function (lineWidget, position) {\n        var inline = undefined;\n        var top = this.getTop(lineWidget);\n        var lineStartInLeft = this.getLineStartLeft(lineWidget);\n        if (position.y < top || position.y > top + lineWidget.height\n            || position.x < lineStartInLeft\n            || position.x > lineStartInLeft + lineWidget.paragraph.width) {\n            return undefined;\n        }\n        var leftLength = lineWidget.paragraph.x;\n        var elementValues = this.getFirstElement(lineWidget, leftLength);\n        leftLength = elementValues.left;\n        var element = elementValues.element;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element)) {\n            var width = this.documentHelper.textHelper.getParagraphMarkWidth(lineWidget.paragraph.characterFormat);\n            if (position.x <= lineStartInLeft + width || position.x >= lineStartInLeft + width) {\n                //Check if paragraph is within a field result.\n                var inlineObj = this.documentHelper.selection.start.currentWidget.getInline(this.documentHelper.selection.start.offset, 0);\n                var footNote = inlineObj.element;\n                if (footNote instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootnoteElementBox) {\n                    return footNote;\n                }\n                else {\n                    return undefined;\n                }\n            }\n        }\n        else {\n            if (position.x > leftLength + element.margin.left) {\n                for (var i = lineWidget.children.indexOf(element); i < lineWidget.children.length; i++) {\n                    element = lineWidget.children[i];\n                    if (position.x < leftLength + element.margin.left + element.width || i === lineWidget.children.length - 1) {\n                        break;\n                    }\n                    leftLength += element.margin.left + element.width;\n                }\n            }\n            if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootnoteElementBox) {\n                inline = element;\n            }\n            var width = element.margin.left + element.width;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element.nextNode)) {\n                //Include width of Paragraph mark.\n                width += this.documentHelper.textHelper.getParagraphMarkWidth(element.line.paragraph.characterFormat);\n            }\n            if (position.x <= leftLength + width) {\n                return inline;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Return field if paragraph contain hyperlink field\n     * @private\n     */\n    Selection.prototype.getHyperlinkField = function (isRetrieve) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.end)) {\n            return undefined;\n        }\n        var index = 0;\n        var selection = this.documentHelper.selection;\n        var start = selection.start;\n        var end = selection.end;\n        if (!selection.isForward) {\n            start = selection.end;\n            end = selection.start;\n            ;\n        }\n        var currentInline = this.end.currentWidget.getInline(end.offset, index);\n        index = currentInline.index;\n        var inline = currentInline.element;\n        var checkedFields = [];\n        var field = undefined;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline)) {\n            field = this.getHyperLinkFields(this.end.paragraph, checkedFields, isRetrieve);\n        }\n        else if (this.documentHelper.isFormFillProtectedMode && inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox\n            && inline.previousNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.previousNode.fieldType === 1) {\n            field = undefined;\n        }\n        else {\n            var paragraph = inline.line.paragraph;\n            field = this.getHyperLinkFieldInternal(paragraph, inline, checkedFields, isRetrieve, false);\n        }\n        checkedFields = [];\n        return field;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getHyperLinkFields = function (paragraph, checkedFields, isRetrieve, checkFormField) {\n        for (var i = 0; i < this.documentHelper.fields.length; i++) {\n            if (checkedFields.indexOf(this.documentHelper.fields[i]) !== -1 || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.documentHelper.fields[i].fieldSeparator)) {\n                continue;\n            }\n            else {\n                checkedFields.push(this.documentHelper.fields[i]);\n            }\n            var field = this.getFieldCode(this.documentHelper.fields[i]);\n            field = field.trim().toLowerCase();\n            var isParagraph = this.paragraphIsInFieldResult(this.documentHelper.fields[i], paragraph);\n            if ((isRetrieve || (!isRetrieve && field.match('hyperlink '))) && isParagraph) {\n                return this.documentHelper.fields[i];\n            }\n            if (isParagraph && checkFormField && this.documentHelper.fields[i].formFieldData) {\n                return this.documentHelper.fields[i];\n            }\n            if ((isRetrieve || (!isRetrieve && field.match('ref '))) && isParagraph) {\n                return this.documentHelper.fields[i];\n            }\n        }\n        // if (paragraph.containerWidget instanceof BodyWidget && !(paragraph instanceof WHeaderFooter)) {\n        //     return this.getHyperLinkFields((paragraph.con as WCompositeNode), checkedFields);\n        // }\n        return undefined;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getHyperLinkFieldInternal = function (paragraph, inline, fields, isRetrieve, checkFormField) {\n        for (var i = 0; i < this.documentHelper.fields.length; i++) {\n            if (fields.indexOf(this.documentHelper.fields[i]) !== -1 || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.documentHelper.fields[i].fieldSeparator)) {\n                continue;\n            }\n            else {\n                fields.push(this.documentHelper.fields[i]);\n            }\n            var fieldCode = this.getFieldCode(this.documentHelper.fields[i]);\n            fieldCode = fieldCode.trim().toLowerCase();\n            var fieldBegin = this.documentHelper.fields[i];\n            var fieldEnd = fieldBegin.fieldEnd;\n            if (isRetrieve && fieldBegin.nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox && fieldBegin.nextNode.reference) {\n                fieldEnd = fieldBegin.nextNode.reference;\n            }\n            var isInline = (this.inlineIsInFieldResult(fieldBegin, fieldEnd, fieldBegin.fieldSeparator, inline, isRetrieve) || this.isImageField());\n            if ((isRetrieve || (!isRetrieve && fieldCode.match('hyperlink '))) && isInline) {\n                return this.documentHelper.fields[i];\n            }\n            if (isInline && checkFormField && this.documentHelper.fields[i].formFieldData) {\n                return this.documentHelper.fields[i];\n            }\n            if ((isRetrieve || (!isRetrieve && fieldCode.match('ref '))) && isInline) {\n                return this.documentHelper.fields[i];\n            }\n        }\n        if (paragraph.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget && !(paragraph instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.HeaderFooterWidget)) {\n            return this.getHyperLinkFieldInternal(paragraph.containerWidget, inline, fields, isRetrieve, checkFormField);\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getBlock = function (currentIndex) {\n        if (currentIndex === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentIndex)) {\n            return undefined;\n        }\n        var index = { index: currentIndex };\n        var page = this.start.getPage(index);\n        var bodyIndex = index.index.indexOf(';');\n        var value = index.index.substring(0, bodyIndex);\n        index.index = index.index.substring(bodyIndex).replace(';', '');\n        var bodyWidget = page.bodyWidgets[parseInt(value, 10)];\n        return this.getBlockInternal(bodyWidget, index.index);\n    };\n    /**\n     * Return Block relative to position\n     * @private\n     */\n    Selection.prototype.getBlockInternal = function (widget, position) {\n        if (position === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(position)) {\n            return undefined;\n        }\n        var index = position.indexOf(';');\n        var value = position.substring(0, index);\n        position = position.substring(index).replace(';', '');\n        var node = widget;\n        // if (node instanceof Widget && value === 'HF') {\n        //     //Gets the block in Header footers.\n        //     let blockObj: BlockInfo = this.getBlock((node as WSection).headersFooters, position);\n        //     return { 'node': (!isNullOrUndefined(blockObj)) ? blockObj.node : undefined, 'position': (!isNullOrUndefined(blockObj)) ? blockObj.position : undefined };\n        // }\n        index = parseInt(value, 10);\n        if (index >= 0 && index < widget.childWidgets.length) {\n            var child = widget.childWidgets[(index)];\n            if (position.indexOf(';') >= 0) {\n                if (child instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                    if (position.indexOf(';') >= 0) {\n                        position = '0';\n                    }\n                    return child;\n                }\n                if (child instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BlockWidget) {\n                    var blockObj = this.getBlockInternal(child, position);\n                    return blockObj;\n                }\n            }\n            else {\n                return child;\n            }\n        }\n        else {\n            return node;\n        }\n        return node;\n    };\n    /**\n     * Return true if inline is in field result\n     * @private\n     */\n    Selection.prototype.inlineIsInFieldResult = function (fieldBegin, fieldEnd, fieldSeparator, inline, isRetrieve) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(fieldEnd) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(fieldSeparator)) {\n            if (this.isExistBeforeInline(fieldSeparator, inline)) {\n                return this.isExistAfterInline(fieldEnd, inline, isRetrieve);\n            }\n        }\n        return false;\n    };\n    /**\n     * Retrieve true if paragraph is in field result\n     * @private\n     */\n    Selection.prototype.paragraphIsInFieldResult = function (fieldBegin, paragraph) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(fieldBegin.fieldEnd) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(fieldBegin.fieldSeparator)) {\n            var fieldParagraph = fieldBegin.fieldSeparator.line.paragraph;\n            if (fieldBegin.fieldSeparator.line.paragraph === paragraph\n                || this.isExistBefore(fieldParagraph, paragraph)) {\n                var currentParagraph = fieldBegin.fieldEnd.line.paragraph;\n                return (currentParagraph !== paragraph && this.isExistAfter(fieldParagraph, paragraph));\n            }\n        }\n        return false;\n    };\n    /**\n     * Return true if image is In field\n     * @private\n     */\n    Selection.prototype.isImageField = function () {\n        if (this.start.paragraph.isEmpty() || this.end.paragraph.isEmpty()) {\n            return false;\n        }\n        var startPosition = this.start;\n        var endPosition = this.end;\n        if (!this.isForward) {\n            startPosition = this.end;\n            endPosition = this.start;\n        }\n        var indexInInline = 0;\n        var inlineInfo = startPosition.paragraph.getInline(startPosition.offset, indexInInline);\n        var inline = inlineInfo.element;\n        indexInInline = inlineInfo.index;\n        if (indexInInline === inline.length) {\n            inline = this.getNextRenderedElementBox(inline, indexInInline);\n        }\n        inlineInfo = endPosition.paragraph.getInline(endPosition.offset, indexInInline);\n        var endInline = inlineInfo.element;\n        indexInInline = inlineInfo.index;\n        if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 0\n            && endInline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && endInline.fieldType === 1 && inline.fieldSeparator) {\n            var fieldValue = inline.fieldSeparator.nextNode;\n            if (fieldValue instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox && fieldValue.nextNode === endInline) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Return true if selection is in Form field\n     * @private\n     */\n    Selection.prototype.isFormField = function () {\n        var inline = this.currentFormField;\n        if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.formFieldData) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Return true if selection is in reference field\n     * @private\n     */\n    Selection.prototype.isReferenceField = function (field) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(field)) {\n            field = this.getHyperlinkField(true);\n        }\n        if (field) {\n            var fieldCode = this.getFieldCode(field);\n            fieldCode = fieldCode.toLowerCase();\n            if (field instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && fieldCode.match('ref ')) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Return true if selection is in text form field\n     * @private\n     */\n    Selection.prototype.isInlineFormFillMode = function (field) {\n        if (this.documentHelper.isInlineFormFillProtectedMode) {\n            field = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(field) ? this.currentFormField : field;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(field)) {\n                field = this.getCurrentFormField();\n            }\n            if (field) {\n                if (field.formFieldData instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextFormField && field.formFieldData.type === 'Text') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getFormFieldType = function (formField) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(formField)) {\n            formField = this.currentFormField;\n        }\n        if (formField instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n            if (formField.formFieldData instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextFormField) {\n                return 'Text';\n            }\n            else if (formField.formFieldData instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.CheckBoxFormField) {\n                return 'CheckBox';\n            }\n            else if (formField.formFieldData instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.DropDownFormField) {\n                return 'DropDown';\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Get selected form field type\n     * @private\n     */\n    Selection.prototype.getCurrentFormField = function (checkFieldResult) {\n        var field;\n        if (checkFieldResult || this.documentHelper.isFormFillProtectedMode && this.owner.documentEditorSettings.formFieldSettings &&\n            this.owner.documentEditorSettings.formFieldSettings.formFillingMode === 'Inline') {\n            for (var i = 0; i < this.documentHelper.formFields.length; i++) {\n                var formField = this.documentHelper.formFields[i];\n                var start = this.start;\n                var end = this.end;\n                if (!this.isForward) {\n                    start = this.end;\n                    end = this.start;\n                }\n                if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.isLinkedFieldCharacter(formField)) {\n                    var offset = formField.fieldSeparator.line.getOffset(formField.fieldSeparator, 1);\n                    var fieldStart = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n                    fieldStart.setPositionParagraph(formField.fieldSeparator.line, offset);\n                    var fieldEndElement = formField.fieldEnd;\n                    offset = fieldEndElement.line.getOffset(fieldEndElement, 0);\n                    var fieldEnd = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n                    fieldEnd.setPositionParagraph(fieldEndElement.line, offset);\n                    if ((start.isExistAfter(fieldStart) || start.isAtSamePosition(fieldStart))\n                        && (end.isExistBefore(fieldEnd) || end.isAtSamePosition(fieldEnd))) {\n                        field = formField;\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            field = this.getHyperlinkField(true);\n        }\n        if (field instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && field.fieldType === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(field.formFieldData)) {\n            return field;\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getCurrentTextFrame = function () {\n        var container = this.start.paragraph.containerWidget;\n        do {\n            if (container instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextFrame) {\n                return container;\n            }\n            if (container) {\n                container = container.containerWidget;\n            }\n        } while (container);\n        return null;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.isTableSelected = function (isNested) {\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(start.paragraph.associatedCell) ||\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(end.paragraph.associatedCell)) {\n            return false;\n        }\n        var table = start.paragraph.associatedCell.ownerTable.getSplitWidgets();\n        var firstParagraph = this.getFirstBlockInFirstCell(table[0]);\n        var lastParagraph = this.getLastBlockInLastCell(table[table.length - 1]);\n        if (isNested) {\n            var nestedTable = lastParagraph.associatedCell.ownerTable;\n            while (nestedTable.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n                nestedTable = nestedTable.containerWidget.ownerTable;\n            }\n            lastParagraph = this.getLastBlockInLastCell(nestedTable);\n        }\n        return start.paragraph.associatedCell.equals(firstParagraph.associatedCell) &&\n            end.paragraph.associatedCell.equals(lastParagraph.associatedCell)\n            && (!firstParagraph.associatedCell.equals(lastParagraph.associatedCell) || (start.offset === 0\n                && end.offset === this.getLineLength(lastParagraph.lastChild) + 1));\n    };\n    /**\n     * Select List Text\n     * @private\n     */\n    Selection.prototype.selectListText = function () {\n        var lineWidget = this.documentHelper.selectionLineWidget;\n        var endOffset = '0';\n        var selectionIndex = lineWidget.getHierarchicalIndex(endOffset);\n        var startPosition = this.getTextPosition(selectionIndex);\n        var endPosition = this.getTextPosition(selectionIndex);\n        this.isSelectList = true;\n        this.selectRange(startPosition, endPosition);\n        this.isSelectList = false;\n        this.highlightListText(this.documentHelper.selectionLineWidget);\n        this.contextTypeInternal = 'List';\n    };\n    /**\n     * Manually select the list text\n     * @private\n     */\n    Selection.prototype.highlightListText = function (linewidget) {\n        var width = linewidget.children[0].width;\n        var left = this.documentHelper.getLeftValue(linewidget);\n        var top = linewidget.paragraph.y;\n        this.createHighlightBorder(linewidget, width, left, top, false);\n        this.documentHelper.isListTextSelected = true;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.updateImageSize = function (imageFormat) {\n        this.owner.isShiftingEnabled = true;\n        var startPosition = this.start;\n        var endPosition = this.end;\n        if (!this.isForward) {\n            startPosition = this.end;\n            endPosition = this.start;\n        }\n        var inline = null;\n        var index = 0;\n        var paragraph = startPosition.paragraph;\n        if (paragraph === endPosition.paragraph\n            && startPosition.offset + 1 === endPosition.offset) {\n            var inlineObj = paragraph.getInline(endPosition.offset, index);\n            inline = inlineObj.element;\n            index = inlineObj.index;\n        }\n        if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox || inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox) {\n            var width = inline.width;\n            var height = inline.height;\n            var alternateText = inline.alternateText;\n            inline.width = imageFormat.width;\n            inline.height = imageFormat.height;\n            inline.alternateText = imageFormat.alternatetext;\n            imageFormat.width = width;\n            imageFormat.height = height;\n            imageFormat.alternatetext = alternateText;\n            if (paragraph !== null && paragraph.containerWidget !== null && this.owner.editorModule) {\n                var lineIndex = paragraph.childWidgets.indexOf(inline.line);\n                var elementIndex = inline.line.children.indexOf(inline);\n                this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, elementIndex);\n                this.highlightSelection(false);\n            }\n        }\n    };\n    /**\n     * Gets selected table content\n     * @private\n     */\n    Selection.prototype.getSelectedCellsInTable = function (table, startCell, endCell) {\n        var startColumnIndex = startCell.columnIndex;\n        var endColumnIndex = endCell.columnIndex + endCell.cellFormat.columnSpan - 1;\n        var startRowindex = startCell.ownerRow.index;\n        var endRowIndex = endCell.ownerRow.index;\n        var cells = [];\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            if (row.index >= startRowindex && row.index <= endRowIndex) {\n                for (var j = 0; j < row.childWidgets.length; j++) {\n                    var cell = row.childWidgets[j];\n                    if (cell.columnIndex >= startColumnIndex && cell.columnIndex <= endColumnIndex) {\n                        cells.push(cell);\n                    }\n                }\n            }\n            if (row.index > endRowIndex) {\n                break;\n            }\n        }\n        return cells;\n        // return html;\n    };\n    /**\n     * Copies the selected content to clipboard.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.copy = function () {\n        if (this.isEmpty) {\n            return;\n        }\n        this.copySelectedContent(false);\n    };\n    /**\n     * @private\n     *\n     * @returns {void}\n     */\n    Selection.prototype.copySelectedContent = function (isCut) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.sfdtExportModule)) {\n            return;\n        }\n        this.documentHelper.isCopying = true;\n        this.htmlContent = this.getHtmlContent();\n        this.copyToClipboard();\n        this.documentHelper.isCopying = false;\n        if (isCut && this.owner.editorModule) {\n            this.owner.editorModule.handleCut(this);\n        }\n        if (this.owner.enableAutoFocus) {\n            this.documentHelper.updateFocus();\n        }\n    };\n    /**\n     * Write the selected content as SFDT.\n     * @returns SFDT Object.\n     */\n    Selection.prototype.writeSfdt = function () {\n        var startPosition = this.start;\n        var endPosition = this.end;\n        if (!this.isForward) {\n            startPosition = this.end;\n            endPosition = this.start;\n        }\n        return (this.owner.sfdtExportModule.write((this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0), startPosition.currentWidget, startPosition.offset, endPosition.currentWidget, endPosition.offset, true));\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getHtmlContent = function () {\n        var documentContent = this.writeSfdt();\n        this.sfdtContent = JSON.stringify(documentContent);\n        if (this.owner.editorModule) {\n            this.owner.editorModule.copiedData = JSON.stringify(documentContent);\n        }\n        var isOptimizedSfdt = this.owner.documentEditorSettings.optimizeSfdt;\n        return this.htmlWriter.writeHtml(documentContent, isOptimizedSfdt);\n    };\n    Selection.prototype.copyToClipboard = function (htmlContent) {\n        window.getSelection().removeAllRanges();\n        //Skip the copy operation Using shadow DOM if it is mobile device or IE browser.\n        var isSafariOnMac = (navigator.vendor && navigator.vendor.indexOf('Apple') > -1 &&\n            navigator.userAgent &&\n            navigator.userAgent.indexOf('Macintosh') > -1 &&\n            navigator.userAgent.indexOf('Safari') > -1 &&\n            navigator.userAgent.indexOf('Chrome') === -1);\n        var isMobileDeviceOrInternetExplorer = /Android|Windows Phone|iPhone|Trident|webOS/i.test(navigator.userAgent) || isSafariOnMac;\n        var shadowRoot;\n        var div = document.createElement('div');\n        div.style.left = '-10000px';\n        div.style.top = '-10000px';\n        div.style.position = 'relative';\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(htmlContent)) {\n            div.innerHTML = htmlContent;\n        }\n        else if (isSafariOnMac) {\n            div.innerText = 'copy';\n        }\n        if (!isMobileDeviceOrInternetExplorer) {\n            shadowRoot = document.createElement('div');\n            var shadowDOM = shadowRoot.attachShadow({ mode: 'open' });\n            shadowDOM.appendChild(div);\n            document.body.appendChild(shadowRoot);\n        }\n        else {\n            document.body.appendChild(div);\n        }\n        if (navigator !== undefined && navigator.userAgent.indexOf('Firefox') !== -1) {\n            div.contentEditable = 'true';\n        }\n        var range = document.createRange();\n        range.selectNodeContents(div);\n        window.getSelection().addRange(range);\n        var copySuccess = false;\n        try {\n            copySuccess = document.execCommand('copy');\n        }\n        catch (e) {\n            // Copying data to Clipboard can potentially fail - for example, if another application is holding Clipboard open.       \n        }\n        finally {\n            window.getSelection().removeAllRanges();\n            div.parentNode.removeChild(div);\n            if (!isMobileDeviceOrInternetExplorer) {\n                shadowRoot.parentNode.removeChild(shadowRoot);\n            }\n        }\n        return copySuccess;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.onCopy = function (event) {\n        if (event.clipboardData && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.htmlContent)) {\n            event.clipboardData.clearData();\n            event.clipboardData.setData('text/html', this.htmlContent);\n            event.clipboardData.setData('text/plain', this.text);\n            event.clipboardData.setData('application/json', JSON.stringify(this.sfdtContent));\n            this.htmlContent = undefined;\n            this.sfdtContent = undefined;\n        }\n    };\n    // Caret implementation starts\n    /**\n     * Shows caret in current selection position.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.showCaret = function () {\n        var page = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.documentHelper.currentPage) ? this.documentHelper.currentPage : this.documentHelper.currentRenderingPage;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(page) || this.documentHelper.isRowOrCellResizing || (this.owner.enableImageResizerMode && this.owner.imageResizerModule.isImageResizerVisible && !this.owner.imageResizerModule.isShapeResize)) {\n            return;\n        }\n        var left = page.boundingRectangle.x;\n        var right;\n        if (this.viewer instanceof _index__WEBPACK_IMPORTED_MODULE_3__.PageLayoutViewer) {\n            right = page.boundingRectangle.width * this.documentHelper.zoomFactor + left;\n        }\n        else {\n            right = page.boundingRectangle.width - this.owner.viewer.padding.right - this.documentHelper.scrollbarWidth;\n        }\n        if (!this.owner.enableImageResizerMode || (!this.owner.imageResizerModule.isImageResizerVisible || this.owner.imageResizerModule.isShapeResize)) {\n            if (this.isHideSelection(this.start.paragraph)) {\n                this.caret.style.display = 'none';\n            }\n            else if (this.isEmpty && (!this.owner.isReadOnly || this.owner.enableCursorOnReadOnly || this.isInlineFormFillMode())) {\n                var caretLeft = parseInt(this.caret.style.left.replace('px', ''), 10);\n                if (caretLeft < left || caretLeft > right) {\n                    this.caret.style.display = 'none';\n                }\n                else {\n                    this.caret.style.display = 'block';\n                }\n            }\n            else if (this.isImageSelected && !this.owner.enableImageResizerMode) {\n                this.caret.style.display = 'block';\n            }\n            else {\n                if (this.caret.style.display === 'block' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this)) {\n                    if (!this.documentHelper.isComposingIME) {\n                        this.caret.style.display = 'none';\n                    }\n                }\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this) && this.documentHelper.isTouchInput && !this.owner.isReadOnlyMode) {\n            var caretStartLeft = parseInt(this.documentHelper.touchStart.style.left.replace('px', ''), 10) + 14;\n            var caretEndLeft = parseInt(this.documentHelper.touchEnd.style.left.replace('px', ''), 10) + 14;\n            var page_1 = this.getSelectionPage(this.start);\n            if (page_1) {\n                if (caretEndLeft < left || caretEndLeft > right) {\n                    this.documentHelper.touchEnd.style.display = 'none';\n                }\n                else {\n                    this.documentHelper.touchEnd.style.display = 'block';\n                }\n                if (!this.isEmpty) {\n                    left = page_1.boundingRectangle.x;\n                    right = page_1.boundingRectangle.width * this.documentHelper.zoomFactor + left;\n                }\n                if (caretStartLeft < left || caretStartLeft > right) {\n                    this.documentHelper.touchStart.style.display = 'none';\n                }\n                else {\n                    this.documentHelper.touchStart.style.display = 'block';\n                }\n            }\n        }\n        else {\n            this.documentHelper.touchStart.style.display = 'none';\n            this.documentHelper.touchEnd.style.display = 'none';\n        }\n    };\n    /**\n     * To set the editable div caret position\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.setEditableDivCaretPosition = function (index) {\n        this.documentHelper.editableDiv.focus();\n        var child = this.documentHelper.editableDiv.childNodes[this.documentHelper.editableDiv.childNodes.length - 1];\n        if (child) {\n            var range = document.createRange();\n            range.setStart(child, index);\n            range.collapse(true);\n            window.getSelection().removeAllRanges();\n            window.getSelection().addRange(range);\n        }\n    };\n    /**\n     * Initializes caret.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.initCaret = function () {\n        this.caret = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.createElement)('div', {\n            styles: 'position:absolute',\n            className: 'e-de-blink-cursor e-de-cursor-animation'\n        });\n        this.caret.style.display = 'none';\n        this.owner.documentHelper.viewerContainer.appendChild(this.caret);\n    };\n    /**\n     * Updates caret position.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.updateCaretPosition = function () {\n        var caretPosition = this.end.location;\n        var page = this.getSelectionPage(this.end);\n        if (page && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.caret)) {\n            var left = page.boundingRectangle.x + (Math.round(caretPosition.x) * this.documentHelper.zoomFactor) + 'px';\n            this.caret.style.left = left;\n            var caretInfo = this.updateCaretSize(this.owner.selectionModule.end);\n            var topMargin = caretInfo.topMargin;\n            //let caretHeight: number = caretInfo.height;\n            var viewer = this.viewer;\n            var top_5 = (page.boundingRectangle.y - viewer.pageGap * (this.documentHelper.pages.indexOf(page) + 1)) * this.documentHelper.zoomFactor + viewer.pageGap * (this.documentHelper.pages.indexOf(page) + 1);\n            var pageTop = top_5;\n            this.caret.style.top = pageTop + (Math.round(caretPosition.y + topMargin) * this.documentHelper.zoomFactor) + 'px';\n            if (this.owner.selectionModule.characterFormat.baselineAlignment === 'Subscript') {\n                this.caret.style.top = parseFloat(this.caret.style.top) + (parseFloat(this.caret.style.height) / 2) + 'px';\n            }\n            if (this.documentHelper.isTouchInput || this.documentHelper.touchStart.style.display !== 'none') {\n                this.documentHelper.touchStart.style.left = page.boundingRectangle.x + (Math.round(caretPosition.x) * this.documentHelper.zoomFactor - 14) + 'px';\n                this.documentHelper.touchStart.style.top = pageTop + ((caretPosition.y + caretInfo.height) * this.documentHelper.zoomFactor) + 'px';\n                this.documentHelper.touchEnd.style.left = page.boundingRectangle.x + (Math.round(caretPosition.x) * this.documentHelper.zoomFactor - 14) + 'px';\n                this.documentHelper.touchEnd.style.top = pageTop + ((caretPosition.y + caretInfo.height) * this.documentHelper.zoomFactor) + 'px';\n            }\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.Browser.isDevice) {\n                this.documentHelper.editableDiv.style.left = left + \"px\";\n                this.documentHelper.editableDiv.style.top = top_5 + \"px\";\n            }\n        }\n        this.showHidePasteOptions(this.caret.style.top, this.caret.style.left);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.showHidePasteOptions = function (top, left) {\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.Browser.isIE) {\n            return;\n        }\n        if (this.isViewPasteOptions) {\n            if (this.pasteElement && this.pasteElement.style.display === 'block') {\n                return;\n            }\n            this.createPasteElement(top, left);\n        }\n        else if (this.pasteElement) {\n            this.pasteElement.style.display = 'none';\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.editorModule)) {\n                this.owner.editorModule.isHtmlPaste = false;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getRect = function (position) {\n        var caretPosition = position.location;\n        var page = this.getSelectionPage(position);\n        if (page) {\n            var documentHelper = this.owner.documentHelper;\n            var left = page.boundingRectangle.x + (Math.round(caretPosition.x) * documentHelper.zoomFactor);\n            var pageGap = this.viewer.pageGap;\n            var pageTop = (page.boundingRectangle.y - pageGap * (page.index + 1)) * documentHelper.zoomFactor + pageGap * (page.index + 1);\n            var top_6 = pageTop + (Math.round(caretPosition.y) * documentHelper.zoomFactor);\n            return new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.Point(left, top_6);\n        }\n        return new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.Point(0, 0);\n    };\n    /**\n     * Gets current selected page\n     * @private\n     */\n    Selection.prototype.getSelectionPage = function (position) {\n        var lineWidget = this.getLineWidgetInternal(position.currentWidget, position.offset, true);\n        if (lineWidget) {\n            return this.getPage(lineWidget.paragraph);\n        }\n        return undefined;\n    };\n    /**\n     * Updates caret size.\n     * @private\n     */\n    Selection.prototype.updateCaretSize = function (textPosition, skipUpdate) {\n        var topMargin = 0;\n        var isItalic = false;\n        var caret;\n        var index = 0;\n        var caretHeight = 0;\n        if (this.characterFormat.italic) {\n            isItalic = this.characterFormat.italic;\n        }\n        if (textPosition.paragraph.isEmpty()) {\n            var paragraph = textPosition.paragraph;\n            var bottomMargin = 0;\n            var paragraphInfo = this.getParagraphMarkSize(paragraph, topMargin, bottomMargin);\n            topMargin = paragraphInfo.topMargin;\n            bottomMargin = paragraphInfo.bottomMargin;\n            var height = paragraphInfo.height;\n            var baselineAlignment = this.characterFormat.baselineAlignment;\n            var elementHeight = height;\n            if (baselineAlignment !== 'Normal') {\n                //Set the caret height as sub/super script text height and updates the top margin for sub script text.\n                elementHeight = elementHeight / 1.5;\n                if (baselineAlignment === 'Subscript') {\n                    topMargin = height - elementHeight;\n                }\n            }\n            caretHeight = topMargin < 0 ? topMargin + elementHeight : elementHeight;\n            if (!skipUpdate) {\n                this.caret.style.height = caretHeight * this.documentHelper.zoomFactor + 'px';\n            }\n            topMargin = 0;\n        }\n        else {\n            var inlineInfo = textPosition.currentWidget.getInline(textPosition.offset, index);\n            index = inlineInfo.index;\n            var inline = inlineInfo.element;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inline)) {\n                caret = this.getCaretHeight(inline, index, inline.characterFormat, true, topMargin, isItalic);\n                caretHeight = caret.height;\n                if (inline.characterFormat.hidden && caret.height === 0) {\n                    var visibleElement = inline;\n                    while (visibleElement && visibleElement.characterFormat.hidden) {\n                        visibleElement = visibleElement.previousElement;\n                    }\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(visibleElement)) {\n                        visibleElement = inline;\n                        while (visibleElement && visibleElement.characterFormat.hidden) {\n                            visibleElement = visibleElement.nextElement;\n                        }\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(visibleElement)) {\n                        var height = this.documentHelper.textHelper.getHeight(visibleElement.characterFormat).Height;\n                        caretHeight = caret.height = height;\n                    }\n                }\n                if (!skipUpdate) {\n                    this.caret.style.height = caret.height * this.documentHelper.zoomFactor + 'px';\n                }\n            }\n        }\n        if (!skipUpdate) {\n            if (isItalic) {\n                this.caret.style.transform = 'rotate(13deg)';\n            }\n            else {\n                this.caret.style.transform = '';\n            }\n        }\n        return {\n            'topMargin': topMargin,\n            'height': caretHeight\n        };\n    };\n    /**\n     * Updates caret to page.\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.updateCaretToPage = function (startPosition, endPage) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(endPage)) {\n            this.documentHelper.selectionEndPage = endPage;\n            if (this.owner.selectionModule.isEmpty) {\n                this.documentHelper.selectionStartPage = endPage;\n            }\n            else {\n                var startLineWidget = this.getLineWidgetParagraph(startPosition.offset, startPosition.paragraph.childWidgets[0]);\n                //Gets start page.\n                var startPage = this.getPage(startLineWidget.paragraph);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startPage)) {\n                    this.documentHelper.selectionStartPage = startPage;\n                }\n            }\n        }\n        if (this.owner.enableAutoFocus) {\n            this.checkForCursorVisibility();\n        }\n    };\n    /**\n     * Gets caret bottom position.\n     * @private\n     */\n    Selection.prototype.getCaretBottom = function (textPosition, isEmptySelection) {\n        var bottom = textPosition.location.y;\n        if (textPosition.paragraph.isEmpty()) {\n            var paragraph = textPosition.paragraph;\n            var topMargin = 0;\n            var bottomMargin = 0;\n            var sizeInfo = this.getParagraphMarkSize(paragraph, topMargin, bottomMargin);\n            topMargin = sizeInfo.topMargin;\n            bottomMargin = sizeInfo.bottomMargin;\n            bottom += sizeInfo.height;\n            bottom += topMargin;\n            if (!isEmptySelection) {\n                bottom += bottomMargin;\n            }\n        }\n        else {\n            var index = 0;\n            var inlineInfo = textPosition.paragraph.getInline(textPosition.offset, index);\n            var inline = inlineInfo.element;\n            index = inlineInfo.index;\n            var topMargin = 0;\n            var isItalic = false;\n            var caretHeightInfo = this.getCaretHeight(inline, index, inline.characterFormat, false, topMargin, isItalic);\n            topMargin = caretHeightInfo.topMargin;\n            isItalic = caretHeightInfo.isItalic;\n            bottom += caretHeightInfo.height;\n            if (isEmptySelection) {\n                bottom -= _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(this.documentHelper.layout.getAfterSpacing(textPosition.paragraph));\n            }\n        }\n        return bottom;\n    };\n    /**\n     * Checks for cursor visibility.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.checkForCursorVisibility = function () {\n        this.showCaret();\n    };\n    // caret implementation ends\n    /**\n     * Keyboard shortcuts\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.onKeyDownInternal = function (event, ctrl, shift, alt) {\n        var key = event.which || event.keyCode;\n        this.owner.focusIn();\n        if (ctrl && !shift && !alt) {\n            this.documentHelper.isControlPressed = true;\n            switch (key) {\n                // case 9:\n                //     event.preventDefault();\n                //     if (this.owner.acceptTab) {\n                //         this.selection.handleTabKey(false, false);\n                //     }\n                //     break;\n                case 35:\n                    this.handleControlEndKey();\n                    break;\n                case 36:\n                    this.handleControlHomeKey();\n                    break;\n                case 37:\n                    this.handleControlLeftKey();\n                    break;\n                case 38:\n                    this.handleControlUpKey();\n                    break;\n                case 39:\n                    this.handleControlRightKey();\n                    break;\n                case 40:\n                    this.handleControlDownKey();\n                    break;\n                case 65:\n                    this.owner.selectionModule.selectAll();\n                    break;\n                case 67:\n                    event.preventDefault();\n                    this.copy();\n                    break;\n                case 70:\n                    event.preventDefault();\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.optionsPaneModule)) {\n                        this.owner.documentEditorSettings.showNavigationPane = true;\n                        this.owner.optionsPaneModule.showHideOptionsPane(true);\n                    }\n                    break;\n            }\n        }\n        else if (shift && !ctrl && !alt) {\n            this.documentHelper.isCompleted = false;\n            switch (key) {\n                case 33:\n                    event.preventDefault();\n                    this.handlePageUpPageDownKey(false, shift);\n                    break;\n                case 34:\n                    event.preventDefault();\n                    this.handlePageUpPageDownKey(true, shift);\n                    break;\n                case 35:\n                    this.handleShiftEndKey();\n                    event.preventDefault();\n                    break;\n                case 36:\n                    this.handleShiftHomeKey();\n                    event.preventDefault();\n                    break;\n                case 37:\n                    this.handleShiftLeftKey();\n                    event.preventDefault();\n                    break;\n                case 38:\n                    this.handleShiftUpKey();\n                    event.preventDefault();\n                    break;\n                case 39:\n                    this.handleShiftRightKey();\n                    event.preventDefault();\n                    break;\n                case 40:\n                    this.handleShiftDownKey();\n                    event.preventDefault();\n                    break;\n            }\n        }\n        else if (shift && ctrl && !alt) {\n            switch (key) {\n                case 32:\n                    this.owner.editorModule.insertText(String.fromCharCode(160));\n                    break;\n                case 35:\n                    this.handleControlShiftEndKey();\n                    break;\n                case 36:\n                    this.handleControlShiftHomeKey();\n                    break;\n                case 37:\n                    this.handleControlShiftLeftKey();\n                    break;\n                case 38:\n                    this.handleControlShiftUpKey();\n                    break;\n                case 39:\n                    this.handleControlShiftRightKey();\n                    break;\n                case 40:\n                    this.handleControlShiftDownKey();\n                    break;\n                case 56:\n                    this.owner.toggleShowHiddenMarksInternal();\n                    break;\n            }\n        }\n        else {\n            switch (key) {\n                // case 9:\n                //     event.preventDefault();\n                //     if (this.owner.acceptTab) {\n                //         this.handleTabKey(true, false);\n                //     }\n                //     break;  \n                case 33:\n                    event.preventDefault();\n                    this.handlePageUpPageDownKey(false, shift);\n                    break;\n                case 34:\n                    event.preventDefault();\n                    this.handlePageUpPageDownKey(true, shift);\n                    break;\n                case 35:\n                    this.handleEndKey();\n                    event.preventDefault();\n                    break;\n                case 36:\n                    this.handleHomeKey();\n                    event.preventDefault();\n                    break;\n                case 37:\n                    this.handleLeftKey();\n                    event.preventDefault();\n                    break;\n                case 38:\n                    this.handleUpKey();\n                    event.preventDefault();\n                    break;\n                case 39:\n                    this.handleRightKey();\n                    event.preventDefault();\n                    break;\n                case 40:\n                    this.handleDownKey();\n                    event.preventDefault();\n                    break;\n            }\n        }\n        if (this.isFormField() && !(this.documentHelper.isDocumentProtected)) {\n            var formField = this.getCurrentFormField(true);\n            if (formField && formField.formFieldData instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.DropDownFormField) {\n                formField = (event.keyCode === 37 || event.keyCode === 38 || event.keyCode === 40) ? formField : formField.nextElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox ? formField.nextElement.reference : formField.fieldEnd;\n                var index = event.keyCode === 39 ? 1 : 0;\n                var offset = formField.line.getOffset(formField, index);\n                var point = this.getPhysicalPositionInternal(formField.line, offset, false);\n                this.selectInternal(formField.line, formField, index, point);\n            }\n        }\n        if (!this.owner.isReadOnlyMode || this.documentHelper.isCommentOnlyMode || this.isInlineFormFillMode() || (this.documentHelper.isDocumentProtected && this.documentHelper.protectionType === 'FormFieldsOnly' && this.documentHelper.owner.editor.canEditContentControl && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.documentHelper.selection) && this.documentHelper.selection.checkContentControlLocked())) {\n            this.owner.editorModule.onKeyDownInternal(event, ctrl, shift, alt);\n        }\n        else if (this.documentHelper.isDocumentProtected && this.documentHelper.protectionType === 'FormFieldsOnly') {\n            if (event.keyCode === 9 || event.keyCode === 32) {\n                this.owner.editorModule.onKeyDownInternal(event, ctrl, shift, alt);\n            }\n        }\n        if (this.owner.searchModule) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.searchModule.searchHighlighters) && this.owner.searchModule.searchHighlighters.length > 0) {\n                this.owner.searchModule.searchResults.clear();\n            }\n        }\n        if (event.keyCode === 27 || event.which === 27) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.owner.optionsPaneModule)) {\n                this.owner.optionsPaneModule.showHideOptionsPane(false);\n                this.documentHelper.updateFocus();\n            }\n            if (this.owner.enableHeaderAndFooter) {\n                this.disableHeaderFooter();\n            }\n        }\n    };\n    //#region Enable or disable Header Footer\n    /**\n     * @private\n     */\n    Selection.prototype.checkAndEnableHeaderFooter = function (point, pagePoint) {\n        var page = this.documentHelper.currentPage;\n        if (this.isCursorInsidePageRect(point, page)) {\n            if (this.isCursorInHeaderRegion(point, page)) {\n                if (this.owner.enableHeaderAndFooter) {\n                    return false;\n                }\n                return this.enableHeadersFootersRegion(page.headerWidget, page);\n            }\n            if (this.isCursorInFooterRegion(point, page)) {\n                if (this.owner.enableHeaderAndFooter) {\n                    return false;\n                }\n                return this.enableHeadersFootersRegion(page.footerWidget, page);\n            }\n        }\n        if (this.owner.enableHeaderAndFooter) {\n            this.owner.enableHeaderAndFooter = false;\n            this.documentHelper.updateTextPositionForSelection(pagePoint, 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.isCursorInsidePageRect = function (point, page) {\n        if ((this.viewer.containerLeft + point.x) >= page.boundingRectangle.x &&\n            (this.viewer.containerLeft + point.x) <= (page.boundingRectangle.x + (page.boundingRectangle.width * this.documentHelper.zoomFactor)) && this.viewer instanceof _index__WEBPACK_IMPORTED_MODULE_3__.PageLayoutViewer) {\n            return true;\n        }\n        else if ((this.viewer.containerLeft + point.x) >= page.boundingRectangle.x &&\n            (this.viewer.containerLeft + point.x) <= (page.boundingRectangle.x + page.boundingRectangle.width)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.isCursorInHeaderRegion = function (point, page) {\n        if (this.viewer instanceof _index__WEBPACK_IMPORTED_MODULE_3__.PageLayoutViewer) {\n            var pageTop = this.getPageTop(page);\n            var headerHeight = 0;\n            var header = page.headerWidget;\n            if (header) {\n                headerHeight = (header.y + header.height);\n            }\n            var isEmpty = header.isEmpty && !this.owner.enableHeaderAndFooter;\n            var topMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(page.bodyWidgets[0].sectionFormat.topMargin);\n            var pageHeight = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(page.bodyWidgets[0].sectionFormat.pageHeight);\n            var height = isEmpty ? topMargin : Math.min(Math.max(headerHeight, topMargin), pageHeight / 100 * 40);\n            height = height * this.documentHelper.zoomFactor;\n            if ((this.viewer.containerTop + point.y) >= pageTop && (this.viewer.containerTop + point.y) <= pageTop + height) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.isCursorInFooterRegion = function (point, page) {\n        if (this.viewer instanceof _index__WEBPACK_IMPORTED_MODULE_3__.PageLayoutViewer) {\n            var pageRect = page.boundingRectangle;\n            var pageTop = this.getPageTop(page);\n            var pageBottom = pageTop + (pageRect.height * this.documentHelper.zoomFactor);\n            var footerDistance = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(page.bodyWidgets[0].sectionFormat.footerDistance);\n            var footerHeight = 0;\n            if (page.footerWidget) {\n                footerHeight = page.footerWidget.height;\n            }\n            var bottomMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.convertPointToPixel(page.bodyWidgets[0].sectionFormat.bottomMargin);\n            var isEmpty = page.footerWidget.isEmpty && !this.owner.enableHeaderAndFooter;\n            var height = pageRect.height;\n            if (isEmpty) {\n                height = (height - bottomMargin) * this.documentHelper.zoomFactor;\n            }\n            else {\n                height = (height - Math.min(pageRect.height / 100 * 40, Math.max(footerHeight + footerDistance, bottomMargin))) * this.documentHelper.zoomFactor;\n            }\n            if ((this.viewer.containerTop + point.y) <= pageBottom && (this.viewer.containerTop + point.y) >= pageTop + height) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.enableHeadersFootersRegion = function (widget, page) {\n        if (this.viewer instanceof _index__WEBPACK_IMPORTED_MODULE_3__.PageLayoutViewer) {\n            this.owner.enableHeaderAndFooter = true;\n            widget.page = page;\n            this.comparePageWidthAndMargins(widget, page);\n            this.updateTextPositionForBlockContainer(widget);\n            this.shiftBlockOnHeaderFooterEnableDisable();\n            return true;\n        }\n        return false;\n    };\n    /**\n    * Disable xml\n    * @private\n    */\n    Selection.prototype.disableXml = function () {\n        var page = this.getPage(this.start.paragraph);\n        this.updateTextPositionForBlockContainer(page.bodyWidgets[0]);\n        this.owner.enableHeaderAndFooter = false;\n        this.shiftBlockOnHeaderFooterEnableDisable();\n    };\n    /**\n     * /* Here is the explanation for the code below:\n        1. When there are multiple sections in a document, the first section is the parent section of the other sections.\n        2. If you change the page width or header distance of the parent section, the child section will inherit the page width or header distance of the parent section.\n        3. So when you change the page width or header distance of the parent section, the child section should be relayouted.\n     * @private\n     */\n    Selection.prototype.comparePageWidthAndMargins = function (parentHFWidget, page) {\n        var headerFooterType = parentHFWidget.headerFooterType;\n        var currentHFWidget;\n        var isHeader = headerFooterType.indexOf('Header') != -1;\n        var isRelayout = false;\n        if (isHeader) {\n            currentHFWidget = page.headerWidgetIn;\n        }\n        else {\n            currentHFWidget = page.footerWidgetIn;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentHFWidget)) {\n            var parentSectionFormat = parentHFWidget.sectionFormat;\n            var currentSectionFormat = currentHFWidget.sectionFormat;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(parentSectionFormat) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentSectionFormat)) {\n                if (isHeader) {\n                    if (parentHFWidget.width != currentHFWidget.width || parentSectionFormat.headerDistance != currentSectionFormat.headerDistance) {\n                        isRelayout = true;\n                    }\n                }\n                else {\n                    if (parentHFWidget.width != currentHFWidget.width || parentSectionFormat.footerDistance != currentSectionFormat.footerDistance) {\n                        isRelayout = true;\n                    }\n                }\n            }\n            if (isRelayout) {\n                this.owner.viewer.updateHFClientArea(parentHFWidget.sectionFormat, isHeader);\n                parentHFWidget = this.documentHelper.layout.layoutHeaderFooterItems(this.owner.viewer, parentHFWidget);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.shiftBlockOnHeaderFooterEnableDisable = function () {\n        for (var i = 0; i < this.documentHelper.headersFooters.length; i++) {\n            var headerFooter = this.documentHelper.headersFooters[i];\n            var bodywidget = this.getBodyWidgetInternal(i, 0);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(bodywidget)) {\n                continue;\n            }\n            var sectionFormat = bodywidget.sectionFormat;\n            for (var _i = 0, _a = Object.keys(headerFooter); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var widget = headerFooter[key];\n                if (widget.isEmpty) {\n                    this.owner.editorModule.shiftPageContent(widget.headerFooterType, sectionFormat);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.updateTextPositionForBlockContainer = function (widget) {\n        var block = widget.firstChild;\n        if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n            block = this.getFirstBlockInFirstCell(block);\n            if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n                block = this.getFirstBlockInFirstCell(block);\n            }\n        }\n        this.selectParagraphInternal(block, true);\n    };\n    /**\n     * Disable Header footer\n     * @private\n     */\n    Selection.prototype.disableHeaderFooter = function () {\n        var page = this.getPage(this.start.paragraph);\n        this.updateTextPositionForBlockContainer(page.bodyWidgets[0]);\n        this.owner.enableHeaderAndFooter = false;\n        this.shiftBlockOnHeaderFooterEnableDisable();\n    };\n    //#endregion\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.clear = function () {\n        if (this.editRegionHighlighters) {\n            this.editRegionHighlighters.clear();\n        }\n        this.editRangeCollection = [];\n        if (this.selectedWidgets) {\n            this.selectedWidgets.clear();\n        }\n        if (this.contentControleditRegionHighlighters) {\n            this.contentControleditRegionHighlighters.clear();\n        }\n        this.contentControls = [];\n        this.currentContentControl = undefined;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.destroy = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.contextTypeInternal)) {\n            this.contextTypeInternal = undefined;\n        }\n        if (this.pasteDropDwn) {\n            this.pasteDropDwn.destroy();\n            this.pasteDropDwn = undefined;\n        }\n        this.caret = undefined;\n        this.contextTypeInternal = undefined;\n        this.upDownSelectionLength = undefined;\n        this.owner = undefined;\n        this.upDownSelectionLength = undefined;\n        this.isSkipLayouting = undefined;\n        this.isImageSelected = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.documentHelper)) {\n            this.documentHelper = undefined;\n        }\n        this.contextTypeInternal = undefined;\n        this.isRetrieveFormatting = undefined;\n        if (this.characterFormatIn) {\n            this.characterFormatIn.destroy();\n        }\n        this.characterFormatIn = undefined;\n        if (this.paragraphFormatIn) {\n            this.paragraphFormatIn.destroy();\n        }\n        this.paragraphFormatIn = undefined;\n        if (this.sectionFormatIn) {\n            this.sectionFormatIn.destroy();\n        }\n        this.sectionFormatIn = undefined;\n        if (this.tableFormatIn) {\n            this.tableFormatIn.destroy();\n        }\n        this.tableFormatIn = undefined;\n        if (this.cellFormatIn) {\n            this.cellFormatIn.destroy();\n        }\n        this.cellFormatIn = undefined;\n        if (this.rowFormatIn) {\n            this.rowFormatIn.destroy();\n        }\n        this.rowFormatIn = undefined;\n        this.imageFormatInternal = undefined;\n        this.skipFormatRetrieval = undefined;\n        this.startInternal = undefined;\n        this.endInternal = undefined;\n        this.htmlWriterIn = undefined;\n        this.toolTipElement = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.toolTipObject)) {\n            this.toolTipObject.destroy();\n        }\n        this.toolTipField = undefined;\n        this.isMoveDownOrMoveUp = undefined;\n        this.pasteElement = undefined;\n        this.currentPasteAction = undefined;\n        this.isViewPasteOptions = undefined;\n        this.skipEditRangeRetrieval = undefined;\n        this.editPosition = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.selectedWidgets)) {\n            this.selectedWidgets.destroy();\n        }\n        this.isHighlightEditRegionIn = undefined;\n        this.isHighlightFormFields = undefined;\n        this.editRangeCollection = [];\n        this.editRangeCollection = undefined;\n        this.isHightlightEditRegionInternal = undefined;\n        this.isCurrentUser = undefined;\n        this.isHighlightNext = undefined;\n        this.hightLightNextParagraph = undefined;\n        this.isWebLayout = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.editRegionHighlighters)) {\n            this.editRegionHighlighters.destroy();\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.formFieldHighlighters)) {\n            this.formFieldHighlighters.destroy();\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.contentControleditRegionHighlighters)) {\n            this.contentControleditRegionHighlighters.destroy();\n        }\n        this.isCellPrevSelected = undefined;\n        this.currentFormField = undefined;\n        this.contentControls = [];\n    };\n    /**\n     * Returns the cells in between the bounds.\n     * @param table Specify the table to find cells.\n     * @param columnFirst Specify start index of column to find cells.\n     * @param columnLast Specify end index of column to find cells.\n     * @param bookmark Specify the bookmark element.\n     */\n    Selection.prototype.getCellsToSelect = function (table, columnFirst, columnLast, bookmark) {\n        var rows = table.childWidgets;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(bookmark.paragraph.associatedCell) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(bookmark.reference) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(bookmark.reference.paragraph.associatedCell)) {\n            return undefined;\n        }\n        var startRowIndex = bookmark.paragraph.associatedCell.ownerRow.rowIndex;\n        var endRowIndex = bookmark.reference.paragraph.associatedCell.ownerRow.rowIndex;\n        var cellArray = [];\n        for (var i = startRowIndex; i <= endRowIndex; i++) {\n            var row = rows[i];\n            for (var j = columnFirst; j <= columnLast; j++) {\n                var cell = row.childWidgets[j];\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(cell)) {\n                    cellArray.push(cell);\n                }\n            }\n        }\n        return cellArray;\n    };\n    /**\n     * Selects the cells between bookmark start and end.\n     * @param bookmark Specify the bookmark.\n     */\n    Selection.prototype.selectBookmarkInTable = function (bookmark) {\n        this.documentHelper.clearSelectionHighlight();\n        var columnFirst = parseInt(bookmark.properties['columnFirst']);\n        var columnLast = parseInt(bookmark.properties['columnLast']);\n        var table = bookmark.paragraph.associatedCell.ownerTable;\n        var cellArray = this.getCellsToSelect(table, columnFirst, columnLast, bookmark);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(cellArray)) {\n            for (var i = 0; i < cellArray.length; i++) {\n                this.highlightCellWidget(cellArray[i]);\n            }\n        }\n    };\n    /**\n     * Navigates to the specified bookmark.\n     * @param name\n     * @param moveToStart\n     * @param excludeBookmarkStartEnd\n     * @private\n     */\n    Selection.prototype.navigateBookmark = function (name, moveToStart, excludeBookmarkStartEnd) {\n        var bookmarks = this.documentHelper.bookmarks;\n        if (bookmarks.containsKey(name)) {\n            //bookmark start element\n            var bookmrkElmnt = bookmarks.get(name);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(bookmrkElmnt.properties)) {\n                this.selectBookmarkInTable(bookmrkElmnt);\n            }\n            else {\n                var offset = bookmrkElmnt.line.getOffset(bookmrkElmnt, 0);\n                if (excludeBookmarkStartEnd) {\n                    offset++;\n                }\n                var startPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n                startPosition.setPositionParagraph(bookmrkElmnt.line, offset);\n                if (moveToStart) {\n                    this.documentHelper.selection.selectRange(startPosition, startPosition, true);\n                }\n                else {\n                    //bookmark end element\n                    var bookmrkEnd = bookmrkElmnt.reference;\n                    if (bookmrkElmnt.reference && bookmrkElmnt.reference.line.paragraph.bodyWidget == null) {\n                        bookmrkEnd = bookmrkElmnt;\n                    }\n                    var endoffset = bookmrkEnd.line.getOffset(bookmrkEnd, 1);\n                    if (bookmrkEnd instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox && !excludeBookmarkStartEnd) {\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(bookmrkEnd.properties)) {\n                            if (bookmrkEnd.properties['isAfterParagraphMark']) {\n                                endoffset = bookmrkEnd.line.getOffset(bookmrkEnd, 1);\n                            }\n                        }\n                    }\n                    if (excludeBookmarkStartEnd) {\n                        endoffset--;\n                    }\n                    var endPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n                    endPosition.setPositionParagraph(bookmrkEnd.line, endoffset);\n                    //selects the bookmark range\n                    this.documentHelper.selection.selectRange(startPosition, endPosition, true);\n                }\n            }\n        }\n    };\n    /**\n     * Selects the specified bookmark.\n     * @param name Specify the bookmark name to select.\n     * @param excludeBookmarkStartEnd Specify true to exclude bookmark start and end from selection, otherwise false.\n     */\n    Selection.prototype.selectBookmark = function (name, excludeBookmarkStartEnd) {\n        this.isSelectBookmark = true;\n        this.isExcludeBookmarkStartEnd = excludeBookmarkStartEnd;\n        this.navigateBookmark(name, undefined, excludeBookmarkStartEnd);\n        this.isSelectBookmark = false;\n    };\n    /**\n     * Returns the toc field from the selection.\n     * @private\n     */\n    Selection.prototype.getTocField = function () {\n        var paragraph = this.start.paragraph;\n        var tocPara = undefined;\n        while ((paragraph !== undefined && this.isTocStyle(paragraph))) {\n            tocPara = paragraph;\n            paragraph = paragraph.previousRenderedWidget;\n        }\n        if (tocPara !== undefined) {\n            var lineWidget = tocPara.childWidgets[0];\n            if (lineWidget !== undefined) {\n                return lineWidget.children[0];\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Returns true if the paragraph has toc style.\n     */\n    Selection.prototype.isTocStyle = function (paragraph) {\n        var style = paragraph.paragraphFormat.baseStyle;\n        return (style !== undefined && (style.name.toLowerCase().indexOf('toc') !== -1));\n    };\n    /**\n     * Return true if selection is in TOC\n     * @private\n     */\n    Selection.prototype.isTOC = function () {\n        var info = this.getParagraphInfo(this.start);\n        var para = info.paragraph;\n        for (var i = 0; i < para.childWidgets[0].children.length; i++) {\n            var element = para.childWidgets[0].children[i];\n            if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                var fieldCode = this.owner.selectionModule.getFieldCode(element);\n                if (fieldCode.match('TOC ') || fieldCode.match('Toc')) {\n                    return true;\n                }\n            }\n            else {\n                continue;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getElementsForward = function (lineWidget, startElement, endElement, bidi) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startElement)) {\n            return undefined;\n        }\n        var elements = [];\n        // while (bidi && startElement && startElement !== endElement && startElement.nextElement && !startElement.isRightToLeft) {\n        //     startElement = startElement.nextElement;\n        // }\n        // while (bidi && endElement && startElement !== endElement && endElement.previousElement && !endElement.isRightToLeft) {\n        //     endElement = endElement.previousElement;\n        // }\n        var elementIndex = lineWidget.children.indexOf(startElement);\n        while (elementIndex >= 0) {\n            for (var i = elementIndex; i < lineWidget.children.length; i++) {\n                var inlineElement = lineWidget.children[i];\n                if (inlineElement.line === lineWidget) {\n                    if (inlineElement === endElement) {\n                        elements.push(inlineElement);\n                        elementIndex = -1;\n                        break;\n                    }\n                    else {\n                        elements.push(inlineElement);\n                    }\n                }\n                else {\n                    elementIndex = -1;\n                    break;\n                }\n            }\n            // inline = inline !== null && inline.NextNode !== null ? (inline.NextNode as Inline).GetNextRenderedInline() : null;\n            elementIndex = -1;\n        }\n        return elements.length === 0 ? undefined : elements;\n    };\n    // Gets the current line elements in inline reverse order from the end element.\n    /**\n     * @private\n     */\n    Selection.prototype.getElementsBackward = function (lineWidget, startElement, endElement, bidi) {\n        var elements = [];\n        while (bidi && startElement && startElement.previousElement && (!startElement.isRightToLeft\n            || startElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox && this.documentHelper.textHelper.isRTLText(startElement.text))) {\n            startElement = startElement.previousElement;\n        }\n        var elementIndex = lineWidget.children.indexOf(startElement);\n        while (elementIndex >= 0) {\n            for (var i = elementIndex; i > -1 && i < lineWidget.children.length; bidi ? i++ : i--) {\n                var inlineElement = lineWidget.children[i];\n                if (inlineElement.line === lineWidget) {\n                    elements.push(inlineElement);\n                    if (inlineElement === endElement) {\n                        elementIndex = -1;\n                        break;\n                    }\n                }\n                else {\n                    elementIndex = -1;\n                    break;\n                }\n            }\n            // inline = inline !== null && inline.NextNode !== null ? (inline.NextNode as Inline).GetNextRenderedInline() : null;\n            elementIndex = -1;\n        }\n        return elements;\n    };\n    /**\n     * Navigates to the previous comment in the document.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.navigatePreviousComment = function () {\n        this.commentNavigateInternal(false);\n    };\n    /**\n     * Navigates to the next comment in the document.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.navigateNextComment = function () {\n        this.commentNavigateInternal(true);\n    };\n    Selection.prototype.commentNavigateInternal = function (next) {\n        if (!this.documentHelper.currentSelectedComment) {\n            if (this.documentHelper.comments.length === 0) {\n                return;\n            }\n            this.documentHelper.currentSelectedComment = this.documentHelper.comments[0];\n        }\n        if (this.documentHelper.currentSelectedComment) {\n            var comments = this.documentHelper.comments;\n            var comment = this.documentHelper.currentSelectedComment;\n            var index = comments.indexOf(comment);\n            if (next) {\n                comment = (index === (comments.length - 1)) ? comments[0] : comments[index + 1];\n            }\n            else {\n                comment = index === 0 ? comments[comments.length - 1] : comments[index - 1];\n            }\n            this.documentHelper.currentSelectedComment = comment;\n            this.selectComment(comment);\n        }\n    };\n    /**\n     * Navigates to the previous revision in the document.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.navigatePreviousRevision = function () {\n        this.revisionNavigateInternal(false);\n    };\n    /**\n     * Navigates to the next revision in the document.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.navigateNextRevision = function () {\n        this.revisionNavigateInternal(true);\n    };\n    /**\n     * Method to navigate revisions\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.revisionNavigateInternal = function (next) {\n        if (!this.documentHelper.currentSelectedRevisionInternal) {\n            if (this.documentHelper.owner.revisions.length === 0) {\n                return;\n            }\n            this.documentHelper.currentSelectedRevision = this.documentHelper.owner.revisions.get(0);\n        }\n        if (this.documentHelper.currentSelectedRevision) {\n            var revisions = this.documentHelper.owner.revisions.changes;\n            var revision = this.documentHelper.currentSelectedRevision;\n            var index = revisions.indexOf(revision);\n            if (next) {\n                revision = (index === (revisions.length - 1)) ? revisions[0] : revisions[index + 1];\n            }\n            else {\n                revision = index === 0 ? revisions[revisions.length - 1] : revisions[index - 1];\n            }\n            this.documentHelper.currentSelectedRevision = revision;\n            this.selectRevision(revision);\n        }\n        this.owner.trackChangesPane.currentSelectedRevision = this.documentHelper.currentSelectedRevision;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectComment = function (comment) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(comment)) {\n            var startPosition = this.getElementPosition(comment.commentStart, true).startPosition;\n            var endPosition = this.getElementPosition(comment.commentEnd, false).startPosition;\n            if (this.owner.commentReviewPane) {\n                this.owner.commentReviewPane.selectComment(comment);\n            }\n            this.selectPosition(startPosition, endPosition);\n        }\n    };\n    /**\n     * @private\n     * @param revision\n     * @returns {void}\n     */\n    Selection.prototype.selectRevision = function (revision, startPosition, endPosition) {\n        var isSelect = false;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startPosition) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(endPosition)) {\n            isSelect = true;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(revision) && revision.range.length > 0) {\n            var firstElement = revision.range[0];\n            var lastElement = revision.range[revision.range.length - 1];\n            var paragraph = void 0;\n            if (firstElement instanceof _index__WEBPACK_IMPORTED_MODULE_3__.WCharacterFormat) {\n                paragraph = firstElement.ownerBase;\n            }\n            else if (!(firstElement instanceof _index__WEBPACK_IMPORTED_MODULE_3__.WRowFormat)) {\n                paragraph = firstElement.line.paragraph;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(paragraph) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(paragraph.bodyWidget) && paragraph.bodyWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.HeaderFooterWidget && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(paragraph.bodyWidget.page) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(paragraph.bodyWidget.page) && paragraph.bodyWidget.page.index === -1))) {\n                return;\n            }\n            if (firstElement instanceof _index__WEBPACK_IMPORTED_MODULE_3__.WRowFormat) {\n                var rowWidget = firstElement.ownerBase;\n                var firstCell = rowWidget.childWidgets[0];\n                var lastCell = rowWidget.childWidgets[rowWidget.childWidgets.length - 1];\n                var firstPara = this.getFirstParagraph(firstCell);\n                var lastPara = this.getLastParagraph(lastCell);\n                this.start.setPosition(firstPara.firstChild, true);\n                this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n                this.selectPosition(this.start, this.end);\n            }\n            else if (firstElement && lastElement) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startPosition)) {\n                    startPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n                }\n                var offset = 0;\n                if (firstElement instanceof _index__WEBPACK_IMPORTED_MODULE_3__.WCharacterFormat) {\n                    var currentPara = firstElement.ownerBase;\n                    // Set the offset based on length of para - length of remaning lines except last line because we have added the remaning line length in getParagraphInfoInternal method.\n                    //when we have add para length to the offset, again added the length of remaning lines except last line in getParagraphInfoInternal method. so when perform undo, the offset is greater than para length + 1. in this case, we set the para length to start and end offset, so paramark doesn't comes to selection region (undo case for splitted para but paramark only tracked).\n                    if (currentPara.childWidgets.length > 1) {\n                        offset = this.getParagraphLength(currentPara) - this.getParagraphLength(currentPara, currentPara.lastChild);\n                    }\n                    else {\n                        // added the condition to set offset to paragraph start when para without contain text elements.\n                        if (this.isEmptyWidget(currentPara)) {\n                            offset = 0;\n                        }\n                        else {\n                            offset = currentPara.getLength();\n                        }\n                    }\n                    startPosition.setPositionParagraph(currentPara.lastChild, offset);\n                }\n                else {\n                    offset = firstElement.line.getOffset(firstElement, 0);\n                    var line = firstElement.line;\n                    if (line.isFirstLine()) {\n                        for (var i = 0; i < line.children.length; i++) {\n                            if (firstElement === line.children[i] && line.children[i] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox && !(line.children[i] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootnoteElementBox)) {\n                                offset = 0;\n                                break;\n                            }\n                            else if (line.children[i] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                                break;\n                            }\n                        }\n                    }\n                    startPosition.setPositionForLineWidget(firstElement.line, offset);\n                }\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(endPosition)) {\n                    endPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n                }\n                if (lastElement instanceof _index__WEBPACK_IMPORTED_MODULE_3__.WCharacterFormat) {\n                    var currentPara = lastElement.ownerBase;\n                    var splittedWidgets = currentPara.getSplitWidgets();\n                    currentPara = splittedWidgets[splittedWidgets.length - 1];\n                    if (currentPara.isEndsWithPageBreak || currentPara.isEndsWithColumnBreak) {\n                        this.owner.trackChangesPane.isTrackingPageBreak = true;\n                    }\n                    // Changed the condition to get last child of current paragraph instead of next para of current para if current para contain page break\n                    if (currentPara.childWidgets.length > 1) {\n                        offset = this.getParagraphLength(currentPara) - this.getParagraphLength(currentPara, currentPara.lastChild);\n                    }\n                    else {\n                        offset = currentPara.getLength();\n                    }\n                    endPosition.setPositionParagraph(currentPara.lastChild, offset + 1);\n                }\n                else {\n                    offset = lastElement.line.getOffset(lastElement, 0) + lastElement.length;\n                    if (this.isTOC()) {\n                        offset += 1;\n                    }\n                    endPosition.setPositionForLineWidget(lastElement.line, offset);\n                }\n                var curentPosition = startPosition.clone();\n                if (!startPosition.isExistBefore(endPosition)) {\n                    startPosition = endPosition;\n                    endPosition = curentPosition;\n                }\n                if (isSelect) {\n                    this.selectPosition(startPosition, endPosition);\n                }\n            }\n        }\n    };\n    Selection.prototype.isEmptyWidget = function (block) {\n        if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n            return false;\n        }\n        else if (block.isEmpty()) {\n            return true;\n        }\n        else {\n            for (var i = 0; i < block.childWidgets.length; i++) {\n                var line = block.childWidgets[i];\n                for (var j = 0; j < line.children.length; j++) {\n                    if (line.children[j] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.selectTableRevision = function (revision) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(revision) && revision[0].range.length > 0) {\n            var firstElementTable = revision[0].range[0];\n            var lastElementTable = revision[revision.length - 1].range[0];\n            if (firstElementTable instanceof _index__WEBPACK_IMPORTED_MODULE_3__.WRowFormat) {\n                var firstRowWidget = firstElementTable.ownerBase;\n                var firstCell = firstRowWidget.childWidgets[0];\n                var secondRowWidget = lastElementTable.ownerBase;\n                var lastCell = secondRowWidget.childWidgets[secondRowWidget.childWidgets.length - 1];\n                var firstPara = this.getFirstParagraph(firstCell);\n                var lastPara = this.getLastParagraph(lastCell);\n                this.start.setPosition(firstPara.firstChild, true);\n                this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n                this.selectPosition(this.start, this.end);\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.updateEditRangeCollection = function () {\n        if (this.editRangeCollection.length > 0) {\n            this.editRangeCollection = [];\n        }\n        var editRangeStart;\n        var everyOneArea;\n        if (!this.documentHelper.isDocumentProtected) {\n            for (var i = 0; i < this.documentHelper.editRanges.length; i++) {\n                var user = this.documentHelper.editRanges.keys[i];\n                editRangeStart = this.documentHelper.editRanges.get(user);\n                for (var j = 0; j < editRangeStart.length; j++) {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(editRangeStart[j].editRangeEnd)) {\n                        this.editRangeCollection.push(editRangeStart[j]);\n                    }\n                }\n            }\n        }\n        else {\n            if (this.documentHelper.editRanges.containsKey(this.owner.currentUser)) {\n                editRangeStart = this.documentHelper.editRanges.get(this.owner.currentUser);\n                for (var j = 0; j < editRangeStart.length; j++) {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(editRangeStart[j].editRangeEnd)) {\n                        this.editRangeCollection.push(editRangeStart[j]);\n                    }\n                }\n            }\n            if (this.documentHelper.editRanges.containsKey('Everyone')) {\n                var user = 'Everyone';\n                everyOneArea = this.documentHelper.editRanges.get(user);\n                for (var j = 0; j < everyOneArea.length; j++) {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(everyOneArea[j].editRangeEnd)) {\n                        this.editRangeCollection.push(everyOneArea[j]);\n                    }\n                }\n            }\n        }\n    };\n    //Restrict editing implementation starts\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.onHighlight = function () {\n        if (this.isHighlightEditRegion) {\n            this.highlightEditRegion();\n        }\n        else {\n            this.unHighlightEditRegion();\n        }\n        this.viewer.renderVisiblePages();\n    };\n    //Restrict editing implementation starts\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.onHighlightContentControl = function () {\n        if (this.isHighlightContentControlEditRegion) {\n            if (this.documentHelper.contentControlCollection.length > 0) {\n                for (var i = 0; i < this.documentHelper.contentControlCollection.length; i++) {\n                    if (this.documentHelper.contentControlCollection[i].paragraph.isInHeaderFooter && this.documentHelper.owner.layoutType === \"Continuous\") {\n                        continue;\n                    }\n                    if (this.documentHelper.contentControlCollection[i].line.paragraph.bodyWidget.page\n                        && this.documentHelper.contentControlCollection[i].line.paragraph.bodyWidget.page.documentHelper) {\n                        this.highlightContentControlEditRegionInternal(this.documentHelper.contentControlCollection[i]);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.highlightContentControlEditRegionInternal = function (editRangeStart) {\n        var positionInfo = this.getPosition(editRangeStart);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(positionInfo.startPosition) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(positionInfo.endPosition)) {\n            var startPosition = positionInfo.startPosition;\n            var endPosition = positionInfo.endPosition;\n            this.highlight(editRangeStart.line.paragraph, startPosition, endPosition, editRangeStart);\n            var currentParagraph = editRangeStart.line.paragraph;\n            while (currentParagraph !== endPosition.paragraph) {\n                if (currentParagraph.nextRenderedWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                    currentParagraph = currentParagraph.nextRenderedWidget;\n                    this.highlight(currentParagraph, startPosition, endPosition, editRangeStart);\n                }\n                else {\n                    return;\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectPlaceHolderText = function (contentControl) {\n        if (contentControl.contentControlProperties && contentControl.contentControlProperties.hasPlaceHolderText && (contentControl.contentControlProperties.type === 'RichText' || contentControl.contentControlProperties.type === 'Text')) {\n            this.selectContentControlInternal(contentControl);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.isPlainContentControl = function () {\n        var contentControl = this.owner.editorModule.getContentControl();\n        if (contentControl && contentControl.contentControlProperties && contentControl.contentControlProperties.type === 'Text') {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.highlightEditRegion = function () {\n        this.updateEditRangeCollection();\n        if (this.owner.enableLockAndEdit) {\n            this.viewer.updateScrollBars();\n            return;\n        }\n        if (!this.isHighlightEditRegion) {\n            this.unHighlightEditRegion();\n            return;\n        }\n        this.isHightlightEditRegionInternal = true;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.editRegionHighlighters)) {\n            this.editRegionHighlighters = new _base_dictionary__WEBPACK_IMPORTED_MODULE_5__.Dictionary();\n        }\n        this.editRegionHighlighters.clear();\n        for (var j = 0; j < this.editRangeCollection.length; j++) {\n            this.highlightEditRegionInternal(this.editRangeCollection[j]);\n        }\n        this.isHightlightEditRegionInternal = false;\n        this.viewer.updateScrollBars();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.highlightFormFields = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.formFieldHighlighters)) {\n            this.formFieldHighlighters = new _base_dictionary__WEBPACK_IMPORTED_MODULE_5__.Dictionary();\n        }\n        this.formFieldHighlighters.clear();\n        var formFields = this.documentHelper.formFields;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(formFields) && formFields.length > 0) {\n            for (var i = 0; i < formFields.length; i++) {\n                var formField = formFields[i];\n                if (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_1__.HelperMethods.isLinkedFieldCharacter(formField)) {\n                    var offset = formField.line.getOffset(formField, 0);\n                    var startPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n                    startPosition.setPositionParagraph(formField.line, offset);\n                    var endElement = formField.fieldEnd;\n                    offset = endElement.line.getOffset(endElement, 1);\n                    var endPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n                    endPosition.setPositionParagraph(endElement.line, offset);\n                    this.isHighlightFormFields = true;\n                    this.highlight(startPosition.paragraph, startPosition, endPosition);\n                    if (this.isHighlightNext) {\n                        this.highlightNextBlock(this.hightLightNextParagraph, startPosition, endPosition);\n                        this.isHighlightNext = false;\n                        this.hightLightNextParagraph = undefined;\n                    }\n                }\n            }\n            this.isHighlightFormFields = false;\n            this.viewer.updateScrollBars();\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.unHighlightEditRegion = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.editRegionHighlighters)) {\n            this.editRegionHighlighters.clear();\n            this.editRegionHighlighters = undefined;\n        }\n        this.isHightlightEditRegionInternal = false;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.highlightEditRegionInternal = function (editRangeStart) {\n        var positionInfo = this.getPosition(editRangeStart);\n        var startPosition = positionInfo.startPosition;\n        var endPosition = positionInfo.endPosition;\n        // if (editRangeStart.user === this.owner.currentUser && editRangeStart.group === '') {\n        this.isCurrentUser = true;\n        // }\n        this.highlightEditRegions(editRangeStart, startPosition, endPosition);\n        this.isCurrentUser = false;\n    };\n    /**\n     * Shows all the editing region, where current user can edit.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.showAllEditingRegion = function () {\n        if (this.editRangeCollection.length === 0) {\n            this.updateEditRangeCollection();\n        }\n        this.documentHelper.clearSelectionHighlight();\n        for (var j = 0; j < this.editRangeCollection.length; j++) {\n            var editRangeStart = this.editRangeCollection[j];\n            var positionInfo = this.getPosition(editRangeStart);\n            var startPosition = positionInfo.startPosition;\n            var endPosition = positionInfo.endPosition;\n            this.highlightEditRegions(editRangeStart, startPosition, endPosition);\n        }\n    };\n    Selection.prototype.highlightEditRegions = function (editRangeStart, startPosition, endPosition) {\n        if (!editRangeStart.line.paragraph.isInsideTable\n            || (editRangeStart.line.paragraph.isInsideTable && !editRangeStart.editRangeEnd.line.paragraph.isInsideTable) || editRangeStart.columnFirst === -1) {\n            this.highlight(editRangeStart.line.paragraph, startPosition, endPosition);\n            if (this.isHighlightNext) {\n                this.highlightNextBlock(this.hightLightNextParagraph, startPosition, endPosition);\n                this.isHighlightNext = false;\n                this.hightLightNextParagraph = undefined;\n            }\n        }\n        else {\n            var row = editRangeStart.line.paragraph.associatedCell.ownerRow;\n            var cell = row.childWidgets[editRangeStart.columnFirst];\n            if (cell) {\n                for (var i = 0; i < cell.childWidgets.length; i++) {\n                    if (cell.childWidgets[i] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                        this.highlight(cell.childWidgets[i], startPosition, endPosition);\n                        if (this.isHighlightNext) {\n                            this.highlightNextBlock(this.hightLightNextParagraph, startPosition, endPosition);\n                            this.isHighlightNext = false;\n                            this.hightLightNextParagraph = undefined;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Navigates to the next editing region, where current user can edit.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.navigateToNextEditingRegion = function () {\n        var editRange = this.getEditRangeStartElement(true);\n        if (this.editRangeCollection.length > 0) {\n            this.sortEditRangeCollection();\n            var length_2 = this.editRangeCollection.length;\n            var index = length_2;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(editRange)) {\n                index = this.editRangeCollection.indexOf(editRange);\n            }\n            var editRangeStart = index < length_2 - 1 ?\n                this.editRangeCollection[index + 1] : this.editRangeCollection[0];\n            var positionInfo = this.getPosition(editRangeStart, true);\n            var startPosition = positionInfo.startPosition;\n            var endPosition = positionInfo.endPosition;\n            this.selectRange(startPosition, endPosition);\n        }\n    };\n    Selection.prototype.sortEditRangeCollection = function () {\n        //Sort based on position\n        for (var i = this.editRangeCollection.length - 1; i >= 0; i--) {\n            for (var j = 1; j <= i; j++) {\n                var nextPosition = this.getPosition(this.editRangeCollection[j - 1]).startPosition;\n                var firstPosition = this.getPosition(this.editRangeCollection[j]).startPosition;\n                if (nextPosition.isExistAfter(firstPosition)) {\n                    var temp = this.editRangeCollection[j - 1];\n                    this.editRangeCollection[j - 1] = this.editRangeCollection[j];\n                    this.editRangeCollection[j] = temp;\n                }\n            }\n        }\n    };\n    /**\n     * Highlights all the editing region, where current user can edit.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.toggleEditingRegionHighlight = function () {\n        this.isHighlightEditRegion = !this.isHighlightEditRegion;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getEditRangeStartElement = function (isNavigateToNextEditRegion) {\n        for (var i = 0; i < this.editRangeCollection.length; i++) {\n            var editStart = this.editRangeCollection[i];\n            var position = this.getPosition(editStart, isNavigateToNextEditRegion);\n            var start = position.startPosition;\n            var end = position.endPosition;\n            if ((this.start.isExistAfter(start) || this.start.isAtSamePosition(start))\n                && (this.end.isExistBefore(end) || this.end.isAtSamePosition(end))) {\n                return editStart;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Determines whether the selection is inside the edit region.\n     *\n     * @returns {boolean} Returns true if the selection is inside the edit region; Otherwise, false.\n     */\n    Selection.prototype.isSelectionInEditRegion = function () {\n        if (!this.documentHelper.isDocumentProtected) {\n            return false;\n        }\n        return this.checkSelectionIsAtEditRegion();\n    };\n    /**\n     * Determines whether the specified start and end position of the selection is inside the edit region.\n     * @param {TextPosition} start Specify the start position of the selection.\n     * @param {TextPosition} end Specify the end position of the selection.\n     * @returns {boolean} Returns true if the specified start and end position of the selection is inside the edit region; Otherwise, false.\n     */\n    Selection.prototype.checkSelectionIsAtEditRegion = function (start, end) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(start) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(end)) {\n            start = this.start;\n            end = this.end;\n            if (!this.isForward) {\n                start = this.end;\n                end = this.start;\n            }\n        }\n        if (this.editRangeCollection.length > 0 && this.isFootEndNoteParagraph(start.paragraph) && this.isFootEndNoteParagraph(end.paragraph) && start.paragraph.containerWidget == end.paragraph.containerWidget) {\n            var position = this.getElementPosition(start.paragraph.containerWidget.footNoteReference, true).startPosition;\n            start = position;\n            end = position;\n        }\n        for (var i = 0; i < this.editRangeCollection.length; i++) {\n            var editRangeStart = this.editRangeCollection[i];\n            if (!editRangeStart.line.paragraph.isInsideTable\n                || (editRangeStart.line.paragraph.isInsideTable && !editRangeStart.editRangeEnd.line.paragraph.isInsideTable)\n                || editRangeStart.columnFirst === -1) {\n                if (this.isSelectionInsideEditRange(editRangeStart, start, end)) {\n                    return true;\n                }\n            }\n            else {\n                if (editRangeStart.paragraph.isInsideTable && editRangeStart.editRangeEnd &&\n                    editRangeStart.editRangeEnd.line.paragraph.isInsideTable) {\n                    var editRangeRow = editRangeStart.paragraph.associatedCell.ownerRow;\n                    var startCell = start.paragraph.associatedCell;\n                    var endCell = end.paragraph.associatedCell;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startCell) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(endCell)) {\n                        if (editRangeRow.equals(startCell.ownerRow) && editRangeRow.equals(endCell.ownerRow)\n                            && startCell.index >= editRangeStart.columnFirst && startCell.index <= editRangeStart.columnLast) {\n                            if (this.isEmpty && startCell.index === editRangeStart.line.paragraph.associatedCell.index) {\n                                if (this.isSelectionInsideEditRange(editRangeStart, start, end)) {\n                                    return true;\n                                }\n                            }\n                            else if (!this.isCellSelected(startCell, start, end)) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.isEditRangeCellSelected = function (start, end) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(start) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(end)) {\n            start = this.start;\n            end = this.end;\n            if (!this.isForward) {\n                start = this.end;\n                end = this.start;\n            }\n        }\n        for (var i = 0; i < this.editRangeCollection.length; i++) {\n            var editRangeStart = this.editRangeCollection[i];\n            if (editRangeStart.paragraph.isInsideTable && editRangeStart.editRangeEnd &&\n                editRangeStart.editRangeEnd.line.paragraph.isInsideTable) {\n                var startCell = start.paragraph.associatedCell;\n                var endCell = end.paragraph.associatedCell;\n                var editRangeCell = editRangeStart.paragraph.associatedCell;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(startCell) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(endCell)) {\n                    if (startCell.index >= editRangeStart.columnFirst && startCell.index <= editRangeStart.columnLast) {\n                        if (this.isCellSelected(editRangeCell, start, end)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    Selection.prototype.isSelectionInsideEditRange = function (editRangeStart, start, end) {\n        var positionInfo = this.getPosition(editRangeStart);\n        var startPosition = positionInfo.startPosition;\n        var endPosition = positionInfo.endPosition;\n        if ((start.isExistAfter(startPosition) || start.isAtSamePosition(startPosition))\n            && (end.isExistBefore(endPosition) || end.isAtSamePosition(endPosition))) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getPosition = function (element, isNavigateToNextEditRegion) {\n        var offset = element.line.getOffset(element, 1);\n        var startPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n        startPosition.setPositionParagraph(element.line, offset);\n        var endElement;\n        if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.EditRangeStartElementBox) {\n            endElement = element.editRangeEnd;\n        }\n        else if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ContentControl) {\n            endElement = element.reference;\n        }\n        else if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox) {\n            endElement = element.reference;\n        }\n        else if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox) {\n            endElement = element.comment.commentEnd;\n        }\n        var endPosition;\n        if (endElement) {\n            var line = endElement.line;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(endElement.line) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(line.children)) {\n                offset = endElement.line.getOffset(endElement, isNavigateToNextEditRegion || (endElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ContentControl && this.isSelectionisInCC) ? 0 : 1);\n                endPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n                endPosition.setPositionParagraph(endElement.line, offset);\n            }\n            else {\n                endPosition = startPosition.clone();\n            }\n        }\n        return { 'startPosition': startPosition, 'endPosition': endPosition };\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.checkContentControlLocked = function (checkFormat) {\n        this.owner.editorModule.isXmlMapped = false;\n        this.isSelectionisInCC = true;\n        for (var i = 0; i < this.documentHelper.contentControlCollection.length; i++) {\n            var contentControlStart = this.documentHelper.contentControlCollection[i];\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(contentControlStart.reference) || contentControlStart.reference.indexInOwner === -1) {\n                continue;\n            }\n            var position = this.getPosition(contentControlStart);\n            var cCstart = position.startPosition;\n            var cCend = position.endPosition;\n            var start = this.start;\n            var end = this.end;\n            if (!this.isForward) {\n                start = this.end;\n                end = this.start;\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(checkFormat)) {\n                var cCStartInsideSelction = ((cCstart.isExistAfter(start) || cCstart.isAtSamePosition(start)) && (cCstart.isExistBefore(end) || cCstart.isAtSamePosition(end)));\n                var cCEndInsideSelction = ((cCend.isExistAfter(start) || cCend.isAtSamePosition(start)) && (cCend.isExistBefore(end) || cCend.isAtSamePosition(end)));\n                if (cCStartInsideSelction && cCEndInsideSelction) {\n                    if (contentControlStart.contentControlProperties.lockContentControl || this.documentHelper.isFormFillProtectedMode) {\n                        this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.contentControlEvent);\n                        return true;\n                    }\n                    return false;\n                }\n                if ((cCStartInsideSelction) || (cCEndInsideSelction)) {\n                    if (!(cCstart.isAtSamePosition(start) || cCend.isAtSamePosition(start)) && (contentControlStart.contentControlProperties.lockContentControl || contentControlStart.contentControlProperties.lockContents)) {\n                        return true;\n                    }\n                }\n            }\n            if (checkFormat) {\n                var cCStartInsideSelction = ((cCstart.isExistAfter(start) || cCstart.isAtSamePosition(start)) && (cCstart.isExistBefore(end) || cCstart.isAtSamePosition(end)));\n                var cCEndInsideSelction = ((cCend.isExistAfter(start) || cCend.isAtSamePosition(start)) && (cCend.isExistBefore(end) || cCend.isAtSamePosition(end)));\n                if (cCStartInsideSelction && cCEndInsideSelction) {\n                    if (contentControlStart.contentControlProperties.lockContents) {\n                        this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.contentControlEvent);\n                        return true;\n                    }\n                    return false;\n                }\n                if ((cCStartInsideSelction) || (cCEndInsideSelction)) {\n                    if (!(cCstart.isAtSamePosition(start) || cCend.isAtSamePosition(start)) && contentControlStart.contentControlProperties.lockContents) {\n                        return true;\n                    }\n                }\n            }\n            if ((start.isExistAfter(cCstart) || start.isAtSamePosition(cCstart))\n                && (end.isExistBefore(cCend) || end.isAtSamePosition(cCend))) {\n                if (contentControlStart.contentControlProperties.xmlMapping\n                    && contentControlStart.contentControlProperties.xmlMapping.isMapped) {\n                    this.owner.editorModule.isXmlMapped = true;\n                }\n                if (contentControlStart.contentControlProperties.lockContents) {\n                    this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.contentControlEvent);\n                    return true;\n                }\n                else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(checkFormat)\n                    && (contentControlStart.contentControlProperties.type === 'CheckBox'\n                        || contentControlStart.contentControlProperties.type === 'ComboBox'\n                        || contentControlStart.contentControlProperties.type === 'DropDownList'\n                        || contentControlStart.contentControlProperties.type === 'Date'\n                        || contentControlStart.contentControlProperties.type === 'Picture'\n                        || contentControlStart.contentControlProperties.type === 'Text'\n                        || contentControlStart.contentControlProperties.type === 'RichText')) {\n                    this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_6__.contentControlEvent);\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getElementPosition = function (element, isEnd) {\n        var offset = element.line.getOffset(element, isEnd ? 0 : 1);\n        var startPosition = new _selection_helper__WEBPACK_IMPORTED_MODULE_9__.TextPosition(this.owner);\n        startPosition.setPositionParagraph(element.line, offset);\n        return { 'startPosition': startPosition, 'endPosition': undefined };\n    };\n    //Restrict editing implementation ends\n    /**\n     * Update ref field.\n     * @private\n     */\n    Selection.prototype.updateRefField = function (field) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(field)) {\n            field = this.getHyperlinkField(true);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(field)) {\n            if (!this.isReferenceField(field)) {\n                return;\n            }\n            var fieldCode = this.getFieldCode(field).replace(/\\s+/g, ' ');\n            fieldCode = fieldCode.trim();\n            if (fieldCode.toLowerCase().indexOf('ref') === 0) {\n                var code = fieldCode.split(' ');\n                if (code.length > 1) {\n                    var bookmarkId = code[1];\n                    if (this.documentHelper.bookmarks.containsKey(bookmarkId)) {\n                        var start = this.start;\n                        var end = this.end;\n                        if (!this.isForward) {\n                            start = this.end;\n                            end = this.start;\n                        }\n                        var bookmarkStart = this.documentHelper.bookmarks.get(bookmarkId);\n                        var bookmarkEnd = bookmarkStart.reference;\n                        var previousNode = bookmarkStart.previousNode;\n                        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(previousNode) || !(previousNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox))\n                            && bookmarkEnd && bookmarkEnd.previousNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox\n                            && bookmarkEnd.previousNode.fieldType === 1\n                            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(bookmarkEnd.previousNode.fieldBegin)\n                            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(bookmarkEnd.previousNode.fieldBegin.formFieldData)) {\n                            bookmarkStart = bookmarkEnd.previousNode.fieldBegin.fieldSeparator;\n                            bookmarkEnd = bookmarkEnd.previousNode.fieldBegin.fieldEnd;\n                        }\n                        else if (previousNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && previousNode.fieldType === 0\n                            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(previousNode.formFieldData)) {\n                            bookmarkStart = previousNode.fieldSeparator;\n                            bookmarkEnd = previousNode.fieldEnd;\n                        }\n                        var offset = bookmarkStart.line.getOffset(bookmarkStart, 1);\n                        start.setPositionParagraph(bookmarkStart.line, offset);\n                        end.setPositionParagraph(bookmarkEnd.line, bookmarkEnd.line.getOffset(bookmarkEnd, 0));\n                        var documentContent = this.owner.sfdtExportModule.write((this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0), start.currentWidget, start.offset, end.currentWidget, end.offset, false, true);\n                        var startElement = field.fieldSeparator;\n                        var endElement = field.fieldEnd;\n                        start.setPositionParagraph(startElement.line, startElement.line.getOffset(startElement, 1));\n                        end.setPositionParagraph(endElement.line, endElement.line.getOffset(endElement, 0));\n                        this.owner.editorModule.pasteContents(documentContent);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.footnoteReferenceElement = function (start, end, inline) {\n        var container = this.getContainerWidget(start.paragraph);\n        var count = 0;\n        if (container instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget) {\n            var footNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n            for (var i = 0; i < this.documentHelper.pages.length; i++) {\n                count = 0;\n                var page = this.documentHelper.pages[i];\n                for (var j = 0; j < page.bodyWidgets.length; j++) {\n                    var bodyWidget = page.bodyWidgets[j];\n                    for (var k = 0; k < bodyWidget.childWidgets.length; k++) {\n                        var paragraph = bodyWidget.childWidgets[k];\n                        if (paragraph instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n                            for (var tr = 0; tr < paragraph.childWidgets.length; tr++) {\n                                var tablerow = paragraph.childWidgets[tr];\n                                for (var tc = 0; tc < tablerow.childWidgets.length; tc++) {\n                                    var tablecell = tablerow.childWidgets[tc];\n                                    for (var para = 0; para < tablecell.childWidgets.length; para++) {\n                                        var paragr = tablecell.childWidgets[para];\n                                        for (var line = 0; line < paragr.childWidgets.length; line++) {\n                                            var lines = paragr.childWidgets[line];\n                                            count = 0;\n                                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(lines.children)) {\n                                                for (var m = 0; m < lines.children.length; m++) {\n                                                    var child = lines.children[m];\n                                                    count += child.length;\n                                                    if (child instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootnoteElementBox && child === footNoteElement) {\n                                                        start.setPositionParagraph(lines, count - 1);\n                                                        end.setPositionParagraph(lines, count);\n                                                        this.selectRange(start, end);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            for (var l = 0; l < paragraph.childWidgets.length; l++) {\n                                var lines = paragraph.childWidgets[l];\n                                count = 0;\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(lines.children)) {\n                                    for (var m = 0; m < lines.children.length; m++) {\n                                        var child = lines.children[m];\n                                        count += child.length;\n                                        if (child instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootnoteElementBox && child === footNoteElement) {\n                                            start.setPositionParagraph(lines, count - 1);\n                                            end.setPositionParagraph(lines, count);\n                                            this.selectRange(start, end);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Convert hierachical index to linear index;\n     * @private\n     */\n    Selection.prototype.getAbsolutePositionFromRelativePosition = function (textPosition) {\n        var startPosition;\n        if (typeof textPosition == 'string') {\n            startPosition = this.getTextPosBasedOnLogicalIndex(textPosition);\n        }\n        else {\n            startPosition = textPosition;\n        }\n        var paragraphInfo = this.getParagraphInfo(startPosition);\n        var positionInfo = { position: 0, done: false };\n        this.getPositionInfoForHeaderFooter(paragraphInfo, positionInfo);\n        if (!positionInfo.done) {\n            //Iterate Footnotes content;\n        }\n        return positionInfo.position;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getPositionInfoForBodyContent = function (paragraphInfo, positionInfo, blockWidget, tableBlock) {\n        var block = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(blockWidget) ? blockWidget : this.documentHelper.pages[0].bodyWidgets[0].childWidgets[0];\n        //Iterate body content;\n        positionInfo.position += this.getBlockIndex(block, paragraphInfo, positionInfo, tableBlock);\n        return positionInfo;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getPositionInfoForHeaderFooter = function (paragraphInfo, positionInfo, tableBlock) {\n        positionInfo = this.getPositionInfoForBodyContent(paragraphInfo, positionInfo, undefined, tableBlock);\n        if (!positionInfo.done) {\n            //Iterate header/footer content;\n            this.getBlockIndexFromHeaderFooter(paragraphInfo, positionInfo, tableBlock);\n        }\n        return positionInfo;\n    };\n    Selection.prototype.getBlockIndexFromHeaderFooter = function (paragraphInfo, positionInfo, tableBlock) {\n        //Iterate header/footer content;\n        var headersFooters = this.documentHelper.headersFooters;\n        for (var _i = 0, headersFooters_1 = headersFooters; _i < headersFooters_1.length; _i++) {\n            var headerFooter = headersFooters_1[_i];\n            for (var i = 0; i < 6; i++) {\n                var currentHeaderFooter = headerFooter[i];\n                if (currentHeaderFooter) {\n                    positionInfo.position += this.getBlockIndex(currentHeaderFooter.childWidgets[0], paragraphInfo, positionInfo, tableBlock);\n                    if (positionInfo.done) {\n                        return positionInfo;\n                    }\n                }\n                else {\n                    positionInfo.position += 1;\n                }\n            }\n        }\n        return positionInfo;\n    };\n    Selection.prototype.getBlockIndex = function (block, paragraphInfo, positionInfo, tableBlock) {\n        var position = 0;\n        var fieldResult = { length: 0 };\n        do {\n            if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(paragraphInfo) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(paragraphInfo.paragraph) && paragraphInfo.paragraph.equals(block)) {\n                //Paragraph start\n                position += 1;\n                var elementInfo = block.getInline(paragraphInfo.offset, 0);\n                position += this.getBlockOffsetByElement(paragraphInfo, block, elementInfo.element, elementInfo.index, fieldResult);\n                // if (this.isEndOffset && this.end.offset === this.getLineLength(this.end.currentWidget) + 1) {\n                //     position += 1;\n                // }\n                // if (this.owner.documentHelper.isDocumentProtected && this.owner.documentHelper.protectionType === 'FormFieldsOnly') {\n                //     position -= fieldResult.length;\n                // }\n                positionInfo.done = true;\n                break;\n            }\n            position = this.getBlockLength(paragraphInfo, block, position, positionInfo, true, tableBlock, fieldResult);\n            if (positionInfo.done) {\n                // if (this.owner.documentHelper.isDocumentProtected && this.owner.documentHelper.protectionType === 'FormFieldsOnly') {\n                //     position -= fieldResult.length;\n                // }\n                break;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(block)) {\n                if (block.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.BodyWidget && block.containerWidget.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootNoteWidget) {\n                    var nextBlock = block.getSplitWidgets().pop().nextRenderedWidget;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextBlock) && block.containerWidget !== nextBlock.containerWidget) {\n                        break;\n                    }\n                    else {\n                        block = nextBlock;\n                    }\n                }\n                else {\n                    block = block.getSplitWidgets().pop().nextRenderedWidget;\n                }\n            }\n        } while (block);\n        //positionInfo.position = position;\n        return position;\n    };\n    Selection.prototype.getBlockTotalLength = function (block, targetBlock, positionInfo, tableBlock, fieldResult) {\n        var offset = 0;\n        var isDropdown = false;\n        var splittedWidget = block.getSplitWidgets();\n        for (var i = 0; i < splittedWidget.length; i++) {\n            for (var j = 0; j < splittedWidget[i].childWidgets.length; j++) {\n                var line = splittedWidget[i].childWidgets[j];\n                for (var k = 0; k < line.children.length; k++) {\n                    var element = line.children[k];\n                    if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                        continue;\n                    }\n                    if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox || element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootnoteElementBox) {\n                        if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox) {\n                            if (element.textFrame.childWidgets.length > 0) {\n                                offset += this.getBlockIndex(element.textFrame.childWidgets[0], targetBlock, positionInfo, undefined);\n                            }\n                        }\n                        else {\n                            offset += this.getBlockIndex(element.bodyWidget.childWidgets[0], targetBlock, positionInfo, undefined);\n                        }\n                        if (positionInfo.done) {\n                            return offset;\n                        }\n                    }\n                    if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && element.fieldType == 0 && element.formFieldData instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.DropDownFormField) {\n                        isDropdown = true;\n                    }\n                    if (isDropdown && element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && element.fieldType == 1) {\n                        if (element.previousNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                            fieldResult.length += element.previousNode.length;\n                            isDropdown = false;\n                        }\n                    }\n                    if (!element.skipformFieldLength) {\n                        offset += element.length;\n                    }\n                }\n            }\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getBlockLength = function (paragraphInfo, block, position, completed, skipShapeElement, tableBlock, fieldResult) {\n        if (paragraphInfo && block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(paragraphInfo.paragraph) && paragraphInfo.paragraph.equals(block)) {\n            //Paragraph start\n            position += 1;\n            var elementInfo = block.getInline(paragraphInfo.offset, 0);\n            position += this.getBlockOffsetByElement(paragraphInfo, block, elementInfo.element, elementInfo.index, fieldResult);\n            if (this.isEndOffset && block.isInsideTable && block.associatedCell.lastChild.equals(block) && paragraphInfo.offset === this.getParagraphLength(block) + 1) {\n                position += 1;\n            }\n            completed.done = true;\n            return position;\n        }\n        if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            // Code for Comparing the offset calculated using old approach and optimized approach\n            // if (this.isNewApproach) {\n            // position += 1;\n            // if (!skipShapeElement) {\n            //     position += block.length;\n            // } else {\n            //     position += this.getBlockTotalLength(block, paragraphInfo, completed, tableBlock, fieldResult);\n            // }\n            // } else {\n            //Add Paragraph start length;\n            position += 1;\n            if (!skipShapeElement) {\n                position += (block.getTotalLength());\n            }\n            else {\n                position += this.getBlockTotalLength(block, paragraphInfo, completed, tableBlock, fieldResult);\n            }\n            // }\n        }\n        else if (block instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n            // Table start mark length\n            position += 1;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(tableBlock)) {\n                if (tableBlock instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n                    if (tableBlock.equals(block)) {\n                        completed.done = true;\n                        return position;\n                    }\n                }\n            }\n            var row = block.firstChild;\n            while (row) {\n                // Row mark length\n                position += 1;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(tableBlock)) {\n                    if (tableBlock instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableRowWidget) {\n                        if (tableBlock.equals(row)) {\n                            completed.done = true;\n                            return position;\n                        }\n                    }\n                }\n                var cell = row.firstChild;\n                while (cell) {\n                    // Cell mark length\n                    position += 1;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(tableBlock)) {\n                        if (tableBlock instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n                            if (tableBlock.equals(cell)) {\n                                completed.done = true;\n                                return position;\n                            }\n                        }\n                    }\n                    var childBlock = cell.firstChild;\n                    while (childBlock) {\n                        position = this.getBlockLength(paragraphInfo, childBlock, position, completed, skipShapeElement, tableBlock, fieldResult);\n                        if (completed.done) {\n                            return position;\n                        }\n                        childBlock = childBlock.getSplitWidgets().pop().nextRenderedWidget;\n                    }\n                    cell = cell.nextWidget;\n                }\n                var tableIndex = row.ownerTable.index;\n                row = row.getSplitWidgets().pop().nextRenderedWidget;\n                if (row && row.ownerTable.index !== tableIndex) {\n                    row = undefined;\n                }\n            }\n            // Table end mark length\n            // position += 1;\n        }\n        return position;\n    };\n    /**\n     * Calculate the cell length.\n     * @private\n     */\n    Selection.prototype.calculateCellLength = function (cell) {\n        var block = cell.firstChild;\n        var position = 0;\n        var completed = { \"done\": false };\n        var paragraphInfo = { 'paragraph': null, 'offset': 0 };\n        while (block) {\n            position = this.getBlockLength(paragraphInfo, block, position, completed, true, undefined, undefined);\n            block = block.getSplitWidgets().pop().nextRenderedWidget;\n        }\n        return position;\n    };\n    Selection.prototype.getBlockOffsetByElement = function (paragraphInfo, block, targetElement, elementIndex, fieldResult) {\n        var offset = 0;\n        var isDropdown = false;\n        var splittedWidget = block.getSplitWidgets();\n        for (var i = 0; i < splittedWidget.length; i++) {\n            for (var j = 0; j < splittedWidget[i].childWidgets.length; j++) {\n                var line = splittedWidget[i].childWidgets[j];\n                for (var k = 0; k < line.children.length; k++) {\n                    var element = line.children[k];\n                    if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                        continue;\n                    }\n                    if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && element.fieldType == 0 && element.formFieldData instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.DropDownFormField) {\n                        isDropdown = true;\n                    }\n                    if (isDropdown && element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && element.fieldType == 1) {\n                        if (element.previousNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                            fieldResult.length += element.previousNode.length;\n                            isDropdown = false;\n                        }\n                    }\n                    if (element === targetElement) {\n                        return offset + elementIndex;\n                    }\n                    if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox || element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.FootnoteElementBox) {\n                        if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox) {\n                            if (element.textFrame.childWidgets.length > 0) {\n                                for (var m = 0; m < element.textFrame.childWidgets.length; m++) {\n                                    offset = this.getBlockLength(paragraphInfo, element.textFrame.childWidgets[m], offset, { done: false }, false, undefined, undefined);\n                                }\n                            }\n                        }\n                        else {\n                            if (element.bodyWidget.childWidgets.length > 0) {\n                                for (var m = 0; m < element.bodyWidget.childWidgets.length; m++) {\n                                    offset = this.getBlockLength(paragraphInfo, element.bodyWidget.childWidgets[m], offset, { done: false }, false, undefined, undefined);\n                                }\n                            }\n                        }\n                    }\n                    if (!element.skipformFieldLength) {\n                        offset += element.length;\n                    }\n                }\n            }\n        }\n        return offset;\n    };\n    /**\n     * This method is for collaborative editing.\n     * @private\n     */\n    Selection.prototype.getTableRelativeValue = function (startPosition, endPosition) {\n        // If start is in firset row first cell and end is in last row last cell or next table or next para. we need to minus the offset to 3. Else checking row.\n        // If start is first cell and end is in row last cell or other row last cell or other widgets. we need to minus the offset to 2. else return 0.\n        if (startPosition.currentWidget.paragraph.isInsideTable) {\n            if (this.isTableSelected()) {\n                return 3;\n            }\n            else if (this.isRowSelect() && endPosition.paragraph.isInsideTable && startPosition.paragraph.associatedCell.ownerTable.equals(endPosition.paragraph.associatedCell.ownerTable)) {\n                return 2;\n            }\n            else {\n                var table = startPosition.paragraph.associatedCell.ownerTable.getSplitWidgets();\n                var firstParagraph = this.getFirstBlockInFirstCell(table[0]);\n                if (startPosition.paragraph.associatedCell.equals(firstParagraph.associatedCell)) {\n                    if (endPosition.paragraph.isInsideTable) {\n                        if (!startPosition.paragraph.associatedCell.ownerTable.equals(endPosition.paragraph.associatedCell.ownerTable)) {\n                            var length_3 = this.isRowSelect() ? 2 : 3;\n                            var table_1 = startPosition.paragraph.associatedCell.ownerTable;\n                            while (table_1.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n                                length_3 += 3;\n                                table_1 = table_1.containerWidget.ownerTable;\n                                if (table_1.equals(endPosition.paragraph.associatedCell.ownerTable)) {\n                                    break;\n                                }\n                            }\n                            return length_3;\n                        }\n                        else {\n                            return 0;\n                        }\n                    }\n                    else {\n                        return 3;\n                    }\n                }\n                else {\n                    if (endPosition.currentWidget.paragraph.isInsideTable) {\n                        if (!startPosition.paragraph.associatedCell.ownerTable.equals(endPosition.paragraph.associatedCell.ownerTable)) {\n                            return 2;\n                        }\n                        else {\n                            return 0;\n                        }\n                    }\n                    else {\n                        return 2;\n                    }\n                }\n            }\n        }\n        return 0;\n    };\n    /**\n     *\n     * @private\n     */\n    Selection.prototype.isRowSelect = function () {\n        // This method wil return if start row child widgets equals to end row child widgets. \n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(start.paragraph.associatedCell) ||\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(end.paragraph.associatedCell) || start.paragraph.associatedCell.equals(end.paragraph.associatedCell) || this.isTableSelected(true)) {\n            return false;\n        }\n        var endTable = end.paragraph.associatedCell.ownerTable;\n        var isRowSelect = false;\n        if (endTable.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n            while (endTable.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n                endTable = endTable.containerWidget.ownerTable;\n                for (var i = 0; i < endTable.childWidgets.length; i++) {\n                    var row_1 = endTable.childWidgets[i];\n                    if (row_1.childWidgets[row_1.childWidgets.length - 1].equals(endTable.containerWidget)) {\n                        isRowSelect = true;\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < endTable.childWidgets.length; i++) {\n                var row_2 = endTable.childWidgets[i];\n                if (row_2.childWidgets[row_2.childWidgets.length - 1].equals(end.paragraph.associatedCell)) {\n                    isRowSelect = true;\n                }\n            }\n        }\n        var row = start.paragraph.associatedCell.ownerRow.getSplitWidgets();\n        var firstcell;\n        if (row[0].childWidgets.length > 0) {\n            firstcell = row[0].childWidgets[0];\n        }\n        return start.paragraph.associatedCell.equals(firstcell) && isRowSelect;\n    };\n    return Selection;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/selection/selection.js?");

/***/ })

}]);