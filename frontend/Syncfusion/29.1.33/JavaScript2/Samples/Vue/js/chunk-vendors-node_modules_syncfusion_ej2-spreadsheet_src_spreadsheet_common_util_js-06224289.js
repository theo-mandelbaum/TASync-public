"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-spreadsheet_src_spreadsheet_common_util_js-06224289"],{

/***/ "./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/common/util.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/common/util.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addDPRValue: () => (/* binding */ addDPRValue),\n/* harmony export */   clearRange: () => (/* binding */ clearRange),\n/* harmony export */   destroyComponent: () => (/* binding */ destroyComponent),\n/* harmony export */   findMaxValue: () => (/* binding */ findMaxValue),\n/* harmony export */   focus: () => (/* binding */ focus),\n/* harmony export */   getBorderHeight: () => (/* binding */ getBorderHeight),\n/* harmony export */   getBorderWidth: () => (/* binding */ getBorderWidth),\n/* harmony export */   getBottomOffset: () => (/* binding */ getBottomOffset),\n/* harmony export */   getCellPosition: () => (/* binding */ getCellPosition),\n/* harmony export */   getChartsIndexes: () => (/* binding */ getChartsIndexes),\n/* harmony export */   getClientX: () => (/* binding */ getClientX),\n/* harmony export */   getClientY: () => (/* binding */ getClientY),\n/* harmony export */   getColGroupWidth: () => (/* binding */ getColGroupWidth),\n/* harmony export */   getDPRValue: () => (/* binding */ getDPRValue),\n/* harmony export */   getEndEvent: () => (/* binding */ getEndEvent),\n/* harmony export */   getExcludedColumnWidth: () => (/* binding */ getExcludedColumnWidth),\n/* harmony export */   getLineHeight: () => (/* binding */ getLineHeight),\n/* harmony export */   getLines: () => (/* binding */ getLines),\n/* harmony export */   getMaxHgt: () => (/* binding */ getMaxHgt),\n/* harmony export */   getMoveEvent: () => (/* binding */ getMoveEvent),\n/* harmony export */   getPageX: () => (/* binding */ getPageX),\n/* harmony export */   getPageY: () => (/* binding */ getPageY),\n/* harmony export */   getRightIdx: () => (/* binding */ getRightIdx),\n/* harmony export */   getScrollBarWidth: () => (/* binding */ getScrollBarWidth),\n/* harmony export */   getSheetProperties: () => (/* binding */ getSheetProperties),\n/* harmony export */   getSiblingsHeight: () => (/* binding */ getSiblingsHeight),\n/* harmony export */   getStandardHeight: () => (/* binding */ getStandardHeight),\n/* harmony export */   getStartEvent: () => (/* binding */ getStartEvent),\n/* harmony export */   getTextHeight: () => (/* binding */ getTextHeight),\n/* harmony export */   getTextHeightWithBorder: () => (/* binding */ getTextHeightWithBorder),\n/* harmony export */   getTextWidth: () => (/* binding */ getTextWidth),\n/* harmony export */   getUpdateUsingRaf: () => (/* binding */ getUpdateUsingRaf),\n/* harmony export */   hasTemplate: () => (/* binding */ hasTemplate),\n/* harmony export */   inView: () => (/* binding */ inView),\n/* harmony export */   isColumnRange: () => (/* binding */ isColumnRange),\n/* harmony export */   isDiscontinuousRange: () => (/* binding */ isDiscontinuousRange),\n/* harmony export */   isLockedCells: () => (/* binding */ isLockedCells),\n/* harmony export */   isMouseDown: () => (/* binding */ isMouseDown),\n/* harmony export */   isMouseMove: () => (/* binding */ isMouseMove),\n/* harmony export */   isMouseUp: () => (/* binding */ isMouseUp),\n/* harmony export */   isNavigationKey: () => (/* binding */ isNavigationKey),\n/* harmony export */   isRowRange: () => (/* binding */ isRowRange),\n/* harmony export */   isTouchEnd: () => (/* binding */ isTouchEnd),\n/* harmony export */   isTouchMove: () => (/* binding */ isTouchMove),\n/* harmony export */   isTouchStart: () => (/* binding */ isTouchStart),\n/* harmony export */   locateElem: () => (/* binding */ locateElem),\n/* harmony export */   removeAllChildren: () => (/* binding */ removeAllChildren),\n/* harmony export */   removeElements: () => (/* binding */ removeElements),\n/* harmony export */   removeRangeEle: () => (/* binding */ removeRangeEle),\n/* harmony export */   setAriaOptions: () => (/* binding */ setAriaOptions),\n/* harmony export */   setColMinWidth: () => (/* binding */ setColMinWidth),\n/* harmony export */   setMaxHgt: () => (/* binding */ setMaxHgt),\n/* harmony export */   setPosition: () => (/* binding */ setPosition),\n/* harmony export */   setResize: () => (/* binding */ setResize),\n/* harmony export */   setRowEleHeight: () => (/* binding */ setRowEleHeight),\n/* harmony export */   setStandardHeight: () => (/* binding */ setStandardHeight),\n/* harmony export */   setStyleAttribute: () => (/* binding */ setStyleAttribute),\n/* harmony export */   setTextLineHeight: () => (/* binding */ setTextLineHeight),\n/* harmony export */   setWidthAndHeight: () => (/* binding */ setWidthAndHeight),\n/* harmony export */   updateAction: () => (/* binding */ updateAction)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/common/index.js\");\n/* harmony import */ var _workbook_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../workbook/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/index.js\");\n/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./event */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/common/event.js\");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constant */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/common/constant.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The function used to update Dom using requestAnimationFrame.\n *\n * @param  {Function} fn - Function that contains the actual action\n * @returns {void}\n * @hidden\n */\nfunction getUpdateUsingRaf(fn) {\n    requestAnimationFrame(function () {\n        fn();\n    });\n}\n/**\n * The function used to remove the dom element children.\n *\n * @param  {Element} parent - Specify the parent\n * @returns {void} - The function used to get colgroup width based on the row index.\n * @hidden\n */\nfunction removeAllChildren(parent) {\n    while (parent.firstChild) {\n        parent.removeChild(parent.firstChild);\n    }\n}\n/**\n * The function used to get colgroup width based on the row index.\n *\n * @param  {number} index - Specify the index\n * @returns {number} - The function used to get colgroup width based on the row index.\n * @hidden\n */\nfunction getColGroupWidth(index) {\n    var width = 30;\n    if (index.toString().length > 3) {\n        width = index.toString().length * 10;\n    }\n    return width;\n}\nvar scrollAreaWidth = null;\nvar textLineHeight = 1.24;\n/**\n * @hidden\n * @returns {number} - To get scrollbar width\n */\nfunction getScrollBarWidth() {\n    if (scrollAreaWidth !== null) {\n        return scrollAreaWidth;\n    }\n    var htmlDivNode = document.createElement('div');\n    var result = 0;\n    htmlDivNode.style.cssText = 'width:100px;height: 100px;overflow: scroll;position: absolute;top: -9999px;';\n    document.body.appendChild(htmlDivNode);\n    result = (htmlDivNode.offsetWidth - htmlDivNode.clientWidth) | 0;\n    document.body.removeChild(htmlDivNode);\n    return scrollAreaWidth = result;\n}\n/**\n * @hidden\n * @param {HTMLElement} element - Specify the element.\n * @param {string[]} classList - Specify the classList\n * @param {number} scaleY - Specify the scaleY value.\n * @returns {number} - get Siblings Height\n */\nfunction getSiblingsHeight(element, classList, scaleY) {\n    if (scaleY === void 0) { scaleY = 1; }\n    classList = classList || ['e-ribbon', 'e-formula-bar-panel', 'e-sheet-tab-panel', 'e-header-toolbar'];\n    var previous = getHeightFromDirection(element, 'previous', classList, scaleY);\n    var next = getHeightFromDirection(element, 'next', classList, scaleY);\n    return previous + next;\n}\n/**\n * @param {HTMLElement} element - Specify the element.\n * @param {string} direction - Specify the direction.\n * @param {string[]} classList - Specify the classList.\n * @param {number} scaleY - Specify the scaleY value.\n * @returns {number} - get Height FromDirection\n */\nfunction getHeightFromDirection(element, direction, classList, scaleY) {\n    var sibling = (element)[direction + 'ElementSibling'];\n    var result = 0;\n    while (sibling) {\n        if (classList.some(function (value) { return sibling.classList.contains(value); })) {\n            result += (sibling.getBoundingClientRect().height * scaleY);\n        }\n        sibling = (sibling)[direction + 'ElementSibling'];\n    }\n    return result;\n}\n/**\n * @hidden\n * @param {Spreadsheet} context - Specify the spreadsheet.\n * @param {number[]} range - Specify the range.\n * @param {boolean} isModify - Specify the boolean value.\n * @returns {boolean} - Returns boolean value.\n */\nfunction inView(context, range, isModify) {\n    if (context.scrollSettings.enableVirtualization) {\n        var sheet = context.getActiveSheet();\n        var frozenRow = context.frozenRowCount(sheet);\n        var frozenCol = context.frozenColCount(sheet);\n        var topIdx = context.viewport.topIndex + frozenRow;\n        var leftIdx = context.viewport.leftIndex + frozenCol;\n        var bottomIdx = context.viewport.bottomIndex;\n        var rightIdx = context.viewport.rightIndex;\n        if (sheet.frozenRows || sheet.frozenColumns) {\n            if (context.insideViewport(range[0], range[1]) || context.insideViewport(range[2], range[3])) {\n                return true;\n            }\n        }\n        else if (topIdx <= range[0] && bottomIdx >= range[2] && leftIdx <= range[1] && rightIdx >= range[3]) {\n            return true;\n        }\n        var inView_1 = false;\n        if (isModify) {\n            if (range[0] < topIdx && range[2] < topIdx || range[0] > bottomIdx && range[2] > bottomIdx) {\n                return false;\n            }\n            else {\n                if (range[0] < topIdx && range[2] > topIdx && range[0] >= frozenRow) {\n                    range[0] = topIdx;\n                    inView_1 = true;\n                }\n                if (range[2] > bottomIdx) {\n                    range[2] = bottomIdx;\n                    inView_1 = true;\n                }\n            }\n            if (range[1] < leftIdx && range[3] < leftIdx || range[1] > rightIdx && range[3] > rightIdx) {\n                return false;\n            }\n            else {\n                if (range[1] < leftIdx && range[3] > leftIdx && range[1] >= frozenCol) {\n                    range[1] = leftIdx;\n                    inView_1 = true;\n                }\n                if (range[3] > rightIdx) {\n                    range[3] = rightIdx;\n                    inView_1 = true;\n                }\n            }\n        }\n        return inView_1;\n    }\n    else {\n        return true;\n    }\n}\n/**\n * To get the top left cell position in viewport.\n *\n * @hidden\n * @param {SheetModel} sheet - Specify the sheet.\n * @param {number[]} indexes - Specify the indexes.\n * @param {number} frozenRow - Specify the frozen row.\n * @param {number} frozenColumn - Specify the frozen column\n * @param {number} freezeScrollHeight - Specify the freeze scroll height\n * @param {number} freezeScrollWidth - Specify the freeze scroll width\n * @param {number} rowHdrWidth - Specify the row header width\n * @param {boolean} isOverlay - Specify the overlay.\n * @returns {number} - To get the top left cell position in viewport.\n */\nfunction getCellPosition(sheet, indexes, frozenRow, frozenColumn, freezeScrollHeight, freezeScrollWidth, rowHdrWidth, isOverlay) {\n    var i;\n    var offset = { left: { idx: 0, size: 0 }, top: { idx: 0, size: 0 } };\n    var top = offset.top.size;\n    var left = offset.left.size;\n    for (i = offset.top.idx; i < indexes[0]; i++) {\n        if (frozenRow) {\n            if (frozenRow - 1 < indexes[0] && i < frozenRow) {\n                continue;\n            }\n        }\n        top += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowHeight)(sheet, i, !isOverlay);\n    }\n    for (i = offset.left.idx; i < indexes[1]; i++) {\n        if (frozenColumn && frozenColumn - 1 < indexes[1] && i < frozenColumn) {\n            continue;\n        }\n        left += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnWidth)(sheet, i, null, !isOverlay);\n    }\n    if (frozenRow && indexes[0] < frozenRow) {\n        if (sheet.showHeaders) {\n            top += 30;\n        }\n        if (freezeScrollHeight) {\n            top -= freezeScrollHeight;\n        }\n    }\n    if (frozenColumn && indexes[1] < frozenColumn) {\n        if (sheet.showHeaders) {\n            left += rowHdrWidth ? rowHdrWidth : 30;\n        }\n        if (freezeScrollWidth) {\n            left -= freezeScrollWidth;\n        }\n    }\n    return { top: top, left: left };\n}\n/**\n * @param {Spreadsheet} parent - Specify the parent\n * @param {HTMLElement} ele - Specify the element\n * @param {number[]} range - Specify the range\n * @param {string} cls - Specify the class name\n * @param {boolean} preventAnimation - Specify the preventAnimation.\n * @param {boolean} isMultiRange - Specify the multi range selection.\n * @param {boolean} removeCls - Specify to remove the class from selection.\n * @returns {void} - To set the position\n * @hidden\n */\nfunction setPosition(parent, ele, range, cls, preventAnimation, isMultiRange, removeCls) {\n    if (cls === void 0) { cls = 'e-selection'; }\n    var sheet = parent.getActiveSheet();\n    if (sheet.frozenRows || sheet.frozenColumns) {\n        var content_1;\n        var frozenRow_1 = parent.frozenRowCount(sheet);\n        var frozenCol_1 = parent.frozenColCount(sheet);\n        if (cls === 'e-active-cell') {\n            if (range[0] < frozenRow_1 || range[1] < frozenCol_1) {\n                ele.style.display = 'none';\n                content_1 = range[0] < frozenRow_1 && range[1] < frozenCol_1 ? parent.getSelectAllContent() :\n                    (range[0] < frozenRow_1 ? parent.getColumnHeaderContent() : parent.getRowHeaderContent());\n                var rangeEle = content_1.querySelector('.' + cls);\n                if (!rangeEle) {\n                    rangeEle = ele.cloneNode(true);\n                    content_1.appendChild(rangeEle);\n                }\n                ele = rangeEle;\n                locateElem(parent, ele, range, sheet, parent.enableRtl, frozenRow_1, frozenCol_1, preventAnimation, true, parent.viewport.beforeFreezeHeight, parent.viewport.beforeFreezeWidth, parent.sheetModule.colGroupWidth);\n            }\n            else {\n                locateElem(parent, ele, range, sheet, parent.enableRtl, frozenRow_1, frozenCol_1, preventAnimation);\n            }\n            if (ele.style.display) {\n                ele.style.display = '';\n            }\n            removeRangeEle(parent.getSelectAllContent(), content_1, 'e-active-cell');\n            removeRangeEle(parent.getColumnHeaderContent(), content_1, 'e-active-cell');\n            removeRangeEle(parent.getRowHeaderContent(), content_1, 'e-active-cell');\n        }\n        else if (cls === 'e-autofill') {\n            var contentElem = void 0;\n            var freezeRow = parent.frozenRowCount(sheet);\n            var freezeCol = parent.frozenColCount(sheet);\n            if (range[0] < freezeRow || range[1] < freezeCol) {\n                ele.style.display = 'none';\n                contentElem = range[0] < freezeRow && range[1] < freezeCol ? parent.getSelectAllContent() :\n                    (range[0] < freezeRow ? parent.getColumnHeaderContent() : parent.getRowHeaderContent());\n                var rangeEle = contentElem.querySelector('.' + cls);\n                if (!rangeEle) {\n                    rangeEle = ele.cloneNode(true);\n                    contentElem.appendChild(rangeEle);\n                }\n                ele = rangeEle;\n                locateElem(parent, ele, range, sheet, parent.enableRtl, freezeRow, freezeCol, preventAnimation, true, parent.viewport.beforeFreezeHeight, parent.viewport.beforeFreezeWidth, parent.sheetModule.colGroupWidth, 'e-autofill');\n            }\n            else {\n                locateElem(parent, ele, range, sheet, parent.enableRtl, freezeRow, freezeCol, preventAnimation, false, 0, 0, 0, 'e-autofill');\n            }\n            if (ele.style.display) {\n                ele.style.display = '';\n            }\n            removeRangeEle(parent.getSelectAllContent(), contentElem, 'e-autofill');\n            removeRangeEle(parent.getColumnHeaderContent(), contentElem, 'e-autofill');\n            removeRangeEle(parent.getRowHeaderContent(), contentElem, 'e-autofill');\n        }\n        else if (cls === 'e-filloption') {\n            var contentElem = void 0;\n            var freezeRow = parent.frozenRowCount(sheet);\n            var freezeCol = parent.frozenColCount(sheet);\n            if ((range[0] < freezeRow || range[1] < freezeCol)) {\n                if (range[3] + 1 === freezeCol && range[2] + 1 > freezeRow) {\n                    locateElem(parent, parent.getMainContent().querySelector('.e-filloption'), range, sheet, parent.enableRtl, freezeRow, freezeCol, preventAnimation, false, 0, 0, 0, 'e-filloption', true, { left: -4 });\n                }\n                else if (range[2] + 1 === freezeRow && range[3] + 1 > freezeCol) {\n                    locateElem(parent, parent.getMainContent().querySelector('.e-filloption'), range, sheet, parent.enableRtl, freezeRow, freezeCol, preventAnimation, false, 0, 0, 0, 'e-filloption', true, { top: -4 });\n                }\n                else if (range[3] + 1 === freezeCol && range[2] + 1 < freezeRow) { // for upper side\n                    contentElem = parent.getColumnHeaderContent();\n                    var rangeElem = contentElem.querySelector('.' + cls);\n                    if (!rangeElem) {\n                        parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getautofillDDB, { id: parent.element.id + '_autofilloptionbtn', appendElem: contentElem });\n                    }\n                    ele = parent.autofillModule.autoFillDropDown.element;\n                    locateElem(parent, ele, range, sheet, parent.enableRtl, freezeRow, freezeCol, preventAnimation, false, 0, 0, 0, 'e-filloption', true, { left: -4 });\n                }\n                else if (range[2] + 1 === freezeRow && range[3] + 1 === freezeCol) { // corner cell\n                    locateElem(parent, parent.getMainContent().querySelector('.e-filloption'), range, sheet, parent.enableRtl, freezeRow, freezeCol, preventAnimation, false, 0, 0, 0, 'e-filloption', true, { top: -4, left: -4 });\n                }\n                else {\n                    contentElem = range[0] < freezeRow && range[1] < freezeCol ? parent.getSelectAllContent() :\n                        (range[0] < freezeRow ? parent.getColumnHeaderContent() : parent.getRowHeaderContent());\n                    var rangeEle = contentElem.querySelector('.' + cls);\n                    if (!rangeEle) {\n                        parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getautofillDDB, { id: parent.element.id + '_autofilloptionbtn', appendElem: contentElem });\n                    }\n                    ele = parent.autofillModule.autoFillDropDown.element;\n                    locateElem(parent, ele, range, sheet, parent.enableRtl, freezeRow, freezeCol, preventAnimation, true, parent.viewport.\n                        beforeFreezeHeight, parent.viewport.beforeFreezeWidth, parent.sheetModule.colGroupWidth, 'e-filloption', true);\n                }\n            }\n            else {\n                locateElem(parent, parent.getMainContent().querySelector('.e-filloption'), range, sheet, parent.enableRtl, freezeRow, freezeCol, preventAnimation, false, 0, 0, 0, 'e-filloption', true);\n            }\n            if (ele.style.display) {\n                ele.style.display = '';\n            }\n            removeRangeEle(parent.getSelectAllContent(), contentElem, 'e-filloption');\n            removeRangeEle(parent.getColumnHeaderContent(), contentElem, 'e-filloption');\n            removeRangeEle(parent.getRowHeaderContent(), contentElem, 'e-filloption');\n        }\n        else {\n            var swapRange = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSwapRange)(range);\n            if (swapRange[0] < frozenRow_1 || swapRange[1] < frozenCol_1) {\n                if (ele && !ele.classList.contains('e-multi-range')) {\n                    ele.classList.add('e-hide');\n                }\n                var ranges_1 = [];\n                if (swapRange[0] < frozenRow_1 && swapRange[1] < frozenCol_1) {\n                    if (swapRange[2] < frozenRow_1 && swapRange[3] < frozenCol_1) {\n                        ranges_1.push(range);\n                        if (!isMultiRange) {\n                            removeRangeEle(parent.getColumnHeaderContent(), content_1, cls, true);\n                            removeRangeEle(parent.getRowHeaderContent(), content_1, cls, true);\n                        }\n                    }\n                    else if (swapRange[2] > frozenRow_1 - 1) {\n                        if (swapRange[3] < frozenCol_1) {\n                            if (!isMultiRange) {\n                                removeRangeEle(parent.getColumnHeaderContent(), content_1, cls, true);\n                            }\n                            ranges_1.push([swapRange[0], swapRange[1], frozenRow_1 - 1, swapRange[3]]);\n                            ranges_1.push([frozenRow_1, swapRange[1], swapRange[2], swapRange[3]]);\n                        }\n                        else {\n                            ranges_1.push([swapRange[0], swapRange[1], frozenRow_1 - 1, frozenCol_1 - 1]);\n                            ranges_1.push([frozenRow_1, swapRange[1], swapRange[2], frozenCol_1 - 1]);\n                            ranges_1.push([swapRange[0], frozenCol_1, frozenRow_1 - 1, swapRange[3]]);\n                            ranges_1.push([frozenRow_1, frozenCol_1, swapRange[2], swapRange[3]]);\n                        }\n                    }\n                    else {\n                        if (swapRange[2] < frozenRow_1) {\n                            ranges_1.push([swapRange[0], swapRange[1], swapRange[2], frozenCol_1 - 1]);\n                            ranges_1.push([swapRange[0], frozenCol_1, swapRange[2], swapRange[3]]);\n                            if (!isMultiRange) {\n                                removeRangeEle(parent.getRowHeaderContent(), content_1, cls, true);\n                            }\n                        }\n                        else {\n                            ranges_1.push([frozenRow_1, swapRange[1], swapRange[2], frozenCol_1 - 1]);\n                            ranges_1.push([swapRange[0], swapRange[1], frozenRow_1 - 1, frozenCol_1 - 1]);\n                            ranges_1.push([frozenRow_1, frozenCol_1, swapRange[2], swapRange[3]]);\n                            ranges_1.push([swapRange[0], frozenCol_1, frozenRow_1 - 1, swapRange[3]]);\n                        }\n                    }\n                }\n                else if (swapRange[0] < frozenRow_1) {\n                    if (swapRange[2] < frozenRow_1) {\n                        ranges_1.push(range);\n                        if (!isMultiRange) {\n                            removeRangeEle(parent.getRowHeaderContent(), content_1, cls, true);\n                        }\n                    }\n                    else {\n                        ranges_1.push([swapRange[0], swapRange[1], frozenRow_1 - 1, swapRange[3]]);\n                        ranges_1.push([frozenRow_1, swapRange[1], swapRange[2], swapRange[3]]);\n                        if (!isMultiRange) {\n                            removeRangeEle(parent.getSelectAllContent(), content_1, cls, true);\n                            removeRangeEle(parent.getRowHeaderContent(), content_1, cls, true);\n                        }\n                    }\n                }\n                else {\n                    if (swapRange[3] < frozenCol_1) {\n                        ranges_1.push(range);\n                        if (!isMultiRange) {\n                            removeRangeEle(parent.getSelectAllContent(), content_1, cls, true);\n                        }\n                    }\n                    else {\n                        ranges_1.push([swapRange[0], swapRange[1], swapRange[2], frozenCol_1 - 1]);\n                        ranges_1.push([swapRange[0], frozenCol_1, swapRange[2], swapRange[3]]);\n                        if (!isMultiRange) {\n                            removeRangeEle(parent.getSelectAllContent(), content_1, cls, true);\n                            removeRangeEle(parent.getColumnHeaderContent(), content_1, cls, true);\n                        }\n                    }\n                }\n                var removeEle_1;\n                ranges_1.forEach(function (rng) {\n                    var zIndex;\n                    if (rng[2] < frozenRow_1 && rng[3] < frozenCol_1) {\n                        content_1 = parent.getSelectAllContent();\n                    }\n                    else {\n                        if (frozenRow_1 || frozenCol_1) {\n                            var selectAllEle = parent.getSelectAllContent();\n                            if (selectAllEle) {\n                                zIndex = selectAllEle.style.zIndex;\n                            }\n                        }\n                        if (rng[2] < frozenRow_1) {\n                            content_1 = parent.getColumnHeaderContent();\n                        }\n                        else if (rng[3] < frozenCol_1) {\n                            content_1 = parent.getRowHeaderContent();\n                        }\n                        else {\n                            content_1 = parent.getMainContent();\n                            if (frozenRow_1 && !zIndex) {\n                                var colHdrEle = parent.getColumnHeaderContent();\n                                if (colHdrEle) {\n                                    zIndex = colHdrEle.style.zIndex;\n                                }\n                            }\n                            if (frozenCol_1 && !zIndex) {\n                                var rowHdrEle = parent.getRowHeaderContent();\n                                if (rowHdrEle) {\n                                    zIndex = rowHdrEle.style.zIndex;\n                                }\n                            }\n                        }\n                    }\n                    var rangeEle;\n                    if (cls === 'e-copy-indicator' || cls === 'e-range-indicator') {\n                        rangeEle = ele.cloneNode(true);\n                        content_1.appendChild(rangeEle);\n                        if (frozenRow_1) {\n                            if (rng[2] + 1 === frozenRow_1) {\n                                ranges_1.forEach(function (subRng) {\n                                    if (subRng !== rng) {\n                                        removeEle_1 = rangeEle.getElementsByClassName('e-bottom')[0];\n                                        if (removeEle_1 && subRng[0] === frozenRow_1) {\n                                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(removeEle_1);\n                                        }\n                                    }\n                                });\n                            }\n                            if (rng[0] === frozenRow_1 && content_1.parentElement.classList.contains('e-main-panel')) {\n                                ranges_1.forEach(function (subRng) {\n                                    if (subRng !== rng) {\n                                        removeEle_1 = rangeEle.getElementsByClassName('e-top')[0];\n                                        if (removeEle_1 && subRng[2] + 1 === frozenRow_1) {\n                                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(removeEle_1);\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                        if (frozenCol_1) {\n                            if (rng[3] + 1 === frozenCol_1) {\n                                ranges_1.forEach(function (subRng) {\n                                    if (subRng !== rng) {\n                                        removeEle_1 = rangeEle.getElementsByClassName('e-right')[0];\n                                        if (removeEle_1 && subRng[1] === frozenCol_1) {\n                                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(removeEle_1);\n                                        }\n                                    }\n                                });\n                            }\n                            if (rng[1] === frozenCol_1 && (content_1.classList.contains('e-sheet-content') || content_1.classList.contains('e-column-header'))) {\n                                ranges_1.forEach(function (subRng) {\n                                    if (subRng !== rng) {\n                                        removeEle_1 = rangeEle.getElementsByClassName('e-left')[0];\n                                        if (removeEle_1 && subRng[3] + 1 === frozenCol_1) {\n                                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(removeEle_1);\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    }\n                    else {\n                        rangeEle = content_1.querySelector('.' + cls);\n                        if (!rangeEle) {\n                            rangeEle = ele.cloneNode(true);\n                            if (isMultiRange && !rangeEle.classList.contains('e-multi-range')) {\n                                rangeEle.classList.add('e-multi-range');\n                            }\n                            content_1.appendChild(rangeEle);\n                        }\n                        if (removeCls) {\n                            rangeEle.classList.remove(cls);\n                        }\n                    }\n                    if (frozenRow_1 || frozenCol_1) {\n                        if (zIndex) {\n                            rangeEle.style.zIndex = zIndex;\n                        }\n                        else if (rangeEle.style.zIndex) {\n                            rangeEle.style.zIndex = '';\n                        }\n                    }\n                    locateElem(parent, rangeEle, rng, sheet, parent.enableRtl, frozenRow_1, frozenCol_1, preventAnimation, false, parent.viewport.beforeFreezeHeight, parent.viewport.beforeFreezeWidth, parent.sheetModule.colGroupWidth);\n                    if (rangeEle.classList.contains('e-hide')) {\n                        rangeEle.classList.remove('e-hide');\n                    }\n                });\n            }\n            else {\n                if (!isMultiRange) {\n                    removeRangeEle(parent.getSelectAllContent(), null, cls, true);\n                    removeRangeEle(parent.getColumnHeaderContent(), null, cls, true);\n                    removeRangeEle(parent.getRowHeaderContent(), null, cls, true);\n                }\n                locateElem(parent, ele, range, sheet, parent.enableRtl, frozenRow_1, frozenCol_1, preventAnimation);\n                if (cls === 'e-range-indicator' || !parent.getMainContent().querySelector('.' + cls)) {\n                    parent.getMainContent().appendChild(ele);\n                }\n                if (ele.classList.contains('e-hide')) {\n                    ele.classList.remove('e-hide');\n                }\n                if (removeCls) {\n                    ele.classList.remove(cls);\n                }\n            }\n        }\n    }\n    else {\n        var promise = locateElem(parent, ele, range, sheet, parent.enableRtl, 0, 0, preventAnimation);\n        if (ele && !parent.getMainContent().querySelector('.' + cls)) {\n            parent.getMainContent().appendChild(ele);\n        }\n        return promise;\n    }\n}\n/**\n * @param {Element} content - Specify the content element.\n * @param {HTMLElement} checkEle - Specify the element.\n * @param {string} cls - Specify the class name.\n * @param {string} isSelection - Specify the selection element.\n * @param {string} removeCls - Specify to remove class from element.\n * @returns {void} - remove element with given range\n */\nfunction removeRangeEle(content, checkEle, cls, isSelection, removeCls) {\n    if (isSelection || content !== checkEle) {\n        if (removeCls) {\n            var collection = content.querySelectorAll('.' + cls);\n            var i = 0;\n            while (i < collection.length) {\n                collection[i].classList.remove(cls);\n                i++;\n            }\n        }\n        else {\n            var ele = content.querySelector('.' + cls);\n            if (ele && !ele.classList.contains('e-multi-range')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(ele);\n            }\n        }\n    }\n}\n/**\n * Position element with given range\n *\n * @hidden\n * @param {Spreadsheet} parent - Specify the parent.\n * @param {HTMLElement} ele - Specify the element.\n * @param {number[]} range - specify the range.\n * @param {SheetModel} sheet - Specify the sheet.\n * @param {boolean} isRtl - Specify the boolean value.\n * @param {number} frozenRow - Specidy the frozen row.\n * @param {number} frozenColumn - Specify the frozen column\n * @param {boolean} preventAnimation - Specify the preventAnimation.\n * @param {boolean} isActiveCell - Specidy the boolean value.\n * @param {number} freezeScrollHeight - Specify the freeze scroll height\n * @param {number} freezeScrollWidth - Specify the freeze scroll width\n * @param {number} rowHdrWidth - Specify the row header width\n * @param {number} cls - Specify the class\n * @param {number} isFillOptShow - Specify the fill option\n * @param {number} freezeFillOpt - Specifies the fill option\n * @param {number} freezeFillOpt.top - Specifies the fill option\n * @param {number} freezeFillOpt.left - Specifies the fill option\n * @returns {void} - Position element with given range\n */\nfunction locateElem(parent, ele, range, sheet, isRtl, frozenRow, frozenColumn, preventAnimation, isActiveCell, freezeScrollHeight, freezeScrollWidth, rowHdrWidth, cls, isFillOptShow, freezeFillOpt) {\n    var swapRange = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSwapRange)(range);\n    var cellPosition = getCellPosition(sheet, swapRange, frozenRow, frozenColumn, freezeScrollHeight, freezeScrollWidth, rowHdrWidth);\n    var startIndex = [(0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, 0, true), (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, 0, true, 'columns')];\n    var height;\n    var width;\n    if (parent.scrollSettings.isFinite) {\n        height = swapRange[0] >= sheet.rowCount ? 0 : (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowsHeight)(sheet, swapRange[0], swapRange[2] < sheet.rowCount ? swapRange[2] : sheet.rowCount - 1, true);\n        width = swapRange[1] >= sheet.colCount ? 0 : (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, swapRange[1], swapRange[3] < sheet.colCount ? swapRange[3] : sheet.colCount - 1, true);\n    }\n    else {\n        height = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowsHeight)(sheet, swapRange[0], swapRange[2], true);\n        width = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, swapRange[1], swapRange[3], true);\n    }\n    var isRowSelected = (swapRange[1] === 0 && swapRange[3] === sheet.colCount - 1);\n    var isColSelected = (swapRange[0] === 0 && swapRange[2] === sheet.rowCount - 1);\n    var top = 0;\n    var tdiff = -5;\n    var ldiff = -5;\n    var left = 0;\n    var otdiff = 6;\n    var oldiff = 6;\n    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cls)) {\n        var attrs = {\n            'top': (swapRange[0] === startIndex[0] ? cellPosition.top : cellPosition.top - getDPRValue(1)) + 'px',\n            'height': height && height + (swapRange[0] === startIndex[0] ? 0 : getDPRValue(1)) + 'px',\n            'width': width && width + (swapRange[1] === startIndex[1] ? 0 : getDPRValue(1)) + (isActiveCell\n                && frozenColumn && swapRange[1] < frozenColumn && swapRange[3] >= frozenColumn ? 1 : 0) + 'px'\n        };\n        attrs[isRtl ? 'right' : 'left'] = (swapRange[1] === startIndex[1] ? cellPosition.left : cellPosition.left - 1) + 'px';\n        if (ele) {\n            var promise = setStyleAttribute([{ element: ele, attrs: attrs }], preventAnimation);\n            return promise;\n        }\n    }\n    else {\n        if (isRowSelected) {\n            tdiff = -5;\n            ldiff = -2;\n            otdiff = 6;\n            oldiff = 3;\n        }\n        if (isColSelected) {\n            ldiff = -5;\n            tdiff = 0;\n            otdiff = 1;\n            oldiff = 6;\n        }\n        if (!isColSelected) {\n            top += height;\n        }\n        if (!isRowSelected) {\n            left += width;\n        }\n        top += Math.round(cellPosition.top) + tdiff;\n        left += Math.round(cellPosition.left) + ldiff;\n        var attrs = {};\n        if (isFillOptShow) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([ele], 'e-hide');\n            top = freezeFillOpt && freezeFillOpt.top ? freezeFillOpt.top : top;\n            left = freezeFillOpt && freezeFillOpt.left ? freezeFillOpt.left : left;\n            attrs = {\n                'top': top + otdiff + 'px'\n            };\n            attrs[isRtl ? 'right' : 'left'] = left + oldiff + 'px';\n            if (ele) {\n                setStyleAttribute([{ element: ele, attrs: attrs }], preventAnimation);\n            }\n        }\n        else {\n            attrs = {\n                'top': top + 'px'\n            };\n            attrs[isRtl ? 'right' : 'left'] = left + 'px';\n            if (ele) {\n                setStyleAttribute([{ element: ele, attrs: attrs }], preventAnimation);\n            }\n        }\n    }\n}\n/**\n * To update element styles using request animation frame\n *\n * @hidden\n * @param {StyleType[]} styles - Specify the styles\n * @param {boolean} preventAnimation - Specify the preventAnimation.\n * @returns {void} - To update element styles using request animation frame\n */\nfunction setStyleAttribute(styles, preventAnimation) {\n    var promise = new Promise(function (resolve) {\n        var setStyleFn = function () {\n            styles.forEach(function (style) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(style.element, style.attrs);\n                resolve();\n            });\n        };\n        if (preventAnimation) {\n            setStyleFn();\n        }\n        else {\n            requestAnimationFrame(function () { return setStyleFn(); });\n        }\n    });\n    return promise;\n}\n/**\n * @hidden\n * @returns {string} - to get Start Event\n */\nfunction getStartEvent() {\n    return (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer ? 'pointerdown' : 'mousedown touchstart');\n}\n/**\n * @hidden\n * @returns {string} - to get Move Event\n */\nfunction getMoveEvent() {\n    return (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer ? 'pointermove' : 'mousemove touchmove');\n}\n/**\n * @hidden\n * @returns {string} - Returns string value.\n */\nfunction getEndEvent() {\n    return (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer ? 'pointerup' : 'mouseup touchend');\n}\n/**\n * @hidden\n * @param {Event} e - To specify the event.\n * @returns {boolean} - Returns boolean value.\n */\nfunction isTouchStart(e) {\n    return e.type === 'touchstart' || (e.type === 'pointerdown' && e.pointerType === 'touch');\n}\n/**\n * @hidden\n * @param {Event} e - To specify the event.\n * @returns {boolean} - Returns boolean value.\n */\nfunction isTouchMove(e) {\n    return e.type === 'touchmove' || (e.type === 'pointermove' && e.pointerType === 'touch');\n}\n/**\n * @hidden\n * @param {Event} e - To specify the event.\n * @returns {boolean} - Returns boolean value.\n */\nfunction isTouchEnd(e) {\n    return e.type === 'touchend' || (e.type === 'pointerup' && e.pointerType === 'touch');\n}\n/**\n * @hidden\n * @param {TouchEvent | MouseEvent} e - To specify the mouse and touch event.\n * @returns {number} - To get client value\n */\nfunction isMouseDown(e) {\n    return e && (e.type === 'mousedown' || e.type === 'pointerdown');\n}\n/**\n * @param {MouseEvent} e - Specify the event.\n * @returns {boolean} - To get boolean value.\n * @hidden\n */\nfunction isMouseMove(e) {\n    return e && (e.type === 'mousemove' || e.type === 'pointermove');\n}\n/**\n * @param {MouseEvent} e - Specify the event.\n * @returns {boolean} - To get boolean value\n * @hidden\n */\nfunction isMouseUp(e) {\n    return e && (e.type === 'mouseup' || e.type === 'pointerup');\n}\n/**\n * @param {number} keyCode - Specify  the keycode.\n * @returns {boolean} - to get boolean value.\n * @hidden\n */\nfunction isNavigationKey(keyCode) {\n    return (keyCode === _constant__WEBPACK_IMPORTED_MODULE_5__.keyCodes.UP) || (keyCode === _constant__WEBPACK_IMPORTED_MODULE_5__.keyCodes.DOWN) || (keyCode === _constant__WEBPACK_IMPORTED_MODULE_5__.keyCodes.LEFT)\n        || (keyCode === _constant__WEBPACK_IMPORTED_MODULE_5__.keyCodes.RIGHT);\n}\n/**\n * @param {MouseEvent | TouchEvent} e - To specify the mouse or touch event.\n * @returns {number} - To get client X value.\n * @hidden\n */\nfunction getClientX(e) {\n    return e.changedTouches ? e.changedTouches[0].clientX : e.clientX;\n}\n/**\n * @hidden\n * @param {MouseEvent | TouchEvent} e - To specify the mouse and touch event.\n * @returns {number} - To get client value\n */\nfunction getClientY(e) {\n    return e.changedTouches ? e.changedTouches[0].clientY : e.clientY;\n}\n/**\n * To get the `pageX` value from the mouse or touch event.\n *\n * @param {MouseEvent | TouchEvent} e - Specifies the mouse or touch event.\n * @returns {number} - Return the `pageX` value.\n * @hidden\n */\nfunction getPageX(e) {\n    return e.changedTouches ? e.changedTouches[0].pageX : e.pageX;\n}\n/**\n * To get the `pageY` value from the mouse or touch event.\n *\n * @param {MouseEvent | TouchEvent} e - Specifies the mouse or touch event.\n * @returns {number} - Return the `pageY` value.\n * @hidden\n */\nfunction getPageY(e) {\n    return e.changedTouches ? e.changedTouches[0].pageY : e.pageY;\n}\n/**\n * Get even number based on device pixel ratio\n *\n * @param {number} value - Specify the number\n * @param {boolean} preventDecrease - Specify the boolean value\n * @returns {number} - To get DPR value\n * @hidden\n */\nfunction getDPRValue(value, preventDecrease) {\n    if (window.devicePixelRatio % 1 > 0) {\n        var pointValue = (value * window.devicePixelRatio) % 1;\n        return value + (pointValue ? (((pointValue > 0.5 || preventDecrease) ? (1 - pointValue) : -1 * pointValue)\n            / window.devicePixelRatio) : 0);\n    }\n    else {\n        return value;\n    }\n}\nvar config = {\n    role: 'role',\n    selected: 'aria-selected',\n    multiselectable: 'aria-multiselectable',\n    busy: 'aria-busy',\n    colcount: 'aria-colcount'\n};\n/**\n * @hidden\n * @param {HTMLElement} target - specify the target.\n * @param {IAriaOptions<boolean>} options - Specify the options.\n * @returns {void} -  to set Aria Options\n */\nfunction setAriaOptions(target, options) {\n    var props = Object.keys(options);\n    props.forEach(function (name) {\n        if (target) {\n            target.setAttribute(config[\"\" + name], options[\"\" + name]);\n        }\n    });\n}\n/**\n * @hidden\n * @param {HTMLElement} element - specify the element.\n * @param {Object} component - Specify the component.\n * @returns {void} -  to destroy the component.\n */\nfunction destroyComponent(element, component) {\n    if (element) {\n        var compObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getComponent)(element, component);\n        if (compObj) {\n            compObj.destroy();\n        }\n    }\n}\n/**\n * @hidden\n * @param {number} idx - Specify the index\n * @param {number} index - Specify the index\n * @param {string} value - Specify the value.\n * @param {boolean} isCol - Specify the boolean value.\n * @param {Spreadsheet} parent - Specify the parent.\n * @returns {void} - To set resize.\n */\nfunction setResize(idx, index, value, isCol, parent) {\n    var curEle;\n    var curEleH;\n    var curEleC;\n    var preEle;\n    var preEleH;\n    var preEleC;\n    var nxtEle;\n    var nxtEleH;\n    var nxtEleC;\n    var sheet = parent.getActiveSheet();\n    var frozenRow = parent.frozenRowCount(sheet);\n    var frozenCol = parent.frozenColCount(sheet);\n    if (isCol) {\n        var header = idx < frozenCol ? parent.getSelectAllContent() : parent.getColumnHeaderContent();\n        curEle = header.getElementsByTagName('th')[index];\n        curEleH = header.getElementsByTagName('col')[index];\n        curEleC = (idx < frozenCol ? parent.getRowHeaderContent() : parent.getMainContent()).getElementsByTagName('col')[index];\n    }\n    else {\n        curEle = curEleH = frozenRow || frozenCol ? parent.getRow(idx, null, frozenCol - 1) :\n            parent.getRow(idx, parent.getRowHeaderTable());\n        curEleH.style.height = parseInt(value, 10) > 0 ? getDPRValue(parseInt(value, 10)) + 'px' : '2px';\n        curEleC = parent.getRow(idx, null, frozenCol);\n        curEleC.style.height = parseInt(value, 10) > 0 ? getDPRValue(parseInt(value, 10)) + 'px' : '0px';\n        var hdrFntSize = void 0;\n        if (sheet.showHeaders) {\n            var hdrRow = parent.getRowHeaderContent().getElementsByClassName('e-row');\n            var hdrClone = [];\n            hdrClone[0] = hdrRow[index].getElementsByTagName('td')[0].cloneNode(true);\n            hdrFntSize = findMaxValue(parent.getRowHeaderTable(), hdrClone, false, parent) + 1;\n        }\n        var contentRow = parent.getMainContent().getElementsByClassName('e-row');\n        var contentClone = [];\n        var eleTextHeight = 0;\n        var eleMaxHeight = 0;\n        var rIdx = idx;\n        for (var idx_1 = 0; idx_1 < contentRow[index].getElementsByTagName('td').length; idx_1++) {\n            var td = contentRow[index].getElementsByTagName('td')[idx_1];\n            contentClone[idx_1] = td.cloneNode(true);\n            var cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(rIdx, idx_1, sheet, false, true);\n            eleTextHeight = cell.value ? getTextHeight(parent, cell.style) : eleTextHeight;\n            eleMaxHeight = eleMaxHeight < eleTextHeight ? eleTextHeight : eleMaxHeight;\n            if (td.getElementsByClassName('e-cf-databar')[0]) {\n                var rHeight = Number((curEleC.style.height).split('px')[0]);\n                parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.applyCF, { indexes: [rIdx, idx_1], cell: cell, ele: td, isRender: true,\n                    resizedRowHeight: rHeight });\n            }\n        }\n        var cntFntSize = eleMaxHeight + 1;\n        var fntSize = hdrFntSize >= cntFntSize ? hdrFntSize : cntFntSize;\n        if (parseInt(curEleC.style.height, 10) < fntSize ||\n            (curEle && curEle.classList.contains('e-reach-fntsize') && parseInt(curEleC.style.height, 10) === fntSize)) {\n            if (sheet.showHeaders) {\n                curEle.classList.add('e-reach-fntsize');\n                curEleH.style.lineHeight = parseInt(value, 10) >= 4 ? ((parseInt(value, 10)) - 4) + 'px' :\n                    parseInt(value, 10) > 0 ? ((parseInt(value, 10)) - 1) + 'px' : '0px';\n            }\n            curEleC.style.lineHeight = parseInt(value, 10) > 0 ? ((parseInt(value, 10)) - 1) + 'px' : '0px';\n        }\n        else {\n            if (curEleH) {\n                curEleH.style.removeProperty('line-height');\n            }\n            curEleC.style.removeProperty('line-height');\n            if (curEle && curEle.classList.contains('e-reach-fntsize')) {\n                curEle.classList.remove('e-reach-fntsize');\n            }\n        }\n    }\n    preEleC = curEleC.previousElementSibling;\n    nxtEleC = curEleC.nextElementSibling;\n    if (preEleC) {\n        if (sheet.showHeaders) {\n            preEle = curEle.previousElementSibling;\n            preEleH = curEleH.previousElementSibling;\n        }\n        preEleC = curEleC.previousElementSibling;\n    }\n    if (nxtEleC) {\n        if (sheet.showHeaders) {\n            nxtEle = curEle.nextElementSibling;\n            nxtEleH = curEleH.nextElementSibling;\n        }\n        nxtEleC = curEleC.nextElementSibling;\n    }\n    if (parseInt(value, 10) <= 0 && !(curEleC.classList.contains('e-zero') || curEleC.classList.contains('e-zero-start'))) {\n        if (preEleC && nxtEleC) {\n            if (isCol) {\n                if (sheet.showHeaders) {\n                    curEleH.style.width = '2px';\n                }\n                curEleC.style.width = '0px';\n            }\n            else {\n                if (sheet.showHeaders) {\n                    curEleH.style.height = '2px';\n                }\n                curEleC.style.height = '0px';\n            }\n            if (preEleC.classList.contains('e-zero-start')) {\n                if (sheet.showHeaders) {\n                    curEle.classList.add('e-zero-start');\n                }\n                curEleC.classList.add('e-zero-start');\n            }\n            else {\n                if (sheet.showHeaders) {\n                    curEle.classList.add('e-zero');\n                }\n                curEleC.classList.add('e-zero');\n            }\n            if (nxtEle && !nxtEle.classList.contains('e-zero') && !nxtEle.classList.contains('e-zero-last')) {\n                if (sheet.showHeaders) {\n                    curEle.classList.add('e-zero-last');\n                }\n                curEleC.classList.add('e-zero-last');\n            }\n            if (preEleC.classList.contains('e-zero-last')) {\n                if (sheet.showHeaders) {\n                    preEle.classList.remove('e-zero-last');\n                }\n                preEleC.classList.remove('e-zero-last');\n            }\n            if (sheet.showHeaders && preEle.classList.contains('e-zero')) {\n                if (curEle.classList.contains('e-zero-end')) {\n                    setWidthAndHeight(preEleH, -2, isCol);\n                }\n                else {\n                    setWidthAndHeight(preEleH, -2, isCol);\n                }\n            }\n            else if (sheet.showHeaders) {\n                setWidthAndHeight(preEleH, -1, isCol);\n            }\n            if (sheet.showHeaders && preEle.classList.contains('e-zero-start')) {\n                setWidthAndHeight(curEleH, -1, isCol);\n            }\n            if (sheet.showHeaders && nxtEle.classList.contains('e-zero')) {\n                if (curEle.classList.contains('e-zero-start')) {\n                    while (nxtEle) {\n                        if (nxtEle.classList.contains('e-zero') && (parseInt(nxtEleH.style.height, 10) !== 0 && !isCol) ||\n                            (parseInt(nxtEleH.style.width, 10) !== 0 && isCol)) {\n                            if (isCol) {\n                                curEleH.style.width = parseInt(curEleH.style.width, 10) - 1 + 'px';\n                                nxtEleH.style.width = parseInt(nxtEleH.style.width, 10) - 1 + 'px';\n                            }\n                            else {\n                                curEleH.style.height = parseInt(curEleH.style.height, 10) - 1 + 'px';\n                                nxtEleH.style.height = parseInt(nxtEleH.style.height, 10) - 1 + 'px';\n                            }\n                            nxtEle.classList.remove('e-zero');\n                            nxtEle.classList.add('e-zero-start');\n                            break;\n                        }\n                        else {\n                            var nxtIndex = void 0;\n                            nxtEle.classList.remove('e-zero');\n                            nxtEle.classList.add('e-zero-start');\n                            if (isCol) {\n                                nxtIndex = parseInt(nxtEle.getAttribute('aria-colindex'), 10) - 1;\n                                nxtEle = parent.getColHeaderTable().getElementsByTagName('th')[nxtIndex + 1];\n                                nxtEleH = parent.getColHeaderTable().getElementsByTagName('col')[nxtIndex + 1];\n                            }\n                            else {\n                                nxtIndex = parseInt(nxtEle.getAttribute('aria-rowindex'), 10) - 1;\n                                nxtEle = parent.getRowHeaderTable().getElementsByTagName('tr')[nxtIndex + 1];\n                                nxtEleH = parent.getRowHeaderTable().getElementsByTagName('tr')[nxtIndex + 1];\n                            }\n                        }\n                    }\n                }\n                else {\n                    setWidthAndHeight(curEleH, -2, isCol);\n                }\n            }\n            else if (sheet.showHeaders) {\n                if (nxtEle.classList.contains('e-zero-end')) {\n                    if (isCol) {\n                        curEleH.style.width = '0px';\n                    }\n                    else {\n                        curEleH.style.height = '0px';\n                    }\n                }\n                else {\n                    setWidthAndHeight(nxtEleH, -1, isCol);\n                }\n            }\n        }\n        else if (preEleC) {\n            if (isCol) {\n                if (sheet.showHeaders) {\n                    curEleH.style.width = '1px';\n                }\n                curEleC.style.width = '0px';\n            }\n            else {\n                if (sheet.showHeaders) {\n                    curEleH.style.height = '1px';\n                }\n                curEleC.style.height = '0px';\n            }\n            if (sheet.showHeaders) {\n                curEle.classList.add('e-zero-end');\n            }\n            curEleC.classList.add('e-zero-end');\n            if (sheet.showHeaders) {\n                curEle.classList.add('e-zero-last');\n            }\n            curEleC.classList.add('e-zero-last');\n            if (sheet.showHeaders && preEle.classList.contains('e-zero')) {\n                setWidthAndHeight(preEleH, -2, isCol);\n            }\n            else {\n                setWidthAndHeight(preEleH, -1, isCol);\n            }\n        }\n        else if (nxtEle) {\n            curEle.classList.add('e-zero-start');\n            curEleC.classList.add('e-zero-start');\n            if (!nxtEle.classList.contains('e-zero')) {\n                curEle.classList.add('e-zero-last');\n                curEleC.classList.add('e-zero-last');\n            }\n            if (isCol) {\n                curEleH.style.width = '1px';\n                curEleC.style.width = '0px';\n            }\n            else {\n                curEleH.style.height = '1px';\n                curEleC.style.height = '0px';\n            }\n            if (sheet.showHeaders && nxtEle.classList.contains('e-zero')) {\n                while (nxtEle) {\n                    if (nxtEle.classList.contains('e-zero') && (parseInt(nxtEleH.style.width, 10) !== 0\n                        && isCol) || (parseInt(nxtEleH.style.height, 10) !== 0 && !isCol)) {\n                        if (isCol) {\n                            nxtEleH.style.width = parseInt(nxtEleH.style.width, 10) - 1 + 'px';\n                            curEleH.style.width = parseInt(curEleH.style.width, 10) - 1 + 'px';\n                        }\n                        else {\n                            nxtEleH.style.height = parseInt(nxtEleH.style.height, 10) - 1 + 'px';\n                            curEleH.style.height = parseInt(curEleH.style.height, 10) - 1 + 'px';\n                        }\n                        nxtEle.classList.add('e-zero-start');\n                        nxtEle.classList.remove('e-zero');\n                        break;\n                    }\n                    else {\n                        var nxtIndex = void 0;\n                        nxtEle.classList.add('e-zero-start');\n                        nxtEle.classList.remove('e-zero');\n                        if (isCol) {\n                            nxtIndex = parseInt(nxtEle.getAttribute('aria-colindex'), 10) - 1;\n                            nxtEleH = parent.getColHeaderTable().getElementsByTagName('col')[nxtIndex + 1];\n                            nxtEle = parent.getColHeaderTable().getElementsByTagName('th')[nxtIndex + 1];\n                        }\n                        else {\n                            nxtIndex = parseInt(nxtEle.getAttribute('aria-rowindex'), 10) - 1;\n                            nxtEleH = parent.getRowHeaderTable().getElementsByTagName('tr')[nxtIndex + 1];\n                            nxtEle = parent.getRowHeaderTable().getElementsByTagName('tr')[nxtIndex + 1];\n                        }\n                    }\n                }\n            }\n            else if (sheet.showHeaders) {\n                setWidthAndHeight(nxtEleH, -1, isCol);\n            }\n        }\n    }\n    else if (parseInt(value, 10) > 0) {\n        var DPRValue = getDPRValue(parseInt(value, 10)) + 'px';\n        if (isCol) {\n            curEleH.style.width = DPRValue;\n            curEleC.style.width = DPRValue;\n        }\n        else {\n            curEleH.style.height = DPRValue;\n            curEleC.style.height = DPRValue;\n        }\n        if (sheet.showHeaders && preEle && nxtEle) {\n            if (preEle.classList.contains('e-zero')) {\n                if (curEle.classList.contains('e-zero')) {\n                    if (isCol) {\n                        preEleH.style.width = parseInt(preEleH.style.width, 10) + 2 + 'px';\n                        curEleH.style.width = parseInt(curEleH.style.width, 10) - 1 + 'px';\n                    }\n                    else {\n                        preEleH.style.height = parseInt(preEleH.style.height, 10) + 2 + 'px';\n                        curEleH.style.height = parseInt(curEleH.style.height, 10) - 1 + 'px';\n                    }\n                }\n                else {\n                    setWidthAndHeight(curEleH, -1, isCol);\n                }\n            }\n            else {\n                if (curEle.classList.contains('e-zero')) {\n                    setWidthAndHeight(preEleH, 1, isCol);\n                }\n                else {\n                    if (curEle.classList.contains('e-zero-start')) {\n                        if (isCol) {\n                            preEleH.style.width = parseInt(preEleH.style.width, 10) + 1 + 'px';\n                            curEleH.style.width = parseInt(curEleH.style.width, 10) - 1 + 'px';\n                        }\n                        else {\n                            preEleH.style.height = parseInt(preEleH.style.height, 10) + 1 + 'px';\n                            curEleH.style.height = parseInt(curEleH.style.height, 10) - 1 + 'px';\n                        }\n                    }\n                }\n            }\n            if (nxtEle.classList.contains('e-zero')) {\n                setWidthAndHeight(curEleH, -1, isCol);\n            }\n            else {\n                if (curEle.classList.contains('e-zero') || curEle.classList.contains('e-zero-start')) {\n                    setWidthAndHeight(nxtEleH, 1, isCol);\n                }\n            }\n            if (curEle.classList.contains('e-zero')) {\n                curEle.classList.remove('e-zero');\n            }\n            if (curEle.classList.contains('e-zero-start')) {\n                curEle.classList.remove('e-zero-start');\n            }\n            if (curEleC.classList.contains('e-zero')) {\n                curEleC.classList.remove('e-zero');\n            }\n            if (curEleC.classList.contains('e-zero-start')) {\n                curEleC.classList.remove('e-zero-start');\n            }\n            if (curEle.classList.contains('e-zero-last')) {\n                curEle.classList.remove('e-zero-last');\n            }\n            if (curEleC.classList.contains('e-zero-last')) {\n                curEleC.classList.remove('e-zero-last');\n            }\n            if (preEle.classList.contains('e-zero') || preEle.classList.contains('e-zero-start')) {\n                preEle.classList.add('e-zero-last');\n                preEleC.classList.add('e-zero-last');\n            }\n        }\n        else if (sheet.showHeaders && preEle) {\n            if (preEle.classList.contains('e-zero')) {\n                if (curEle.classList.contains('e-zero')) {\n                    if (isCol) {\n                        curEleH.style.width = parseInt(curEleH.style.width, 10) - 1 + 'px';\n                        preEleH.style.width = parseInt(preEleH.style.width, 10) + 2 + 'px';\n                    }\n                    else {\n                        curEleH.style.height = parseInt(curEleH.style.height, 10) - 1 + 'px';\n                        preEleH.style.height = parseInt(preEleH.style.height, 10) + 2 + 'px';\n                    }\n                }\n                else {\n                    setWidthAndHeight(curEleH, -1, isCol);\n                }\n            }\n            else {\n                if (curEle.classList.contains('e-zero')) {\n                    setWidthAndHeight(preEleH, 1, isCol);\n                }\n                else {\n                    setWidthAndHeight(curEleH, -1, isCol);\n                }\n            }\n            if (curEle.classList.contains('e-zero')) {\n                curEle.classList.remove('e-zero');\n            }\n            if (curEle.classList.contains('e-zero-end')) {\n                curEle.classList.remove('e-zero-end');\n            }\n            if (curEleC.classList.contains('e-zero')) {\n                curEleC.classList.remove('e-zero');\n            }\n            if (curEleC.classList.contains('e-zero-end')) {\n                curEleC.classList.remove('e-zero-end');\n            }\n        }\n        else if (sheet.showHeaders && nxtEle) {\n            if (nxtEle.classList.contains('e-zero')) {\n                setWidthAndHeight(curEleH, -1, isCol);\n            }\n            else if (curEle.classList.contains('e-zero-start')) {\n                setWidthAndHeight(nxtEleH, 1, isCol);\n                curEle.classList.remove('e-zero-start');\n            }\n            if (curEle.classList.contains('e-zero')) {\n                curEle.classList.remove('e-zero');\n            }\n            if (curEleC.classList.contains('e-zero')) {\n                curEleC.classList.remove('e-zero');\n            }\n            if (curEle.classList.contains('e-zero-start')) {\n                curEle.classList.remove('e-zero-start');\n            }\n            if (curEleC.classList.contains('e-zero-start')) {\n                curEleC.classList.remove('e-zero-start');\n            }\n        }\n    }\n}\n/**\n * @hidden\n * @param {HTMLElement} trgt - Specify the target element.\n * @param {number} value - specify the number.\n * @param {boolean} isCol - Specify the boolean vlaue.\n * @returns {void} -  to set width and height.\n */\nfunction setWidthAndHeight(trgt, value, isCol) {\n    if (isCol) {\n        trgt.style.width = parseInt(trgt.style.width, 10) + value + 'px';\n    }\n    else {\n        trgt.style.height = parseInt(trgt.style.height, 10) + value + 'px';\n    }\n}\n/**\n * @hidden\n * @param {number} lineHeight - Specify the line height for other culture text.\n * @returns {void} -  to set the line height for other culture text.\n */\nfunction setTextLineHeight(lineHeight) {\n    textLineHeight = lineHeight;\n}\n/**\n * @hidden\n * @param {HTMLElement} table - Specify the table.\n * @param {HTMLElement[]} text - specify the text.\n * @param {boolean} isCol - Specifyt boolean value\n * @param {Spreadsheet} parent - Specify the parent.\n * @param {string} prevData - specify the prevData.\n * @param {boolean} isWrap - Specifyt boolean value\n * @returns {number} - To find maximum value.\n */\nfunction findMaxValue(table, text, isCol, parent, prevData, isWrap) {\n    var myTableDiv = parent.createElement('div', { className: parent.element.className, styles: 'display: block' });\n    var myTable = parent.createElement('table', {\n        className: table.className + 'e-resizetable',\n        styles: 'width: auto;height: auto'\n    });\n    var myTr = parent.createElement('tr');\n    if (isCol) {\n        text.forEach(function (element) {\n            var tr = myTr.cloneNode();\n            tr.appendChild(element);\n            myTable.appendChild(tr);\n        });\n    }\n    else {\n        text.forEach(function (element) {\n            myTr.appendChild(element.cloneNode(true));\n        });\n        myTable.appendChild(myTr);\n    }\n    myTableDiv.appendChild(myTable);\n    document.body.appendChild(myTableDiv);\n    var offsetWidthValue;\n    var offsetHeightValue;\n    var tableMaxWidth = myTable.getBoundingClientRect().width;\n    var tableMaxHeight = myTable.getBoundingClientRect().height;\n    if (!isWrap) {\n        offsetHeightValue = tableMaxHeight;\n        offsetWidthValue = tableMaxWidth;\n    }\n    else {\n        if (isCol && parseInt(prevData, 10) > tableMaxWidth) {\n            offsetWidthValue = tableMaxWidth;\n        }\n        else {\n            offsetWidthValue = parseInt(prevData, 10);\n        }\n        if (!isCol && parseInt(prevData, 10) > tableMaxHeight) {\n            offsetHeightValue = tableMaxHeight;\n        }\n        else {\n            offsetHeightValue = parseInt(prevData, 10);\n        }\n    }\n    document.body.removeChild(myTableDiv);\n    if (isCol) {\n        return Math.ceil(offsetWidthValue);\n    }\n    else {\n        return Math.ceil(offsetHeightValue);\n    }\n}\n/**\n * @hidden\n * @param {CollaborativeEditArgs} options - Specify the collaborative edit arguments.\n * @param {Spreadsheet} spreadsheet - specify the spreadsheet.\n * @param {boolean} isRedo - Specifyt the boolean value.\n * @param {CollaborativeEditArgs[]} undoCollections - Specify the undo collections.\n * @param {object} actionEventArgs - Specify the actionEventArgs.\n * @param {ActionEventArgs} actionEventArgs.eventArgs - Specify the eventArgs.\n * @param {boolean} isRecursive - Specify the recursive.\n * @returns {void} - To update the Action.\n */\nfunction updateAction(options, spreadsheet, isRedo, undoCollections, actionEventArgs, isRecursive) {\n    /* eslint-disable-next-line  @typescript-eslint/no-explicit-any */\n    var eventArgs = options.eventArgs;\n    var chartElement;\n    var element;\n    var args;\n    var promise;\n    var sortArgs;\n    var cellEvtArgs;\n    var cellValue;\n    var clipboardPromise;\n    var model;\n    var sheet;\n    var column;\n    var row;\n    var addressInfo;\n    var isFromUpdateAction = options.isFromUpdateAction || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(isRedo);\n    if (options.isUndoRedo) {\n        isFromUpdateAction = options.isFromUpdateAction = true;\n        delete options.isUndoRedo;\n        spreadsheet.notify(_event__WEBPACK_IMPORTED_MODULE_4__.performUndoRedo, options);\n        return;\n    }\n    if (isFromUpdateAction && !isRecursive) {\n        var address = eventArgs.address || eventArgs.range || eventArgs.pastedRange\n            || (eventArgs.addressCollection && eventArgs.addressCollection[0]) || eventArgs.dataRange;\n        var sheetIndex_1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(eventArgs.sheetIndex) ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(eventArgs.sheetIdx)\n            ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(eventArgs.activeSheetIndex) ? address ? (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheetIndexFromAddress)(spreadsheet, address)\n                : spreadsheet.activeSheetIndex : eventArgs.activeSheetIndex : eventArgs.sheetIdx : eventArgs.sheetIndex;\n        if (sheetIndex_1 !== spreadsheet.activeSheetIndex) {\n            var args_1 = {\n                sheet: (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(spreadsheet, sheetIndex_1), resolveAfterFullDataLoaded: true,\n                indexes: [0, 0, 0, 0], promise: new Promise(function (resolve) { resolve((function () { })()); })\n            };\n            spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.updateSheetFromDataSource, args_1);\n            args_1.promise.then(function () {\n                updateAction(options, spreadsheet, isRedo, undoCollections, actionEventArgs, true);\n            });\n            return;\n        }\n    }\n    var cellSaveArgs;\n    var addrInfo;\n    var clearArgs;\n    var sheetIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheetIndexFromId)(spreadsheet, eventArgs.index);\n    var cellIndexes;\n    switch (options.action) {\n        case 'sorting':\n            args = {\n                range: options.eventArgs.range,\n                sortOptions: options.eventArgs.sortOptions,\n                cancel: false\n            };\n            promise = new Promise(function (resolve) { resolve((function () { })()); });\n            sortArgs = { args: args, promise: promise };\n            spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.initiateSort, sortArgs);\n            sortArgs.promise.then(function (args) {\n                spreadsheet.serviceLocator.getService('cell').refreshRange((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getIndexesFromAddress)(args.range));\n            });\n            break;\n        case 'cellSave':\n            cellEvtArgs = options.eventArgs;\n            cellSaveArgs = { element: cellEvtArgs.element, value: cellEvtArgs.value,\n                oldValue: cellEvtArgs.oldValue, address: cellEvtArgs.address, displayText: cellEvtArgs.displayText,\n                formula: cellEvtArgs.formula, originalEvent: cellEvtArgs.originalEvent, format: cellEvtArgs.format };\n            cellValue = cellSaveArgs.formula ? { formula: cellSaveArgs.formula } : { value: cellSaveArgs.value };\n            spreadsheet.updateCellInfo(cellValue, cellSaveArgs.address, false, options.eventArgs, isRedo);\n            if (isRedo === true) {\n                spreadsheet.trigger('cellSave', cellSaveArgs);\n            }\n            break;\n        case 'addNote':\n        case 'editNote':\n        case 'deleteNote':\n            cellIndexes = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getIndexesFromAddress)(options.eventArgs.address);\n            if (isRedo) {\n                (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.updateCell)(spreadsheet, spreadsheet.getActiveSheet(), { rowIdx: cellIndexes[0], colIdx: cellIndexes[1], preventEvt: true,\n                    cell: { notes: options.eventArgs.notes } });\n                spreadsheet.serviceLocator.getService('cell').refreshRange((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getIndexesFromAddress)(eventArgs.address), false, false, true, true, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.isImported)(spreadsheet));\n            }\n            break;\n        case 'cellDelete':\n            addrInfo = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getAddressInfo)(spreadsheet, options.eventArgs.address);\n            clearRange(spreadsheet, addrInfo.indices, addrInfo.sheetIndex);\n            break;\n        case 'format':\n            if (eventArgs.requestType === 'CellFormat') {\n                if (eventArgs.style && eventArgs.style.border && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(eventArgs.borderType)) {\n                    var style = {};\n                    Object.assign(style, eventArgs.style, null, true);\n                    eventArgs.style.border = undefined;\n                    spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setCellFormat, { style: eventArgs.style, refreshRibbon: true, range: eventArgs.range,\n                        onActionUpdate: true, isUndoRedo: true });\n                    eventArgs.style.border = style.border;\n                    spreadsheet.setBorder(eventArgs.style, eventArgs.range, eventArgs.borderType);\n                    eventArgs.style = style;\n                }\n                else {\n                    spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setCellFormat, { style: eventArgs.style, refreshRibbon: true, range: eventArgs.range,\n                        onActionUpdate: true, isUndoRedo: true });\n                }\n                getUpdateUsingRaf(function () { return spreadsheet.selectRange(spreadsheet.getActiveSheet().selectedRange); });\n            }\n            else {\n                spreadsheet.numberFormat(eventArgs.format, eventArgs.range);\n            }\n            break;\n        case 'clipboard':\n            clipboardPromise = new Promise(function (resolve) { resolve((function () { })()); });\n            addressInfo = spreadsheet.getAddressInfo(eventArgs.copiedRange);\n            spreadsheet.notify(eventArgs.copiedInfo.isCut ? _event__WEBPACK_IMPORTED_MODULE_4__.cut : _event__WEBPACK_IMPORTED_MODULE_4__.copy, {\n                range: addressInfo.indices, sId: (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(spreadsheet, addressInfo.sheetIndex).id,\n                promise: promise, invokeCopy: true, isPublic: true, isFromUpdateAction: true\n            });\n            clipboardPromise.then(function () { return spreadsheet.notify(_event__WEBPACK_IMPORTED_MODULE_4__.paste, {\n                range: (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getIndexesFromAddress)(eventArgs.pastedRange),\n                sIdx: (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheetIndex)(spreadsheet, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheetNameFromAddress)(eventArgs.pastedRange)),\n                type: eventArgs.type, isAction: false, isInternal: true, isFromUpdateAction: true\n            }); });\n            break;\n        case 'gridLines':\n            spreadsheet.setSheetPropertyOnMute(spreadsheet.sheets[eventArgs.sheetIdx], 'showGridLines', eventArgs.isShow);\n            spreadsheet.serviceLocator.getService('sheet').toggleGridlines();\n            spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.refreshRibbonIcons, null);\n            break;\n        case 'headers':\n            spreadsheet.setSheetPropertyOnMute(spreadsheet.sheets[eventArgs.sheetIdx], 'showHeaders', eventArgs.isShow);\n            spreadsheet.serviceLocator.getService('sheet').showHideHeaders();\n            spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.refreshRibbonIcons, null);\n            break;\n        case 'resize':\n        case 'resizeToFit':\n            if (isFromUpdateAction) {\n                sheet = spreadsheet.sheets[eventArgs.sheetIndex];\n                column = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumn)(sheet, eventArgs.index);\n                row = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRow)(sheet, eventArgs.index);\n                if ((eventArgs.isCol && column && column.hidden) || (row && row.hidden)) {\n                    spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.hideShow, { startIndex: eventArgs.index, endIndex: eventArgs.index, hide: false, isCol: eventArgs.isCol,\n                        sheetIndex: eventArgs.sheetIndex });\n                }\n            }\n            if (eventArgs.isCol) {\n                if (eventArgs.hide === undefined) {\n                    spreadsheet.setColWidth(isFromUpdateAction && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(isRedo) ? eventArgs.oldWidth :\n                        eventArgs.width, eventArgs.index, eventArgs.sheetIndex);\n                }\n                else {\n                    spreadsheet.hideColumn(eventArgs.index, eventArgs.index, eventArgs.hide);\n                }\n            }\n            else {\n                if (eventArgs.hide === undefined) {\n                    spreadsheet.setRowHeight(isFromUpdateAction && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(isRedo) ? eventArgs.oldHeight :\n                        eventArgs.height, eventArgs.index, eventArgs.sheetIndex);\n                }\n                else {\n                    spreadsheet.hideRow(eventArgs.index, eventArgs.index, eventArgs.hide);\n                }\n                spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_1__.refreshFilterCellsOnResize, { rowIndex: eventArgs.index });\n            }\n            break;\n        case 'renameSheet':\n            spreadsheet.setSheetPropertyOnMute(spreadsheet.sheets[sheetIndex], 'name', eventArgs.value);\n            spreadsheet.notify(_event__WEBPACK_IMPORTED_MODULE_4__.sheetNameUpdate, {\n                items: spreadsheet.element.querySelector('.e-sheet-tabs-items'),\n                value: eventArgs.value,\n                idx: sheetIndex\n            });\n            break;\n        case 'hideSheet':\n            spreadsheet.notify(_event__WEBPACK_IMPORTED_MODULE_4__.hideSheet, { sheetIndex: eventArgs.sheetIndex });\n            break;\n        case 'showSheet':\n            spreadsheet.notify(_event__WEBPACK_IMPORTED_MODULE_4__.showSheet, eventArgs);\n            break;\n        case 'removeSheet':\n            spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_3__.removeSheetTab, { index: eventArgs.index, isAction: true, count: eventArgs.sheetCount, clicked: true });\n            break;\n        case 'gotoSheet':\n            spreadsheet.notify(_event__WEBPACK_IMPORTED_MODULE_4__.goToSheet, { selectedIndex: eventArgs.currentSheetIndex, previousIndex: eventArgs.previousSheetIndex });\n            break;\n        case 'moveSheet':\n            (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.moveSheet)(spreadsheet, eventArgs.position, eventArgs.sheetIndexes, null, isFromUpdateAction);\n            break;\n        case 'wrap':\n            (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.wrap)(options.eventArgs.address, options.eventArgs.wrap, spreadsheet);\n            break;\n        case 'hideShow':\n            if (eventArgs.isCol) {\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.hideShow, { startIndex: eventArgs.startIndex, endIndex: eventArgs.endIndex, isCol: true,\n                    hide: isRedo === false ? !eventArgs.hide : eventArgs.hide, sheetIndex: eventArgs.sheetIndex,\n                    hiddenIndexes: eventArgs.hiddenIndexes });\n            }\n            else {\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.hideShow, { startIndex: eventArgs.startIndex, endIndex: eventArgs.endIndex,\n                    hide: isRedo === false ? !eventArgs.hide : eventArgs.hide, sheetIndex: eventArgs.sheetIndex });\n            }\n            break;\n        case 'replace':\n            spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.replace, { value: eventArgs.compareValue, replaceValue: eventArgs.replaceValue,\n                sheetIndex: eventArgs.sheetIndex, address: eventArgs.address });\n            break;\n        case 'replaceAll':\n            spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.replaceAll, eventArgs);\n            break;\n        case 'filter':\n            promise = new Promise(function (resolve) { resolve((function () { })()); });\n            if (isRedo === false) {\n                spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_3__.initiateFilterUI, { predicates: eventArgs.previousPredicates, range: eventArgs.range, sIdx: eventArgs.sheetIndex, promise: promise, isInternal: true });\n            }\n            else {\n                spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_3__.initiateFilterUI, { predicates: eventArgs.predicates, range: eventArgs.range, sIdx: eventArgs.sheetIndex, promise: promise,\n                    isInternal: true, useFilterRange: eventArgs.useFilterRange, allowHeaderFilter: eventArgs.allowHeaderFilter });\n            }\n            if (actionEventArgs && !isFromUpdateAction) {\n                promise.then(function () {\n                    spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_1__.completeAction, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({ isUndo: !isRedo, isUndoRedo: !isFromUpdateAction }, actionEventArgs));\n                });\n            }\n            break;\n        case 'insert':\n            if (options.eventArgs.modelType === 'Sheet') {\n                sheet = spreadsheet;\n            }\n            else {\n                sheet = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(spreadsheet, options.eventArgs.activeSheetIndex);\n                if (!sheet) {\n                    break;\n                }\n            }\n            if (isRedo === false) {\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.deleteModel, { model: sheet, start: options.eventArgs.index, isUndoRedo: true, end: options.eventArgs.index + (options.eventArgs.model.length - 1), modelType: options.eventArgs.modelType });\n            }\n            else {\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.insertModel, { model: sheet, start: options.eventArgs.index, end: options.eventArgs.index +\n                        (options.eventArgs.model.length - 1), modelType: options.eventArgs.modelType, checkCount: isRedo === undefined ?\n                        options.eventArgs.sheetCount : null, activeSheetIndex: options.eventArgs.activeSheetIndex, isUndoRedo: true,\n                    insertType: options.eventArgs.insertType, isFromUpdateAction: isFromUpdateAction, isRedo: isRedo });\n            }\n            break;\n        case 'delete':\n            if (options.eventArgs.modelType === 'Sheet') {\n                sheet = spreadsheet;\n            }\n            else {\n                sheet = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(spreadsheet, options.eventArgs.activeSheetIndex);\n                if (!sheet) {\n                    break;\n                }\n            }\n            if (isRedo === false) {\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.insertModel, { model: sheet, start: options.eventArgs.deletedModel, modelType: options.eventArgs.modelType, columnCellsModel: options.eventArgs.deletedCellsModel, definedNames: options.eventArgs.definedNames, activeSheetIndex: options.eventArgs.activeSheetIndex, isUndoRedo: true,\n                    insertType: options.eventArgs.modelType === 'Row' ? 'above' : 'before',\n                    conditionalFormats: options.eventArgs.conditionalFormats, prevAction: options.action, freezePane: eventArgs.freezePane });\n            }\n            else {\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.deleteModel, { model: sheet, start: options.eventArgs.startIndex,\n                    checkCount: options.eventArgs.sheetCount, end: options.eventArgs.endIndex, modelType: options.eventArgs.modelType,\n                    isUndoRedo: true, insertType: options.eventArgs.modelType === 'Row' ? 'above' : 'before' });\n            }\n            break;\n        case 'validation':\n            if (isRedo === false) {\n                spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_1__.removeDataValidation, { range: eventArgs.range });\n            }\n            else {\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.cellValidation, { rules: { type: eventArgs.type, operator: eventArgs.operator, value1: eventArgs.value1, value2: eventArgs.value2, ignoreBlank: eventArgs.ignoreBlank, inCellDropDown: eventArgs.inCellDropDown },\n                    range: eventArgs.range, isAction: true });\n            }\n            break;\n        case 'removeHighlight':\n        case 'addHighlight':\n            spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_1__.invalidData, { isRemoveHighlight: options.action === 'removeHighlight', isPublic: true });\n            break;\n        case 'merge':\n            options.eventArgs.isAction = false;\n            model = [];\n            for (var rIdx = 0, rCnt = eventArgs.model.length; rIdx < rCnt; rIdx++) {\n                model.push({ cells: [] });\n                for (var cIdx = 0, cCnt = eventArgs.model[rIdx].cells.length; cIdx < cCnt; cIdx++) {\n                    model[rIdx].cells[cIdx] = {};\n                    Object.assign(model[rIdx].cells[cIdx], eventArgs.model[rIdx].cells[cIdx]);\n                }\n            }\n            if (isRedo === false && eventArgs.mergeCollection) {\n                var mergeItem = void 0;\n                for (var i = 0; i < eventArgs.mergeCollection.length; i++) {\n                    mergeItem = { range: null };\n                    Object.assign(mergeItem, eventArgs);\n                    mergeItem.range = eventArgs.mergeCollection[i];\n                    spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setMerge, mergeItem);\n                }\n            }\n            else {\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setMerge, options.eventArgs);\n            }\n            if (spreadsheet.calculationMode === 'Manual' && isRedo &&\n                spreadsheet.getActiveSheet().isSheetCalculated) {\n                for (var i = 0; i < eventArgs.model.length; i++) {\n                    var cells = eventArgs.model[i].cells;\n                    for (var j = 0; j < cells.length; j++) {\n                        var value = eventArgs.model[i].cells[j].value;\n                        model[i].cells[j].value =\n                            (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value) && value !== '' ? value : model[i].cells[j].value);\n                    }\n                }\n            }\n            eventArgs.model = model;\n            break;\n        case 'clear':\n            clearArgs = { options: options.eventArgs, isFromUpdateAction: isFromUpdateAction };\n            spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_1__.clearViewer, clearArgs);\n            if (!isFromUpdateAction && clearArgs.cfClearActionArgs) {\n                eventArgs.cfClearActionArgs.previousConditionalFormats = clearArgs.cfClearActionArgs.previousConditionalFormats;\n                eventArgs.cfClearActionArgs.conditionalFormats = clearArgs.cfClearActionArgs.conditionalFormats;\n            }\n            break;\n        case 'conditionalFormat':\n            if (isRedo === false) {\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.clearCFRule, { range: eventArgs.range, cfModel: { type: eventArgs.type, cFColor: eventArgs.cFColor,\n                        value: eventArgs.value }, sheetIdx: eventArgs.sheetIdx, isUndoRedo: !eventArgs.cancel,\n                    isFromUpdateAction: isFromUpdateAction });\n            }\n            else {\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setCFRule, { cfModel: { type: eventArgs.type, cFColor: eventArgs.cFColor, value: eventArgs.value,\n                        range: eventArgs.range }, sheetIdx: eventArgs.sheetIdx, isUndoRedo: true, isFromUpdateAction: isFromUpdateAction });\n            }\n            break;\n        case 'clearCF':\n            if (isRedo === false) {\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.clearCFRule, { oldCFModel: eventArgs.previousConditionalFormats, updatedCFModel: eventArgs.conditionalFormats,\n                    range: eventArgs.selectedRange, isUndo: true, sheetIdx: eventArgs.sheetIdx });\n            }\n            else {\n                var clearArgs_1 = { range: eventArgs.selectedRange, sheetIdx: eventArgs.sheetIdx,\n                    isUndoRedo: true, isFromUpdateAction: isFromUpdateAction };\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.clearCFRule, clearArgs_1);\n                if (!isFromUpdateAction) {\n                    eventArgs.previousConditionalFormats = clearArgs_1.oldCFModel;\n                    if (clearArgs_1.updatedCFModel.length) {\n                        eventArgs.conditionalFormats = clearArgs_1.updatedCFModel;\n                    }\n                    else {\n                        delete eventArgs.conditionalFormats;\n                    }\n                }\n            }\n            break;\n        case 'insertImage':\n            if (isRedo === false) {\n                spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_1__.deleteImage, { id: options.eventArgs.id, sheetIdx: options.eventArgs.sheetIndex + 1, range: options.eventArgs.range,\n                    preventEventTrigger: true });\n            }\n            else {\n                spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_1__.createImageElement, { options: { src: options.eventArgs.imageData, height: options.eventArgs.imageHeight, width: options.eventArgs.imageWidth, id: options.eventArgs.id }, range: options.eventArgs.range, isPublic: false,\n                    isUndoRedo: true });\n            }\n            break;\n        case 'deleteImage':\n            if (isRedo === false) {\n                spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_1__.createImageElement, { options: { src: options.eventArgs.imageData, height: options.eventArgs.imageHeight, width: options.eventArgs.imageWidth, id: options.eventArgs.id }, range: options.eventArgs.address, isPublic: false,\n                    isUndoRedo: true });\n            }\n            else {\n                spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_1__.deleteImage, { id: options.eventArgs.id, range: options.eventArgs.address, preventEventTrigger: true });\n            }\n            break;\n        case 'imageRefresh':\n            element = document.getElementById(options.eventArgs.id);\n            if (isRedo === false) {\n                spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_1__.refreshImgCellObj, { prevTop: options.eventArgs.currentTop, prevLeft: options.eventArgs.currentLeft, currentTop: options.eventArgs.prevTop, currentLeft: options.eventArgs.prevLeft, id: options.eventArgs.id, currentHeight: options.eventArgs.prevHeight, currentWidth: options.eventArgs.prevWidth, requestType: 'imageRefresh',\n                    prevHeight: options.eventArgs.currentHeight, prevWidth: options.eventArgs.currentWidth, isUndoRedo: true });\n            }\n            else {\n                options.eventArgs.isUndoRedo = true;\n                spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_1__.refreshImgCellObj, options.eventArgs);\n            }\n            if (element) {\n                element.style.height = isRedo === false ? options.eventArgs.prevHeight + 'px' : options.eventArgs.currentHeight + 'px';\n                element.style.width = isRedo === false ? options.eventArgs.prevWidth + 'px' : options.eventArgs.currentWidth + 'px';\n                element.style.top = isRedo === false ? options.eventArgs.prevTop + 'px' : options.eventArgs.currentTop + 'px';\n                element.style.left = isRedo === false ? options.eventArgs.prevLeft + 'px' : options.eventArgs.currentLeft + 'px';\n            }\n            break;\n        case 'insertChart':\n            if (isRedo === false) {\n                spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_3__.deleteChart, { id: eventArgs.id, range: eventArgs.posRange || eventArgs.range, isUndoRedo: true });\n            }\n            else {\n                var chartOptions = [{\n                        type: eventArgs.type, theme: eventArgs.theme,\n                        markerSettings: eventArgs.markerSettings, isSeriesInRows: eventArgs.isSeriesInRows,\n                        range: eventArgs.range, id: eventArgs.id, height: eventArgs.height, width: eventArgs.width, top: eventArgs.top,\n                        left: eventArgs.left\n                    }];\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setChart, {\n                    chart: chartOptions, isUndoRedo: false, range: eventArgs.posRange || eventArgs.range, isInitCell: true, isRedo: true\n                });\n            }\n            break;\n        case 'deleteChart':\n            if (isRedo === false) {\n                var chartOpts = [{\n                        type: eventArgs.type, theme: eventArgs.theme, markerSettings: eventArgs.markerSettings,\n                        dataLabelSettings: eventArgs.dataLabelSettings, title: eventArgs.title,\n                        legendSettings: eventArgs.legendSettings, primaryXAxis: eventArgs.primaryXAxis,\n                        primaryYAxis: eventArgs.primaryYAxis, isSeriesInRows: eventArgs.isSeriesInRows,\n                        range: eventArgs.range, id: eventArgs.id, height: eventArgs.height,\n                        width: eventArgs.width, top: eventArgs.top, left: eventArgs.left\n                    }];\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setChart, { chart: chartOpts, isUndoRedo: false, range: eventArgs.posRange, isInitCell: true, isUndo: true });\n            }\n            else {\n                spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_3__.deleteChart, { id: eventArgs.id, range: eventArgs.range, isUndoRedo: true });\n            }\n            break;\n        case 'chartRefresh':\n            chartElement = document.getElementById(options.eventArgs.id);\n            if (chartElement) {\n                chartElement.style.height = isRedo === false ? options.eventArgs.prevHeight + 'px' : options.eventArgs.currentHeight + 'px';\n                chartElement.style.width = isRedo === false ? options.eventArgs.prevWidth + 'px' : options.eventArgs.currentWidth + 'px';\n                chartElement.style.top = isRedo === false ? options.eventArgs.prevTop + 'px' : options.eventArgs.currentTop + 'px';\n                chartElement.style.left = isRedo === false ? options.eventArgs.prevLeft + 'px' : options.eventArgs.currentLeft + 'px';\n            }\n            if (isRedo === false) {\n                spreadsheet.notify(_event__WEBPACK_IMPORTED_MODULE_4__.refreshChartCellObj, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, options.eventArgs, {\n                    currentColIdx: options.eventArgs.prevColIdx, currentHeight: options.eventArgs.prevHeight,\n                    currentLeft: options.eventArgs.prevLeft, currentRowIdx: options.eventArgs.prevRowIdx,\n                    currentTop: options.eventArgs.prevTop, currentWidth: options.eventArgs.prevWidth,\n                    prevColIdx: options.eventArgs.currentColIdx, prevHeight: options.eventArgs.currentHeight,\n                    prevLeft: options.eventArgs.currentLeft, prevRowIdx: options.eventArgs.currentRowIdx,\n                    prevTop: options.eventArgs.currentTop, prevWidth: options.eventArgs.currentWidth, isUndoRedo: true\n                }));\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.refreshChartSize, {\n                    height: options.eventArgs.prevHeight.toString(),\n                    width: options.eventArgs.prevWidth.toString(), overlayEle: chartElement\n                });\n            }\n            else {\n                options.eventArgs.isUndoRedo = true;\n                spreadsheet.notify(_event__WEBPACK_IMPORTED_MODULE_4__.refreshChartCellObj, options.eventArgs);\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.refreshChartSize, {\n                    height: options.eventArgs.currentHeight.toString(),\n                    width: options.eventArgs.currentWidth.toString(), overlayEle: chartElement\n                });\n            }\n            break;\n        case 'chartDesign':\n            spreadsheet.notify(_event__WEBPACK_IMPORTED_MODULE_4__.chartDesignTab, options.eventArgs);\n            break;\n        case 'autofill':\n            if (isFromUpdateAction && eventArgs.undoArgs) {\n                eventArgs.undoArgs.isFromUpdateAction = eventArgs.undoArgs.isUndo = eventArgs.undoArgs.preventEvt = true;\n                eventArgs.undoArgs.isPublic = true;\n                spreadsheet.notify(_event__WEBPACK_IMPORTED_MODULE_4__.performUndoRedo, eventArgs.undoArgs);\n            }\n            spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setAutoFill, { fillRange: options.eventArgs.fillRange, dataRange: options.eventArgs.dataRange,\n                fillType: options.eventArgs.fillType, direction: options.eventArgs.direction, cells: options.eventArgs.beforeActionData });\n            break;\n        case 'removeValidation':\n            if (isRedo !== false) {\n                spreadsheet.notify(_index__WEBPACK_IMPORTED_MODULE_1__.removeDataValidation, { range: eventArgs.range, isCol: eventArgs.isColSelected });\n            }\n            break;\n        case 'addDefinedName':\n            if (isRedo === false) {\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.workbookFormulaOperation, { action: 'removeDefinedName', isRemoved: false, definedName: eventArgs.name, scope: eventArgs.scope, isEventTrigger: true });\n            }\n            else {\n                var definedName = { name: eventArgs.name, refersTo: eventArgs.refersTo, scope: eventArgs.scope, comment: eventArgs.comment };\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.workbookFormulaOperation, { action: 'addDefinedName', isAdded: false, definedName: definedName, isEventTrigger: true });\n            }\n            break;\n        case 'hyperlink':\n            spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setLinkModel, { hyperlink: eventArgs.hyperlink, cell: eventArgs.address, displayText: eventArgs.displayText,\n                isUndoRedo: true });\n            spreadsheet.serviceLocator.getService('cell').refreshRange((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getIndexesFromAddress)(eventArgs.address), false, false, false, true, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.isImported)(spreadsheet));\n            break;\n        case 'removeHyperlink':\n            spreadsheet.notify(_event__WEBPACK_IMPORTED_MODULE_4__.removeHyperlink, { range: eventArgs.address, preventEventTrigger: true });\n            break;\n        case 'freezePanes':\n            spreadsheet.freezePanes(eventArgs.row, eventArgs.column, eventArgs.sheetIndex);\n            break;\n        case 'duplicateSheet':\n            (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.duplicateSheet)(spreadsheet, eventArgs.sheetIndex, null, isFromUpdateAction);\n            break;\n        case 'protectSheet':\n            if (eventArgs.isProtected) {\n                spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.protectsheetHandler, eventArgs);\n            }\n            else {\n                spreadsheet.setSheetPropertyOnMute((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(spreadsheet, eventArgs.sheetIndex), 'password', '');\n                spreadsheet.notify(_event__WEBPACK_IMPORTED_MODULE_4__.applyProtect, { isActive: true, sheetIndex: eventArgs.sheetIndex });\n            }\n            break;\n        case 'protectWorkbook':\n            if (eventArgs.isProtected) {\n                spreadsheet.notify(_event__WEBPACK_IMPORTED_MODULE_4__.setProtectWorkbook, eventArgs);\n            }\n            else {\n                spreadsheet.notify(_event__WEBPACK_IMPORTED_MODULE_4__.removeWorkbookProtection, null);\n            }\n            break;\n        case 'lockCells':\n            spreadsheet.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setLockCells, eventArgs);\n    }\n}\n/**\n * @hidden\n * @param {Workbook} workbook - Specify the workbook\n * @param {number} rowIdx - specify the roe index\n * @param {number} colIdx - specify the column Index.\n * @param {number} sheetIdx - specify the sheet index.\n * @returns {boolean} - Returns the boolean value.\n */\nfunction hasTemplate(workbook, rowIdx, colIdx, sheetIdx) {\n    var sheet = workbook.sheets[sheetIdx];\n    var ranges = sheet.ranges;\n    var range;\n    for (var i = 0, len = ranges.length; i < len; i++) {\n        if (ranges[i].template) {\n            range = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(ranges[i].address.length ? ranges[i].address : ranges[i].startCell);\n            if (range[0] <= rowIdx && range[1] <= colIdx && range[2] >= rowIdx && range[3] >= colIdx) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/**\n * Setting row height in view an model.\n *\n * @hidden\n * @param {Spreadsheet} parent - Specify the parent\n * @param {SheetModel} sheet - specify the column width\n * @param {number} height - specify the style.\n * @param {number} rowIdx - specify the rowIdx\n * @param {HTMLElement} row - specify the row\n * @param {HTMLElement} hRow - specify the hRow.\n * @param {boolean} notifyRowHgtChange - specify boolean value.\n * @param {boolean} outsideViewport - Specify whether the row is outside the viewport.\n * @returns {void} - Setting row height in view an model.\n */\nfunction setRowEleHeight(parent, sheet, height, rowIdx, row, hRow, notifyRowHgtChange, outsideViewport) {\n    if (notifyRowHgtChange === void 0) { notifyRowHgtChange = true; }\n    var prevHgt = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowHeight)(sheet, rowIdx, true);\n    var dprHgt = getDPRValue(height);\n    if (!outsideViewport) {\n        var frozenCol = parent.frozenColCount(sheet);\n        row = row || (sheet.frozenRows ? parent.getRow(rowIdx, null, frozenCol) : parent.getRow(rowIdx));\n        if (row) {\n            row.style.height = dprHgt + \"px\";\n        }\n        if (sheet.frozenColumns) {\n            hRow = hRow || parent.getRow(rowIdx, null, frozenCol - 1);\n        }\n        else {\n            var frozenRow = parent.frozenRowCount(sheet);\n            hRow = hRow || parent.getRow(rowIdx, rowIdx < frozenRow ? parent.sheetModule.getSelectAllTable() : parent.getRowHeaderTable());\n        }\n        if (hRow) {\n            hRow.style.height = dprHgt + \"px\";\n        }\n    }\n    (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setRowHeight)(sheet, rowIdx, height);\n    parent.setProperties({ sheets: parent.sheets }, true);\n    if (notifyRowHgtChange) {\n        parent.notify(_index__WEBPACK_IMPORTED_MODULE_3__.rowHeightChanged, { rowIdx: rowIdx, threshold: dprHgt - prevHgt });\n    }\n}\n/**\n * @hidden\n * @param {Workbook} context - Specify the context\n * @param {CellStyleModel} style - specify the style.\n * @param {number} lines - specify the lines\n * @param {number} lineHeight - Specify the line height.\n * @returns {number} - get Text Height\n */\nfunction getTextHeight(context, style, lines, lineHeight) {\n    if (lines === void 0) { lines = 1; }\n    var fontSize = (style && style.fontSize) || context.cellStyle.fontSize;\n    var fontSizePx = fontSize.indexOf('pt') > -1 ? parseInt(fontSize, 10) / 0.75 : parseInt(fontSize, 10);\n    var hgt = fontSizePx * (lineHeight || getLineHeight(style && style.fontFamily ? style : context.cellStyle)) * lines;\n    return Math.ceil(hgt % 1 > 0.9 ? hgt + 1 : hgt); // 0.9 -> if it is nearest value adding extra 1 pixel\n}\n/**\n * @hidden\n * @param {CellStyleModel} style - cell style\n * @returns {number} - returns line height\n */\nfunction getLineHeight(style) {\n    var lineHeight = textLineHeight;\n    if (style) {\n        if (style.fontFamily === 'Arial Black' || style.fontFamily === 'Comic Sans MS') {\n            lineHeight = 1.44;\n        }\n        else if (style.fontFamily === '\"Segoe UI\", sans-serif') {\n            lineHeight = 1.36;\n        }\n    }\n    return lineHeight;\n}\n/**\n * @hidden\n * @param {string} text - Specify the text\n * @param {CellStyleModel} style - specify the style.\n * @param {CellStyleModel} parentStyle - specify the parentStyle\n * @param  {boolean} preventDpr - specify the preventDpr.\n * @returns {number} - get Text Width\n */\nfunction getTextWidth(text, style, parentStyle, preventDpr) {\n    if (!style) {\n        style = parentStyle;\n    }\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    context.font = (style.fontStyle || parentStyle.fontStyle) + ' ' + (style.fontWeight || parentStyle.fontWeight) + ' '\n        + (style.fontSize || parentStyle.fontSize) + ' ' + (style.fontFamily || parentStyle.fontFamily);\n    return preventDpr ? context.measureText(text).width : getDPRValue(context.measureText(text).width, true);\n}\n/**\n * @hidden\n * @param {string} text - Specify the text\n * @param {number} colwidth - specify the column width\n * @param {CellStyleModel} style - specify the style.\n * @param {CellStyleModel} parentStyle - specify the parentStyle\n * @returns {number} - Setting maximum height while doing formats and wraptext\n */\nfunction getLines(text, colwidth, style, parentStyle) {\n    var width;\n    var splitTextArr;\n    var lWidth;\n    var cWidth;\n    var prevWidth = 0;\n    var textArr = text.toString().split(' ');\n    var spaceWidth = getTextWidth(' ', style, parentStyle);\n    var hypenWidth;\n    var lines;\n    var cnt = 0;\n    var lineCnt = 0;\n    var maxCnt = 0;\n    var calculateCount = function (txt, isHypenSplit) {\n        if (prevWidth) {\n            cnt++;\n        }\n        if (width / colwidth >= 1) {\n            txt.split('').forEach(function (val) {\n                cWidth = getTextWidth(val, style, parentStyle, true);\n                lWidth += cWidth;\n                if (lWidth > colwidth) {\n                    cnt++;\n                    lWidth = cWidth;\n                }\n            });\n            width = getDPRValue(lWidth, true);\n        }\n        if (!isHypenSplit) {\n            addSpace(width);\n        }\n        prevWidth = width;\n    };\n    var addSpace = function (size) {\n        width += ((size + spaceWidth) / colwidth >= 1 ? 0 : spaceWidth);\n    };\n    textArr.forEach(function (txt) {\n        lWidth = 0;\n        cWidth = 0;\n        width = getTextWidth(txt, style, parentStyle);\n        lines = (prevWidth + width) / colwidth;\n        if (lines > 1) {\n            splitTextArr = txt.split('-');\n            if (splitTextArr.length > 1) {\n                var lastIdx_1 = splitTextArr.length - 1;\n                splitTextArr.forEach(function (splitText, index) {\n                    lWidth = 0;\n                    cWidth = 0;\n                    if (!hypenWidth) {\n                        hypenWidth = getTextWidth('-', style, parentStyle);\n                    }\n                    width = getTextWidth(splitText, style, parentStyle);\n                    if (index < lastIdx_1) {\n                        width += hypenWidth;\n                    }\n                    lines = (prevWidth + width) / colwidth;\n                    if (lines >= 1) {\n                        calculateCount(splitText, index !== lastIdx_1);\n                    }\n                    else {\n                        if (index === lastIdx_1 && textArr[textArr.length - 1] !== txt) {\n                            addSpace(prevWidth + width);\n                        }\n                        prevWidth += width;\n                    }\n                });\n            }\n            else {\n                calculateCount(txt, false);\n            }\n        }\n        else {\n            addSpace(prevWidth + width);\n            prevWidth += width;\n        }\n    });\n    if (prevWidth) {\n        lineCnt = (prevWidth - spaceWidth) / colwidth;\n        maxCnt = parseFloat((lineCnt).toString().split('.')[0]);\n        cnt += (lineCnt + 0.05 >= maxCnt + 1 ? Math.ceil(lineCnt) + 1 : Math.ceil(lineCnt));\n    }\n    return cnt;\n}\n/**\n * calculation for width taken by border inside a cell\n *\n * @param {number} rowIdx - Specify the row index.\n * @param {number} colIdx - Specify the column index.\n * @param {SheetModel} sheet - Specify the sheet.\n * @returns {number} - get border width.\n * @hidden\n */\nfunction getBorderWidth(rowIdx, colIdx, sheet) {\n    var width = 0;\n    var cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(rowIdx, colIdx, sheet, null, true);\n    var rightSideCell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(rowIdx, colIdx + 1, sheet, null, true);\n    if (cell.style) {\n        if (cell.style.border) {\n            width = (colIdx === 0 ? 2 : 1) * parseFloat(cell.style.border.split('px')[0]);\n        }\n        else {\n            if (colIdx === 0 && cell.style.borderLeft) {\n                width = parseFloat(cell.style.borderLeft.split('px')[0]);\n            }\n            if (cell.style.borderRight) {\n                width += parseFloat(cell.style.borderRight.split('px')[0]);\n            }\n        }\n    }\n    if (!(cell.style && (cell.style.border || cell.style.borderRight)) && rightSideCell.style && rightSideCell.style.borderLeft) {\n        width += parseFloat(rightSideCell.style.borderLeft.split('px')[0]);\n    }\n    return width > 0 && width < 1 ? 1 : width;\n}\n/**\n * calculation for height taken by border inside a cell\n *\n * @param {number} rowIdx - Specify the row index.\n * @param {number} colIdx - Specify the column index.\n * @param {SheetModel} sheet - Specify the sheet.\n * @returns {number} - get border height.\n * @hidden\n */\nfunction getBorderHeight(rowIdx, colIdx, sheet) {\n    var height = 0;\n    var cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(rowIdx, colIdx, sheet, null, true);\n    if (cell.style) {\n        if (cell.style.border) {\n            height = (rowIdx === 0 ? 2 : 1) * parseFloat(cell.style.border.split('px')[0]);\n        }\n        else {\n            if (rowIdx === 0 && cell.style.borderTop) {\n                height = parseFloat(cell.style.borderTop.split('px')[0]);\n            }\n            if (cell.style.borderBottom) {\n                height += parseFloat(cell.style.borderBottom.split('px')[0]);\n            }\n        }\n    }\n    var bottomSideCell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(rowIdx + 1, colIdx, sheet, null, true);\n    if (!(cell.style && (cell.style.border || cell.style.borderBottom)) && bottomSideCell.style && bottomSideCell.style.borderTop) {\n        height += parseFloat(bottomSideCell.style.borderTop.split('px')[0]);\n    }\n    return Math.ceil(height) || 1; // 1 -> For default bottom border\n}\n/**\n * Calculating column width by excluding cell padding and border width\n *\n * @param {SheetModel} sheet - Specify the sheet\n * @param {number} rowIdx - Specify the row index.\n * @param {number} startColIdx - Specify the start column index.\n * @param {number} endColIdx - Specify the end column index.\n * @returns {number} - get excluded column width.\n * @hidden\n */\nfunction getExcludedColumnWidth(sheet, rowIdx, startColIdx, endColIdx) {\n    if (endColIdx === void 0) { endColIdx = startColIdx; }\n    return (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, startColIdx, endColIdx, true) - getDPRValue((4 + (getBorderWidth(rowIdx, startColIdx, sheet) || 1))); // 4 -> For cell padding\n}\n/**\n * @param {Workbook} context - Specify the Workbook.\n * @param {number} rowIdx - Specify the row index.\n * @param {number} colIdx - Specify the column index.\n * @param {SheetModel} sheet - Specify the sheet.\n * @param {CellStyleModel} style - Specify the style.\n * @param {number} lines - Specify the lines.\n * @param {number} lineHeight - Specify the line height.\n * @returns {number} - get text height with border.\n * @hidden\n */\nfunction getTextHeightWithBorder(context, rowIdx, colIdx, sheet, style, lines, lineHeight) {\n    return getTextHeight(context, style, lines, lineHeight) + getBorderHeight(rowIdx, colIdx, sheet);\n}\n/**\n * Setting maximum height while doing formats and wraptext\n *\n * @hidden\n * @param {SheetModel} sheet - Specify the sheet\n * @param {number} rIdx - specify the row Index\n * @param {number} cIdx - specify the column Index.\n * @param {number} hgt - specify the hgt\n * @returns {void} - Setting maximum height while doing formats and wraptext\n */\nfunction setMaxHgt(sheet, rIdx, cIdx, hgt) {\n    if (!sheet.maxHgts[rIdx]) {\n        sheet.maxHgts[rIdx] = {};\n    }\n    sheet.maxHgts[rIdx][cIdx] = hgt;\n}\n/**\n * Getting maximum height by comparing each cell's modified height.\n *\n * @hidden\n * @param {SheetModel} sheet - Specify the sheet.\n * @param {number} rIdx - Specify the row index.\n * @returns {number} - Getting maximum height by comparing each cell's modified height.\n */\nfunction getMaxHgt(sheet, rIdx) {\n    var maxHgt = 0;\n    var rowHgt = sheet.maxHgts[rIdx];\n    if (rowHgt) {\n        Object.keys(rowHgt).forEach(function (key) {\n            if (rowHgt[\"\" + key] > maxHgt) {\n                maxHgt = rowHgt[\"\" + key];\n            }\n        });\n    }\n    return maxHgt;\n}\n/**\n * @hidden\n * @param {HTMLElement} ele - Specify the element.\n * @returns {void} - Specify the focus.\n */\nfunction focus(ele) {\n    if (!document.activeElement.classList.contains('e-text-findNext-short')) {\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isIE) {\n            var scrollX_1 = window.scrollX;\n            var scrollY_1 = window.scrollY;\n            ele.focus();\n            window.scrollTo(scrollX_1, scrollY_1);\n        }\n        else {\n            if (ele.classList.contains('e-input')) {\n                var inputEle = ele;\n                var position = inputEle.value.length;\n                inputEle.setSelectionRange(position, position);\n            }\n            ele.focus({ preventScroll: true });\n        }\n    }\n}\n/**\n * Checks whether a specific range of cells is locked or not.\n *\n * @param {Spreadsheet} parent - Specify the spreadsheet.\n * @param {number[]} rangeIndexes - Specify the range indexes.\n * @returns {boolean} - Returns true if any of the cells is locked and returns false if none of the cells is locked.\n * @hidden\n */\nfunction isLockedCells(parent, rangeIndexes) {\n    var sheet = parent.getActiveSheet();\n    var hasLockCell;\n    var address = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rangeIndexes) ? rangeIndexes : (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSwapRange)((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(sheet.selectedRange));\n    for (var row = address[0]; row <= address[2]; row++) {\n        for (var col = address[1]; col <= address[3]; col++) {\n            var cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(row, col, sheet);\n            if ((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.isLocked)(cell, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumn)(sheet, col))) {\n                hasLockCell = true;\n                break;\n            }\n        }\n    }\n    return hasLockCell;\n}\n/**\n * Checks whether the range is discontinuous or not.\n *\n * @param {string} range - Specify the sheet\n * @returns {boolean} - Returns true if the range is discontinuous range.\n * @hidden\n */\nfunction isDiscontinuousRange(range) {\n    return range.includes(' ');\n}\n/**\n * @hidden\n * @param {Spreadsheet} context - Specifies the context.\n * @param {number[]} range - Specifies the address range.\n * @param {number} sheetIdx - Specifies the sheetIdx.\n * @returns {void} - To clear the range.\n */\nfunction clearRange(context, range, sheetIdx) {\n    var sheet = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(context, sheetIdx);\n    var skip;\n    var cell;\n    var newCell;\n    var td;\n    var prop;\n    var uiRefresh = sheetIdx === context.activeSheetIndex;\n    var cfRefreshAll;\n    var cf = sheet.conditionalFormats && sheet.conditionalFormats.length && [].slice.call(sheet.conditionalFormats);\n    var cfRule = [];\n    var isCellUpdated = false;\n    for (var sRIdx = range[0], eRIdx = range[2]; sRIdx <= eRIdx; sRIdx++) {\n        if ((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.isFilterHidden)(sheet, sRIdx)) {\n            continue;\n        }\n        for (var sCIdx = range[1], eCIdx = range[3]; sCIdx <= eCIdx; sCIdx++) {\n            var args = { cellIdx: [sRIdx, sCIdx], isUnique: false,\n                uniqueRange: '' };\n            context.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.checkUniqueRange, args);\n            skip = false;\n            if (args.uniqueRange !== '') {\n                var rangeIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getIndexesFromAddress)(args.uniqueRange);\n                skip = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(rangeIndex[0], rangeIndex[1], sheet).value === '#SPILL!';\n            }\n            // Determine if it's the last iteration of the given range.\n            var isLastIteration = (sRIdx === eRIdx) && (sCIdx === eCIdx);\n            if (!args.isUnique || skip) {\n                cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(sRIdx, sCIdx, sheet);\n                if ((cell && cell.value === 0) || cell && cell.value && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.value) || cell.value !== '')) {\n                    isCellUpdated = false;\n                    newCell = {};\n                    if (cell.formula) {\n                        newCell.formula = '';\n                    }\n                    if (cell.value || cell.value === 0) {\n                        newCell.value = '';\n                    }\n                    if (cell.hyperlink) {\n                        newCell.hyperlink = '';\n                    }\n                    var mergeArgs = { sheet: sheet, cell: cell, rowIdx: sRIdx, colIdx: sCIdx };\n                    if (cell.colSpan > 1 || cell.rowSpan > 1) {\n                        (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setVisibleMergeIndex)(mergeArgs);\n                    }\n                    td = context.getCell(mergeArgs.rowIdx, mergeArgs.colIdx);\n                    prop = { cell: newCell, rowIdx: sRIdx, colIdx: sCIdx, valChange: true, uiRefresh: uiRefresh, td: td,\n                        cellDelete: true, isDelete: !isLastIteration, deletedRange: range };\n                    if (!Object.keys(newCell).length || (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.updateCell)(context, sheet, prop)) {\n                        continue;\n                    }\n                    if (cf && !cfRefreshAll) {\n                        cfRefreshAll = prop.isFormulaDependent;\n                        if (!cfRefreshAll) {\n                            (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.updateCFModel)(cf, cfRule, sRIdx, sCIdx);\n                        }\n                    }\n                    if (td) {\n                        if (td.querySelector('.e-cf-databar')) {\n                            td.removeChild(td.querySelector('.e-cf-databar'));\n                        }\n                        if (td.querySelector('.e-iconsetspan')) {\n                            td.removeChild(td.querySelector('.e-iconsetspan'));\n                        }\n                    }\n                }\n                else {\n                    if (!isCellUpdated && prop) {\n                        isCellUpdated = isLastIteration;\n                        prop.isDelete = !isLastIteration;\n                        if (!Object.keys(newCell).length || (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.updateCell)(context, sheet, prop)) {\n                            continue;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((cfRule.length || cfRefreshAll) && uiRefresh) {\n        context.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.applyCF, { cfModel: !cfRefreshAll && cfRule, refreshAll: cfRefreshAll, isAction: true, isEdit: true });\n    }\n}\n/**\n * @param {Spreadsheet} parent - Specifies the spreadsheet instance.\n * @param {number} top - Specifies the top.\n * @returns {number} - It returns bottom offset.\n * @hidden\n */\nfunction getBottomOffset(parent, top) {\n    var hgt = 0;\n    var sheet = parent.getActiveSheet();\n    var viewPortHeight = (sheet.frozenRows ? parent.viewport.height - parent.sheetModule.getColHeaderHeight(sheet, true) :\n        parent.viewport.height) - 17 || 20;\n    for (var rowIdx = top;; rowIdx++) {\n        hgt += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowHeight)(sheet, rowIdx, true);\n        if (hgt >= viewPortHeight) {\n            return { index: rowIdx, height: hgt };\n        }\n    }\n}\n/**\n * @param {Spreadsheet} parent - Specifies the spreadsheet instance.\n * @param {number} left - Specifies the left.\n * @returns {number} -It returns right index using given left value.\n * @hidden\n */\nfunction getRightIdx(parent, left) {\n    var width = 0;\n    var sheet = parent.getActiveSheet();\n    var contWidth = parent.getMainContent().parentElement.offsetWidth -\n        parent.sheetModule.getRowHeaderWidth(sheet) - parent.sheetModule.getScrollSize();\n    for (var i = left;; i++) {\n        width += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnWidth)(sheet, i, null, true);\n        if (width >= contWidth) {\n            return i;\n        }\n    }\n}\n/**\n * @param {Spreadsheet} spreadsheet - Specifies the spreadsheet instance.\n * @param {number} minWidth - Specifies the minimum width.\n * @returns {void}\n * @hidden\n */\nfunction setColMinWidth(spreadsheet, minWidth) {\n    spreadsheet.renderModule.setSheetPanelSize(minWidth);\n}\n/**\n * Calculating resolution based windows value\n *\n * @param {number} size - Specify the end column index.\n * @returns {number} - get excluded column width.\n * @hidden\n */\nfunction addDPRValue(size) {\n    if (window.devicePixelRatio % 1 > 0) {\n        var pointValue = (size * window.devicePixelRatio) % 1;\n        return size + (pointValue ? ((pointValue > 0.5 ? (1 - pointValue) : -1 * pointValue) / window.devicePixelRatio) : 0);\n    }\n    return size;\n}\n/**\n * @param {Spreadsheet} context - Specifies the spreadsheet instance.\n * @param {string[]} keys - Specifies key array.\n * @returns {string} - It returns sheet property of the given key and context.\n * @hidden\n */\nfunction getSheetProperties(context, keys) {\n    var skipProps = [];\n    if (keys) {\n        /* eslint-disable */\n        var propList = Object.getPrototypeOf(new _workbook_index__WEBPACK_IMPORTED_MODULE_2__.Cell(context, 'cells', {}, true)).constructor.prototype.propList;\n        var cellProps = propList.colPropNames.concat(propList.complexPropNames).concat(propList.propNames);\n        cellProps.push('formattedText');\n        propList = Object.getPrototypeOf(new _workbook_index__WEBPACK_IMPORTED_MODULE_2__.Row(context, 'rows', {}, true)).constructor.prototype.propList;\n        var rowProps = propList.colPropNames.concat(propList.complexPropNames).concat(propList.propNames);\n        propList = Object.getPrototypeOf(new _workbook_index__WEBPACK_IMPORTED_MODULE_2__.Column(context, 'columns', {}, true)).constructor.prototype.propList;\n        var colProps = propList.colPropNames.concat(propList.complexPropNames).concat(propList.propNames);\n        propList = Object.getPrototypeOf(new _workbook_index__WEBPACK_IMPORTED_MODULE_2__.Sheet(context, 'sheets', {}, true)).constructor.prototype.propList;\n        /* eslint-enable */\n        var sheetProps = propList.colPropNames.concat(propList.complexPropNames).concat(propList.propNames);\n        sheetProps.splice(sheetProps.indexOf('rows'), 1);\n        sheetProps.splice(sheetProps.indexOf('columns'), 1);\n        sheetProps.splice(sheetProps.indexOf('cells'), 1);\n        rowProps.splice(rowProps.indexOf('cells'), 1);\n        skipProps.push.apply(skipProps, sheetProps);\n        if (keys.indexOf('rows') === -1) {\n            skipProps.push.apply(skipProps, rowProps);\n        }\n        if (keys.indexOf('columns') === -1) {\n            skipProps.push.apply(skipProps, colProps);\n        }\n        if (keys.indexOf('cells') === -1) {\n            skipProps.push.apply(skipProps, cellProps);\n        }\n        var idx_2;\n        keys.forEach(function (key) {\n            idx_2 = skipProps.indexOf(key);\n            if (skipProps.indexOf(key) > -1) {\n                skipProps.splice(idx_2, 1);\n            }\n        });\n    }\n    else {\n        skipProps.push('ranges');\n    }\n    var eventArgs = { skipProps: skipProps };\n    context.notify('getStringifyObject', eventArgs);\n    return eventArgs.model;\n}\n/**\n * Returns the row indexes and column indexes of the charts in the active sheet\n *\n * @param {Spreadsheet} context - Specifies the Spreadsheet instance.\n * @returns { {chart: ChartModel, chartRowIdx: number, chartColIdx: number}[] } - Returns the row indexes and column indexes of the charts in the active sheet\n * @hidden\n */\nfunction getChartsIndexes(context) {\n    var chart;\n    var chartIndexes = [];\n    var sheetName = context.getActiveSheet().name;\n    for (var i = 0, len = context.chartColl.length; i < len; i++) {\n        chart = context.chartColl[i];\n        if (sheetName === (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheetNameFromAddress)(chart.range)) {\n            var prevTop = { clientY: chart.top, isImage: true };\n            var prevLeft = { clientX: chart.left, isImage: true };\n            context.notify(_event__WEBPACK_IMPORTED_MODULE_4__.getRowIdxFromClientY, prevTop);\n            context.notify(_event__WEBPACK_IMPORTED_MODULE_4__.getColIdxFromClientX, prevLeft);\n            chartIndexes.push({ chart: chart, chartRowIdx: prevTop.clientY, chartColIdx: prevLeft.clientX });\n        }\n    }\n    return chartIndexes;\n}\n/**\n * Checks if the given range string represents a valid column range.\n *\n * @param {string} range - The range string to validate.\n * @returns {boolean} - Returns `true` if the range is a valid column range, otherwise `false`.\n * @hidden\n */\nfunction isColumnRange(range) {\n    return /^[A-Za-z]+:[A-Za-z]+$/.test(range);\n}\n/**\n * Checks if the given range string represents a valid row range.\n *\n * @param {string} range - The range string to validate.\n * @returns {boolean} - Returns `true` if the range is a valid row range, otherwise `false`.\n * @hidden\n */\nfunction isRowRange(range) {\n    return /^[0-9]+:[0-9]+$/.test(range);\n}\n/**\n * Sets the standard height for a specified sheet in a spreadsheet.\n *\n * @param {Spreadsheet} context - The spreadsheet instance.\n * @param {number} sheetIndex - The index of the sheet to set the standard height.\n * @param {number} standardHeight - The standard height to set for the sheet.\n * @returns {void}\n * @hidden\n */\nfunction setStandardHeight(context, sheetIndex, standardHeight) {\n    var sheet = context.sheets[sheetIndex];\n    if (sheet) {\n        sheet.standardHeight = standardHeight;\n        context.dataBind();\n    }\n}\n/**\n * Retrieves the standard height of a specific sheet in the spreadsheet.\n *\n * @param {Spreadsheet} context - The spreadsheet instance.\n * @param {number} sheetIndex - The index of the sheet to retrieve the standard height.\n * @returns {number} - The standard height of the specified sheet.\n * @hidden\n */\nfunction getStandardHeight(context, sheetIndex) {\n    return context.sheets[sheetIndex].standardHeight;\n}\n/**\n * Removes the specified elements from the DOM.\n *\n * @param {HTMLElement[]} elements - An array of HTML elements that need to be removed from the DOM.\n * @returns {void}\n * @hidden\n */\nfunction removeElements(elements) {\n    elements.forEach(function (element) {\n        if (element && element.parentNode) {\n            element.parentNode.removeChild(element);\n        }\n    });\n}\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/common/util.js?");

/***/ })

}]);