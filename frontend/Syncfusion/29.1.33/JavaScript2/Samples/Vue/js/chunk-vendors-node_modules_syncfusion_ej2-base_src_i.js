"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-base_src_i"],{

/***/ "./node_modules/@syncfusion/ej2-base/src/intl/parser-base.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-base/src/intl/parser-base.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ParserBase: () => (/* binding */ ParserBase),\n/* harmony export */   getBlazorCurrencySymbol: () => (/* binding */ getBlazorCurrencySymbol)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@syncfusion/ej2-base/src/util.js\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Parser\n */\nvar defaultNumberingSystem = {\n    'latn': {\n        '_digits': '0123456789',\n        '_type': 'numeric'\n    }\n};\n\nvar defaultNumberSymbols = {\n    'decimal': '.',\n    'group': ',',\n    'percentSign': '%',\n    'plusSign': '+',\n    'minusSign': '-',\n    'infinity': '∞',\n    'nan': 'NaN',\n    'exponential': 'E'\n};\nvar latnNumberSystem = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n/**\n * Interface for parser base\n *\n * @private\n */\nvar ParserBase = /** @class */ (function () {\n    function ParserBase() {\n    }\n    /**\n     * Returns the cldr object for the culture specifies\n     *\n     * @param {Object} obj - Specifies the object from which culture object to be acquired.\n     * @param {string} cName - Specifies the culture name.\n     * @returns {Object} ?\n     */\n    ParserBase.getMainObject = function (obj, cName) {\n        var value = (0,_util__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() ? cName : 'main.' + cName;\n        return (0,_util__WEBPACK_IMPORTED_MODULE_0__.getValue)(value, obj);\n    };\n    /**\n     * Returns the numbering system object from given cldr data.\n     *\n     * @param {Object} obj - Specifies the object from which number system is acquired.\n     * @returns {Object} ?\n     */\n    ParserBase.getNumberingSystem = function (obj) {\n        return (0,_util__WEBPACK_IMPORTED_MODULE_0__.getValue)('supplemental.numberingSystems', obj) || this.numberingSystems;\n    };\n    /**\n     * Returns the reverse of given object keys or keys specified.\n     *\n     * @param {Object} prop - Specifies the object to be reversed.\n     * @param {number[]} keys - Optional parameter specifies the custom keyList for reversal.\n     * @returns {Object} ?\n     */\n    ParserBase.reverseObject = function (prop, keys) {\n        var propKeys = keys || Object.keys(prop);\n        var res = {};\n        for (var _i = 0, propKeys_1 = propKeys; _i < propKeys_1.length; _i++) {\n            var key = propKeys_1[_i];\n            if (!Object.prototype.hasOwnProperty.call(res, prop[\"\" + key])) {\n                res[prop[\"\" + key]] = key;\n            }\n        }\n        return res;\n    };\n    /**\n     * Returns the symbol regex by skipping the escape sequence.\n     *\n     * @param {string[]} props - Specifies the array values to be skipped.\n     * @returns {RegExp} ?\n     */\n    ParserBase.getSymbolRegex = function (props) {\n        var regexStr = props.map(function (str) {\n            return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n        }).join('|');\n        var regExp = RegExp;\n        return new regExp(regexStr, 'g');\n    };\n    /**\n     *\n     * @param {Object} prop ?\n     * @returns {Object} ?\n     */\n    ParserBase.getSymbolMatch = function (prop) {\n        var matchKeys = Object.keys(defaultNumberSymbols);\n        var ret = {};\n        for (var _i = 0, matchKeys_1 = matchKeys; _i < matchKeys_1.length; _i++) {\n            var key = matchKeys_1[_i];\n            ret[prop[\"\" + key]] = defaultNumberSymbols[\"\" + key];\n        }\n        return ret;\n    };\n    /**\n     * Returns regex string for provided value\n     *\n     * @param {string} val ?\n     * @returns {string} ?\n     */\n    ParserBase.constructRegex = function (val) {\n        var len = val.length;\n        var ret = '';\n        for (var i = 0; i < len; i++) {\n            if (i !== len - 1) {\n                ret += val[parseInt(i.toString(), 10)] + '|';\n            }\n            else {\n                ret += val[parseInt(i.toString(), 10)];\n            }\n        }\n        return ret;\n    };\n    /**\n     * Returns the replaced value of matching regex and obj mapper.\n     *\n     * @param {string} value - Specifies the  values to be replaced.\n     * @param {RegExp} regex - Specifies the  regex to search.\n     * @param {Object} obj - Specifies the  object matcher to be replace value parts.\n     * @returns {string} ?\n     */\n    ParserBase.convertValueParts = function (value, regex, obj) {\n        return value.replace(regex, function (str) {\n            return obj[\"\" + str];\n        });\n    };\n    /**\n     * Returns default numbering system object for formatting from cldr data\n     *\n     * @param {Object} obj ?\n     * @returns {NumericObject} ?\n     */\n    ParserBase.getDefaultNumberingSystem = function (obj) {\n        var ret = {};\n        ret.obj = (0,_util__WEBPACK_IMPORTED_MODULE_0__.getValue)('numbers', obj);\n        ret.nSystem = (0,_util__WEBPACK_IMPORTED_MODULE_0__.getValue)('defaultNumberingSystem', ret.obj);\n        return ret;\n    };\n    /**\n     * Returns the replaced value of matching regex and obj mapper.\n     *\n     * @param {Object} curObj ?\n     * @param {Object} numberSystem ?\n     * @param {boolean} needSymbols ?\n     * @param {boolean} blazorMode ?\n     * @returns {Object} ?\n     */\n    ParserBase.getCurrentNumericOptions = function (curObj, numberSystem, needSymbols, blazorMode) {\n        var ret = {};\n        var cur = this.getDefaultNumberingSystem(curObj);\n        if (!(0,_util__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(cur.nSystem) || blazorMode) {\n            var digits = blazorMode ? (0,_util__WEBPACK_IMPORTED_MODULE_0__.getValue)('obj.mapperDigits', cur) : (0,_util__WEBPACK_IMPORTED_MODULE_0__.getValue)(cur.nSystem + '._digits', numberSystem);\n            if (!(0,_util__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(digits)) {\n                ret.numericPair = this.reverseObject(digits, latnNumberSystem);\n                var regExp = RegExp;\n                ret.numberParseRegex = new regExp(this.constructRegex(digits), 'g');\n                ret.numericRegex = '[' + digits[0] + '-' + digits[9] + ']';\n                if (needSymbols) {\n                    ret.numericRegex = digits[0] + '-' + digits[9];\n                    ret.symbolNumberSystem = (0,_util__WEBPACK_IMPORTED_MODULE_0__.getValue)(blazorMode ? 'numberSymbols' : 'symbols-numberSystem-' + cur.nSystem, cur.obj);\n                    ret.symbolMatch = this.getSymbolMatch(ret.symbolNumberSystem);\n                    ret.numberSystem = cur.nSystem;\n                }\n            }\n        }\n        return ret;\n    };\n    /**\n     * Returns number mapper object for the provided cldr data\n     *\n     * @param {Object} curObj ?\n     * @param {Object} numberSystem ?\n     * @param {boolean} isNumber ?\n     * @returns {NumberMapper} ?\n     */\n    ParserBase.getNumberMapper = function (curObj, numberSystem, isNumber) {\n        var ret = { mapper: {} };\n        var cur = this.getDefaultNumberingSystem(curObj);\n        if (!(0,_util__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(cur.nSystem)) {\n            ret.numberSystem = cur.nSystem;\n            ret.numberSymbols = (0,_util__WEBPACK_IMPORTED_MODULE_0__.getValue)('symbols-numberSystem-' + cur.nSystem, cur.obj);\n            ret.timeSeparator = (0,_util__WEBPACK_IMPORTED_MODULE_0__.getValue)('timeSeparator', ret.numberSymbols);\n            var digits = (0,_util__WEBPACK_IMPORTED_MODULE_0__.getValue)(cur.nSystem + '._digits', numberSystem);\n            if (!(0,_util__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(digits)) {\n                for (var _i = 0, latnNumberSystem_1 = latnNumberSystem; _i < latnNumberSystem_1.length; _i++) {\n                    var i = latnNumberSystem_1[_i];\n                    ret.mapper[parseInt(i.toString(), 10)] = digits[parseInt(i.toString(), 10)];\n                }\n            }\n        }\n        return ret;\n    };\n    ParserBase.nPair = 'numericPair';\n    ParserBase.nRegex = 'numericRegex';\n    ParserBase.numberingSystems = defaultNumberingSystem;\n    return ParserBase;\n}());\n\n/**\n * @private\n */\nvar blazorCurrencyData = {\n    'DJF': 'Fdj',\n    'ERN': 'Nfk',\n    'ETB': 'Br',\n    'NAD': '$',\n    'ZAR': 'R',\n    'XAF': 'FCFA',\n    'GHS': 'GH₵',\n    'XDR': 'XDR',\n    'AED': 'د.إ.',\n    'BHD': 'د.ب.',\n    'DZD': 'د.ج.',\n    'EGP': 'ج.م.',\n    'ILS': '₪',\n    'IQD': 'د.ع.',\n    'JOD': 'د.ا.',\n    'KMF': 'CF',\n    'KWD': 'د.ك.',\n    'LBP': 'ل.ل.',\n    'LYD': 'د.ل.',\n    'MAD': 'د.م.',\n    'MRU': 'أ.م.',\n    'OMR': 'ر.ع.',\n    'QAR': 'ر.ق.',\n    'SAR': 'ر.س.',\n    'SDG': 'ج.س.',\n    'SOS': 'S',\n    'SSP': '£',\n    'SYP': 'ل.س.',\n    'TND': 'د.ت.',\n    'YER': 'ر.ي.',\n    'CLP': '$',\n    'INR': '₹',\n    'TZS': 'TSh',\n    'EUR': '€',\n    'AZN': '₼',\n    'RUB': '₽',\n    'BYN': 'Br',\n    'ZMW': 'K',\n    'BGN': 'лв.',\n    'NGN': '₦',\n    'XOF': 'CFA',\n    'BDT': '৳',\n    'CNY': '¥',\n    'BAM': 'КМ',\n    'UGX': 'USh',\n    'USD': '$',\n    'CZK': 'Kč',\n    'GBP': '£',\n    'DKK': 'kr.',\n    'KES': 'Ksh',\n    'CHF': 'CHF',\n    'MVR': 'ރ.',\n    'BTN': 'Nu.',\n    'XCD': 'EC$',\n    'AUD': '$',\n    'BBD': '$',\n    'BIF': 'FBu',\n    'BMD': '$',\n    'BSD': '$',\n    'BWP': 'P',\n    'BZD': '$',\n    'CAD': '$',\n    'NZD': '$',\n    'FJD': '$',\n    'FKP': '£',\n    'GIP': '£',\n    'GMD': 'D',\n    'GYD': '$',\n    'HKD': '$',\n    'IDR': 'Rp',\n    'JMD': '$',\n    'KYD': '$',\n    'LRD': '$',\n    'MGA': 'Ar',\n    'MOP': 'MOP$',\n    'MUR': 'Rs',\n    'MWK': 'MK',\n    'MYR': 'RM',\n    'PGK': 'K',\n    'PHP': '₱',\n    'PKR': 'Rs',\n    'RWF': 'RF',\n    'SBD': '$',\n    'SCR': 'SR',\n    'SEK': 'kr',\n    'SGD': '$',\n    'SHP': '£',\n    'SLL': 'Le',\n    'ANG': 'NAf.',\n    'SZL': 'E',\n    'TOP': 'T$',\n    'TTD': '$',\n    'VUV': 'VT',\n    'WST': 'WS$',\n    'ARS': '$',\n    'BOB': 'Bs',\n    'BRL': 'R$',\n    'COP': '$',\n    'CRC': '₡',\n    'CUP': '$',\n    'DOP': '$',\n    'GTQ': 'Q',\n    'HNL': 'L',\n    'MXN': '$',\n    'NIO': 'C$',\n    'PAB': 'B/.',\n    'PEN': 'S/',\n    'PYG': '₲',\n    'UYU': '$',\n    'VES': 'Bs.S',\n    'IRR': 'ريال',\n    'GNF': 'FG',\n    'CDF': 'FC',\n    'HTG': 'G',\n    'XPF': 'FCFP',\n    'HRK': 'kn',\n    'HUF': 'Ft',\n    'AMD': '֏',\n    'ISK': 'kr',\n    'JPY': '¥',\n    'GEL': '₾',\n    'CVE': '​',\n    'KZT': '₸',\n    'KHR': '៛',\n    'KPW': '₩',\n    'KRW': '₩',\n    'KGS': 'сом',\n    'AOA': 'Kz',\n    'LAK': '₭',\n    'MZN': 'MTn',\n    'MKD': 'ден',\n    'MNT': '₮',\n    'BND': '$',\n    'MMK': 'K',\n    'NOK': 'kr',\n    'NPR': 'रु',\n    'AWG': 'Afl.',\n    'SRD': '$',\n    'PLN': 'zł',\n    'AFN': '؋',\n    'STN': 'Db',\n    'MDL': 'L',\n    'RON': 'lei',\n    'UAH': '₴',\n    'LKR': 'රු.',\n    'ALL': 'Lekë',\n    'RSD': 'дин.',\n    'TJS': 'смн',\n    'THB': '฿',\n    'TMT': 'm.',\n    'TRY': '₺',\n    'UZS': 'сўм',\n    'VND': '₫',\n    'TWD': 'NT$'\n};\n/**\n *\n * @param {string} currencyCode ?\n * @returns {string} ?\n */\nfunction getBlazorCurrencySymbol(currencyCode) {\n    return (0,_util__WEBPACK_IMPORTED_MODULE_0__.getValue)(currencyCode || '', blazorCurrencyData);\n}\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-base/src/intl/parser-base.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-base/src/keyboard.js":
/*!***********************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-base/src/keyboard.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyboardEvents: () => (/* binding */ KeyboardEvents)\n/* harmony export */ });\n/* harmony import */ var _notify_property_change__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./notify-property-change */ \"./node_modules/@syncfusion/ej2-base/src/notify-property-change.js\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ \"./node_modules/@syncfusion/ej2-base/src/base.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\nvar keyCode = {\n    'backspace': 8,\n    'tab': 9,\n    'enter': 13,\n    'shift': 16,\n    'control': 17,\n    'alt': 18,\n    'pause': 19,\n    'capslock': 20,\n    'space': 32,\n    'escape': 27,\n    'pageup': 33,\n    'pagedown': 34,\n    'end': 35,\n    'home': 36,\n    'leftarrow': 37,\n    'uparrow': 38,\n    'rightarrow': 39,\n    'downarrow': 40,\n    'insert': 45,\n    'delete': 46,\n    'f1': 112,\n    'f2': 113,\n    'f3': 114,\n    'f4': 115,\n    'f5': 116,\n    'f6': 117,\n    'f7': 118,\n    'f8': 119,\n    'f9': 120,\n    'f10': 121,\n    'f11': 122,\n    'f12': 123,\n    'semicolon': 186,\n    'plus': 187,\n    'comma': 188,\n    'minus': 189,\n    'dot': 190,\n    'forwardslash': 191,\n    'graveaccent': 192,\n    'openbracket': 219,\n    'backslash': 220,\n    'closebracket': 221,\n    'singlequote': 222\n};\n/**\n * KeyboardEvents class enables you to bind key action desired key combinations for ex., Ctrl+A, Delete, Alt+Space etc.\n * ```html\n * <div id='testEle'>  </div>;\n * <script>\n *   let node: HTMLElement = document.querySelector('#testEle');\n *   let kbInstance = new KeyboardEvents({\n *       element: node,\n *       keyConfigs:{ selectAll : 'ctrl+a' },\n *       keyAction: function (e:KeyboardEvent, action:string) {\n *           // handler function code\n *       }\n *   });\n * </script>\n * ```\n */\nvar KeyboardEvents = /** @class */ (function (_super) {\n    __extends(KeyboardEvents, _super);\n    /**\n     * Initializes the KeyboardEvents\n     *\n     * @param {HTMLElement} element ?\n     * @param {KeyboardEventsModel} options ?\n     */\n    function KeyboardEvents(element, options) {\n        var _this = _super.call(this, options, element) || this;\n        /**\n         * To handle a key press event returns null\n         *\n         * @param {KeyboardEventArgs} e ?\n         * @returns {void} ?\n         */\n        _this.keyPressHandler = function (e) {\n            var isAltKey = e.altKey;\n            var isCtrlKey = e.ctrlKey;\n            var isShiftKey = e.shiftKey;\n            var curkeyCode = e.which;\n            var keys = Object.keys(_this.keyConfigs);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                var configCollection = _this.keyConfigs[\"\" + key].split(',');\n                for (var _a = 0, configCollection_1 = configCollection; _a < configCollection_1.length; _a++) {\n                    var rconfig = configCollection_1[_a];\n                    var rKeyObj = KeyboardEvents_1.getKeyConfigData(rconfig.trim());\n                    if (isAltKey === rKeyObj.altKey && isCtrlKey === rKeyObj.ctrlKey &&\n                        isShiftKey === rKeyObj.shiftKey && curkeyCode === rKeyObj.keyCode) {\n                        e.action = key;\n                        if (_this.keyAction) {\n                            _this.keyAction(e);\n                        }\n                    }\n                }\n            }\n        };\n        _this.bind();\n        return _this;\n    }\n    KeyboardEvents_1 = KeyboardEvents;\n    /**\n     * Unwire bound events and destroy the instance.\n     *\n     * @returns {void} ?\n     */\n    KeyboardEvents.prototype.destroy = function () {\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Function can be used to specify certain action if a property is changed\n     *\n     * @param {KeyboardEventsModel} newProp ?\n     * @param {KeyboardEventsModel} oldProp ?\n     * @returns {void} ?\n     * @private\n     */\n    KeyboardEvents.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // No code are needed\n    };\n    KeyboardEvents.prototype.bind = function () {\n        this.wireEvents();\n    };\n    /**\n     * To get the module name, returns 'keyboard'.\n     *\n     * @returns {string} ?\n     * @private\n     */\n    KeyboardEvents.prototype.getModuleName = function () {\n        return 'keyboard';\n    };\n    /**\n     * Wiring event handlers to events\n     *\n     * @returns {void} ?\n     * @private\n     */\n    KeyboardEvents.prototype.wireEvents = function () {\n        this.element.addEventListener(this.eventName, this.keyPressHandler);\n    };\n    /**\n     * Unwiring event handlers to events\n     *\n     * @returns {void} ?\n     * @private\n     */\n    KeyboardEvents.prototype.unwireEvents = function () {\n        this.element.removeEventListener(this.eventName, this.keyPressHandler);\n    };\n    /**\n     * To get the key configuration data\n     *\n     * @param {string} config - configuration data\n     * @returns {KeyData} ?\n     */\n    KeyboardEvents.getKeyConfigData = function (config) {\n        if (config in this.configCache) {\n            return this.configCache[\"\" + config];\n        }\n        var keys = config.toLowerCase().split('+');\n        var keyData = {\n            altKey: (keys.indexOf('alt') !== -1 ? true : false),\n            ctrlKey: (keys.indexOf('ctrl') !== -1 ? true : false),\n            shiftKey: (keys.indexOf('shift') !== -1 ? true : false),\n            keyCode: null\n        };\n        if (keys[keys.length - 1].length > 1 && !!Number(keys[keys.length - 1])) {\n            keyData.keyCode = Number(keys[keys.length - 1]);\n        }\n        else {\n            keyData.keyCode = KeyboardEvents_1.getKeyCode(keys[keys.length - 1]);\n        }\n        KeyboardEvents_1.configCache[\"\" + config] = keyData;\n        return keyData;\n    };\n    // Return the keycode value as string\n    KeyboardEvents.getKeyCode = function (keyVal) {\n        return keyCode[\"\" + keyVal] || keyVal.toUpperCase().charCodeAt(0);\n    };\n    var KeyboardEvents_1;\n    KeyboardEvents.configCache = {};\n    __decorate([\n        (0,_notify_property_change__WEBPACK_IMPORTED_MODULE_0__.Property)({})\n    ], KeyboardEvents.prototype, \"keyConfigs\", void 0);\n    __decorate([\n        (0,_notify_property_change__WEBPACK_IMPORTED_MODULE_0__.Property)('keyup')\n    ], KeyboardEvents.prototype, \"eventName\", void 0);\n    __decorate([\n        (0,_notify_property_change__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], KeyboardEvents.prototype, \"keyAction\", void 0);\n    KeyboardEvents = KeyboardEvents_1 = __decorate([\n        _notify_property_change__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], KeyboardEvents);\n    return KeyboardEvents;\n}(_base__WEBPACK_IMPORTED_MODULE_1__.Base));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-base/src/keyboard.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-base/src/l10n.js":
/*!*******************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-base/src/l10n.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   L10n: () => (/* binding */ L10n)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/@syncfusion/ej2-base/src/util.js\");\n/* harmony import */ var _internationalization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internationalization */ \"./node_modules/@syncfusion/ej2-base/src/internationalization.js\");\n\n\n/**\n * L10n modules provides localized text for different culture.\n * ```typescript\n * import {setCulture} from '@syncfusion/ts-base-library';\n * //load global locale object common for all components.\n * L10n.load({\n *    'fr-BE': {\n *       'button': {\n *            'check': 'vérifié'\n *        }\n *    }\n * });\n * //set globale default locale culture.\n * setCulture('fr-BE');\n * let instance: L10n = new L10n('button', {\n *    check: 'checked'\n * });\n * //Get locale text for current property.\n * instance.getConstant('check');\n * //Change locale culture in a component.\n * instance.setLocale('en-US');\n * ```\n */\nvar L10n = /** @class */ (function () {\n    /**\n     * Constructor\n     *\n     * @param {string} controlName ?\n     * @param {Object} localeStrings ?\n     * @param {string} locale ?\n     */\n    function L10n(controlName, localeStrings, locale) {\n        this.controlName = controlName;\n        this.localeStrings = localeStrings;\n        this.setLocale(locale || _internationalization__WEBPACK_IMPORTED_MODULE_1__.defaultCulture);\n    }\n    /**\n     * Sets the locale text\n     *\n     * @param {string} locale ?\n     * @returns {void} ?\n     */\n    L10n.prototype.setLocale = function (locale) {\n        var intLocale = this.intGetControlConstant(L10n.locale, locale);\n        this.currentLocale = intLocale || this.localeStrings;\n    };\n    /**\n     * Sets the global locale for all components.\n     *\n     * @param {Object} localeObject - specifies the localeObject to be set as global locale.\n     * @returns {void} ?\n     */\n    L10n.load = function (localeObject) {\n        this.locale = (0,_util__WEBPACK_IMPORTED_MODULE_0__.extend)(this.locale, localeObject, {}, true);\n    };\n    /**\n     * Returns current locale text for the property based on the culture name and control name.\n     *\n     * @param {string} prop - specifies the property for which localize text to be returned.\n     * @returns {string} ?\n     */\n    L10n.prototype.getConstant = function (prop) {\n        // Removed conditional operator because this method does not return correct value when passing 0 as value in localization\n        if (!(0,_util__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentLocale[\"\" + prop])) {\n            return this.currentLocale[\"\" + prop];\n        }\n        else {\n            return this.localeStrings[\"\" + prop] || '';\n        }\n    };\n    /**\n     * Returns the control constant object for current object and the locale specified.\n     *\n     * @param {Object} curObject ?\n     * @param {string} locale ?\n     * @returns {Object} ?\n     */\n    L10n.prototype.intGetControlConstant = function (curObject, locale) {\n        if ((curObject)[\"\" + locale]) {\n            return (curObject)[\"\" + locale][this.controlName];\n        }\n        return null;\n    };\n    L10n.locale = {};\n    return L10n;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-base/src/l10n.js?");

/***/ })

}]);