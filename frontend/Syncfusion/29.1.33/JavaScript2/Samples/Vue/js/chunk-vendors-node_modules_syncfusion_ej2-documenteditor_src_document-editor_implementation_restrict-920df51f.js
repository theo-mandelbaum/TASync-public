"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_restrict-920df51f"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/restrict-editing/restrict-editing-pane.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/restrict-editing/restrict-editing-pane.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RestrictEditing: () => (/* binding */ RestrictEditing)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\");\n/* harmony import */ var _add_user_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-user-dialog */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/restrict-editing/add-user-dialog.js\");\n/* harmony import */ var _enforce_protection_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enforce-protection-dialog */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/restrict-editing/enforce-protection-dialog.js\");\n/* harmony import */ var _editor_editor_helper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../editor/editor-helper */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor/editor-helper.js\");\n/* harmony import */ var _syncfusion_ej2_lists__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-lists */ \"./node_modules/@syncfusion/ej2-lists/index.js\");\n/* harmony import */ var _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\");\n\n\n\n\n\n\n\n/**\n * @private\n * @param {any} args - Specifies the args\n * @returns {void}\n */\nvar RestrictEditing = /** @class */ (function () {\n    function RestrictEditing(documentHelper) {\n        var _this = this;\n        this.addRemove = true;\n        this.protectionType = 'ReadOnly';\n        this.previousProtectionType = 'Read only';\n        this.isShowRestrictPane = false;\n        this.isAddUser = false;\n        this.usersCollection = ['Everyone'];\n        /**\n         * @returns {void}\n         */\n        this.closePane = function () {\n            _this.isShowRestrictPane = false;\n            _this.restrictPane.style.display = 'none';\n            _this.documentHelper.owner.showHideRulers();\n            _this.documentHelper.owner.triggerResize();\n        };\n        this.onYesButtonClick = function () {\n            _this.viewer.owner.editorModule.removeAllEditRestrictions();\n            _this.documentHelper.dialog.hide();\n        };\n        this.onCancelButtonClick = function (args) {\n            _this.protectionTypeDrop.value = _this.previousProtectionType;\n            _this.documentHelper.dialog.hide();\n        };\n        this.onNoButtonClick = function () {\n            _this.documentHelper.dialog.hide();\n        };\n        /**\n         * @returns {void}\n         */\n        this.showAllRegion = function () {\n            _this.documentHelper.selection.showAllEditingRegion();\n        };\n        this.documentHelper = documentHelper;\n        this.addUserDialog = new _add_user_dialog__WEBPACK_IMPORTED_MODULE_2__.AddUserDialog(documentHelper);\n        this.enforceProtectionDialog = new _enforce_protection_dialog__WEBPACK_IMPORTED_MODULE_3__.EnforceProtectionDialog(documentHelper, this);\n        this.unProtectDialog = new _enforce_protection_dialog__WEBPACK_IMPORTED_MODULE_3__.UnProtectDocumentDialog(documentHelper, this);\n        this.base64 = new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_4__.Base64();\n    }\n    Object.defineProperty(RestrictEditing.prototype, \"viewer\", {\n        get: function () {\n            return this.documentHelper.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RestrictEditing.prototype.showHideRestrictPane = function (isShow) {\n        if (!this.restrictPane) {\n            this.localObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', this.viewer.owner.defaultLocale);\n            this.localObj.setLocale(this.viewer.owner.locale);\n            this.initPane(this.localObj, this.documentHelper.owner.enableRtl);\n        }\n        if (isShow) {\n            this.restrictPane.style.display = 'block';\n            this.isShowRestrictPane = true;\n            this.documentHelper.selection.isHighlightEditRegion = true;\n            this.wireEvents();\n            this.documentHelper.updateViewerSize();\n            this.loadPaneValue();\n            this.addUserCollection();\n        }\n        else {\n            this.closePane();\n            if (this.documentHelper.owner.enableAutoFocus) {\n                this.documentHelper.updateFocus();\n            }\n        }\n        this.documentHelper.owner.triggerResize();\n    };\n    RestrictEditing.prototype.initPane = function (localValue, isRtl) {\n        this.restrictPane = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-restrict-pane' });\n        if (isRtl) {\n            this.restrictPane.classList.add('e-rtl');\n        }\n        var headerWholeDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-rp-whole-header' });\n        var headerDiv1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            innerHTML: localValue.getConstant('Restrict Editing'), className: 'e-de-rp-header'\n        });\n        this.closeButton = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', {\n            className: 'e-de-rp-close-icon e-de-close-icon e-btn e-flat e-icon-btn',\n            attrs: { type: 'button' }\n        });\n        this.closeButton.setAttribute('aria-label', this.localObj.getConstant('Close'));\n        headerWholeDiv.appendChild(this.closeButton);\n        headerWholeDiv.appendChild(headerDiv1);\n        var closeSpan = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', { className: 'e-de-op-close-icon e-de-close-icon e-btn-icon e-icons' });\n        this.closeButton.appendChild(closeSpan);\n        this.restrictPane.appendChild(headerWholeDiv);\n        this.initRestrictEditingPane(localValue);\n        var cssText = 'display:inline-flex;';\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.updateCSSText)(this.documentHelper.optionsPaneContainer, cssText);\n        this.documentHelper.optionsPaneContainer.insertBefore(this.restrictPane, this.documentHelper.viewerContainer);\n    };\n    /* eslint-disable  */\n    RestrictEditing.prototype.initRestrictEditingPane = function (localObj) {\n        this.restrictPaneWholeDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n        var formatWholeDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-rp-sub-div' });\n        var formatDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            innerHTML: localObj.getConstant('Formatting restrictions'),\n            className: 'e-de-rp-format'\n        });\n        formatWholeDiv.appendChild(formatDiv);\n        var allowFormatting = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', {\n            attrs: { type: 'checkbox' },\n        });\n        formatWholeDiv.appendChild(allowFormatting);\n        this.allowFormat = this.createCheckBox(localObj.getConstant('Allow formatting'), allowFormatting);\n        this.restrictPaneWholeDiv.appendChild(formatWholeDiv);\n        // Editing restrictions\n        var editRestrictWholeDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-rp-sub-div' });\n        // let editRestrict: HTMLElement = createElement('div', {\n        //     innerHTML: localObj.getConstant('Editing restrictions'),\n        //     className: 'e-de-rp-format'\n        // });\n        // editRestrictWholeDiv.appendChild(editRestrict);\n        var readOnly = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', {\n            attrs: { type: 'checkbox' },\n        });\n        var protectionTypeInput = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', {\n            className: 'e-prop-font-style'\n        });\n        editRestrictWholeDiv.appendChild(protectionTypeInput);\n        var protectionTypeValue = [\n            { Value: 'Read only', Name: localObj.getConstant('Read only') },\n            { Value: 'Filling in forms', Name: localObj.getConstant('Filling in forms') },\n            { Value: 'Comments', Name: localObj.getConstant('Comments') },\n            { Value: 'Tracked changes', Name: localObj.getConstant('Tracked changes') }\n        ];\n        this.protectionTypeDrop = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_6__.DropDownList({\n            dataSource: protectionTypeValue,\n            cssClass: 'e-de-prop-dropdown',\n            floatLabelType: 'Always',\n            placeholder: localObj.getConstant('Editing restrictions'),\n            fields: { text: 'Name', value: 'Value' },\n            enableRtl: this.documentHelper.owner.enableRtl\n        });\n        this.protectionTypeDrop.value = 'Read only';\n        this.protectionTypeDrop.appendTo(protectionTypeInput);\n        // let allowPrint: HTMLInputElement = createElement('input', {\n        //     attrs: { type: 'checkbox' },\n        //     id: this.viewer.owner.containerId + '_allowPrint'\n        // }) as HTMLInputElement;\n        // editRestrictWholeDiv.appendChild(allowPrint);\n        // this.allowPrint = this.createCheckBox('Allow Printing', allowPrint);\n        // let allowCopy: HTMLInputElement = createElement('input', {\n        //     attrs: { type: 'checkbox' },\n        //     id: this.viewer.owner.containerId + '_allowCopy'\n        // }) as HTMLInputElement;\n        // editRestrictWholeDiv.appendChild(allowCopy);\n        // this.allowCopy = this.createCheckBox('Allow Copy', allowCopy);\n        this.restrictPaneWholeDiv.appendChild(editRestrictWholeDiv);\n        // User Permissions\n        this.userWholeDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-rp-sub-div' });\n        var userDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            innerHTML: localObj.getConstant('Exceptions Optional'),\n            className: 'e-de-rp-format'\n        });\n        this.userWholeDiv.appendChild(userDiv);\n        var subContentDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            innerHTML: localObj.getConstant('Select Part Of Document And User'),\n            className: 'e-de-rp-sub-content-div'\n        });\n        this.userWholeDiv.appendChild(subContentDiv);\n        var emptyuserDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-rp-user' });\n        this.userWholeDiv.appendChild(emptyuserDiv);\n        this.addedUser = new _syncfusion_ej2_lists__WEBPACK_IMPORTED_MODULE_5__.ListView({\n            cssClass: 'e-de-user-listView',\n            dataSource: [{ text: 'Everyone' }],\n            showCheckBox: true,\n            select: this.selectHandler.bind(this),\n            enableRtl: this.documentHelper.owner.enableRtl\n        });\n        this.addedUser.appendTo(emptyuserDiv);\n        this.addUser = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', {\n            className: 'e-btn e-primary e-flat e-de-rp-mu-btn',\n            innerHTML: localObj.getConstant('More users') + '...',\n            //styles: 'margin-top: 3px',\n            attrs: { type: 'button' }\n        });\n        this.addUser.setAttribute('aria-label', localObj.getConstant('More users'));\n        this.userWholeDiv.appendChild(this.addUser);\n        this.restrictPaneWholeDiv.appendChild(this.userWholeDiv);\n        var lastDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-rp-enforce' });\n        this.restrictPaneWholeDiv.appendChild(lastDiv);\n        this.enforceProtection = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', {\n            innerHTML: localObj.getConstant('Enforcing Protection'),\n            className: 'e-btn e-de-rp-btn-enforce',\n            attrs: { type: 'button' }\n        });\n        this.enforceProtection.setAttribute('aria-label', localObj.getConstant('Enforcing Protection'));\n        lastDiv.appendChild(this.enforceProtection);\n        this.restrictPane.appendChild(this.restrictPaneWholeDiv);\n        this.stopProtectionDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { styles: 'display:none' });\n        var headerDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { innerHTML: localObj.getConstant('Your permissions'), className: 'e-de-rp-stop-div1' });\n        this.stopProtectionDiv.appendChild(headerDiv);\n        var contentWholeDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-rp-stop-div2' });\n        this.stopProtectionDiv.appendChild(contentWholeDiv);\n        var content1 = localObj.getConstant('Protected Document');\n        this.contentDiv1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { innerHTML: content1 });\n        contentWholeDiv.appendChild(this.contentDiv1);\n        var content2 = localObj.getConstant('ReadOnlyProtection');\n        this.contentDiv2 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { innerHTML: content2 });\n        contentWholeDiv.appendChild(this.contentDiv2);\n        this.stopReadOnlyOptions = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n        this.stopProtectionDiv.appendChild(this.stopReadOnlyOptions);\n        var navigateNext = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-rp-enforce-nav' });\n        var navigateNextButton = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', {\n            innerHTML: localObj.getConstant('Find Next Region I Can Edit'), className: 'e-btn e-de-rp-nav-btn',\n            attrs: { type: 'button' }\n        });\n        navigateNext.appendChild(navigateNextButton);\n        navigateNextButton.addEventListener('click', this.navigateNextRegion.bind(this));\n        this.stopReadOnlyOptions.appendChild(navigateNext);\n        var showAllRegion = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-rp-enforce-nav' });\n        var showAllRegionButton = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', {\n            innerHTML: localObj.getConstant('Show All Regions I Can Edit'), className: 'e-btn e-de-rp-nav-btn',\n            attrs: { type: 'button' }\n        });\n        showAllRegion.appendChild(showAllRegionButton);\n        showAllRegionButton.addEventListener('click', this.showAllRegion);\n        this.stopReadOnlyOptions.appendChild(showAllRegion);\n        var highlightRegion = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-rp-nav-lbl e-de-rp-more-less' });\n        var highlightRegionInput = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', { attrs: { type: 'checkbox' }, className: 'e-btn e-de-rp-nav-btn' });\n        highlightRegion.appendChild(highlightRegionInput);\n        this.stopReadOnlyOptions.appendChild(highlightRegion);\n        this.highlightCheckBox = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.CheckBox({ label: localObj.getConstant('Highlight the regions I can edit'), change: this.changeHighlightOptions.bind(this), enableRtl: this.documentHelper.owner.enableRtl }, highlightRegionInput);\n        var lastButtonDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-rp-enforce' });\n        this.stopProtection = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', {\n            innerHTML: localObj.getConstant('Stop Protection'),\n            className: 'e-btn e-de-rp-btn-stop-enforce',\n            attrs: { type: 'button' }\n        });\n        lastButtonDiv.appendChild(this.stopProtection);\n        this.stopProtectionDiv.appendChild(lastButtonDiv);\n        this.restrictPane.appendChild(this.stopProtectionDiv);\n    };\n    RestrictEditing.prototype.showStopProtectionPane = function (show) {\n        if (show) {\n            this.stopProtectionDiv.style.display = 'block';\n            this.restrictPaneWholeDiv.style.display = 'none';\n        }\n        else {\n            this.stopProtectionDiv.style.display = 'none';\n            this.restrictPaneWholeDiv.style.display = 'block';\n        }\n        switch (this.documentHelper.protectionType) {\n            case 'ReadOnly':\n                this.stopReadOnlyOptions.style.display = 'block';\n                break;\n            case 'CommentsOnly':\n                this.stopReadOnlyOptions.style.display = 'block';\n                break;\n            default:\n                this.stopReadOnlyOptions.style.display = 'none';\n                break;\n        }\n        this.documentHelper.owner.showHideRulers();\n        this.documentHelper.owner.triggerResize();\n    };\n    RestrictEditing.prototype.wireEvents = function () {\n        this.addUser.addEventListener('click', this.addUserDialog.show);\n        this.enforceProtection.addEventListener('click', this.protectDocument.bind(this));\n        this.stopProtection.addEventListener('click', this.stopProtectionTriggered.bind(this));\n        this.closeButton.addEventListener('click', this.closePane);\n        this.allowFormat.addEventListener('change', this.enableFormatting.bind(this));\n        this.protectionTypeDrop.addEventListener('change', this.protectionTypeDropChanges.bind(this));\n        this.highlightCheckBox.addEventListener('change', this.highlightClicked.bind(this));\n    };\n    RestrictEditing.prototype.changeHighlightOptions = function () {\n        var _this = this;\n        this.documentHelper.owner.documentEditorSettings.highlightEditableRanges = this.highlightCheckBox.checked;\n        setTimeout(function () {\n            if (_this.documentHelper) {\n                _this.documentHelper.owner.focusIn();\n            }\n        }, 10);\n    };\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    RestrictEditing.prototype.enableFormatting = function (args) {\n        this.documentHelper.restrictFormatting = !args.checked;\n    };\n    RestrictEditing.prototype.stopProtectionTriggered = function (args) {\n        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentHelper.saltValue) || this.documentHelper.saltValue === '')\n            && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentHelper.hashValue) || this.documentHelper.hashValue === '')) {\n            this.documentHelper.owner.editorModule.unProtectDocument();\n            return;\n        }\n        this.unProtectDialog.show();\n    };\n    RestrictEditing.prototype.protectionTypeDropChanges = function (args) {\n        switch (args.value) {\n            case 'Read only':\n                this.protectionType = 'ReadOnly';\n                this.userWholeDiv.style.display = 'block';\n                //this.enforceProtection.style.marginLeft = '0px';\n                this.contentDiv1.innerHTML = this.localObj.getConstant('Protected Document');\n                this.contentDiv2.innerHTML = this.localObj.getConstant('ReadOnlyProtection');\n                //this.contentDiv2.style.display = 'block';     \n                this.previousProtectionType = args.previousItemData.Value;\n                break;\n            case 'Filling in forms':\n                this.protectionType = 'FormFieldsOnly';\n                this.userWholeDiv.style.display = 'none';\n                //this.enforceProtection.style.marginLeft = '8px';\n                this.contentDiv1.innerHTML = this.localObj.getConstant('Protected Document');\n                this.contentDiv2.innerHTML = this.localObj.getConstant('FormFieldsOnly');\n                //this.contentDiv2.style.display = 'block';\n                this.previousProtectionType = args.previousItemData.Value;\n                this.showRemovedIgnoreDialog();\n                break;\n            case 'Comments':\n                this.protectionType = 'CommentsOnly';\n                this.userWholeDiv.style.display = 'block';\n                //this.enforceProtection.style.marginLeft = '0px';\n                this.contentDiv1.innerHTML = this.localObj.getConstant('Protected Document');\n                this.contentDiv2.innerHTML = this.localObj.getConstant('CommentsOnly');\n                //this.contentDiv2.style.display = 'none';\n                this.previousProtectionType = args.previousItemData.Value;\n                break;\n            case 'Tracked changes':\n                this.protectionType = 'RevisionsOnly';\n                this.userWholeDiv.style.display = 'none';\n                this.contentDiv1.innerHTML = this.localObj.getConstant('Protected Document');\n                this.contentDiv2.innerHTML = this.localObj.getConstant('TrackChangesOnly');\n                this.previousProtectionType = args.previousItemData.Value;\n                this.showRemovedIgnoreDialog();\n                break;\n            default:\n                this.protectionType = 'NoProtection';\n                this.addedUser.uncheckAllItems();\n                this.viewer.owner.editorModule.removeAllEditRestrictions();\n                break;\n        }\n    };\n    RestrictEditing.prototype.showRemovedIgnoreDialog = function () {\n        if (this.documentHelper.selection && this.documentHelper.editRanges.length > 0) {\n            this.documentHelper.dialog.height = ' Auto';\n            this.documentHelper.dialog.width = ' 600px';\n            this.documentHelper.dialog.header = this.localObj.getConstant('Information');\n            this.documentHelper.dialog.content = this.localObj.getConstant('RemovedIgnoreExceptions') + '<br>' + '<br>' + this.localObj.getConstant('RemovedIgnore');\n            this.documentHelper.dialog.buttons = [{\n                    click: this.onYesButtonClick,\n                    buttonModel: { content: this.localObj.getConstant('Yes') }\n                },\n                {\n                    click: this.onCancelButtonClick,\n                    buttonModel: { content: this.localObj.getConstant('Cancel') }\n                },\n                {\n                    click: this.onNoButtonClick,\n                    buttonModel: { content: this.localObj.getConstant('No') }\n                }];\n            this.documentHelper.dialog.dataBind();\n            this.documentHelper.dialog.show();\n        }\n    };\n    RestrictEditing.prototype.selectHandler = function (args) {\n        if (args.isChecked) {\n            this.viewer.owner.editorModule.insertEditRangeElement(args.text);\n            args.event.target.classList.add('e-check');\n        }\n        else {\n            this.viewer.owner.editorModule.removeUserRestrictions(args.text);\n        }\n    };\n    RestrictEditing.prototype.highlightClicked = function (args) {\n        this.documentHelper.selection.isHighlightEditRegion = args.checked;\n    };\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n    RestrictEditing.prototype.protectDocument = function () {\n        this.enforceProtectionDialog.show();\n    };\n    RestrictEditing.prototype.createCheckBox = function (label, element) {\n        var checkBox = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.CheckBox({ label: label, enableRtl: this.documentHelper.owner.enableRtl });\n        checkBox.appendTo(element);\n        return checkBox;\n    };\n    RestrictEditing.prototype.loadPaneValue = function () {\n        // if (!this.isAddUser) {\n        //     this.protectionType = this.documentHelper.protectionType;\n        // }\n        this.allowFormat.checked = !this.documentHelper.restrictFormatting;\n        switch (this.documentHelper.protectionType) {\n            case 'ReadOnly':\n                this.protectionTypeDrop.value = 'Read only';\n                break;\n            case 'FormFieldsOnly':\n                this.protectionTypeDrop.value = 'Filling in forms';\n                break;\n            case 'CommentsOnly':\n                this.protectionTypeDrop.value = 'Comments';\n                break;\n            case 'RevisionsOnly':\n                this.protectionTypeDrop.value = 'Tracked changes';\n                break;\n        }\n        this.highlightCheckBox.checked = this.documentHelper.owner.documentEditorSettings.highlightEditableRanges;\n        this.documentHelper.selection.isHighlightEditRegion = this.documentHelper.owner.documentEditorSettings.highlightEditableRanges;\n        this.addedUser.enablePersistence = true;\n        this.addedUser.dataSource = this.usersCollection.slice();\n        this.addedUser.dataBind();\n        this.showStopProtectionPane(this.documentHelper.isDocumentProtected);\n    };\n    RestrictEditing.prototype.navigateNextRegion = function () {\n        this.documentHelper.selection.navigateToNextEditingRegion();\n    };\n    RestrictEditing.prototype.addUserCollection = function () {\n        if (this.documentHelper.selection && this.documentHelper.selection.editRangeCollection.length > 0) {\n            for (var i = 0; i < this.documentHelper.selection.editRangeCollection.length; i++) {\n                var editStart = this.documentHelper.selection.editRangeCollection[i];\n                if (editStart.user !== '' && this.usersCollection.indexOf(editStart.user) === -1) {\n                    this.usersCollection.push(editStart.user);\n                }\n                if (editStart.group !== '' && this.usersCollection.indexOf(editStart.group) === -1) {\n                    this.usersCollection.push(editStart.group);\n                }\n            }\n        }\n        this.addedUser.dataSource = this.documentHelper.userCollection.slice();\n        this.addedUser.dataBind();\n    };\n    RestrictEditing.prototype.updateUserInformation = function () {\n        this.addedUser.uncheckAllItems();\n        if (this.documentHelper.selection.checkSelectionIsAtEditRegion) {\n            var editRange = this.documentHelper.selection.getEditRangeStartElement();\n            if (editRange) {\n                var index = this.addedUser.dataSource.indexOf(editRange.user);\n                if (index > -1) {\n                    var listElement = this.addedUser.element.querySelectorAll('li')[index];\n                    listElement.querySelector('.e-icons').classList.add('e-check');\n                }\n                index = this.addedUser.dataSource.indexOf(editRange.group);\n                if (index > -1) {\n                    var listElement = this.addedUser.element.querySelectorAll('li')[index];\n                    listElement.querySelector('.e-icons').classList.add('e-check');\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    RestrictEditing.prototype.destroy = function () {\n        if (this.addUserDialog) {\n            this.addUserDialog.destroy();\n        }\n        this.addUserDialog = undefined;\n        if (this.enforceProtectionDialog) {\n            this.enforceProtectionDialog.destroy();\n        }\n        this.enforceProtectionDialog = undefined;\n        if (this.unProtectDialog) {\n            this.unProtectDialog.destroy();\n        }\n        this.unProtectDialog = undefined;\n        if (this.base64) {\n            this.base64.destroy();\n        }\n        this.base64 = undefined;\n        if (this.addedUser) {\n            this.addedUser.destroy();\n            this.addedUser = undefined;\n        }\n        if (this.allowFormat) {\n            this.allowFormat.destroy();\n            this.allowFormat = undefined;\n        }\n        if (this.protectionTypeDrop) {\n            this.protectionTypeDrop.destroy();\n            this.protectionTypeDrop = undefined;\n        }\n        if (this.highlightCheckBox) {\n            this.highlightCheckBox.destroy();\n            this.highlightCheckBox = undefined;\n        }\n        if (this.addUser) {\n            this.addUser.innerHTML = '';\n            this.addUser.remove();\n            this.addUser = undefined;\n        }\n        if (this.restrictPane) {\n            this.restrictPane.innerHTML = '';\n            this.restrictPane.remove();\n            this.restrictPane = undefined;\n        }\n        if (this.enforceProtection) {\n            this.enforceProtection.innerHTML = '';\n            this.enforceProtection.remove();\n            this.enforceProtection = undefined;\n        }\n        if (this.stopProtection) {\n            this.stopProtection.innerHTML = '';\n            this.stopProtection.remove();\n            this.stopProtection = undefined;\n        }\n        if (this.stopProtectionDiv) {\n            this.stopProtectionDiv.innerHTML = '';\n            this.stopProtectionDiv.remove();\n            this.stopProtectionDiv = undefined;\n        }\n        if (this.stopReadOnlyOptions) {\n            this.stopReadOnlyOptions.innerHTML = '';\n            this.stopReadOnlyOptions.remove();\n            this.stopReadOnlyOptions = undefined;\n        }\n        if (this.contentDiv1) {\n            this.contentDiv1.innerHTML = '';\n            this.contentDiv1.remove();\n            this.contentDiv1 = undefined;\n        }\n        if (this.contentDiv2) {\n            this.contentDiv2.innerHTML = '';\n            this.contentDiv2.remove();\n            this.contentDiv2 = undefined;\n        }\n        if (this.closeButton) {\n            this.closeButton.innerHTML = '';\n            this.closeButton.remove();\n            this.closeButton = undefined;\n        }\n        if (this.userWholeDiv) {\n            this.userWholeDiv.innerHTML = '';\n            this.userWholeDiv.remove();\n            this.userWholeDiv = undefined;\n        }\n        if (this.restrictPaneWholeDiv) {\n            this.restrictPaneWholeDiv.innerHTML = '';\n            this.restrictPaneWholeDiv.remove();\n            this.restrictPaneWholeDiv = undefined;\n        }\n        this.usersCollection = [];\n        this.usersCollection = undefined;\n        this.previousProtectionType = undefined;\n        this.currentHashValue = undefined;\n        this.currentSaltValue = undefined;\n        this.documentHelper = undefined;\n    };\n    return RestrictEditing;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/restrict-editing/restrict-editing-pane.js?");

/***/ })

}]);