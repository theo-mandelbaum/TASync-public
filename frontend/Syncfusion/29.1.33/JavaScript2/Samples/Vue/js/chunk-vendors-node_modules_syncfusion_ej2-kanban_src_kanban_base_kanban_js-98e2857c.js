"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-kanban_src_kanban_base_kanban_js-98e2857c"],{

/***/ "./node_modules/@syncfusion/ej2-kanban/src/kanban/base/kanban.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-kanban/src/kanban/base/kanban.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Kanban: () => (/* binding */ Kanban)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/base/data.js\");\n/* harmony import */ var _models_swimlane_settings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/swimlane-settings */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/models/swimlane-settings.js\");\n/* harmony import */ var _models_card_settings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/card-settings */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/models/card-settings.js\");\n/* harmony import */ var _models_dialog_settings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/dialog-settings */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/models/dialog-settings.js\");\n/* harmony import */ var _models_columns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../models/columns */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/models/columns.js\");\n/* harmony import */ var _models_stacked_headers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../models/stacked-headers */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/models/stacked-headers.js\");\n/* harmony import */ var _models_sort_settings__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../models/sort-settings */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/models/sort-settings.js\");\n/* harmony import */ var _actions_action__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../actions/action */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/actions/action.js\");\n/* harmony import */ var _actions_crud__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../actions/crud */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/actions/crud.js\");\n/* harmony import */ var _actions_drag__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../actions/drag */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/actions/drag.js\");\n/* harmony import */ var _actions_dialog__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../actions/dialog */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/actions/dialog.js\");\n/* harmony import */ var _actions_keyboard__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../actions/keyboard */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/actions/keyboard.js\");\n/* harmony import */ var _actions_tooltip__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../actions/tooltip */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/actions/tooltip.js\");\n/* harmony import */ var _actions_touch__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../actions/touch */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/actions/touch.js\");\n/* harmony import */ var _layout_render__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./layout-render */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/base/layout-render.js\");\n/* harmony import */ var _virtual_layout_render__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./virtual-layout-render */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/base/virtual-layout-render.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../base/constant */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/base/constant.js\");\n/* harmony import */ var _css_constant__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./css-constant */ \"./node_modules/@syncfusion/ej2-kanban/src/kanban/base/css-constant.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The Kanban board is an efficient way to visually depict various stages of a process using cards with transparent workflows.\n * The Kanban board has rich set of APIs, methods, and events used to enable or disable its features and customize them.\n * ```html\n * <div id=\"kanban\"></div>\n * ```\n * ```typescript\n * <script>\n *   var kanbanObj = new Kanban();\n *   kanbanObj.appendTo(\"#kanban\");\n * </script>\n * ```\n */\nvar Kanban = /** @class */ (function (_super) {\n    __extends(Kanban, _super);\n    /**\n     * Constructor for creating the Kanban widget\n     *\n     * @param {KanbanModel} options Accepts the kanban properties to render the Kanban board.\n     * @param {string | HTMLElement} element Accepts the DOM element reference as either selector or element to render the Kanban Board.\n     */\n    function Kanban(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.columnDataCount = {};\n        _this.needsID = true;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     *\n     * @returns {void}\n     * @private\n     */\n    Kanban.prototype.preRender = function () {\n        this.isAdaptive = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice;\n        this.kanbanData = [];\n        if (!this.enablePersistence || !this.swimlaneToggleArray) {\n            this.swimlaneToggleArray = [];\n        }\n        this.activeCardData = { data: null, element: null };\n        var defaultLocale = {\n            items: 'items',\n            min: 'Min',\n            max: 'Max',\n            cardsSelected: 'Cards Selected',\n            addTitle: 'Add New Card',\n            editTitle: 'Edit Card Details',\n            deleteTitle: 'Delete Card',\n            deleteContent: 'Are you sure you want to delete this card?',\n            save: 'Save',\n            delete: 'Delete',\n            cancel: 'Cancel',\n            yes: 'Yes',\n            no: 'No',\n            close: 'Close',\n            noCard: 'No cards to display',\n            unassigned: 'Unassigned',\n            cards: 'Cards'\n        };\n        this.localeObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n(this.getModuleName(), defaultLocale, this.locale);\n        this.scrollPosition = { content: { left: 0, top: 0 }, column: {} };\n        this.isInitialRender = true;\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the declared modules.\n     * @private\n     */\n    Kanban.prototype.requiredModules = function () {\n        var modules = [];\n        return modules;\n    };\n    /**\n     * Returns the properties to be maintained in the persisted state.\n     *\n     * @returns {string} Returns the persistance state.\n     * @private\n     */\n    Kanban.prototype.getPersistData = function () {\n        if (this.dataSource.length > 0) {\n            return this.addOnPersist(['columns', 'dataSource', 'swimlaneToggleArray']);\n        }\n        else {\n            return this.addOnPersist(['columns', 'kanbanData', 'swimlaneToggleArray']);\n        }\n    };\n    /**\n     * Core method to return the module name.\n     *\n     * @returns {string} Returns the module name.\n     * @private\n     */\n    Kanban.prototype.getModuleName = function () {\n        return 'kanban';\n    };\n    /**\n     * Core method that initializes the control rendering.\n     *\n     * @returns {void}\n     * @private\n     */\n    Kanban.prototype.render = function () {\n        var addClasses = [_css_constant__WEBPACK_IMPORTED_MODULE_19__.ROOT_CLASS];\n        var removeClasses = [];\n        if (this.enableRtl) {\n            addClasses.push(_css_constant__WEBPACK_IMPORTED_MODULE_19__.RTL_CLASS);\n        }\n        else {\n            removeClasses.push(_css_constant__WEBPACK_IMPORTED_MODULE_19__.RTL_CLASS);\n        }\n        if (this.isAdaptive) {\n            addClasses.push(_css_constant__WEBPACK_IMPORTED_MODULE_19__.DEVICE_CLASS);\n        }\n        else {\n            removeClasses.push(_css_constant__WEBPACK_IMPORTED_MODULE_19__.DEVICE_CLASS);\n        }\n        if (this.cssClass) {\n            addClasses.push(this.cssClass);\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.element, addClasses, removeClasses);\n        this.element.style.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.width);\n        this.element.style.height = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.height);\n        this.element.setAttribute('role', 'application');\n        this.element.setAttribute('aria-label', 'Kanban Board');\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__.createSpinner)({ target: this.element });\n        this.showSpinner();\n        this.initializeModules();\n    };\n    /**\n     * Called internally, if any of the property value changed.\n     *\n     * @param {KanbanModel} newProp Gets the updated values\n     * @param {KanbanModel} oldProp Gets the previous values\n     * @returns {void}\n     * @private\n     */\n    Kanban.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'cssClass':\n                    if (oldProp.cssClass) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], oldProp.cssClass);\n                    }\n                    if (newProp.cssClass) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], newProp.cssClass);\n                    }\n                    break;\n                case 'enableRtl':\n                case 'locale':\n                    this.refresh();\n                    break;\n                case 'width':\n                    this.element.style.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(newProp.width);\n                    this.element.querySelector('.' + _css_constant__WEBPACK_IMPORTED_MODULE_19__.HEADER_CLASS).firstElementChild.style.width = 'auto';\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_18__.contentReady, {});\n                    break;\n                case 'height':\n                    this.element.style.height = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(newProp.height);\n                    this.element.querySelector('.' + _css_constant__WEBPACK_IMPORTED_MODULE_19__.CONTENT_CLASS).style.height = 'auto';\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_18__.contentReady, {});\n                    break;\n                case 'dataSource':\n                case 'query':\n                    if (this.dataModule) {\n                        this.dataModule.setState({ isDataChanged: false });\n                    }\n                    this.dataModule = new _data__WEBPACK_IMPORTED_MODULE_2__.Data(this);\n                    break;\n                case 'columns':\n                case 'constraintType':\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_18__.dataReady, { processedData: this.kanbanData });\n                    break;\n                case 'swimlaneSettings':\n                    this.onSwimlaneSettingsPropertyChanged(newProp.swimlaneSettings, oldProp.swimlaneSettings);\n                    break;\n                case 'cardSettings':\n                    this.onCardSettingsPropertyChanged(newProp.cardSettings, oldProp.cardSettings);\n                    break;\n                case 'allowDragAndDrop':\n                    if (newProp.allowDragAndDrop) {\n                        if (this.enableVirtualization) {\n                            this.virtualLayoutModule.wireDragEvent();\n                        }\n                        else {\n                            this.layoutModule.wireDragEvent();\n                        }\n                    }\n                    else {\n                        if (this.enableVirtualization) {\n                            this.virtualLayoutModule.unWireDragEvent();\n                        }\n                        else {\n                            this.layoutModule.unWireDragEvent();\n                        }\n                    }\n                    break;\n                case 'enableTooltip':\n                    if (this.tooltipModule) {\n                        this.tooltipModule.destroy();\n                        this.tooltipModule = null;\n                    }\n                    if (newProp.enableTooltip) {\n                        this.tooltipModule = new _actions_tooltip__WEBPACK_IMPORTED_MODULE_14__.KanbanTooltip(this);\n                        if (this.enableVirtualization) {\n                            this.virtualLayoutModule.refreshCards();\n                        }\n                        else {\n                            this.layoutModule.refreshCards();\n                        }\n                    }\n                    break;\n                case 'dialogSettings':\n                    if (newProp.dialogSettings) {\n                        this.dialogModule = new _actions_dialog__WEBPACK_IMPORTED_MODULE_12__.KanbanDialog(this);\n                    }\n                    break;\n                case 'allowKeyboard':\n                    if (this.keyboardModule) {\n                        this.keyboardModule.destroy();\n                        this.keyboardModule = null;\n                    }\n                    if (newProp.allowKeyboard) {\n                        this.keyboardModule = new _actions_keyboard__WEBPACK_IMPORTED_MODULE_13__.Keyboard(this);\n                    }\n                    break;\n                case 'stackedHeaders':\n                    if (this.enableVirtualization) {\n                        this.virtualLayoutModule.refreshHeaders();\n                    }\n                    else {\n                        this.layoutModule.refreshHeaders();\n                    }\n                    break;\n                case 'sortSettings':\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_18__.dataReady, { processedData: this.kanbanData });\n                    break;\n                default:\n                    break;\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Kanban.prototype.onSwimlaneSettingsPropertyChanged = function (newProp, _oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'keyField':\n                case 'textField':\n                case 'showEmptyRow':\n                case 'showItemCount':\n                case 'template':\n                case 'sortDirection':\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_18__.dataReady, { processedData: this.kanbanData });\n                    break;\n                case 'enableFrozenRows':\n                    if (this.layoutModule.frozenSwimlaneRow && !this.swimlaneSettings.enableFrozenRows) {\n                        this.layoutModule.removeFrozenRows();\n                    }\n                    break;\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Kanban.prototype.onCardSettingsPropertyChanged = function (newProp, _oldProp) {\n        var cards = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'showHeader':\n                case 'headerField':\n                case 'contentField':\n                case 'template':\n                case 'tagsField':\n                case 'grabberField':\n                case 'footerCssField':\n                    if (this.enableVirtualization) {\n                        this.virtualLayoutModule.refreshCards();\n                    }\n                    else {\n                        this.layoutModule.refreshCards();\n                    }\n                    break;\n                case 'selectionType':\n                    cards = this.getSelectedCards();\n                    if (cards.length > 0) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(cards, _css_constant__WEBPACK_IMPORTED_MODULE_19__.CARD_SELECTION_CLASS);\n                        if (this.enableVirtualization) {\n                            this.virtualLayoutModule.disableAttributeSelection(cards);\n                        }\n                        else {\n                            this.layoutModule.disableAttributeSelection(cards);\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    Kanban.prototype.initializeModules = function () {\n        this.dataModule = new _data__WEBPACK_IMPORTED_MODULE_2__.Data(this);\n        if (this.enableVirtualization) {\n            this.virtualLayoutModule = new _virtual_layout_render__WEBPACK_IMPORTED_MODULE_17__.VirtualLayoutRender(this);\n        }\n        else {\n            this.layoutModule = new _layout_render__WEBPACK_IMPORTED_MODULE_16__.LayoutRender(this);\n        }\n        if (this.allowKeyboard) {\n            this.keyboardModule = new _actions_keyboard__WEBPACK_IMPORTED_MODULE_13__.Keyboard(this);\n        }\n        this.actionModule = new _actions_action__WEBPACK_IMPORTED_MODULE_9__.Action(this);\n        this.crudModule = new _actions_crud__WEBPACK_IMPORTED_MODULE_10__.Crud(this);\n        this.dragAndDropModule = new _actions_drag__WEBPACK_IMPORTED_MODULE_11__.DragAndDrop(this);\n        this.dialogModule = new _actions_dialog__WEBPACK_IMPORTED_MODULE_12__.KanbanDialog(this);\n        if (this.enableTooltip) {\n            this.tooltipModule = new _actions_tooltip__WEBPACK_IMPORTED_MODULE_14__.KanbanTooltip(this);\n        }\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isTouch) {\n            this.touchModule = new _actions_touch__WEBPACK_IMPORTED_MODULE_15__.KanbanTouch(this);\n        }\n    };\n    Kanban.prototype.renderTemplates = function () {\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    Kanban.prototype.resetTemplates = function (templates) {\n        if (this.isReact) {\n            this.clearTemplate(templates);\n        }\n    };\n    Kanban.prototype.destroyModules = function () {\n        if (this.layoutModule) {\n            this.layoutModule.destroy();\n            this.layoutModule = null;\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n            this.keyboardModule = null;\n        }\n        if (this.virtualLayoutModule) {\n            this.virtualLayoutModule.destroy();\n            this.virtualLayoutModule = null;\n        }\n        if (this.touchModule) {\n            this.touchModule.destroy();\n            this.touchModule = null;\n        }\n        if (this.tooltipModule) {\n            this.tooltipModule.destroy();\n            this.tooltipModule = null;\n        }\n        this.dialogModule = null;\n        this.actionModule = null;\n        this.crudModule = null;\n        this.dataModule = null;\n        this.dragAndDropModule = null;\n    };\n    Kanban.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (typeof template === 'function') {\n                    return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);\n                }\n                else if (document.querySelectorAll(template).length) {\n                    return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(document.querySelector(template).innerHTML.trim());\n                }\n                else {\n                    return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);\n                }\n            }\n            catch (error) {\n                return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Returns the card details based on card ID from the board.\n     *\n     * @function getCardDetails\n     * @param {Element} target Accepts the card element to get the details.\n     * @returns {Object} Returns the card details based on given target.\n     */\n    Kanban.prototype.getCardDetails = function (target) {\n        var _this = this;\n        var isNumeric = typeof (this.kanbanData[0])[this.cardSettings.headerField] === 'number';\n        var targetId = isNumeric ? parseInt(target.getAttribute('data-id'), 10) : target.getAttribute('data-id');\n        var cardObj = this.kanbanData.filter(function (data) {\n            return data[_this.cardSettings.headerField] === targetId;\n        })[0];\n        return cardObj;\n    };\n    /**\n     * Returns the column data based on column key input.\n     *\n     * @function getColumnData\n     * @param {string | number} columnKey Accepts the column key to get the objects.\n     * @param {Object[]} dataSource Accepts the collection of objects to get the results based on given columnKey.\n     * @returns {Object[]} Returns the collection of card objects based on given inputs.\n     */\n    Kanban.prototype.getColumnData = function (columnKey, dataSource) {\n        if (this.enableVirtualization) {\n            return this.virtualLayoutModule.getColumnCards(dataSource)[\"\" + columnKey] || [];\n        }\n        return this.layoutModule.getColumnCards(dataSource)[\"\" + columnKey] || [];\n    };\n    /**\n     * Returns the swimlane column data based on swimlane keyField input.\n     *\n     * @function getSwimlaneData\n     * @param {string} keyField Accepts the swimlane keyField to get the objects.\n     * @returns {Object[]} Returns the collection of card objects based on given inputs.\n     */\n    Kanban.prototype.getSwimlaneData = function (keyField) {\n        return this.layoutModule.getSwimlaneCards()[\"\" + keyField] || [];\n    };\n    /**\n     * Gets the list of selected cards from the board.\n     *\n     * @function getSelectedCards\n     * @returns {HTMLElement[]} Returns the card elements based on selection.\n     */\n    Kanban.prototype.getSelectedCards = function () {\n        return [].slice.call(this.element.querySelectorAll('.' + _css_constant__WEBPACK_IMPORTED_MODULE_19__.CARD_CLASS + '.' + _css_constant__WEBPACK_IMPORTED_MODULE_19__.CARD_SELECTION_CLASS));\n    };\n    /**\n     * Allows you to show the spinner on Kanban at the required scenarios.\n     *\n     * @function showSpinner\n     * @returns {void}\n     */\n    Kanban.prototype.showSpinner = function () {\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__.showSpinner)(this.element);\n    };\n    /**\n     * When the spinner is shown manually using the showSpinner method, it can be hidden using this `hideSpinner` method.\n     *\n     * @function hideSpinner\n     * @returns {void}\n     */\n    Kanban.prototype.hideSpinner = function () {\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__.hideSpinner)(this.element);\n    };\n    /**\n     * To manually open the dialog.\n     *\n     * @function openDialog\n     * @param {CurrentAction} action Accepts the action for which the dialog needs to be opened such as either for new card creation or\n     *  editing of existing cards. The applicable action names are `Add` and `Edit`.\n     * @param {Object} data It can be card data.\n     * @returns {void}\n     */\n    Kanban.prototype.openDialog = function (action, data) {\n        this.dialogModule.openDialog(action, data);\n    };\n    /**\n     * To manually close the dialog.\n     *\n     * @function closeDialog\n     * @returns {void}\n     */\n    Kanban.prototype.closeDialog = function () {\n        this.dialogModule.closeDialog();\n    };\n    /**\n     * Adds the new card to the data source of Kanban and layout.\n     *\n     * @function addCard\n     * @param {Object | Object[]} cardData Accepts Single card object or Collection of card objects to be added into Kanban.\n     * @param {number} index Accepts the index to insert the card in column.\n     * @returns {void}\n     */\n    Kanban.prototype.addCard = function (cardData, index) {\n        this.crudModule.addCard(cardData, index);\n    };\n    /**\n     * Updates the changes made in the card object by passing it as a parameter to the data source.\n     *\n     * @function updateCard\n     * @param {Object | Object[]} cardData Accepts Single card object or Collection of card objects to be updated into Kanban.\n     * @param {number} index Accepts the index to update the card in column.\n     * @returns {void}\n     */\n    Kanban.prototype.updateCard = function (cardData, index) {\n        this.crudModule.updateCard(cardData, index);\n    };\n    /**\n     * Deletes the card based on the provided ID or card collection in the argument list.\n     *\n     * @function deleteCard\n     * @param {string | number | Object | Object[]} cardData Accepts the ID of the remove card in string or number type or\n     * Single card object or Collection of card objects to be removed from Kanban\n     * @returns {void}\n     */\n    Kanban.prototype.deleteCard = function (cardData) {\n        this.crudModule.deleteCard(cardData);\n    };\n    /**\n     * Add the column to Kanban board dynamically based on the provided column options and index in the argument list.\n     *\n     * @function addColumn\n     * @param {ColumnsModel} columnOptions Accepts the properties to new column that are going to be added in the board.\n     * @param {number} index Accepts the index of column to add the new column.\n     * @returns {void}\n     */\n    Kanban.prototype.addColumn = function (columnOptions, index) {\n        this.actionModule.addColumn(columnOptions, index);\n    };\n    /**\n     * Deletes the column based on the provided index value.\n     *\n     * @function deleteColumn\n     * @param {number} index Accepts the index of column to delete the existing column from Kanban board.\n     * @returns {void}\n     */\n    Kanban.prototype.deleteColumn = function (index) {\n        this.actionModule.deleteColumn(index);\n    };\n    /**\n     * Shows the column from hidden based on the provided key in the columns.\n     *\n     * @function showColumn\n     * @param {string | number} key Accepts the hidden column key name to be shown from the hidden state in board.\n     * @returns {void}\n     */\n    Kanban.prototype.showColumn = function (key) {\n        this.actionModule.showColumn(key);\n    };\n    /**\n     * Hides the column from Kanban board based on the provided key in the columns.\n     *\n     * @function hideColumn\n     * @param {string | number} key Accepts the visible column key name to be hidden from the board.\n     * @returns {void}\n     */\n    Kanban.prototype.hideColumn = function (key) {\n        this.actionModule.hideColumn(key);\n    };\n    /**\n     * Method to refresh the Kanban UI based on modified records.\n     *\n     * @function refreshUI\n     * @param {ActionEventArgs} args Accepts the added, changed or deleted data.\n     * @param {number} index Accepts the index of the changed items.\n     * @returns {void}\n     */\n    Kanban.prototype.refreshUI = function (args, index) {\n        index = index ? index : 0;\n        this.dataModule.refreshUI(args, index);\n    };\n    /**\n     * Method to refresh the column header.\n     *\n     * @method refreshHeader\n     * @returns {void}\n     */\n    Kanban.prototype.refreshHeader = function () {\n        this.resetTemplates(['columnTemplate']);\n        if (this.enableVirtualization) {\n            this.virtualLayoutModule.refreshHeaders();\n        }\n        else {\n            this.layoutModule.refreshHeaders();\n        }\n        this.renderTemplates();\n    };\n    /**\n     * Removes the control from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Kanban.prototype.destroy = function () {\n        this.destroyModules();\n        [].slice.call(this.element.childNodes).forEach(function (node) { (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(node); });\n        var removeClasses = [_css_constant__WEBPACK_IMPORTED_MODULE_19__.ROOT_CLASS];\n        if (this.cssClass) {\n            removeClasses = removeClasses.concat(this.cssClass.split(' '));\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], removeClasses);\n        _super.prototype.destroy.call(this);\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Kanban.prototype, \"cssClass\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')\n    ], Kanban.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')\n    ], Kanban.prototype, \"height\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')\n    ], Kanban.prototype, \"cardHeight\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Kanban.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])\n    ], Kanban.prototype, \"dataSource\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Kanban.prototype, \"query\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Kanban.prototype, \"keyField\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Column')\n    ], Kanban.prototype, \"constraintType\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])\n    ], Kanban.prototype, \"externalDropId\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([], _models_columns__WEBPACK_IMPORTED_MODULE_6__.Columns)\n    ], Kanban.prototype, \"columns\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Kanban.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Kanban.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([], _models_stacked_headers__WEBPACK_IMPORTED_MODULE_7__.StackedHeaders)\n    ], Kanban.prototype, \"stackedHeaders\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _models_swimlane_settings__WEBPACK_IMPORTED_MODULE_3__.SwimlaneSettings)\n    ], Kanban.prototype, \"swimlaneSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _models_card_settings__WEBPACK_IMPORTED_MODULE_4__.CardSettings)\n    ], Kanban.prototype, \"cardSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _models_sort_settings__WEBPACK_IMPORTED_MODULE_8__.SortSettings)\n    ], Kanban.prototype, \"sortSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _models_dialog_settings__WEBPACK_IMPORTED_MODULE_5__.DialogSettings)\n    ], Kanban.prototype, \"dialogSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Kanban.prototype, \"allowDragAndDrop\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Kanban.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Kanban.prototype, \"showEmptyColumn\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Kanban.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Kanban.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"actionBegin\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"actionComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"actionFailure\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"created\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"dataBinding\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"dataBound\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"cardClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"cardDoubleClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"cardRendered\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"dragStart\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"drag\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"dragStop\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"dialogOpen\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"dialogClose\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Kanban.prototype, \"dataSourceChanged\", void 0);\n    Kanban = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], Kanban);\n    return Kanban;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-kanban/src/kanban/base/kanban.js?");

/***/ })

}]);