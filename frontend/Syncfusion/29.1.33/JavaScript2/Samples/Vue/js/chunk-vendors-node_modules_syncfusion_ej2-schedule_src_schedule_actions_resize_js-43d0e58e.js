"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-schedule_src_schedule_actions_resize_js-43d0e58e"],{

/***/ "./node_modules/@syncfusion/ej2-schedule/src/schedule/actions/resize.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-schedule/src/schedule/actions/resize.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Resize: () => (/* binding */ Resize)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _actions_action_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../actions/action-base */ \"./node_modules/@syncfusion/ej2-schedule/src/schedule/actions/action-base.js\");\n/* harmony import */ var _event_renderer_month__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../event-renderer/month */ \"./node_modules/@syncfusion/ej2-schedule/src/schedule/event-renderer/month.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/util */ \"./node_modules/@syncfusion/ej2-schedule/src/schedule/base/util.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../base/constant */ \"./node_modules/@syncfusion/ej2-schedule/src/schedule/base/constant.js\");\n/* harmony import */ var _base_css_constant__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../base/css-constant */ \"./node_modules/@syncfusion/ej2-schedule/src/schedule/base/css-constant.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n\n\n\n\n\n/**\n * Schedule events resize actions\n */\nvar Resize = /** @class */ (function (_super) {\n    __extends(Resize, _super);\n    function Resize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Resize.prototype.wireResizeEvent = function (element) {\n        var resizeElement = [].slice.call(element.querySelectorAll('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_5__.EVENT_RESIZE_CLASS));\n        for (var _i = 0, resizeElement_1 = resizeElement; _i < resizeElement_1.length; _i++) {\n            var element_1 = resizeElement_1[_i];\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(element_1, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent, this.resizeStart, this);\n        }\n    };\n    Resize.prototype.resizeHelper = function () {\n        if (this.parent.activeViewOptions.group.resources.length > 0 && this.parent.activeViewOptions.group.allowGroupEdit) {\n            for (var i = 0, len = this.actionObj.originalElement.length; i < len; i++) {\n                var cloneElement = this.createCloneElement(this.actionObj.originalElement[parseInt(i.toString(), 10)]);\n                this.actionObj.cloneElement[parseInt(i.toString(), 10)] = cloneElement;\n                if (this.actionObj.element === this.actionObj.originalElement[parseInt(i.toString(), 10)]) {\n                    this.actionObj.clone = cloneElement;\n                }\n            }\n        }\n        else {\n            if (this.actionObj.element) {\n                this.actionObj.clone = this.createCloneElement(this.actionObj.element);\n            }\n            this.actionObj.cloneElement = [this.actionObj.clone];\n            this.actionObj.originalElement = [this.actionObj.element];\n        }\n    };\n    Resize.prototype.resizeStart = function (e) {\n        var _this = this;\n        if (e && e.type === 'touchstart' && (!this.parent.uiStateValues.isTapHold ||\n            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_5__.APPOINTMENT_BORDER))) {\n            return;\n        }\n        this.parent.eventBase.removeSelectedAppointmentClass();\n        this.actionObj.action = 'resize';\n        this.actionObj.slotInterval = this.parent.activeViewOptions.timeScale.interval / this.parent.activeViewOptions.timeScale.slotCount;\n        this.actionObj.interval = this.actionObj.slotInterval;\n        var resizeTarget = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_5__.EVENT_RESIZE_CLASS);\n        this.actionObj.element = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(resizeTarget, '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_5__.APPOINTMENT_CLASS);\n        this.actionObj.event = this.parent.eventBase.getEventByGuid(this.actionObj.element.getAttribute('data-guid'));\n        var eventObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.actionObj.event, null, true);\n        var resizeArgs = {\n            cancel: false,\n            data: eventObj,\n            element: this.actionObj.element,\n            event: e,\n            interval: this.actionObj.interval,\n            scroll: { enable: true, scrollBy: 30, timeDelay: 100 }\n        };\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_4__.resizeStart, resizeArgs, function (resizeEventArgs) {\n            if (resizeEventArgs.cancel) {\n                return;\n            }\n            _this.actionClass('addClass');\n            _this.parent.uiStateValues.action = true;\n            _this.resizeEdges = {\n                left: resizeTarget.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_5__.LEFT_RESIZE_HANDLER),\n                right: resizeTarget.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_5__.RIGHT_RESIZE_HANDLER),\n                top: resizeTarget.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_5__.TOP_RESIZE_HANDLER),\n                bottom: resizeTarget.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_5__.BOTTOM_RESIZE_HANDLER)\n            };\n            _this.actionObj.groupIndex = _this.parent.uiStateValues.isGroupAdaptive ? _this.parent.uiStateValues.groupIndex : 0;\n            var workCell = _this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_5__.WORK_CELLS_CLASS);\n            _this.actionObj.cellWidth = _this.parent.getElementWidth(workCell);\n            _this.actionObj.cellHeight = _this.parent.getElementHeight(workCell);\n            var hRows = _this.parent.activeViewOptions.headerRows.map(function (row) { return row.option; });\n            if (_this.parent.activeView.isTimelineView() && hRows.length > 0 && ['Date', 'Hour'].indexOf(hRows.slice(-1)[0]) < 0) {\n                var tr = _this.parent.getContentTable().querySelector('tr');\n                var noOfDays = 0;\n                var tdCollections = [].slice.call(tr.children);\n                for (var _i = 0, tdCollections_1 = tdCollections; _i < tdCollections_1.length; _i++) {\n                    var td = tdCollections_1[_i];\n                    noOfDays += parseInt(td.getAttribute('colspan'), 10);\n                }\n                var trRect = tr.getBoundingClientRect();\n                _this.actionObj.cellWidth = trRect.width / noOfDays;\n                _this.actionObj.cellHeight = trRect.height;\n            }\n            var pages = _this.parent.eventBase.getPageCoordinates(e);\n            _this.actionObj.X = pages.pageX;\n            _this.actionObj.Y = pages.pageY;\n            _this.actionObj.groupIndex = parseInt(_this.actionObj.element.getAttribute('data-group-index') || '0', 10);\n            _this.actionObj.interval = resizeEventArgs.interval;\n            _this.actionObj.scroll = resizeEventArgs.scroll;\n            _this.actionObj.start = new Date(eventObj[_this.parent.eventFields.startTime].getTime());\n            _this.actionObj.end = new Date(eventObj[_this.parent.eventFields.endTime].getTime());\n            _this.actionObj.originalElement = _this.getOriginalElement(_this.actionObj.element);\n            if (_this.parent.currentView === 'Month') {\n                _this.daysVariation = -1;\n                _this.monthEvent = new _event_renderer_month__WEBPACK_IMPORTED_MODULE_2__.MonthEvent(_this.parent);\n            }\n            var viewElement = _this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_5__.CONTENT_WRAP_CLASS);\n            _this.scrollArgs = { element: viewElement, width: viewElement.scrollWidth, height: viewElement.scrollHeight };\n            // 883565 - To fix the resizing not working issue at the last column of the timeline view\n            if (['Month', 'TimelineYear'].indexOf(_this.parent.currentView) < 0) {\n                var scrollWidth = Math.round(_this.scrollArgs.width / _this.actionObj.cellWidth) * _this.actionObj.cellWidth;\n                _this.scrollArgs.width = _this.scrollArgs.width < scrollWidth ? scrollWidth : _this.scrollArgs.width;\n            }\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent, _this.resizing, _this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent, _this.resizeStop, _this);\n        });\n    };\n    Resize.prototype.resizing = function (e) {\n        if (e && e.type === 'touchmove') {\n            e.preventDefault();\n        }\n        if (this.parent.quickPopup) {\n            this.parent.quickPopup.quickPopupHide();\n        }\n        if (this.parent.element.querySelectorAll('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_5__.RESIZE_CLONE_CLASS).length === 0) {\n            this.resizeHelper();\n        }\n        if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.target)) && e.target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_5__.DISABLE_DATES)) {\n            return;\n        }\n        var pages = this.parent.eventBase.getPageCoordinates(e);\n        if (this.parent.currentView === 'Month' || this.parent.currentView === 'TimelineYear') {\n            var doc = document.documentElement;\n            var left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n            var top_1 = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n            this.actionObj.pageX = pages.pageX - left;\n            this.actionObj.pageY = pages.pageY - top_1;\n        }\n        else {\n            this.actionObj.pageX = pages.pageX;\n            this.actionObj.pageY = pages.pageY;\n        }\n        this.updateScrollPosition(e);\n        this.updateResizingDirection(e);\n        var eventObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.actionObj.event, null, true);\n        var resizeArgs = {\n            cancel: false,\n            data: eventObj,\n            element: this.actionObj.element,\n            event: e,\n            startTime: this.actionObj.start,\n            endTime: this.actionObj.end\n        };\n        if (this.parent.group.resources.length > 0) {\n            resizeArgs.groupIndex = this.actionObj.groupIndex;\n        }\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_4__.resizing, resizeArgs);\n    };\n    Resize.prototype.updateResizingDirection = function (e) {\n        if (this.parent.currentView === 'Month' || this.parent.currentView === 'TimelineYear') {\n            this.monthResizing();\n            return;\n        }\n        var resizeValidation = this.resizeValidation(e);\n        if (this.resizeEdges.left) {\n            if (resizeValidation) {\n                var leftStyles = this.getLeftRightStyles(e, true);\n                if (parseInt(leftStyles.width, 10) < 1) {\n                    return;\n                }\n                for (var _i = 0, _a = this.actionObj.cloneElement; _i < _a.length; _i++) {\n                    var cloneElement = _a[_i];\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(cloneElement, leftStyles);\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([cloneElement], _base_css_constant__WEBPACK_IMPORTED_MODULE_5__.LEFT_RESIZE_HANDLER);\n                }\n            }\n            this.horizontalResizing(!this.parent.enableRtl);\n        }\n        if (this.resizeEdges.right) {\n            if (resizeValidation) {\n                var rightStyles = this.getLeftRightStyles(e, false);\n                if (parseInt(rightStyles.width, 10) < 1) {\n                    return;\n                }\n                for (var _b = 0, _c = this.actionObj.cloneElement; _b < _c.length; _b++) {\n                    var cloneElement = _c[_b];\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(cloneElement, rightStyles);\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([cloneElement], _base_css_constant__WEBPACK_IMPORTED_MODULE_5__.RIGHT_RESIZE_HANDLER);\n                }\n            }\n            this.horizontalResizing(this.parent.enableRtl);\n        }\n        if (this.resizeEdges.top) {\n            if (resizeValidation) {\n                var topStyles = this.getTopBottomStyles(e, true);\n                if (parseInt(topStyles.height, 10) < 1) {\n                    return;\n                }\n                for (var _d = 0, _e = this.actionObj.cloneElement; _d < _e.length; _d++) {\n                    var cloneElement = _e[_d];\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(cloneElement, topStyles);\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([cloneElement], _base_css_constant__WEBPACK_IMPORTED_MODULE_5__.TOP_RESIZE_HANDLER);\n                }\n            }\n            this.verticalResizing(true);\n        }\n        if (this.resizeEdges.bottom) {\n            if (resizeValidation) {\n                var bottomStyles = this.getTopBottomStyles(e, false);\n                if (parseInt(bottomStyles.height, 10) < 1) {\n                    return;\n                }\n                for (var _f = 0, _g = this.actionObj.cloneElement; _f < _g.length; _f++) {\n                    var cloneElement = _g[_f];\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(cloneElement, bottomStyles);\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([cloneElement], _base_css_constant__WEBPACK_IMPORTED_MODULE_5__.BOTTOM_RESIZE_HANDLER);\n                }\n            }\n            this.verticalResizing(false);\n        }\n    };\n    Resize.prototype.monthResizing = function () {\n        this.removeCloneElement();\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.actionObj.pageX) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.actionObj.pageY)) {\n            return;\n        }\n        var td = document.elementFromPoint(this.actionObj.pageX, this.actionObj.pageY);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(td)) {\n            return;\n        }\n        var resizeTime = this.parent.getDateFromElement(td);\n        var isSameCell = this.parent.activeViewOptions.group.resources.length > 0 ?\n            parseInt(td.getAttribute('data-group-index'), 10) === this.actionObj.groupIndex : true;\n        var startTime = new Date(this.actionObj.event[this.parent.eventFields.startTime].getTime());\n        var endTime = new Date(this.actionObj.event[this.parent.eventFields.endTime].getTime());\n        if ((!this.parent.enableRtl && this.resizeEdges.left) || (this.parent.enableRtl && this.resizeEdges.right)\n            || this.resizeEdges.top) {\n            startTime = resizeTime;\n        }\n        else if ((!this.parent.enableRtl && this.resizeEdges.right) || (this.parent.enableRtl && this.resizeEdges.left)\n            || this.resizeEdges.bottom) {\n            endTime = _base_util__WEBPACK_IMPORTED_MODULE_3__.addDays(resizeTime, 1);\n        }\n        if (isSameCell && startTime < endTime) {\n            this.actionObj.start = startTime;\n            this.actionObj.end = endTime;\n            var event_1 = this.getUpdatedEvent(this.actionObj.start, this.actionObj.end, this.actionObj.event);\n            if (this.parent.currentView === 'TimelineYear') {\n                this.yearEventsRendering(event_1);\n            }\n            else {\n                this.dynamicEventsRendering(event_1);\n            }\n            this.updateOriginalElement(this.actionObj.clone);\n        }\n    };\n    Resize.prototype.yearEventsRendering = function (event) {\n        var eventWrappers = [].slice.call(this.parent.element.querySelectorAll('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_5__.CLONE_ELEMENT_CLASS));\n        for (var _i = 0, eventWrappers_1 = eventWrappers; _i < eventWrappers_1.length; _i++) {\n            var wrapper = eventWrappers_1[_i];\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(wrapper);\n        }\n        var endDate = new Date(event[this.parent.eventFields.endTime]);\n        var monthDiff = 0;\n        if (this.parent.activeViewOptions.group.resources.length === 0) {\n            monthDiff = this.getMonthDiff(event[this.parent.eventFields.startTime], _base_util__WEBPACK_IMPORTED_MODULE_3__.addDays(endDate, -1));\n        }\n        for (var i = 0; i <= monthDiff; i++) {\n            var eventObj = void 0;\n            if (this.parent.activeViewOptions.group.resources.length === 0) {\n                eventObj = this.getEventCount(event, this.actionObj.start.getMonth() + i);\n            }\n            else {\n                eventObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, event, null, true);\n                endDate = this.resizeEdges.left || this.resizeEdges.right ? _base_util__WEBPACK_IMPORTED_MODULE_3__.addDays(endDate, -1) : endDate;\n                eventObj.count = this.getMonthDiff(event[this.parent.eventFields.startTime], endDate) + 1;\n            }\n            this.dynamicYearlyEventsRendering(eventObj, true);\n        }\n    };\n    Resize.prototype.getMonthDiff = function (startDate, endDate) {\n        var months;\n        months = (endDate.getFullYear() - startDate.getFullYear()) * 12;\n        months -= startDate.getMonth();\n        months += endDate.getMonth();\n        return months <= 0 ? 0 : months;\n    };\n    Resize.prototype.getEventCount = function (eventObj, month) {\n        var eventData = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, eventObj, null, true);\n        var eventStart = eventData[this.parent.eventFields.startTime];\n        var eventEnd = eventData[this.parent.eventFields.endTime];\n        var monthStart = new Date(this.parent.selectedDate.getFullYear(), month, 1);\n        var monthEnd = _base_util__WEBPACK_IMPORTED_MODULE_3__.addDays(new Date(this.parent.selectedDate.getFullYear(), month + 1, 0), 1);\n        var count = 1;\n        if (eventStart.getTime() < monthStart.getTime()) {\n            eventData[this.parent.eventFields.startTime] = monthStart;\n        }\n        if (eventEnd.getTime() > monthEnd.getTime()) {\n            eventData[this.parent.eventFields.endTime] = monthEnd;\n        }\n        if (this.parent.activeViewOptions.group.resources.length === 0) {\n            count = Math.ceil((eventData[this.parent.eventFields.endTime].getTime() -\n                eventData[this.parent.eventFields.startTime].getTime()) / _base_util__WEBPACK_IMPORTED_MODULE_3__.MS_PER_DAY);\n        }\n        eventData.count = count;\n        return eventData;\n    };\n    Resize.prototype.resizeStop = function (e) {\n        var _this = this;\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent, this.resizing);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent, this.resizeStop);\n        clearInterval(this.actionObj.scrollInterval);\n        this.actionObj.scrollInterval = null;\n        this.actionObj.action = null;\n        this.removeCloneElementClasses();\n        this.removeCloneElement();\n        this.actionClass('removeClass');\n        this.parent.uiStateValues.action = this.parent.uiStateValues.isTapHold = false;\n        var resizeArgs = { cancel: false, data: this.getChangedData(), element: this.actionObj.element, event: e };\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_4__.resizeStop, resizeArgs, function (resizeEventArgs) {\n            if (resizeEventArgs.cancel) {\n                return;\n            }\n            if (_this.parent.eventBase.checkOverlap(resizeEventArgs.data)) {\n                return;\n            }\n            if (_this.parent.isSpecificResourceEvents()) {\n                _this.parent.crudModule.crudObj.sourceEvent =\n                    [_this.parent.resourceBase.lastResourceLevel[parseInt(resizeEventArgs.element.getAttribute('data-group-index'), 10)]];\n                _this.parent.crudModule.crudObj.targetEvent = _this.parent.crudModule.crudObj.sourceEvent;\n                _this.parent.crudModule.crudObj.isCrudAction = true;\n            }\n            _this.saveChangedData(resizeEventArgs);\n        });\n    };\n    Resize.prototype.verticalResizing = function (isTop) {\n        var offsetValue = this.actionObj.clone.offsetTop;\n        if (!isTop) {\n            offsetValue += this.actionObj.clone.offsetHeight;\n        }\n        var minutes = (offsetValue / this.actionObj.cellHeight) * this.actionObj.slotInterval;\n        var element = this.actionObj.clone.offsetParent;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element)) {\n            return;\n        }\n        var resizeTime = _base_util__WEBPACK_IMPORTED_MODULE_3__.resetTime(this.parent.getDateFromElement(element));\n        resizeTime.setHours(this.parent.activeView.getStartHour().getHours());\n        resizeTime.setMinutes(minutes + this.parent.activeView.getStartHour().getMinutes());\n        if (isTop) {\n            this.actionObj.start = this.calculateIntervalTime(resizeTime);\n        }\n        else {\n            this.actionObj.end = this.calculateIntervalTime(resizeTime);\n        }\n        this.updateTimePosition(resizeTime);\n    };\n    Resize.prototype.horizontalResizing = function (isLeft) {\n        var eventStart = new Date(this.actionObj.event[this.parent.eventFields.startTime].getTime());\n        var eventEnd = new Date(this.actionObj.event[this.parent.eventFields.endTime].getTime());\n        var resizeTime;\n        var headerName = this.parent.currentView;\n        var isTimelineMonth = this.parent.currentView === 'TimelineMonth';\n        if (this.parent.activeView.isTimelineView()) {\n            var tr = this.parent.getContentTable().querySelector('tr');\n            if (this.parent.activeViewOptions.headerRows.length > 0) {\n                var rows = this.parent.activeViewOptions.headerRows.map(function (row) { return row.option; });\n                headerName = rows.slice(-1)[0];\n                if (isTimelineMonth && headerName === 'Hour') {\n                    headerName = rows.slice(-2)[0] || 'Month';\n                }\n            }\n            resizeTime = isLeft ? eventStart : eventEnd;\n            var cellIndex = 0;\n            var tdCollections = [].slice.call(tr.children);\n            var isLastCell = false;\n            var pixelsPerMinute = this.actionObj.cellWidth / (this.parent.activeViewOptions.timeScale.interval /\n                this.parent.activeViewOptions.timeScale.slotCount);\n            var offset = parseFloat(this.parent.enableRtl ? this.actionObj.clone.style.right :\n                this.actionObj.clone.style.left);\n            offset = Math.round(offset / pixelsPerMinute) * pixelsPerMinute;\n            if (['Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1) {\n                var noOfDays = 0;\n                for (var _i = 0, tdCollections_2 = tdCollections; _i < tdCollections_2.length; _i++) {\n                    var td = tdCollections_2[_i];\n                    noOfDays += parseInt(td.getAttribute('colspan'), 10);\n                }\n                var offsetValue = this.parent.enableRtl ? parseInt(this.actionObj.clone.style.right, 10) :\n                    parseInt(this.actionObj.clone.style.left, 10);\n                offsetValue = Math.round(offsetValue / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n                if (!isLeft) {\n                    offsetValue += (this.parent.getElementWidth(this.actionObj.clone) - this.actionObj.cellWidth);\n                }\n                cellIndex = !isTimelineMonth ? Math.round(offsetValue / (this.parent.getElementWidth(tr) / noOfDays)) :\n                    Math.floor(offsetValue / Math.floor(this.parent.getElementWidth(tr) / noOfDays));\n                cellIndex = isLeft ? cellIndex : isTimelineMonth ? cellIndex + 1 : cellIndex;\n                isLastCell = cellIndex === tdCollections.length;\n                cellIndex = (cellIndex < 0) ? 0 : (cellIndex >= noOfDays) ? noOfDays - 1 : cellIndex;\n            }\n            else {\n                var cellWidth = this.actionObj.cellWidth;\n                cellIndex = isLeft ? Math.round(offset / this.actionObj.cellWidth) :\n                    Math.ceil((offset + (this.parent.getElementWidth(this.actionObj.clone) - cellWidth)) / this.actionObj.cellWidth);\n                if (this.parent.enableRtl) {\n                    var offsetWidth = (Math.round(offset / this.actionObj.cellWidth) *\n                        this.actionObj.cellWidth) + (isLeft ? 0 : (this.parent.getElementWidth(this.actionObj.clone) -\n                        this.actionObj.cellWidth));\n                    cellIndex = Math.floor(offsetWidth / this.actionObj.cellWidth);\n                }\n                isLastCell = cellIndex === tdCollections.length;\n                cellIndex = this.getIndex(cellIndex);\n            }\n            var resizeDate = void 0;\n            if (['Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1) {\n                resizeDate = new Date(this.parent.activeView.renderDates[parseInt(cellIndex.toString(), 10)].getTime());\n            }\n            else {\n                resizeDate = this.parent.getDateFromElement(tr.children[parseInt(cellIndex.toString(), 10)]);\n            }\n            if (['TimelineMonth', 'Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1 ||\n                !this.parent.activeViewOptions.timeScale.enable) {\n                resizeTime = new Date(resizeDate.setHours(resizeTime.getHours(), resizeTime.getMinutes(), resizeTime.getSeconds()));\n            }\n            else {\n                if (!isLeft) {\n                    offset += this.parent.getElementWidth(this.actionObj.clone);\n                }\n                var spanMinutes = Math.floor((this.actionObj.slotInterval / this.actionObj.cellWidth) *\n                    (offset - Math.floor(offset / this.actionObj.cellWidth) * this.actionObj.cellWidth));\n                spanMinutes = (isLastCell || (!isLeft && spanMinutes === 0)) ? this.actionObj.slotInterval : spanMinutes;\n                resizeTime = new Date(resizeDate.getTime());\n                resizeTime = new Date(resizeDate.getTime() + (spanMinutes * _base_util__WEBPACK_IMPORTED_MODULE_3__.MS_PER_MINUTE));\n                this.updateTimePosition(resizeTime);\n            }\n        }\n        else {\n            var cloneIndex = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.actionObj.clone, 'td').cellIndex;\n            var originalWidth = Math.ceil((isLeft ? this.parent.getElementWidth(this.actionObj.element) : 0) /\n                this.actionObj.cellWidth) * this.actionObj.cellWidth;\n            var noOfDays = Math.ceil((this.parent.getElementWidth(this.actionObj.clone) - originalWidth) /\n                this.actionObj.cellWidth);\n            var tr = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.actionObj.clone, 'tr');\n            var dayIndex = isLeft ? cloneIndex - noOfDays : cloneIndex + noOfDays - 1;\n            dayIndex = this.getIndex(dayIndex);\n            resizeTime = this.parent.getDateFromElement(tr.children[parseInt(dayIndex.toString(), 10)]);\n            if (isLeft) {\n                resizeTime.setHours(eventStart.getHours(), eventStart.getMinutes(), eventStart.getSeconds());\n            }\n            else {\n                resizeTime.setHours(eventEnd.getHours(), eventEnd.getMinutes(), eventEnd.getSeconds());\n            }\n        }\n        var isNotHourSlot = ['TimelineMonth', 'Year', 'Month', 'Week', 'WorkWeek', 'Date', 'Day'].indexOf(headerName) !== -1 ||\n            !this.parent.activeViewOptions.timeScale.enable;\n        if (isLeft) {\n            if ((eventEnd.getTime() - resizeTime.getTime()) <= 0) {\n                resizeTime = isNotHourSlot ? _base_util__WEBPACK_IMPORTED_MODULE_3__.resetTime(eventEnd) : eventStart;\n            }\n            this.actionObj.start = !isNotHourSlot ? this.calculateIntervalTime(resizeTime) : resizeTime;\n        }\n        else {\n            var resizeEnd = (isNotHourSlot && resizeTime.getHours() === 0 && resizeTime.getMinutes() === 0) ?\n                _base_util__WEBPACK_IMPORTED_MODULE_3__.addDays(resizeTime, 1) : resizeTime;\n            if (isNotHourSlot && (resizeEnd.getTime() - eventStart.getTime()) <= 0) {\n                resizeEnd = _base_util__WEBPACK_IMPORTED_MODULE_3__.addDays(_base_util__WEBPACK_IMPORTED_MODULE_3__.resetTime(eventStart), 1);\n            }\n            this.actionObj.end = !isNotHourSlot ? this.calculateIntervalTime(resizeEnd) : resizeEnd;\n        }\n    };\n    Resize.prototype.getTopBottomStyles = function (e, isTop) {\n        var viewElement = this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_5__.CONTENT_WRAP_CLASS);\n        var slotInterval = (this.actionObj.cellHeight / this.actionObj.slotInterval) * this.actionObj.interval;\n        var clnHeight = isTop ? this.actionObj.element.offsetHeight + (this.actionObj.Y - this.actionObj.pageY) :\n            this.actionObj.element.offsetHeight + (this.actionObj.pageY - this.actionObj.Y);\n        var clnTop = isTop ? this.actionObj.element.offsetTop -\n            (this.actionObj.Y - this.actionObj.pageY) : this.actionObj.clone.offsetTop;\n        clnHeight = (clnTop < 0) ? this.actionObj.clone.offsetHeight :\n            (this.actionObj.clone.offsetTop + this.actionObj.clone.offsetHeight) > this.scrollArgs.height ?\n                this.actionObj.clone.offsetHeight : clnHeight;\n        clnTop = (clnTop < 0) ? 0 : clnTop;\n        clnTop = isTop ? Math.floor(clnTop / slotInterval) * slotInterval : clnTop;\n        clnHeight = clnTop + clnHeight >= viewElement.scrollHeight ? viewElement.scrollHeight - clnTop :\n            Math.ceil(clnHeight / slotInterval) * slotInterval;\n        if (!isTop && this.actionObj.clone.offsetTop + clnHeight >= this.parent.getContentTable().offsetHeight) {\n            clnHeight = this.parent.getContentTable().offsetHeight - this.actionObj.clone.offsetTop;\n        }\n        var styles = {\n            height: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(clnHeight < this.actionObj.cellHeight ? Math.floor(clnHeight / slotInterval) * slotInterval : clnHeight),\n            top: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)((clnHeight < this.actionObj.cellHeight && isTop) ? Math.ceil(clnTop / slotInterval) * slotInterval : clnTop),\n            left: '0px', right: '0px', width: '100%'\n        };\n        return styles;\n    };\n    Resize.prototype.getLeftRightStyles = function (e, isLeft) {\n        var styles = {};\n        var isTimelineView = this.parent.activeView.isTimelineView();\n        var isTimeViews = ['TimelineDay', 'TimelineWeek', 'TimelineWorkWeek'].indexOf(this.parent.currentView) > -1 &&\n            this.parent.activeViewOptions.timeScale.enable;\n        var slotInterval = (this.actionObj.cellWidth / this.actionObj.slotInterval) * this.actionObj.interval;\n        var pageWidth = isLeft ? (this.actionObj.X - this.actionObj.pageX) : (this.actionObj.pageX - this.actionObj.X);\n        var targetWidth = isTimelineView ?\n            Math.round(this.parent.getElementWidth(this.actionObj.element) / this.actionObj.cellWidth) * this.actionObj.cellWidth :\n            this.parent.currentView === 'Month' ? this.parent.getElementWidth(this.actionObj.element) :\n                Math.ceil(this.parent.getElementWidth(this.actionObj.element) / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n        var offsetWidth = targetWidth + (Math.ceil(pageWidth / this.actionObj.cellWidth) * this.actionObj.cellWidth);\n        var left = (this.parent.enableRtl) ? parseInt(this.actionObj.element.style.right, 10) : this.actionObj.clone.offsetLeft;\n        left = Math.round(left / slotInterval) * slotInterval;\n        if (isTimeViews) {\n            offsetWidth = targetWidth + (Math.ceil(pageWidth / slotInterval) * slotInterval);\n            if (!isLeft) {\n                var roundedLeft = (+parseFloat(this.actionObj.element.style[this.parent.enableRtl ? 'right' : 'left'])).toFixed(1);\n                var roundedWidth = Math.round(targetWidth / slotInterval) * slotInterval;\n                if (roundedLeft !== left.toFixed(1) || roundedWidth !== targetWidth) {\n                    offsetWidth = (Math.round((left + offsetWidth) / slotInterval) * slotInterval) - left;\n                }\n            }\n            this.actionObj.event[this.parent.eventFields.isAllDay] = false;\n        }\n        var width = !isLeft && ((offsetWidth + this.actionObj.clone.offsetLeft > this.scrollArgs.width)) ?\n            this.parent.getElementWidth(this.actionObj.clone) : (offsetWidth < this.actionObj.cellWidth) ? offsetWidth : offsetWidth;\n        if (this.parent.enableRtl) {\n            var rightValue = isTimelineView ? parseInt(this.actionObj.element.style.right, 10) :\n                -(offsetWidth - this.actionObj.cellWidth);\n            rightValue = isTimelineView ? rightValue : isLeft ? 0 : rightValue > 0 ? 0 : rightValue;\n            if (isTimelineView && !isLeft) {\n                rightValue = Math.round(rightValue / slotInterval) * slotInterval;\n                rightValue = rightValue - (Math.ceil((this.actionObj.pageX - this.actionObj.X) / slotInterval) * slotInterval);\n                if (rightValue < 0) {\n                    rightValue = parseInt(this.actionObj.clone.style.right, 10);\n                    width = parseInt(this.actionObj.clone.style.width, 10);\n                }\n            }\n            rightValue = rightValue >= this.scrollArgs.width ? this.scrollArgs.width - this.actionObj.cellWidth : rightValue;\n            styles.right = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(rightValue);\n            width = width + rightValue > this.scrollArgs.width ? this.parent.getElementWidth(this.actionObj.clone) : width;\n        }\n        else {\n            var offsetLeft = isLeft ? this.actionObj.element.offsetLeft - (this.actionObj.X - this.actionObj.pageX) :\n                this.parent.enableRtl ? this.actionObj.element.offsetLeft : 0;\n            if (isTimelineView) {\n                offsetLeft = isLeft ? offsetLeft : parseInt(this.actionObj.clone.style.left, 10);\n                if (this.parent.enableRtl) {\n                    offsetLeft = !isLeft ? (this.actionObj.pageX < this.actionObj.X - this.parent.getElementWidth(this.actionObj.clone))\n                        ? parseInt(this.actionObj.clone.style.right, 10) : offsetLeft : offsetLeft;\n                }\n                else {\n                    offsetLeft = isLeft ? (this.actionObj.pageX > this.actionObj.X + this.parent.getElementWidth(this.actionObj.clone) &&\n                        this.parent.getElementWidth(this.actionObj.clone) === this.actionObj.cellWidth) ?\n                        parseInt(this.actionObj.clone.style.left, 10) : offsetLeft : offsetLeft;\n                }\n            }\n            var leftValue = offsetLeft;\n            offsetLeft = isTimelineView ? isTimeViews ? isLeft ? this.actionObj.element.offsetLeft -\n                (Math.ceil((this.actionObj.element.offsetLeft - offsetLeft) / slotInterval) * slotInterval) : offsetLeft :\n                Math.floor(offsetLeft / this.actionObj.cellWidth) * this.actionObj.cellWidth :\n                Math.ceil(Math.abs(offsetLeft) / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n            if (offsetLeft < 0) {\n                if (isTimelineView && isLeft && (offsetLeft % slotInterval)) {\n                    offsetLeft = parseInt(this.actionObj.clone.style.left, 10);\n                    width = parseInt(this.actionObj.clone.style.width, 10);\n                }\n                else {\n                    offsetLeft = 0;\n                    width = this.parent.getElementWidth(this.actionObj.clone);\n                }\n            }\n            var cloneWidth = Math.ceil(this.parent.getElementWidth(this.actionObj.clone) / this.actionObj.cellWidth) *\n                this.actionObj.cellWidth;\n            if (isLeft) {\n                styles.left = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(isTimelineView ? offsetLeft : isLeft ? leftValue < 0 ? -offsetLeft :\n                    (Math.ceil((targetWidth - cloneWidth) / this.actionObj.cellWidth) * this.actionObj.cellWidth) : offsetLeft);\n            }\n        }\n        styles.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(width);\n        return styles;\n    };\n    Resize.prototype.resizeValidation = function (e) {\n        var pages = this.parent.eventBase.getPageCoordinates(e);\n        var viewDimension = this.getContentAreaDimension();\n        var isTimeScale = this.parent.activeView.isTimelineView() && this.parent.activeViewOptions.timeScale.enable;\n        var cellWidth = this.actionObj.cellWidth;\n        var resizeValidation = false;\n        if (this.resizeEdges.left) {\n            if (pages.pageX < viewDimension.leftOffset && pages.pageX >= viewDimension.left && isTimeScale) {\n                cellWidth = 0;\n            }\n            resizeValidation = (pages.pageX - cellWidth) >= viewDimension.left;\n        }\n        if (this.resizeEdges.right) {\n            if (pages.pageX > viewDimension.rightOffset && pages.pageX <= viewDimension.right && isTimeScale) {\n                cellWidth = 0;\n            }\n            resizeValidation = (pages.pageX + cellWidth) <= viewDimension.right;\n        }\n        if (this.resizeEdges.top) {\n            resizeValidation = this.actionObj.clone.offsetTop >= viewDimension.top;\n        }\n        if (this.resizeEdges.bottom) {\n            resizeValidation = (this.actionObj.clone.offsetTop + this.actionObj.clone.offsetHeight) <= this.scrollArgs.height;\n        }\n        return resizeValidation;\n    };\n    /**\n     * Get module name\n     *\n     * @returns {string} Returns the module name..\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    return Resize;\n}(_actions_action_base__WEBPACK_IMPORTED_MODULE_1__.ActionBase));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-schedule/src/schedule/actions/resize.js?");

/***/ })

}]);