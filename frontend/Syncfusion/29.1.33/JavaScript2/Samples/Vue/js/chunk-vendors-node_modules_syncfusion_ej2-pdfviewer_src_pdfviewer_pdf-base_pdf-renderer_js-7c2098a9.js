"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-pdfviewer_src_pdfviewer_pdf-base_pdf-renderer_js-7c2098a9"],{

/***/ "./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/pdf-base/pdf-renderer.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/pdf-base/pdf-renderer.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Annotations: () => (/* binding */ Annotations),\n/* harmony export */   PdfRenderer: () => (/* binding */ PdfRenderer),\n/* harmony export */   SizeBase: () => (/* binding */ SizeBase)\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/pdf-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-pdf */ \"./node_modules/@syncfusion/ej2-pdf/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../index */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/index.js\");\n/* harmony import */ var _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-drawings */ \"./node_modules/@syncfusion/ej2-drawings/index.js\");\n/* harmony import */ var _base_pdfviewer_utlis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../base/pdfviewer-utlis */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/base/pdfviewer-utlis.js\");\n\n\n\n\n\n\n/**\n * PdfRenderer\n *\n * @hidden\n */\nvar PdfRenderer = /** @class */ (function () {\n    /**\n     * @param {PdfViewer} pdfViewer - The PdfViewer.\n     * @param {PdfViewerBase} pdfViewerBase - The PdfViewerBase.\n     * @private\n     */\n    function PdfRenderer(pdfViewer, pdfViewerBase) {\n        /**\n         * @private\n         */\n        this.bookmarkStyles = [];\n        /**\n         * @private\n         */\n        this.bookmarkCollection = [];\n        /**\n         * @private\n         */\n        this.pageRotationCollection = [];\n        /**\n         * @private\n         */\n        this.bookmarkDictionary = {};\n        this.annotationDetailCollection = {};\n        /**\n         * @private\n         */\n        this.documentTextCollection = [];\n        this.pageSizes = {};\n        this.isCompletePageSizeNotReceieved = true;\n        this.x = 0;\n        this.y = 0;\n        this.zoom = 1;\n        this.id = 0;\n        this.pageIndex = 0;\n        this.textCollections = [];\n        this.scaleFactor = 1.5;\n        this.restrictionList = [];\n        this.securityList = ['Print', 'EditContent', 'CopyContent', 'EditAnnotations', 'FillFields', 'AccessibilityCopyContent', 'AssembleDocument', 'FullQualityPrint'];\n        this._fallbackFontCollection = {};\n        this.document = null;\n        /**\n         * @private\n         */\n        this.searchResults = {};\n        this.isDummyInserted = false;\n        this.pdfViewer = pdfViewer;\n        this.pdfViewerBase = pdfViewerBase;\n    }\n    Object.defineProperty(PdfRenderer.prototype, \"PageCount\", {\n        /**\n         * @private\n         * @returns {void}\n         */\n        get: function () {\n            return this.pageCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRenderer.prototype, \"ReferencePath\", {\n        /**\n         * @private\n         * @returns {void}\n         */\n        get: function () {\n            return this.mReferencePath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRenderer.prototype, \"referencePath\", {\n        /**\n         * @private\n         * @param {string} v - v\n         * @returns {void}\n         */\n        set: function (v) {\n            this.mReferencePath = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRenderer.prototype, \"ScaleFactor\", {\n        /**\n         * @private\n         * @returns {void}\n         */\n        get: function () {\n            return this.scaleFactor;\n        },\n        /**\n         * @private\n         * @param {string} v - v\n         */\n        set: function (v) {\n            this.scaleFactor = v;\n            if (this.scaleFactor <= 0) {\n                this.scaleFactor = 1;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRenderer.prototype, \"FallbackFontCollection\", {\n        /**\n         * @private\n         * @returns {void}\n         */\n        get: function () {\n            return this._fallbackFontCollection;\n        },\n        /**\n         * @private\n         * @param {string} v - v\n         */\n        set: function (v) {\n            this._fallbackFontCollection = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {string} documentData - documentData\n     * @param {string} documentId - documentId\n     * @param {string} password - password\n     * @param {any} jsonObject - jsonObject\n     * @private\n     * @returns {void}\n     */\n    PdfRenderer.prototype.load = function (documentData, documentId, password, jsonObject) {\n        try {\n            if (jsonObject.action !== 'VirtualLoad') {\n                this.loadedDocument = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfDocument(documentData, password ? password : '');\n                this.loadedByteArray = documentData;\n                this.password = password;\n                this.isCompletePageSizeNotReceieved = true;\n            }\n        }\n        catch (error) {\n            if (error.message === 'Invalid PDF structure.') {\n                return '3';\n            }\n            else if (error.message === 'Cannot open an encrypted document. The password is invalid.') {\n                return '4';\n            }\n            else if (error.message === 'Invalid cross reference') {\n                return '4';\n            }\n            else {\n                return error.message;\n            }\n        }\n        var jsonResult = this.loadDocument(documentData, documentId, password, jsonObject);\n        this.bookmarkStyles = [];\n        this.bookmarkCollection = [];\n        this.bookmarkDictionary = {};\n        return JSON.stringify(jsonResult);\n    };\n    /**\n     * @param {string} documentData - documentData\n     * @param {string} documentId - documentId\n     * @param {string} password - password\n     * @param {any} jsonObject - jsonObject\n     * @private\n     * @returns {void}\n     */\n    PdfRenderer.prototype.loadImportDocument = function (documentData, documentId, password, jsonObject) {\n        try {\n            if (jsonObject.action !== 'VirtualLoad') {\n                this.loadImportedDocument = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfDocument(documentData, password ? password : '');\n                this.loadImportedBase64String = documentData;\n                this.importedDocpassword = password;\n            }\n        }\n        catch (error) {\n            if (error.message === 'Invalid PDF structure.') {\n                return '3';\n            }\n            else if (error.message === 'Cannot open an encrypted document. The password is invalid.') {\n                return '4';\n            }\n            else if (error.message === 'Invalid cross reference') {\n                return '4';\n            }\n            else {\n                return error.message;\n            }\n        }\n        var jsonResult = { uniqueId: documentId, password: this.importedDocpassword };\n        this.loadImportedDocument.destroy();\n        this.loadImportedDocument = null;\n        return JSON.stringify(jsonResult);\n    };\n    /**\n     * @param {string} documentData - documentData\n     * @param {string} documentId - documentId\n     * @param {string} password - password\n     * @param {any} jsonObject - jsonObject\n     * @private\n     * @returns {void}\n     */\n    PdfRenderer.prototype.loadDocument = function (documentData, documentId, password, jsonObject) {\n        if (Object.prototype.hasOwnProperty.call(jsonObject, 'isCompletePageSizeNotReceived')) {\n            this.isCompletePageSizeNotReceieved = !jsonObject.isCompletePageSizeNotReceived;\n        }\n        this.pageCount = this.loadedDocument.pageCount;\n        this.pageSizes = this.getPageSizes(this.pageCount);\n        var pdfRenderedFormFields = [];\n        var isDigitalSignaturePresent = false;\n        var isTaggedPdf = false; //Need to check and set if loaddocument is tagged pdf\n        this.formFieldsBase = new _index__WEBPACK_IMPORTED_MODULE_0__.FormFieldsBase(this.pdfViewer, this.pdfViewerBase, isDigitalSignaturePresent);\n        this.restrictionList = [];\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.loadedDocument)) {\n            this.documentSecurity(password);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.loadedDocument)) {\n            if (Object.prototype.hasOwnProperty.call(jsonObject, 'hideEmptyDigitalSignatureFields')) {\n                this.formFieldsBase.hideEmptyDigitalSignatureFields = jsonObject['hideEmptyDigitalSignatureFields'];\n            }\n            if (Object.prototype.hasOwnProperty.call(jsonObject, 'showDigitalSignatureAppearance')) {\n                this.formFieldsBase.showDigitalSignatureAppearance = jsonObject['showDigitalSignatureAppearance'];\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.formFieldsBase) && this.pageSizes && Object.keys(this.pageSizes).length <= 100) {\n            this.formFieldsBase.GetFormFields();\n            pdfRenderedFormFields = this.formFieldsBase.PdfRenderedFormFields;\n        }\n        if (this.formFieldsBase.mIsDigitalSignaturePresent) {\n            var digitalSignatureDoc = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfDocument(documentData, '');\n            var loadedForm = digitalSignatureDoc.form;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(loadedForm) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(loadedForm._fields)) {\n                for (var i = 0; i < loadedForm.count; i++) {\n                    if (loadedForm.fieldAt(i) instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfSignatureField) {\n                        var signatureField = loadedForm.fieldAt(i);\n                        if (signatureField.isSigned && this.formFieldsBase.showDigitalSignatureAppearance) {\n                            signatureField.flatten = true;\n                        }\n                    }\n                }\n            }\n            this.digitialByteArray = digitalSignatureDoc.save();\n            digitalSignatureDoc.destroy();\n        }\n        return { pageCount: this.pageCount, pageSizes: this.pageSizes, uniqueId: documentId,\n            PdfRenderedFormFields: pdfRenderedFormFields, RestrictionSummary: this.restrictionList,\n            isDigitalSignaturePresent: this.formFieldsBase.mIsDigitalSignaturePresent,\n            digitialSignatureFile: this.digitialByteArray ? true : false,\n            isTaggedPdf: isTaggedPdf, pageRotation: this.pageRotationCollection };\n    };\n    PdfRenderer.prototype.documentSecurity = function (password) {\n        var isOwnerPassword = this.loadedDocument.isEncrypted &&\n            (!this.loadedDocument.isUserPassword || this.loadedDocument._hasUserPasswordOnly);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(password) && password !== '' && isOwnerPassword) {\n            this.restrictionSummary(password, true);\n        }\n        else {\n            this.restrictionSummary(password, false);\n        }\n    };\n    PdfRenderer.prototype.restrictionSummary = function (password, isOwner) {\n        var ownerPassword = password ? password : ''; //Need to set owner password from loaded document\n        var userPassword = password ? password : ''; //Need to set user password from loaded document\n        var permissionList = this.getPermissionArray(this.loadedDocument.permissions);\n        var isEncrypted = this.loadedDocument.isEncrypted;\n        if ((!(permissionList.length === 1 && permissionList[0] === 'Default')) || (isEncrypted && ownerPassword === '' && userPassword === '')) {\n            for (var i = 0; i < this.securityList.length; i++) {\n                var isExist = false;\n                for (var j = 0; j < permissionList.length; j++) {\n                    if (permissionList[parseInt(j.toString(), 10)].trim() === this.securityList[parseInt(i.toString(), 10)].trim()) {\n                        isExist = true;\n                        break;\n                    }\n                }\n                if (!isExist && !isOwner) {\n                    this.restrictionList.push(this.securityList[parseInt(i.toString(), 10)].trim());\n                }\n            }\n        }\n        else if (permissionList.length === 1 && permissionList[0] === 'Default' && isEncrypted && !isOwner) {\n            for (var i = 0; i < this.securityList.length; i++) {\n                this.restrictionList.push(this.securityList[parseInt(i.toString(), 10)].trim());\n            }\n        }\n    };\n    PdfRenderer.prototype.getPermissionArray = function (permission) {\n        var permissionArray = [];\n        if (permission === _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfPermissionFlag.default) {\n            permissionArray.push('Default');\n        }\n        else {\n            if (permission & _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfPermissionFlag.fullQualityPrint) {\n                permissionArray.push('FullQualityPrint');\n            }\n            if (permission & _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfPermissionFlag.assembleDocument) {\n                permissionArray.push('AssembleDocument');\n            }\n            if (permission & _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfPermissionFlag.accessibilityCopyContent) {\n                permissionArray.push('AccessibilityCopyContent');\n            }\n            if (permission & _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfPermissionFlag.fillFields) {\n                permissionArray.push('FillFields');\n            }\n            if (permission & _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfPermissionFlag.editAnnotations) {\n                permissionArray.push('EditAnnotations');\n            }\n            if (permission & _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfPermissionFlag.copyContent) {\n                permissionArray.push('CopyContent');\n            }\n            if (permission & _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfPermissionFlag.editContent) {\n                permissionArray.push('EditContent');\n            }\n            if (permission & _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfPermissionFlag.print) {\n                permissionArray.push('Print');\n            }\n        }\n        return permissionArray;\n    };\n    PdfRenderer.prototype.getPageSizes = function (pageCount) {\n        var pageSizes = {};\n        var pageLimit = pageCount;\n        if (pageCount > 100) {\n            pageLimit = 100;\n        }\n        if (this.isCompletePageSizeNotReceieved) {\n            for (var i = 0; i < pageLimit; i++) {\n                pageSizes[i.toString()] = this.getPageSize(i);\n                var page = this.loadedDocument.getPage(i);\n                var rotation = page.rotation % 4;\n                this.pageRotationCollection.push(rotation);\n            }\n        }\n        else {\n            for (var i = pageLimit; i < pageCount; i++) {\n                pageSizes[i.toString()] = this.getPageSize(i);\n                var page = this.loadedDocument.getPage(i);\n                var rotation = page.rotation % 4;\n                this.pageRotationCollection.push(rotation);\n            }\n        }\n        return pageSizes;\n    };\n    /**\n     * @param {number} pageNumber - pageNumber\n     * @private\n     * @returns {void}\n     */\n    PdfRenderer.prototype.getPageSize = function (pageNumber) {\n        var page = this.loadedDocument.getPage(pageNumber);\n        var size = page.size;\n        var rotation = page.rotation % 4;\n        if (rotation === _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle0 || rotation === _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle180) {\n            return new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_4__.Size(this.convertPointToPixel(size[0]), this.convertPointToPixel(size[1]));\n        }\n        else {\n            return new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_4__.Size(this.convertPointToPixel(size[1]), this.convertPointToPixel(size[0]));\n        }\n    };\n    PdfRenderer.prototype.convertPointToPixel = function (number) {\n        return number * 96 / 72;\n    };\n    PdfRenderer.prototype.convertPixelToPoint = function (value) {\n        return (value * (72 / 96));\n    };\n    /**\n     * @param {string} jsonObject - jsonObject\n     * @private\n     * @returns {void}\n     */\n    PdfRenderer.prototype.getDocumentAsBase64 = function (jsonObject) {\n        this.loadedDocument = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfDocument(this.loadedByteArray, this.password);\n        var clonedDocument = null;\n        if (Object.prototype.hasOwnProperty.call(jsonObject, 'digitalSignatureDocumentEdited') &&\n            !jsonObject.digitalSignatureDocumentEdited) {\n            return this.loadedByteArray;\n        }\n        else {\n            var annotationRenderer = new _index__WEBPACK_IMPORTED_MODULE_0__.AnnotationRenderer(this.pdfViewer, this.pdfViewerBase);\n            var formfields = new _index__WEBPACK_IMPORTED_MODULE_0__.FormFieldsBase(this.pdfViewer, this.pdfViewerBase);\n            // create object for form fields signature\n            annotationRenderer.removeSignatureTypeAnnot(jsonObject, this.loadedDocument);\n            this.orderAnnotations(jsonObject);\n            if (Object.prototype.hasOwnProperty.call(jsonObject, 'isFormFieldAnnotationsExist') && jsonObject.isFormFieldAnnotationsExist) {\n                if (Object.prototype.hasOwnProperty.call(jsonObject, 'formDesigner') && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(jsonObject['formDesigner'])) {\n                    formfields.saveFormFieldsDesignerData(jsonObject);\n                }\n                else if (Object.prototype.hasOwnProperty.call(jsonObject, 'fieldsData')) {\n                    formfields.saveFormFieldsData(jsonObject);\n                }\n            }\n            if (Object.prototype.hasOwnProperty.call(jsonObject, 'organizePages')) {\n                var savedBase64String = this.loadedDocument.save();\n                clonedDocument = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfDocument(savedBase64String, this.password);\n                var organizePages = JSON.parse(jsonObject.organizePages);\n                if (organizePages.length > 0) {\n                    var reorderedPages = this.rearrangePages(organizePages);\n                    this.deletePdfPages(organizePages, reorderedPages);\n                    this.insertPdfPages(organizePages);\n                    this.copyPages(organizePages, clonedDocument);\n                    this.rotatePages(organizePages);\n                    this.importPages(organizePages);\n                    if (this.isDummyInserted) {\n                        this.loadedDocument.removePage(this.loadedDocument.pageCount - 1);\n                        this.isDummyInserted = false;\n                    }\n                }\n                clonedDocument.destroy();\n                clonedDocument = null;\n            }\n            var documentSaved = this.loadedDocument.save();\n            if (this.document != null) {\n                this.document.destroy();\n                this.document = null;\n            }\n            return documentSaved;\n        }\n    };\n    PdfRenderer.prototype.rearrangePages = function (organizePages) {\n        var _this = this;\n        var reorderedPageIndices = [];\n        if (organizePages.length > 0) {\n            var clonedCollection = JSON.parse(JSON.stringify(organizePages));\n            var sortedCollection = clonedCollection.sort(function (a, b) { return _this.pdfViewer.pageOrganizer.sorting(a['currentPageIndex'], b['currentPageIndex']); });\n            for (var i = 0; i < sortedCollection.length; i++) {\n                var currentPageDetails = sortedCollection[parseInt(i.toString(), 10)];\n                if (!currentPageDetails.isInserted && !currentPageDetails.isCopied && !currentPageDetails.isImportedDoc && currentPageDetails['currentPageIndex'] !== null && currentPageDetails['pageIndex'] !== null && parseInt(currentPageDetails['pageIndex'].toString(), 10) >= 0) {\n                    reorderedPageIndices.push(parseInt(currentPageDetails['pageIndex'].toString(), 10));\n                }\n            }\n            // eslint-disable-next-line\n            var deltetedPages = sortedCollection.filter(function (item) { return item.isDeleted && item['currentPageIndex'] === null; });\n            for (var i = 0; i < deltetedPages.length; i++) {\n                var deletedPage = deltetedPages[parseInt(i.toString(), 10)];\n                reorderedPageIndices = reorderedPageIndices.slice(0, deletedPage.pageIndex).concat([deletedPage.pageIndex], reorderedPageIndices.slice(deletedPage.pageIndex));\n            }\n            if (reorderedPageIndices.length > 0) {\n                this.loadedDocument.reorderPages(reorderedPageIndices);\n            }\n        }\n        return reorderedPageIndices;\n    };\n    PdfRenderer.prototype.rotatePages = function (organizePages) {\n        if (organizePages.length > 0) {\n            var importPageCount = 0;\n            for (var i = 0; i < organizePages.length; i++) {\n                var pageNumber = organizePages[parseInt(i.toString(), 10)].pageIndex;\n                var currentPageNumber = organizePages[parseInt(i.toString(), 10)].currentPageIndex;\n                var isDeleted = organizePages[parseInt(i.toString(), 10)].isDeleted;\n                var isInserted = organizePages[parseInt(i.toString(), 10)].isInserted;\n                var isCopied = organizePages[parseInt(i.toString(), 10)].isCopied;\n                var isImportedDoc = organizePages[parseInt(i.toString(), 10)].isImportedDoc;\n                var rotation = organizePages[parseInt(i.toString(), 10)].rotateAngle;\n                if (isImportedDoc) {\n                    importPageCount++;\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(currentPageNumber) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(rotation) &&\n                    !isDeleted && !isInserted && !isCopied && !isImportedDoc && pageNumber !== -1) {\n                    var page = this.loadedDocument.getPage(currentPageNumber - importPageCount);\n                    page.rotation = this.getPdfRotationAngle(rotation);\n                }\n            }\n        }\n    };\n    PdfRenderer.prototype.insertPdfPages = function (organizePages) {\n        if (organizePages.length > 0) {\n            var copiedPageCount = 0;\n            for (var i = 0; i < organizePages.length; i++) {\n                var pageNumber = organizePages[parseInt(i.toString(), 10)].pageIndex;\n                var currentPageNumber = organizePages[parseInt(i.toString(), 10)].currentPageIndex;\n                var isDeleted = organizePages[parseInt(i.toString(), 10)].isDeleted;\n                var isInserted = organizePages[parseInt(i.toString(), 10)].isInserted;\n                var isCopied = organizePages[parseInt(i.toString(), 10)].isCopied;\n                var isImportedDoc = organizePages[parseInt(i.toString(), 10)].isImportedDoc;\n                var pageSize = void 0;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(organizePages[parseInt(i.toString(), 10)].pageSize)) {\n                    pageSize = [this.convertPixelToPoint(organizePages[parseInt(i.toString(), 10)].pageSize.width),\n                        this.convertPixelToPoint(organizePages[parseInt(i.toString(), 10)].pageSize.height)];\n                }\n                if (isCopied || isImportedDoc) {\n                    copiedPageCount++;\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(currentPageNumber) && !isDeleted && isInserted && pageNumber === -1) {\n                    var rotation = organizePages[parseInt(i.toString(), 10)].rotateAngle;\n                    var pageSettings = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfPageSettings();\n                    pageSettings.rotation = this.getPdfRotationAngle(rotation);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(pageSize)) {\n                        pageSettings.size = pageSize;\n                    }\n                    this.loadedDocument.addPage(currentPageNumber - copiedPageCount, pageSettings);\n                }\n            }\n        }\n    };\n    PdfRenderer.prototype.copyPages = function (organizePages, clonedDocument) {\n        if (organizePages.length > 0) {\n            var importPageCount = 0;\n            for (var i = 0; i < organizePages.length; i++) {\n                var pageNumber = organizePages[parseInt(i.toString(), 10)].pageIndex;\n                var currentPageNumber = organizePages[parseInt(i.toString(), 10)].currentPageIndex;\n                var copiedPageIndex = organizePages[parseInt(i.toString(), 10)].copiedPageIndex;\n                var isDeleted = organizePages[parseInt(i.toString(), 10)].isDeleted;\n                var isInserted = organizePages[parseInt(i.toString(), 10)].isInserted;\n                var isCopied = organizePages[parseInt(i.toString(), 10)].isCopied;\n                var isImportedDoc = organizePages[parseInt(i.toString(), 10)].isImportedDoc;\n                var rotation = organizePages[parseInt(i.toString(), 10)].rotateAngle;\n                if (isImportedDoc) {\n                    importPageCount++;\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(currentPageNumber) && !isDeleted && !isInserted && !isImportedDoc && isCopied && pageNumber === -1) {\n                    var pageToImport = clonedDocument.getPage(copiedPageIndex);\n                    pageToImport.rotation = this.getPdfRotationAngle(rotation);\n                    var options = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfPageImportOptions();\n                    options.targetIndex = currentPageNumber - importPageCount;\n                    options.groupFormFields = true;\n                    this.loadedDocument.importPage(pageToImport, clonedDocument, options);\n                }\n            }\n        }\n    };\n    PdfRenderer.prototype.importPages = function (organizePages) {\n        if (organizePages.length > 0) {\n            for (var i = organizePages.length - 1; i >= 0; i--) {\n                var pageNumber = organizePages[parseInt(i.toString(), 10)].pageIndex;\n                var currentPageNumber = organizePages[parseInt(i.toString(), 10)].currentPageIndex;\n                var isDeleted = organizePages[parseInt(i.toString(), 10)].isDeleted;\n                var isInserted = organizePages[parseInt(i.toString(), 10)].isInserted;\n                var isCopied = organizePages[parseInt(i.toString(), 10)].isCopied;\n                var isImportedDoc = organizePages[parseInt(i.toString(), 10)].isImportedDoc;\n                var documentData = organizePages[parseInt(i.toString(), 10)].documentData;\n                var password = organizePages[parseInt(i.toString(), 10)].password;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(currentPageNumber) && !isDeleted && !isInserted && !isCopied && isImportedDoc &&\n                    pageNumber === -1) {\n                    var importedDocCountBefore = 0;\n                    for (var j = 0; j < i; j++) {\n                        if (organizePages[parseInt(j.toString(), 10)].isImportedDoc) {\n                            importedDocCountBefore++;\n                        }\n                    }\n                    documentData = this.pdfViewerBase.convertBase64(documentData);\n                    this.document = null;\n                    this.document = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfDocument(documentData, password);\n                    var options = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfPageImportOptions();\n                    options.targetIndex = currentPageNumber - importedDocCountBefore;\n                    options.groupFormFields = true;\n                    this.loadedDocument.importPageRange(this.document, 0, this.document.pageCount - 1, options);\n                }\n            }\n        }\n    };\n    PdfRenderer.prototype.deletePdfPages = function (organizePages, reorderedPages) {\n        if (organizePages.length > 0) {\n            var clonedCollection = JSON.parse(JSON.stringify(organizePages));\n            var sortedCollection = [];\n            var deleteCount = 0;\n            var initialPageCount = this.loadedDocument.pageCount;\n            var _loop_1 = function (i) {\n                if (clonedCollection.\n                    find(function (item) { return item.pageIndex === reorderedPages[parseInt(i.toString(), 10)]; })) {\n                    sortedCollection[parseInt(i.toString(), 10)] = clonedCollection.\n                        find(function (item) { return item.pageIndex === reorderedPages[parseInt(i.toString(), 10)]; });\n                }\n            };\n            for (var i = 0; i < clonedCollection.length; i++) {\n                _loop_1(i);\n            }\n            for (var i = sortedCollection.length - 1; i >= 0; i--) {\n                var count = 0;\n                var pageNumber = sortedCollection[parseInt(i.toString(), 10)].pageIndex;\n                var isDeleted = sortedCollection[parseInt(i.toString(), 10)].isDeleted;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(pageNumber) && isDeleted) {\n                    if (deleteCount + 1 === initialPageCount) {\n                        this.loadedDocument.addPage();\n                        this.isDummyInserted = true;\n                    }\n                    for (var j = i - 1; j >= 0; j--) {\n                        if (!(i === sortedCollection[parseInt(i.toString(), 10)].pageIndex)) {\n                            count++;\n                        }\n                    }\n                    if (count > sortedCollection[parseInt(i.toString(), 10)].pageIndex) {\n                        count = count - sortedCollection[parseInt(i.toString(), 10)].pageIndex;\n                        this.loadedDocument.removePage(pageNumber + count);\n                    }\n                    else {\n                        this.loadedDocument.removePage(pageNumber);\n                    }\n                    deleteCount++;\n                }\n            }\n        }\n    };\n    PdfRenderer.prototype.getPdfRotationAngle = function (rotation) {\n        switch (rotation) {\n            case 0:\n                return _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle0;\n            case 90:\n                return _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle90;\n            case 180:\n                return _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle180;\n            case 270:\n                return _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle270;\n            default:\n                return _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle0;\n        }\n    };\n    /**\n     * @param {any} jsonObject - jsonObject\n     * @private\n     * @returns {any} - any\n     */\n    PdfRenderer.prototype.importAnnotations = function (jsonObject) {\n        try {\n            var annotationRenderer = new _index__WEBPACK_IMPORTED_MODULE_0__.AnnotationRenderer(this.pdfViewer, this.pdfViewerBase);\n            var annotData = jsonObject['importedData'];\n            annotationRenderer.removeSignatureTypeAnnot(jsonObject, this.loadedDocument);\n            var annotationDataFormat = jsonObject['annotationDataFormat'];\n            if (typeof annotationDataFormat === 'string') {\n                this.loadedDocument._allowImportCustomData = true;\n                switch (annotationDataFormat.toLowerCase()) {\n                    case 'json':\n                        this.loadedDocument.importAnnotations(annotData, _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.DataFormat.json);\n                        break;\n                    case 'xfdf':\n                        this.loadedDocument.importAnnotations(annotData, _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.DataFormat.xfdf);\n                        break;\n                    default:\n                        break;\n                }\n                for (var i = 0; i < this.loadedDocument.pageCount; i++) {\n                    var pageNumber = i;\n                    var pageSize = this.getPageSize(pageNumber);\n                    var renderer = new _index__WEBPACK_IMPORTED_MODULE_0__.PageRenderer(this.pdfViewer, this.pdfViewerBase);\n                    renderer.exportAnnotationComments(pageNumber, pageSize);\n                    this.annotationDetailCollection[i.toString()] = new Annotations();\n                    this.annotationDetailCollection[parseInt(i.toString(), 10)].textMarkupAnnotation = renderer.textMarkupAnnotationList;\n                    this.annotationDetailCollection[parseInt(i.toString(), 10)].shapeAnnotation = renderer.shapeAnnotationList;\n                    this.annotationDetailCollection[parseInt(i.toString(), 10)].measureShapeAnnotation = renderer.measureAnnotationList;\n                    this.annotationDetailCollection[parseInt(i.toString(), 10)].stampAnnotations = renderer.rubberStampAnnotationList;\n                    this.annotationDetailCollection[parseInt(i.toString(), 10)].stickyNotesAnnotation = renderer.stickyAnnotationList;\n                    this.annotationDetailCollection[parseInt(i.toString(), 10)].freeTextAnnotation = renderer.freeTextAnnotationList;\n                    this.annotationDetailCollection[parseInt(i.toString(), 10)].signatureAnnotation = renderer.signatureAnnotationList;\n                    this.annotationDetailCollection[parseInt(i.toString(), 10)].signatureInkAnnotation =\n                        renderer.signatureInkAnnotationList;\n                    this.annotationDetailCollection[parseInt(i.toString(), 10)].annotationOrder = renderer.annotationOrder;\n                    this.removeAnnotationsFromCollection(renderer);\n                }\n                var returnAnnot = JSON.parse(JSON.stringify(this.annotationDetailCollection));\n                if (Object.prototype.hasOwnProperty.call(jsonObject, 'uniqueId')) {\n                    return { pdfAnnotation: returnAnnot, uniqueId: jsonObject['uniqueId'] };\n                }\n                else {\n                    return { pdfAnnotation: returnAnnot };\n                }\n            }\n        }\n        catch (e) {\n            return e.message;\n        }\n    };\n    PdfRenderer.prototype.removeAnnotationsFromCollection = function (renderer) {\n        renderer.textMarkupAnnotationList = [];\n        renderer.shapeAnnotationList = [];\n        renderer.measureAnnotationList = [];\n        renderer.rubberStampAnnotationList = [];\n        renderer.stickyAnnotationList = [];\n        renderer.freeTextAnnotationList = [];\n        renderer.signatureAnnotationList = [];\n        renderer.signatureInkAnnotationList = [];\n        renderer.annotationOrder = [];\n    };\n    /**\n     * @param {string} jsonObject - jsonObject\n     * @param {boolean} isObject - isObject\n     * @private\n     * @returns {void}\n     */\n    PdfRenderer.prototype.exportAnnotation = function (jsonObject, isObject) {\n        var annotationRenderer = new _index__WEBPACK_IMPORTED_MODULE_0__.AnnotationRenderer(this.pdfViewer, this.pdfViewerBase);\n        annotationRenderer.removeSignatureTypeAnnot(jsonObject, this.loadedDocument);\n        this.orderAnnotations(jsonObject);\n        var settings = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfAnnotationExportSettings();\n        var annotationDataFormat = jsonObject['annotationDataFormat'];\n        var fileName;\n        var exportObject;\n        if (typeof annotationDataFormat === 'string') {\n            switch (annotationDataFormat.toLowerCase()) {\n                case 'json':\n                    settings.dataFormat = _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.DataFormat.json;\n                    if (isObject) {\n                        settings.exportAppearance = isObject;\n                        exportObject = this.loadedDocument.exportAnnotations(settings);\n                        return exportObject;\n                    }\n                    else {\n                        fileName = this.changeFileExtension(this.pdfViewer.fileName, 'json');\n                        return this.loadedDocument.exportAnnotations(settings);\n                    }\n                case 'xfdf':\n                    settings.dataFormat = _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.DataFormat.xfdf;\n                    if (isObject) {\n                        settings.exportAppearance = isObject;\n                        exportObject = this.loadedDocument.exportAnnotations(settings);\n                        return exportObject;\n                    }\n                    else {\n                        fileName = this.changeFileExtension(this.pdfViewer.fileName, 'xfdf');\n                        return this.loadedDocument.exportAnnotations(settings);\n                    }\n                // Add more cases for other supported formats as needed\n                default:\n                    break;\n            }\n        }\n        return null;\n    };\n    PdfRenderer.prototype.changeFileExtension = function (filename, newExtension) {\n        var lastDotIndex = filename.lastIndexOf('.');\n        if (lastDotIndex === -1) {\n            // No extension found in the filename\n            return filename + '.' + newExtension;\n        }\n        var nameWithoutExtension = filename.slice(0, lastDotIndex);\n        return nameWithoutExtension + '.' + newExtension;\n    };\n    PdfRenderer.prototype.orderAnnotations = function (jsonObject) {\n        var annotationRenderer = new _index__WEBPACK_IMPORTED_MODULE_0__.AnnotationRenderer(this.pdfViewer, this.pdfViewerBase);\n        var signatureModule = new _index__WEBPACK_IMPORTED_MODULE_0__.SignatureBase(this.pdfViewer, this.pdfViewerBase);\n        if (Object.prototype.hasOwnProperty.call(jsonObject, 'isAnnotationsExist') && jsonObject.isAnnotationsExist) {\n            if (Object.prototype.hasOwnProperty.call(jsonObject, 'annotationCollection')) {\n                var annotationDetails = JSON.parse(jsonObject.annotationCollection);\n                var count = annotationDetails.length;\n                var _loop_2 = function (i) {\n                    var annotationType = annotationDetails[parseInt(i.toString(), 10)].shapeAnnotationType;\n                    var details = annotationDetails[parseInt(i.toString(), 10)];\n                    if (Object.prototype.hasOwnProperty.call(details, 'calibrate') && (details['shapeAnnotationType'] === 'Circle' || details['shapeAnnotationType'] === 'Line' || details['shapeAnnotationType'] === 'Polygon' || details['shapeAnnotationType'] === 'Polyline')) {\n                        annotationType = 'measureShapes';\n                    }\n                    else if (!(Object.prototype.hasOwnProperty.call(details, 'calibrate')) && (details['shapeAnnotationType'] === 'Line' || details['shapeAnnotationType'] === 'Circle' || details['shapeAnnotationType'] === 'Polygon' || details['shapeAnnotationType'] === 'Square' || details['shapeAnnotationType'] === 'Polyline')) {\n                        annotationType = 'shapeAnnotation';\n                    }\n                    switch (annotationType) {\n                        case 'textMarkup':\n                            if (Object.prototype.hasOwnProperty.call(jsonObject, 'textMarkupAnnotations')) {\n                                var textMarkupDetails = JSON.parse(jsonObject.textMarkupAnnotations);\n                                var pageNumber = details['pageNumber'].toString();\n                                var annotationCount = textMarkupDetails[parseInt(pageNumber, 10)];\n                                var pageAnnotations = annotationCount;\n                                var textMarkup = pageAnnotations.find(function (obj) { return obj['annotName'].toString() === details['annotationId'].toString(); });\n                                if (textMarkup) {\n                                    details = textMarkup;\n                                    annotationRenderer.addTextMarkup(details, this_1.loadedDocument);\n                                }\n                            }\n                            break;\n                        case 'shapeAnnotation':\n                            if (Object.prototype.hasOwnProperty.call(jsonObject, 'shapeAnnotations')) {\n                                var shapeDetails = JSON.parse(jsonObject.shapeAnnotations);\n                                var pageNumber = details['pageNumber'].toString();\n                                var annotationCount = shapeDetails[parseInt(pageNumber, 10)];\n                                var pageAnnotations = annotationCount;\n                                var page = this_1.loadedDocument.getPage(parseInt(pageNumber, 10));\n                                var shape = pageAnnotations.find(function (obj) { return obj['annotName'].toString() === details['annotationId'].toString(); });\n                                if (shape) {\n                                    details = shape;\n                                    annotationRenderer.addShape(details, page);\n                                }\n                            }\n                            break;\n                        case 'stamp':\n                            if (Object.prototype.hasOwnProperty.call(jsonObject, 'stampAnnotations')) {\n                                var stampdetails = JSON.parse(jsonObject.stampAnnotations);\n                                var pageNumber = details['pageNumber'].toString();\n                                var annotationCount = stampdetails[parseInt(pageNumber, 10)];\n                                var pageAnnotations = annotationCount;\n                                var page = this_1.loadedDocument.getPage(parseInt(pageNumber, 10));\n                                var stamp = pageAnnotations.find(function (obj) { return obj['annotName'].toString() === details['annotationId'].toString(); });\n                                if (stamp) {\n                                    details = stamp;\n                                    annotationRenderer.addCustomStampAnnotation(details, page);\n                                }\n                            }\n                            break;\n                        case 'measureShapes':\n                            if (Object.prototype.hasOwnProperty.call(jsonObject, 'measureShapeAnnotations')) {\n                                var shapeDetails = JSON.parse(jsonObject.measureShapeAnnotations);\n                                var pageNumber = details['pageNumber'].toString();\n                                var annotationCount = shapeDetails[parseInt(pageNumber, 10)];\n                                var pageAnnotations = annotationCount;\n                                var page = this_1.loadedDocument.getPage(parseInt(pageNumber, 10));\n                                var shape = pageAnnotations.find(function (obj) { return obj['annotName'].toString() === details['annotationId'].toString(); });\n                                if (shape) {\n                                    details = shape;\n                                    annotationRenderer.addMeasure(details, page);\n                                }\n                            }\n                            break;\n                        case 'sticky':\n                            if (Object.prototype.hasOwnProperty.call(jsonObject, 'stickyNotesAnnotation')) {\n                                var shapeDetails = JSON.parse(jsonObject.stickyNotesAnnotation);\n                                var pageNumber = details['pageNumber'].toString();\n                                var annotationCount = shapeDetails[parseInt(pageNumber, 10)];\n                                var pageAnnotations = annotationCount;\n                                var page = this_1.loadedDocument.getPage(parseInt(pageNumber, 10));\n                                var shape = pageAnnotations.find(function (obj) { return obj['annotName'].toString() === details['annotationId'].toString(); });\n                                if (shape) {\n                                    details = shape;\n                                    annotationRenderer.addStickyNotes(details, page);\n                                }\n                            }\n                            break;\n                        case 'Ink':\n                            if (Object.prototype.hasOwnProperty.call(jsonObject, 'inkSignatureData')) {\n                                var shapeDetails = JSON.parse(jsonObject.inkSignatureData);\n                                var pageNumber = details['pageNumber'].toString();\n                                var annotationCount = shapeDetails[parseInt(pageNumber, 10)];\n                                var pageAnnotations = annotationCount;\n                                var page = this_1.loadedDocument.getPage(parseInt(pageNumber, 10));\n                                var shape = pageAnnotations.find(function (obj) { return obj['annotName'].toString() === details['annotationId'].toString(); });\n                                if (shape) {\n                                    details = shape;\n                                    annotationRenderer.saveInkSignature(details, page);\n                                }\n                            }\n                            break;\n                        case 'FreeText':\n                            if (Object.prototype.hasOwnProperty.call(jsonObject, 'freeTextAnnotation')) {\n                                var freeTextDetails = JSON.parse(jsonObject.freeTextAnnotation);\n                                var pageNumber = details['pageNumber'].toString();\n                                var annotationCount = freeTextDetails[parseInt(pageNumber, 10)];\n                                var pageAnnotations = annotationCount;\n                                var page = this_1.loadedDocument.getPage(parseInt(pageNumber, 10));\n                                var freeText = pageAnnotations.find(function (obj) { return obj['annotName'].toString() === details['annotationId'].toString(); });\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(freeText)) {\n                                    details = freeText;\n                                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this_1.FallbackFontCollection) &&\n                                        Object.keys(this_1.FallbackFontCollection).length !== 0) {\n                                        annotationRenderer.addFreeText(details, page, this_1.FallbackFontCollection);\n                                    }\n                                    else {\n                                        annotationRenderer.addFreeText(details, page);\n                                    }\n                                }\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                };\n                var this_1 = this;\n                for (var i = 0; i < count; i++) {\n                    _loop_2(i);\n                }\n                if (jsonObject.signatureData) {\n                    if (jsonObject.isSignatureEdited) {\n                        signatureModule.saveSignatureAsAnnotatation(jsonObject, this.loadedDocument);\n                    }\n                    else {\n                        signatureModule.saveSignatureData(jsonObject, this.loadedDocument);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {any} jsonObject - jsonObject\n     * @private\n     * @returns {void}\n     */\n    PdfRenderer.prototype.getAnnotationComments = function (jsonObject) {\n        try {\n            if (Object.prototype.hasOwnProperty.call(jsonObject, 'pageStartIndex') && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(jsonObject.pageStartIndex)) {\n                var pageStartIndex = parseInt(jsonObject.pageStartIndex, 10);\n                var pageEndIndex = parseInt(jsonObject.pageEndIndex, 10);\n                var annotationDetails = {};\n                for (var i = pageStartIndex; i < pageEndIndex; i++) {\n                    var pageNumber = i;\n                    var pageSize = this.getPageSize(pageNumber);\n                    this.renderer = new _index__WEBPACK_IMPORTED_MODULE_0__.PageRenderer(this.pdfViewer, this.pdfViewerBase);\n                    annotationDetails[pageNumber.toString()] = this.renderer.exportAnnotationComments(pageNumber, pageSize);\n                }\n                return { uniqueId: jsonObject.uniqueId, annotationDetails: annotationDetails,\n                    startPageIndex: pageStartIndex, endPageIndex: pageEndIndex, isAnnotationPresent: this.renderer.isAnnotationPresent };\n            }\n            return '';\n        }\n        catch (error) {\n            return error.message;\n        }\n    };\n    /**\n     * @param {any} jsonObject - jsonObject\n     * @private\n     * @returns {void}\n     */\n    PdfRenderer.prototype.getBookmarks = function (jsonObject) {\n        try {\n            var bookmark = this.loadedDocument.bookmarks;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(bookmark) && Object.prototype.hasOwnProperty.call(jsonObject, 'bookmarkStyles')) {\n                for (var i = 0; i < bookmark.count; i++) {\n                    this.retrieveFontStyles(bookmark.at(i), false);\n                }\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(bookmark) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(bookmark.count) || bookmark.count === 0) {\n                return null;\n            }\n            else {\n                for (var i = 0; i < bookmark.count; i++) {\n                    var pdfLoadedBookmark = bookmark.at(i);\n                    var parentBookmarkDestination = new _index__WEBPACK_IMPORTED_MODULE_0__.BookmarkDestination();\n                    var bookmarkDestination = pdfLoadedBookmark.destination ?\n                        pdfLoadedBookmark.destination : pdfLoadedBookmark.namedDestination ?\n                        pdfLoadedBookmark.namedDestination.destination ? pdfLoadedBookmark.namedDestination.destination : null : null;\n                    parentBookmarkDestination.X = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(bookmarkDestination) ? bookmarkDestination.location[0] : 0;\n                    parentBookmarkDestination.PageIndex = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(bookmarkDestination) ? bookmarkDestination.pageIndex : 0;\n                    parentBookmarkDestination.Zoom = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(bookmarkDestination) ? bookmarkDestination.zoom : 0;\n                    var parentBookmark = new _index__WEBPACK_IMPORTED_MODULE_0__.BookmarkBase();\n                    parentBookmark.Id = ++this.id;\n                    parentBookmark.Title = pdfLoadedBookmark.title;\n                    parentBookmark.Child = [];\n                    parentBookmark.FileName = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(pdfLoadedBookmark.action) ? pdfLoadedBookmark.action.toString() : '';\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(bookmarkDestination)) {\n                        if (bookmarkDestination.page.rotation === _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle90) {\n                            parentBookmarkDestination.Y = this.convertPointToPixel(bookmarkDestination.page.size[0]) -\n                                this.convertPointToPixel(Math.abs(bookmarkDestination.location[1]));\n                        }\n                        else if (bookmarkDestination.page.rotation === _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle270) {\n                            parentBookmarkDestination.Y = this.convertPointToPixel(Math.abs(bookmarkDestination.location[1]));\n                        }\n                        else {\n                            parentBookmarkDestination.Y = this.convertPointToPixel(bookmarkDestination.page.size[1]) -\n                                this.convertPointToPixel(Math.abs(bookmarkDestination.location[1]));\n                        }\n                    }\n                    else {\n                        parentBookmarkDestination.Y = 0;\n                    }\n                    this.bookmarkDictionary[this.id.toString()] = parentBookmarkDestination;\n                    parentBookmark.Child = this.getChildrenBookmark(pdfLoadedBookmark);\n                    if (parentBookmark.Child.length > 0) {\n                        parentBookmark.HasChild = true;\n                    }\n                    this.bookmarkCollection.push(parentBookmark);\n                }\n            }\n            if (Object.prototype.hasOwnProperty.call(jsonObject, 'uniqueId')) {\n                return { Bookmarks: JSON.parse(JSON.stringify(this.bookmarkCollection)), BookmarksDestination: JSON.parse(JSON.stringify(this.bookmarkDictionary)), uniqueId: jsonObject['uniqueId'].toString(), Bookmarkstyles: JSON.parse(JSON.stringify(this.bookmarkStyles)) };\n            }\n            else {\n                return { Bookmarks: JSON.parse(JSON.stringify(this.bookmarkCollection)), BookmarksDestination: JSON.parse(JSON.stringify(this.bookmarkDictionary)), Bookmarkstyles: JSON.parse(JSON.stringify(this.bookmarkStyles)) };\n            }\n        }\n        catch (error) {\n            return error.message;\n        }\n    };\n    PdfRenderer.prototype.retrieveFontStyles = function (listElement, isChild) {\n        var currentElement = listElement;\n        var currentStyles = new _index__WEBPACK_IMPORTED_MODULE_0__.BookmarkStyles();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(currentElement)) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(currentElement.color)) {\n                currentStyles.Color = 'rgba(' + currentElement.color[0] + ',' + currentElement.color[1] + ',' + currentElement.color[2] + ',' + 1 + ')';\n            }\n            currentStyles.FontStyle = this.getPdfTextStyleString(currentElement.textStyle);\n            currentStyles.Text = currentElement.title;\n            currentStyles.IsChild = isChild;\n            this.bookmarkStyles.push(currentStyles);\n            this.getChildrenStyles(listElement);\n        }\n    };\n    PdfRenderer.prototype.getPdfTextStyleString = function (textStyle) {\n        switch (textStyle) {\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfTextStyle.bold:\n                return 'Bold';\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfTextStyle.italic:\n                return 'Italic';\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfTextStyle.regular:\n                return 'Regular';\n            default:\n                return 'Regular';\n        }\n    };\n    PdfRenderer.prototype.getChildrenStyles = function (bookmarks) {\n        for (var i = 0; i < bookmarks.count; i++) {\n            this.retrieveFontStyles(bookmarks.at(i), true);\n        }\n    };\n    PdfRenderer.prototype.getChildrenBookmark = function (pdfLoadedBookmark) {\n        var childBookmarkCollection = [];\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(pdfLoadedBookmark) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(pdfLoadedBookmark.count) && pdfLoadedBookmark.count > 0) {\n            for (var i = 0; i < pdfLoadedBookmark.count; i++) {\n                var child = pdfLoadedBookmark.at(i);\n                var childBookmarkDestination = child.destination ? child.destination :\n                    child.namedDestination ? child.namedDestination.destination ? child.namedDestination.destination : null : null;\n                this.id++;\n                var title = child.title;\n                this.pageIndex = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(childBookmarkDestination) ? childBookmarkDestination.pageIndex : 0;\n                this.x = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(childBookmarkDestination) ? childBookmarkDestination.location[0] : 0;\n                var yPosition = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(childBookmarkDestination) ? Math.abs(childBookmarkDestination.location[1]) : 0;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(childBookmarkDestination)) {\n                    if (childBookmarkDestination.page.rotation === _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle90) {\n                        this.y = this.convertPointToPixel(childBookmarkDestination.page.size[0]) - this.convertPointToPixel(yPosition);\n                    }\n                    else if (childBookmarkDestination.page.rotation === _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle270) {\n                        this.y = this.convertPointToPixel(yPosition);\n                    }\n                    else {\n                        this.y = this.convertPointToPixel(childBookmarkDestination.page.size[1]) - this.convertPointToPixel(yPosition);\n                    }\n                    this.zoom = childBookmarkDestination.zoom;\n                }\n                else {\n                    this.y = 0;\n                    this.zoom = 0;\n                }\n                var childrenBookmark = new _index__WEBPACK_IMPORTED_MODULE_0__.BookmarkBase();\n                childrenBookmark.Title = title;\n                childrenBookmark.Id = this.id;\n                childrenBookmark.Child = [];\n                childrenBookmark.FileName = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(child.action) ? child.action.toString() : '';\n                var childrenBookmarkDestination = new _index__WEBPACK_IMPORTED_MODULE_0__.BookmarkDestination();\n                childrenBookmarkDestination.X = this.x;\n                childrenBookmarkDestination.Y = this.y;\n                childrenBookmarkDestination.PageIndex = this.pageIndex;\n                childrenBookmarkDestination.Zoom = this.zoom;\n                this.bookmarkDictionary[this.id.toString()] = childrenBookmarkDestination;\n                childBookmarkCollection.push(childrenBookmark);\n                childrenBookmark.Child = this.getChildrenBookmark(child);\n                if (childrenBookmark.Child.length > 0) {\n                    childrenBookmark.HasChild = true;\n                }\n            }\n        }\n        return childBookmarkCollection;\n    };\n    /**\n     * @param {number} pageIndex - pageIndex\n     * @private\n     * @returns {void}\n     */\n    PdfRenderer.prototype.getHyperlinks = function (pageIndex) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.renderer)) {\n            this.renderer = new _index__WEBPACK_IMPORTED_MODULE_0__.PageRenderer(this.pdfViewer, this.pdfViewerBase);\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.renderer.hyperlinks)) {\n            this.renderer.hyperlinks = [];\n        }\n        this.exportHyperlinks(pageIndex, this.getPageSize(pageIndex), false, true);\n        return { hyperlinks: this.renderer.hyperlinks, hyperlinkBounds: this.renderer.hyperlinkBounds,\n            linkAnnotation: this.renderer.annotationList, linkPage: this.renderer.annotationDestPage,\n            annotationLocation: this.renderer.annotationYPosition };\n    };\n    PdfRenderer.prototype.exportHyperlinks = function (pageIndex, pageSize, isExport, isAnnotationNeeded) {\n        var page = this.loadedDocument.getPage(pageIndex);\n        this.renderer.hyperlinks = [];\n        this.renderer.hyperlinkBounds = [];\n        this.renderer.annotationDestPage = [];\n        this.renderer.annotationList = [];\n        this.renderer.annotationYPosition = [];\n        for (var i = 0; i < page.annotations.count; i++) {\n            if (page.annotations.at(i) instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfUriAnnotation) {\n                var pdfLoadedUriAnnotation = page.annotations.at(i);\n                var rectangle = this.getHyperlinkBounds(pdfLoadedUriAnnotation.bounds, pageSize, page.rotation);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.renderer.hyperlinks)) {\n                    this.renderer.hyperlinks = [];\n                    this.renderer.hyperlinkBounds = [];\n                }\n                this.renderer.hyperlinks.push(pdfLoadedUriAnnotation.uri);\n                this.renderer.hyperlinkBounds.push(rectangle);\n            }\n            else if (page.annotations.at(i) instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfTextWebLinkAnnotation) {\n                var pdfLoadedTextWebLinkAnnotation = page.annotations.at(i);\n                var rectangle = this.getHyperlinkBounds(pdfLoadedTextWebLinkAnnotation.bounds, pageSize, page.rotation);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.renderer.hyperlinks)) {\n                    this.renderer.hyperlinks = [];\n                    this.renderer.hyperlinkBounds = [];\n                }\n                this.renderer.hyperlinks.push(pdfLoadedTextWebLinkAnnotation.url);\n                this.renderer.hyperlinkBounds.push(rectangle);\n            }\n            else if (page.annotations.at(i) instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfDocumentLinkAnnotation) {\n                var pdfLoadedDocumentLinkAnnotation = page.annotations.at(i);\n                var rectangle = this.getHyperlinkBounds(pdfLoadedDocumentLinkAnnotation.bounds, pageSize, page.rotation);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.renderer.annotationDestPage)) {\n                    this.renderer.annotationDestPage = [];\n                    this.renderer.annotationList = [];\n                    this.renderer.annotationYPosition = [];\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(pdfLoadedDocumentLinkAnnotation.destination)) {\n                    var linkPageIndex = pdfLoadedDocumentLinkAnnotation.destination.pageIndex;\n                    this.renderer.annotationDestPage.push(linkPageIndex);\n                    this.renderer.annotationList.push(rectangle);\n                    if (page.rotation === _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle180) {\n                        this.renderer.annotationYPosition.push(this.convertPointToPixel(Math.abs(pdfLoadedDocumentLinkAnnotation.\n                            destination.location[1])));\n                    }\n                    else if (page.rotation === _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle90 || page.rotation === _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle270) {\n                        this.renderer.annotationYPosition.push(pageSize.width -\n                            this.convertPointToPixel(Math.abs(pdfLoadedDocumentLinkAnnotation.destination.location[1])));\n                    }\n                    else {\n                        this.renderer.annotationYPosition.push(pageSize.height -\n                            this.convertPointToPixel(Math.abs(pdfLoadedDocumentLinkAnnotation.destination.location[1])));\n                    }\n                }\n            }\n        }\n    };\n    PdfRenderer.prototype.getHyperlinkBounds = function (bounds, pageSize, pageRotation) {\n        var bound;\n        if (pageRotation === _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle0) {\n            bound = new _index__WEBPACK_IMPORTED_MODULE_0__.AnnotBounds(this.convertPointToPixel(bounds.x), this.convertPointToPixel(bounds.y), this.convertPointToPixel(bounds.width), this.convertPointToPixel(bounds.height));\n        }\n        else if (pageRotation === _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle90) {\n            bound = new _index__WEBPACK_IMPORTED_MODULE_0__.AnnotBounds(pageSize.width - this.convertPointToPixel(bounds.y - bounds.height), this.convertPointToPixel(bounds.x), this.convertPointToPixel(bounds.height), this.convertPointToPixel(bounds.width));\n        }\n        else if (pageRotation === _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle180) {\n            bound = new _index__WEBPACK_IMPORTED_MODULE_0__.AnnotBounds(pageSize.width - this.convertPointToPixel(bounds.x - bounds.width), pageSize.height - this.convertPointToPixel(bounds.y - bounds.height), this.convertPointToPixel(bounds.width), this.convertPointToPixel(bounds.height));\n        }\n        else if (pageRotation === _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfRotationAngle.angle270) {\n            bound = new _index__WEBPACK_IMPORTED_MODULE_0__.AnnotBounds(this.convertPointToPixel(bounds.y), pageSize.height -\n                this.convertPointToPixel(bounds.x - bounds.width), this.convertPointToPixel(bounds.height), this.convertPointToPixel(bounds.width));\n        }\n        return bound;\n    };\n    /**\n     * @param {any} jsonObject - jsonObject\n     * @param {boolean} isObjects - isObjects\n     * @private\n     * @returns {void}\n     */\n    PdfRenderer.prototype.exportFormFields = function (jsonObject, isObjects) {\n        var formFields = new _index__WEBPACK_IMPORTED_MODULE_0__.FormFieldsBase(this.pdfViewer, this.pdfViewerBase);\n        formFields.saveFormFieldsData(jsonObject);\n        formFields.saveFormFieldsDesignerData(jsonObject);\n        if (!Object.prototype.hasOwnProperty.call(jsonObject, 'fileName')) {\n            jsonObject['fileName'] = 'undefined.pdf';\n        }\n        this.loadedDocument.form.exportEmptyFields = true;\n        var dataFormat = _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.DataFormat.json;\n        if (Object.prototype.hasOwnProperty.call(jsonObject, 'formFieldDataFormat')) {\n            dataFormat = this.exportDataFormat(jsonObject['formFieldDataFormat']);\n        }\n        var settings = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.PdfFormFieldExportSettings();\n        var fileName;\n        var exportFormFieldObject;\n        settings.dataFormat = dataFormat;\n        if (isObjects) {\n            exportFormFieldObject = this.loadedDocument.exportFormData(settings);\n            return exportFormFieldObject;\n        }\n        else {\n            fileName = this.changeFileExtension(this.pdfViewer.fileName, this.fileFormat(dataFormat));\n            return this.loadedDocument.exportFormData(settings);\n        }\n    };\n    /**\n     * @param {any} jsonObject - jsonObject\n     * @private\n     * @returns {any} - any\n     */\n    PdfRenderer.prototype.importFormFields = function (jsonObject) {\n        try {\n            var formFields = new _index__WEBPACK_IMPORTED_MODULE_0__.FormFieldsBase(this.pdfViewer, this.pdfViewerBase);\n            formFields.saveFormFieldsDesignerData(jsonObject);\n            var dataFormat = this.exportDataFormat(jsonObject['formFieldDataFormat']);\n            if (!this.isBase64(jsonObject['data']) && !this.isUint8Array(jsonObject['data'])) {\n                if (jsonObject['formFieldDataFormat'] === 'Json') {\n                    jsonObject['data'] = JSON.parse(jsonObject['data']);\n                }\n                var encoder = new TextEncoder();\n                var uint8ArrayLike = encoder.encode(jsonObject['data']);\n                jsonObject['data'] = new Uint8Array(uint8ArrayLike);\n            }\n            if (Object.prototype.hasOwnProperty.call(jsonObject, 'formFieldDataFormat')) {\n                this.loadedDocument.importFormData(jsonObject['data'], dataFormat);\n            }\n            formFields = new _index__WEBPACK_IMPORTED_MODULE_0__.FormFieldsBase(this.pdfViewer, this.pdfViewerBase);\n            formFields.GetFormFields();\n            var PdfRenderedFormFields = [];\n            PdfRenderedFormFields = formFields.PdfRenderedFormFields;\n            return { PdfRenderedFormFields: PdfRenderedFormFields };\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    PdfRenderer.prototype.isUint8Array = function (value) {\n        return value instanceof Uint8Array;\n    };\n    PdfRenderer.prototype.isBase64 = function (str) {\n        // Base64 regular expression pattern\n        /* eslint-disable-next-line security/detect-unsafe-regex */\n        var base64Regex = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\n        return base64Regex.test(str);\n    };\n    PdfRenderer.prototype.exportDataFormat = function (format) {\n        var exportFormat;\n        switch (format) {\n            case 'Json':\n                exportFormat = _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.DataFormat.json;\n                break;\n            case 'Xfdf':\n                exportFormat = _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.DataFormat.xfdf;\n                break;\n            case 'Fdf':\n                exportFormat = _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.DataFormat.fdf;\n                break;\n            case 'Xml':\n                exportFormat = _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_2__.DataFormat.xml;\n                break;\n        }\n        return exportFormat;\n    };\n    PdfRenderer.prototype.fileFormat = function (value) {\n        var fileExtention;\n        switch (value) {\n            case 0:\n                fileExtention = 'fdf';\n                break;\n            case 1:\n                fileExtention = 'xfdf';\n                break;\n            case 2:\n                fileExtention = 'json';\n                break;\n            case 3:\n                fileExtention = 'xml';\n                break;\n        }\n        return fileExtention;\n    };\n    /**\n     * @param {number} pageIndex - It sets the page index\n     * @private\n     * @returns {Promise<string>} - promise\n     */\n    PdfRenderer.prototype.exportAsImage = function (pageIndex) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            resolve(_this.pdfiumExportAsImage(pageIndex));\n        });\n    };\n    /**\n     * @param {number} startIndex - It gets the start index value\n     * @param {number} endIndex - It gets the end index value\n     * @private\n     * @returns { Promise<string[]>} - Promise\n     */\n    PdfRenderer.prototype.exportAsImages = function (startIndex, endIndex) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            resolve(_this.pdfiumExportAsImages(startIndex, endIndex));\n        });\n    };\n    /**\n     * @param {number} pageIndex - It gets the start index value\n     * @param {Size} size - It gets the size value\n     * @private\n     * @returns { Promise<string[]>} - Promise\n     */\n    PdfRenderer.prototype.exportAsImagewithSize = function (pageIndex, size) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            resolve(_this.pdfiumExportAsImage(pageIndex, size));\n        });\n    };\n    /**\n     * @param {number} startIndex - It gets the start index value\n     * @param {number} endIndex - It gets the end index value\n     * @param {Size} size - It gets the size value\n     * @private\n     * @returns { Promise<string[]>} - Promise\n     */\n    PdfRenderer.prototype.exportAsImagesWithSize = function (startIndex, endIndex, size) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            resolve(_this.pdfiumExportAsImages(startIndex, endIndex, size));\n        });\n    };\n    PdfRenderer.prototype.pdfiumExportAsImage = function (pageIndex, size) {\n        var _this = this;\n        // eslint-disable-next-line\n        var proxy = this;\n        return new Promise(function (resolve, reject) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(_this.pdfViewerBase.pdfViewerRunner) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(_this.loadedDocument)) {\n                size = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(size) ? size : null;\n                _this.pdfViewerBase.pdfViewerRunner.addTask({ pageIndex: pageIndex, message: 'extractImage', zoomFactor: _this.pdfViewer.magnificationModule.zoomFactor, isTextNeed: false, size: size }, _base_pdfviewer_utlis__WEBPACK_IMPORTED_MODULE_5__.TaskPriorityLevel.Medium);\n                _this.pdfViewerBase.pdfViewerRunner.onMessage('imageExtracted', function (event) {\n                    if (event.data.message === 'imageExtracted') {\n                        var canvas = document.createElement('canvas');\n                        var _a = event.data, value = _a.value, width = _a.width, height = _a.height;\n                        canvas.width = width;\n                        canvas.height = height;\n                        var canvasContext = canvas.getContext('2d');\n                        var imageData = canvasContext.createImageData(width, height);\n                        imageData.data.set(value);\n                        canvasContext.putImageData(imageData, 0, 0);\n                        var imageUrl = canvas.toDataURL();\n                        proxy.pdfViewerBase.releaseCanvas(canvas);\n                        resolve(imageUrl);\n                    }\n                });\n            }\n            else {\n                resolve(null);\n            }\n        });\n    };\n    PdfRenderer.prototype.pdfiumExportAsImages = function (startIndex, endIndex, size) {\n        var _this = this;\n        // eslint-disable-next-line\n        var proxy = this;\n        return new Promise(function (resolve, reject) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(_this.pdfViewerBase.pdfViewerRunner) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(_this.loadedDocument)) {\n                if (startIndex < 0) {\n                    startIndex = 0;\n                }\n                if (endIndex > _this.loadedDocument.pageCount - 1) {\n                    endIndex = _this.loadedDocument.pageCount - 1;\n                }\n                if (startIndex > endIndex) {\n                    reject('Invalid page index');\n                }\n                size = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(size) ? size : null;\n                var imageUrls_1 = [];\n                var count_1 = endIndex - startIndex + 1;\n                for (var i = startIndex; i <= endIndex; i++) {\n                    _this.pdfViewerBase.pdfViewerRunner.addTask({ pageIndex: i, message: 'extractImages', zoomFactor: _this.pdfViewer.magnificationModule.zoomFactor, isTextNeed: false, size: size }, _base_pdfviewer_utlis__WEBPACK_IMPORTED_MODULE_5__.TaskPriorityLevel.Medium);\n                }\n                _this.pdfViewerBase.pdfViewerRunner.onMessage('imagesExtracted', function (event) {\n                    if (event.data.message === 'imagesExtracted') {\n                        var canvas = document.createElement('canvas');\n                        var _a = event.data, value = _a.value, width = _a.width, height = _a.height;\n                        canvas.width = width;\n                        canvas.height = height;\n                        var canvasContext = canvas.getContext('2d');\n                        var imageData = canvasContext.createImageData(width, height);\n                        imageData.data.set(value);\n                        canvasContext.putImageData(imageData, 0, 0);\n                        var imageUrl = canvas.toDataURL();\n                        proxy.pdfViewerBase.releaseCanvas(canvas);\n                        imageUrls_1.push(imageUrl);\n                        if (imageUrls_1.length === count_1) {\n                            resolve(imageUrls_1);\n                        }\n                    }\n                });\n            }\n            else {\n                resolve(null);\n            }\n        });\n    };\n    /**\n     * @param {any} event - event\n     * @param {Function} [resolve] - An optional resolve function to complete a Promise when extraction is complete.\n     * @param {number} [count] - An optional count of total expected results used for resolving multiple extractions.\n     * @param {any[]} [textCollections] - An optional array for accumulating text data results when processing in bulk.\n     * @private\n     * @returns {any} - any\n     */\n    PdfRenderer.prototype.textExtractionOnmessage = function (event, resolve, count) {\n        var pageText = '';\n        var textData = [];\n        if ((event.data.message.indexOf('extractText') !== -1) || event.data.message === 'renderThumbnail' || event.data.message === 'renderPreviewTileImage') {\n            var characterDetails = event.data.characterBounds;\n            for (var i = 0; i < characterDetails.length; i++) {\n                if (!event.data.isLayout && characterDetails[parseInt(i.toString(), 10)].Text.indexOf('\\r') !== -1) {\n                    pageText += '';\n                }\n                else {\n                    pageText += characterDetails[parseInt(i.toString(), 10)].Text;\n                }\n                var cropBox = this.loadedDocument.getPage(event.data.pageIndex).cropBox;\n                var bound = new _index__WEBPACK_IMPORTED_MODULE_0__.AnnotBounds(this.convertPixelToPoint(characterDetails[parseInt(i.toString(), 10)].X), this.convertPixelToPoint(characterDetails[parseInt(i.toString(), 10)].Y +\n                    cropBox[1]), this.convertPixelToPoint(characterDetails[parseInt(i.toString(), 10)].Width), this.convertPixelToPoint(characterDetails[parseInt(i.toString(), 10)].Height));\n                textData.push(new TextData(characterDetails[parseInt(i.toString(), 10)].Text, bound));\n            }\n            if (!event.data.isAPI) {\n                var result = {};\n                if (event.data.isRenderText) {\n                    result.extractedTextDetails = { textDataCollection: textData, extractedText: pageText };\n                    result.textBounds = event.data.textBounds;\n                    result.textContent = event.data.textContent;\n                    result.rotation = event.data.rotation;\n                    result.pageText = event.data.pageText;\n                    result.characterBounds = event.data.characterBounds;\n                    result.isRenderText = event.data.isRenderText;\n                    result.pageIndex = event.data.pageIndex;\n                    result.jsonObject = event.data.jsonObject;\n                    result.requestType = event.data.requestType;\n                    result.annotationObject = event.data.annotationObject;\n                    result.isNeedToRender = event.data.isNeedToRender;\n                }\n                else {\n                    result = { textDataCollection: textData, extractedText: pageText,\n                        isRenderText: event.data.isRenderText, pageIndex: event.data.pageIndex,\n                        jsonObject: event.data.jsonObject, requestType: event.data.requestType,\n                        annotationObject: event.data.annotationObject, isNeedToRender: event.data.isNeedToRender };\n                }\n                var pageTextDataCollection = this.getPageTextDataCollection(result);\n                var documentTextCollection = this.getDocumentTextCollection(pageTextDataCollection);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(documentTextCollection)) {\n                    if (documentTextCollection.requestType === 'pageTextRequest') {\n                        this.pdfViewerBase.pageTextRequestSuccess(documentTextCollection, documentTextCollection.pageIndex);\n                    }\n                    else if (documentTextCollection.requestType === 'textRequest') {\n                        this.pdfViewerBase.textRequestSuccess(documentTextCollection, documentTextCollection.pageIndex, documentTextCollection.annotationObject);\n                    }\n                    else if (documentTextCollection.requestType === 'pdfTextSearchRequest') {\n                        this.pdfViewer.textSearchModule.pdfTextSearchRequestSuccess(documentTextCollection, documentTextCollection.pageStartIndex, documentTextCollection.pageEndIndex);\n                    }\n                }\n            }\n            else {\n                if ((event.data.message.indexOf('extractText') !== -1)) {\n                    pageText = event.data.pageText;\n                    var result = function () {\n                        if (event.data.options === _index__WEBPACK_IMPORTED_MODULE_3__.ExtractTextOption.BoundsOnly) {\n                            return { textData: textData };\n                        }\n                        else if (event.data.options === _index__WEBPACK_IMPORTED_MODULE_3__.ExtractTextOption.TextOnly) {\n                            return { pageText: pageText };\n                        }\n                        else {\n                            return { textData: textData, pageText: pageText };\n                        }\n                    };\n                    this.textCollections.push(result());\n                    if (count === 1) {\n                        resolve(result());\n                        this.textCollections = [];\n                    }\n                    else if (this.textCollections.length === count) {\n                        resolve(this.textCollections);\n                        this.textCollections = [];\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Extracts text data and additional details from a range of pages in the PDF document.\n     *\n     * This method performs text extraction on multiple pages defined by the start and end indices,\n     * and returns a promise that resolves to an object containing the extracted text data and page text.\n     *\n     * @param {number} startIndex - The index of the first page from which to start text extraction.\n     * @param {number} endIndex - The index of the last page up to which text extraction should be performed.\n     * @param {ExtractTextOption} options - Specifies options for text extraction, which may include bounds, text only, etc.\n     * @param {boolean} isLayout - Get the isLayout value.\n     * @private\n     * @returns {Promise<{ textData: TextDataSettingsModel[], pageText: string }>} - A promise that resolves with an object containing\n     * an array of text data models representing extracted content and the combined page text of the specified page range.\n     */\n    PdfRenderer.prototype.extractsText = function (startIndex, endIndex, options, isLayout) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            resolve(_this.textExtraction(startIndex, endIndex, options, true, isLayout));\n        });\n    };\n    PdfRenderer.prototype.extractTextFromCharacterDetails = function (characterDetails, cropBox, isLayout, options, documentPageText) {\n        var pageText = '';\n        var textData = [];\n        if (characterDetails.length > 0) {\n            for (var _i = 0, characterDetails_1 = characterDetails; _i < characterDetails_1.length; _i++) {\n                var detail = characterDetails_1[_i];\n                var text = detail.Text;\n                if (options !== _index__WEBPACK_IMPORTED_MODULE_3__.ExtractTextOption.BoundsOnly) {\n                    if (!isLayout && text.indexOf('\\r') !== -1) {\n                        pageText += '';\n                    }\n                    else {\n                        pageText += text;\n                    }\n                }\n                if (options !== _index__WEBPACK_IMPORTED_MODULE_3__.ExtractTextOption.TextOnly) {\n                    var bound = new _index__WEBPACK_IMPORTED_MODULE_0__.AnnotBounds(this.convertPixelToPoint(detail.X), this.convertPixelToPoint(detail.Y + cropBox[1]), this.convertPixelToPoint(detail.Width), this.convertPixelToPoint(detail.Height));\n                    textData.push(new TextData(text, bound));\n                }\n            }\n        }\n        if (documentPageText) {\n            pageText = documentPageText;\n        }\n        if (options === _index__WEBPACK_IMPORTED_MODULE_3__.ExtractTextOption.BoundsOnly) {\n            return { textData: textData };\n        }\n        else if (options === _index__WEBPACK_IMPORTED_MODULE_3__.ExtractTextOption.TextOnly) {\n            return { pageText: pageText };\n        }\n        else {\n            return { textData: textData, pageText: pageText };\n        }\n    };\n    PdfRenderer.prototype.textExtraction = function (startIndex, endIndex, options, isAPI, isLayout, isRenderText, jsonObject, requestType, annotationObject) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var proxy = this;\n        var isSkipCharacterBounds = !isAPI ?\n            ((this.pdfViewer.extractTextOption === _index__WEBPACK_IMPORTED_MODULE_3__.ExtractTextOption.None ||\n                this.pdfViewer.extractTextOption === _index__WEBPACK_IMPORTED_MODULE_3__.ExtractTextOption.TextOnly) ? true : false) : false;\n        if (!isAPI) {\n            this.documentTextCollection = [];\n        }\n        return new Promise(function (resolve, reject) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(proxy.pdfViewerBase.pdfViewerRunner)) {\n                resolve(null);\n                return;\n            }\n            endIndex = Math.min(endIndex, proxy.pdfViewer.pageCount - 1);\n            var count = endIndex - startIndex + 1;\n            var fetchTextCollection = function (i) {\n                return proxy.pdfViewer.textSearch.documentTextCollection[parseInt(i.toString(), 10)]\n                    // eslint-disable-next-line max-len\n                    ? proxy.pdfViewer.textSearch.documentTextCollection[parseInt(i.toString(), 10)][parseInt(i.toString(), 10)]\n                    : null;\n            };\n            var processPage = function (i, msg) {\n                var documentTextCollection = fetchTextCollection(i);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(documentTextCollection) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(documentTextCollection) &&\n                    (((options === _index__WEBPACK_IMPORTED_MODULE_3__.ExtractTextOption.BoundsOnly || options === _index__WEBPACK_IMPORTED_MODULE_3__.ExtractTextOption.TextAndBounds) &&\n                        (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(documentTextCollection.TextData) && documentTextCollection.TextData.length === 0) ||\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(documentTextCollection.TextData))) || ((options === _index__WEBPACK_IMPORTED_MODULE_3__.ExtractTextOption.TextOnly &&\n                    (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(documentTextCollection.PageText) && documentTextCollection.PageText === '') ||\n                    ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(documentTextCollection.PageText)))))) {\n                    proxy.pdfViewerBase.pdfViewerRunner.addTask({\n                        pageIndex: i,\n                        message: msg,\n                        zoomFactor: proxy.pdfViewer.magnificationModule.zoomFactor,\n                        isTextNeed: true,\n                        isLayout: isLayout,\n                        isSkipCharacterBounds: isSkipCharacterBounds,\n                        options: options,\n                        isRenderText: isRenderText,\n                        jsonObject: jsonObject,\n                        requestType: requestType,\n                        annotationObject: annotationObject,\n                        isAPI: isAPI\n                    }, !isAPI ? _base_pdfviewer_utlis__WEBPACK_IMPORTED_MODULE_5__.TaskPriorityLevel.Low : _base_pdfviewer_utlis__WEBPACK_IMPORTED_MODULE_5__.TaskPriorityLevel.Medium);\n                    proxy.pdfViewerBase.pdfViewerRunner.onMessage(msg, function (event) {\n                        if ((event.data.message.indexOf('extractText') !== -1)) {\n                            proxy.textExtractionOnmessage(event, resolve, count);\n                        }\n                    });\n                }\n                else {\n                    var cropBox = proxy.loadedDocument.getPage(i).cropBox;\n                    var result = proxy.extractTextFromCharacterDetails(documentTextCollection.TextData, cropBox, isLayout, options, documentTextCollection.PageText);\n                    proxy.textCollections.push(result);\n                    if (count === 1) {\n                        resolve(result);\n                        proxy.textCollections = [];\n                    }\n                    else if (proxy.textCollections.length === count) {\n                        resolve(proxy.textCollections);\n                        proxy.textCollections = [];\n                    }\n                }\n            };\n            var msg = 'extractText';\n            if (isAPI) {\n                msg = 'extractText_' + _base_pdfviewer_utlis__WEBPACK_IMPORTED_MODULE_5__.PdfViewerUtils.createGUID();\n            }\n            if ((!isAPI && proxy.pdfViewer.extractTextOption !== _index__WEBPACK_IMPORTED_MODULE_3__.ExtractTextOption.None) || isAPI) {\n                for (var i = startIndex; i <= endIndex; i++) {\n                    processPage(i, msg);\n                }\n            }\n        });\n    };\n    PdfRenderer.prototype.getCharacterBounds = function (pageIndex) {\n        var documentIndex = this.pdfViewer.textSearchModule.documentTextCollection[parseInt(pageIndex.toString(), 10)][parseInt(pageIndex.toString(), 10)];\n        return documentIndex.textData || documentIndex.TextData;\n    };\n    /**\n     * @param {any} textData - It describes about the text data\n     * @private\n     * @returns {any} - any\n     */\n    PdfRenderer.prototype.getPageTextDataCollection = function (textData) {\n        var pageTextDataCollection = {};\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(textData)) {\n            var textDetails = textData;\n            if (textData.isRenderText) {\n                textDetails = textData.extractedTextDetails;\n                textDetails.extractedText = textData.pageText;\n            }\n            pageTextDataCollection[textData.pageIndex] =\n                new PageTextData(new SizeBase(this.getPageSize(textData.pageIndex).width, this.getPageSize(textData.pageIndex).height), textDetails.textDataCollection, textDetails.extractedText);\n            if (textData.isRenderText) {\n                return ({ pageTextDataCollection: pageTextDataCollection, textBounds: textData.textBounds,\n                    textContent: textData.textContent, rotation: textData.rotation, characterBounds: textData.characterBounds,\n                    jsonObject: textData.jsonObject, requestType: textData.requestType, pageIndex: textData.pageIndex,\n                    annotationObject: textData.annotationObject, isNeedToRender: textData.isNeedToRender });\n            }\n            else {\n                return (pageTextDataCollection);\n            }\n        }\n        else {\n            return (null);\n        }\n    };\n    /**\n     * @param {any} value - It describes about the value\n     * @private\n     * @returns {any} - any\n     */\n    PdfRenderer.prototype.getDocumentTextCollection = function (value) {\n        var pageStartIndex = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(value.jsonObject.pageStartIndex) ? value.jsonObject.pageStartIndex :\n            value.jsonObject.pageIndex;\n        var pageEndIndex = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(value.jsonObject.pageEndIndex) ? value.jsonObject.pageEndIndex :\n            value.jsonObject.pageIndex + 1;\n        var pageCount = this.loadedDocument.pageCount;\n        var endNumber = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(value.jsonObject.pageStartIndex) ? (pageEndIndex - pageStartIndex) : (pageCount);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(value)) {\n            this.documentTextCollection.push(value.pageTextDataCollection);\n            if (this.documentTextCollection.length === endNumber) {\n                return ({ uniqueId: value.jsonObject.uniqueId,\n                    documentTextCollection: this.documentTextCollection,\n                    pageStartIndex: pageStartIndex,\n                    pageEndIndex: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(value.jsonObject.pageEndIndex) ? pageEndIndex : pageCount,\n                    textBounds: value.textBounds,\n                    textContent: value.textContent,\n                    rotation: value.rotation,\n                    characterBounds: value.characterBounds,\n                    requestType: value.requestType,\n                    pageIndex: value.pageIndex,\n                    annotationObject: value.annotationObject,\n                    isNeedToRender: value.isNeedToRender\n                });\n            }\n        }\n        else {\n            return (null);\n        }\n    };\n    /**\n     * @param {number} pageIndex - It describes about the page index value\n     * @private\n     * @returns {Promise} - Promise\n     */\n    PdfRenderer.prototype.extractTextWithPageSize = function (pageIndex) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            resolve(_this.extractTextDetailsWithPageSize(pageIndex));\n        });\n    };\n    PdfRenderer.prototype.extractTextDetailsWithPageSize = function (pageIndex, isRenderText, jsonObject, requestType, annotationObject) {\n        var pageTextDataCollection = {};\n        this.textExtraction(pageIndex, pageIndex, null, false, true, isRenderText, jsonObject, requestType, annotationObject);\n    };\n    /**\n     * @param {any} jsonObject - jsonObject\n     * @param {string} requestType - It describes about the request type\n     * @param {any} annotationObject - It describes about the annotation object\n     * @private\n     * @returns {void}\n     */\n    PdfRenderer.prototype.getDocumentText = function (jsonObject, requestType, annotationObject) {\n        var pageStartIndex = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(jsonObject.pageStartIndex) ? jsonObject.pageStartIndex : jsonObject.pageIndex;\n        var pageEndIndex = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(jsonObject.pageEndIndex) ? jsonObject.pageEndIndex : jsonObject.pageIndex + 1;\n        var pageCount = this.loadedDocument.pageCount;\n        if (this.pdfViewer.extractTextOption !== _index__WEBPACK_IMPORTED_MODULE_3__.ExtractTextOption.None) {\n            for (var pageIndex = pageStartIndex; pageIndex < pageEndIndex; pageIndex++) {\n                this.extractTextDetailsWithPageSize(pageIndex, true, jsonObject, requestType, annotationObject);\n            }\n        }\n        else {\n            this.pdfViewer.fireTextExtractionCompleted([]);\n        }\n    };\n    PdfRenderer.IsLinuxOS = false;\n    PdfRenderer.IsWindowsOS = false;\n    return PdfRenderer;\n}());\n\nvar TextData = /** @class */ (function () {\n    function TextData(text, bounds) {\n        this.Text = text;\n        this.Bounds = bounds;\n    }\n    return TextData;\n}());\nvar PageTextData = /** @class */ (function () {\n    function PageTextData(pageSize, textData, pageText) {\n        this.PageSize = pageSize;\n        this.TextData = textData;\n        this.PageText = pageText;\n    }\n    return PageTextData;\n}());\n/**\n *\n * @hidden\n */\nvar SizeBase = /** @class */ (function () {\n    function SizeBase(_Width, _Height) {\n        this.IsEmpty = true;\n        this.Width = _Width;\n        this.Height = _Height;\n        this.IsEmpty = false;\n    }\n    return SizeBase;\n}());\n\n/**\n *\n * @hidden\n */\nvar Annotations = /** @class */ (function () {\n    function Annotations() {\n    }\n    return Annotations;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/pdf-base/pdf-renderer.js?");

/***/ })

}]);