"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-lineargauge_src_linear-gauge_utils_helper_js-f1b3cfcf"],{

/***/ "./node_modules/@syncfusion/ej2-lineargauge/src/linear-gauge/utils/helper.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-lineargauge/src/linear-gauge/utils/helper.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Align: () => (/* binding */ Align),\n/* harmony export */   CustomizeOption: () => (/* binding */ CustomizeOption),\n/* harmony export */   GaugeLocation: () => (/* binding */ GaugeLocation),\n/* harmony export */   PathOption: () => (/* binding */ PathOption),\n/* harmony export */   Rect: () => (/* binding */ Rect),\n/* harmony export */   RectOption: () => (/* binding */ RectOption),\n/* harmony export */   Size: () => (/* binding */ Size),\n/* harmony export */   TextOption: () => (/* binding */ TextOption),\n/* harmony export */   VisibleLabels: () => (/* binding */ VisibleLabels),\n/* harmony export */   VisibleRange: () => (/* binding */ VisibleRange),\n/* harmony export */   calculateNiceInterval: () => (/* binding */ calculateNiceInterval),\n/* harmony export */   calculateShapes: () => (/* binding */ calculateShapes),\n/* harmony export */   calculateTextPosition: () => (/* binding */ calculateTextPosition),\n/* harmony export */   convertPixelToValue: () => (/* binding */ convertPixelToValue),\n/* harmony export */   formatValue: () => (/* binding */ formatValue),\n/* harmony export */   getActualDesiredIntervalsCount: () => (/* binding */ getActualDesiredIntervalsCount),\n/* harmony export */   getBox: () => (/* binding */ getBox),\n/* harmony export */   getElement: () => (/* binding */ getElement),\n/* harmony export */   getElementOffset: () => (/* binding */ getElementOffset),\n/* harmony export */   getExtraWidth: () => (/* binding */ getExtraWidth),\n/* harmony export */   getFontStyle: () => (/* binding */ getFontStyle),\n/* harmony export */   getMousePosition: () => (/* binding */ getMousePosition),\n/* harmony export */   getPathToRect: () => (/* binding */ getPathToRect),\n/* harmony export */   getPointer: () => (/* binding */ getPointer),\n/* harmony export */   getRangeColor: () => (/* binding */ getRangeColor),\n/* harmony export */   getRangePalette: () => (/* binding */ getRangePalette),\n/* harmony export */   getTemplateFunction: () => (/* binding */ getTemplateFunction),\n/* harmony export */   measureText: () => (/* binding */ measureText),\n/* harmony export */   removeElement: () => (/* binding */ removeElement),\n/* harmony export */   removeTooltip: () => (/* binding */ removeTooltip),\n/* harmony export */   showTooltip: () => (/* binding */ showTooltip),\n/* harmony export */   stringToNumber: () => (/* binding */ stringToNumber),\n/* harmony export */   stringToNumberSize: () => (/* binding */ stringToNumberSize),\n/* harmony export */   textElement: () => (/* binding */ textElement),\n/* harmony export */   textFormatter: () => (/* binding */ textFormatter),\n/* harmony export */   textTrim: () => (/* binding */ textTrim),\n/* harmony export */   triggerDownload: () => (/* binding */ triggerDownload),\n/* harmony export */   valueToCoefficient: () => (/* binding */ valueToCoefficient),\n/* harmony export */   withInRange: () => (/* binding */ withInRange)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-svg-base */ \"./node_modules/@syncfusion/ej2-svg-base/index.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable jsdoc/require-returns */\n\n\n/**\n * Specifies Linear-Gauge Helper methods\n */\n/** @private */\nfunction stringToNumber(value, containerSize) {\n    return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n}\n/** @private */\nfunction stringToNumberSize(value, containerSize) {\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value)) {\n        return value.indexOf('%') !== -1 ? containerSize : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text to be measured.\n * @param  {FontModel} font - Specifies the font of the text.\n * @returns {Size} Returns the size of the text.\n * @private\n */\nfunction measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    htmlObject.innerText = text;\n    htmlObject.style.position = 'absolute';\n    htmlObject.style.fontSize = font.size;\n    htmlObject.style.fontWeight = font.fontWeight;\n    htmlObject.style.fontStyle = font.fontStyle;\n    htmlObject.style.fontFamily = font.fontFamily;\n    htmlObject.style.visibility = 'hidden';\n    htmlObject.style.top = '-100';\n    htmlObject.style.left = '0';\n    htmlObject.style.whiteSpace = 'nowrap';\n    var size = new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n    //remove(htmlObject);\n    return size;\n}\n/**\n * Trim the title text\n *\n * @private\n *\n */\nfunction textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nfunction withInRange(value, start, end, max, min, type) {\n    var withIn;\n    if (type === 'pointer') {\n        withIn = (((value <= max) && (value >= min)));\n    }\n    else {\n        withIn = (start != null && (start <= max) && (start >= min)) && (end != null && (end <= max) && (end >= min));\n    }\n    return withIn;\n}\nfunction convertPixelToValue(parentElement, pointerElement, orientation, axis, type, location) {\n    var elementRect = parentElement.getBoundingClientRect();\n    var pointerRect = pointerElement.getBoundingClientRect();\n    var height = (pointerElement.id.indexOf('MarkerPointer') > -1) ? (pointerRect.height / 2) :\n        (!axis.isInversed) ? 0 : pointerRect.height;\n    var width = (pointerElement.id.indexOf('MarkerPointer') > -1) ? (pointerRect.width / 2) :\n        (!axis.isInversed) ? pointerRect.width : 0;\n    var size = new Size(axis.lineBounds.width, axis.lineBounds.height);\n    var y = (type === 'drag') ? (location.y - axis.lineBounds.y) :\n        ((pointerRect.top + height) - elementRect.top - axis.lineBounds.y);\n    var extraWidth = getExtraWidth(parentElement);\n    var x = (type === 'drag') ? (location.x - axis.lineBounds.x + extraWidth) :\n        ((pointerRect.left + width) - elementRect.left - axis.lineBounds.x + extraWidth);\n    var newSize = (orientation === 'Vertical') ? size.height : size.width;\n    var divideVal = (orientation === 'Vertical') ? y : x;\n    var value = (orientation === 'Vertical') ? (axis.isInversed) ? (divideVal / newSize) :\n        (1 - (divideVal / newSize)) : (axis.isInversed) ? (1 - (divideVal / newSize)) : (divideVal / newSize);\n    value = value * (axis.visibleRange.delta) + axis.visibleRange.min;\n    return value;\n}\nfunction getPathToRect(path, size, parentElement) {\n    var tempDiv = document.getElementById('gauge_path');\n    if (tempDiv === null) {\n        tempDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('text', { id: 'gauge_path' });\n        tempDiv.style.position = 'absolute';\n        tempDiv.style.top = '0px';\n        tempDiv.style.left = '0px';\n        parentElement.appendChild(tempDiv);\n    }\n    var render = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__.SvgRenderer('id');\n    var svg = render.createSvg({ id: 'box_path', width: size.width, height: size.height });\n    svg.appendChild(path);\n    tempDiv.appendChild(svg);\n    var svgRect = path.getBBox();\n    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(tempDiv);\n    return svgRect;\n}\n/** @private */\nfunction getElement(id) {\n    return document.getElementById(id);\n}\n/** @private */\nfunction removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(element);\n    }\n}\n/** @private */\nfunction valueToCoefficient(value, axis, orientation, range) {\n    var result = (value - range.min) / range.delta;\n    result = (orientation === 'Vertical') ? (!axis.isInversed) ? (1 - result) : result : (!axis.isInversed) ? result : (1 - result);\n    return result;\n}\nfunction getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction textFormatter(format, data, gauge) {\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('{' + key + '}').join(formatValue(data[key], gauge).toString());\n    }\n    return format;\n}\nfunction formatValue(value, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var formatValue;\n    var formatFunction;\n    if (gauge.format && !isNaN(Number(value))) {\n        formatFunction = gauge.intl.getNumberFormat({ format: gauge.format, useGrouping: gauge.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue !== null ? formatValue : '';\n}\n// /** @private */\n// export function getLabelFormat(format: string): string {\n//     const customLabelFormat: boolean = format && format.match('{value}') !== null;\n//     const skeleton: string = customLabelFormat ? '' : format;\n//     return skeleton;\n// }\n/** @private */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    try {\n        if (typeof template === 'function') {\n            templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);\n        }\n        else if (document.querySelectorAll(template).length) {\n            templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(document.querySelector(template).innerHTML.trim());\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        else if (gauge.isVue || gauge.isVue3) {\n            templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);\n        }\n    }\n    catch (e) {\n        templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);\n    }\n    return templateFn;\n}\n/** @private */\nfunction getElementOffset(childElement, parentElement) {\n    parentElement.appendChild(childElement);\n    var width = childElement.offsetWidth;\n    var height = childElement.offsetHeight;\n    parentElement.removeChild(childElement);\n    return new Size(width, height);\n}\n/**\n * To trigger the download element\n *\n * @param {string} fileName - Specifies the name of the exported file.\n * @param {ExportType} type - Specifies the extension type of the file to which the Linear Gauge must be exported.\n * @param {string} url - Specifies the blob URL of the exported file of Linear Gauge.\n * @param {boolean} isDownload - Specifies whether the exported file must be downloaded or not.\n * @private\n */\nfunction triggerDownload(fileName, type, url, isDownload) {\n    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('a', {\n        attrs: {\n            'download': fileName + '.' + type.toLocaleLowerCase(),\n            'href': url\n        }\n    }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n        view: window,\n        bubbles: false,\n        cancelable: true\n    }));\n}\n/** @private */\nvar VisibleRange = /** @class */ (function () {\n    function VisibleRange(min, max, interval, delta) {\n        this.min = min;\n        this.max = max;\n        this.interval = interval;\n        this.delta = delta;\n    }\n    return VisibleRange;\n}());\n\n/**\n * Specifies the location of the element in the linear gauge.\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\n\n/**\n * Specifies the size information of an element.\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\n\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\n\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\n\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\n\n/** @private */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect) {\n        this.opacity = opacity;\n        this.id = id;\n        this.y = rect.y;\n        this.x = rect.x;\n        this.fill = fill;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = border.dashArray;\n        this.height = rect.height;\n        this.width = rect.width;\n    }\n    return RectOption;\n}());\n\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\n\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size, x, y) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n        this.x = x;\n        this.y = y;\n    }\n    return VisibleLabels;\n}());\n\n/** @private */\nvar Align = /** @class */ (function () {\n    function Align(axisIndex, align) {\n        this.align = align;\n        this.axisIndex = axisIndex;\n    }\n    return Align;\n}());\n\n/** @private */\nfunction textElement(options, font, color, opacity, parent) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__.SvgRenderer('');\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(options.id)) {\n        removeElement(options.id);\n    }\n    var style = 'fill:' + color + '; font-size:' + font.size +\n        '; font-style:' + font.fontStyle + ' ; font-weight:' + font.fontWeight + '; font-family:' +\n        font.fontFamily + '; text-anchor:' + options.anchor + '; transform:' + options.transform +\n        '; opacity:' + (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(opacity) ? opacity : font.opacity) + '; dominant-baseline:' + options.baseLine + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\nfunction calculateNiceInterval(min, max, size, orientation) {\n    var delta = max - min;\n    var currentInterval;\n    var intervalDivs = [10, 5, 2, 1];\n    var desiredIntervalsCount = getActualDesiredIntervalsCount(size, orientation);\n    var niceInterval = delta / desiredIntervalsCount;\n    var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n    for (var _i = 0, intervalDivs_1 = intervalDivs; _i < intervalDivs_1.length; _i++) {\n        var interval = intervalDivs_1[_i];\n        currentInterval = minInterval * interval;\n        if (desiredIntervalsCount < (delta / currentInterval)) {\n            break;\n        }\n        niceInterval = currentInterval;\n    }\n    return niceInterval;\n}\nfunction getActualDesiredIntervalsCount(size, orientation) {\n    var maximumLabels = 5;\n    var desiredIntervalsCount = (orientation === 'Horizontal' ? 0.533 : 1) * maximumLabels;\n    desiredIntervalsCount = Math.max((size * (desiredIntervalsCount / 100)), 1);\n    return desiredIntervalsCount;\n}\n/** @private */\nfunction getPointer(target, gauge) {\n    var split = [];\n    var radix = 10;\n    split = target.id.replace(gauge.element.id, '').split('_');\n    var axisIndex = parseInt(split[2], radix);\n    var pointIndex = parseInt(split[4], radix);\n    var axis = gauge.axes[axisIndex];\n    var pointer = gauge.axes[axisIndex].pointers[pointIndex];\n    return { axis: axis, axisIndex: axisIndex, pointer: pointer, pointerIndex: pointIndex };\n}\n/** @private */\nfunction getRangeColor(value, ranges) {\n    var rangeColor = null;\n    ranges.forEach(function (range) {\n        if ((value >= range.start && range.end >= value) && range.start !== range.end) {\n            rangeColor = range.interior;\n        }\n    });\n    return rangeColor;\n}\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the horizontal position of the click event.\n * @param {number} pageY - Specifies the vertical position of the click event.\n * @param {number} element - Specifies the target element of the client event.\n * @private\n */\nfunction getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/** @private */\nfunction getRangePalette(theme) {\n    var palette;\n    switch (theme.toLowerCase()) {\n        case 'tailwind':\n            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6', '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];\n            break;\n        case 'tailwinddark':\n            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6', '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];\n            break;\n        case 'tailwind3':\n            palette = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822'];\n            break;\n        case 'tailwind3dark':\n            palette = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822'];\n            break;\n        case 'fluent':\n            palette = ['#614570', '#4C6FB1', '#CC6952', '#3F579A', '#4EA09B',\n                '#6E7A89', '#D4515C', '#E6AF5D', '#639751', '#9D4D69'];\n            break;\n        case 'fluentdark':\n            palette = ['#8AB113', '#2A72D5', '#43B786', '#584EC6', '#E85F9C',\n                '#6E7A89', '#EA6266', '#EBA844', '#26BC7A', '#BC4870'];\n            break;\n        case 'material3':\n            palette = ['#6200EE', '#E77A16', '#82C100', '#7107DC', '#05BB3D',\n                '#D21020', '#FAD200', '#0085FF', '#9204EA', '#08EE9B'];\n            break;\n        case 'material3dark':\n            palette = ['#4EAAFF', '#FA4EAB', '#FFF500', '#17EA58', '#38FFE7',\n                '#FF9E45', '#B3F32F', '#B93CE4', '#FC5664', '#9B55FF'];\n            break;\n        case 'fluent2':\n            palette = ['#6200EE', '#09AF74', '#0076E5', '#CB3587', '#E7910F', '#0364DE',\n                '#66CD15', '#F3A93C', '#107C10', '#C19C00'];\n            break;\n        case 'fluent2dark':\n        case 'fluent2highcontrast':\n            palette = ['#9BB449', '#2A72D5', '#43B786', '#3F579A', '#584EC6', '#E85F9C',\n                '#6E7A89', '#EA6266', '#0B6A0B', '#C19C00'];\n            break;\n        case 'bootstrap5':\n        case 'bootstrap5dark':\n            palette = ['#6610F2', '#6f42C1', '#D63384', '#DC3545',\n                '#FD7E14', '#FFC107', '#198754', '#0DCAF0'];\n            break;\n        default:\n            palette = ['#ff5985', '#ffb133', '#fcde0b', '#27d5ff', '#50c917'];\n            break;\n    }\n    return palette;\n}\n/** @private */\nfunction calculateShapes(location, shape, size, url, options, orientation, axis, pointer) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var radius;\n    switch (shape) {\n        case 'Circle':\n            radius = ((width + height) / 4);\n            locX = (orientation === 'Vertical') ? (!axis.opposedPosition) ? (pointer.placement !== 'Far') ? locX - radius : locX + radius :\n                pointer.placement === 'Near' ? locX - radius : locX + radius : locX;\n            locY = (orientation === 'Vertical') ? locY : (!axis.opposedPosition) ? (pointer.placement === 'Far') ?\n                locY + radius : locY - radius : (pointer.placement === 'Near') ? locY - radius : locY + radius;\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.merge)(options, { 'r': radius, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n        case 'Rectangle':\n            locX = (orientation === 'Horizontal') ? ((locX - (width / 2))) : ((!axis.opposedPosition && pointer.placement !== 'Far') ||\n                (axis.opposedPosition && pointer.placement === 'Near')) ? locX - width : locX;\n            locY = (orientation === 'Vertical') ? locY : (!axis.opposedPosition) ?\n                (pointer.placement === 'Far') ? locY + (height / 2) : locY - (height / 2) :\n                (pointer.placement === 'Near') ? locY - (height / 2) : locY + (height / 2);\n            if (shape === 'Diamond') {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                    'L' + ' ' + (locX + width) + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                    'L' + ' ' + locX + ' ' + locY + ' z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + (locY - (height / 2)) + ' ' +\n                    'L' + ' ' + (locX + width) + ' ' + (locY - (height / 2)) + ' ' +\n                    'L' + ' ' + (locX + width) + ' ' + (locY + (height / 2)) + ' ' +\n                    'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                    'L' + ' ' + locX + ' ' + (locY - (height / 2)) + ' z';\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.merge)(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (orientation === 'Vertical') {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + (locX - width) + ' ' + (locY - (height / 2)) +\n                    'L' + (locX - width) + ' ' + (locY + (height / 2)) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + (locX + (width / 2)) + ' ' + (locY - height) +\n                    'L' + (locX - (width / 2)) + ' ' + (locY - height) + ' Z';\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.merge)(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (orientation === 'Vertical') {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + (locX + width) + ' ' + (locY - (height / 2)) +\n                    'L' + (locX + width) + ' ' + (locY + (height / 2)) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + (locX + (width / 2)) + ' ' + (locY + height) +\n                    'L' + (locX - (width / 2)) + ' ' + (locY + height) + ' Z';\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.merge)(options, { 'd': path });\n            break;\n        case 'Arrow':\n            if (orientation === 'Vertical') {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' + 'L' + (locX - (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                    'L' + (locX - (width / 2)) + ' ' + ((locY - (height / 2)) + (height / 4)) + ' ' + 'L' + (locX - width) + ' '\n                    + ((locY - (height / 2)) + (height / 4)) + ' ' + 'L' + (locX - width) + ' ' + ((locY + (height / 2)) -\n                    (height / 4)) + ' ' + 'L' + (locX - (width / 2)) + ' ' + ((locY + (height / 2)) - (height / 4)) + ' ' +\n                    'L' + (locX - (width / 2)) + ' ' + (locY + height / 2) + 'z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' + 'L' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                    'L' + ((locX + (width / 2)) - (width / 4)) + ' ' + (locY - (height / 2)) + ' ' + 'L' + ((locX + (width / 2)) -\n                    (width / 4)) + ' ' + (locY - height) + ' ' + 'L' + ((locX - (width / 2)) + (width / 4)) + ' ' + (locY - height) +\n                    ' ' + 'L' + ((locX - (width / 2)) + (width / 4)) + ' ' + (locY - (height / 2)) + ' ' + 'L' + (locX - (width / 2))\n                    + ' ' + (locY - (height / 2)) + 'z';\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.merge)(options, { 'd': path });\n            break;\n        case 'InvertedArrow':\n            if (orientation === 'Vertical') {\n                path = 'M' + ' ' + locX + ' ' + locY + 'L' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                    'L' + (locX + (width / 2)) + ' ' + ((locY - (height / 2)) + (height / 4)) + ' ' + 'L' + (locX + width) + ' '\n                    + ((locY - (height / 2)) + (height / 4)) + ' ' + 'L' + (locX + width) + ' ' + ((locY + (height / 2)) - (height / 4))\n                    + ' ' + 'L' + (locX + (width / 2)) + ' ' + ((locY + (height / 2)) - (height / 4)) + ' ' +\n                    'L' + (locX + (width / 2)) + ' ' + (locY + height / 2) + 'z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' + 'L' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                    'L' + ((locX + (width / 2)) - (width / 4)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ((locX + (width / 2)) -\n                    (width / 4)) + ' ' + (locY + height) + ' ' + 'L' + ((locX - (width / 2)) + (width / 4)) + ' ' + (locY + height)\n                    + ' ' + 'L' + ((locX - (width / 2)) + (width / 4)) + ' ' + (locY + (height / 2)) + ' ' +\n                    'L' + (locX - (width / 2)) + ' ' + (locY + (height / 2)) + 'z';\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.merge)(options, { 'd': path });\n            break;\n        case 'Image':\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.merge)(options, { 'href': url, 'height': height, 'width': width, x: locX - (width / 2), y: locY - (height / 2) });\n            break;\n    }\n    return options;\n}\n/** @private */\nfunction calculateTextPosition(location, shape, options, orientation, axis, pointer) {\n    var width;\n    var height;\n    var textSize;\n    var locX = location.x;\n    var locY = location.y;\n    switch (shape) {\n        case 'Text':\n            textSize = measureText(pointer.text, pointer.textStyle);\n            height = textSize.height;\n            width = textSize.width;\n            locX = (orientation === 'Horizontal') ? ((locX - (width / 2))) : ((!axis.opposedPosition && pointer.placement !== 'Far') ||\n                (axis.opposedPosition && pointer.placement === 'Near')) ? (pointer.position === 'Inside' && !axis.opposedPosition) ||\n                (pointer.position === 'Cross') || (axis.opposedPosition && pointer.placement === 'Near' && pointer.position === 'Outside') ? locX - (width / 2) : locX - width : (pointer.position === 'Cross' && pointer.placement === 'Far') ||\n                (axis.opposedPosition && pointer.position === 'Cross' && (pointer.placement === 'None' || pointer.placement === 'Center')) ? locX + (width / 2) : locX;\n            locY = (orientation === 'Vertical') ? locY + (height / 4) : (!axis.opposedPosition) ?\n                (pointer.placement === 'Far') ? pointer.position === 'Cross' ? locY + (height / 2) + (height / 4) : pointer.position === 'Inside' ? locY + height : locY + (height / 2) : locY :\n                (pointer.placement === 'Near') ? locY : pointer.position === 'Cross' ? locY + (height / 2) + (height / 4) : pointer.position === 'Outside' ? locY + height : locY + (height / 2);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.merge)(options, { x: locX, y: locY });\n            break;\n    }\n    return options;\n}\n/** @private */\nfunction getBox(location, boxName, orientation, size, type, containerWidth, axis, cornerRadius) {\n    var path = ' ';\n    var radius = cornerRadius;\n    var horizontalRadius;\n    var x1;\n    var y1;\n    var rectWidth;\n    var rectHeight;\n    var verticalRadius;\n    var bottomRadius;\n    var topRadius;\n    var horizontalCurve;\n    var verticalCurve;\n    switch (boxName) {\n        case 'RoundedRectangle':\n            x1 = location.x;\n            y1 = location.y;\n            rectWidth = location.width;\n            rectHeight = location.height;\n            if (((orientation === 'Vertical' && location.height === 0) || (orientation === 'Horizontal' && location.width === 0)) && radius > 10) {\n                radius = 10;\n            }\n            horizontalCurve = x1 + rectWidth - radius;\n            verticalCurve = y1 + rectHeight - radius;\n            verticalRadius = radius + y1;\n            horizontalRadius = radius + x1;\n            if (type === 'container' || type === 'bar' && ((orientation === 'Vertical' && location.height !== 0) || (orientation === 'Horizontal' && location.width !== 0))) {\n                if (horizontalRadius > (x1 + (rectWidth / 2))) {\n                    horizontalRadius = x1 + (rectWidth / 2);\n                    horizontalCurve = horizontalRadius;\n                }\n                if (verticalRadius > (y1 + (rectHeight / 2))) {\n                    verticalRadius = y1 + (rectHeight / 2);\n                    verticalCurve = verticalRadius;\n                }\n            }\n            if (type === 'bar' && ((orientation === 'Vertical' && location.height === 0) || (orientation === 'Horizontal' && location.width === 0))) {\n                if (location.width < radius / 2 && !axis.isInversed) {\n                    horizontalCurve = horizontalCurve + radius + radius / 2;\n                }\n                else if (location.width < radius / 2 && axis.isInversed) {\n                    horizontalRadius = x1 - Math.ceil(radius / 4);\n                }\n                if (location.height < radius / 2 && !axis.isInversed) {\n                    verticalRadius = y1 - Math.ceil(radius / 4);\n                }\n                else if (location.height < radius / 2 && axis.isInversed) {\n                    verticalCurve = verticalCurve + radius + radius / 2;\n                }\n            }\n            path = 'M' + ' ' + x1 + ' ' + verticalRadius + ' Q ' + x1 + ' ' + y1 + ' ' + horizontalRadius + ' ' + y1 + ' ';\n            path += 'L' + ' ' + horizontalCurve + ' ' + y1 + ' Q ' + (x1 + rectWidth) + ' ' + y1 + ' '\n                + (x1 + rectWidth) + ' ' + verticalRadius + ' ';\n            path += 'L ' + (x1 + rectWidth) + ' ' + verticalCurve + ' Q ' + (x1 + rectWidth) + ' ' + (y1 + rectHeight)\n                + ' ' + horizontalCurve + ' ' + (y1 + rectHeight) + ' ';\n            path += ' L ' + horizontalRadius + ' ' + (y1 + rectHeight) + ' Q ' + x1 + ' ' + (y1 + rectHeight)\n                + ' ' + x1 + ' ' + verticalCurve + ' ';\n            path += 'L' + ' ' + x1 + ' ' + verticalRadius + ' ' + 'z';\n            break;\n        case 'Thermometer':\n            // eslint-disable-next-line no-case-declarations\n            var width = (orientation === 'Vertical') ? location.width : location.height;\n            bottomRadius = width + ((width / 2) / Math.PI);\n            topRadius = width / 2;\n            if (orientation === 'Vertical') {\n                var addValue = ((containerWidth + ((containerWidth / 2) / Math.PI)) - bottomRadius);\n                var y1_1 = (type === 'bar') ? location.y + addValue : location.y;\n                var locY = (type === 'bar') ? location.y + (topRadius - (topRadius / Math.PI)) : location.y;\n                var locHeight = location.height;\n                path = 'M' + location.x + ' ' + (y1_1 + locHeight) +\n                    ' A ' + bottomRadius + ' ' + bottomRadius + ', 0, 1, 0, ' + (location.x + location.width) + ' ' + (y1_1 + locHeight) +\n                    ' L ' + (location.x + location.width) + ' ' + locY +\n                    ' A ' + topRadius + ' ' + topRadius + ', 0, 1, 0, ' + location.x + ' ' + locY + ' z ';\n            }\n            else {\n                var x1_1 = (type === 'bar' && !axis.isInversed) ?\n                    location.x - ((containerWidth + ((containerWidth / 2) / Math.PI)) - bottomRadius) : location.x;\n                var locWidth = (type === 'bar') ? (location.width - (topRadius - ((topRadius / Math.PI)))) : location.width;\n                path = 'M' + x1_1 + ' ' + (location.y) +\n                    ' A ' + bottomRadius + ' ' + bottomRadius + ', 0, 1, 0, ' + x1_1 + ' ' + (location.y + location.height) +\n                    ' L ' + ((type === 'bar' ? location.x : x1_1) + locWidth) + ' ' + (location.y + location.height) +\n                    ' A ' + topRadius + ' ' + topRadius + ', 0, 1, 0, ' +\n                    ((type === 'bar' ? location.x : x1_1) + locWidth) + ' ' + (location.y) + ' z ';\n            }\n            break;\n    }\n    return path;\n}\n/** @private */\nfunction getExtraWidth(gaugeElement) {\n    var svgElement = getElement(gaugeElement.id + '_svg');\n    var extraWidth = 0;\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(svgElement) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gaugeElement)) {\n        extraWidth = gaugeElement.getBoundingClientRect().left - svgElement.getBoundingClientRect().left;\n    }\n    return extraWidth;\n}\n/**\n * @param {string} text - Specifies the text.\n * @returns {void}\n * @private */\nfunction showTooltip(text, gauge) {\n    var tooltip = getElement(gauge.element.id + '_EJ2_Title_Tooltip');\n    if (!tooltip) {\n        var titleWidth = measureText(text, { size: '12px', fontFamily: 'Segoe UI' }).width + 10;\n        titleWidth = titleWidth < gauge.actualRect.width ? titleWidth : gauge.actualRect.width - 10;\n        tooltip = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: gauge.element.id + '_EJ2_Title_Tooltip', className: 'EJ2-LinearGauge-Tooltip' });\n        tooltip.innerText = text;\n        tooltip.style.cssText = 'top:' + (gauge.actualRect.y + 10).toString() + 'px; left:' + (gauge.actualRect.x).toString() +\n            'px; background-color:rgb(255, 255, 255) !important; color:black !important; ' +\n            'position:absolute; border:1px solid rgb(112, 112, 112); padding-left:3px; padding-right:2px;' +\n            'padding-bottom:2px; padding-top:2px; font-size:12px; font-family:\"Segoe UI\";' + 'width:' + (titleWidth) + 'px;';\n        document.body.style.overflow = 'hidden';\n        getElement(gauge.element.id + '_Secondary_Element').appendChild(tooltip);\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (gauge.actualRect.y + 10).toString() + 'px';\n        tooltip.style.left = (gauge.actualRect.x).toString() + 'px';\n    }\n}\n/** @private */\nfunction removeTooltip() {\n    if (document.getElementsByClassName('EJ2-LinearGauge-Tooltip').length > 0) {\n        document.getElementsByClassName('EJ2-LinearGauge-Tooltip')[0].remove();\n    }\n}\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-lineargauge/src/linear-gauge/utils/helper.js?");

/***/ })

}]);