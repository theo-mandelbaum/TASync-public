"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-filemanager_src_file-manager_common_operations_js-4795c4a4"],{

/***/ "./node_modules/@syncfusion/ej2-filemanager/src/file-manager/common/operations.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-filemanager/src/file-manager/common/operations.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Delete: () => (/* binding */ Delete),\n/* harmony export */   Download: () => (/* binding */ Download),\n/* harmony export */   GetDetails: () => (/* binding */ GetDetails),\n/* harmony export */   Search: () => (/* binding */ Search),\n/* harmony export */   createFolder: () => (/* binding */ createFolder),\n/* harmony export */   filter: () => (/* binding */ filter),\n/* harmony export */   isFileSystemData: () => (/* binding */ isFileSystemData),\n/* harmony export */   paste: () => (/* binding */ paste),\n/* harmony export */   read: () => (/* binding */ read),\n/* harmony export */   rename: () => (/* binding */ rename)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/constant */ \"./node_modules/@syncfusion/ej2-filemanager/src/file-manager/base/constant.js\");\n/* harmony import */ var _pop_up_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pop-up/dialog */ \"./node_modules/@syncfusion/ej2-filemanager/src/file-manager/pop-up/dialog.js\");\n/* harmony import */ var _common_utility__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/utility */ \"./node_modules/@syncfusion/ej2-filemanager/src/file-manager/common/utility.js\");\n/* harmony import */ var _syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-grids */ \"./node_modules/@syncfusion/ej2-grids/index.js\");\n\n\n\n\n\n\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Function to read the content from given path in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} event - specifies the event.\n * @param {string} path - specifies the path.\n * @returns {void}\n * @private\n */\nfunction read(parent, event, path) {\n    var itemData = parent.itemData;\n    for (var i = 0; i < itemData.length; i++) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('hasChild', itemData[i]))) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)('hasChild', false, itemData[i]);\n        }\n    }\n    var data = { action: 'read', path: path, showHiddenItems: parent.showHiddenItems, data: itemData };\n    createAjax(parent, data, readSuccess, event);\n}\n/**\n * Function to create new folder in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} itemName - specifies the item name.\n * @returns {void}\n * @private\n */\nfunction createFolder(parent, itemName) {\n    var data = { action: 'create', path: parent.path, name: itemName, data: parent.itemData };\n    createAjax(parent, data, createSuccess, itemName);\n}\n/**\n * Function to filter the files in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string}  event - specifies the event.\n * @returns {void}\n * @private\n */\nfunction filter(parent, event) {\n    var data = { action: 'filter', path: parent.path, showHiddenItems: parent.showHiddenItems, data: [(0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.getPathObject)(parent)] };\n    var filterData;\n    var filterDataVal = parent.filterData ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(filterData, data, parent.filterData) : data;\n    createAjax(parent, filterDataVal, filterSuccess, event, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('action', filterDataVal));\n}\n/**\n * Function to rename the folder/file in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} path - specifies the path.\n * @param {string} itemNewName - specifies the item's new name.\n * @returns {void}\n * @private\n */\nfunction rename(parent, path, itemNewName) {\n    var name;\n    var newName;\n    if (parent.breadcrumbbarModule.searchObj.element.value === '' && !parent.isFiltered) {\n        name = parent.currentItemText;\n        newName = itemNewName;\n    }\n    else {\n        var fPath = parent.filterPath;\n        if (parent.hasId) {\n            name = parent.currentItemText;\n            newName = itemNewName;\n        }\n        else {\n            fPath = fPath.replace(/\\\\/g, '/');\n            name = fPath.replace(path, '') + parent.currentItemText;\n            newName = fPath.replace(path, '') + itemNewName;\n        }\n    }\n    var data = {\n        action: 'rename', path: path, name: name, newName: newName, data: parent.itemData, showFileExtension: parent.showFileExtension\n    };\n    createAjax(parent, data, renameSuccess, path);\n}\n/**\n * Function to paste file's and folder's in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} path - specifies the path.\n * @param {string[]} names - specifies the names.\n * @param {string} targetPath - specifies the target path.\n * @param {string} pasteOperation - specifies the paste operation.\n * @param {string[]} renameItems - specifies the rename items.\n * @param {Object[]} actionRecords - specifies the action records.\n * @returns {void}\n * @private\n */\nfunction paste(parent, path, names, targetPath, pasteOperation, renameItems, actionRecords) {\n    var data = {\n        action: pasteOperation, path: path, targetData: parent.itemData[0],\n        targetPath: targetPath, names: names, renameFiles: renameItems, data: actionRecords\n    };\n    parent.destinationPath = targetPath;\n    createAjax(parent, data, pasteSuccess, path, pasteOperation, targetPath);\n}\n/**\n * Function to delete file's and folder's in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string[]} items - specifies the items.\n * @param {string} path - specifies the path.\n * @param {string} operation - specifies the operation.\n * @returns {void}\n * @private\n */\nfunction Delete(parent, items, path, operation) {\n    var data = { action: operation, path: path, names: items, data: parent.itemData };\n    createAjax(parent, data, deleteSuccess, path);\n}\n/* istanbul ignore next */\n/**\n * Function to get details of file's and folder's in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string[]} names - specifies the names.\n * @param {string} path - specifies the path.\n * @param {string} operation - specifies the operation data.\n * @returns {void}\n * @private\n */\nfunction GetDetails(parent, names, path, operation) {\n    var data = { action: operation, path: path, names: names, data: parent.itemData };\n    createAjax(parent, data, detailsSuccess, path, operation);\n}\n/**\n * Checks whether fileSystemData is enabled.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {boolean} - returns the boolean value.\n */\nfunction isFileSystemData(parent) {\n    var isFileSystemData = parent.fileSystemData.length >= 0 && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.ajaxSettings.url);\n    return isFileSystemData;\n}\n/**\n * Function to check whether file already exist or not.\n *\n * @param {Record<string, any>} fileSystemData - specifies the file data.\n * @param {string} name - specifies the name.\n * @returns {boolean} - returns the boolean value.\n * @private\n */\nfunction isFileExists(fileSystemData, name) {\n    var isExists = fileSystemData.some(function (item) { return item.name === name; });\n    return isExists;\n}\n/**\n * Function to find the index value of a file or folder.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {number} id - specifies the id.\n * @returns {number} - returns the index value.\n * @private\n */\nfunction findIndexById(parent, id) {\n    var index = parent.fileSystemData.findIndex(function (item) {\n        return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(item) && String(item.id) === String(id);\n    });\n    return index;\n}\n/**\n * Function to get the entire data of a file or folder using id value.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {number | string} id - specifies the id.\n * @returns {Object} - returns the data.\n * @private\n */\nfunction filterById(parent, id) {\n    var data = parent.fileSystemData.filter(function (item) { return String(item.id) === String(id); })[0];\n    return data;\n}\n/**\n * Function to get the entire data of a file or folder for a parent.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {number | string} parentId - specifies the parent id.\n * @returns {Object[]} - returns the data.\n * @private\n */\nfunction filterByParent(parent, parentId) {\n    var data = parent.fileSystemData.filter(function (item) { return String(item.parentId) === String(parentId); });\n    return data;\n}\n/**\n * Function to create a new copied file or folder.\n *\n * @param {Record<string, any>} data - specifies the file or folder data.\n * @param {Record<string, any>} target - specifies the target data.\n * @param {string} itemName - specifies the item name.\n * @param {boolean} isCopy - specifies the copy operation.\n * @returns {Record<string, Object>} - returns the data.\n * @private\n */\nfunction createNewItem(data, target, itemName, isCopy) {\n    var newItem = {};\n    //Construct the new folder details.\n    for (var key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            newItem[key] = null;\n        }\n    }\n    var currentDate = new Date();\n    var folderPath = String(target.id) !== String(0) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target.parentId) ? target.filterPath + target.name + '\\\\' : '\\\\';\n    Object.assign(newItem, {\n        dateCreated: currentDate,\n        dateModified: currentDate,\n        filterPath: folderPath,\n        hasChild: isCopy ? data.hasChild : false,\n        id: (0,_syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_4__.getUid)(itemName === null ? data.name : itemName),\n        isFile: isCopy ? data.isFile : false,\n        name: itemName === null ? data.name : itemName,\n        parentId: target.id,\n        size: isCopy ? data.size : 0,\n        type: isCopy ? data.type : ''\n    });\n    return newItem;\n}\n/**\n * Function to create an error response.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} message - specifies the error message.\n * @param {string} code - specifies the error code.\n * @param {Object[]} fileName - specifies the file name.\n * @returns {void}\n * @private\n */\nfunction createErrorObject(parent, message, code, fileName) {\n    parent.responseData = {\n        cwd: null,\n        details: null,\n        error: {\n            code: code,\n            message: message,\n            fileExists: fileName != null ? fileName : null\n        },\n        files: null\n    };\n}\n/**\n * Function to trigger folder creation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerFolderCreation(parent, data, eventArgs) {\n    var createEventArgs = {\n        folderName: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('name', data),\n        cancel: false,\n        path: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('path', data),\n        parentFolder: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('data', data)\n    };\n    parent.trigger('beforeFolderCreate', createEventArgs, function (args) {\n        if (args.cancel) {\n            eventArgs.cancel = true;\n            return;\n        }\n        if (isFileSystemData(parent)) {\n            if (!isFileExists(parent.fileSystemData, args.folderName)) {\n                var data_1 = args.parentFolder[0];\n                var newObject = createNewItem(data_1, data_1, args.folderName, false);\n                parent.fileSystemData.push(newObject);\n            }\n            else {\n                var message = 'A file or folder with the name ' + args.folderName + ' already exists.';\n                createErrorObject(parent, message, '400', null);\n            }\n        }\n    });\n}\n/**\n * Function to trigger delete operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerDeleteOperation(parent, data, eventArgs) {\n    var deleteEventArgs = {\n        cancel: false,\n        itemData: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('data', data),\n        path: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('path', data)\n    };\n    parent.trigger('beforeDelete', deleteEventArgs, function (args) {\n        if (args.cancel) {\n            eventArgs.cancel = true;\n            return;\n        }\n        if (isFileSystemData(parent)) {\n            args.itemData.forEach(function (itemData) {\n                var index = findIndexById(parent, itemData.id);\n                if (index !== -1) {\n                    parent.fileSystemData.splice(index, 1);\n                }\n                if (!itemData.isFile) {\n                    var subItems = parent.fileSystemData.filter(function (obj) { return obj.filterPath.includes(itemData.name); });\n                    subItems.forEach(function (subItem) {\n                        var index = findIndexById(parent, subItem.id);\n                        if (index !== -1) {\n                            parent.fileSystemData.splice(index, 1);\n                        }\n                    });\n                }\n            });\n        }\n    });\n}\n/**\n * Function to trigger rename operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerRenameOperation(parent, data, eventArgs) {\n    var renameEventArgs = {\n        cancel: false,\n        newName: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('newName', data),\n        itemData: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('data', data),\n        path: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('path', data)\n    };\n    parent.trigger('beforeRename', renameEventArgs, function (args) {\n        if (args.cancel) {\n            eventArgs.cancel = true;\n            return;\n        }\n        if (isFileSystemData(parent)) {\n            if (!isFileExists(parent.fileSystemData, args.newName)) {\n                var fileData = filterById(parent, args.itemData[0].id);\n                var oldName = fileData.name;\n                fileData.name = args.newName;\n                updateChildrenFilterPath(parent, fileData.id, oldName, args.newName);\n            }\n            else {\n                var message = 'Cannot rename' + args.itemData[0].name + 'to' + args.newName + ': destination already exists.';\n                createErrorObject(parent, message, '400', null);\n            }\n        }\n    });\n}\n/**\n * Function to update child item filter path.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string | number} parentId - specifies the parent id.\n * @param {string} oldName - specifies the previous name.\n * @param {string} newName - specifies the new name.\n * @returns {void}\n * @private\n */\nfunction updateChildrenFilterPath(parent, parentId, oldName, newName) {\n    parent.fileSystemData.forEach(function (item) {\n        if (String(item.parentId) === String(parentId)) {\n            var oldPath = item.filterPath;\n            var newPath = oldPath.replace(oldName + '\\\\', newName + '\\\\');\n            item.filterPath = newPath;\n            updateChildrenFilterPath(parent, item.id, oldName, newName);\n        }\n    });\n}\n/**\n * Function to trigger move or copy operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerMoveOrCopyOperation(parent, data, eventArgs) {\n    var moveEventArgs = {\n        cancel: false,\n        itemData: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('data', data),\n        isCopy: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('action', data) === 'copy' ? true : false,\n        path: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('path', data),\n        targetData: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('targetData', data),\n        targetPath: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('targetPath', data)\n    };\n    parent.trigger('beforeMove', moveEventArgs, function (args) {\n        if (args.cancel) {\n            eventArgs.cancel = true;\n            return;\n        }\n        if (isFileSystemData(parent)) {\n            var message = 'File Already Exists';\n            var action = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('action', data);\n            var itemPermission = (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.getAccessDetails)(parent, args.itemData, action, false);\n            var pathPermission = (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.getAccessDetails)(parent, [args.targetData], action, true);\n            var file_1 = [];\n            parent.pasteNodes = [];\n            if (itemPermission === '' && pathPermission === '') {\n                if (args.isCopy) {\n                    var folderSubItems_1 = filterByParent(parent, args.targetData.id);\n                    var copiedFolders = args.itemData;\n                    copiedFolders.forEach(function (itemData) {\n                        if (!isFileExists(folderSubItems_1, itemData.name) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('renameFiles', data).length > 0) {\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('renameFiles', data).length > 0) {\n                                var names = itemData.name.split('.');\n                                var name_1 = itemData.name.includes('.') ? names[0] + '(' + parent.existingFileCount + ').' + names[1] : names[0] + '(' + parent.existingFileCount + ')';\n                                copyFolderItems(parent, itemData, args.targetData, name_1);\n                                parent.responseData.error = null;\n                                parent.existingFileCount++;\n                                return;\n                            }\n                            copyFolderItems(parent, itemData, args.targetData, null);\n                        }\n                        else {\n                            file_1.push(itemData.name);\n                        }\n                    });\n                    if (file_1.length > 0) {\n                        createErrorObject(parent, message, '400', file_1);\n                    }\n                    return;\n                }\n                var target_1 = args.targetData;\n                var getTargetFiles = filterByParent(parent, target_1.id);\n                for (var i = 0; i < args.itemData.length; i++) {\n                    var currItem = args.itemData[i];\n                    if (!isFileExists(getTargetFiles, currItem.name) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('renameFiles', data).length > 0) {\n                        if (!target_1.hasChild) {\n                            target_1.hasChild = !currItem.isFile;\n                            var targetItem = parent.fileSystemData\n                                .filter(function (item) { return String(item.id) === String(target_1.id); });\n                            if (targetItem.length > 0) {\n                                targetItem[0].hasChild = target_1.hasChild;\n                            }\n                        }\n                        if (!currItem.isFile) {\n                            //Check whether the source folder include other sub folders or not.\n                            var subItems = currItem.parentId !== 0\n                                ? filterByParent(parent, currItem.parentId) : [];\n                            var itemData = filterById(parent, currItem.parentId);\n                            itemData.hasChild = subItems.length > 1 ? true : false;\n                        }\n                        var fileData = filterById(parent, currItem.id);\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('renameFiles', data).length > 0) {\n                            var names = currItem.name.split('.');\n                            currItem.name = currItem.name.includes('.') ? names[0] + '(' + parent.existingFileCount + ').' + names[1] : names[0] + '(' + parent.existingFileCount + ')';\n                            fileData.name = currItem.name;\n                            parent.responseData.error = null;\n                            parent.existingFileCount++;\n                            parent.dropData = target_1;\n                            parent.dropPath = args.path;\n                            var pathArray = args.targetPath.replace(/^\\/|\\/$/g, '').split('/');\n                            target_1 = filterById(parent, pathArray[pathArray.length - 1]);\n                        }\n                        fileData.parentId = target_1.id;\n                        fileData.filterPath = target_1.id === 0 ? '\\\\' : target_1.filterPath + target_1.name + '\\\\';\n                    }\n                    else {\n                        file_1.push(currItem.name);\n                    }\n                }\n                if (file_1.length > 0) {\n                    createErrorObject(parent, message, '400', file_1);\n                }\n            }\n        }\n    });\n}\n/**\n * Function to trigger search operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerSearchOperation(parent, data, eventArgs) {\n    var searchEventArgs = {\n        searchResults: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('data', data),\n        cancel: false,\n        path: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('path', data),\n        searchText: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('searchString', data),\n        caseSensitive: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('caseSensitive', data),\n        showHiddenItems: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('showHiddenItems', data)\n    };\n    parent.trigger('search', searchEventArgs, function (args) {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)('data', args.searchResults, data);\n        if (args.cancel) {\n            eventArgs.cancel = true;\n        }\n    });\n}\n/**\n * Function to trigger client side events.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerClientEvents(parent, data, eventArgs) {\n    switch ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('action', data)) {\n        case 'create': {\n            triggerFolderCreation(parent, data, eventArgs);\n            break;\n        }\n        case 'delete': {\n            triggerDeleteOperation(parent, data, eventArgs);\n            break;\n        }\n        case 'rename': {\n            triggerRenameOperation(parent, data, eventArgs);\n            break;\n        }\n        case 'move':\n        case 'copy': {\n            triggerMoveOrCopyOperation(parent, data, eventArgs);\n            break;\n        }\n        case 'search': {\n            triggerSearchOperation(parent, data, eventArgs);\n            break;\n        }\n    }\n}\n/**\n * Creates an AJAX request for the file manager.\n *\n * @param {IFileManager} parent - The parent file manager instance.\n * @param {Object} data - The data object for the AJAX request.\n * @param {Function} fn - The callback function to be executed after the AJAX request.\n * @param {string} [event] - The event type for the AJAX request.\n * @param {string} [operation] - The operation type for the AJAX request.\n * @param {string} [targetPath] - The target path for the AJAX request.\n * @returns {void}\n * @private\n */\nfunction createAjax(parent, data, fn, event, operation, targetPath) {\n    var ajaxSettings = {\n        url: parent.ajaxSettings.url,\n        type: 'POST',\n        mode: true,\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify(data),\n        onSuccess: null,\n        onFailure: null,\n        beforeSend: null\n    };\n    var eventArgs = { action: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('action', data), ajaxSettings: ajaxSettings, cancel: false };\n    triggerClientEvents(parent, data, eventArgs);\n    parent.trigger('beforeSend', eventArgs, function (beforeSendArgs) {\n        if (!beforeSendArgs.cancel) {\n            parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.beforeRequest, {});\n            if (isFileSystemData(parent)) {\n                var filePath = event === 'node-expand' || event === 'finalize-end' || event === 'rename-end-parent'\n                    ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('path', data) : parent.path;\n                var pathArray = filePath.replace(/^\\/|\\/$/g, '').split('/');\n                var idValue = event === 'rename-end-parent' || (event === 'path-changed' && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('data', data).length !== 0 && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.renamedItem))\n                    ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('data', data)[0].id : pathArray[pathArray.length - 1];\n                var action = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('action', data);\n                var isFileOperation = (action === 'move' || action === 'rename' || action === 'copy' || action === 'delete' || action === 'search') && event !== 'rename-end';\n                if (action === 'read' || action === 'create' || event === 'rename-end') {\n                    var rootId = parent.fileSystemData\n                        .filter(function (item) { return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(item.parentId); })\n                        .length > 0\n                        ? parent.fileSystemData\n                            .filter(function (item) { return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(item.parentId); })[0].id\n                        : 0;\n                    parent.responseData = {\n                        cwd: filterById(parent, parent.path === '/' && event !== 'node-expand' && event !== 'rename-end-parent' ? rootId : idValue),\n                        details: null,\n                        error: null,\n                        files: filterByParent(parent, parent.path === '/' && event !== 'node-expand' && event !== 'rename-end-parent' ? rootId : idValue)\n                    };\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.responseData.cwd)) {\n                        var message = 'Cannot load empty data within the File Manager.';\n                        createErrorObject(parent, message, '400', null);\n                    }\n                }\n                else if (isFileOperation && parent.responseData.error === null) {\n                    var itemData = action === 'search' || action === 'delete' ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('data', data) : [];\n                    if (itemData.length === 0) {\n                        if (action === 'copy') {\n                            itemData = parent.pasteNodes.map(function (item) { return filterById(parent, item); });\n                        }\n                        else {\n                            itemData = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('data', data).map(function (item) { return filterById(parent, item.id); });\n                        }\n                    }\n                    parent.responseData = {\n                        cwd: null,\n                        details: null,\n                        error: null,\n                        files: itemData\n                    };\n                }\n                else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('action', data) === 'details') {\n                    var itemData = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('data', data);\n                    var details = itemData[0];\n                    var isMultipleFiles = itemData.length > 1;\n                    var itemNames = itemData.map(function (item) { return item.name; });\n                    var totalSize = isMultipleFiles ? getSize(itemData.reduce(function (accumulator, currentObject) { return accumulator + (currentObject.size || 0); }, 0)) : getSize(details.size);\n                    var path = (parent.pathNames.includes(details.name) || isMultipleFiles ? parent.pathNames.join('/') : parent.pathNames.join('/') + '/' + details.name);\n                    parent.responseData.details = Object.assign({\n                        location: path,\n                        multipleFiles: isMultipleFiles,\n                        name: itemNames.join(', '),\n                        size: totalSize\n                    }, isMultipleFiles ? {} : {\n                        created: details.dateCreated,\n                        isFile: details.isFile,\n                        modified: details.dateModified,\n                        permission: details.permission\n                    });\n                }\n                performReadOperation(parent, parent.responseData, fn, data, event, operation, targetPath, beforeSendArgs);\n                return;\n            }\n            var ajax = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Ajax({\n                url: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('url', beforeSendArgs.ajaxSettings),\n                type: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('type', beforeSendArgs.ajaxSettings),\n                mode: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('mode', beforeSendArgs.ajaxSettings),\n                dataType: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('dataType', beforeSendArgs.ajaxSettings),\n                contentType: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('contentType', beforeSendArgs.ajaxSettings),\n                data: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('data', beforeSendArgs.ajaxSettings),\n                beforeSend: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('beforeSend', beforeSendArgs.ajaxSettings),\n                onSuccess: function (result) {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result)) {\n                        var result_1 = {\n                            error: {\n                                fileExists: null,\n                                message: (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.getLocaleText)(parent, 'Server-Error') + ' ' + parent.ajaxSettings.url,\n                                code: '406'\n                            },\n                            files: null\n                        };\n                        triggerAjaxFailure(parent, beforeSendArgs, fn, result_1, event, operation, targetPath);\n                        return;\n                    }\n                    if (typeof (result) === 'string') {\n                        result = JSON.parse(result);\n                    }\n                    performReadOperation(parent, result, fn, data, event, operation, targetPath, beforeSendArgs);\n                },\n                onFailure: function () {\n                    var result = {\n                        files: null,\n                        error: {\n                            code: '404',\n                            message: (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.getLocaleText)(parent, 'Network-Error') + ' ' + parent.ajaxSettings.url,\n                            fileExists: null\n                        }\n                    };\n                    triggerAjaxFailure(parent, beforeSendArgs, fn, result, event, operation, targetPath);\n                }\n            });\n            ajax.send();\n        }\n    });\n}\n/**\n * Function to get file size.\n *\n * @param {number} size - specifies the size.\n * @returns {string} - returns the size.\n * @private\n */\nfunction getSize(size) {\n    var hz;\n    if (size < 1024) {\n        hz = size + ' B';\n    }\n    else if (size < 1024 * 1024) {\n        hz = (size / 1024).toFixed(2) + ' KB';\n    }\n    else if (size < 1024 * 1024 * 1024) {\n        hz = (size / 1024 / 1024).toFixed(2) + ' MB';\n    }\n    else {\n        hz = (size / 1024 / 1024 / 1024).toFixed(2) + ' GB';\n    }\n    return hz;\n}\n/**\n * Function to perform read operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {Function} fn - specifies the function.\n * @param {Object} data - specifies the data.\n * @param {string} event - specifies the event.\n * @param {string} operation - specifies the operation.\n * @param {string} targetPath - specifies the targetPath.\n * @param {BeforeSendEventArgs} beforeSendArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction performReadOperation(parent, result, fn, data, event, operation, targetPath, beforeSendArgs) {\n    parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.afterRequest, { action: 'success' });\n    var id = parent.expandedId ? parent.expandedId : parent.pathId[parent.pathId.length - 1];\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.cwd) && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('action', data) === 'read')) {\n        result.cwd.name = (parent.pathId.length === 1) ? (parent.rootAliasName || result.cwd.name) : result.cwd.name;\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)('_fm_id', id, result.cwd);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)(id, result.cwd, parent.feParent);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.files) || result.error.code === '401') {\n            if ((event === 'finalize-end' || event === 'initial-end') && parent.pathNames.length === 0) {\n                var root = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(parent.pathId[0], parent.feParent);\n                parent.pathNames[0] = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('name', root);\n                parent.hasId = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('id', root));\n            }\n            if (event === 'finalize-end') {\n                (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.generatePath)(parent);\n            }\n        }\n    }\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.files)) {\n        (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.setDateObject)(result.files);\n        for (var i = 0, len = result.files.length; i < len; i++) {\n            var item = result.files[i];\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)('_fm_iconClass', (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.fileType)(item), item);\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('action', data) === 'read') {\n            (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.setNodeId)(result, id);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)(id, result.files, parent.feFiles);\n        }\n    }\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.details) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.rootAliasName)) {\n        var rootName = parent.rootAliasName || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('name', result.details);\n        var location_1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('location', result.details).replace(new RegExp('/', 'g'), '\\\\');\n        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('path', data) === '/') || (parent.hasId && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('path', data).match(/[/]/g).length === 1)) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('names', data).length === 0) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)('name', rootName, result.details);\n            }\n            if (location_1.indexOf('\\\\') === -1) {\n                location_1 = rootName;\n            }\n            else {\n                location_1 = location_1.replace(location_1.substring(0, location_1.indexOf('\\\\')), rootName);\n            }\n        }\n        else {\n            location_1 = location_1.replace(location_1.substring(0, location_1.indexOf('\\\\')), rootName);\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)('location', location_1, result.details);\n    }\n    fn(parent, result, event, operation, targetPath);\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.files) && (event === 'path-changed' || event === 'finalize-end' || event === 'open-end' || event === 'drop-path')) {\n        parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.searchTextChange, result);\n    }\n    if (typeof (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('onSuccess', beforeSendArgs.ajaxSettings) === 'function') {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('onSuccess', beforeSendArgs.ajaxSettings)();\n    }\n}\n/**\n * Function to copy operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {string} target - specifies the target.\n * @param {string} itemName - specifies the item name.\n * @returns {void}\n * @private\n */\nfunction copyFolderItems(parent, data, target, itemName) {\n    var newObject = createNewItem(data, target, itemName, true);\n    parent.fileSystemData.push(newObject);\n    parent.pasteNodes.push(newObject.id);\n    var copiedItems = filterByParent(parent, data.id);\n    for (var i = 0; i < copiedItems.length; i++) {\n        copyFolderItems(parent, copiedItems[i], newObject, null);\n    }\n}\n/**\n * Function for trigger Ajax failure in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {BeforeSendEventArgs} beforeSendArgs - specifies the beforeSendArgs.\n * @param {Function} fn - specifies the function.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} event - specifies the event.\n * @param {string} operation - specifies the operation.\n * @param {string} targetPath - specifies the targetPath.\n * @returns {void}\n * @private\n */\nfunction triggerAjaxFailure(parent, beforeSendArgs, fn, result, event, operation, targetPath) {\n    parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.afterRequest, { action: 'failure' });\n    fn(parent, result, event, operation, targetPath);\n    if (typeof (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('onFailure', beforeSendArgs.ajaxSettings) === 'function') {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('onFailure', beforeSendArgs.ajaxSettings)();\n    }\n}\n/**\n * Function for read success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} event - specifies the event.\n * @returns {void}\n * @private\n */\nfunction readSuccess(parent, result, event) {\n    try {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.files)) {\n            parent.notify(event, result);\n            parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.selectionChanged, {});\n            var args = { action: 'read', result: result };\n            parent.trigger('success', args);\n        }\n        else {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.error) && result.error.code === '401') {\n                result.files = [];\n                parent.notify(event, result);\n                parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.selectionChanged, {});\n            }\n            onFailure(parent, result, 'read');\n            parent.setProperties({ path: parent.oldPath }, true);\n            parent.pathNames.pop();\n        }\n    }\n    catch (error) {\n        handleCatchError(parent, error, 'read');\n        parent.setProperties({ path: parent.oldPath }, true);\n        parent.pathNames.pop();\n    }\n    if (parent.isDragDrop && parent.isDropEnd) {\n        if (parent.droppedObjects.length !== 0) {\n            var args = { fileDetails: parent.droppedObjects };\n            parent.trigger('fileDropped', args);\n        }\n        parent.isDropEnd = parent.isDragDrop = false;\n    }\n}\n/**\n * Function for filter success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} event - specifies the event.\n * @param {string} action - specifies the action.\n * @returns {void}\n * @private\n */\nfunction filterSuccess(parent, result, event, action) {\n    try {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.files)) {\n            parent.notify(event, result);\n            var args = { action: action, result: result };\n            parent.trigger('success', args);\n        }\n        else {\n            onFailure(parent, result, action);\n        }\n    }\n    catch (error) {\n        handleCatchError(parent, error, action);\n    }\n}\n/* istanbul ignore next */\n/**\n * Function for create success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} itemName - specifies the item name.\n * @returns {void}\n * @private\n */\nfunction createSuccess(parent, result, itemName) {\n    try {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.files)) {\n            if (parent.dialogObj && parent.dialogObj.visible) {\n                parent.dialogObj.hide();\n            }\n            parent.createdItem = isFileSystemData(parent) ? result.files[result.files.length - 1] : result.files[0];\n            parent.breadcrumbbarModule.searchObj.value = '';\n            var createEventArgs = {\n                folderName: itemName,\n                path: parent.path,\n                parentFolder: parent.itemData\n            };\n            parent.trigger('folderCreate', createEventArgs);\n            var args = { action: 'create', result: result };\n            parent.trigger('success', args);\n            parent.itemData = [(0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.getPathObject)(parent)];\n            read(parent, _base_constant__WEBPACK_IMPORTED_MODULE_1__.createEnd, parent.path);\n        }\n        else {\n            if (result.error.code === '400') {\n                if (parent.dialogObj && parent.dialogObj.visible) {\n                    var ele = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#newname', parent.dialogObj.element);\n                    var error = (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.getLocaleText)(parent, 'Validation-NewFolder-Exists').replace('{0}', '\"' + ele.value + '\"');\n                    ele.parentElement.nextElementSibling.innerHTML = error;\n                }\n                else {\n                    var result_2 = {\n                        files: null,\n                        error: {\n                            code: '400',\n                            message: (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.getLocaleText)(parent, 'Validation-NewFolder-Exists').replace('{0}', '\"' + itemName + '\"'),\n                            fileExists: null\n                        }\n                    };\n                    (0,_pop_up_dialog__WEBPACK_IMPORTED_MODULE_2__.createDialog)(parent, 'Error', result_2);\n                }\n                var args = { action: 'create', error: result.error };\n                parent.trigger('failure', args);\n            }\n            else {\n                if (parent.dialogObj && parent.dialogObj.visible) {\n                    parent.dialogObj.hide();\n                }\n                onFailure(parent, result, 'create');\n            }\n        }\n    }\n    catch (error) {\n        if (parent.dialogObj && parent.dialogObj.visible) {\n            parent.dialogObj.hide();\n        }\n        handleCatchError(parent, error, 'create');\n    }\n}\n/* istanbul ignore next */\n/**\n * Function to rename the folder/file in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @returns {void}\n * @private\n */\nfunction renameSuccess(parent, result) {\n    try {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.files)) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.dialogObj)) {\n                parent.dialogObj.hide();\n            }\n            var args = { action: 'rename', result: result };\n            parent.trigger('success', args);\n            parent.renamedItem = Array.isArray(result.files) ? result.files[0] : result.files;\n            var renameEventArgs = {\n                newName: parent.renamedItem.name,\n                itemData: [parent.renamedItem],\n                path: parent.path\n            };\n            parent.trigger('rename', renameEventArgs);\n            if (parent.activeModule === 'navigationpane') {\n                var pathObject = (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.getPathObject)(parent);\n                var pathLevel = parent.pathId[parent.pathId.length - 1].split('_').length - 2;\n                parent.pathId.pop();\n                parent.itemData = [(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(parent.pathId[parent.pathId.length - 1], parent.feParent)];\n                var renamePath = (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.getTargetPath)(parent, parent.renamedItem);\n                read(parent, _base_constant__WEBPACK_IMPORTED_MODULE_1__.renameEndParent, renamePath);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pathObject) && parent.pathNames.length > 1 && pathLevel <= parent.pathNames.length - 1) {\n                    parent.pathNames[pathLevel] = parent.renameText;\n                    if (!parent.hasId) {\n                        parent.setProperties({ path: \"/\" + parent.pathNames.slice(1).join('/') + \"/\" }, true);\n                    }\n                }\n                parent.itemData = parent.navigationpaneModule.previousSelected.length > 0\n                    ? parent.navigationpaneModule.treeObj.getTreeData(parent.navigationpaneModule.previousSelected[0]) : parent.itemData;\n                read(parent, _base_constant__WEBPACK_IMPORTED_MODULE_1__.pathChanged, parent.path);\n                parent.itemData[0] = parent.renamedItem;\n                parent.renamedItem = null;\n            }\n            else {\n                parent.itemData = [(0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.getPathObject)(parent)];\n                if (parent.breadcrumbbarModule.searchObj.value !== '') {\n                    Search(parent, _base_constant__WEBPACK_IMPORTED_MODULE_1__.renameEnd, parent.path, parent.searchWord, parent.showHiddenItems, !parent.searchSettings.ignoreCase);\n                }\n                else {\n                    if (parent.isFiltered) {\n                        filter(parent, _base_constant__WEBPACK_IMPORTED_MODULE_1__.renameEnd);\n                    }\n                    else {\n                        read(parent, _base_constant__WEBPACK_IMPORTED_MODULE_1__.renameEnd, parent.path);\n                    }\n                }\n            }\n        }\n        else {\n            if (result.error.code === '400' && parent.dialogObj && parent.dialogObj.visible) {\n                var ele = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#rename', parent.dialogObj.element);\n                var error = (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.getLocaleText)(parent, 'Validation-Rename-Exists').replace('{0}', '\"' + parent.currentItemText + '\"');\n                error = error.replace('{1}', '\"' + ele.value + '\"');\n                ele.parentElement.nextElementSibling.innerHTML = error;\n                var args = { action: 'rename', error: result.error };\n                parent.trigger('failure', args);\n            }\n            else {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.dialogObj)) {\n                    parent.dialogObj.hide();\n                }\n                onFailure(parent, result, 'rename');\n            }\n        }\n    }\n    catch (error) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.dialogObj)) {\n            parent.dialogObj.hide();\n        }\n        handleCatchError(parent, error, 'rename');\n    }\n}\n/* istanbul ignore next */\n/**\n * Function to create new folder in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} path - specifies the path.\n * @param {string} operation - specifies the operation.\n * @returns {void}\n * @private\n */\nfunction pasteSuccess(parent, result, path, operation) {\n    try {\n        var moveorcopyEventArgs = {\n            itemData: result.files,\n            isCopy: operation === 'copy' ? true : false,\n            path: path,\n            targetData: parent.itemData[0],\n            targetPath: parent.path\n        };\n        parent.trigger('move', moveorcopyEventArgs);\n        if (result.error && result.error.fileExists) {\n            parent.fileLength = 0;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.files)) {\n                parent.isPasteError = true;\n                (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.doPasteUpdate)(parent, operation, result);\n            }\n            (0,_pop_up_dialog__WEBPACK_IMPORTED_MODULE_2__.createExtDialog)(parent, 'DuplicateItems', result.error.fileExists);\n            if (result.error.code === '404') {\n                (0,_pop_up_dialog__WEBPACK_IMPORTED_MODULE_2__.createDialog)(parent, 'Error', result);\n            }\n        }\n        else if (!result.error && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.files)) {\n            parent.isPasteError = false;\n            (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.doPasteUpdate)(parent, operation, result);\n        }\n        else if (result.error && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.files)) {\n            parent.isPasteError = true;\n            (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.doPasteUpdate)(parent, operation, result);\n            (0,_pop_up_dialog__WEBPACK_IMPORTED_MODULE_2__.createDialog)(parent, 'Error', result);\n        }\n        else {\n            onFailure(parent, result, operation);\n        }\n    }\n    catch (error) {\n        handleCatchError(parent, error, operation);\n    }\n}\n/**\n * Function to delete success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} path - specifies the path.\n * @returns {void}\n * @private\n */\nfunction deleteSuccess(parent, result, path) {\n    try {\n        var deleteEventArgs = {\n            itemData: result.files,\n            path: path\n        };\n        parent.trigger('delete', deleteEventArgs);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.files)) {\n            parent.setProperties({ path: path }, true);\n            parent.itemData = [(0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.getPathObject)(parent)];\n            read(parent, _base_constant__WEBPACK_IMPORTED_MODULE_1__.deleteEnd, parent.path);\n            if (result.error) {\n                onFailure(parent, result, 'delete');\n            }\n            else {\n                var args = { action: 'delete', result: result };\n                parent.trigger('success', args);\n            }\n        }\n        else {\n            onFailure(parent, result, 'delete');\n        }\n    }\n    catch (error) {\n        handleCatchError(parent, error, 'delete');\n    }\n}\n/**\n * Function for details success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} path - specifies the path.\n * @param {string} operation - specifies the operation.\n * @returns {void}\n * @private\n */\nfunction detailsSuccess(\n// eslint:disable-next-line\nparent, result, path, operation) {\n    try {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.details)) {\n            (0,_pop_up_dialog__WEBPACK_IMPORTED_MODULE_2__.createDialog)(parent, operation, null, result.details);\n            var args = { action: 'details', result: result };\n            parent.trigger('success', args);\n        }\n        else {\n            onFailure(parent, result, 'details');\n        }\n    }\n    catch (error) {\n        handleCatchError(parent, error, 'details');\n    }\n}\n/**\n * Function for on failure event in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} action - specifies the action.\n * @returns {void}\n * @private\n */\nfunction onFailure(parent, result, action) {\n    (0,_pop_up_dialog__WEBPACK_IMPORTED_MODULE_2__.createDialog)(parent, 'Error', result);\n    var args = { action: action, error: result.error };\n    parent.trigger('failure', args);\n}\n/**\n * Function for search in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} event - specifies the event.\n * @param {string} path - specifies the path.\n * @param {string} searchString - specifies the search string.\n * @param {boolean} showHiddenItems - specifies the hidden items.\n * @param {boolean} caseSensitive - specifies the casing of search text.\n * @returns {void}\n * @private\n */\nfunction Search(parent, event, path, searchString, showHiddenItems, caseSensitive) {\n    var data = {\n        action: 'search', path: path, searchString: searchString, showHiddenItems: showHiddenItems, caseSensitive: caseSensitive,\n        data: parent.itemData\n    };\n    createAjax(parent, data, searchSuccess, event);\n}\n/* istanbul ignore next */\n/**\n * Function for search success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} event - specifies the event.\n * @returns {void}\n * @private\n */\nfunction searchSuccess(parent, result, event) {\n    try {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(result.files)) {\n            parent.notify(event, result);\n            var args = { action: 'search', result: result };\n            parent.trigger('success', args);\n        }\n        else {\n            onFailure(parent, result, 'search');\n        }\n    }\n    catch (error) {\n        handleCatchError(parent, error, 'search');\n    }\n}\n/* istanbul ignore next */\n/**\n * Function for download in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} path - specifies the path.\n * @param {string[]} items - specifies the items.\n * @returns {void}\n * @private\n */\nfunction Download(parent, path, items) {\n    var downloadUrl = parent.ajaxSettings.downloadUrl ? parent.ajaxSettings.downloadUrl : parent.ajaxSettings.url;\n    var data = { 'action': 'download', 'path': path, 'names': items, 'data': parent.itemData };\n    var ajaxSettings = {\n        url: downloadUrl,\n        type: 'POST',\n        contentType: 'application/json',\n        responseType: 'blob',\n        data: JSON.stringify(data),\n        onSuccess: null,\n        onFailure: null,\n        beforeSend: null\n    };\n    var eventArgs = { data: data, cancel: false, useFormPost: true, ajaxSettings: ajaxSettings };\n    parent.trigger('beforeDownload', eventArgs, function (downloadArgs) {\n        if (!downloadArgs.cancel) {\n            if (downloadArgs.useFormPost) {\n                var form = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('form', {\n                    id: parent.element.id + '_downloadForm',\n                    attrs: { action: downloadUrl, method: 'post', name: 'downloadForm', 'download': '' }\n                });\n                var input = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', {\n                    id: parent.element.id + '_hiddenForm',\n                    attrs: { name: 'downloadInput', value: JSON.stringify(downloadArgs.data), type: 'hidden' }\n                });\n                form.appendChild(input);\n                parent.element.appendChild(form);\n                document.forms.namedItem('downloadForm').submit();\n                parent.element.removeChild(form);\n            }\n            else {\n                try {\n                    var contentDisposition_1;\n                    var fileName_1;\n                    var fetch_1 = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Fetch({\n                        url: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('url', downloadArgs.ajaxSettings),\n                        type: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('type', downloadArgs.ajaxSettings),\n                        contentType: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('contentType', downloadArgs.ajaxSettings),\n                        responseType: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('responseType', downloadArgs.ajaxSettings),\n                        beforeSend: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('beforeSend', downloadArgs.ajaxSettings),\n                        onLoad: function (e) {\n                            contentDisposition_1 = e.headers.get('Content-Disposition');\n                            if (contentDisposition_1) {\n                                var filenameMatch = contentDisposition_1.match(/filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/);\n                                var extractedFilename = filenameMatch && filenameMatch[1];\n                                fileName_1 = extractedFilename ? extractedFilename.replace(/['\"]/g, '') : fileName_1;\n                            }\n                            else {\n                                fileName_1 = parent.itemData.length > 1 ? 'files.zip' : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('isFile', parent.itemData[0]) ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('name', parent.itemData[0]) : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('name', parent.itemData[0]) + '.zip';\n                            }\n                        },\n                        onSuccess: function (e) {\n                            parent.trigger('success', downloadArgs);\n                            var blob = e;\n                            var blobUrl = URL.createObjectURL(blob);\n                            var link = document.createElement('a');\n                            link.href = blobUrl;\n                            link.download = fileName_1;\n                            document.body.appendChild(link);\n                            link.click();\n                            document.body.removeChild(link);\n                        },\n                        onFailure: function (e) {\n                            var result = {\n                                error: {\n                                    code: e.status.toString(),\n                                    message: (0,_common_utility__WEBPACK_IMPORTED_MODULE_3__.getLocaleText)(parent, 'Network-Error') + ' ' + parent.ajaxSettings.downloadUrl\n                                }\n                            };\n                            (0,_pop_up_dialog__WEBPACK_IMPORTED_MODULE_2__.createDialog)(parent, 'Error', result);\n                            parent.trigger('failure', downloadArgs);\n                        }\n                    });\n                    fetch_1.send(JSON.stringify(downloadArgs.data));\n                }\n                catch (error) {\n                    handleCatchError(parent, error, 'download');\n                }\n            }\n        }\n    });\n}\n/**\n * Function for on catch handler in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {any} error - specifies the catch error.\n * @param {string} action - specifies the action.\n * @returns {void}\n * @private\n */\nfunction handleCatchError(parent, error, action) {\n    var errorResult = {\n        files: null,\n        error: {\n            message: error.message,\n            fileExists: null\n        }\n    };\n    onFailure(parent, errorResult, action);\n}\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-filemanager/src/file-manager/common/operations.js?");

/***/ })

}]);