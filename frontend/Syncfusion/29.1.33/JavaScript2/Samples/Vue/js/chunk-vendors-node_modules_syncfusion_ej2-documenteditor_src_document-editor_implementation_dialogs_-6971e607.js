"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_dialogs_-6971e607"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/styles-dialog.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/styles-dialog.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StylesDialog: () => (/* binding */ StylesDialog)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_lists__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-lists */ \"./node_modules/@syncfusion/ej2-lists/index.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n\n\n\n/**\n * The Styles dialog is used to create or modify styles.\n */\nvar StylesDialog = /** @class */ (function () {\n    /**\n     * @param {DocumentHelper} documentHelper - Specifies the document helper.\n     * @private\n     */\n    function StylesDialog(documentHelper) {\n        var _this = this;\n        this.selecHandlerClickHandler = this.onSelecHandlerClick.bind(this);\n        this.addNewStyleClickHandler = this.onAddNewStyleClick.bind(this);\n        this.modifyStyleClickHandler = this.onModifyStyleClick.bind(this);\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.modifyStyles = function () {\n            _this.documentHelper.dialog.hide();\n            _this.documentHelper.owner.styleDialogModule.show(_this.styleName, _this.localValue.getConstant('Modify Style'));\n        };\n        /**\n         * @param {SelectEventArgs} args - Specifies the event args.\n         * @returns {void}\n         */\n        this.selectHandler = function (args) {\n            _this.styleName = _this.getStyleName(args.text);\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.addNewStyles = function () {\n            _this.documentHelper.dialog.hide();\n            _this.documentHelper.owner.styleDialogModule.show();\n        };\n        this.documentHelper = documentHelper;\n    }\n    StylesDialog.prototype.getModuleName = function () {\n        return 'StylesDialog';\n    };\n    /**\n     * @private\n     * @param {L10n} localValue - Specifies the locale value.\n     * @param {string[]} styles - Specifies the styles.\n     * @param {boolean} isRtl - Specifies the is rtl.\n     * @returns {void}\n     */\n    StylesDialog.prototype.initStylesDialog = function (localValue, styles, isRtl) {\n        var id = this.documentHelper.owner.containerId + '_insert_styles';\n        this.target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.createElement)('div', { id: id, className: 'e-de-styles' });\n        var headerValue = localValue.getConstant('Styles');\n        this.dlgFields = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.createElement)('div', { innerHTML: headerValue, className: 'e-de-para-dlg-heading' });\n        this.target.appendChild(this.dlgFields);\n        this.commonDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.createElement)('div', { className: 'e-styles-common' });\n        this.target.appendChild(this.commonDiv);\n        this.searchDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.createElement)('div', { className: 'e-styles-list' });\n        this.commonDiv.appendChild(this.searchDiv);\n        if (isRtl) {\n            this.searchDiv.classList.add('e-de-rtl');\n        }\n        this.listviewDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.createElement)('div', { className: 'e-styles-listViewDiv', id: 'styles_listview' });\n        this.searchDiv.appendChild(this.listviewDiv);\n        this.listviewInstance = new _syncfusion_ej2_lists__WEBPACK_IMPORTED_MODULE_0__.ListView({\n            dataSource: styles,\n            cssClass: 'e-styles-listview',\n            fields: { text: 'StyleName', iconCss: 'IconClass' },\n            showIcon: true\n        });\n        this.listviewInstance.appendTo(this.listviewDiv);\n        this.listviewInstance.addEventListener('select', this.selecHandlerClickHandler);\n        this.buttonDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.createElement)('div', { className: 'e-styles-button' });\n        this.commonDiv.appendChild(this.buttonDiv);\n        this.newButtonDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.createElement)('div', { className: 'e-styles-addbutton' });\n        this.buttonDiv.appendChild(this.newButtonDiv);\n        this.newButtonElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.createElement)('button', {\n            innerHTML: localValue.getConstant('New') + '...', id: 'new',\n            attrs: { type: 'button' }\n        });\n        this.newButtonDiv.appendChild(this.newButtonElement);\n        this.newbutton = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.Button({ cssClass: 'e-button-custom' });\n        this.newbutton.appendTo(this.newButtonElement);\n        this.newButtonElement.addEventListener('click', this.addNewStyleClickHandler);\n        this.modifybuttonDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.createElement)('div', { className: 'e-styles-addbutton' });\n        this.buttonDiv.appendChild(this.modifybuttonDiv);\n        this.modifyButtonElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.createElement)('button', {\n            innerHTML: localValue.getConstant('Modify') + '...', id: 'modify',\n            attrs: { type: 'button' }\n        });\n        this.modifybuttonDiv.appendChild(this.modifyButtonElement);\n        this.addbutton = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.Button({ cssClass: 'e-button-custom' });\n        this.addbutton.appendTo(this.modifyButtonElement);\n        this.modifyButtonElement.addEventListener('click', this.modifyStyleClickHandler);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    StylesDialog.prototype.show = function () {\n        var localValue = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.L10n('documenteditor', this.documentHelper.owner.defaultLocale);\n        localValue.setLocale(this.documentHelper.owner.locale);\n        var paraStyles = this.updateStyleNames('Paragraph').filter(function (obj) { return obj.Type === 'Paragraph'; });\n        var linkedStyles = this.updateStyleNames('Paragraph').filter(function (obj) { return obj.Type === 'Linked'; });\n        var charStyles = this.updateStyleNames('Character').filter(function (obj) { return obj.Type === 'Character'; });\n        for (var _i = 0, linkedStyles_1 = linkedStyles; _i < linkedStyles_1.length; _i++) {\n            var linkedStyle = linkedStyles_1[_i];\n            for (var _a = 0, charStyles_1 = charStyles; _a < charStyles_1.length; _a++) {\n                var charStyle = charStyles_1[_a];\n                if (linkedStyle['StyleName'] + ' Char' === charStyle['StyleName']) {\n                    charStyles.splice(charStyles.indexOf(charStyle), 1);\n                    break;\n                }\n            }\n        }\n        var styles = paraStyles.concat(linkedStyles, charStyles);\n        this.localValue = localValue;\n        this.initStylesDialog(localValue, styles, this.documentHelper.owner.enableRtl);\n        this.documentHelper.dialog.content = this.target;\n        this.documentHelper.dialog.beforeOpen = this.documentHelper.updateFocus;\n        this.documentHelper.dialog.close = this.documentHelper.updateFocus;\n        this.documentHelper.dialog.header = localValue.getConstant('Styles');\n        this.documentHelper.dialog.height = 'auto';\n        this.documentHelper.dialog.width = 'auto';\n        this.documentHelper.dialog.buttons = [{\n                click: this.hideObjects.bind(this),\n                buttonModel: { content: localValue.getConstant('Cancel'), cssClass: 'e-flat e-hyper-insert', isPrimary: true }\n            }];\n        this.documentHelper.dialog.dataBind();\n        this.documentHelper.dialog.show();\n    };\n    StylesDialog.prototype.updateStyleNames = function (type) {\n        var localValue = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.L10n('documenteditor', this.documentHelper.owner.defaultLocale);\n        localValue.setLocale(this.documentHelper.owner.locale);\n        var collection = this.documentHelper.owner.documentHelper.styles.getStyles(type);\n        var paraIcon = 'e-de-listview-icon e-de-e-paragraph-style-mark e-icons';\n        var charIcon = 'e-de-listview-icon e-de-e-character-style-mark e-icons';\n        var linkedIcon = 'e-de-listview-icon e-de-e-linked-style-mark e-icons';\n        var finalList = [];\n        for (var i = 0; i < collection.length; i++) {\n            var styleName = localValue.getConstant(collection[parseInt(i.toString(), 10)].name);\n            if (styleName === '') {\n                styleName = collection[parseInt(i.toString(), 10)].name;\n            }\n            if (collection[parseInt(i.toString(), 10)].type === 'Paragraph') {\n                finalList.push({ StyleName: styleName, IconClass: paraIcon, Type: collection[parseInt(i.toString(), 10)].type });\n            }\n            else if (collection[parseInt(i.toString(), 10)].type === 'Character') {\n                finalList.push({ StyleName: styleName, IconClass: charIcon, Type: collection[parseInt(i.toString(), 10)].type });\n            }\n            else {\n                finalList.push({ StyleName: styleName, IconClass: linkedIcon, Type: collection[parseInt(i.toString(), 10)].type });\n            }\n        }\n        return finalList;\n    };\n    StylesDialog.prototype.defaultStyleName = function (styleNames) {\n        var styleName = [];\n        for (var index = 0; index < styleNames.length; index++) {\n            styleName.push(styleNames[parseInt(index.toString(), 10)]);\n        }\n        return styleName;\n    };\n    StylesDialog.prototype.onModifyStyleClick = function () {\n        this.modifyStyles();\n    };\n    StylesDialog.prototype.onSelecHandlerClick = function (args) {\n        this.selectHandler(args);\n    };\n    /**\n     * @param {string} styleName - Specifies the style name.\n     * @private\n     * @returns {string} - Returns the style name.\n     */\n    StylesDialog.prototype.getStyleName = function (styleName) {\n        var localValue = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.L10n('documenteditor', this.documentHelper.owner.defaultLocale);\n        localValue.setLocale(this.documentHelper.owner.locale);\n        if (localValue.getConstant('Heading 1') === styleName) {\n            styleName = 'Heading 1';\n        }\n        else if (localValue.getConstant('Heading 2') === styleName) {\n            styleName = 'Heading 2';\n        }\n        else if (localValue.getConstant('Heading 3') === styleName) {\n            styleName = 'Heading 3';\n        }\n        else if (localValue.getConstant('Heading 4') === styleName) {\n            styleName = 'Heading 4';\n        }\n        else if (localValue.getConstant('Heading 5') === styleName) {\n            styleName = 'Heading 5';\n        }\n        else if (localValue.getConstant('Heading 6') === styleName) {\n            styleName = 'Heading 6';\n        }\n        else if (localValue.getConstant('Normal') === styleName) {\n            styleName = 'Normal';\n        }\n        else if (localValue.getConstant('Header') === styleName) {\n            styleName = 'Header';\n        }\n        else if (localValue.getConstant('Footer') === styleName) {\n            styleName = 'Footer';\n        }\n        return styleName;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    StylesDialog.prototype.hideObjects = function () {\n        this.documentHelper.dialog.hide();\n        this.documentHelper.updateFocus();\n    };\n    StylesDialog.prototype.onAddNewStyleClick = function () {\n        this.addNewStyles();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    StylesDialog.prototype.destroy = function () {\n        if (this.listviewInstance) {\n            this.listviewInstance.destroy();\n            this.listviewInstance = undefined;\n        }\n        this.removeEvents();\n        this.removeElements();\n        this.documentHelper = undefined;\n        this.styleName = undefined;\n        this.localValue = undefined;\n        this.target = undefined;\n    };\n    StylesDialog.prototype.removeEvents = function () {\n        if (this.newButtonElement) {\n            this.newButtonElement.removeEventListener('click', this.addNewStyleClickHandler);\n        }\n        if (this.modifyButtonElement) {\n            this.modifyButtonElement.removeEventListener('click', this.modifyStyleClickHandler);\n        }\n        if (this.listviewInstance) {\n            this.listviewInstance.removeEventListener('select', this.selecHandlerClickHandler);\n        }\n    };\n    StylesDialog.prototype.removeElements = function () {\n        if (this.dlgFields) {\n            this.dlgFields.remove();\n            this.dlgFields = undefined;\n        }\n        if (this.commonDiv) {\n            this.commonDiv.remove();\n            this.commonDiv = undefined;\n        }\n        if (this.searchDiv) {\n            this.searchDiv.remove();\n            this.searchDiv = undefined;\n        }\n        if (this.listviewDiv) {\n            this.listviewDiv.remove();\n            this.listviewDiv = undefined;\n        }\n        if (this.buttonDiv) {\n            this.buttonDiv.remove();\n            this.buttonDiv = undefined;\n        }\n        if (this.newButtonDiv) {\n            this.newButtonDiv.remove();\n            this.newButtonDiv = undefined;\n        }\n        if (this.newButtonElement) {\n            this.newButtonElement.remove();\n            this.newButtonElement = undefined;\n        }\n        if (this.newbutton) {\n            this.newbutton.destroy();\n            this.newbutton = undefined;\n        }\n        if (this.modifybuttonDiv) {\n            this.modifybuttonDiv.remove();\n            this.modifybuttonDiv = undefined;\n        }\n        if (this.modifyButtonElement) {\n            this.modifyButtonElement.remove();\n            this.modifyButtonElement = undefined;\n        }\n        if (this.addbutton) {\n            this.addbutton.destroy();\n            this.addbutton = undefined;\n        }\n    };\n    return StylesDialog;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/styles-dialog.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/table-dialog.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/table-dialog.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TableDialog: () => (/* binding */ TableDialog)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n\n\n\n/**\n * The Table dialog is used to insert table at selection.\n */\nvar TableDialog = /** @class */ (function () {\n    /**\n     * @param {DocumentHelper} documentHelper - Specifies the document helper\n     * @private\n     */\n    function TableDialog(documentHelper) {\n        var _this = this;\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.onCancelButtonClick = function () {\n            _this.documentHelper.dialog.hide();\n            _this.documentHelper.updateFocus();\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.onInsertTableClick = function () {\n            if (_this.columnValueTexBox.value < 1 || _this.columnValueTexBox.value\n                > _this.documentHelper.owner.documentEditorSettings.maximumColumns) {\n                var columnAlertPopup = _this.localeValue.getConstant('Number of columns must be between') + ' 1 ' + _this.localeValue.getConstant('and') + ' ' + _this.documentHelper.owner.documentEditorSettings.maximumColumns.toString();\n                _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_2__.DialogUtility.alert(columnAlertPopup).enableRtl = _this.documentHelper.owner.enableRtl;\n                return;\n            }\n            if (_this.rowValueTextBox.value < 1 || _this.rowValueTextBox.value > _this.documentHelper.owner.documentEditorSettings.maximumRows) {\n                var rowAlertPopup = _this.localeValue.getConstant('Number of rows must be between') + ' 1 ' + _this.localeValue.getConstant('and') + ' ' + _this.documentHelper.owner.documentEditorSettings.maximumColumns.toString();\n                _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_2__.DialogUtility.alert(rowAlertPopup).enableRtl = _this.documentHelper.owner.enableRtl;\n                return;\n            }\n            if (_this.rowValueTextBox.value <= _this.documentHelper.owner.documentEditorSettings.maximumRows\n                && _this.columnValueTexBox.value <= _this.documentHelper.owner.documentEditorSettings.maximumColumns) {\n                var rowCount = _this.rowValueTextBox.value;\n                var columnCount = _this.columnValueTexBox.value;\n                if (!((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(rowCount) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(columnCount))) {\n                    _this.documentHelper.owner.editorModule.insertTable(rowCount, columnCount);\n                }\n                _this.documentHelper.hideDialog();\n            }\n        };\n        this.documentHelper = documentHelper;\n    }\n    TableDialog.prototype.getModuleName = function () {\n        return 'TableDialog';\n    };\n    /**\n     * @private\n     * @param {L10n} localValue - Specified the locale value.\n     * @returns {void}\n     */\n    TableDialog.prototype.initTableDialog = function (localValue) {\n        this.target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'e-de-insert-table' });\n        this.parentDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div');\n        this.columnValue = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'e-de-container-row' });\n        this.columnsCountBox = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('input', {\n            attrs: { type: 'text' }\n        });\n        this.columnValue.appendChild(this.columnsCountBox);\n        this.columnsCountBox.setAttribute('aria-labelledby', localValue.getConstant('Insert Table'));\n        this.rowValue = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div');\n        this.rowsCountBox = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('input', {\n            attrs: { type: 'text' }\n        });\n        this.rowValue.appendChild(this.rowsCountBox);\n        this.parentDiv.appendChild(this.columnValue);\n        this.parentDiv.appendChild(this.rowValue);\n        this.target.appendChild(this.parentDiv);\n        this.rowValueTextBox = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_0__.NumericTextBox({\n            format: '#',\n            value: 2,\n            min: 1,\n            strictMode: true,\n            enablePersistence: false,\n            placeholder: localValue.getConstant('Number of rows'),\n            floatLabelType: 'Always'\n        });\n        this.rowValueTextBox.appendTo(this.rowsCountBox);\n        this.rowsCountBox.setAttribute('aria-labelledby', localValue.getConstant('Number of rows'));\n        this.columnValueTexBox = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_0__.NumericTextBox({\n            format: '#',\n            value: 2,\n            min: 1,\n            strictMode: true,\n            enablePersistence: false,\n            placeholder: localValue.getConstant('Number of columns'),\n            floatLabelType: 'Always'\n        });\n        this.columnsCountBox.setAttribute('aria-labelledby', localValue.getConstant('Number of columns'));\n        this.parentDiv.setAttribute('aria-labelledby', localValue.getConstant('Insert Table'));\n        this.parentDiv.setAttribute('aria-describedby', localValue.getConstant('Insert Table'));\n        this.columnValueTexBox.appendTo(this.columnsCountBox);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    TableDialog.prototype.show = function () {\n        var localValue = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.L10n('documenteditor', this.documentHelper.owner.defaultLocale);\n        localValue.setLocale(this.documentHelper.owner.locale);\n        this.localeValue = localValue;\n        if (!this.target) {\n            this.initTableDialog(localValue);\n        }\n        if (this.documentHelper.selection.caret.style.display !== 'none') {\n            this.documentHelper.selection.caret.style.display = 'none';\n        }\n        this.documentHelper.dialog.header = localValue.getConstant('Insert Table');\n        this.documentHelper.dialog.height = 'auto';\n        this.documentHelper.dialog.width = 'auto';\n        this.documentHelper.dialog.content = this.target;\n        this.documentHelper.dialog.beforeOpen = this.documentHelper.updateFocus;\n        this.documentHelper.dialog.buttons = [{\n                click: this.onInsertTableClick,\n                buttonModel: { content: localValue.getConstant('Ok'), cssClass: 'e-flat e-table-ok', isPrimary: true }\n            },\n            {\n                click: this.onCancelButtonClick,\n                buttonModel: { content: localValue.getConstant('Cancel'), cssClass: 'e-flat e-table-cancel' }\n            }];\n        this.rowValueTextBox.value = 2;\n        this.columnValueTexBox.value = 2;\n        this.documentHelper.dialog.close = this.documentHelper.updateFocus;\n        this.documentHelper.dialog.dataBind();\n        this.columnValueTexBox.focusIn();\n        this.documentHelper.dialog.show();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    TableDialog.prototype.destroy = function () {\n        if (this.columnsCountBox) {\n            if (this.columnsCountBox.parentElement) {\n                this.columnsCountBox.parentElement.removeChild(this.columnsCountBox);\n            }\n            this.columnsCountBox = undefined;\n        }\n        if (this.rowsCountBox) {\n            if (this.rowsCountBox.parentElement) {\n                this.rowsCountBox.parentElement.removeChild(this.rowsCountBox);\n            }\n            this.rowsCountBox = undefined;\n        }\n        if (this.columnValueTexBox) {\n            this.columnValueTexBox.destroy();\n            this.columnValueTexBox = undefined;\n        }\n        if (this.rowValueTextBox) {\n            this.rowValueTextBox.destroy();\n            this.rowValueTextBox = undefined;\n        }\n        this.columnsCountBox = undefined;\n        this.rowsCountBox = undefined;\n        this.documentHelper = undefined;\n        this.removeElements();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.target)) {\n            if (this.target.parentElement) {\n                this.target.parentElement.removeChild(this.target);\n            }\n            for (var i = 0; i < this.target.childNodes.length; i++) {\n                this.target.removeChild(this.target.childNodes[parseInt(i.toString(), 10)]);\n                i--;\n            }\n            this.target = undefined;\n        }\n    };\n    TableDialog.prototype.removeElements = function () {\n        if (this.parentDiv) {\n            this.parentDiv.remove();\n            this.parentDiv = undefined;\n        }\n        if (this.columnValue) {\n            this.columnValue.remove();\n            this.columnValue = undefined;\n        }\n        if (this.rowValue) {\n            this.rowValue.remove();\n            this.rowValue = undefined;\n        }\n    };\n    return TableDialog;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/table-dialog.js?");

/***/ })

}]);