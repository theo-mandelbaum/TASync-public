"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-pdfviewer_src_pdfviewer_base_navigation-pane_js-8c065642"],{

/***/ "./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/base/navigation-pane.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/base/navigation-pane.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NavigationPane: () => (/* binding */ NavigationPane)\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n/* harmony import */ var _syncfusion_ej2_notifications__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-notifications */ \"./node_modules/@syncfusion/ej2-notifications/index.js\");\n/* harmony import */ var _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-pdf */ \"./node_modules/@syncfusion/ej2-pdf/index.js\");\n\n\n\n\n\n\n/**\n * The `NavigationPane` module is used to handle navigation pane for thumbnail and bookmark navigation of PDF viewer.\n *\n * @param {args} args - args\n * @returns {void}\n * @hidden\n */\nvar NavigationPane = /** @class */ (function () {\n    /**\n     * Initialize the constructor of navigationPane.\n     *\n     * @param { PdfViewer } viewer - Specified PdfViewer class.\n     * @param { PdfViewerBase } base - The pdfViewerBase.\n     */\n    function NavigationPane(viewer, base) {\n        var _this = this;\n        this.thumbnailWidthMin = 200;\n        this.contentContainerScrollWidth = 33;\n        this.closeButtonLeft = 170;\n        this.isTooltipCreated = false;\n        this.annotationContextMenu = [];\n        this.isCommentPanelShow = false;\n        this.commentPanelWidthMin = 300;\n        /**\n         * @private\n         */\n        this.isThumbnail = false;\n        /**\n         * @private\n         */\n        this.isThumbnailAddedProgrammatically = false;\n        /**\n         * @private\n         */\n        this.isBookmarkOpenProgrammatically = false;\n        /**\n         * @private\n         */\n        this.isNavigationToolbarVisible = false;\n        /**\n         * @private\n         */\n        this.isBookmarkListOpen = false;\n        /**\n         * @private\n         */\n        this.isNavigationPaneResized = false;\n        /**\n         * @private\n         */\n        this.isBookmarkOpen = false;\n        /**\n         * @private\n         */\n        this.isThumbnailOpen = false;\n        /**\n         * @private\n         */\n        this.restrictUpdateZoomValue = true;\n        this.loadImportAnnotation = function (args) {\n            var upoadedFiles = args.target.files;\n            if (args.target.files[0] !== null) {\n                var uploadedFile = upoadedFiles[0];\n                if (uploadedFile) {\n                    _this.pdfViewer.fireImportStart(uploadedFile);\n                    var uploadedFileType = uploadedFile.type;\n                    if (uploadedFile.name.split('.json').length > 1 && uploadedFileType.includes('json')) {\n                        var reader = new FileReader();\n                        reader.readAsDataURL(uploadedFile);\n                        reader.onload = function (e) {\n                            if (e.currentTarget.result) {\n                                var importFile = e.currentTarget.result.split(',')[1];\n                                var annotationData = atob(importFile);\n                                if (annotationData) {\n                                    // Encountering a script error while attempting to import annotations from the older version JSON document. As a result, the below line has been commented: Task ID: 842694\n                                    // annotationData = this.pdfViewerBase.getSanitizedString(annotationData);\n                                    var jsonData = JSON.parse(annotationData);\n                                    var firstAnnotation = jsonData.pdfAnnotation[Object.keys(jsonData.pdfAnnotation)[0]];\n                                    if ((Object.keys(jsonData.pdfAnnotation).length >= 1) && (firstAnnotation.textMarkupAnnotation ||\n                                        firstAnnotation.measureShapeAnnotation || firstAnnotation.freeTextAnnotation ||\n                                        firstAnnotation.stampAnnotations || firstAnnotation.signatureInkAnnotation ||\n                                        (firstAnnotation.shapeAnnotation && firstAnnotation.shapeAnnotation[0].Bounds))) {\n                                        _this.pdfViewerBase.isPDFViewerJson = true;\n                                        _this.pdfViewerBase.importAnnotations(jsonData, _index__WEBPACK_IMPORTED_MODULE_0__.AnnotationDataFormat.Json);\n                                    }\n                                    else {\n                                        _this.pdfViewerBase.isPDFViewerJson = false;\n                                        if (!_this.pdfViewerBase.clientSideRendering) {\n                                            _this.pdfViewerBase.importAnnotations(importFile, _index__WEBPACK_IMPORTED_MODULE_0__.AnnotationDataFormat.Json);\n                                        }\n                                        else {\n                                            _this.pdfViewerBase.importAnnotations((0,_syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_5__._decode)(importFile), _index__WEBPACK_IMPORTED_MODULE_0__.AnnotationDataFormat.Json);\n                                        }\n                                    }\n                                }\n                            }\n                        };\n                    }\n                    else if (uploadedFile.name.split('.xfdf').length > 1 && (uploadedFileType.includes('xfdf') || args.target.accept.includes('xfdf'))) {\n                        var reader = new FileReader();\n                        if (!_this.pdfViewerBase.clientSideRendering) {\n                            reader.readAsDataURL(uploadedFile);\n                        }\n                        else {\n                            reader.readAsArrayBuffer(uploadedFile);\n                        }\n                        reader.onload = function (e) {\n                            if (e.currentTarget.result) {\n                                if (!_this.pdfViewerBase.clientSideRendering) {\n                                    var importFile = e.currentTarget.result.split(',')[1];\n                                    var annotationData = atob(importFile);\n                                    if (annotationData) {\n                                        _this.pdfViewerBase.importAnnotations(importFile, _index__WEBPACK_IMPORTED_MODULE_0__.AnnotationDataFormat.Xfdf, true);\n                                    }\n                                }\n                                else {\n                                    var importFileByteArray = new Uint8Array(e.currentTarget.result);\n                                    if (importFileByteArray) {\n                                        _this.pdfViewerBase.importAnnotations(importFileByteArray, _index__WEBPACK_IMPORTED_MODULE_0__.AnnotationDataFormat.Xfdf, true);\n                                    }\n                                }\n                            }\n                        };\n                    }\n                    else {\n                        _this.pdfViewer.fireImportFailed(uploadedFile, _this.pdfViewer.localeObj.getConstant('Import Failed'));\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isBlazor)()) {\n                            var promise = _this.pdfViewer._dotnetInstance.invokeMethodAsync('GetLocaleText', 'PdfViewer_ImportFailed');\n                            promise.then(function (value) {\n                                _this.pdfViewerBase.openImportExportNotificationPopup(value);\n                            });\n                        }\n                        else {\n                            _this.pdfViewerBase.openImportExportNotificationPopup(_this.pdfViewer.localeObj.getConstant('Import Failed'));\n                        }\n                    }\n                }\n                args.target.value = '';\n            }\n        };\n        /**\n         * @param {MouseEvent} event - The event.\n         * @returns {void}\n         */\n        this.resizeIconMouseOver = function (event) {\n            event.srcElement.style.cursor = 'e-resize';\n        };\n        /**\n         * @param {MouseEvent} event - The event.\n         * @returns {void}\n         */\n        this.resizePanelMouseDown = function (event) {\n            var proxy = null;\n            // eslint-disable-next-line\n            proxy = _this;\n            proxy.offset = [\n                proxy.sideBarResizer.offsetLeft - event.clientX,\n                proxy.sideBarResizer.offsetTop - event.clientY,\n                proxy.sideBarResizer.offsetParent.clientWidth\n            ];\n            _this.previousX = event.clientX;\n            proxy.isDown = true;\n            proxy.isNavigationPaneResized = true;\n            proxy.pdfViewerBase.viewerContainer.style.cursor = 'e-resize';\n            if (proxy.sideBarContentContainer) {\n                proxy.sideBarContentContainer.style.cursor = 'e-resize';\n            }\n        };\n        /**\n         * @param {MouseEvent} event - The event.\n         * @returns {void}\n         */\n        this.resizeViewerMouseLeave = function (event) {\n            var proxy = null;\n            // eslint-disable-next-line\n            proxy = _this;\n            if (proxy.isDown) {\n                setTimeout(function () {\n                    proxy.pdfViewerBase.onWindowResize();\n                }, 200);\n            }\n            proxy.isDown = false;\n            if (proxy.isNavigationPaneResized && proxy.sideBarContentContainer) {\n                proxy.pdfViewerBase.viewerContainer.style.cursor = 'default';\n                proxy.sideBarContentContainer.style.cursor = 'default';\n                proxy.isNavigationPaneResized = false;\n            }\n            if (proxy.commentPanelContainer && proxy.isCommentPanelShow) {\n                _this.commentPanelMouseLeave(event);\n                proxy.isCommentPanelShow = false;\n            }\n        };\n        /**\n         * @param {MouseEvent} event - The event.\n         * @returns {void}\n         */\n        this.resizePanelMouseMove = function (event) {\n            var proxy = null;\n            // eslint-disable-next-line\n            proxy = _this;\n            if (!_this.pdfViewerBase.getPopupNoteVisibleStatus()) {\n                var target = event.target;\n                if (_this.pdfViewerBase.skipPreventDefault(target)) {\n                    event.preventDefault();\n                }\n                if (proxy.isDown && _this.sideBarContentContainer) {\n                    // prevent the sidebar from becoming too narrow, or from occupying more\n                    // than half of the available viewer width.\n                    if (_this.pdfViewer.enableRtl) {\n                        var currentWidth = _this.previousX - event.clientX;\n                        var width = currentWidth + proxy.offset[2];\n                        var maxWidth = Math.floor(_this.outerContainerWidth / 2);\n                        if (width > maxWidth) {\n                            width = maxWidth;\n                        }\n                        if (width < _this.thumbnailWidthMin) {\n                            width = _this.thumbnailWidthMin;\n                        }\n                        proxy.sideBarResizer.style.right = width + 'px';\n                        proxy.sideBarContentContainer.style.width = width + 'px';\n                        proxy.sideBarContent.style.width = width + 'px';\n                        proxy.sideBarContentSplitter.style.width = width + 'px';\n                        proxy.sideBarTitleContainer.style.width = width + 'px';\n                        proxy.pdfViewerBase.viewerContainer.style.right = proxy.getViewerContainerLeft() + 'px';\n                        proxy.pdfViewerBase.viewerContainer.style.left = proxy.getViewerContainerRight() + 'px';\n                    }\n                    else {\n                        var width = event.clientX + proxy.offset[0];\n                        var maxWidth = Math.floor(_this.outerContainerWidth / 2);\n                        if (width > maxWidth) {\n                            width = maxWidth;\n                        }\n                        if (width < _this.thumbnailWidthMin) {\n                            width = _this.thumbnailWidthMin;\n                        }\n                        proxy.sideBarResizer.style.left = width + 'px';\n                        proxy.closeDiv.style.left = width - proxy.contentContainerScrollWidth + 'px';\n                        proxy.sideBarContentContainer.style.width = width + 'px';\n                        proxy.sideBarContent.style.width = width + 'px';\n                        proxy.sideBarContentSplitter.style.width = width + 'px';\n                        proxy.sideBarTitleContainer.style.width = width + 'px';\n                        proxy.pdfViewerBase.viewerContainer.style.left = proxy.getViewerContainerLeft() + 'px';\n                        proxy.pdfViewerBase.viewerContainer.style.right = proxy.getViewerContainerRight() + 'px';\n                    }\n                    var viewerWidth = (proxy.pdfViewer.element.clientWidth - proxy.getViewerContainerLeft() -\n                        proxy.getViewerContainerRight());\n                    proxy.pdfViewerBase.viewerContainer.style.width = viewerWidth + 'px';\n                    proxy.pdfViewerBase.pageContainer.style.width = proxy.pdfViewerBase.viewerContainer.clientWidth + 'px';\n                    proxy.pdfViewer.thumbnailViewModule.gotoThumbnailImage(proxy.pdfViewerBase.currentPageNumber - 1);\n                    proxy.pdfViewer.thumbnailViewModule.renderViewPortThumbnailImage();\n                    proxy.pdfViewerBase.updateZoomValue();\n                    if (!proxy.bookmarkButton.children[0].classList.contains('e-pv-bookmark-disable-icon')) {\n                        proxy.pdfViewer.bookmarkViewModule.setBookmarkContentHeight();\n                    }\n                }\n                else if (proxy.isCommentPanelShow && _this.commentPanelContainer) {\n                    _this.updateCommentPanelContainer(event);\n                }\n            }\n        };\n        /**\n         * @param {MouseEvent} event - The event.\n         * @returns {void}\n         */\n        this.sideToolbarOnClose = function (event) {\n            var proxy = null;\n            // eslint-disable-next-line\n            proxy = _this;\n            proxy.removeThumbnailSelectionIconTheme();\n            proxy.removeBookmarkSelectionIconTheme();\n            proxy.updateViewerContainerOnClose();\n            proxy.isThumbnailAddedProgrammatically = false;\n            proxy.isBookmarkOpenProgrammatically = false;\n            proxy.isThumbnail = false;\n            proxy.isBookmarkOpen = false;\n        };\n        /**\n         * Private method to handle the click event of the \"organize\" button.\n         *\n         * @param {MouseEvent} event - The MouseEvent object representing the click event.\n         * @returns {void}\n         */\n        this.organizeButtonOnClick = function (event) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(_this.pdfViewer.pageOrganizer)) {\n                _this.pdfViewer.pageOrganizer.createOrganizeWindow();\n            }\n        };\n        /**\n         * @param {MouseEvent} event - The event.\n         * @private\n         * @returns {void}\n         */\n        this.sideToolbarOnClick = function (event) {\n            _this.sideBarTitle.textContent = _this.pdfViewer.localeObj.getConstant('Page Thumbnails');\n            _this.sideBarContent.setAttribute('aria-label', 'Thumbnail View Panel');\n            var proxy = null;\n            // eslint-disable-next-line\n            proxy = _this;\n            var bookmarkPane = document.getElementById(_this.pdfViewer.element.id + '_bookmark_view');\n            if (bookmarkPane) {\n                proxy.removeBookmarkSelectionIconTheme();\n                bookmarkPane.style.display = 'none';\n            }\n            document.getElementById(_this.pdfViewer.element.id + '_thumbnail_view').style.display = 'flex';\n            if (proxy.sideBarContentContainer) {\n                if (proxy.sideBarContentContainer.style.display !== 'none') {\n                    if (proxy.isBookmarkOpen) {\n                        proxy.isThumbnailOpen = true;\n                        proxy.isThumbnail = true;\n                        proxy.setThumbnailSelectionIconTheme();\n                        proxy.updateViewerContainerOnExpand();\n                        document.getElementById(proxy.pdfViewer.element.id + '_thumbnail_image_' + (proxy.pdfViewerBase.currentPageNumber - 1)).focus();\n                        proxy.isThumbnailAddedProgrammatically = true;\n                    }\n                    else {\n                        proxy.isThumbnailOpen = false;\n                        proxy.removeThumbnailSelectionIconTheme();\n                        proxy.updateViewerContainerOnClose();\n                        proxy.isThumbnailAddedProgrammatically = false;\n                        proxy.isThumbnail = false;\n                    }\n                }\n                else {\n                    proxy.sideBarContent.focus();\n                    proxy.isThumbnailOpen = true;\n                    proxy.setThumbnailSelectionIconTheme();\n                    proxy.updateViewerContainerOnExpand();\n                    proxy.isThumbnail = true;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(document.getElementById(proxy.pdfViewer.element.id + '_thumbnail_image_' + (proxy.pdfViewerBase.currentPageNumber - 1)))) {\n                        document.getElementById(proxy.pdfViewer.element.id + '_thumbnail_image_' + (proxy.pdfViewerBase.currentPageNumber - 1)).focus();\n                    }\n                    proxy.isThumbnailAddedProgrammatically = true;\n                }\n            }\n            proxy.isBookmarkOpen = false;\n            proxy.isBookmarkOpenProgrammatically = false;\n            if (_this.pdfViewer.annotationModule && _this.pdfViewer.annotationModule.inkAnnotationModule) {\n                var currentPageNumber = parseInt(_this.pdfViewer.annotationModule.inkAnnotationModule.currentPageNumber, 10);\n                _this.pdfViewer.annotationModule.inkAnnotationModule.drawInkAnnotation(currentPageNumber);\n            }\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.openThumbnailPane = function () {\n            var proxy = null;\n            // eslint-disable-next-line\n            proxy = _this;\n            var sideBarContent = document.getElementById(_this.pdfViewer.element.id + '_sideBarContent');\n            var sideBarContentContainer = document.getElementById(_this.pdfViewer.element.id + '_sideBarContentContainer');\n            var viewerContainer = document.getElementById(_this.pdfViewer.element.id + '_viewerContainer');\n            var pageContainer = document.getElementById(_this.pdfViewer.element.id + '_pageViewContainer');\n            document.getElementById(_this.pdfViewer.element.id + '_thumbnail_view').style.display = 'block';\n            document.getElementById(_this.pdfViewer.element.id + '_sideBarResizer').style.display = 'none';\n            proxy.sideBarTitle.textContent = _this.pdfViewer.localeObj.getConstant('Page Thumbnails');\n            proxy.sideBarContent.setAttribute('aria-label', 'Thumbnail View Panel');\n            proxy.sideBarContent.setAttribute('tabindex', '0');\n            var bookmarkPane = document.getElementById(_this.pdfViewer.element.id + '_bookmark_view');\n            if (bookmarkPane) {\n                proxy.removeBookmarkSelectionIconTheme();\n                bookmarkPane.style.display = 'none';\n            }\n            if (sideBarContentContainer && !_this.isThumbnailAddedProgrammatically) {\n                if (proxy.isThumbnail) {\n                    sideBarContentContainer.style.display = 'none';\n                    viewerContainer.style.width = proxy.pdfViewer.element.clientWidth + 'px';\n                    pageContainer.style.width = viewerContainer.clientWidth + 'px';\n                    viewerContainer.style.left = sideBarContentContainer.clientWidth + 'px';\n                    proxy.pdfViewerBase.updateZoomValue();\n                    proxy.removeThumbnailSelectionIconTheme();\n                    proxy.isThumbnail = false;\n                }\n                else {\n                    sideBarContent.focus();\n                    proxy.setThumbnailSelectionIconTheme();\n                    proxy.updateViewerContainerOnExpand();\n                    proxy.isThumbnail = true;\n                    proxy.pdfViewerBase.updateZoomValue();\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(proxy.pdfViewer.thumbnailViewModule)) {\n                        proxy.pdfViewer.thumbnailViewModule.gotoThumbnailImage(proxy.pdfViewerBase.currentPageNumber - 1);\n                    }\n                    proxy.isThumbnailAddedProgrammatically = true;\n                    proxy.isThumbnailOpen = true;\n                    proxy.isBookmarkOpen = false;\n                    proxy.isBookmarkOpenProgrammatically = false;\n                }\n            }\n            if (_this.pdfViewer.annotationModule && _this.pdfViewer.annotationModule.inkAnnotationModule) {\n                var currentPageNumber = parseInt(_this.pdfViewer.annotationModule.inkAnnotationModule.currentPageNumber, 10);\n                _this.pdfViewer.annotationModule.inkAnnotationModule.drawInkAnnotation(currentPageNumber);\n            }\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.closeThumbnailPane = function () {\n            var proxy = null;\n            // eslint-disable-next-line\n            proxy = _this;\n            if (proxy.isThumbnail || proxy.isThumbnailAddedProgrammatically || proxy.pdfViewer.isThumbnailViewOpen) {\n                proxy.sideBarContent.removeAttribute('tabindex');\n                proxy.removeThumbnailSelectionIconTheme();\n                proxy.isThumbnailOpen = false;\n                proxy.updateViewerContainerOnClose();\n                proxy.isThumbnailAddedProgrammatically = false;\n                proxy.isThumbnail = false;\n            }\n        };\n        /**\n         * @param {MouseEvent} event - The event.\n         * @private\n         * @returns {void}\n         */\n        this.bookmarkButtonOnClick = function (event) {\n            _this.openBookmarkcontentInitially(true);\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.closeBookmarkPane = function () {\n            // eslint-disable-next-line\n            var proxy = _this;\n            if (proxy.isBookmarkOpen || proxy.isBookmarkOpenProgrammatically) {\n                proxy.removeBookmarkSelectionIconTheme();\n                proxy.isBookmarkOpen = false;\n                proxy.updateViewerContainerOnClose();\n                proxy.isBookmarkOpenProgrammatically = false;\n                proxy.isBookmarkListOpen = false;\n            }\n        };\n        /**\n         * @param {MouseEvent} event - The event.\n         * @returns {void}\n         */\n        this.commentPanelMouseDown = function (event) {\n            var proxy = null;\n            // eslint-disable-next-line\n            proxy = _this;\n            proxy.offset = [\n                proxy.commentPanelResizer.offsetLeft - event.clientX,\n                proxy.commentPanelResizer.offsetTop - event.clientY,\n                proxy.getViewerContainerRight()\n            ];\n            _this.isCommentPanelShow = true;\n            _this.previousX = event.clientX;\n            proxy.pdfViewerBase.viewerContainer.style.cursor = 'e-resize';\n            proxy.commentPanelResizer.style.cursor = 'e-resize';\n        };\n        /**\n         * @param {MouseEvent} event - The event.\n         * @returns {void}\n         */\n        this.updateCommentPanelContainer = function (event) {\n            var proxy = null;\n            // eslint-disable-next-line\n            proxy = _this;\n            // prevent the commentPanel from becoming too narrow, or from occupying more\n            // than half of the available viewer width.\n            if (_this.pdfViewer.enableRtl) {\n                var width = event.clientX + proxy.offset[0];\n                var maxWidth = Math.floor(_this.outerContainerWidth / 2);\n                if (width > maxWidth) {\n                    width = maxWidth;\n                }\n                if (width < _this.commentPanelWidthMin) {\n                    width = _this.commentPanelWidthMin;\n                }\n                proxy.commentPanelResizer.style.left = width + 'px';\n                proxy.commentPanelContainer.style.width = width + 'px';\n                proxy.pdfViewerBase.viewerContainer.style.left = proxy.getViewerContainerRight() + 'px';\n                proxy.pdfViewerBase.viewerContainer.style.right = proxy.getViewerContainerLeft() + 'px';\n            }\n            else {\n                var currentWidth = _this.previousX - event.clientX;\n                var width = currentWidth + proxy.offset[2];\n                var maxWidth = Math.floor(_this.outerContainerWidth / 2);\n                if (width > maxWidth) {\n                    width = maxWidth;\n                }\n                if (width < _this.commentPanelWidthMin) {\n                    width = _this.commentPanelWidthMin;\n                }\n                proxy.commentPanelResizer.style.right = width + 'px';\n                proxy.commentPanelContainer.style.width = width + 'px';\n                proxy.pdfViewerBase.viewerContainer.style.right = proxy.getViewerContainerRight() + 'px';\n                proxy.pdfViewerBase.viewerContainer.style.left = proxy.getViewerContainerLeft() + 'px';\n            }\n            _this.pdfViewer.annotation.stickyNotesAnnotationModule.updateCommentPanelTextTop();\n            var viewerWidth = (proxy.pdfViewer.element.clientWidth - proxy.getViewerContainerLeft() -\n                proxy.getViewerContainerRight());\n            proxy.pdfViewerBase.viewerContainer.style.width = viewerWidth + 'px';\n            proxy.pdfViewerBase.pageContainer.style.width = proxy.pdfViewerBase.viewerContainer.clientWidth + 'px';\n            proxy.calculateCommentPanelWidth();\n            proxy.pdfViewerBase.updateZoomValue();\n        };\n        /**\n         * @param {MouseEvent} event - The event.\n         * @returns {void}\n         */\n        this.commentPanelMouseLeave = function (event) {\n            var proxy = null;\n            // eslint-disable-next-line\n            proxy = _this;\n            if (proxy.commentPanelContainer) {\n                proxy.pdfViewerBase.viewerContainer.style.cursor = 'default';\n                proxy.commentPanelContainer.style.cursor = 'default';\n            }\n        };\n        this.pdfViewer = viewer;\n        this.pdfViewerBase = base;\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.initializeNavigationPane = function () {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n            this.createNavigationPane();\n        }\n        else {\n            this.commentPanelContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_commantPanel', className: 'e-pv-mobile-comments-container' });\n            this.pdfViewerBase.mainContainer.appendChild(this.commentPanelContainer);\n            if (this.pdfViewer.enableRtl) {\n                this.commentPanelContainer.style.left = 0 + 'px';\n            }\n            else {\n                this.commentPanelContainer.style.right = 0 + 'px';\n            }\n            this.commentPanelContainer.style.bottom = 0 + 'px';\n            this.createCommentPanelTitleContainer();\n            this.commentPanelContainer.style.display = 'none';\n            this.commentsContentContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_commentscontentcontainer', className: 'e-pv-comments-content-container' });\n            this.commentPanelContainer.appendChild(this.commentsContentContainer);\n            this.createFileElement(this.commentPanelContainer);\n            this.createXFdfFileElement(this.commentPanelContainer);\n        }\n    };\n    NavigationPane.prototype.createNavigationPane = function () {\n        var isblazor = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isBlazor)();\n        if (!isblazor) {\n            this.sideBarToolbar = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_sideBarToolbar', className: 'e-pv-sidebar-toolbar', attrs: { 'role': 'toolbar', 'aria-orientation': 'vertical', 'tabindex': '-1', 'aria-label': 'Sidebar Toolbar' } });\n            this.sideBarToolbarSplitter = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_sideBarToolbarSplitter', className: 'e-pv-sidebar-toolbar-splitter' });\n            this.sideBarContentContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_sideBarContentContainer', className: 'e-pv-sidebar-content-container' });\n            this.sideBarContentSplitter = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_sideBarContentSplitter', className: 'e-pv-sidebar-content-splitter' });\n            this.sideBarContent = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_sideBarContent', className: 'e-pv-sidebar-content' });\n            this.sideBarTitleContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_sideBarTitleContainer', className: 'e-pv-sidebar-title-container' });\n            this.sideBarTitle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_sideBarTitle', className: 'e-pv-sidebar-title', attrs: { 'tabindex': '-1' } });\n            this.sideBarResizer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_sideBarResizer', className: 'e-pv-sidebar-resizer' });\n        }\n        else {\n            this.sideBarToolbar = this.pdfViewer.element.querySelector('.e-pv-sidebar-toolbar');\n            this.sideBarToolbarSplitter = this.pdfViewer.element.querySelector('.e-pv-sidebar-toolbar-splitter');\n            this.sideBarContentContainer = this.pdfViewer.element.querySelector('.e-pv-sidebar-content-container');\n            this.sideBarContentSplitter = this.pdfViewer.element.querySelector('.e-pv-sidebar-content-splitter');\n            this.sideBarContent = this.pdfViewer.element.querySelector('.e-pv-sidebar-content');\n            this.sideBarTitleContainer = this.pdfViewer.element.querySelector('.e-pv-sidebar-title-container');\n            this.sideBarTitle = this.pdfViewer.element.querySelector('.e-pv-sidebar-title');\n            this.sideBarResizer = this.pdfViewer.element.querySelector('.e-pv-sidebar-resizer');\n        }\n        this.pdfViewerBase.mainContainer.appendChild(this.sideBarToolbar);\n        if (this.pdfViewer.enableRtl) {\n            this.sideBarToolbar.style.cssFloat = 'right';\n            this.sideBarToolbar.style.right = 1 + 'px';\n            this.sideBarToolbar.style.position = 'relative';\n        }\n        this.pdfViewerBase.mainContainer.appendChild(this.sideBarToolbarSplitter);\n        if (this.pdfViewer.enableRtl) {\n            this.sideBarToolbarSplitter.classList.add('e-right');\n        }\n        else {\n            this.sideBarToolbarSplitter.classList.add('e-left');\n        }\n        if (this.pdfViewer.enableRtl) {\n            this.sideBarContentContainer.classList.add('e-right');\n        }\n        else {\n            this.sideBarContentContainer.classList.add('e-left');\n        }\n        this.pdfViewerBase.mainContainer.appendChild(this.sideBarContentContainer);\n        if (this.pdfViewer.enableRtl) {\n            this.sideBarContentSplitter.style.right = 0 + 'px';\n        }\n        this.sideBarContentContainer.appendChild(this.sideBarContentSplitter);\n        if (this.pdfViewer.enableRtl) {\n            this.sideBarContent.style.right = 0 + 'px';\n            this.sideBarContent.style.direction = 'rtl';\n        }\n        this.sideBarContentContainer.appendChild(this.sideBarContent);\n        if (this.pdfViewer.enableRtl) {\n            this.sideBarTitleContainer.style.right = 0 + 'px';\n        }\n        if (this.pdfViewer.enableRtl) {\n            this.sideBarTitle.classList.add('e-right');\n        }\n        else {\n            this.sideBarTitle.classList.add('e-left');\n        }\n        this.sideBarTitleContainer.appendChild(this.sideBarTitle);\n        this.sideBarContentContainer.appendChild(this.sideBarTitleContainer);\n        this.sideBarResizer.addEventListener('mousedown', this.resizePanelMouseDown);\n        this.pdfViewerBase.mainContainer.addEventListener('mousemove', this.resizePanelMouseMove);\n        this.pdfViewerBase.mainContainer.addEventListener('mouseup', this.resizeViewerMouseLeave);\n        if (this.pdfViewer.enableRtl) {\n            this.sideBarResizer.classList.add('e-right');\n        }\n        else {\n            this.sideBarResizer.classList.add('e-left');\n        }\n        this.sideBarContentContainer.appendChild(this.sideBarResizer);\n        this.createCommentPanel();\n        var controlLeft = this.getViewerContainerLeft();\n        var controlRight = this.getViewerContainerRight();\n        if (!this.pdfViewer.enableRtl) {\n            this.pdfViewerBase.viewerContainer.style.left = controlLeft + 'px';\n            this.pdfViewerBase.viewerContainer.style.right = controlRight + 'px';\n        }\n        this.pdfViewerBase.viewerContainer.style.width = (this.pdfViewer.element.clientWidth - controlLeft - this.commentPanelContainer.clientWidth) + 'px';\n        this.sideBarContentContainer.style.display = 'none';\n        if (!this.pdfViewer.enableNavigationToolbar) {\n            if (!this.pdfViewer.enableRtl) {\n                this.sideBarContentContainer.style.left = '0px';\n            }\n            else {\n                this.sideBarContentContainer.style.right = '0px';\n            }\n        }\n        this.createSidebarToolBar();\n        this.createSidebarTitleCloseButton();\n        this.createResizeIcon();\n        this.sideBarToolbar.addEventListener('mouseup', this.sideToolbarOnMouseup.bind(this));\n        this.sideBarContentContainer.addEventListener('mouseup', this.sideBarTitleOnMouseup.bind(this));\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.adjustPane = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isBlazor)()) {\n            var splitterElement = this.pdfViewer.element.querySelector('.e-pv-sidebar-toolbar-splitter');\n            var sideToolbarElement = this.pdfViewer.element.querySelector('.e-pv-sidebar-toolbar');\n            var sideToolbarContent = this.pdfViewer.element.querySelector('.e-pv-sidebar-content-container');\n            var toolbarContainer = this.pdfViewer.element.querySelector('.e-pv-toolbar');\n            var toolbarHeight = toolbarContainer.getBoundingClientRect().height;\n            if (toolbarHeight === 0) {\n                toolbarHeight = parseFloat(window.getComputedStyle(toolbarContainer)['height']) + 1;\n            }\n            if (!this.pdfViewer.enableToolbar) {\n                toolbarHeight = 0;\n            }\n            sideToolbarElement.style.top = toolbarHeight + 'px';\n            sideToolbarContent.style.top = toolbarHeight + 'px';\n            splitterElement.style.top = toolbarHeight + 'px';\n            sideToolbarElement.style.height = this.getSideToolbarHeight(toolbarHeight);\n            sideToolbarContent.style.height = this.getSideToolbarHeight(toolbarHeight);\n            splitterElement.style.height = this.getSideToolbarHeight(toolbarHeight);\n            this.pdfViewerBase.viewerContainer.style.height = this.getSideToolbarHeight(toolbarHeight);\n        }\n        else {\n            var splitterElement = this.pdfViewerBase.getElement('_sideBarToolbarSplitter');\n            var toolbarContainer = this.pdfViewerBase.getElement('_toolbarContainer');\n            var toolbarHeight = toolbarContainer.clientHeight;\n            if (toolbarHeight === 0) {\n                toolbarHeight = parseFloat(window.getComputedStyle(toolbarContainer)['height']) + 1;\n            }\n            this.sideBarToolbar.style.top = toolbarHeight + 'px';\n            this.sideBarContentContainer.style.top = toolbarHeight + 'px';\n            splitterElement.style.top = toolbarHeight + 'px';\n        }\n    };\n    NavigationPane.prototype.getSideToolbarHeight = function (toolbarHeight) {\n        var height = this.pdfViewer.element.getBoundingClientRect().height;\n        return (height !== 0) ? height - toolbarHeight + 'px' : '';\n    };\n    NavigationPane.prototype.createCommentPanel = function () {\n        this.commentPanelContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_commantPanel', className: 'e-pv-comment-panel' });\n        this.pdfViewerBase.mainContainer.appendChild(this.commentPanelContainer);\n        if (this.pdfViewer.enableRtl) {\n            this.commentPanelContainer.style.left = 0 + 'px';\n        }\n        else {\n            this.commentPanelContainer.style.right = 0 + 'px';\n        }\n        this.commentPanelContainer.style.bottom = 0 + 'px';\n        this.createCommentPanelTitleContainer();\n        this.commentPanelContainer.style.display = 'none';\n        this.commentsContentContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_commentscontentcontainer', className: 'e-pv-comments-content-container' });\n        this.commentPanelContainer.appendChild(this.commentsContentContainer);\n        this.commentPanelResizer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_commentPanelResizer', className: 'e-pv-comment-panel-resizer' });\n        if (this.pdfViewer.enableRtl) {\n            this.commentPanelResizer.classList.add('e-left');\n        }\n        else {\n            this.commentPanelResizer.classList.add('e-right');\n        }\n        this.commentPanelResizer.style.display = 'none';\n        this.commentPanelResizer.addEventListener('mousedown', this.commentPanelMouseDown);\n        this.pdfViewerBase.mainContainer.appendChild(this.commentPanelResizer);\n        this.createCommentPanelResizeIcon();\n        this.createFileElement(this.commentPanelContainer);\n        this.createXFdfFileElement(this.commentPanelContainer);\n    };\n    NavigationPane.prototype.createCommentPanelTitleContainer = function () {\n        var commentPanelTitleContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_commentPanelTitleContainer', className: 'e-pv-comment-panel-title-container' });\n        var commentpanelTilte = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_commentPanelTitle', className: 'e-pv-comment-panel-title', attrs: { 'tabindex': '-1' } });\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isBlazor)()) {\n            var promise = this.pdfViewer._dotnetInstance.invokeMethodAsync('GetLocaleText', 'PdfViewer_Comments');\n            promise.then(function (value) {\n                commentpanelTilte.innerText = value;\n            });\n        }\n        else {\n            commentpanelTilte.innerText = this.pdfViewer.localeObj.getConstant('Comments');\n        }\n        var annotationButton = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('button', { id: this.pdfViewer.element.id + '_annotations_btn' });\n        annotationButton.setAttribute('aria-label', 'annotation button');\n        annotationButton.setAttribute('type', 'button');\n        annotationButton.className = 'e-btn e-pv-tbar-btn e-pv-comment-panel-title-close-div e-btn';\n        var moreOptionButtonSpan = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', { id: this.pdfViewer.element.id + '_annotation_more_icon', className: 'e-pv-more-icon e-pv-icon' });\n        annotationButton.appendChild(moreOptionButtonSpan);\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.Browser.isDevice && !this.pdfViewer.enableDesktopMode && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isBlazor)()) {\n            var commentCloseIconDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('button');\n            commentCloseIconDiv.setAttribute('aria-label', 'annotation button');\n            commentCloseIconDiv.setAttribute('type', 'button');\n            commentCloseIconDiv.style.borderColor = 'transparent';\n            commentCloseIconDiv.style.paddingTop = '11px';\n            commentCloseIconDiv.style.paddingBottom = '11px';\n            commentCloseIconDiv.style.backgroundColor = 'transparent';\n            commentCloseIconDiv.addEventListener('click', this.closeCommentPanelContainer.bind(this));\n            commentpanelTilte.style.left = '37px';\n            var commentCloseIcon = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', { className: 'e-pv-annotation-tools-close-icon e-pv-icon' });\n            commentCloseIconDiv.appendChild(commentCloseIcon);\n            commentPanelTitleContainer.appendChild(commentCloseIconDiv);\n        }\n        commentPanelTitleContainer.appendChild(commentpanelTilte);\n        commentPanelTitleContainer.appendChild(annotationButton);\n        this.commentPanelContainer.appendChild(commentPanelTitleContainer);\n        this.createAnnotationContextMenu();\n        annotationButton.addEventListener('click', this.openAnnotationContextMenu.bind(this));\n    };\n    NavigationPane.prototype.createCommentPanelResizeIcon = function () {\n        this.commentPanelResizeIcon = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_commentPanel_resize', className: 'e-pv-resize-icon e-pv-icon' });\n        this.setCommentPanelResizeIconTop();\n        this.commentPanelResizeIcon.style.position = 'absolute';\n        this.commentPanelResizer.appendChild(this.commentPanelResizeIcon);\n    };\n    NavigationPane.prototype.openAnnotationContextMenu = function (event) {\n        this.annotationMenuObj.open(event.clientY, event.clientX, event.currentTarget);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.createAnnotationContextMenu = function () {\n        this.annotationContextMenu = [\n            { text: this.pdfViewer.localeObj.getConstant('Export Annotations') },\n            { text: this.pdfViewer.localeObj.getConstant('Import Annotations') },\n            { text: this.pdfViewer.localeObj.getConstant('Export XFDF') },\n            { text: this.pdfViewer.localeObj.getConstant('Import XFDF') }\n        ];\n        var annotationMenuElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('ul', { id: this.pdfViewer.element.id + '_annotation_context_menu' });\n        this.pdfViewer.element.appendChild(annotationMenuElement);\n        this.annotationMenuObj = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.ContextMenu({\n            target: '#' + this.pdfViewer.element.id + '_annotations_btn', items: this.annotationContextMenu,\n            select: this.annotationMenuItemSelect.bind(this)\n        });\n        if (this.pdfViewer.enableRtl) {\n            this.annotationMenuObj.enableRtl = true;\n        }\n        this.annotationMenuObj.appendTo(annotationMenuElement);\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.Browser.isDevice && !this.pdfViewer.enableDesktopMode) {\n            this.annotationMenuObj.animationSettings.effect = 'ZoomIn';\n        }\n        else {\n            this.annotationMenuObj.animationSettings.effect = 'SlideDown';\n        }\n    };\n    NavigationPane.prototype.annotationMenuItemSelect = function (args) {\n        if (this.pdfViewer.annotationModule && this.pdfViewer.annotationModule.inkAnnotationModule) {\n            var currentPageNumber = parseInt(this.pdfViewer.annotationModule.inkAnnotationModule.currentPageNumber, 10);\n            this.pdfViewer.annotationModule.inkAnnotationModule.drawInkAnnotation(currentPageNumber);\n        }\n        if (args.item) {\n            switch (args.item.text) {\n                case this.pdfViewer.localeObj.getConstant('Export Annotations'):\n                    this.pdfViewerBase.exportAnnotations(_index__WEBPACK_IMPORTED_MODULE_0__.AnnotationDataFormat.Json);\n                    break;\n                case this.pdfViewer.localeObj.getConstant('Import Annotations'):\n                    this.importAnnotationIconClick(args);\n                    break;\n                case this.pdfViewer.localeObj.getConstant('Export XFDF'):\n                    this.pdfViewerBase.exportAnnotations(_index__WEBPACK_IMPORTED_MODULE_0__.AnnotationDataFormat.Xfdf);\n                    break;\n                case this.pdfViewer.localeObj.getConstant('Import XFDF'):\n                    this.importXFdfAnnotationIconClick(args);\n                    break;\n                default:\n                    break;\n            }\n        }\n    };\n    NavigationPane.prototype.createFileElement = function (toolbarElement) {\n        this.annotationInputElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('input', { id: this.pdfViewer.element.id + '_annotationUploadElement', styles: 'position:fixed; left:-100em', attrs: { 'type': 'file', 'aria-label': 'upload elements' } });\n        this.annotationInputElement.setAttribute('accept', '.json');\n        toolbarElement.appendChild(this.annotationInputElement);\n        this.annotationInputElement.addEventListener('change', this.loadImportAnnotation);\n    };\n    NavigationPane.prototype.createXFdfFileElement = function (toolbarElement) {\n        this.annotationXFdfInputElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('input', { id: this.pdfViewer.element.id + '_annotationXFdfUploadElement', styles: 'position:fixed; left:-100em', attrs: { 'type': 'file', 'aria-label': 'upload elements' } });\n        this.annotationXFdfInputElement.setAttribute('accept', '.xfdf');\n        toolbarElement.appendChild(this.annotationXFdfInputElement);\n        this.annotationXFdfInputElement.addEventListener('change', this.loadImportAnnotation);\n    };\n    NavigationPane.prototype.importAnnotationIconClick = function (args) {\n        this.annotationInputElement.click();\n    };\n    NavigationPane.prototype.importXFdfAnnotationIconClick = function (args) {\n        this.annotationXFdfInputElement.click();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.closeCommentPanelContainer = function () {\n        var proxy = null;\n        // eslint-disable-next-line\n        proxy = this;\n        var viewerContainer = document.getElementById(this.pdfViewer.element.id + '_viewerContainer');\n        var pageContainer = document.getElementById(this.pdfViewer.element.id + '_pageViewContainer');\n        var commentPanel = document.getElementById(this.pdfViewer.element.id + '_commantPanel');\n        if (commentPanel) {\n            commentPanel.style.display = 'none';\n            if (proxy.commentPanelResizer) {\n                proxy.commentPanelResizer.style.display = 'none';\n            }\n            if (viewerContainer) {\n                if (this.pdfViewer.enableRtl) {\n                    viewerContainer.style.left = proxy.getViewerContainerRight() + 'px';\n                }\n                else {\n                    viewerContainer.style.right = proxy.getViewerContainerRight() + 'px';\n                }\n                viewerContainer.style.width = (proxy.pdfViewer.element.clientWidth - proxy.getViewerContainerLeft() - proxy.getViewerContainerRight()) + 'px';\n                pageContainer.style.width = (proxy.pdfViewerBase.viewerContainer.offsetWidth - proxy.getViewerContainerScrollbarWidth()) + 'px';\n            }\n            if (proxy.pdfViewerBase) {\n                proxy.pdfViewerBase.updateZoomValue();\n            }\n            if (this.pdfViewer.annotation && this.pdfViewer.annotation.textMarkupAnnotationModule) {\n                this.pdfViewer.annotation.textMarkupAnnotationModule.showHideDropletDiv(true);\n            }\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.Browser.isDevice && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isBlazor)()) {\n                if (this.pdfViewer.toolbarModule.annotationToolbarModule.toolbar) {\n                    this.pdfViewer.toolbarModule.annotationToolbarModule.toolbar.element.style.display = 'block';\n                    if (this.pdfViewer.toolbarModule.annotationToolbarModule.propertyToolbar) {\n                        this.pdfViewer.toolbarModule.annotationToolbarModule.propertyToolbar.element.style.display = 'block';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {string} option - The option.\n     * @returns {void}\n     */\n    NavigationPane.prototype.createNavigationPaneMobile = function (option) {\n        var _this = this;\n        this.isNavigationToolbarVisible = true;\n        this.toolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_navigationToolbar', className: 'e-pv-nav-toolbar' });\n        this.pdfViewerBase.viewerMainContainer.insertBefore(this.toolbarElement, this.pdfViewerBase.viewerContainer);\n        var items;\n        if (option === 'search') {\n            var searchTemplate = '<div class=\"e-input-group e-pv-text-search-input-mobile\" id=\"' + this.pdfViewer.element.id +\n                '_search_input_container\"><input class=\"e-input\" type=\"text\" placeholder=\"' +\n                this.pdfViewer.localeObj.getConstant('Find in document') + '\" id=\"' +\n                this.pdfViewer.element.id + '_search_input\"></input></div>';\n            var searchCountTemplate = \"\\n                <span class=\\\"e-pv-search-count\\\" id=\\\"\" + this.pdfViewer.element.id + \"_search_count\\\"></span>\\n            \";\n            items = [\n                { prefixIcon: 'e-pv-backward-icon e-pv-icon', tooltipText: this.pdfViewer.localeObj.getConstant('Go Back'), id: this.pdfViewer.element.id + '_backward', click: this.goBackToToolbar.bind(this) },\n                { template: searchTemplate },\n                {\n                    prefixIcon: 'e-pv-search-icon e-pv-icon', id: this.pdfViewer.element.id + '_search_box-icon',\n                    click: function () {\n                        var iconElement = _this.pdfViewerBase.getElement('_search_box-icon').firstElementChild;\n                        if (iconElement.classList.contains('e-pv-search-close')) {\n                            _this.enableSearchItems(false);\n                        }\n                        _this.pdfViewer.textSearchModule.searchButtonClick(iconElement, _this.searchInput, true);\n                        _this.setSearchInputWidth();\n                    }\n                },\n                { template: searchCountTemplate },\n                {\n                    prefixIcon: this.pdfViewer.enableRtl ? 'e-pv-next-search-icon e-pv-icon' : 'e-pv-prev-search-icon e-pv-icon', id: this.pdfViewer.element.id + '_prev_occurrence',\n                    click: function (args) {\n                        _this.pdfViewer.textSearchModule.searchPrevious();\n                        _this.setSearchInputWidth();\n                    }\n                },\n                {\n                    prefixIcon: this.pdfViewer.enableRtl ? 'e-pv-prev-search-icon e-pv-icon' : 'e-pv-next-search-icon e-pv-icon', id: this.pdfViewer.element.id + '_next_occurrence',\n                    click: function (args) {\n                        _this.pdfViewer.textSearchModule.searchNext();\n                        _this.setSearchInputWidth();\n                    }\n                }\n            ];\n        }\n        else {\n            items = [\n                { prefixIcon: 'e-pv-backward-icon e-pv-icon', id: this.pdfViewer.element.id + '_backward', click: this.goBackToToolbar.bind(this) },\n                { text: this.pdfViewer.localeObj.getConstant('Bookmarks') }\n            ];\n        }\n        this.toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_2__.Toolbar({ items: items, width: '', height: '', overflowMode: 'Popup' });\n        if (this.pdfViewer.enableRtl) {\n            this.toolbar.enableRtl = true;\n        }\n        this.toolbar.isStringTemplate = true;\n        this.toolbar.appendTo(this.toolbarElement);\n        if (option === 'search') {\n            var toolbarContainer = this.pdfViewerBase.getElement('_toolbarContainer');\n            if (toolbarContainer) {\n                var toolbarHeight = toolbarContainer.clientHeight;\n                if (toolbarHeight === 0) {\n                    toolbarHeight = parseFloat(window.getComputedStyle(toolbarContainer)['height']) + 1;\n                }\n                this.pdfViewerBase.toolbarHeight = toolbarHeight;\n            }\n            this.initiateSearchBox();\n        }\n        else {\n            this.initiateBookmarks();\n        }\n    };\n    NavigationPane.prototype.initiateSearchBox = function () {\n        var _this = this;\n        this.searchInput = this.pdfViewerBase.getElement('_search_input');\n        this.pdfViewer.textSearchModule.searchBtn = this.pdfViewerBase.getElement('_search_box-icon').firstElementChild;\n        this.searchInput.addEventListener('keyup', function (event) {\n            _this.enableSearchItems(true);\n            var searchString = _this.searchInput.value;\n            if (event.which === 13) {\n                _this.initiateTextSearch();\n                _this.setSearchInputWidth();\n            }\n            else {\n                _this.pdfViewer.textSearchModule.resetVariables();\n            }\n        });\n        var searchElement = document.getElementById(this.pdfViewer.element.id + '_search_count');\n        var parentContainer = searchElement.parentElement;\n        if (parentContainer) {\n            parentContainer.style.display = 'none';\n        }\n        this.pdfViewer.textSearchModule.searchInput = this.searchInput;\n        this.setSearchInputWidth();\n        this.enableSearchItems(false);\n        this.searchInput.focus();\n    };\n    NavigationPane.prototype.enableSearchItems = function (isEnable) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isBlazor)()) {\n            this.toolbar.enableItems(this.pdfViewerBase.getElement('_prev_occurrence').parentElement, isEnable);\n            this.toolbar.enableItems(this.pdfViewerBase.getElement('_next_occurrence').parentElement, isEnable);\n        }\n        else {\n            this.pdfViewer._dotnetInstance.invokeMethodAsync('EnableSearchItems', isEnable);\n        }\n    };\n    NavigationPane.prototype.initiateBookmarks = function () {\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.Browser.isDevice && !this.pdfViewer.enableDesktopMode) {\n            this.pdfViewerBase.mobileScrollerContainer.style.display = 'none';\n            var mobileTool = document.querySelectorAll('.e-pv-mobile-annotation-toolbar');\n            for (var i = 0; i < mobileTool.length; i++) {\n                mobileTool[parseInt(i.toString(), 10)].style.display = 'none';\n            }\n        }\n        var bookmarkContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_bookmarks_container', className: 'e-pv-bookmark-container' });\n        bookmarkContainer.style.width = '100%';\n        bookmarkContainer.style.height = this.pdfViewerBase.viewerContainer.style.height;\n        this.pdfViewerBase.getElement('_viewerMainContainer').appendChild(bookmarkContainer);\n        this.pdfViewerBase.viewerContainer.style.display = 'none';\n        this.isBookmarkListOpen = true;\n        this.pdfViewer.bookmarkViewModule.renderBookmarkContentMobile();\n    };\n    NavigationPane.prototype.initiateTextSearch = function () {\n        var inputString = this.searchInput.value;\n        this.pdfViewer.textSearchModule.initiateSearch(inputString, true);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.goBackToToolbar = function () {\n        this.isNavigationToolbarVisible = false;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isBlazor)() && (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.Browser.isDevice || this.pdfViewer.enableDesktopMode) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isBlazor)()) {\n            this.pdfViewer.textSearchModule.cancelTextSearch();\n        }\n        this.searchInput = null;\n        if (this.pdfViewer.bookmarkViewModule.childNavigateCount !== 0) {\n            this.pdfViewer.bookmarkViewModule.bookmarkList.back();\n            this.pdfViewer.bookmarkViewModule.childNavigateCount--;\n        }\n        else {\n            if (this.toolbar != null) {\n                this.toolbar.destroy();\n                this.toolbar = null;\n            }\n            var bookmarkContainer = this.pdfViewerBase.getElement('_bookmarks_container');\n            if (bookmarkContainer) {\n                bookmarkContainer.parentElement.removeChild(bookmarkContainer);\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.Browser.isDevice && !this.pdfViewer.enableDesktopMode) {\n                    this.pdfViewerBase.mobileScrollerContainer.style.display = '';\n                }\n            }\n            if (this.toolbarElement && this.toolbarElement.parentElement != null) {\n                this.toolbarElement.parentElement.removeChild(this.toolbarElement);\n            }\n            this.pdfViewerBase.viewerContainer.style.display = 'block';\n            this.isBookmarkListOpen = false;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isBlazor)()) {\n                if (!this.pdfViewer.toolbar.annotationToolbarModule.isMobileAnnotEnabled) {\n                    this.pdfViewer.toolbarModule.showToolbar(true);\n                }\n            }\n            else {\n                this.pdfViewerBase.onWindowResize();\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.setSearchInputWidth = function () {\n        var searchInputParent = this.searchInput.parentElement;\n        var padding = window.getComputedStyle(searchInputParent.parentElement, null).getPropertyValue('padding-left');\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isBlazor)() && (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.Browser.isDevice && !this.pdfViewer.enableDesktopMode)) {\n            this.toolbarElement = this.pdfViewerBase.getElement('_navigationToolbar');\n        }\n        var width = this.toolbarElement.clientWidth - this.getParentElementSearchBox('_backward').clientWidth\n            - this.getParentElementSearchBox('_search_box-icon').clientWidth - this.getParentElementSearchBox('_prev_occurrence').clientWidth\n            - this.getParentElementSearchBox('_next_occurrence').clientWidth - this.getParentElementSearchBox('_search_count').clientWidth - 6;\n        if (padding !== '') {\n            width = width - (parseFloat(padding) * 2);\n        }\n        searchInputParent.style.width = width + 'px';\n    };\n    NavigationPane.prototype.getParentElementSearchBox = function (idString) {\n        return this.pdfViewerBase.getElement(idString).parentElement;\n    };\n    /**\n     * @private\n     * @param {string} text - The text.\n     * @returns {void}\n     */\n    NavigationPane.prototype.createTooltipMobile = function (text) {\n        if (!this.isTooltipCreated) {\n            //boolean to prevent again toast creation.\n            this.createMobileTooltip(text);\n        }\n        else {\n            if (this.toastObject) {\n                this.toastObject.title = text;\n                var tooltipElement = this.pdfViewerBase.getElement('_container_tooltip');\n                var tooltipChild = tooltipElement.firstElementChild;\n                if (tooltipChild) {\n                    tooltipChild.style.width = 'auto';\n                    tooltipChild.firstElementChild.firstElementChild.textContent = text;\n                }\n                else {\n                    this.isTooltipCreated = false;\n                    var tooltipElement_1 = this.pdfViewerBase.getElement('_container_tooltip');\n                    if (this.toastObject) {\n                        this.toastObject.destroy();\n                    }\n                    tooltipElement_1.parentElement.removeChild(tooltipElement_1);\n                    this.toastObject = null;\n                    this.createMobileTooltip(text);\n                }\n            }\n        }\n    };\n    NavigationPane.prototype.createMobileTooltip = function (text) {\n        var tooltipDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'e-pv-container-tooltip', id: this.pdfViewer.element.id + '_container_tooltip' });\n        this.pdfViewer.element.appendChild(tooltipDiv);\n        this.toastObject = new _syncfusion_ej2_notifications__WEBPACK_IMPORTED_MODULE_4__.Toast({ title: text, target: this.pdfViewer.element, close: this.onTooltipClose.bind(this), position: { X: 0, Y: 0 }, animation: { hide: { duration: 200, effect: 'FadeOut' } } });\n        this.toastObject.appendTo(tooltipDiv);\n        var y = this.pdfViewer.element.clientHeight * 0.65;\n        var x = (this.pdfViewer.element.clientWidth - tooltipDiv.clientWidth) / 2;\n        this.isTooltipCreated = true;\n        this.toastObject.show({ position: { X: x, Y: y } });\n        var tooltipChild = tooltipDiv.firstElementChild;\n        if (tooltipChild) {\n            tooltipChild.style.width = 'auto';\n        }\n    };\n    NavigationPane.prototype.onTooltipClose = function (args) {\n        if (this.pdfViewer.textSearchModule) {\n            this.isTooltipCreated = false;\n            var tooltipElement = this.pdfViewerBase.getElement('_container_tooltip');\n            this.pdfViewer.textSearchModule.isMessagePopupOpened = false;\n            if (this.toastObject) {\n                this.toastObject.destroy();\n            }\n            tooltipElement.parentElement.removeChild(tooltipElement);\n            this.toastObject = null;\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.toolbarResize = function () {\n        if (this.searchInput) {\n            this.searchInput.style.width = 'auto';\n            this.setSearchInputWidth();\n        }\n    };\n    NavigationPane.prototype.createSidebarToolBar = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isBlazor)()) {\n            var isMac_1 = navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i) ? true : false;\n            this.thumbnailButton = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('button', { id: this.pdfViewer.element.id + '_thumbnail-view', attrs: { 'disabled': 'disabled', 'aria-label': 'Page Thumbnails', 'tabindex': '-1' } });\n            this.thumbnailButton.className = 'e-pv-tbar-btn e-pv-thumbnail-view-button e-btn';\n            this.thumbnailButton.setAttribute('type', 'button');\n            var thumbnailButtonSpan = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', { id: this.pdfViewer.element.id + '_thumbnail-view' + '_icon', className: 'e-pv-thumbnail-view-disable-icon e-pv-icon' });\n            this.thumbnailButton.appendChild(thumbnailButtonSpan);\n            var thumbnailTooltip = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_3__.Tooltip({ content: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.initializeCSPTemplate)(function () { return this.pdfViewer.localeObj.getConstant('Page Thumbnails') + (isMac_1 ? ' (⌘+⌥+1)' : ' (Ctrl+Alt+1)'); }, this), opensOn: 'Hover', beforeOpen: this.onTooltipBeforeOpen.bind(this) });\n            thumbnailTooltip.appendTo(this.thumbnailButton);\n            this.bookmarkButton = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('button', { id: this.pdfViewer.element.id + '_bookmark', attrs: { 'disabled': 'disabled', 'aria-label': 'Bookmarks', 'tabindex': '-1' } });\n            this.bookmarkButton.setAttribute('type', 'button');\n            this.bookmarkButton.className = 'e-pv-tbar-btn e-pv-bookmark-button e-btn';\n            var buttonSpan = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', { id: this.pdfViewer.element.id + '_bookmark' + '_icon', className: 'e-pv-bookmark-disable-icon e-pv-icon' });\n            this.bookmarkButton.appendChild(buttonSpan);\n            var bookMarkTooltip = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_3__.Tooltip({ content: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.initializeCSPTemplate)(function () { return this.pdfViewer.localeObj.getConstant('Bookmarks') + (isMac_1 ? ' (⌘+⌥+2)' : ' (Ctrl+Alt+2)'); }, this), opensOn: 'Hover', beforeOpen: this.onTooltipBeforeOpen.bind(this) });\n            bookMarkTooltip.appendTo(this.bookmarkButton);\n            this.organizePageButton = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('button', { id: this.pdfViewer.element.id + '_organize-view', attrs: { 'disabled': 'disabled', 'aria-label': 'Organize Pages', 'tabindex': '-1' } });\n            this.organizePageButton.className = 'e-pv-tbar-btn e-pv-organize-view-button e-btn';\n            this.organizePageButton.setAttribute('type', 'button');\n            var organizeButtonSpan = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', { id: this.pdfViewer.element.id + '_organize-view' + '_icon', className: 'e-pv-organize-view-disable-icon e-pv-icon' });\n            this.organizePageButton.appendChild(organizeButtonSpan);\n            var organizeButtonTooltip = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_3__.Tooltip({\n                content: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.initializeCSPTemplate)(function () { return this.pdfViewer.localeObj.getConstant('Organize Pages') + (isMac_1 ? ' (⌘+⌥+3)' : ' (Ctrl+Alt+3)'); }, this), opensOn: 'Hover', beforeOpen: this.onTooltipBeforeOpen.bind(this)\n            });\n            organizeButtonTooltip.appendTo(this.organizePageButton);\n            this.sideBarToolbar.appendChild(this.thumbnailButton);\n            this.sideBarToolbar.appendChild(this.bookmarkButton);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.pdfViewer.pageOrganizer)) {\n                this.sideBarToolbar.appendChild(this.organizePageButton);\n            }\n        }\n        else {\n            this.thumbnailButton = this.pdfViewer.element.querySelector('.e-pv-thumbnail-view-button');\n            this.bookmarkButton = this.pdfViewer.element.querySelector('.e-pv-bookmark-button');\n        }\n        this.thumbnailButton.addEventListener('click', this.sideToolbarOnClick);\n        this.bookmarkButton.addEventListener('click', this.bookmarkButtonOnClick);\n        this.organizePageButton.addEventListener('click', this.organizeButtonOnClick);\n    };\n    NavigationPane.prototype.onTooltipBeforeOpen = function (args) {\n        if (!this.pdfViewer.toolbarSettings.showTooltip) {\n            args.cancel = true;\n        }\n    };\n    /**\n     * @param {boolean} isEnable - This is isEnable\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.enableOrganizeButton = function (isEnable) {\n        if (this.organizePageButton) {\n            if (isEnable) {\n                this.organizePageButton.removeAttribute('disabled');\n                this.organizePageButton.children[0].classList.remove('e-pv-organize-view-disable-icon');\n                this.organizePageButton.children[0].classList.add('e-pv-organize-view-icon');\n                this.organizePageButton.setAttribute('tabindex', '0');\n            }\n            else {\n                this.organizePageButton.setAttribute('disabled', 'disabled');\n                this.organizePageButton.children[0].classList.remove('e-pv-organize-view-icon');\n                this.organizePageButton.children[0].classList.add('e-pv-organize-view-disable-icon');\n                this.organizePageButton.setAttribute('tabindex', '-1');\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.enableThumbnailButton = function () {\n        if (this.thumbnailButton) {\n            this.thumbnailButton.removeAttribute('disabled');\n            this.thumbnailButton.children[0].classList.remove('e-pv-thumbnail-view-disable-icon');\n            this.thumbnailButton.children[0].classList.add('e-pv-thumbnail-view-icon');\n            this.thumbnailButton.setAttribute('tabindex', '0');\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.enableBookmarkButton = function () {\n        if (this.bookmarkButton) {\n            this.bookmarkButton.removeAttribute('disabled');\n            this.bookmarkButton.children[0].classList.remove('e-pv-bookmark-disable-icon');\n            this.bookmarkButton.children[0].classList.add('e-pv-bookmark-icon');\n            this.bookmarkButton.setAttribute('tabindex', '0');\n        }\n    };\n    NavigationPane.prototype.createSidebarTitleCloseButton = function () {\n        this.closeDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('button', { id: this.pdfViewer.element.id + '_close_btn' });\n        this.closeDiv.setAttribute('aria-label', 'close button');\n        this.closeDiv.setAttribute('type', 'button');\n        this.closeDiv.className = 'e-btn e-pv-tbar-btn e-pv-title-close-div e-btn';\n        if (this.pdfViewer.enableRtl) {\n            this.closeDiv.style.left = 8 + 'px';\n        }\n        else {\n            this.closeDiv.style.left = this.closeButtonLeft + 'px';\n        }\n        var buttonSpan = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', { id: this.pdfViewer.element.id + '_close' + '_icon', className: 'e-pv-title-close-icon e-pv-icon' });\n        this.closeDiv.appendChild(buttonSpan);\n        this.sideBarTitleContainer.appendChild(this.closeDiv);\n        this.closeDiv.addEventListener('click', this.sideToolbarOnClose);\n    };\n    NavigationPane.prototype.createResizeIcon = function () {\n        this.resizeIcon = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.pdfViewer.element.id + '_resize', className: 'e-pv-resize-icon e-pv-icon' });\n        this.setResizeIconTop();\n        this.resizeIcon.style.position = 'absolute';\n        this.resizeIcon.addEventListener('click', this.sideToolbarOnClose);\n        this.resizeIcon.addEventListener('mouseover', this.resizeIconMouseOver);\n        this.sideBarResizer.appendChild(this.resizeIcon);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.setResizeIconTop = function () {\n        if (this.sideBarToolbar && this.sideBarToolbar.clientHeight && this.resizeIcon.style.top === '') {\n            this.resizeIcon.style.top = (this.sideBarToolbar.clientHeight) / 2 + 'px';\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.setCommentPanelResizeIconTop = function () {\n        if (this.commentPanelContainer && this.commentPanelContainer.clientHeight && this.commentPanelResizeIcon && this.commentPanelResizeIcon.style.top === '') {\n            this.commentPanelResizeIcon.style.top = (this.commentPanelContainer.clientHeight) / 2 + 'px';\n        }\n    };\n    Object.defineProperty(NavigationPane.prototype, \"outerContainerWidth\", {\n        /**\n         * @private\n         * @returns {number} - Returns the number.\n         */\n        get: function () {\n            if (!this.mainContainerWidth) {\n                this.mainContainerWidth = this.pdfViewerBase.mainContainer.clientWidth;\n            }\n            return this.mainContainerWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * @returns {number} - Returns the number.\n     */\n    NavigationPane.prototype.getViewerContainerScrollbarWidth = function () {\n        return (this.pdfViewerBase.viewerContainer.offsetWidth + this.pdfViewerBase.viewerContainer.offsetLeft) -\n            (this.pdfViewerBase.viewerContainer.clientWidth + this.pdfViewerBase.viewerContainer.offsetLeft);\n    };\n    Object.defineProperty(NavigationPane.prototype, \"sideToolbarWidth\", {\n        /**\n         * @private\n         * @returns {number} - Returns the number.\n         */\n        get: function () {\n            if (this.sideBarToolbar) {\n                return this.sideBarToolbar.clientWidth;\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NavigationPane.prototype, \"sideBarContentContainerWidth\", {\n        /**\n         * @private\n         * @returns {number} - Returns the number.\n         */\n        get: function () {\n            if (this.sideBarContentContainer) {\n                return this.sideBarContentContainer.clientWidth;\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NavigationPane.prototype, \"commentPanelContainerWidth\", {\n        /**\n         * @private\n         * @returns {number} - Returns the number.\n         */\n        get: function () {\n            if (this.commentPanelContainer) {\n                return this.commentPanelContainer.offsetWidth;\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.updateViewerContainerOnClose = function () {\n        var proxy = null;\n        // eslint-disable-next-line\n        proxy = this;\n        if (proxy.sideBarContentContainer) {\n            proxy.sideBarContentContainer.style.display = 'none';\n            if (this.pdfViewer.enableRtl) {\n                proxy.pdfViewerBase.viewerContainer.style.right = (proxy.sideToolbarWidth) + 'px';\n            }\n            else {\n                proxy.pdfViewerBase.viewerContainer.style.left = (proxy.sideToolbarWidth) + 'px';\n            }\n            proxy.pdfViewerBase.viewerContainer.style.width = (proxy.pdfViewer.element.clientWidth - proxy.sideToolbarWidth - proxy.getViewerContainerRight()) + 'px';\n            proxy.pdfViewerBase.pageContainer.style.width = (proxy.pdfViewerBase.viewerContainer.offsetWidth - proxy.getViewerContainerScrollbarWidth()) + 'px';\n            if (this.restrictUpdateZoomValue) {\n                proxy.pdfViewerBase.updateZoomValue();\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.updateViewerContainerOnExpand = function () {\n        var proxy = null;\n        // eslint-disable-next-line\n        proxy = this;\n        if (proxy.sideBarContentContainer) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.pdfViewer.thumbnailViewModule) && !this.pdfViewer.thumbnailViewModule.isThubmnailOpen) {\n                proxy.sideBarContentContainer.style.display = 'block';\n            }\n            if (proxy.pdfViewer.isBookmarkPanelOpen || this.isBookmarkOpen) {\n                proxy.sideBarContentContainer.style.display = 'block';\n            }\n            if (this.pdfViewer.enableRtl) {\n                proxy.pdfViewerBase.viewerContainer.style.right = proxy.getViewerContainerLeft() + 'px';\n            }\n            else {\n                proxy.pdfViewerBase.viewerContainer.style.left = proxy.getViewerContainerLeft() + 'px';\n            }\n            proxy.pdfViewerBase.viewerContainer.style.width = (proxy.pdfViewer.element.clientWidth - this.getViewerContainerLeft() - this.getViewerContainerRight()) + 'px';\n            proxy.pdfViewerBase.pageContainer.style.width = proxy.pdfViewerBase.viewerContainer.clientWidth + 'px';\n            proxy.pdfViewerBase.updateZoomValue();\n            if (proxy.pdfViewer.enableThumbnail) {\n                proxy.pdfViewer.thumbnailViewModule.gotoThumbnailImage(proxy.pdfViewerBase.currentPageNumber - 1);\n                proxy.pdfViewer.thumbnailViewModule.renderViewPortThumbnailImage();\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {number} - Returns the number.\n     */\n    NavigationPane.prototype.getViewerContainerLeft = function () {\n        if (this.sideToolbarWidth) {\n            return (this.sideToolbarWidth + this.sideBarContentContainerWidth);\n        }\n        else if (this.sideToolbarWidth === 0 && !this.pdfViewer.enableNavigationToolbar) {\n            return (this.sideBarContentContainerWidth);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * @private\n     * @returns {number} - Returns the number.\n     */\n    NavigationPane.prototype.getViewerContainerRight = function () {\n        if (this.commentPanelResizer) {\n            return (this.commentPanelContainerWidth + this.commentPanelResizer.clientWidth);\n        }\n        else if (this.sideToolbarWidth === 0 && !this.pdfViewer.enableNavigationToolbar) {\n            return (this.sideBarContentContainerWidth);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * @private\n     * @returns {number} - Returns the number.\n     */\n    NavigationPane.prototype.getViewerMainContainerWidth = function () {\n        return this.pdfViewer.element.clientWidth - this.sideToolbarWidth;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.setThumbnailSelectionIconTheme = function () {\n        if (this.thumbnailButton) {\n            this.thumbnailButton.children[0].classList.remove('e-pv-thumbnail-view-icon');\n            this.thumbnailButton.children[0].classList.add('e-pv-thumbnail-view-selection-icon');\n            this.thumbnailButton.classList.add('e-pv-thumbnail-view-button-selection');\n        }\n    };\n    NavigationPane.prototype.removeThumbnailSelectionIconTheme = function () {\n        if (this.thumbnailButton && this.thumbnailButton.children[0]) {\n            this.thumbnailButton.children[0].classList.add('e-pv-thumbnail-view-icon');\n            this.thumbnailButton.children[0].classList.remove('e-pv-thumbnail-view-selection-icon');\n            this.thumbnailButton.classList.remove('e-pv-thumbnail-view-button-selection');\n        }\n    };\n    NavigationPane.prototype.resetThumbnailIcon = function () {\n        if (this.thumbnailButton && this.thumbnailButton.children[0]) {\n            this.thumbnailButton.children[0].classList.remove('e-pv-thumbnail-view-icon');\n            this.thumbnailButton.children[0].classList.add('e-pv-thumbnail-view-disable-icon');\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.resetThumbnailView = function () {\n        if (this.sideBarContentContainer) {\n            this.sideBarContentContainer.style.display = 'none';\n            if (this.pdfViewer.enableRtl) {\n                this.pdfViewerBase.viewerContainer.style.left = 1 + 'px';\n            }\n            else {\n                this.pdfViewerBase.viewerContainer.style.left = (this.sideToolbarWidth) + 'px';\n            }\n            this.pdfViewerBase.viewerContainer.style.width = (this.pdfViewer.element.clientWidth - this.sideToolbarWidth - this.getViewerContainerRight()) + 'px';\n            if (this.pdfViewerBase.pageContainer) {\n                this.pdfViewerBase.pageContainer.style.width = this.pdfViewerBase.viewerContainer.clientWidth + 'px';\n            }\n            this.thumbnailButton.setAttribute('disabled', 'disabled');\n            this.removeThumbnailSelectionIconTheme();\n            this.resetThumbnailIcon();\n        }\n    };\n    NavigationPane.prototype.setBookmarkSelectionIconTheme = function () {\n        if (this.bookmarkButton) {\n            this.bookmarkButton.children[0].classList.remove('e-pv-bookmark-icon');\n            this.bookmarkButton.children[0].classList.add('e-pv-bookmark-selection-icon');\n            this.bookmarkButton.classList.add('e-pv-bookmark-button-selection');\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.removeBookmarkSelectionIconTheme = function () {\n        if (this.bookmarkButton && this.bookmarkButton.children[0]) {\n            this.bookmarkButton.children[0].classList.add('e-pv-bookmark-icon');\n            this.bookmarkButton.children[0].classList.remove('e-pv-bookmark-selection-icon');\n            this.bookmarkButton.classList.remove('e-pv-bookmark-button-selection');\n        }\n    };\n    NavigationPane.prototype.sideToolbarOnMouseup = function (event) {\n        if (event.target === this.sideBarToolbar) {\n            this.pdfViewerBase.focusViewerContainer();\n        }\n    };\n    NavigationPane.prototype.sideBarTitleOnMouseup = function (event) {\n        this.pdfViewerBase.focusViewerContainer();\n    };\n    /**\n     * @param {boolean} isSideToolbarOnClick - This is isSideToolbarOnClick\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.openBookmarkcontentInitially = function (isSideToolbarOnClick) {\n        // eslint-disable-next-line\n        var proxy = this;\n        if (document.getElementById(proxy.pdfViewer.element.id + '_thumbnail_view')) {\n            document.getElementById(proxy.pdfViewer.element.id + '_thumbnail_view').style.display = 'none';\n        }\n        proxy.removeThumbnailSelectionIconTheme();\n        proxy.sideBarTitle.textContent = proxy.pdfViewer.localeObj.getConstant('Bookmarks');\n        proxy.sideBarContent.setAttribute('aria-label', 'Bookmark View Panel');\n        proxy.sideBarContent.setAttribute('role', 'navigation');\n        proxy.pdfViewer.bookmarkViewModule.renderBookmarkcontent();\n        if (proxy.sideBarContentContainer && (isSideToolbarOnClick || !proxy.isBookmarkOpenProgrammatically)) {\n            if (proxy.sideBarContentContainer.style.display !== 'none') {\n                if (proxy.isThumbnailOpen) {\n                    proxy.setBookmarkSelectionIconTheme();\n                    proxy.isBookmarkOpen = true;\n                    proxy.updateViewerContainerOnExpand();\n                    proxy.isThumbnail = false;\n                    proxy.isThumbnailAddedProgrammatically = false;\n                    proxy.isBookmarkOpenProgrammatically = true;\n                    proxy.pdfViewer.isThumbnailViewOpen = false;\n                }\n                else {\n                    proxy.removeBookmarkSelectionIconTheme();\n                    proxy.isBookmarkOpen = false;\n                    proxy.updateViewerContainerOnClose();\n                    proxy.isBookmarkOpenProgrammatically = false;\n                }\n            }\n            else {\n                proxy.sideBarContent.focus();\n                proxy.setBookmarkSelectionIconTheme();\n                proxy.isBookmarkOpen = true;\n                proxy.updateViewerContainerOnExpand();\n                proxy.isBookmarkOpenProgrammatically = true;\n                proxy.pdfViewer.isThumbnailViewOpen = false;\n            }\n        }\n        proxy.isThumbnailOpen = false;\n        if (proxy.pdfViewer.annotationModule && proxy.pdfViewer.annotationModule.inkAnnotationModule) {\n            var currentPageNumber = parseInt(proxy.pdfViewer.annotationModule.inkAnnotationModule.currentPageNumber, 10);\n            proxy.pdfViewer.annotationModule.inkAnnotationModule.drawInkAnnotation(currentPageNumber);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.disableBookmarkButton = function () {\n        if (this.sideBarContentContainer && this.bookmarkButton && this.bookmarkButton.children[0]) {\n            var bookmarkContent = this.pdfViewer.element.querySelector('.e-pv-bookmark-view');\n            if (bookmarkContent) {\n                bookmarkContent.style.display = 'none';\n            }\n            this.bookmarkButton.setAttribute('disabled', 'disabled');\n            this.bookmarkButton.children[0].classList.add('e-pv-bookmark-disable-icon');\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.calculateCommentPanelWidth = function () {\n        var commentTitleCollections = document.getElementsByClassName('e-pv-comment-title');\n        var commentTitleMoreIconCollections = document.getElementsByClassName('e-pv-more-options-button e-btn');\n        for (var i = 0; i < commentTitleCollections.length; i++) {\n            var commentTitleElement = commentTitleCollections[parseInt(i.toString(), 10)];\n            var moreIconElement = commentTitleMoreIconCollections[parseInt(i.toString(), 10)];\n            commentTitleElement.style.maxWidth = (commentTitleElement.parentElement.clientWidth - moreIconElement.clientWidth) + 'px';\n        }\n        var replyTitleCollections = document.getElementsByClassName('e-pv-reply-title');\n        var replyTitleMoreIconCollections = document.getElementsByClassName('e-pv-more-options-button e-btn');\n        for (var j = 0; j < replyTitleCollections.length; j++) {\n            var replyTitleElement = replyTitleCollections[parseInt(j.toString(), 10)];\n            var elementOfMoreIcon = replyTitleMoreIconCollections[parseInt(j.toString(), 10)];\n            replyTitleElement.style.maxWidth = (replyTitleElement.parentElement.clientWidth - elementOfMoreIcon.clientWidth) + 'px';\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.clear = function () {\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.Browser.isDevice) {\n            this.removeBookmarkSelectionIconTheme();\n            this.removeThumbnailSelectionIconTheme();\n            this.closeCommentPanelContainer();\n        }\n        if (this.commentsContentContainer) {\n            this.commentsContentContainer.innerHTML = '';\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NavigationPane.prototype.destroy = function () {\n        var bookmarkButtonInstance = this.bookmarkButton;\n        var thumbnailButtonInstance = this.thumbnailButton;\n        var organizeButtonInstance = this.organizePageButton;\n        if (bookmarkButtonInstance && bookmarkButtonInstance.ej2_instances && bookmarkButtonInstance.ej2_instances.length > 0) {\n            bookmarkButtonInstance.ej2_instances[0].destroy();\n        }\n        if (thumbnailButtonInstance && thumbnailButtonInstance.ej2_instances && thumbnailButtonInstance.ej2_instances.length > 0) {\n            thumbnailButtonInstance.ej2_instances[0].destroy();\n        }\n        if (organizeButtonInstance && organizeButtonInstance.ej2_instances && organizeButtonInstance.ej2_instances.length > 0) {\n            organizeButtonInstance.ej2_instances[0].destroy();\n        }\n        if (this.annotationMenuObj) {\n            var annotationMenuElement = this.annotationMenuObj.element;\n            if (annotationMenuElement && annotationMenuElement.ej2_instances && annotationMenuElement.ej2_instances.length > 0) {\n                this.annotationMenuObj.destroy();\n            }\n        }\n    };\n    /**\n     * @returns {string} - Returns the string.\n     */\n    NavigationPane.prototype.getModuleName = function () {\n        return 'NavigationPane';\n    };\n    return NavigationPane;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/base/navigation-pane.js?");

/***/ })

}]);