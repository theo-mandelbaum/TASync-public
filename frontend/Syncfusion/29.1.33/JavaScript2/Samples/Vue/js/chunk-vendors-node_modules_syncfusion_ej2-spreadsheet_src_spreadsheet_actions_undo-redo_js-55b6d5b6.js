"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-spreadsheet_src_spreadsheet_actions_undo-redo_js-55b6d5b6"],{

/***/ "./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/actions/undo-redo.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/actions/undo-redo.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UndoRedo: () => (/* binding */ UndoRedo)\n/* harmony export */ });\n/* harmony import */ var _spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../spreadsheet/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/index.js\");\n/* harmony import */ var _common_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/common/index.js\");\n/* harmony import */ var _workbook_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../workbook/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _workbook_common_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../workbook/common/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/common/index.js\");\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * UndoRedo module allows to perform undo redo functionalities.\n */\nvar UndoRedo = /** @class */ (function () {\n    function UndoRedo(parent) {\n        this.undoCollection = [];\n        this.redoCollection = [];\n        this.isUndo = false;\n        this.undoRedoStep = 100;\n        this.parent = parent;\n        this.addEventListener();\n    }\n    UndoRedo.prototype.setActionData = function (options) {\n        var sheet = this.parent.getActiveSheet();\n        var address;\n        var cells = [];\n        var cutCellDetails = [];\n        var args = options.args;\n        var eventArgs = args.eventArgs;\n        var copiedInfo = {};\n        switch (args.action) {\n            case 'format':\n                address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(args.eventArgs.range);\n                break;\n            case 'clipboard':\n                copiedInfo = eventArgs.copiedInfo;\n                address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeFromAddress)(eventArgs.pastedRange));\n                if (copiedInfo && copiedInfo.isCut) {\n                    cutCellDetails = this.getCellDetails(copiedInfo.range, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(this.parent, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheetIndexFromId)(this.parent, copiedInfo.sId)), 'clipboard');\n                }\n                break;\n            case 'beforeSort':\n                address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(args.eventArgs.range);\n                if (address[0] === address[2] && (address[2] - address[0]) === 0) { //if selected range is a single cell\n                    address[0] = 0;\n                    address[1] = 0;\n                    address[2] = sheet.usedRange.rowIndex;\n                    address[3] = sheet.usedRange.colIndex;\n                }\n                break;\n            case 'beforeCellSave':\n            case 'cellDelete':\n            case 'cellSave':\n            case 'addNote':\n            case 'editNote':\n            case 'deleteNote':\n                address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(eventArgs.address);\n                break;\n            case 'beforeWrap':\n            case 'beforeReplace':\n            case 'chartDesign':\n                address = this.parent.getAddressInfo(eventArgs.address).indices;\n                break;\n            case 'beforeClear':\n                address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(eventArgs.range);\n                break;\n            case 'beforeInsertImage':\n                address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(eventArgs.range);\n                break;\n            case 'deleteImage':\n                address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(eventArgs.address);\n                break;\n            case 'beforeInsertChart':\n                address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(eventArgs.range);\n                break;\n            case 'filter':\n                address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(eventArgs.range);\n                break;\n            case 'autofill':\n                address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(eventArgs.fillRange);\n                break;\n            case 'validation':\n                if ((0,_common_index__WEBPACK_IMPORTED_MODULE_1__.isColumnRange)(eventArgs.range.substring(eventArgs.range.lastIndexOf('!') + 1))) {\n                    address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(eventArgs.range);\n                    address[2] = sheet.usedRange.rowIndex;\n                }\n                else {\n                    address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(eventArgs.range);\n                }\n                break;\n            case 'removeValidation':\n                if (eventArgs.isColSelected) {\n                    this.beforeActionData = { cellDetails: [] };\n                    var rangeArr = eventArgs.range.substring(eventArgs.range.lastIndexOf('!') + 1).split(':');\n                    for (var start = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColIndex)(rangeArr[0]), end = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColIndex)(rangeArr[1]); start <= end; start++) {\n                        if (sheet.columns[start] && sheet.columns[start].validation) {\n                            this.beforeActionData.cellDetails.push({ colIndex: start, validation: sheet.columns[start].validation });\n                        }\n                    }\n                }\n                else {\n                    address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(eventArgs.range);\n                }\n                break;\n            case 'hyperlink':\n            case 'removeHyperlink':\n                address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(eventArgs.address);\n                break;\n        }\n        if (args.action === 'beforeSort') {\n            this.beforeActionData = { cellDetails: eventArgs.cellDetails };\n            this.beforeActionData.sortedCellDetails = eventArgs.sortedCellDetails;\n        }\n        else if (address) {\n            if (args.isClearAction && this.beforeActionData.cellDetails.length > 0) {\n                cells = this.beforeActionData.cellDetails;\n            }\n            else {\n                cells = this.getCellDetails(address, sheet, args.action);\n            }\n            this.beforeActionData = { cellDetails: cells, cutCellDetails: cutCellDetails };\n        }\n    };\n    UndoRedo.prototype.getBeforeActionData = function (args) {\n        args.beforeDetails = this.beforeActionData;\n    };\n    UndoRedo.prototype.performUndoRedo = function (args) {\n        var undoRedoArgs;\n        if (args.isFromUpdateAction) {\n            undoRedoArgs = args;\n        }\n        else {\n            undoRedoArgs = args.isUndo ? this.undoCollection.pop() : this.redoCollection.pop();\n            if (args.setCollection) {\n                args.undoArgs = undoRedoArgs;\n            }\n        }\n        this.isUndo = args.isUndo;\n        var preventEvt;\n        if (undoRedoArgs) {\n            var actionArgs = void 0;\n            var undoRedoAction = undoRedoArgs.action;\n            var replaceArgs = {};\n            var address = [];\n            var sheet_1;\n            if (undoRedoArgs.action === 'autofill' || undoRedoArgs.action === 'autofillWithCF') {\n                address = undoRedoArgs.eventArgs.fillRange.split('!');\n            }\n            else if (undoRedoArgs.action === 'cellSave' || undoRedoArgs.action === 'cellDelete') {\n                address = undoRedoArgs.eventArgs.address.split('!');\n            }\n            else if (undoRedoArgs.action === 'clipboard') {\n                address = undoRedoArgs.eventArgs.pastedRange.split('!');\n            }\n            if (address.length > 0) {\n                sheet_1 = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(this.parent, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheetIndex)(this.parent, address[0]));\n            }\n            else if (undoRedoArgs.action === 'clear') {\n                sheet_1 = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(this.parent, undoRedoArgs.eventArgs.sheetIndex);\n            }\n            if (undoRedoArgs.action === 'autofillWithCF') {\n                undoRedoArgs.action = 'autofill';\n                var conditionalFormat = sheet_1.conditionalFormats;\n                if (conditionalFormat[conditionalFormat.length - 1].action === 'autofillWithCF' && args.isUndo) {\n                    if (!conditionalFormat[conditionalFormat.length - 1].value) {\n                        this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.clearCFRule, { range: conditionalFormat[conditionalFormat.length - 1].range, isAction: true });\n                    }\n                    else {\n                        conditionalFormat.pop();\n                    }\n                }\n            }\n            if (!args.isPublic) {\n                var actionData = undoRedoArgs.eventArgs.beforeActionData;\n                delete undoRedoArgs.eventArgs.beforeActionData;\n                actionArgs = { action: undoRedoArgs.action, eventArgs: {} };\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.extend)(actionArgs.eventArgs, undoRedoArgs.eventArgs, null, true);\n                if (this.parent.calculationMode === 'Manual' && (undoRedoArgs.action === 'clipboard' ||\n                    undoRedoArgs.action === 'cellDelete' || undoRedoArgs.action === 'autofill' || undoRedoArgs.action === 'clear')) {\n                    if (!args.isUndo) {\n                        if (sheet_1.isSheetCalculated) {\n                            (actionData.cutCellDetails.length ? actionData.cutCellDetails :\n                                actionData.cellDetails).forEach(function (prevCell) {\n                                var cellVal = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(prevCell.rowIndex, prevCell.colIndex, sheet_1, false, true).value;\n                                if ((cellVal || cellVal === 0) && prevCell.value !== cellVal) {\n                                    prevCell.value = cellVal;\n                                }\n                            });\n                        }\n                    }\n                    else if ((undoRedoArgs.eventArgs.requestType === 'paste' && undoRedoArgs.action === 'clipboard') ||\n                        undoRedoArgs.eventArgs.fillType) {\n                        var undoActionName = void 0;\n                        if (!actionData.cutCellDetails.length) {\n                            undoActionName = undoRedoArgs.eventArgs.fillType ? 'autofill' : 'Copy';\n                        }\n                        else if (sheet_1.isSheetCalculated) {\n                            undoActionName = 'Cut';\n                        }\n                        if (undoActionName) {\n                            for (var i = 0, cellCol = actionData.cellDetails, cutCellCol = actionData.cutCellDetails; i < cellCol.length; i++) {\n                                var cellValue = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(cellCol[i].rowIndex, cellCol[i].colIndex, sheet_1, false, true);\n                                cellValue = cellValue ? cellValue.value : '';\n                                if (undoActionName === 'Copy') {\n                                    cellCol[i].copyCellValue = cellValue;\n                                }\n                                else if (undoActionName === 'autofill') {\n                                    if (cellCol[i].value !== cellValue && cellCol[i].autoFillText !== cellValue) {\n                                        cellCol[i].autoFillText = cellValue;\n                                    }\n                                }\n                                else if (undoActionName === 'Cut') {\n                                    if (cutCellCol[i].value !== cellValue) {\n                                        cutCellCol[i].value = cellValue;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                undoRedoArgs.eventArgs.beforeActionData = actionData;\n                actionArgs.eventArgs.cancel = false;\n                undoRedoArgs.preventAction = actionArgs.preventAction = true;\n                if (args.isUndo) {\n                    actionArgs.isUndo = true;\n                    if (undoRedoArgs.action === 'cellSave' && this.parent.calculationMode === 'Manual' &&\n                        sheet_1.isSheetCalculated && actionData.cellDetails.length === 1) {\n                        var cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(actionData.cellDetails[0].rowIndex, actionData.cellDetails[0].colIndex, sheet_1);\n                        if (cell && undoRedoArgs.eventArgs.displayText !== cell.value) {\n                            undoRedoArgs.eventArgs.displayText = cell.value;\n                        }\n                    }\n                }\n                else {\n                    actionArgs.isRedo = true;\n                }\n                if (!args.isFromUpdateAction) {\n                    this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.beginAction, actionArgs);\n                }\n                if (actionArgs.eventArgs.cancel) {\n                    this.updateUndoRedoIcons();\n                    return;\n                }\n                delete actionArgs.eventArgs.cancel;\n            }\n            switch (undoRedoArgs.action) {\n                case 'cellSave':\n                case 'format':\n                case 'wrap':\n                case 'cellDelete':\n                case 'autofill':\n                case 'removeValidation':\n                case 'hyperlink':\n                case 'addNote':\n                case 'editNote':\n                case 'deleteNote':\n                case 'removeHyperlink':\n                    undoRedoArgs = this.performOperation(undoRedoArgs, args.preventEvt, args.preventReSelect, args.isFromAutoFillOption);\n                    undoRedoArgs.action = undoRedoAction;\n                    break;\n                case 'sorting':\n                    this.undoForSorting(undoRedoArgs, args.isUndo);\n                    break;\n                case 'clipboard':\n                    undoRedoArgs = this.undoForClipboard(undoRedoArgs, args.isUndo, actionArgs);\n                    preventEvt = true;\n                    break;\n                case 'resize':\n                case 'resizeToFit':\n                    undoRedoArgs = this.undoForResize(undoRedoArgs);\n                    if (args.isUndo) {\n                        var eventArgs = undoRedoArgs.eventArgs;\n                        if (!eventArgs.isPrevCustomHeight) {\n                            var sheet_2 = this.parent.sheets[eventArgs.sheetIndex];\n                            var row = sheet_2 && (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRow)(sheet_2, eventArgs.index);\n                            if (row && row.customHeight) {\n                                delete row.customHeight;\n                            }\n                        }\n                    }\n                    break;\n                case 'hideShow':\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(undoRedoArgs, this.parent, !args.isUndo);\n                    break;\n                case 'replace':\n                    undoRedoArgs = this.performOperation(undoRedoArgs);\n                    break;\n                case 'replaceAll':\n                    undoRedoArgs.eventArgs.isAction = false;\n                    if (args.isUndo) {\n                        replaceArgs.value = undoRedoArgs.eventArgs.replaceValue;\n                        replaceArgs.replaceValue = undoRedoArgs.eventArgs.value;\n                        replaceArgs.skipFormatCheck = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.isImported)(this.parent);\n                    }\n                    this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.replaceAll, __assign({}, undoRedoArgs.eventArgs, replaceArgs));\n                    break;\n                case 'insert':\n                case 'filter':\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(undoRedoArgs, this.parent, !args.isUndo, null, actionArgs);\n                    preventEvt = undoRedoArgs.action === 'filter';\n                    break;\n                case 'delete':\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(undoRedoArgs, this.parent, !args.isUndo);\n                    break;\n                case 'validation':\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(undoRedoArgs, this.parent, !args.isUndo);\n                    undoRedoArgs = this.performOperation(undoRedoArgs);\n                    break;\n                case 'addHighlight':\n                case 'removeHighlight':\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(undoRedoArgs, this.parent, !args.isUndo);\n                    break;\n                case 'merge':\n                    undoRedoArgs.eventArgs.merge = undoRedoArgs.isFromUpdateAction ?\n                        undoRedoArgs.eventArgs.merge : !undoRedoArgs.eventArgs.merge;\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(undoRedoArgs, this.parent, !args.isUndo);\n                    break;\n                case 'clear':\n                    undoRedoArgs = this.performOperation(undoRedoArgs);\n                    if (args.isUndo && undoRedoArgs.eventArgs.cfClearActionArgs) {\n                        (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)({ action: 'clearCF', eventArgs: undoRedoArgs.eventArgs.cfClearActionArgs }, this.parent, !args.isUndo);\n                    }\n                    for (var i = this.undoCollection.length; i > 0; i--) {\n                        if (this.undoCollection[i - 1].isClearAction) {\n                            this.performUndoRedo(args);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    break;\n                case 'conditionalFormat':\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(undoRedoArgs, this.parent, !args.isUndo, this.undoCollection);\n                    break;\n                case 'clearCF':\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(undoRedoArgs, this.parent, !args.isUndo);\n                    break;\n                case 'insertImage':\n                case 'deleteImage':\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(undoRedoArgs, this.parent, !args.isUndo);\n                    break;\n                case 'imageRefresh':\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(undoRedoArgs, this.parent, !args.isUndo);\n                    break;\n                case 'insertChart':\n                case 'deleteChart':\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(undoRedoArgs, this.parent, !args.isUndo);\n                    break;\n                case 'chartRefresh':\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(undoRedoArgs, this.parent, !args.isUndo);\n                    break;\n                case 'chartDesign':\n                    undoRedoArgs.eventArgs.isUndo = args.isUndo;\n                    this.parent.notify(_spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__.undoRedoForChartDesign, undoRedoArgs.eventArgs);\n                    break;\n                case 'addDefinedName':\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(undoRedoArgs, this.parent, !args.isUndo);\n                    break;\n            }\n            if (!args.isFromUpdateAction) {\n                if (args.isUndo) {\n                    this.redoCollection.push(undoRedoArgs);\n                }\n                else {\n                    this.undoCollection.push(undoRedoArgs);\n                }\n                if (this.undoCollection.length > this.undoRedoStep) {\n                    this.undoCollection.splice(0, 1);\n                }\n                if (this.redoCollection.length > this.undoRedoStep) {\n                    this.redoCollection.splice(0, 1);\n                }\n                this.updateUndoRedoIcons();\n                if (!args.isPublic && !preventEvt) {\n                    this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.completeAction, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.extend)({ isUndoRedo: true, isUndo: args.isUndo }, undoRedoArgs));\n                }\n            }\n            this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.refreshRibbonIcons, null);\n        }\n    };\n    UndoRedo.prototype.undoForSorting = function (args, isUndo) {\n        var _this = this;\n        var sheetIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheetIndexFromAddress)(this.parent, args.eventArgs.range);\n        var range = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(args.eventArgs.range);\n        var updateSortIcon = function (idx, add) {\n            if (sheetIndex === _this.parent.activeSheetIndex) {\n                var td = _this.parent.getCell(range[0] - 1, _this.parent.sortCollection[idx].columnIndex);\n                if (td) {\n                    td = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.select)('.e-filter-icon', td);\n                    if (td) {\n                        // Determine the class to add or remove\n                        var sortClass = \"e-sort\" + (_this.parent.sortCollection[idx].order === 'Ascending' ? 'asc' : 'desc') + \"-filter\";\n                        if (add) {\n                            td.classList.add(sortClass);\n                        }\n                        else {\n                            td.classList.remove(sortClass);\n                        }\n                    }\n                }\n            }\n        };\n        if (isUndo) {\n            this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.updateSortedDataOnCell, { result: args.eventArgs.beforeActionData.cellDetails, range: range, sheet: (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(this.parent, sheetIndex), jsonData: args.eventArgs.beforeActionData.sortedCellDetails, isUndo: true });\n            this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.sortComplete, { range: args.eventArgs.range });\n            if (this.parent.sortCollection && args.eventArgs.previousSort) {\n                for (var i = this.parent.sortCollection.length - 1; i >= 0; i--) {\n                    if (this.parent.sortCollection[i].sheetIndex === sheetIndex) {\n                        updateSortIcon(i, false);\n                        this.parent.sortCollection.splice(i, 1);\n                        var prevSort = args.eventArgs.previousSort;\n                        if (Array.isArray(prevSort)) {\n                            for (var j = 0; j < prevSort.length; j++) {\n                                this.parent.sortCollection.splice(j, 0, prevSort[j]);\n                                updateSortIcon(j, true);\n                            }\n                        }\n                        if (!this.parent.sortCollection.length) {\n                            this.parent.sortCollection = undefined;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(args, this.parent, true);\n            if (args.eventArgs.previousSort) {\n                var idx = 0;\n                if (this.parent.sortCollection) {\n                    for (var i = this.parent.sortCollection.length - 1; i >= 0; i--) {\n                        if (this.parent.sortCollection[i].sheetIndex === sheetIndex) {\n                            updateSortIcon(i, false);\n                            idx = i;\n                            this.parent.sortCollection.splice(i, 1);\n                        }\n                    }\n                }\n                else {\n                    this.parent.sortCollection = [];\n                }\n                this.parent.sortCollection.splice(idx, 0, { sortRange: args.eventArgs.range.substring(args.eventArgs.range.lastIndexOf('!') + 1), sheetIndex: sheetIndex,\n                    columnIndex: (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColIndex)(args.eventArgs.sortOptions.sortDescriptors.field), order: args.eventArgs.sortOptions.sortDescriptors.order });\n                updateSortIcon(idx, true);\n            }\n        }\n    };\n    UndoRedo.prototype.updateUndoRedoCollection = function (options) {\n        var actionList = ['clipboard', 'format', 'sorting', 'cellSave', 'resize', 'resizeToFit', 'wrap', 'hideShow', 'replace',\n            'validation', 'merge', 'clear', 'conditionalFormat', 'clearCF', 'insertImage', 'imageRefresh', 'insertChart', 'deleteChart',\n            'chartRefresh', 'filter', 'cellDelete', 'autofill', 'autofillWithCF', 'addDefinedName', 'removeValidation', 'removeHighlight', 'addHighlight', 'hyperlink', 'removeHyperlink', 'deleteImage', 'chartDesign', 'replaceAll', 'addNote', 'editNote', 'deleteNote'];\n        if ((options.args.action === 'insert' || options.args.action === 'delete') && options.args.eventArgs.modelType !== 'Sheet') {\n            actionList.push(options.args.action);\n        }\n        var action = options.args.action;\n        if (actionList.indexOf(action) === -1 && !options.isPublic) {\n            return;\n        }\n        var eventArgs = options.args.eventArgs;\n        if (action === 'clipboard' || action === 'sorting' || action === 'format' || action === 'cellSave' ||\n            action === 'wrap' || action === 'replace' || action === 'validation' || action === 'clear' || action === 'conditionalFormat' ||\n            action === 'clearCF' || action === 'insertImage' || action === 'imageRefresh' || action === 'insertChart' ||\n            action === 'chartRefresh' || action === 'filter' || action === 'cellDelete' || action === 'autofill' || action === 'autofillWithCF' || action === 'removeValidation' ||\n            action === 'addDefinedName' || action === 'hyperlink' || action === 'removeHyperlink' || action === 'deleteImage' || action === 'chartDesign' || action === 'addNote' || action === 'editNote' || action === 'deleteNote') {\n            var beforeActionDetails = { beforeDetails: { cellDetails: [] } };\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.getBeforeActionData, beforeActionDetails);\n            eventArgs.beforeActionData = beforeActionDetails.beforeDetails;\n        }\n        if (action === 'clipboard' && eventArgs.copiedInfo && eventArgs.copiedInfo.isExternal) {\n            var addressInfo = this.parent.getAddressInfo(eventArgs.pastedRange);\n            eventArgs.copiedInfo.cellDetails = this.getCellDetails(addressInfo.indices, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(this.parent, addressInfo.sheetIndex), action);\n        }\n        if (this.redoCollection.length > 0 && this.redoCollection[this.redoCollection.length - 1].action === 'autofillWithCF' && options.args.action === 'autofill') {\n            options.args.action = 'autofillWithCF';\n        }\n        this.undoCollection.push(options.args);\n        this.redoCollection = [];\n        if (this.undoCollection.length > this.undoRedoStep) {\n            this.undoCollection.splice(0, 1);\n        }\n        this.updateUndoRedoIcons();\n    };\n    UndoRedo.prototype.clearUndoRedoCollection = function () {\n        this.undoCollection = [];\n        this.redoCollection = [];\n        this.updateUndoRedoIcons();\n    };\n    UndoRedo.prototype.updateUndoRedoIcons = function () {\n        var l10n = this.parent.serviceLocator.getService(_spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__.locale);\n        this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.enableToolbarItems, [{\n                tab: l10n.getConstant('Home'), items: [this.parent.element.id + '_undo'],\n                enable: this.undoCollection.length > 0\n            }]);\n        this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.enableToolbarItems, [{\n                tab: l10n.getConstant('Home'), items: [this.parent.element.id + '_redo'],\n                enable: this.redoCollection.length > 0\n            }]);\n    };\n    UndoRedo.prototype.updateUndoRedoSheetReferences = function (args) {\n        var updateReference = function (collection) {\n            collection.forEach(function (editArgs) {\n                var eventArgs = editArgs.eventArgs;\n                if (eventArgs) {\n                    ['address', 'dataRange', 'fillRange'].forEach(function (property) {\n                        if (eventArgs[property] && eventArgs[property].includes(args.pName)) {\n                            eventArgs[property] = eventArgs[property].replace(args.pName, args.value);\n                        }\n                    });\n                }\n            });\n        };\n        updateReference(this.undoCollection);\n        updateReference(this.redoCollection);\n    };\n    UndoRedo.prototype.undoForClipboard = function (args, isUndo, actionArgs) {\n        var _this = this;\n        var eventArgs = args.eventArgs;\n        var address = [];\n        address[0] = eventArgs.pastedRange.substring(0, eventArgs.pastedRange.lastIndexOf('!'));\n        address[1] = eventArgs.pastedRange.substring(eventArgs.pastedRange.lastIndexOf('!') + 1);\n        var range = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(address[1]);\n        var sheetIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheetIndex)(this.parent, address[0]);\n        var sheet = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(this.parent, sheetIndex);\n        var copiedInfo = eventArgs.copiedInfo;\n        var actionData = eventArgs.beforeActionData;\n        var isFromUpdateAction = args.isFromUpdateAction;\n        var isRefresh = sheetIndex === this.parent.activeSheetIndex;\n        var pictureElem;\n        if (actionArgs) {\n            actionArgs.isUndoRedo = true;\n            actionArgs.eventArgs.beforeActionData = actionData;\n        }\n        if (args.eventArgs.requestType === 'imagePaste') {\n            var copiedShapeInfo = eventArgs.copiedShapeInfo;\n            if (isUndo) {\n                pictureElem = copiedShapeInfo.pictureElem;\n                if (copiedShapeInfo.isCut) {\n                    this.parent.notify(_spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__.deleteImage, {\n                        id: pictureElem.id, sheetIdx: eventArgs.pasteSheetIndex + 1, isUndoRedo: true\n                    });\n                    this.parent.notify(_spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__.createImageElement, {\n                        options: {\n                            src: pictureElem.style.backgroundImage.replace(/url\\((['\"])?(.*?)\\1\\)/gi, '$2'),\n                            height: copiedShapeInfo.height, width: copiedShapeInfo.width, id: pictureElem.id\n                        },\n                        range: copiedShapeInfo.copiedRange, isPublic: false, isUndoRedo: true\n                    });\n                }\n                else {\n                    this.parent.notify(_spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__.deleteImage, {\n                        id: eventArgs.pastedPictureElement.id, sheetIdx: eventArgs.pasteSheetIndex + 1, isUndoRedo: true\n                    });\n                }\n            }\n            else {\n                if (copiedShapeInfo.isCut) {\n                    pictureElem = copiedShapeInfo.pictureElem;\n                    this.parent.notify(_spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__.deleteImage, {\n                        id: pictureElem.id, sheetIdx: copiedShapeInfo.sId, isUndoRedo: true\n                    });\n                    this.parent.notify(_spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__.createImageElement, {\n                        options: {\n                            src: pictureElem.style.backgroundImage.replace(/url\\((['\"])?(.*?)\\1\\)/gi, '$2'),\n                            height: copiedShapeInfo.height, width: copiedShapeInfo.width, id: pictureElem.id\n                        },\n                        range: copiedShapeInfo.pastedRange, isPublic: false, isUndoRedo: true\n                    });\n                }\n                else {\n                    pictureElem = eventArgs.pastedPictureElement;\n                    this.parent.notify(_spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__.createImageElement, {\n                        options: {\n                            src: pictureElem.style.backgroundImage.replace(/url\\((['\"])?(.*?)\\1\\)/gi, '$2'),\n                            height: pictureElem.offsetHeight, width: pictureElem.offsetWidth, id: pictureElem.id\n                        },\n                        range: copiedShapeInfo.pastedRange, isPublic: false, isUndoRedo: true\n                    });\n                }\n            }\n        }\n        else {\n            if (isUndo) {\n                if (copiedInfo.isCut) {\n                    var cells = actionData.cutCellDetails;\n                    this.updateCellDetails(cells, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(this.parent, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheetIndexFromId)(this.parent, copiedInfo.sId)), (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSwapRange)(copiedInfo.range), isRefresh, args);\n                    if (eventArgs.cfClearActionArgs) {\n                        (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)({ action: 'clearCF', eventArgs: eventArgs.cfClearActionArgs }, this.parent, false);\n                    }\n                }\n                if (actionData) {\n                    this.updateCellDetails(actionData.cellDetails, sheet, range, isRefresh, args, null, null, actionArgs ?\n                        actionArgs.isUndoRedo : null);\n                }\n                if (eventArgs.cfActionArgs) {\n                    eventArgs.cfActionArgs.cfModel.forEach(function (cf) {\n                        (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)({ eventArgs: { range: cf.range, type: cf.type, cFColor: cf.cFColor, value: cf.value,\n                                sheetIdx: eventArgs.cfActionArgs.sheetIdx, cancel: true }, action: 'conditionalFormat' }, _this.parent, false);\n                    });\n                }\n                (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.setMaxHgt)(sheet, range[0], range[1], (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowHeight)(sheet, range[0]));\n                var hgt = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getMaxHgt)(sheet, range[0]);\n                (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.setRowEleHeight)(this.parent, sheet, hgt, range[0]);\n                eventArgs.mergeCollection.forEach(function (mergeArgs) {\n                    mergeArgs.merge = !mergeArgs.merge;\n                    _this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setMerge, mergeArgs);\n                    mergeArgs.merge = !mergeArgs.merge;\n                });\n                if (actionArgs && !isFromUpdateAction) {\n                    this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.completeAction, actionArgs);\n                }\n            }\n            else {\n                if (copiedInfo.isExternal) {\n                    var addressInfo = this.parent.getAddressInfo(eventArgs.pastedRange);\n                    this.updateCellDetails(copiedInfo.cellDetails, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(this.parent, addressInfo.sheetIndex), addressInfo.indices, true, args, null, null, actionArgs ?\n                        actionArgs.isUndoRedo : null);\n                    if (actionArgs && !isFromUpdateAction) {\n                        this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.completeAction, actionArgs);\n                    }\n                }\n                else {\n                    var clipboardPromise = new Promise(function (resolve) { resolve((function () { })()); });\n                    var addressInfo = this.parent.getAddressInfo(eventArgs.copiedRange);\n                    this.parent.notify(eventArgs.copiedInfo.isCut ? _spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__.cut : _spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__.copy, {\n                        range: addressInfo.indices, sId: (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(this.parent, addressInfo.sheetIndex).id,\n                        promise: clipboardPromise, invokeCopy: true, isPublic: true, isFromUpdateAction: isFromUpdateAction\n                    });\n                    clipboardPromise.then(function () {\n                        _this.parent.notify(_spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__.paste, {\n                            range: address ? (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getIndexesFromAddress)(eventArgs.pastedRange) : address,\n                            sIdx: address ? (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheetIndex)(_this.parent, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheetNameFromAddress)(eventArgs.pastedRange)) : address,\n                            type: eventArgs.type, isAction: false, isInternal: true, isFromUpdateAction: isFromUpdateAction,\n                            beforeActionData: eventArgs.beforeActionData, isUndo: isUndo\n                        });\n                        if (actionArgs && !isFromUpdateAction) {\n                            _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.completeAction, actionArgs);\n                        }\n                    });\n                }\n            }\n            if (isRefresh && !isFromUpdateAction) {\n                this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.selectRange, { address: eventArgs.selectedRange });\n                this.parent.notify(_spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__.positionAutoFillElement, {});\n            }\n            else {\n                this.checkRefreshNeeded(sheetIndex, isFromUpdateAction);\n            }\n        }\n        return args;\n    };\n    UndoRedo.prototype.undoForResize = function (args) {\n        var eventArgs = args.eventArgs;\n        if (eventArgs.hide === undefined) {\n            if (eventArgs.isCol) {\n                var temp = eventArgs.oldWidth;\n                eventArgs.oldWidth = eventArgs.width;\n                eventArgs.width = temp;\n            }\n            else {\n                var temp = eventArgs.oldHeight;\n                eventArgs.oldHeight = eventArgs.height;\n                eventArgs.height = temp;\n            }\n        }\n        else {\n            eventArgs.hide = !eventArgs.hide;\n        }\n        (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(args, this.parent, false);\n        var sheet = this.parent.getActiveSheet();\n        var activeCell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(sheet.activeCell);\n        var CellElem = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(activeCell[0], activeCell[1], sheet);\n        if (CellElem && CellElem.rowSpan) {\n            var td = this.parent.getCell(activeCell[0], activeCell[1]);\n            this.parent.element.querySelector('.e-active-cell').style.height = td.offsetHeight + 'px';\n        }\n        else if (CellElem && CellElem.colSpan) {\n            var td = this.parent.getCell(activeCell[0], activeCell[1]);\n            this.parent.element.querySelector('.e-active-cell').style.width = td.offsetWidth + 'px';\n        }\n        return args;\n    };\n    UndoRedo.prototype.performOperation = function (args, preventEvt, preventReSelect, isFromAutoFillOption) {\n        var eventArgs = args.eventArgs;\n        var address = [];\n        var undoRange = (args.action === 'cellSave' || args.action === 'wrap' || args.action === 'replace'\n            || args.action === 'cellDelete' || args.action === 'hyperlink' || args.action === 'addNote' || args.action === 'editNote'\n            || args.action === 'deleteNote' || args.action === 'removeHyperlink') ? eventArgs.address : eventArgs.range;\n        if (args.action === 'autofill') {\n            address[0] = eventArgs.fillRange.substring(0, eventArgs.fillRange.lastIndexOf('!'));\n            address[1] = eventArgs.fillRange.substring(eventArgs.fillRange.lastIndexOf('!') + 1);\n        }\n        else {\n            address[0] = undoRange.substring(0, undoRange.lastIndexOf('!'));\n            address[1] = undoRange.substring(undoRange.lastIndexOf('!') + 1);\n        }\n        var sheetIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheetIndex)(this.parent, address[0]);\n        var sheet = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheet)(this.parent, sheetIndex);\n        var range;\n        if (eventArgs.isColSelected) {\n            var rangeArr = address[1].split(':');\n            range = [0, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColIndex)(rangeArr[0]), sheet.rowCount - 1, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColIndex)(rangeArr[1])];\n        }\n        else {\n            range = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSwapRange)((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(address[1]));\n        }\n        var indexes = range;\n        var actionData = eventArgs.beforeActionData;\n        var isFromUpdateAction = args.isFromUpdateAction;\n        var isRefresh = this.checkRefreshNeeded(sheetIndex, isFromUpdateAction);\n        var uniqueArgs = { cellIdx: [range[0], range[1]], isUnique: false, uniqueRange: '' };\n        if (!eventArgs.isColSelected) {\n            this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.checkUniqueRange, uniqueArgs);\n        }\n        if (this.isUndo) {\n            if (uniqueArgs.isUnique && eventArgs.formula && eventArgs.formula.indexOf('UNIQUE') > -1) {\n                var rangeIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(uniqueArgs.uniqueRange);\n                if ((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(rangeIdx[0], rangeIdx[1], this.parent.getActiveSheet()).value !== '#SPILL!') {\n                    for (var j = rangeIdx[0]; j <= rangeIdx[2]; j++) {\n                        for (var k = rangeIdx[1]; k <= rangeIdx[3]; k++) {\n                            if (j === rangeIdx[0] && k === rangeIdx[1]) {\n                                k = k + 1;\n                            }\n                            this.parent.updateCellInfo({ value: '' }, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeAddress)([j, k]), true);\n                        }\n                    }\n                }\n            }\n            this.updateCellDetails(actionData.cellDetails, sheet, range, isRefresh, args, preventEvt, eventArgs.isColSelected, true, isFromAutoFillOption);\n            if (uniqueArgs.isUnique && args.action === 'cellDelete' && eventArgs.isSpill) {\n                var rangeIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(uniqueArgs.uniqueRange);\n                var cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(rangeIdx[0], rangeIdx[1], this.parent.getActiveSheet());\n                for (var i = rangeIdx[0]; i <= rangeIdx[2]; i++) {\n                    for (var j = rangeIdx[1]; j <= rangeIdx[3]; j++) {\n                        for (var k = range[0]; k <= range[2]; k++) {\n                            for (var l = range[1]; l <= range[3]; l++) {\n                                if (i !== k || j !== l) {\n                                    this.parent.updateCellInfo({ value: '' }, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCellAddress)(i, j), true);\n                                }\n                            }\n                        }\n                    }\n                }\n                cell.value = '#SPILL!';\n                this.parent.updateCellInfo(cell, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCellAddress)(rangeIdx[0], rangeIdx[1]), true);\n            }\n            if (!eventArgs.isSpill && uniqueArgs.uniqueRange !== '') {\n                var indexes_1 = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(uniqueArgs.uniqueRange);\n                for (var j = indexes_1[0]; j <= indexes_1[2]; j++) {\n                    for (var k = indexes_1[1]; k <= indexes_1[3]; k++) {\n                        if (j === indexes_1[0] && k === indexes_1[1]) {\n                            k = k + 1;\n                        }\n                        this.parent.updateCellInfo({ value: '' }, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeAddress)([j, k]), true);\n                    }\n                }\n                this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.reApplyFormula, null);\n            }\n        }\n        else {\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n            var argsEventArgs = args.eventArgs;\n            var activeCellIndexes = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(sheet.activeCell);\n            var startRange = address[1] ? address[1].split(':') : [];\n            if (indexes[0] !== activeCellIndexes[0] && indexes[1] !== activeCellIndexes[1] &&\n                args.action === 'hyperlink' && startRange.length > 0) {\n                sheet.activeCell = startRange[0];\n                activeCellIndexes = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(sheet.activeCell);\n            }\n            var cellValue = this.parent.getCellStyleValue(['textDecoration'], activeCellIndexes).textDecoration;\n            if (argsEventArgs && argsEventArgs.style && argsEventArgs.style.textDecoration) {\n                var value = argsEventArgs.style.textDecoration;\n                var changedValue = value;\n                var changedStyle = void 0;\n                var removeProp = false;\n                if (cellValue === 'underline') {\n                    changedValue = value === 'underline' ? 'none' : 'underline line-through';\n                }\n                else if (cellValue === 'line-through') {\n                    changedValue = value === 'line-through' ? 'none' : 'underline line-through';\n                }\n                else if (cellValue === 'underline line-through') {\n                    changedValue = value === 'underline' ? 'line-through' : 'underline';\n                    removeProp = true;\n                }\n                if (changedValue === 'none') {\n                    removeProp = true;\n                }\n                argsEventArgs.style.textDecoration = changedValue;\n                args.eventArgs = argsEventArgs;\n                for (var i = indexes[0]; i <= indexes[2]; i++) {\n                    for (var j = indexes[1]; j <= indexes[3]; j++) {\n                        changedStyle = {};\n                        cellValue = this.parent.getCellStyleValue(['textDecoration'], [i, j]).textDecoration;\n                        if (cellValue === 'none') {\n                            if (removeProp) {\n                                continue;\n                            }\n                            changedStyle.textDecoration = value;\n                        }\n                        else if (cellValue === 'underline' || cellValue === 'line-through') {\n                            if (removeProp) {\n                                if (value === cellValue) {\n                                    changedStyle.textDecoration = 'none';\n                                }\n                                else {\n                                    continue;\n                                }\n                            }\n                            else {\n                                changedStyle.textDecoration = value !== cellValue ? 'underline line-through' : value;\n                            }\n                        }\n                        else if (cellValue === 'underline line-through') {\n                            if (removeProp) {\n                                changedStyle.textDecoration = value === 'underline' ? 'line-through' : 'underline';\n                            }\n                            else {\n                                continue;\n                            }\n                        }\n                        this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setCellFormat, {\n                            style: { textDecoration: changedStyle.textDecoration }, range: [i, j, i, j], refreshRibbon: true,\n                            onActionUpdate: true\n                        });\n                    }\n                }\n                argsEventArgs.style.textDecoration = value;\n                args.eventArgs = argsEventArgs;\n            }\n            else {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(eventArgs.oldValue) && eventArgs.oldValue !== eventArgs.value && uniqueArgs.isUnique) {\n                    var indexes_2 = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(uniqueArgs.uniqueRange);\n                    if ((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(indexes_2[0], indexes_2[1], this.parent.getActiveSheet()).value !== '#SPILL!') {\n                        for (var j = indexes_2[0]; j <= indexes_2[2]; j++) {\n                            for (var k = indexes_2[1]; k <= indexes_2[3]; k++) {\n                                if (j === indexes_2[0] && k === indexes_2[1]) {\n                                    this.parent.updateCellInfo({ value: '#SPILL!' }, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeAddress)([indexes_2[0], indexes_2[1]]), true);\n                                    k = k + 1;\n                                }\n                                this.parent.updateCellInfo({ value: '' }, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeAddress)([j, k]), true);\n                            }\n                        }\n                    }\n                }\n                (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateAction)(args, this.parent, true);\n                if (uniqueArgs.isUnique && args.action === 'cellDelete' && eventArgs.isSpill) {\n                    var indexes_3 = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(uniqueArgs.uniqueRange);\n                    var Skip = false;\n                    for (var i = indexes_3[0]; i <= indexes_3[1]; i++) {\n                        for (var j = indexes_3[1]; j <= indexes_3[3]; j++) {\n                            if (i === indexes_3[0] && j === indexes_3[1]) {\n                                j++;\n                            }\n                            if ((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(i, j, sheet) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(i, j, sheet).value)\n                                && (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(i, j, sheet).value !== '') {\n                                Skip = true;\n                            }\n                        }\n                    }\n                    if (!Skip) {\n                        var cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(indexes_3[0], indexes_3[1], this.parent.getActiveSheet());\n                        cell.value = '';\n                        this.parent.updateCellInfo(cell, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCellAddress)(indexes_3[0], indexes_3[1]), true);\n                        this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.reApplyFormula, null);\n                    }\n                }\n            }\n        }\n        if (args.action === 'autofill') {\n            address[1] = this.isUndo ? args.eventArgs.dataRange : args.eventArgs.selectedRange;\n        }\n        if (isRefresh && !preventReSelect && !isFromUpdateAction) {\n            if (eventArgs.isColSelected) {\n                address[1] = sheet.selectedRange;\n            }\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.selectRange, { address: address[1] });\n        }\n        if (this.parent.showAggregate) {\n            this.parent.notify(_spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__.showAggregate, {});\n        }\n        return args;\n    };\n    UndoRedo.prototype.getCellDetails = function (address, sheet, action) {\n        var _this = this;\n        var cells = [];\n        var cell;\n        var filterCheck = action === 'cellDelete';\n        var processedColumns = {};\n        address = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSwapRange)(address);\n        var updateCellProps = function (rowIdx, colIdx) {\n            var currentCell = {\n                rowIndex: rowIdx, colIndex: colIdx, value: cell ? cell.value : '',\n                formula: cell ? cell.formula : ''\n            };\n            var rowHeight = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowHeight)(sheet, rowIdx);\n            if (cell) {\n                if (cell.format) {\n                    currentCell.format = cell.format;\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(cell.isLocked)) {\n                    currentCell.isLocked = cell.isLocked;\n                }\n                if (cell.style) {\n                    currentCell.style = Object.assign({}, cell.style);\n                }\n                if (cell.wrap) {\n                    currentCell.wrap = cell.wrap;\n                }\n                if (cell.rowSpan) {\n                    currentCell.rowSpan = cell.rowSpan;\n                }\n                if (cell.colSpan) {\n                    currentCell.colSpan = cell.colSpan;\n                }\n                if (cell.image) {\n                    currentCell.image = cell.image;\n                }\n                if (cell.chart) {\n                    currentCell.chart = JSON.parse(JSON.stringify(cell.chart));\n                }\n                if (cell.validation) {\n                    currentCell.validation = Object.assign({}, cell.validation);\n                }\n                if (cell.notes) {\n                    currentCell.notes = cell.notes;\n                }\n                if (cell.isReadOnly) {\n                    currentCell.isReadOnly = cell.isReadOnly;\n                }\n                if (cell.formattedText) {\n                    currentCell.formattedText = cell.formattedText;\n                }\n                if (cell.hyperlink) {\n                    currentCell.hyperlink = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isObject)(cell.hyperlink) ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.extend)({}, cell.hyperlink) : cell.hyperlink);\n                }\n                if (sheet.standardHeight ? rowHeight !== sheet.standardHeight : rowHeight !== 20) {\n                    cell.rowHeight = currentCell.rowHeight = rowHeight;\n                }\n                var editModule = _this.parent.editModule;\n                currentCell.value = cell && editModule && cell.formula === editModule.editCellData.value &&\n                    (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(editModule.editCellData.prevFormulaValue)) ?\n                    editModule.editCellData.prevFormulaValue : currentCell.value;\n            }\n            cells.push(currentCell);\n        };\n        if (action === 'validation' || action === 'removeValidation') {\n            for (var colIdx = address[1]; colIdx <= address[3]; colIdx++) {\n                var column = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumn)(sheet, colIdx);\n                for (var rowIdx = address[0]; rowIdx <= address[2]; rowIdx++) {\n                    if (!processedColumns[colIdx] && (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.checkColumnValidation)(column, rowIdx, colIdx)) {\n                        cells.push({ colIndex: colIdx, validation: Object.assign({}, column.validation) });\n                        processedColumns[colIdx] = true;\n                    }\n                    cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(rowIdx, colIdx, sheet);\n                    if (cell && !cell.validation) {\n                        continue;\n                    }\n                    updateCellProps(rowIdx, colIdx);\n                }\n            }\n        }\n        else {\n            for (var i = address[0]; i <= address[2]; i++) {\n                if (filterCheck && (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.isFilterHidden)(sheet, i)) {\n                    continue;\n                }\n                for (var j = address[1]; j <= address[3]; j++) {\n                    cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(i, j, sheet);\n                    updateCellProps(i, j);\n                }\n            }\n        }\n        return cells;\n    };\n    UndoRedo.prototype.updateCellDetails = function (cells, sheet, range, isRefresh, args, preventEvt, isColSelected, isUndoRedo, isFromAutoFillOption) {\n        var _this = this;\n        var len = cells.length;\n        var triggerEvt = args && !preventEvt && (args.action === 'cellSave' || args.action === 'cellDelete' ||\n            args.action === 'autofill' || args.action === 'clipboard');\n        var cellElem;\n        var prevCell;\n        var select;\n        var cf = args && !args.eventArgs.cfClearActionArgs && sheet.conditionalFormats &&\n            sheet.conditionalFormats.length && [].slice.call(sheet.conditionalFormats);\n        var cfRule = [];\n        var cfRefreshAll;\n        var evtArgs;\n        var isDelete;\n        var deletedRange;\n        if (args.action === 'cellDelete') {\n            isDelete = false;\n            deletedRange = range;\n        }\n        var _loop_1 = function (i) {\n            if (isColSelected || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cells[i].rowIndex)) {\n                (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setColumn)(sheet, cells[i].colIndex, { validation: cells[i].validation });\n                return \"continue\";\n            }\n            prevCell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(cells[i].rowIndex, cells[i].colIndex, sheet, false, true);\n            if (prevCell.style && args && (args.action === 'format' || args.action === 'clipboard')) {\n                if (prevCell.style.borderTop && (!cells[i].style || !cells[i].style.borderTop)) {\n                    this_1.parent.setBorder({ borderTop: '' }, sheet.name + '!' + (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCellAddress)(cells[i].rowIndex, cells[i].colIndex), null, isUndoRedo);\n                }\n                if (prevCell.style.borderLeft && (!cells[i].style || !cells[i].style.borderLeft)) {\n                    this_1.parent.setBorder({ borderLeft: '' }, sheet.name + '!' + (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCellAddress)(cells[i].rowIndex, cells[i].colIndex), null, isUndoRedo);\n                }\n                if (prevCell.style.borderRight && (!cells[i].style ||\n                    !cells[i].style.borderRight)) {\n                    this_1.parent.setBorder({ borderRight: '' }, sheet.name + '!' + (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCellAddress)(cells[i].rowIndex, cells[i].colIndex), null, isUndoRedo);\n                }\n                if (prevCell.style.fontSize && (!cells[i].style || !cells[i].style.fontSize)) {\n                    prevCell.style.fontSize = '11pt';\n                    select = true;\n                    this_1.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.applyCellFormat, { style: { fontSize: '11pt' }, rowIdx: cells[i].rowIndex, colIdx: cells[i].colIndex, lastCell: true, isHeightCheckNeeded: true, manualUpdate: true, onActionUpdate: true });\n                }\n                if (prevCell.style.fontFamily && (!cells[i].style || !cells[i].style.fontFamily)) {\n                    select = true;\n                    prevCell.style.fontFamily = 'Calibri';\n                    this_1.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.applyCellFormat, { style: { fontFamily: 'Calibri' }, rowIdx: cells[i].rowIndex, colIdx: cells[i].colIndex, lastCell: true, isHeightCheckNeeded: true, manualUpdate: true, onActionUpdate: true });\n                }\n            }\n            if (prevCell.image && args && args.action === 'clipboard') {\n                prevCell.image.forEach(function (image) {\n                    _this.parent.notify(_spreadsheet_index__WEBPACK_IMPORTED_MODULE_0__.deleteImage, { id: image.id, sheet: sheet, preventEventTrigger: true, rowIdx: cells[i].rowIndex,\n                        colIdx: cells[i].colIndex });\n                });\n            }\n            var currentCell = {\n                value: (cells[i].formula && cells[i].formula.toUpperCase().includes('UNIQUE')) ? null : cells[i].value, formula: cells[i].formula\n            };\n            if (cells[i].format) {\n                currentCell.format = cells[i].format;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(cells[i].isLocked)) {\n                currentCell.isLocked = prevCell.isLocked ? prevCell.isLocked : cells[i].isLocked;\n            }\n            if (cells[i].style) {\n                currentCell.style = Object.assign({}, cells[i].style);\n            }\n            if (cells[i].wrap) {\n                currentCell.wrap = cells[i].wrap;\n            }\n            if (cells[i].rowSpan) {\n                currentCell.rowSpan = cells[i].rowSpan;\n            }\n            if (cells[i].colSpan) {\n                currentCell.colSpan = cells[i].colSpan;\n            }\n            if (cells[i].hyperlink) {\n                currentCell.hyperlink = cells[i].hyperlink;\n            }\n            if (cells[i].image) {\n                currentCell.image = cells[i].image;\n            }\n            if (cells[i].notes) {\n                currentCell.notes = cells[i].notes;\n            }\n            if (cells[i].isReadOnly) {\n                currentCell.isReadOnly = cells[i].isReadOnly;\n            }\n            if (cells[i].formattedText) {\n                currentCell.formattedText = cells[i].formattedText;\n            }\n            (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.setCell)(cells[i].rowIndex, cells[i].colIndex, sheet, currentCell);\n            evtArgs = {\n                action: 'updateCellValue', address: [cells[i].rowIndex, cells[i].colIndex,\n                    cells[i].rowIndex, cells[i].colIndex], notes: cells[i].notes,\n                value: cells[i].formula ? cells[i].formula : cells[i].value,\n                sheetIndex: (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getSheetIndex)(this_1.parent, sheet.name), skipFormatCheck: (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.isImported)(this_1.parent),\n                isDelete: isDelete, deletedRange: deletedRange, actionName: args.action\n            };\n            this_1.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.workbookEditOperation, evtArgs);\n            if (cf && !cfRefreshAll) {\n                cfRefreshAll = evtArgs.isFormulaDependent;\n            }\n            if (args && args.action === 'format' && args.eventArgs.requestType === 'NumberFormat' && currentCell.wrap &&\n                currentCell.format !== prevCell.format && !(0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRow)(sheet, cells[i].rowIndex).customHeight) {\n                this_1.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.wrapEvent, {\n                    range: [cells[i].rowIndex, cells[i].colIndex, cells[i].rowIndex,\n                        cells[i].colIndex], wrap: true, sheet: sheet, initial: true, isOtherAction: true\n                });\n            }\n            else if ((args && args.action === 'wrap' && args.eventArgs.wrap) || (prevCell.wrap && !cells[i].wrap)) {\n                this_1.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.wrapEvent, {\n                    range: [cells[i].rowIndex, cells[i].colIndex, cells[i].rowIndex,\n                        cells[i].colIndex], wrap: false, sheet: sheet, initial: true\n                });\n            }\n            if (args && cells[i].hyperlink && args.action === 'clear') {\n                var hyperlinkRange = sheet.name + '!' + (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeAddress)([cells[i].rowIndex, cells[i].colIndex, cells[i].rowIndex, cells[i].colIndex]);\n                cellElem = this_1.parent.getCell(cells[i].rowIndex, cells[i].colIndex);\n                if (args.eventArgs.type === 'Clear All' || args.eventArgs.type === 'Clear Hyperlinks') {\n                    this_1.parent.addHyperlink(cells[i].hyperlink, hyperlinkRange, cells[i].value);\n                }\n                else if (args.eventArgs.type === 'Clear Formats' && cellElem) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.addClass)(cellElem.querySelectorAll('.e-hyperlink'), 'e-hyperlink-style');\n                }\n            }\n            if (cells[i].validation) {\n                this_1.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.cellValidation, { rules: cells[i].validation,\n                    range: sheet.name + \"!\" + (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCellAddress)(cells[i].rowIndex, cells[i].colIndex) });\n            }\n            if (triggerEvt && cells[i].value !== prevCell.value) {\n                this_1.parent.trigger('cellSave', { element: null, value: cells[i].value, oldValue: prevCell.value, formula: cells[i].formula, cancel: false,\n                    address: sheet.name + \"!\" + (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCellAddress)(cells[i].rowIndex, cells[i].colIndex),\n                    displayText: this_1.parent.getDisplayText(cells[i]) });\n            }\n            if (cf && !cfRefreshAll) {\n                (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.updateCFModel)(cf, cfRule, cells[i].rowIndex, cells[i].colIndex);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < len; i++) {\n            _loop_1(i);\n        }\n        if (isRefresh) {\n            if (range[0] === range[2] && range[1] === range[3]) {\n                var cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(range[0], range[1], sheet);\n                if (cell.rowSpan > 1) {\n                    range[2] = range[0] + cell.rowSpan - 1;\n                }\n                if (cell.colSpan > 1) {\n                    range[3] = range[1] + cell.colSpan - 1;\n                }\n            }\n            var isHeightCheckFromUndo = false;\n            if (args.action === 'autofill' || args.action === 'clipboard' || args.action === 'wrap') {\n                isHeightCheckFromUndo = true;\n            }\n            else if (args.action === 'format' && args.eventArgs.requestType === 'CellFormat') {\n                isHeightCheckFromUndo = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.isHeightCheckNeeded)(args.eventArgs.style, true);\n            }\n            this.parent.serviceLocator.getService('cell').refreshRange(range, false, false, true, false, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.isImported)(this.parent), null, isFromAutoFillOption, isHeightCheckFromUndo, null, null, cells);\n            if (cfRule.length || cfRefreshAll) {\n                this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_2__.applyCF, { cfModel: !cfRefreshAll && cfRule, refreshAll: cfRefreshAll, isAction: true });\n            }\n            if (select) {\n                (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getUpdateUsingRaf)(function () { return _this.parent.selectRange(sheet.selectedRange); });\n            }\n        }\n    };\n    UndoRedo.prototype.checkRefreshNeeded = function (sheetIndex, isFromUpdateAction) {\n        var isRefresh = true;\n        if (sheetIndex !== this.parent.activeSheetIndex) {\n            if (!isFromUpdateAction) {\n                this.parent.activeSheetIndex = sheetIndex;\n                this.parent.dataBind();\n            }\n            isRefresh = false;\n        }\n        return isRefresh;\n    };\n    UndoRedo.prototype.addEventListener = function () {\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.performUndoRedo, this.performUndoRedo, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.updateUndoRedoCollection, this.updateUndoRedoCollection, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.setActionData, this.setActionData, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.getBeforeActionData, this.getBeforeActionData, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.clearUndoRedoCollection, this.clearUndoRedoCollection, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.setUndoRedo, this.updateUndoRedoIcons, this);\n        this.parent.on(_workbook_common_index__WEBPACK_IMPORTED_MODULE_4__.sheetRenameUpdate, this.updateUndoRedoSheetReferences, this);\n    };\n    UndoRedo.prototype.removeEventListener = function () {\n        if (!this.parent.isDestroyed) {\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.performUndoRedo, this.performUndoRedo);\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.updateUndoRedoCollection, this.updateUndoRedoCollection);\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.setActionData, this.setActionData);\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.getBeforeActionData, this.getBeforeActionData);\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.clearUndoRedoCollection, this.clearUndoRedoCollection);\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.setUndoRedo, this.updateUndoRedoIcons);\n            this.parent.off(_workbook_common_index__WEBPACK_IMPORTED_MODULE_4__.sheetRenameUpdate, this.updateUndoRedoSheetReferences);\n        }\n    };\n    /**\n     * Destroy undo redo module.\n     *\n     * @returns {void} - Destroy undo redo module.\n     */\n    UndoRedo.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.undoCollection.length > 0) {\n            this.undoCollection = [];\n        }\n        if (this.redoCollection.length > 0) {\n            this.redoCollection = [];\n        }\n        if (this.beforeActionData && this.beforeActionData.cellDetails) {\n            this.beforeActionData.cellDetails = [];\n        }\n        this.parent = null;\n    };\n    /**\n     * Get the undo redo module name.\n     *\n     * @returns {string} - Get the undo redo module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        return 'undoredo';\n    };\n    return UndoRedo;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/actions/undo-redo.js?");

/***/ })

}]);