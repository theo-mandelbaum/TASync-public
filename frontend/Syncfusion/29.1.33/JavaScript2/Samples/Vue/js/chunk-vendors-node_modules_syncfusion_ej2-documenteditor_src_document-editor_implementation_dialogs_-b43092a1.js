"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_dialogs_-b43092a1"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/font-dialog.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/font-dialog.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FontDialog: () => (/* binding */ FontDialog)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\");\n/* harmony import */ var _format_character_format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../format/character-format */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/format/character-format.js\");\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\");\n\n\n\n\n\n\n/* eslint-disable */\n/**\n * The Font dialog is used to modify formatting of selected text.\n */\nvar FontDialog = /** @class */ (function () {\n    /**\n     * @param {DocumentHelper} documentHelper - Specifies the document helper.\n     * @private\n     */\n    function FontDialog(documentHelper) {\n        var _this = this;\n        this.fontStyleInternal = undefined;\n        this.fontNameList = undefined;\n        this.fontStyleText = undefined;\n        this.fontSizeText = undefined;\n        this.colorPicker = undefined;\n        this.underlineDrop = undefined;\n        this.strikethroughBox = undefined;\n        this.doublestrikethrough = undefined;\n        this.superscript = undefined;\n        this.subscript = undefined;\n        this.allcaps = undefined;\n        //Character Format Property\n        this.bold = undefined;\n        this.italic = undefined;\n        this.underline = undefined;\n        this.strikethrough = undefined;\n        this.baselineAlignment = undefined;\n        this.fontSize = undefined;\n        this.fontFamily = undefined;\n        this.fontColor = undefined;\n        this.allCaps = undefined;\n        this.isListDialog = false;\n        /**\n         * @private\n         */\n        this.characterFormat = undefined;\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.loadFontDialog = function () {\n            _this.documentHelper.updateFocus();\n            var characterFormat;\n            if (_this.characterFormat) {\n                characterFormat = _this.characterFormat;\n            }\n            else {\n                characterFormat = _this.documentHelper.owner.selectionModule.characterFormat;\n            }\n            _this.fontNameList.value = characterFormat.fontFamily;\n            _this.fontNameList.dataBind();\n            if (!characterFormat.bold && !characterFormat.italic) {\n                _this.fontStyleText.value = _this.fontSizeText.value;\n                _this.fontStyleText.index = 0;\n            }\n            else if (characterFormat.bold && !characterFormat.italic) {\n                _this.fontStyleText.value = _this.fontSizeText.value;\n                _this.fontStyleText.index = 1;\n            }\n            else if (!characterFormat.bold && characterFormat.italic) {\n                _this.fontStyleText.value = _this.fontSizeText.value;\n                _this.fontStyleText.index = 2;\n            }\n            else if (characterFormat.bold && characterFormat.italic) {\n                _this.fontStyleText.value = _this.fontSizeText.value;\n                _this.fontStyleText.index = 3;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(characterFormat.fontSize)) {\n                _this.fontSizeText.value = characterFormat.fontSize;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(characterFormat.fontColor)) {\n                var fontColor = characterFormat.fontColor;\n                // \"empty\" is old value used for auto color till v19.2.49. It is maintained for backward compatibility.\n                if (fontColor === 'empty' || fontColor === '#00000000') {\n                    fontColor = '#000000';\n                }\n                _this.colorPicker.value = fontColor;\n            }\n            else {\n                _this.colorPicker.value = '#000000';\n            }\n            if (characterFormat.underline === 'None') {\n                _this.underlineDrop.index = 0;\n            }\n            else if (characterFormat.underline === 'Single') {\n                _this.underlineDrop.index = 1;\n            }\n            if (characterFormat.strikethrough === 'SingleStrike') {\n                _this.strikethroughBox.checked = true;\n            }\n            else if (characterFormat.strikethrough === 'DoubleStrike') {\n                _this.doublestrikethrough.checked = true;\n            }\n            else {\n                _this.strikethroughBox.checked = false;\n                _this.doublestrikethrough.checked = false;\n            }\n            if (characterFormat.baselineAlignment === 'Superscript') {\n                _this.superscript.checked = true;\n            }\n            else if (characterFormat.baselineAlignment === 'Subscript') {\n                _this.subscript.checked = true;\n            }\n            else {\n                _this.superscript.checked = false;\n                _this.subscript.checked = false;\n            }\n            if (_this.documentHelper.selection.caret.style.display !== 'none') {\n                _this.documentHelper.selection.caret.style.display = 'none';\n            }\n            if (characterFormat.allCaps) {\n                _this.allcaps.checked = true;\n            }\n            else {\n                _this.allcaps.checked = false;\n                _this.allCaps = false;\n            }\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.closeFontDialog = function () {\n            _this.unWireEventsAndBindings();\n            _this.documentHelper.updateFocus();\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.onCancelButtonClick = function () {\n            _this.documentHelper.dialog.hide();\n            _this.unWireEventsAndBindings();\n            _this.documentHelper.updateFocus();\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.onInsertFontFormat = function () {\n            var format;\n            if (_this.characterFormat) {\n                format = _this.characterFormat;\n            }\n            else {\n                format = new _format_character_format__WEBPACK_IMPORTED_MODULE_3__.WCharacterFormat(undefined);\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.bold)) {\n                format.bold = _this.bold;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.italic)) {\n                format.italic = _this.italic;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.fontSize) && _this.fontSize > 0) {\n                format.fontSize = _this.fontSize;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.fontColor)) {\n                format.fontColor = _this.fontColor;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.baselineAlignment)) {\n                format.baselineAlignment = _this.baselineAlignment;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.strikethrough)) {\n                format.strikethrough = _this.strikethrough;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.underline)) {\n                format.underline = _this.underline;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.fontFamily)) {\n                var fontFamily = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(_this.fontFamily);\n                format.fontFamily = fontFamily;\n                format.fontFamilyAscii = fontFamily;\n                format.fontFamilyFarEast = fontFamily;\n                format.fontFamilyNonFarEast = fontFamily;\n                format.fontFamilyBidi = fontFamily;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.allCaps)) {\n                format.allCaps = _this.allCaps;\n            }\n            if (!_this.characterFormat) {\n                _this.onCharacterFormat(_this.documentHelper.selection, format);\n            }\n            else {\n                if (_this.isListDialog) {\n                    _this.documentHelper.owner.listDialogModule.updateCharacterFormat(format);\n                }\n                else {\n                    _this.documentHelper.owner.styleDialogModule.updateCharacterFormat();\n                }\n            }\n            _this.documentHelper.hideDialog();\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.fontSizeUpdate = function (args) {\n            _this.fontSize = args.value;\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.fontStyleUpdate = function (args) {\n            _this.fontStyle = args.value;\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.fontFamilyUpdate = function (args) {\n            _this.fontFamily = args.value;\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.underlineUpdate = function (args) {\n            _this.underline = args.value;\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.fontColorUpdate = function (args) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.currentValue)) {\n                _this.fontColor = args.currentValue.hex;\n            }\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.singleStrikeUpdate = function (args) {\n            _this.enableCheckBoxProperty(args);\n            if (args.checked) {\n                _this.strikethrough = 'SingleStrike';\n            }\n            else {\n                _this.strikethrough = 'None';\n            }\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.doubleStrikeUpdate = function (args) {\n            _this.enableCheckBoxProperty(args);\n            if (args.checked) {\n                _this.strikethrough = 'DoubleStrike';\n            }\n            else {\n                _this.strikethrough = 'None';\n            }\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.superscriptUpdate = function (args) {\n            _this.enableCheckBoxProperty(args);\n            if (args.checked) {\n                _this.baselineAlignment = 'Superscript';\n            }\n            else {\n                _this.baselineAlignment = 'Normal';\n            }\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.subscriptUpdate = function (args) {\n            _this.enableCheckBoxProperty(args);\n            if (args.checked) {\n                _this.baselineAlignment = 'Subscript';\n            }\n            else {\n                _this.baselineAlignment = 'Normal';\n            }\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.allcapsUpdate = function (args) {\n            _this.enableCheckBoxProperty(args);\n            if (args.checked) {\n                _this.allCaps = true;\n            }\n            else {\n                _this.allCaps = false;\n            }\n        };\n        this.documentHelper = documentHelper;\n    }\n    Object.defineProperty(FontDialog.prototype, \"fontStyle\", {\n        /**\n         * @private\n         * @returns {string} returns font style\n         */\n        get: function () {\n            return this.fontStyleInternal;\n        },\n        /**\n         * @private\n         * @param {string} value Specifies font style\n         */\n        set: function (value) {\n            this.fontStyleInternal = value;\n            switch (this.fontStyle) {\n                case 'Bold':\n                    this.bold = true;\n                    this.italic = false;\n                    break;\n                case 'Italic':\n                    this.bold = false;\n                    this.italic = true;\n                    break;\n                case 'BoldItalic':\n                    this.bold = true;\n                    this.italic = true;\n                    break;\n                case 'Regular':\n                    this.bold = false;\n                    this.italic = false;\n                    break;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * @returns {string} Returns module name\n     */\n    FontDialog.prototype.getModuleName = function () {\n        return 'FontDialog';\n    };\n    FontDialog.prototype.createInputElement = function (type, id, className) {\n        var element = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', {\n            attrs: { type: type },\n            id: id,\n            className: className\n        });\n        return element;\n    };\n    /**\n     * @private\n     * @param {L10n} locale - Specifies the locale.\n     * @param {boolean} isRtl - Specifies is rtl.\n     * @returns {void}\n     */\n    FontDialog.prototype.initFontDialog = function (locale, isRtl) {\n        var id = this.documentHelper.owner.containerId;\n        this.target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-font-dlg' });\n        var fontDiv = this.getFontDiv(locale, isRtl);\n        this.target.appendChild(fontDiv);\n        var sizeDiv = this.getFontSizeDiv(locale, isRtl);\n        this.target.appendChild(sizeDiv);\n        this.colorDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-container-row' });\n        this.fontColorDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-font-dlg-display' });\n        this.fontColorLabel = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('label', {\n            className: 'e-de-font-dlg-header-font-color e-de-font-color-margin',\n            innerHTML: locale.getConstant('Font color')\n        });\n        if (isRtl) {\n            this.fontColorLabel.classList.add('e-de-rtl');\n        }\n        this.fontColorDiv.appendChild(this.fontColorLabel);\n        this.fontColorElement = this.createInputElement('color', this.target.id + '_ColorDiv', 'e-de-font-dlg-color');\n        this.fontColorDiv.appendChild(this.fontColorElement);\n        this.colorDiv.appendChild(this.fontColorDiv);\n        this.target.appendChild(this.colorDiv);\n        this.fontEffectsDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n        this.fontEffectSubDiv1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n        this.effectLabel = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: 'e-de-para-dlg-heading',\n            innerHTML: locale.getConstant('Effects'),\n        });\n        this.fontEffectSubDiv1.appendChild(this.effectLabel);\n        this.fontEffectsDiv.appendChild(this.fontEffectSubDiv1);\n        this.target.appendChild(this.fontEffectsDiv);\n        this.effectsProperties = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-container-row' });\n        this.fontEffectSubDiv2 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-subcontainer-left' });\n        this.strikeThroughElement = this.createInputElement('checkbox', this.target.id + '_strikeThrough', '');\n        this.fontEffectSubDiv2.appendChild(this.strikeThroughElement);\n        this.checkBoxDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-font-checkbox' });\n        this.subScriptElement = this.createInputElement('checkbox', this.target.id + '_subScript', '');\n        this.checkBoxDiv.appendChild(this.subScriptElement);\n        this.fontEffectSubDiv2.appendChild(this.checkBoxDiv);\n        this.checkBoxDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-font-checkbox' });\n        this.allCapsElement = this.createInputElement('checkbox', this.target.id + '_allCaps', '');\n        this.checkBoxDiv.appendChild(this.allCapsElement);\n        this.fontEffectSubDiv2.appendChild(this.checkBoxDiv);\n        this.effectsProperties.appendChild(this.fontEffectSubDiv2);\n        this.fontEffectSubDiv3 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-subcontainer-right' });\n        this.superScriptElement = this.createInputElement('checkbox', this.target.id + '_superScript', '');\n        this.fontEffectSubDiv3.appendChild(this.superScriptElement);\n        this.checkBoxDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-font-checkbox' });\n        this.doubleStrikeThroughElement = this.createInputElement('checkbox', this.target.id + '_doubleStrikeThrough', '');\n        this.checkBoxDiv.appendChild(this.doubleStrikeThroughElement);\n        this.fontEffectSubDiv3.appendChild(this.checkBoxDiv);\n        this.effectsProperties.appendChild(this.fontEffectSubDiv3);\n        this.target.appendChild(this.effectsProperties);\n        var _a = this.documentHelper.owner.documentEditorSettings.colorPickerSettings, columns = _a.columns, createPopupOnClick = _a.createPopupOnClick, cssClass = _a.cssClass, disabled = _a.disabled, enablePersistence = _a.enablePersistence, inline = _a.inline, mode = _a.mode, modeSwitcher = _a.modeSwitcher, noColor = _a.noColor, presetColors = _a.presetColors, showButtons = _a.showButtons;\n        this.colorPicker = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_4__.ColorPicker({\n            change: this.fontColorUpdate, value: '#000000', enableRtl: isRtl, locale: this.documentHelper.owner.locale, enableOpacity: false, mode: mode, modeSwitcher: modeSwitcher, showButtons: showButtons, columns: columns, createPopupOnClick: createPopupOnClick, cssClass: cssClass, disabled: disabled, enablePersistence: enablePersistence, inline: inline, noColor: noColor, presetColors: presetColors\n        });\n        this.colorPicker.appendTo(this.fontColorElement);\n        this.strikethroughBox = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__.CheckBox({\n            change: this.singleStrikeUpdate,\n            cssClass: 'e-de-font-content-label',\n            label: locale.getConstant('Strikethrough'),\n            enableRtl: isRtl\n        });\n        this.documentHelper.colorPicker = this.colorPicker;\n        this.strikethroughBox.appendTo(this.strikeThroughElement);\n        this.doublestrikethrough = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__.CheckBox({\n            change: this.doubleStrikeUpdate,\n            label: locale.getConstant('Double strikethrough'),\n            enableRtl: isRtl\n        });\n        this.doublestrikethrough.appendTo(this.doubleStrikeThroughElement);\n        this.subscript = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__.CheckBox({\n            label: locale.getConstant('Subscript'),\n            cssClass: 'e-de-font-content-label-width',\n            change: this.subscriptUpdate,\n            enableRtl: isRtl\n        });\n        this.subscript.appendTo(this.subScriptElement);\n        this.superscript = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__.CheckBox({\n            label: locale.getConstant('Superscript'),\n            cssClass: 'e-de-font-content-label', change: this.superscriptUpdate,\n            enableRtl: isRtl\n        });\n        this.superscript.appendTo(this.superScriptElement);\n        this.allcaps = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__.CheckBox({\n            label: locale.getConstant('All caps'),\n            cssClass: 'e-de-font-content-label-caps',\n            change: this.allcapsUpdate,\n            enableRtl: isRtl\n        });\n        this.allcaps.appendTo(this.allCapsElement);\n        if (isRtl) {\n            this.fontEffectSubDiv2.classList.add('e-de-rtl');\n            this.fontEffectSubDiv3.classList.add('e-de-rtl');\n            this.fontEffectSubDiv1.classList.remove('e-de-font-content-checkbox-label');\n        }\n    };\n    FontDialog.prototype.getFontSizeDiv = function (locale, isRtl) {\n        var id = this.documentHelper.owner.containerId;\n        this.getSizeDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-container-row' });\n        this.sizeSubDiv1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-subcontainer-left' });\n        var sizeLabel = locale.getConstant('Size');\n        this.getFontSize = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('select', { id: this.target.id + '_fontSize' });\n        this.getFontSize.innerHTML = '<option>8</option><option>9</option><option>10</option><option>11</option><option>12</option>' +\n            '<option>14</option><option>16</option><option>18</option><option>20</option><option>24</option><option>26</option>' +\n            '<option>28</option><option>36</option><option>48</option><option>72</option><option>96</option>';\n        this.sizeSubDiv1.appendChild(this.getFontSize);\n        this.getSizeDiv.appendChild(this.sizeSubDiv1);\n        this.sizeSubDiv2 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: 'e-de-subcontainer-right',\n        });\n        if (isRtl) {\n            this.sizeSubDiv2.classList.add('e-de-rtl');\n        }\n        var html = locale.getConstant('Underline style');\n        this.underlineElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('select', { id: this.target.id + '_underLine' });\n        this.underlineElement.innerHTML = '<option value=\"None\">' + locale.getConstant('None') + '</option><option value=\"Single\">________</option>';\n        this.sizeSubDiv2.appendChild(this.underlineElement);\n        this.getSizeDiv.appendChild(this.sizeSubDiv2);\n        this.fontSizeText = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_1__.ComboBox({ change: this.fontSizeUpdate, allowCustom: true, showClearButton: false, enableRtl: isRtl, floatLabelType: 'Always', placeholder: sizeLabel, htmlAttributes: { 'aria-labelledby': sizeLabel } });\n        this.fontSizeText.appendTo(this.getFontSize);\n        this.underlineDrop = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_1__.DropDownList({ change: this.underlineUpdate, enableRtl: isRtl, floatLabelType: 'Always', placeholder: html, htmlAttributes: { 'aria-labelledby': html } });\n        this.underlineDrop.appendTo(this.underlineElement);\n        return this.getSizeDiv;\n    };\n    FontDialog.prototype.getFontDiv = function (locale, isRtl) {\n        var id = this.documentHelper.owner.containerId;\n        this.fontDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-container-row' });\n        this.fontSubDiv1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-subcontainer-left' });\n        var fontLabel = locale.getConstant('Font');\n        this.fontNameValues = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('select', { id: this.target.id + '_fontName' });\n        var fontValues = this.documentHelper.owner.documentEditorSettings.fontFamilies;\n        for (var i = 0; i < fontValues.length; i++) {\n            this.fontNameValues.innerHTML += '<option>' + fontValues[i] + '</option>';\n        }\n        this.fontSubDiv1.appendChild(this.fontNameValues);\n        this.fontDiv.appendChild(this.fontSubDiv1);\n        this.fontSubDiv2 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-subcontainer-right' });\n        if (isRtl) {\n            this.fontSubDiv2.classList.add('e-de-rtl');\n        }\n        var fontStyleLabel = locale.getConstant('Font style');\n        this.fontStyleValues = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('select', { id: this.target.id + '_fontStyle' });\n        this.fontStyleValues.innerHTML = '<option value=\"Regular\">' +\n            locale.getConstant('Regular') + '</option><option value=\"Bold\">' + locale.getConstant('Bold') + '</option><option value=\"Italic\">' +\n            locale.getConstant('Italic') + '</option><option value=\"BoldItalic\">' + locale.getConstant('Bold') + locale.getConstant('Italic') + '</option>';\n        this.fontSubDiv2.appendChild(this.fontStyleValues);\n        this.fontDiv.appendChild(this.fontSubDiv2);\n        this.fontNameList = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_1__.ComboBox({ change: this.fontFamilyUpdate, enableRtl: isRtl, floatLabelType: 'Always', placeholder: fontLabel });\n        this.fontNameList.showClearButton = false;\n        this.fontNameList.appendTo(this.fontNameValues);\n        this.fontStyleText = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_1__.DropDownList({ change: this.fontStyleUpdate, enableRtl: isRtl, floatLabelType: 'Always', placeholder: fontStyleLabel });\n        this.fontStyleText.appendTo(this.fontStyleValues);\n        return this.fontDiv;\n    };\n    /**\n     * @param characterFormat\n     * @private\n     */\n    FontDialog.prototype.showFontDialog = function (characterFormat, isListDialog) {\n        if (characterFormat) {\n            this.characterFormat = characterFormat;\n        }\n        this.isListDialog = isListDialog;\n        var locale = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', this.documentHelper.owner.defaultLocale);\n        locale.setLocale(this.documentHelper.owner.locale);\n        if (!this.target) {\n            this.initFontDialog(locale, this.documentHelper.owner.enableRtl);\n        }\n        this.documentHelper.dialog.header = locale.getConstant('Font');\n        this.documentHelper.dialog.width = 'auto';\n        this.documentHelper.dialog.height = 'auto';\n        this.documentHelper.dialog.content = this.target;\n        this.documentHelper.dialog.beforeOpen = this.loadFontDialog;\n        this.documentHelper.dialog.close = this.closeFontDialog;\n        this.documentHelper.dialog.buttons = [{\n                click: this.onInsertFontFormat,\n                buttonModel: { content: locale.getConstant('Ok'), cssClass: 'e-flat e-font-okay', isPrimary: true }\n            },\n            {\n                click: this.onCancelButtonClick,\n                buttonModel: { content: locale.getConstant('Cancel'), cssClass: 'e-flat e-font-cancel' }\n            }];\n        this.documentHelper.dialog.dataBind();\n        this.documentHelper.dialog.show();\n    };\n    /**\n     * @private\n     * @param {Selection} selection Specifies the selection\n     * @param {WCharacterFormat} format Specifies the character format\n     * @returns {void}\n     */\n    FontDialog.prototype.onCharacterFormat = function (selection, format) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(selection) && selection.checkContentControlLocked(true)) {\n            return;\n        }\n        this.documentHelper.owner.editorModule.initHistory('CharacterFormat');\n        if (selection.isEmpty) {\n            if (selection.start.offset === selection.getParagraphLength(selection.start.paragraph)) {\n                this.documentHelper.owner.editorModule.applyCharFormatValueInternal(selection, selection.start.paragraph.characterFormat, undefined, format);\n                this.documentHelper.owner.editorModule.reLayout(selection);\n            }\n            this.documentHelper.updateFocus();\n            return;\n        }\n        else {\n            //Iterate and update formating.\n            this.documentHelper.owner.editorModule.setOffsetValue(this.documentHelper.selection);\n            this.documentHelper.owner.editorModule.updateSelectionCharacterFormatting('CharacterFormat', format, false);\n        }\n    };\n    FontDialog.prototype.enableCheckBoxProperty = function (args) {\n        if (this.strikethroughBox.checked && this.doublestrikethrough.checked) {\n            this.strikethroughBox.checked = false;\n            this.doublestrikethrough.checked = false;\n            if (args.event.currentTarget.innerText === this.target.id + 'Double strikethrough') {\n                this.doublestrikethrough.checked = true;\n            }\n            else {\n                this.strikethroughBox.checked = true;\n            }\n        }\n        if (this.superscript.checked && this.subscript.checked) {\n            this.subscript.checked = false;\n            this.superscript.checked = false;\n            if (args.event.currentTarget.innerText === this.target.id + 'Subscript') {\n                this.subscript.checked = true;\n            }\n            else {\n                this.superscript.checked = true;\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    FontDialog.prototype.unWireEventsAndBindings = function () {\n        this.fontNameList.value = '';\n        this.fontSizeText.value = '';\n        this.fontStyleText.value = '';\n        this.strikethroughBox.checked = false;\n        this.doublestrikethrough.checked = false;\n        this.superscript.checked = false;\n        this.subscript.checked = false;\n        this.allcaps.checked = false;\n        this.bold = undefined;\n        this.italic = undefined;\n        this.underline = undefined;\n        this.strikethrough = undefined;\n        this.baselineAlignment = undefined;\n        this.fontColor = undefined;\n        this.fontSize = undefined;\n        this.fontFamily = undefined;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    FontDialog.prototype.destroy = function () {\n        this.documentHelper = undefined;\n        if (this.characterFormat) {\n            this.characterFormat.destroy();\n            this.characterFormat = undefined;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.target)) {\n            if (this.target.parentElement) {\n                this.target.parentElement.removeChild(this.target);\n            }\n            for (var m = 0; m < this.target.childNodes.length; m++) {\n                this.target.removeChild(this.target.childNodes[m]);\n                m--;\n            }\n            this.target = undefined;\n        }\n        this.removeElements();\n        if (this.fontNameList) {\n            this.fontNameList.destroy();\n        }\n        this.fontNameList = undefined;\n        if (this.fontStyleText) {\n            this.fontStyleText.destroy();\n        }\n        this.fontStyleText = undefined;\n        if (this.fontSizeText) {\n            this.fontSizeText.destroy();\n        }\n        this.fontSizeText = undefined;\n        if (this.colorPicker) {\n            this.colorPicker.destroy();\n        }\n        this.colorPicker = undefined;\n        if (this.underlineDrop) {\n            this.underlineDrop.destroy();\n        }\n        this.underlineDrop = undefined;\n        if (this.strikethroughBox) {\n            this.strikethroughBox.destroy();\n        }\n        this.strikethroughBox = undefined;\n        if (this.doublestrikethrough) {\n            this.doublestrikethrough.destroy();\n        }\n        this.doublestrikethrough = undefined;\n        if (this.superscript) {\n            this.superscript.destroy();\n        }\n        this.superscript = undefined;\n        if (this.subscript) {\n            this.subscript.destroy();\n        }\n        this.subscript = undefined;\n        if (this.allcaps) {\n            this.allcaps.destroy();\n        }\n        this.allcaps = undefined;\n    };\n    FontDialog.prototype.removeElements = function () {\n        if (this.effectLabel) {\n            this.effectLabel.remove();\n            this.effectLabel = undefined;\n        }\n        if (this.strikeThroughElement) {\n            this.strikeThroughElement.remove();\n            this.strikeThroughElement = undefined;\n        }\n        if (this.superScriptElement) {\n            this.superScriptElement.remove();\n            this.superScriptElement = undefined;\n        }\n        if (this.subScriptElement) {\n            this.subScriptElement.remove();\n            this.subScriptElement = undefined;\n        }\n        if (this.doubleStrikeThroughElement) {\n            this.doubleStrikeThroughElement.remove();\n            this.doubleStrikeThroughElement = undefined;\n        }\n        if (this.allCapsElement) {\n            this.allCapsElement.remove();\n            this.allCapsElement = undefined;\n        }\n        if (this.fontEffectSubDiv1) {\n            this.fontEffectSubDiv1.remove();\n            this.fontEffectSubDiv1 = undefined;\n        }\n        if (this.fontDiv) {\n            this.fontDiv.remove();\n            this.fontDiv = undefined;\n        }\n        if (this.colorDiv) {\n            this.colorDiv.remove();\n            this.colorDiv = undefined;\n        }\n        if (this.fontColorLabel) {\n            this.fontColorLabel.remove();\n            this.fontColorLabel = undefined;\n        }\n        if (this.fontColorElement) {\n            this.fontColorElement.remove();\n            this.fontColorElement = undefined;\n        }\n        if (this.fontEffectsDiv) {\n            this.fontEffectsDiv.remove();\n            this.fontEffectsDiv = undefined;\n        }\n        if (this.effectsProperties) {\n            this.effectsProperties.remove();\n            this.effectsProperties = undefined;\n        }\n        if (this.fontEffectSubDiv2) {\n            this.fontEffectSubDiv2.remove();\n            this.fontEffectSubDiv2 = undefined;\n        }\n        if (this.checkBoxDiv) {\n            this.checkBoxDiv.remove();\n            this.checkBoxDiv = undefined;\n        }\n        if (this.fontEffectSubDiv3) {\n            this.fontEffectSubDiv3.remove();\n            this.fontEffectSubDiv3 = undefined;\n        }\n        if (this.getSizeDiv) {\n            this.getSizeDiv.remove();\n            this.getSizeDiv = undefined;\n        }\n        if (this.sizeSubDiv1) {\n            this.sizeSubDiv1.remove();\n            this.sizeSubDiv1 = undefined;\n        }\n        if (this.sizeSubDiv2) {\n            this.sizeSubDiv2.remove();\n            this.sizeSubDiv2 = undefined;\n        }\n        if (this.getFontSize) {\n            this.getFontSize.remove();\n            this.getFontSize = undefined;\n        }\n        if (this.underlineElement) {\n            this.underlineElement.remove();\n            this.underlineElement = undefined;\n        }\n        if (this.fontNameValues) {\n            this.fontNameValues.remove();\n            this.fontNameValues = undefined;\n        }\n        if (this.fontSubDiv2) {\n            this.fontSubDiv2.remove();\n            this.fontSubDiv2 = undefined;\n        }\n        if (this.fontStyleValues) {\n            this.fontStyleValues.remove();\n            this.fontStyleValues = undefined;\n        }\n        if (this.fontSubDiv1) {\n            this.fontSubDiv1.remove();\n            this.fontSubDiv1 = undefined;\n        }\n    };\n    return FontDialog;\n}());\n\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/font-dialog.js?");

/***/ })

}]);