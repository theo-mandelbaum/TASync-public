"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-schedule_src_schedule_actions_keyboard_js-95fbb6a6"],{

/***/ "./node_modules/@syncfusion/ej2-schedule/src/schedule/actions/keyboard.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-schedule/src/schedule/actions/keyboard.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyboardInteraction: () => (/* binding */ KeyboardInteraction)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/constant */ \"./node_modules/@syncfusion/ej2-schedule/src/schedule/base/constant.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/util */ \"./node_modules/@syncfusion/ej2-schedule/src/schedule/base/util.js\");\n/* harmony import */ var _base_css_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/css-constant */ \"./node_modules/@syncfusion/ej2-schedule/src/schedule/base/css-constant.js\");\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n\n\n\n\n\n/**\n * Keyboard interaction\n */\nvar KeyboardInteraction = /** @class */ (function () {\n    function KeyboardInteraction(parent) {\n        this.selectedCells = [];\n        this.isCutContentPasted = false;\n        this.isCutAction = false;\n        this.keyConfigs = {\n            downArrow: 'downarrow',\n            upArrow: 'uparrow',\n            rightArrow: 'rightarrow',\n            leftArrow: 'leftarrow',\n            shiftDownArrow: 'shift+downarrow',\n            shiftUpArrow: 'shift+uparrow',\n            shiftRightArrow: 'shift+rightarrow',\n            shiftLeftArrow: 'shift+leftarrow',\n            ctrlLeftArrow: 'ctrl+leftarrow',\n            ctrlRightArrow: 'ctrl+rightarrow',\n            altOne: 'alt+1',\n            altTwo: 'alt+2',\n            altThree: 'alt+3',\n            altFour: 'alt+4',\n            altFive: 'alt+5',\n            altSix: 'alt+6',\n            altSeven: 'alt+7',\n            altEight: 'alt+8',\n            altNine: 'alt+9',\n            enter: 'enter',\n            escape: 'escape',\n            delete: 'delete',\n            backspace: 'backspace',\n            home: 'home',\n            pageUp: 'pageup',\n            pageDown: 'pagedown',\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            ctrlShiftLeftArrow: 'ctrl+shift+leftarrow',\n            ctrlShiftRightArrow: 'ctrl+shift+rightarrow',\n            shiftAltY: 'shift+alt+y',\n            shiftAltN: 'shift+alt+n',\n            cut: 'ctrl+x',\n            copy: 'ctrl+c',\n            cmdCut: 'cmd+x',\n            cmdCopy: 'cmd+c'\n        };\n        this.parent = parent;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.keyboardModule = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        this.addEventListener();\n        this.createClipboardElement();\n    }\n    KeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'downArrow':\n            case 'shiftDownArrow':\n                this.processDown(e, e.shiftKey);\n                break;\n            case 'upArrow':\n            case 'shiftUpArrow':\n                this.processUp(e, e.shiftKey);\n                break;\n            case 'leftArrow':\n            case 'shiftLeftArrow':\n                this.processLeft(e, e.shiftKey);\n                break;\n            case 'rightArrow':\n            case 'shiftRightArrow':\n                this.processRight(e, e.shiftKey);\n                break;\n            case 'ctrlLeftArrow':\n                this.parent.changeDate(this.parent.activeView.getNextPreviousDate('Previous'), e);\n                if (this.parent.headerModule) {\n                    this.parent.headerModule.element.querySelector('.e-prev button').focus();\n                }\n                break;\n            case 'ctrlRightArrow':\n                this.parent.changeDate(this.parent.activeView.getNextPreviousDate('Next'), e);\n                if (this.parent.headerModule) {\n                    this.parent.headerModule.element.querySelector('.e-next button').focus();\n                }\n                break;\n            case 'altOne':\n            case 'altTwo':\n            case 'altThree':\n            case 'altFour':\n            case 'altFive':\n            case 'altSix':\n            case 'altSeven':\n            case 'altEight':\n            case 'altNine':\n                this.processViewNavigation(e);\n                break;\n            case 'enter':\n                this.processEnter(e);\n                break;\n            case 'home':\n                this.focusFirstCell();\n                break;\n            case 'tab':\n            case 'shiftTab':\n                this.processTab(e, e.shiftKey);\n                break;\n            case 'delete':\n            case 'backspace':\n                this.processDelete(e);\n                break;\n            case 'ctrlShiftUpArrow':\n            case 'ctrlShiftDownArrow':\n            case 'ctrlShiftLeftArrow':\n            case 'ctrlShiftRightArrow':\n                this.processCtrlShiftNavigationArrows(e);\n                break;\n            case 'escape':\n                this.processEscape(e);\n                break;\n            case 'fTwelve':\n                if (this.parent.allowInline && this.parent.inlineModule) {\n                    e.preventDefault();\n                    this.processFTwelve(e);\n                }\n                break;\n            case 'shiftAltY':\n                this.parent.changeDate(new Date(), e);\n                break;\n            case 'shiftAltN':\n                if (this.parent.currentView === 'Agenda' || this.parent.currentView === 'MonthAgenda' ||\n                    this.parent.currentView === 'Year') {\n                    return;\n                }\n                this.processShiftAltN(e);\n                break;\n            case 'cut':\n            case 'cmdCut':\n                this.processClipboardAction(true, undefined, e);\n                break;\n            case 'copy':\n            case 'cmdCopy':\n                this.processClipboardAction(false, undefined, e);\n                break;\n        }\n    };\n    KeyboardInteraction.prototype.processShiftAltN = function (e) {\n        var selectedCells = this.parent.getSelectedCells();\n        var target = e.target;\n        var cellData = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, null, true);\n        if (selectedCells.length > 0 && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS)\n            || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_CELLS_CLASS) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.HEADER_CELLS_CLASS))) {\n            cellData = this.getSelectedElements(target);\n        }\n        else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.activeEventData.event)) {\n            var event_1 = this.parent.activeEventData.event;\n            cellData.startTime = event_1.StartTime;\n            cellData.endTime = event_1.EndTime;\n            cellData.isAllDay = event_1.IsAllDay;\n        }\n        else {\n            var workHour = this.parent.getStartEndTime(this.parent.workHours.start);\n            var slotInterval = this.parent.activeViewOptions.timeScale.interval /\n                this.parent.activeViewOptions.timeScale.slotCount;\n            cellData.startTime = new Date(this.parent.selectedDate);\n            cellData.startTime.setHours(workHour.getHours(), workHour.getMinutes(), 0, 0);\n            cellData.endTime = new Date(cellData.startTime.getTime() + slotInterval * 60000);\n        }\n        var args = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(cellData, { cancel: false, event: e });\n        if (args != null) {\n            this.parent.eventWindow.openEditor(args, 'Add');\n        }\n    };\n    KeyboardInteraction.prototype.processFTwelve = function (e) {\n        var target = e.target;\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS) || target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_CELLS_CLASS)) {\n            this.parent.activeCellsData = this.getSelectedElements(target);\n            var args = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(this.parent.activeCellsData, { cancel: false, event: e });\n            var inlineArgs = {\n                element: args.element,\n                groupIndex: args.groupIndex, type: 'Cell'\n            };\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.inlineClick, inlineArgs);\n        }\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS)) {\n            target.click();\n            return;\n        }\n    };\n    KeyboardInteraction.prototype.addEventListener = function () {\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.cellMouseDown, this.onCellMouseDown, this);\n        if (this.parent.allowClipboard) {\n            this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.documentPaste, this.pasteHandler, this);\n        }\n    };\n    KeyboardInteraction.prototype.removeEventListener = function () {\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.cellMouseDown, this.onCellMouseDown);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.documentPaste, this.pasteHandler);\n    };\n    KeyboardInteraction.prototype.onCellMouseDown = function (e) {\n        if (e.event.shiftKey) {\n            return;\n        }\n        this.initialTarget = this.getClosestCell(e.event);\n        if (this.parent.activeViewOptions.readonly || this.parent.currentView === 'MonthAgenda' || !this.initialTarget) {\n            return;\n        }\n        if (e.event.target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS) && e.event.which !== 3) {\n            this.parent.removeSelectedClass();\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.parent.getContentTable(), 'mousemove', this.onMouseSelection, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.parent.getContentTable(), 'mouseup mouseleave', this.onMoveUp, this);\n        }\n        if (e.event.target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_CELLS_CLASS) && e.event.which !== 3) {\n            this.parent.removeSelectedClass();\n            var allDayRow = this.parent.getAllDayRow();\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(allDayRow, 'mousemove', this.onMouseSelection, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(allDayRow, 'mouseup mouseleave', this.onMoveUp, this);\n        }\n    };\n    KeyboardInteraction.prototype.onMouseSelection = function (e) {\n        var appointments = [].slice.call(this.parent.element.querySelectorAll('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS));\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(appointments, 'e-allow-select');\n        var selectionEdges = this.parent.boundaryValidation(e.pageY, e.pageX);\n        if (selectionEdges.bottom || selectionEdges.top || selectionEdges.left || selectionEdges.right) {\n            var parent_1 = this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.CONTENT_WRAP_CLASS);\n            var yInBounds = parent_1.offsetHeight <= parent_1.scrollHeight && parent_1.scrollTop >= 0 &&\n                parent_1.scrollTop + parent_1.offsetHeight <= parent_1.scrollHeight;\n            var xInBounds = parent_1.offsetWidth <= parent_1.scrollWidth && parent_1.scrollLeft >= 0 &&\n                parent_1.scrollLeft + parent_1.offsetWidth <= parent_1.scrollWidth;\n            if (yInBounds && (selectionEdges.top || selectionEdges.bottom)) {\n                parent_1.scrollTop += selectionEdges.top ? -e.target.offsetHeight : e.target.offsetHeight;\n            }\n            if (xInBounds && (selectionEdges.left || selectionEdges.right)) {\n                parent_1.scrollLeft += selectionEdges.left ? -e.target.offsetWidth : e.target.offsetWidth;\n            }\n        }\n        var target = this.getClosestCell(e);\n        if (target) {\n            this.selectCells(true, target);\n        }\n    };\n    KeyboardInteraction.prototype.getClosestCell = function (e) {\n        return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS + ',.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_CELLS_CLASS);\n    };\n    KeyboardInteraction.prototype.onMoveUp = function (e) {\n        var _this = this;\n        var appointments = [].slice.call(this.parent.element.querySelectorAll('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS));\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(appointments, 'e-allow-select');\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.getContentTable(), 'mousemove', this.onMouseSelection);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.getContentTable(), 'mouseup mouseleave', this.onMoveUp);\n        if (e.target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_CELLS_CLASS)) {\n            var allDayRow = this.parent.getAllDayRow();\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(allDayRow, 'mousemove', this.onMouseSelection);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(allDayRow, 'mouseup mouseleave', this.onMoveUp);\n        }\n        if (this.isPreventAction(e)) {\n            return;\n        }\n        var queryStr = '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS + ',.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_CELLS_CLASS + ',.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.HEADER_CELLS_CLASS;\n        var target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, queryStr);\n        var selectedCells = this.parent.getSelectedCells();\n        if (selectedCells.length > 0 && selectedCells.indexOf(target) === -1) {\n            target = selectedCells[selectedCells.length - 1];\n        }\n        if (this.parent.currentView === 'TimelineYear' && target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS)) {\n            return;\n        }\n        this.parent.activeCellsData = this.getSelectedElements(target);\n        var cellData = {};\n        if (this.parent.eventWindow) {\n            this.parent.eventWindow.convertToEventData(this.parent.activeCellsData, cellData);\n        }\n        var args = {\n            data: cellData, element: this.parent.activeCellsData.element, event: e,\n            requestType: _base_constant__WEBPACK_IMPORTED_MODULE_1__.cellSelect, showQuickPopup: false\n        };\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.select, args, function (selectArgs) {\n            var isPopupShow = selectArgs.showQuickPopup || _this.parent.quickInfoOnSelectionEnd;\n            if (isPopupShow && selectedCells.length > 1) {\n                var cellArgs = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(_this.parent.activeCellsData, { cancel: false, event: e, name: 'cellClick' });\n                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.cellClick, cellArgs);\n            }\n        });\n    };\n    KeyboardInteraction.prototype.processEnter = function (e) {\n        if ((this.parent.activeViewOptions.readonly && !e.target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS))\n            || this.isPreventAction(e)) {\n            return;\n        }\n        if (this.parent.currentView === 'TimelineYear' && e.target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS)) {\n            return;\n        }\n        var target = e.target;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.POPUP_WRAPPER_CLASS)) {\n            if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.QUICK_POPUP_EVENT_DETAILS_CLASS) ||\n                target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.EVENT_CREATE_CLASS) ||\n                target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.EDIT_EVENT_CLASS) ||\n                target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.DELETE_EVENT_CLASS) ||\n                target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.CLOSE_CLASS)) {\n                target.click();\n                e.preventDefault();\n            }\n            else if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.SUBJECT_CLASS)) {\n                this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.EVENT_CREATE_CLASS).click();\n                e.preventDefault();\n            }\n            return;\n        }\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.RESOURCE_CELLS_CLASS) && target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.RESOURCE_PARENT_CLASS)) {\n            var resourceIcon = target.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.RESOURCE_TREE_ICON_CLASS);\n            if (resourceIcon) {\n                resourceIcon.click();\n            }\n            return;\n        }\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS) || target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_CELLS_CLASS)) {\n            this.parent.activeCellsData = this.getSelectedElements(target);\n            var args = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(this.parent.activeCellsData, { cancel: false, event: e });\n            if (this.parent.allowInline) {\n                var inlineArgs = {\n                    element: args.element,\n                    groupIndex: args.groupIndex, type: 'Cell'\n                };\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.inlineClick, inlineArgs);\n            }\n            else {\n                if (this.parent.currentView === 'Year') {\n                    target.click();\n                }\n                else {\n                    this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.cellClick, args);\n                }\n            }\n            return;\n        }\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.INLINE_SUBJECT_CLASS) && this.parent.inlineModule) {\n            this.parent.inlineModule.inlineCrudActions(target);\n            return;\n        }\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS) || target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.MORE_EVENT_CLOSE_CLASS) ||\n            target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_APPOINTMENT_SECTION_CLASS) || target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.MORE_INDICATOR_CLASS)) {\n            target.click();\n            return;\n        }\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.MORE_EVENT_HEADER_DATE_CLASS)) {\n            this.parent.setProperties({ selectedDate: this.parent.getDateFromElement(target) }, true);\n            this.parent.changeView(this.parent.getNavigateView(), e);\n            this.processEscape(e);\n            return;\n        }\n    };\n    KeyboardInteraction.prototype.getSelectedElements = function (target) {\n        var cellDetails;\n        if (this.selectedCells.length > 1 && target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.SELECTED_CELL_CLASS)) {\n            var start = this.parent.getCellDetails(this.selectedCells[0]);\n            var end = this.parent.getCellDetails(this.selectedCells.slice(-1)[0]);\n            start.endTime = end.endTime;\n            start.element = target;\n            cellDetails = start;\n        }\n        else {\n            cellDetails = this.parent.getCellDetails(target);\n        }\n        return cellDetails;\n    };\n    KeyboardInteraction.prototype.getCells = function (isInverseTable, start, end) {\n        var tableEle = this.parent.getContentTable();\n        var isTimelineYear = this.parent.currentView === 'TimelineYear';\n        var query = isTimelineYear && !isInverseTable ? '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS + ':not(.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS + ')' : 'td';\n        var cells = [].slice.call(tableEle.querySelectorAll(query));\n        var maxRow = tableEle.rows.length;\n        var maxColumn = tableEle.rows[0].cells.length;\n        if (start && start.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_CELLS_CLASS)) {\n            var allDayRow = this.parent.getAllDayRow();\n            cells = [].slice.call(allDayRow.cells);\n            maxRow = 1;\n            maxColumn = allDayRow.cells.length;\n        }\n        var startIndex = cells.indexOf(start);\n        var endIndex = cells.indexOf(end);\n        var inverseCells = [];\n        if (isInverseTable) {\n            for (var i = 0; i < maxColumn; i++) {\n                for (var j = 0; j < maxRow; j++) {\n                    var cell = cells[maxColumn * j + i];\n                    if (isTimelineYear && cell.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS)) {\n                        continue;\n                    }\n                    inverseCells.push(cell);\n                }\n            }\n            startIndex = inverseCells.indexOf(start);\n            endIndex = inverseCells.indexOf(end);\n        }\n        if (startIndex > endIndex) {\n            var temp = startIndex;\n            startIndex = endIndex;\n            endIndex = temp;\n        }\n        var sCells = isInverseTable ? inverseCells : cells;\n        return sCells.slice(startIndex, endIndex + 1);\n    };\n    KeyboardInteraction.prototype.focusFirstCell = function () {\n        if (this.parent.currentView === 'Agenda') {\n            var focusCell = this.parent.getContentTable().querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.AGENDA_CELLS_CLASS);\n            focusCell.setAttribute('tabindex', '0');\n            focusCell.focus();\n            return;\n        }\n        this.parent.eventBase.removeSelectedAppointmentClass();\n        if (this.parent.activeView.isTimelineView() && this.parent.currentView !== 'TimelineYear') {\n            var cell = this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.CONTENT_TABLE_CLASS +\n                ' tr:not(.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.HIDDEN_CLASS + ') .' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS + ':not(.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.RESOURCE_GROUP_CELLS_CLASS + ')');\n            this.selectCells(false, cell);\n        }\n        else if (this.parent.currentView.indexOf('Year') > -1) {\n            var query = '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS + ':not(.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS + ')' + ':not(.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.RESOURCE_GROUP_CELLS_CLASS + ')';\n            var isVerticalYear = this.parent.currentView === 'TimelineYear' && this.parent.activeViewOptions.orientation === 'Vertical';\n            query += isVerticalYear ? '[data-date=\"' + this.parent.activeView.startDate().getTime() + '\"]' : '';\n            this.selectCells(false, this.parent.element.querySelector(query));\n        }\n        else {\n            this.selectCells(false, this.parent.getWorkCellElements()[0]);\n        }\n    };\n    KeyboardInteraction.prototype.isInverseTableSelect = function () {\n        return this.parent.activeView.isInverseTableSelect;\n    };\n    /**\n     * Internal method to select cells\n     *\n     * @param {boolean} isMultiple Accepts to select multiple cells or not\n     * @param {HTMLTableCellElement} targetCell Accepts the target cells\n     * @returns {void}\n     * @private\n     */\n    KeyboardInteraction.prototype.selectCells = function (isMultiple, targetCell) {\n        var _this = this;\n        this.parent.removeSelectedClass();\n        var target = (targetCell instanceof Array) ? targetCell.slice(-1)[0] : targetCell;\n        if (isMultiple) {\n            var initialId_1;\n            var views_1 = ['Day', 'Week', 'WorkWeek', 'TimelineDay', 'TimelineWeek', 'TimelineWorkWeek', 'TimelineMonth', 'TimelineYear'];\n            var args = { element: targetCell, requestType: 'mousemove', allowMultipleRow: true };\n            this.parent.inlineModule.removeInlineAppointmentElement();\n            this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.select, args, function (selectArgs) {\n                var allowMultipleRow = (!selectArgs.allowMultipleRow) || (!_this.parent.allowMultiRowSelection);\n                if (allowMultipleRow) {\n                    var isTimelineYear = _this.parent.currentView === 'TimelineYear';\n                    if (isTimelineYear && _this.parent.activeViewOptions.orientation === 'Horizontal' || _this.parent.currentView === 'Month') {\n                        var isGroupYear = isTimelineYear && _this.parent.activeViewOptions.group.resources.length > 0;\n                        target = isGroupYear ? _this.initialTarget :\n                            _this.initialTarget.parentElement.children[target.cellIndex];\n                    }\n                    else if (views_1.indexOf(_this.parent.currentView) > -1) {\n                        target = target.parentElement.children[_this.initialTarget.cellIndex];\n                    }\n                }\n                var selectedCells = _this.getCells(_this.isInverseTableSelect(), _this.initialTarget, target);\n                if (_this.parent.activeViewOptions.group.resources.length > 0) {\n                    initialId_1 = _this.initialTarget.getAttribute('data-group-index');\n                    var resourceSelectedCells = [];\n                    for (var _i = 0, selectedCells_1 = selectedCells; _i < selectedCells_1.length; _i++) {\n                        var cell = selectedCells_1[_i];\n                        if (cell.getAttribute('data-group-index') === initialId_1) {\n                            resourceSelectedCells.push(cell);\n                        }\n                    }\n                    selectedCells = resourceSelectedCells;\n                }\n                if (!_this.parent.allowMultiCellSelection) {\n                    selectedCells = [_this.initialTarget];\n                }\n                _this.selectedCells = selectedCells;\n                if (selectedCells.length > 2 && !target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_CELLS_CLASS)) {\n                    var allDayCells = _this.getAllDayCells(selectedCells);\n                    if (_this.parent.activeViewOptions.group.resources.length > 0) {\n                        var resourceAllDayCells = [];\n                        for (var _a = 0, allDayCells_1 = allDayCells; _a < allDayCells_1.length; _a++) {\n                            var cell = allDayCells_1[_a];\n                            if (cell.getAttribute('data-group-index') === initialId_1) {\n                                resourceAllDayCells.push(cell);\n                            }\n                        }\n                        allDayCells = resourceAllDayCells;\n                    }\n                    selectedCells = selectedCells.concat(allDayCells);\n                }\n                if ((target.getAttribute('data-group-index') !== initialId_1) && _this.parent.activeViewOptions.group.resources.length > 0) {\n                    target = _this.selectedCells[_this.selectedCells.length - 1];\n                }\n                _this.parent.addSelectedClass(selectedCells, target);\n            });\n        }\n        else {\n            var args = {\n                element: target, requestType: _base_constant__WEBPACK_IMPORTED_MODULE_1__.cellSelect\n            };\n            // activeCellsData is not reset on schedule property changed(group properties)\n            // const cellData: Record<string, any> = {};\n            // const cellDetails: CellClickEventArgs = this.parent.getCellDetails(target);\n            // if (this.parent.eventWindow && cellDetails) {\n            //     if (this.parent.activeCellsData.element !== cellDetails.element) {\n            //         this.parent.activeCellsData = cellDetails;\n            //     }\n            //     this.parent.eventWindow.convertToEventData(this.parent.activeCellsData as unknown as Record<string, any>, cellData);\n            //     args.data = cellData;\n            // }\n            this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.select, args, function () {\n                _this.initialTarget = target;\n                _this.selectedCells = [target];\n                _this.parent.addSelectedClass([target], target);\n            });\n        }\n    };\n    KeyboardInteraction.prototype.selectAppointment = function (isReverse, target) {\n        var appointments = this.getAppointmentElements();\n        if (appointments.length < 0) {\n            return;\n        }\n        this.parent.eventBase.removeSelectedAppointmentClass();\n        var nextAppEle;\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS)) {\n            var targetIndex = appointments.indexOf(target);\n            nextAppEle = appointments[(isReverse ? targetIndex - 1 : targetIndex + 1)];\n        }\n        else {\n            nextAppEle = isReverse ? appointments[appointments.length - 1] : appointments[0];\n        }\n        if (nextAppEle) {\n            this.parent.eventBase.addSelectedAppointments([nextAppEle], true);\n            nextAppEle.focus();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([nextAppEle], _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.AGENDA_SELECTED_CELL);\n        }\n    };\n    KeyboardInteraction.prototype.selectAppointmentElementFromWorkCell = function (isReverse, target) {\n        var _this = this;\n        this.parent.eventBase.removeSelectedAppointmentClass();\n        this.parent.removeSelectedClass();\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS) || target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_CELLS_CLASS)) {\n            var appointmentElements_1 = this.getUniqueAppointmentElements();\n            var filteredElements_1 = [];\n            var selectedDate_1 = this.parent.getDateFromElement(target).getTime();\n            var selectedSeriesEvents = this.parent.eventsProcessed.filter(function (eventObject) {\n                return (!isReverse ? (eventObject[_this.parent.eventFields.startTime].getTime() >= selectedDate_1) :\n                    (eventObject[_this.parent.eventFields.startTime].getTime() <= selectedDate_1));\n            });\n            selectedSeriesEvents.filter(function (event) {\n                appointmentElements_1.filter(function (element) {\n                    if (JSON.stringify(event.Guid) === JSON.stringify(element.getAttribute('data-guid'))) {\n                        filteredElements_1.push(element);\n                    }\n                });\n            });\n            if (filteredElements_1.length > 0) {\n                var selectedElement = isReverse ? filteredElements_1[filteredElements_1.length - 1] : filteredElements_1[0];\n                var focusElements = this.getAppointmentElementsByGuid(selectedElement.getAttribute('data-guid'));\n                this.parent.eventBase.addSelectedAppointments(focusElements, true);\n                (focusElements[focusElements.length - 1]).focus();\n            }\n        }\n    };\n    KeyboardInteraction.prototype.getAllDayCells = function (cells) {\n        var allDayRow = this.parent.getAllDayRow();\n        if (!allDayRow) {\n            return [];\n        }\n        var startCell = cells[0];\n        var endCell = cells[cells.length - 1];\n        var start = this.parent.getCellDetails(startCell);\n        var end = this.parent.getCellDetails(endCell);\n        if (end.endTime.getTime() - start.startTime.getTime() >= _base_util__WEBPACK_IMPORTED_MODULE_2__.MS_PER_DAY) {\n            var allDayCells = [].slice.call(allDayRow.cells);\n            return allDayCells.slice(startCell.cellIndex, endCell.cellIndex + 1);\n        }\n        return [];\n    };\n    KeyboardInteraction.prototype.getAppointmentElements = function () {\n        return [].slice.call(this.parent.element.querySelectorAll('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS));\n    };\n    KeyboardInteraction.prototype.getAppointmentElementsByGuid = function (guid) {\n        return [].slice.call(this.parent.element.querySelectorAll('div[data-guid=\"' + guid + '\"]'));\n    };\n    KeyboardInteraction.prototype.getUniqueAppointmentElements = function () {\n        var appointments = this.getAppointmentElements();\n        var appointmentElements = [];\n        appointments.map(function (value) { return value.getAttribute('data-guid'); }).filter(function (value, index, self) {\n            if (self.indexOf(value) === index) {\n                appointmentElements.push(appointments[parseInt(index.toString(), 10)]);\n            }\n        });\n        return appointmentElements;\n    };\n    KeyboardInteraction.prototype.getWorkCellFromAppointmentElement = function (target) {\n        var selectedObject = this.parent.eventBase.getEventByGuid(target.getAttribute('data-guid'));\n        return this.parent.eventBase.selectWorkCellByTime([selectedObject]);\n    };\n    KeyboardInteraction.prototype.processViewNavigation = function (e) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.code)) {\n            return;\n        }\n        var index = parseInt(e.code.slice(e.code.length - 1), 10) - 1;\n        if (!isNaN(index) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.views) && index < this.parent.views.length) {\n            var view = this.parent.viewCollections[parseInt(index.toString(), 10)].option;\n            this.parent.changeView(view, e, undefined, index);\n            if (this.parent.headerModule) {\n                this.parent.headerModule.element.querySelector('.e-active-view button').focus();\n            }\n        }\n    };\n    KeyboardInteraction.prototype.isCalendarTarget = function (e) {\n        var keyTarget = e.currentTarget || e.target;\n        if (keyTarget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(keyTarget.querySelector('.e-header-popup.e-popup-open'))) {\n            return true;\n        }\n        return false;\n    };\n    KeyboardInteraction.prototype.cancelUpDownAction = function (isTimelineYear) {\n        var isVerticalYear = isTimelineYear && this.parent.activeViewOptions.orientation === 'Vertical';\n        var isGroup = this.parent.activeViewOptions.group.resources.length > 0;\n        if (isVerticalYear && isGroup || isTimelineYear && this.initialTarget.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS)) {\n            return true;\n        }\n        if (this.parent.activeView.isTimelineView() && !isTimelineYear || this.parent.currentView === 'MonthAgenda') {\n            return true;\n        }\n        return false;\n    };\n    KeyboardInteraction.prototype.processUp = function (e, isMultiple) {\n        var isTimelineYear = this.parent.currentView === 'TimelineYear';\n        if (isMultiple && this.cancelUpDownAction(isTimelineYear) || (this.isCalendarTarget(e))) {\n            return;\n        }\n        var target = (e.target);\n        var selectedElements = this.parent.getSelectedCells();\n        var selectedEventElements = this.parent.eventBase.getSelectedAppointments();\n        var moreEventWrapper = this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.MORE_POPUP_WRAPPER_CLASS);\n        var quickPopupWrapper = this.getQuickPopupElement();\n        if (selectedElements.length > 0 && !e.target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS)) {\n            target = selectedElements[selectedElements.length - 1];\n        }\n        if (selectedEventElements.length > 0 && !moreEventWrapper.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.POPUP_OPEN) &&\n            !quickPopupWrapper.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.POPUP_OPEN) &&\n            ['Day', 'Week', 'WorkWeek', 'Month'].indexOf(this.parent.currentView) !== -1) {\n            target = this.getWorkCellFromAppointmentElement(selectedEventElements[selectedEventElements.length - 1]);\n            this.parent.eventBase.removeSelectedAppointmentClass();\n        }\n        if (!target) {\n            return;\n        }\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS) && !this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.POPUP_OPEN)) {\n            var tableRows = this.parent.getTableRows();\n            var curRowIndex = tableRows.indexOf(target.parentElement);\n            var targetCell = void 0;\n            if (isTimelineYear && isMultiple && this.parent.activeViewOptions.group.resources.length === 0) {\n                targetCell = this.isInverseTableSelect() ? this.getVerticalUpDownCell(tableRows, target, curRowIndex, true) :\n                    this.getHorizontalUpDownCell(tableRows, target, curRowIndex, true);\n            }\n            if ((curRowIndex > 0 || targetCell) && curRowIndex < tableRows.length) {\n                targetCell = targetCell ? targetCell : (tableRows[curRowIndex - 1]).cells[target.cellIndex];\n                if (this.parent.currentView === 'Year' && targetCell.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS)) {\n                    if (this.parent.activeView.getStartDate().getTime() < +targetCell.getAttribute('data-date')) {\n                        targetCell = this.getYearUpDownCell(tableRows, curRowIndex - 1, target.cellIndex, true);\n                    }\n                    else {\n                        return;\n                    }\n                }\n                e.preventDefault();\n                this.selectCells(isMultiple, targetCell);\n            }\n        }\n        else if (this.parent.currentView === 'Agenda' || this.parent.currentView === 'MonthAgenda') {\n            this.selectAppointment(true, target);\n        }\n    };\n    KeyboardInteraction.prototype.processDown = function (e, isMultiple) {\n        var isTimelineYear = this.parent.currentView === 'TimelineYear';\n        if (isMultiple && this.cancelUpDownAction(isTimelineYear) || (this.isCalendarTarget(e))) {\n            return;\n        }\n        var target = (e.target);\n        var selectedCells = this.parent.getSelectedCells();\n        var selectedElements = this.parent.eventBase.getSelectedAppointments();\n        var moreEventWrapper = this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.MORE_POPUP_WRAPPER_CLASS);\n        var quickPopupWrapper = this.getQuickPopupElement();\n        if (selectedCells.length > 0 && !e.target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS)) {\n            target = selectedCells[selectedCells.length - 1];\n        }\n        if (selectedElements.length > 0 && !moreEventWrapper.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.POPUP_OPEN) &&\n            !quickPopupWrapper.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.POPUP_OPEN) &&\n            ['Day', 'Week', 'WorkWeek', 'Month'].indexOf(this.parent.currentView) !== -1) {\n            target = this.getWorkCellFromAppointmentElement(selectedElements[selectedElements.length - 1]);\n            this.parent.eventBase.removeSelectedAppointmentClass();\n        }\n        var tableRows = this.parent.getTableRows();\n        if (!target) {\n            return;\n        }\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS) && !this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.POPUP_OPEN)) {\n            var curRowIndex = tableRows.indexOf(target.parentElement);\n            var targetCell = void 0;\n            if (isTimelineYear && isMultiple && this.parent.activeViewOptions.group.resources.length === 0) {\n                targetCell = this.isInverseTableSelect() ? this.getVerticalUpDownCell(tableRows, target, curRowIndex, false)\n                    : this.getHorizontalUpDownCell(tableRows, target, curRowIndex, false);\n            }\n            if (curRowIndex >= 0 && ((curRowIndex < tableRows.length - 1) || targetCell)) {\n                targetCell = targetCell ? targetCell : (tableRows[curRowIndex + 1]).cells[target.cellIndex];\n                if (this.parent.currentView === 'Year' && targetCell.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS)) {\n                    if (this.parent.activeView.getEndDate().getTime() > +targetCell.getAttribute('data-date')) {\n                        targetCell = this.getYearUpDownCell(tableRows, curRowIndex + 1, target.cellIndex, false);\n                    }\n                    else {\n                        return;\n                    }\n                }\n                e.preventDefault();\n                this.selectCells(isMultiple, targetCell);\n            }\n        }\n        else if (this.parent.currentView === 'Agenda' || this.parent.currentView === 'MonthAgenda') {\n            this.selectAppointment(false, target);\n        }\n    };\n    KeyboardInteraction.prototype.getYearUpDownCell = function (tableRows, rowIndex, cellIndex, isUp) {\n        while (tableRows[parseInt(rowIndex.toString(), 10)] &&\n            tableRows[parseInt(rowIndex.toString(), 10)].cells[parseInt(cellIndex.toString(), 10)].classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS)) {\n            rowIndex = rowIndex + (isUp ? -1 : 1);\n        }\n        return tableRows[parseInt(rowIndex.toString(), 10)].cells[parseInt(cellIndex.toString(), 10)];\n    };\n    // eslint-disable-next-line max-len\n    KeyboardInteraction.prototype.getHorizontalUpDownCell = function (tableRows, target, curRowIndex, isUp) {\n        var row = tableRows[curRowIndex + (isUp ? -1 : 1)];\n        var cell = row ? row.cells[target.cellIndex] : target;\n        if (cell.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS)) {\n            var workCell = row.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS + ':not(.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS + ')');\n            var date = new Date(+workCell.getAttribute('data-date'));\n            var query = '[data-date=\"' + new Date(date.getFullYear(), date.getMonth() + 1, 0).getTime() + '\"]';\n            cell = cell.cellIndex < workCell.cellIndex ? workCell : row.querySelector(query);\n        }\n        return cell;\n    };\n    // eslint-disable-next-line max-len\n    KeyboardInteraction.prototype.getVerticalUpDownCell = function (tableRows, target, curRowIndex, isUp) {\n        var hasRow = isUp && curRowIndex > 0 || !isUp && curRowIndex < tableRows.length - 1;\n        var targetCell = hasRow ? tableRows[curRowIndex + (isUp ? -1 : 1)].cells[target.cellIndex] : undefined;\n        if (!targetCell || targetCell.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS)) {\n            var column = tableRows[parseInt(curRowIndex.toString(), 10)].cells[target.cellIndex - (isUp ? 1 : -1)];\n            if (column) {\n                var dateAttr = +target.getAttribute('data-date') - (isUp ? _base_util__WEBPACK_IMPORTED_MODULE_2__.MS_PER_DAY : -_base_util__WEBPACK_IMPORTED_MODULE_2__.MS_PER_DAY);\n                return this.parent.getContentTable().querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS + '[data-date=\"' + dateAttr + '\"]');\n            }\n            targetCell = target;\n        }\n        return targetCell;\n    };\n    KeyboardInteraction.prototype.processLeftRight = function (target) {\n        var tableEle = (this.parent.currentView === 'Year' ? target.closest('tbody') : this.parent.getContentTable());\n        var curRowIndex = target.parentNode.sectionRowIndex;\n        var key = {\n            element: tableEle,\n            rowIndex: curRowIndex,\n            columnIndex: target.cellIndex,\n            maxIndex: tableEle.rows[parseInt(curRowIndex.toString(), 10)].cells.length\n        };\n        return key;\n    };\n    KeyboardInteraction.prototype.getQuickPopupElement = function () {\n        return (this.parent.isAdaptive ? document.body : this.parent.element).querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.POPUP_WRAPPER_CLASS);\n    };\n    KeyboardInteraction.prototype.isCancelLeftRightAction = function (e, isMultiple, isTimelineYear) {\n        var prevent = this.parent.currentView === 'MonthAgenda' || isTimelineYear && this.initialTarget.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS);\n        if (this.parent.currentView === 'Agenda' || (isMultiple && prevent)) {\n            return true;\n        }\n        if (this.isPreventAction(e) && isMultiple) {\n            return true;\n        }\n        var moreEventWrapper = this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.MORE_POPUP_WRAPPER_CLASS);\n        var quickPopupWrapper = this.getQuickPopupElement();\n        if (moreEventWrapper.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.POPUP_OPEN) || quickPopupWrapper.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.POPUP_OPEN)) {\n            return true;\n        }\n        return false;\n    };\n    KeyboardInteraction.prototype.processRight = function (e, isMultiple) {\n        var isTimelineYear = this.parent.currentView === 'TimelineYear';\n        if (this.isCancelLeftRightAction(e, isMultiple, isTimelineYear) || (this.isCalendarTarget(e))) {\n            return;\n        }\n        var selectedCells = this.parent.getSelectedCells();\n        var targetCell;\n        var selectedAppointments = this.parent.eventBase.getSelectedAppointments();\n        var target = (e.target);\n        if (selectedCells.length > 0 && !target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS) &&\n            !target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_CELLS_CLASS)) {\n            target = selectedCells[selectedCells.length - 1];\n        }\n        if (selectedAppointments.length > 0) {\n            target = this.getWorkCellFromAppointmentElement(selectedAppointments[selectedAppointments.length - 1]);\n            this.parent.eventBase.removeSelectedAppointmentClass();\n            if (!target) {\n                return;\n            }\n        }\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS) &&\n            (e.target).classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS)) {\n            var key = this.processLeftRight(target);\n            var targetDate = new Date(+target.getAttribute('data-date'));\n            var isMonthEnd = this.parent.currentView === 'Year' && targetDate.getTime() === _base_util__WEBPACK_IMPORTED_MODULE_2__.lastDateOfMonth(targetDate).getTime();\n            if (key.columnIndex >= 0 && key.columnIndex < key.maxIndex - 1 && !isMonthEnd) {\n                targetCell = this.calculateNextPrevDate(target, key.element.rows[key.rowIndex].cells[target.cellIndex + 1], 'right');\n                if (isTimelineYear && isMultiple && targetCell.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS)) {\n                    targetCell = this.getTimelineYearTargetCell(key, target, true);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(targetCell)) {\n                    this.selectCells(isMultiple, targetCell);\n                }\n            }\n            else if (key.columnIndex === key.maxIndex - 1 || isMonthEnd) {\n                if (!this.isInverseTableSelect() && key.rowIndex < key.element.rows.length - 1 && !isMonthEnd) {\n                    targetCell = this.calculateNextPrevDate(target, key.element.rows[key.rowIndex + 1].cells[0], 'right');\n                    var changeTargetCell = isTimelineYear && isMultiple && targetCell.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS);\n                    targetCell = changeTargetCell ? this.getHorizontalLeftRightCell(key, target, true) : targetCell;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(targetCell)) {\n                        this.selectCells(isMultiple, targetCell);\n                    }\n                }\n                else if (!isMultiple) {\n                    if (isMonthEnd && targetDate.getTime() !== this.parent.activeView.getEndDate().getTime()) {\n                        this.selectCells(isMultiple, this.parent.element.querySelector(':not(.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS + ')[data-date=\"' + (targetDate.getTime() + _base_util__WEBPACK_IMPORTED_MODULE_2__.MS_PER_DAY) + '\"]'));\n                        return;\n                    }\n                    var rowIndex = this.isInverseTableSelect() ? key.rowIndex : 0;\n                    this.parent.changeDate(this.parent.activeView.getNextPreviousDate('Next'), e);\n                    var tableEle = this.parent.getContentTable();\n                    var cell = isMonthEnd ? tableEle.rows[parseInt(rowIndex.toString(), 10)].querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS + ':not(.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS + ')')\n                        : tableEle.rows[parseInt(rowIndex.toString(), 10)].cells[0];\n                    this.selectCells(false, cell);\n                }\n            }\n        }\n        else if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_CELLS_CLASS)) {\n            var curColIndex = target.cellIndex;\n            var allDayRow = this.parent.getAllDayRow();\n            var maxColIndex = allDayRow.cells.length;\n            if (curColIndex >= 0 && curColIndex < maxColIndex - 1) {\n                this.selectCells(isMultiple, allDayRow.cells[curColIndex + 1]);\n            }\n            else if (curColIndex === maxColIndex - 1 && !isMultiple) {\n                this.parent.changeDate(this.parent.activeView.getNextPreviousDate('Next'), e);\n                var allDayRow_1 = this.parent.getAllDayRow();\n                this.selectCells(false, allDayRow_1.cells[0]);\n            }\n        }\n    };\n    KeyboardInteraction.prototype.processLeft = function (e, isMultiple) {\n        var isTimelineYear = this.parent.currentView === 'TimelineYear';\n        if (this.isCancelLeftRightAction(e, isMultiple, isTimelineYear) || (this.isCalendarTarget(e))) {\n            return;\n        }\n        var target = (e.target);\n        var selectedCells = this.parent.getSelectedCells();\n        var targetCell;\n        if (selectedCells.length > 0 && !target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS) &&\n            !target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_CELLS_CLASS)) {\n            target = selectedCells[selectedCells.length - 1];\n        }\n        var selectedElements = this.parent.eventBase.getSelectedAppointments();\n        if (selectedElements.length > 0) {\n            target = this.getWorkCellFromAppointmentElement(selectedElements[selectedElements.length - 1]);\n            this.parent.eventBase.removeSelectedAppointmentClass();\n            if (!target) {\n                return;\n            }\n        }\n        if ((e.target).classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS) &&\n            target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS)) {\n            var key = this.processLeftRight(target);\n            var targetDate = new Date(+target.getAttribute('data-date'));\n            var isMonthStart = this.parent.currentView === 'Year' && targetDate.getTime() === _base_util__WEBPACK_IMPORTED_MODULE_2__.firstDateOfMonth(targetDate).getTime();\n            if (key.columnIndex > 0 && key.columnIndex < key.maxIndex && !isMonthStart) {\n                targetCell = this.calculateNextPrevDate(target, key.element.rows[key.rowIndex].cells[target.cellIndex - 1], 'left');\n                if (isTimelineYear && isMultiple && targetCell.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS)) {\n                    targetCell = this.getTimelineYearTargetCell(key, target, false);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(targetCell)) {\n                    this.selectCells(isMultiple, targetCell);\n                }\n            }\n            else if (key.columnIndex === 0 || isMonthStart) {\n                if (!this.isInverseTableSelect() && key.rowIndex > 0) {\n                    targetCell = this.calculateNextPrevDate(target, key.element.rows[key.rowIndex - 1].cells[key.maxIndex - 1], 'left');\n                    var otherMonthCell = isTimelineYear && isMultiple && targetCell.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS);\n                    targetCell = otherMonthCell ? this.getHorizontalLeftRightCell(key, target, false) : targetCell;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(targetCell)) {\n                        this.selectCells(isMultiple, targetCell);\n                    }\n                }\n                else if (!isMultiple) {\n                    if (isMonthStart && targetDate.getTime() !== this.parent.activeView.getStartDate().getTime()) {\n                        this.selectCells(isMultiple, this.parent.element.querySelector('[data-date=\"' + (targetDate.getTime() - _base_util__WEBPACK_IMPORTED_MODULE_2__.MS_PER_DAY) + '\"]'));\n                        return;\n                    }\n                    this.parent.changeDate(this.parent.activeView.getNextPreviousDate('Previous'), e);\n                    var tableEle = this.parent.getContentTable();\n                    var rowIndex = this.isInverseTableSelect() ? key.rowIndex : tableEle.rows.length - 1;\n                    var cell = tableEle.rows[parseInt(rowIndex.toString(), 10)].cells[key.maxIndex - 1];\n                    if (isMonthStart) {\n                        var tbody = this.parent.element.querySelectorAll('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.CONTENT_TABLE_CLASS + ' tbody');\n                        cell = tbody.item(tbody.length - 1).querySelector(':not(.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS + ')[data-date=\"' + this.parent.activeView.getEndDate().getTime() + '\"]');\n                    }\n                    this.selectCells(false, cell);\n                }\n            }\n        }\n        else if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ALLDAY_CELLS_CLASS)) {\n            var curColIndex = target.cellIndex;\n            var allDayRow = this.parent.getAllDayRow();\n            var maxColIndex = allDayRow.cells.length;\n            if (curColIndex > 0 && curColIndex < maxColIndex) {\n                this.selectCells(isMultiple, allDayRow.cells[curColIndex - 1]);\n            }\n            else if (curColIndex === 0 && !isMultiple) {\n                this.parent.changeDate(this.parent.activeView.getNextPreviousDate('Previous'), e);\n                var allDayRow_2 = this.parent.getAllDayRow();\n                this.selectCells(false, allDayRow_2.cells[maxColIndex - 1]);\n            }\n        }\n    };\n    KeyboardInteraction.prototype.getTimelineYearTargetCell = function (key, target, isRight) {\n        return this.isInverseTableSelect() ? this.getVerticalLeftRightCell(target, isRight) :\n            this.getHorizontalLeftRightCell(key, target, isRight);\n    };\n    KeyboardInteraction.prototype.getHorizontalLeftRightCell = function (key, target, isRight) {\n        var row = key.element.rows[target.parentNode.sectionRowIndex + (isRight ? 1 : -1)];\n        if (row) {\n            var query = isRight ? '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS + ':not(.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS + ')'\n                : '[data-date=\"' + ((+target.getAttribute('data-date')) - _base_util__WEBPACK_IMPORTED_MODULE_2__.MS_PER_DAY) + '\"]';\n            return row.querySelector(query);\n        }\n        return target;\n    };\n    KeyboardInteraction.prototype.getVerticalLeftRightCell = function (target, isRight) {\n        var date = new Date(+target.getAttribute('data-date'));\n        var start = new Date(date.getFullYear(), date.getMonth() + (isRight ? 1 : -1), 1);\n        var tableEle = this.parent.getContentTable();\n        var targetCell = tableEle.querySelector('[data-date=\"' + start.getTime() + '\"]');\n        if (targetCell.parentNode.sectionRowIndex > target.parentNode.sectionRowIndex) {\n            return targetCell;\n        }\n        return tableEle.querySelector('[data-date=\"' + new Date(start.getFullYear(), start.getMonth() + 1, 0).getTime() + '\"]');\n    };\n    KeyboardInteraction.prototype.calculateNextPrevDate = function (currentCell, target, type) {\n        var initialId = this.initialTarget.getAttribute('data-group-index');\n        if (this.parent.activeViewOptions.group.resources.length > 0 && this.parent.currentView === 'Month') {\n            if (currentCell && target && target.getAttribute('data-group-index') !== initialId) {\n                var currentDate = this.parent.getDateFromElement(currentCell);\n                var nextPrevDate = (type === 'right') ? new Date(currentDate.setDate(currentDate.getDate() + 1))\n                    : new Date(currentDate.setDate(currentDate.getDate() - 1));\n                target = [].slice.call(this.parent.element.querySelectorAll('td[data-date=\"'\n                    + nextPrevDate.getTime().toString() + '\"]' + '[data-group-index=\"' + initialId + '\"]'))[0];\n            }\n        }\n        return target;\n    };\n    KeyboardInteraction.prototype.getFocusableElements = function (container) {\n        var queryString = 'a[href]:not([tabindex=\"-1\"]),input:not([disabled]):not([tabindex=\"-1\"]),' +\n            'textarea:not([disabled]):not([tabindex=\"-1\"]),button:not([disabled]):not([tabindex=\"-1\"]),' +\n            'select:not([disabled]):not([tabindex=\"-1\"]),[tabindex]:not([tabindex=\"-1\"]),[contentEditable=true]:not([tabindex=\"-1\"])';\n        return [].slice.call(container.querySelectorAll(queryString));\n    };\n    KeyboardInteraction.prototype.processTabOnPopup = function (e, popupElement) {\n        var _this = this;\n        var focusableElements = this.getFocusableElements(popupElement);\n        focusableElements = focusableElements.filter(function (element) {\n            var footerEle = _this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.POPUP_FOOTER_CLASS);\n            if (footerEle && footerEle.offsetParent) {\n                return !(element.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.EDIT_CLASS) || element.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.DELETE_CLASS));\n            }\n            else {\n                return !(element.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.EDIT_EVENT_CLASS) || element.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.DELETE_EVENT_CLASS));\n            }\n        });\n        var firstEle = focusableElements[0];\n        var lastEle = focusableElements[focusableElements.length - 1];\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastEle) && document.activeElement === lastEle && !e.shiftKey) {\n            e.preventDefault();\n            firstEle.focus();\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(firstEle) && document.activeElement === firstEle && e.shiftKey) {\n            e.preventDefault();\n            lastEle.focus();\n        }\n    };\n    KeyboardInteraction.prototype.processTab = function (e, isReverse) {\n        var target = e.target;\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.INLINE_SUBJECT_CLASS) && this.parent.inlineModule) {\n            target = target.closest('.e-appointment');\n            this.parent.inlineModule.inlineCrudActions(e.target);\n        }\n        if (this.parent.currentView === 'TimelineYear' && target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.OTHERMONTH_CLASS)) {\n            if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.SELECTED_CELL_CLASS)) {\n                this.parent.removeSelectedClass();\n            }\n            return;\n        }\n        var popupWrapper = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.POPUP_WRAPPER_CLASS + ',.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.MORE_POPUP_WRAPPER_CLASS);\n        if (popupWrapper && popupWrapper.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.POPUP_OPEN)) {\n            if (popupWrapper.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.MORE_POPUP_WRAPPER_CLASS)) {\n                this.parent.eventBase.removeSelectedAppointmentClass();\n            }\n            this.processTabOnPopup(e, popupWrapper);\n            return;\n        }\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.ROOT)) {\n            this.parent.eventBase.removeSelectedAppointmentClass();\n            return;\n        }\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.RESOURCE_CELLS_CLASS) && this.parent.activeView.isTimelineView()\n            && this.parent.activeViewOptions.group.resources.length > 0) {\n            var index = parseInt(target.getAttribute('data-group-index'), 10);\n            var appSelector = \".\" + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS + \"[data-group-index=\\\"\" + (isReverse ? index - 1 : index) + \"\\\"]\";\n            var appElements = [].slice.call(this.parent.element.querySelectorAll(appSelector));\n            if (appElements.length > 0) {\n                this.parent.eventBase.removeSelectedAppointmentClass();\n                var focusAppointment = isReverse ? appElements.slice(-1)[0] : appElements[0];\n                this.parent.eventBase.addSelectedAppointments([focusAppointment], true);\n                focusAppointment.focus();\n                e.preventDefault();\n            }\n            else if (index + 1 === this.parent.resourceBase.lastResourceLevel.length) {\n                this.parent.element.focus();\n                e.preventDefault();\n            }\n            else if (this.parent.virtualScrollModule) {\n                var virtual = this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.VIRTUAL_TRACK_CLASS);\n                var averageRowHeight = Math.round(virtual.offsetHeight / this.parent.resourceBase.expandedResources.length);\n                this.parent.element.querySelector('.e-content-wrap').scrollTop = ((isReverse ? index - 1 : index + 1) * averageRowHeight);\n                this.parent.virtualScrollModule.virtualScrolling();\n            }\n            else {\n                this.setScrollPosition(index);\n            }\n            return;\n        }\n        if (target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS)) {\n            var appElements = [].slice.call(this.parent.element.querySelectorAll('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS));\n            var isTimelineYear = this.parent.currentView === 'TimelineYear';\n            var isTimeline = this.parent.activeView.isTimelineView() && !isTimelineYear;\n            if ((isTimeline || isTimelineYear && this.parent.activeViewOptions.orientation === 'Vertical') && this.parent.activeViewOptions.group.resources.length > 0) {\n                var index = parseInt(target.getAttribute('data-group-index'), 10);\n                appElements = [].slice.call(this.parent.element.querySelectorAll(\".\" + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS + \"[data-group-index=\\\"\" + index + \"\\\"]\"));\n                var resCellSelector = \".\" + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.RESOURCE_CELLS_CLASS + \"[data-group-index=\\\"\" + (isReverse ? index : index + 1) + \"\\\"]\";\n                var resourceCell = this.parent.element.querySelector(resCellSelector);\n                if (resourceCell && (isReverse && target.getAttribute('data-guid') === appElements[0].getAttribute('data-guid') ||\n                    !isReverse && target.getAttribute('data-guid') === appElements.slice(-1)[0].getAttribute('data-guid'))) {\n                    this.parent.eventBase.removeSelectedAppointmentClass();\n                    if (this.parent.virtualScrollModule) {\n                        resourceCell.focus({ preventScroll: true });\n                    }\n                    else {\n                        resourceCell.focus();\n                    }\n                    if (this.parent.activeView.isTimelineView() && this.parent.activeViewOptions.group.resources.length > 0 &&\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.virtualScrollModule)) {\n                        this.setScrollPosition(index);\n                    }\n                    e.preventDefault();\n                    return;\n                }\n            }\n            var selectedAppointments = this.parent.eventBase.getSelectedAppointments();\n            if (selectedAppointments.length > 0) {\n                target = selectedAppointments[selectedAppointments.length - 1];\n            }\n            this.parent.eventBase.removeSelectedAppointmentClass();\n            if (!isReverse && target.getAttribute('data-guid') === appElements[appElements.length - 1].getAttribute('data-guid') ||\n                isReverse && target.getAttribute('data-guid') === appElements[0].getAttribute('data-guid')) {\n                return;\n            }\n            if (this.parent.currentView === 'Agenda' || this.parent.currentView === 'MonthAgenda') {\n                this.selectAppointment(isReverse, target);\n                e.preventDefault();\n            }\n            return;\n        }\n        var selectedCells = this.parent.getSelectedCells();\n        if (selectedCells.length > 0 && !target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS)) {\n            target = selectedCells[selectedCells.length - 1];\n            this.selectAppointmentElementFromWorkCell(isReverse, target);\n            e.preventDefault();\n            return;\n        }\n        if (target && !target.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.RESOURCE_CELLS_CLASS) && this.parent.activeView.isTimelineView()\n            && this.parent.activeViewOptions.group.resources.length > 0) {\n            this.processTabOnResourceCells(target, isReverse);\n        }\n    };\n    KeyboardInteraction.prototype.processDelete = function (e) {\n        var activeEle = document.activeElement;\n        if (this.parent.currentView === 'MonthAgenda') {\n            var selectedEle = this.parent.eventBase.getSelectedEvents().element;\n            activeEle = ((selectedEle && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(selectedEle.length)) ? selectedEle : selectedEle[0]);\n        }\n        if (activeEle && activeEle.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS)) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([activeEle], _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_BORDER);\n            this.parent.activeEventData = this.parent.eventBase.getSelectedEvents();\n            if (this.parent.activeViewOptions.readonly || activeEle.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.READ_ONLY) ||\n                !this.parent.eventSettings.allowDeleting) {\n                return;\n            }\n            this.parent.quickPopup.deleteClick(e);\n        }\n    };\n    KeyboardInteraction.prototype.processCtrlShiftNavigationArrows = function (e) {\n        if (this.parent.activeViewOptions.group.resources.length > 0 && document.activeElement.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS)) {\n            var groupIndex = parseInt(document.activeElement.getAttribute('data-group-index'), 10);\n            var index = (e.action === 'ctrlShiftLeftArrow' || e.action === 'ctrlShiftUpArrow') ? groupIndex - 1 : groupIndex + 1;\n            index = index < 0 ? 0 : index > this.parent.resourceBase.lastResourceLevel.length ?\n                this.parent.resourceBase.lastResourceLevel.length : index;\n            var eventEle = [];\n            while (eventEle.length === 0 && index >= 0 && index <= this.parent.resourceBase.lastResourceLevel.length) {\n                eventEle = [].slice.call(this.parent.element.querySelectorAll(\".\" + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS + \"[data-group-index=\\\"\" + index + \"\\\"]\"));\n                index = (e.action === 'ctrlShiftLeftArrow' || e.action === 'ctrlShiftUpArrow') ? index - 1 : index + 1;\n            }\n            var nextAppEle = eventEle[0];\n            if (nextAppEle) {\n                this.parent.eventBase.removeSelectedAppointmentClass();\n                this.parent.eventBase.addSelectedAppointments([nextAppEle], true);\n                nextAppEle.focus();\n            }\n        }\n        else if (this.parent.activeViewOptions.group.resources.length > 0 &&\n            !document.activeElement.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS)) {\n            var index = this.parent.resourceBase.renderedResources[0].groupIndex;\n            var appSelector = \".\" + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS + \"[data-group-index=\\\"\" + index + \"\\\"]\";\n            var appElements = [].slice.call(this.parent.element.querySelectorAll(appSelector));\n            if (appElements.length > 0) {\n                this.parent.eventBase.removeSelectedAppointmentClass();\n                var focusAppointment = appElements[0];\n                this.parent.eventBase.addSelectedAppointments([focusAppointment], true);\n                focusAppointment.focus();\n                e.preventDefault();\n            }\n        }\n    };\n    KeyboardInteraction.prototype.processEscape = function (event) {\n        this.parent.quickPopup.onClosePopup(event);\n        this.parent.quickPopup.morePopup.hide();\n        if (this.parent.headerModule) {\n            this.parent.headerModule.hideHeaderPopup();\n        }\n        if (this.parent.inlineModule) {\n            this.parent.inlineModule.removeInlineAppointmentElement();\n        }\n    };\n    KeyboardInteraction.prototype.isPreventAction = function (e) {\n        var target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.RESOURCE_GROUP_CELLS_CLASS);\n        if (this.parent.activeView.isTimelineView() && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target)) {\n            return true;\n        }\n        return false;\n    };\n    KeyboardInteraction.prototype.processTabOnResourceCells = function (target, isReverse) {\n        var tabElements = [].slice.call(this.parent.element.querySelectorAll('[tabIndex=\"0\"]'));\n        var currentTabIndex = tabElements.indexOf(target);\n        var nextTabElement = !isReverse ? tabElements[currentTabIndex + 1] : tabElements[currentTabIndex - 1];\n        if (nextTabElement && nextTabElement.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.RESOURCE_CELLS_CLASS)) {\n            var groupIndex = parseInt(nextTabElement.getAttribute('data-group-index'), 10);\n            if (this.parent.virtualScrollModule) {\n                var resColWrap_1 = this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.RESOURCE_COLUMN_WRAP_CLASS);\n                var resCells = [].slice.call(this.parent.element.querySelectorAll('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.RESOURCE_CELLS_CLASS));\n                resCells.forEach(function (element) {\n                    if (element.getBoundingClientRect().top < resColWrap_1.getBoundingClientRect().top) {\n                        element.setAttribute('tabindex', '-1');\n                    }\n                });\n            }\n            else {\n                this.setScrollPosition(groupIndex);\n            }\n        }\n    };\n    KeyboardInteraction.prototype.setScrollPosition = function (index) {\n        var workCell = this.parent.element.querySelector(\".\" + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS + \"[data-group-index=\\\"\" + index + \"\\\"]\");\n        if (workCell) {\n            this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.CONTENT_WRAP_CLASS).scrollTop = workCell.offsetTop;\n        }\n    };\n    KeyboardInteraction.prototype.createClipboardElement = function () {\n        if (!this.parent.allowClipboard) {\n            return;\n        }\n        this.clipBoardTextArea = this.parent.createElement('textarea', {\n            className: _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.CLIPBOARD_CLASS,\n            attrs: {\n                tabindex: '-1'\n            }\n        });\n        this.parent.element.appendChild(this.clipBoardTextArea);\n    };\n    KeyboardInteraction.prototype.setCopy = function (copiedEventData, e) {\n        var _this = this;\n        if (window.getSelection().toString() !== '') {\n            return;\n        }\n        this.clipBoardTextArea.value = '';\n        var eventDetails = { elements: [], eventDatas: [] };\n        if (copiedEventData) {\n            var filteredContent = this.filterReadOnlyEvent(copiedEventData);\n            eventDetails.eventDatas = filteredContent;\n        }\n        else {\n            if (!this.parent || !this.parent.eventBase) {\n                return;\n            }\n            var selectedEvents = this.parent.eventBase.getSelectedEvents();\n            selectedEvents.event = selectedEvents && selectedEvents.event ? Array.isArray(selectedEvents.event)\n                ? this.filterReadOnlyEvent(selectedEvents.event) :\n                this.filterReadOnlyEvent([selectedEvents.event]) : undefined;\n            if (selectedEvents.element && selectedEvents.event) {\n                eventDetails = {\n                    elements: selectedEvents.element,\n                    eventDatas: selectedEvents.event\n                };\n            }\n            else {\n                eventDetails.element = [e.target];\n                eventDetails.eventDatas = [this.parent.getEventDetails(e.target)];\n            }\n        }\n        this.clipBoardTextArea.value = JSON.stringify(eventDetails.eventDatas, undefined, 2);\n        if (!/ipad|ipod|iphone/i.test(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.userAgent)) {\n            this.clipBoardTextArea.select();\n        }\n        else {\n            this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(navigator.clipboard)) {\n            navigator.clipboard.writeText(this.clipBoardTextArea.value)\n                .then(function () {\n                _this.clipBoardTextArea.blur();\n                window.getSelection().removeAllRanges();\n                if (e) {\n                    var closestAppointment = e.target.closest('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CLASS);\n                    if (closestAppointment) {\n                        closestAppointment.focus();\n                    }\n                }\n            })\n                .catch(function (err) {\n                throw err;\n            });\n        }\n    };\n    KeyboardInteraction.prototype.filterReadOnlyEvent = function (args) {\n        var _this = this;\n        return args.filter(function (event) { return !event[_this.parent.eventFields.isReadonly]; });\n    };\n    KeyboardInteraction.prototype.processClipboardAction = function (isCut, copiedEventData, e) {\n        if (!this.parent.allowClipboard) {\n            return;\n        }\n        this.isCutAction = isCut;\n        this.isCutContentPasted = false;\n        this.parent.closeQuickInfoPopup();\n        this.setCopy(copiedEventData ? copiedEventData : undefined, e);\n    };\n    KeyboardInteraction.prototype.pasteHandler = function (clipboardEvent, targetElement) {\n        var _this = this;\n        if (!this.parent.allowClipboard || this.isCutContentPasted) {\n            return;\n        }\n        var target = this.parent.getSelectedCells().length > 0\n            ? this.parent.getSelectedCells()\n            : (targetElement ? [targetElement] : []);\n        if (target.length === 0 || this.parent.eventWindow.dialogObject.visible ||\n            this.parent.quickPopup.quickPopup.element.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.POPUP_OPEN)) {\n            return;\n        }\n        var clipboardData = clipboardEvent.clipboardData || clipboardEvent.event.clipboardData\n            || window.clipboardData;\n        var pastedData = clipboardData.getData('text');\n        if (pastedData === '[]' || pastedData === '') {\n            return;\n        }\n        var parsedData;\n        try {\n            parsedData = JSON.parse(pastedData);\n        }\n        catch (_a) {\n            parsedData = pastedData;\n        }\n        var args = { cancel: false, data: parsedData, element: target };\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.beforePaste, args, function (pasteEventArgs) {\n            if (!pasteEventArgs.cancel) {\n                if (!Array.isArray(pasteEventArgs.data) || !pasteEventArgs.data.every(function (item) { return typeof item === 'object'; })) {\n                    _this.clipBoardTextArea.value = '';\n                    return;\n                }\n                _this.processPaste(pasteEventArgs.data, targetElement);\n                if (_this.isCutAction) {\n                    _this.isCutContentPasted = true;\n                }\n            }\n            else {\n                _this.parent.closeQuickInfoPopup();\n                return;\n            }\n        });\n    };\n    KeyboardInteraction.prototype.processPaste = function (data, targetElement) {\n        if (!this.parent || !this.parent.eventWindow || !this.parent.eventBase || !data || !data.length) {\n            return;\n        }\n        var target = this.getTargetElements(targetElement);\n        var cellDetails = this.parent.getCellDetails(target);\n        var eventDetails = {};\n        this.parent.eventWindow.convertToEventData(cellDetails, eventDetails);\n        var isAllDay = this.isAllDayEvent(target);\n        var resources = this.parent.getResourcesByIndex(cellDetails.groupIndex);\n        var processedData = this.processEventData(data, isAllDay, cellDetails, resources);\n        var selectedEventData = this.parent.eventBase.sortByDateTime(processedData);\n        var saveData = this.prepareEventData(selectedEventData, eventDetails);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(target, _base_css_constant__WEBPACK_IMPORTED_MODULE_3__.SELECTED_CELL_CLASS);\n        if (saveData.length > 0) {\n            if (this.isCutAction) {\n                this.parent.saveEvent(saveData);\n            }\n            else {\n                this.parent.addEvent(saveData);\n            }\n        }\n    };\n    KeyboardInteraction.prototype.getTargetElements = function (targetElement) {\n        return this.parent.getSelectedCells().length > 0\n            ? this.parent.getSelectedCells()\n            : (targetElement ? [targetElement] : []);\n    };\n    KeyboardInteraction.prototype.isAllDayEvent = function (target) {\n        return !target.some(function (cell) { return cell.classList.contains(_base_css_constant__WEBPACK_IMPORTED_MODULE_3__.WORK_CELLS_CLASS); });\n    };\n    KeyboardInteraction.prototype.processEventData = function (data, isAllDay, cellDetails, resources) {\n        var _this = this;\n        return data.map(function (item) {\n            var _a;\n            var processedItem = __assign({}, item, (_a = {}, _a[_this.parent.eventFields.startTime] = new Date(item[_this.parent.eventFields.startTime]), _a[_this.parent.eventFields.endTime] = new Date(item[_this.parent.eventFields.endTime]), _a[_this.parent.eventFields.recurrenceID] = null, _a[_this.parent.eventFields.isAllDay] = isAllDay, _a));\n            _this.adjustEventTime(processedItem, isAllDay, item.IsAllDay, cellDetails);\n            if (resources && resources.groupData) {\n                Object.assign(processedItem, resources.groupData);\n            }\n            return processedItem;\n        });\n    };\n    KeyboardInteraction.prototype.adjustEventTime = function (processedItem, isAllDay, itemIsAllDay, cellDetails) {\n        var isTimeScaleEnabled = this.parent.activeViewOptions.timeScale.enable;\n        if ((['Day', 'Week', 'WorkWeek'].indexOf(this.parent.currentView) !== -1) && isTimeScaleEnabled) {\n            if (isAllDay) {\n                processedItem[this.parent.eventFields.endTime] = new Date(processedItem[this.parent.eventFields.startTime]);\n                processedItem[this.parent.eventFields.endTime].setDate(processedItem[this.parent.eventFields.startTime].getDate() + 1);\n            }\n            else if (itemIsAllDay) {\n                processedItem[this.parent.eventFields.startTime] = new Date(processedItem[this.parent.eventFields.startTime]\n                    .setHours(0, 0, 0, 0));\n                processedItem[this.parent.eventFields.endTime] = new Date(processedItem[this.parent.eventFields.startTime].getTime() + (cellDetails.endTime.getTime() - cellDetails.startTime.getTime()));\n            }\n        }\n        else if (itemIsAllDay) {\n            processedItem[this.parent.eventFields.isAllDay] = true;\n            processedItem[this.parent.eventFields.startTime] = new Date(processedItem[this.parent.eventFields.startTime]\n                .setHours(0, 0, 0, 0));\n            processedItem[this.parent.eventFields.endTime] = new Date(processedItem[this.parent.eventFields.startTime].getTime() +\n                (processedItem[this.parent.eventFields.endTime].getTime() - processedItem[this.parent.eventFields.startTime].getTime()));\n        }\n    };\n    KeyboardInteraction.prototype.prepareEventData = function (selectedEventData, eventDetails) {\n        var _this = this;\n        var initialEventTime = new Date(selectedEventData[0][this.parent.eventFields.startTime]);\n        var uniqueId = this.parent.getEventMaxID();\n        return selectedEventData.map(function (events) {\n            var totalDuration = _this.calculateTotalDuration(events, eventDetails, initialEventTime);\n            var cloneDetails = _this.isCutAction ? events : __assign({}, events);\n            if (!events[_this.parent.eventFields.recurrenceRule]) {\n                cloneDetails[_this.parent.eventFields.startTime] =\n                    new Date(new Date(cloneDetails[_this.parent.eventFields.startTime]).setMilliseconds(totalDuration));\n                cloneDetails[_this.parent.eventFields.endTime] =\n                    new Date(new Date(cloneDetails[_this.parent.eventFields.endTime]).setMilliseconds(totalDuration));\n            }\n            if (!_this.isCutAction) {\n                cloneDetails[_this.parent.eventFields.id] = uniqueId++;\n            }\n            return cloneDetails;\n        });\n    };\n    KeyboardInteraction.prototype.calculateTotalDuration = function (events, eventDetails, initialEventTime) {\n        if ((['Month', 'TimelineMonth', 'TimelineYear'].indexOf(this.parent.currentView) !== -1) || !this.parent.activeViewOptions.timeScale.enable) {\n            var eventStartTime = new Date(events[this.parent.eventFields.startTime]);\n            return eventDetails[this.parent.eventFields.startTime].getTime() - initialEventTime.getTime() +\n                (eventStartTime.getHours() * 3600000 + eventStartTime.getMinutes() * 60000 + eventStartTime.getSeconds() * 1000);\n        }\n        else {\n            return eventDetails[this.parent.eventFields.startTime].getTime() - initialEventTime.getTime();\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} Returns the module name.\n     */\n    KeyboardInteraction.prototype.getModuleName = function () {\n        return 'keyboard';\n    };\n    /**\n     * To destroy the keyboard module.\n     *\n     * @returns {void}\n     * @private\n     */\n    KeyboardInteraction.prototype.destroy = function () {\n        this.removeEventListener();\n        this.selectedCells = [];\n        this.clipBoardTextArea = null;\n        this.keyboardModule.destroy();\n    };\n    return KeyboardInteraction;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-schedule/src/schedule/actions/keyboard.js?");

/***/ })

}]);