"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-charts_src_range-navigator_i"],{

/***/ "./node_modules/@syncfusion/ej2-charts/src/range-navigator/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-charts/src/range-navigator/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataPoint: () => (/* reexport safe */ _utils_helper__WEBPACK_IMPORTED_MODULE_1__.DataPoint),\n/* harmony export */   RangeNavigator: () => (/* reexport safe */ _range_navigator__WEBPACK_IMPORTED_MODULE_0__.RangeNavigator),\n/* harmony export */   RangeNavigatorAxis: () => (/* reexport safe */ _renderer_range_axis__WEBPACK_IMPORTED_MODULE_3__.RangeNavigatorAxis),\n/* harmony export */   RangeNavigatorSeries: () => (/* reexport safe */ _model_range_base__WEBPACK_IMPORTED_MODULE_6__.RangeNavigatorSeries),\n/* harmony export */   RangeSeries: () => (/* reexport safe */ _renderer_chart_render__WEBPACK_IMPORTED_MODULE_4__.RangeSeries),\n/* harmony export */   RangeSlider: () => (/* reexport safe */ _renderer_slider__WEBPACK_IMPORTED_MODULE_5__.RangeSlider),\n/* harmony export */   RangeTooltip: () => (/* reexport safe */ _range_navigator_user_interaction_tooltip__WEBPACK_IMPORTED_MODULE_7__.RangeTooltip),\n/* harmony export */   RangeTooltipSettings: () => (/* reexport safe */ _model_range_base__WEBPACK_IMPORTED_MODULE_6__.RangeTooltipSettings),\n/* harmony export */   StyleSettings: () => (/* reexport safe */ _model_range_base__WEBPACK_IMPORTED_MODULE_6__.StyleSettings),\n/* harmony export */   ThumbSettings: () => (/* reexport safe */ _model_range_base__WEBPACK_IMPORTED_MODULE_6__.ThumbSettings),\n/* harmony export */   getExactData: () => (/* reexport safe */ _utils_helper__WEBPACK_IMPORTED_MODULE_1__.getExactData),\n/* harmony export */   getNearestValue: () => (/* reexport safe */ _utils_helper__WEBPACK_IMPORTED_MODULE_1__.getNearestValue),\n/* harmony export */   getRangeThemeColor: () => (/* reexport safe */ _utils_theme__WEBPACK_IMPORTED_MODULE_2__.getRangeThemeColor),\n/* harmony export */   getRangeValueXByPoint: () => (/* reexport safe */ _utils_helper__WEBPACK_IMPORTED_MODULE_1__.getRangeValueXByPoint),\n/* harmony export */   getXLocation: () => (/* reexport safe */ _utils_helper__WEBPACK_IMPORTED_MODULE_1__.getXLocation),\n/* harmony export */   rangeValueToCoefficient: () => (/* reexport safe */ _utils_helper__WEBPACK_IMPORTED_MODULE_1__.rangeValueToCoefficient)\n/* harmony export */ });\n/* harmony import */ var _range_navigator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./range-navigator */ \"./node_modules/@syncfusion/ej2-charts/src/range-navigator/range-navigator.js\");\n/* harmony import */ var _utils_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/helper */ \"./node_modules/@syncfusion/ej2-charts/src/range-navigator/utils/helper.js\");\n/* harmony import */ var _utils_theme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/theme */ \"./node_modules/@syncfusion/ej2-charts/src/range-navigator/utils/theme.js\");\n/* harmony import */ var _renderer_range_axis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./renderer/range-axis */ \"./node_modules/@syncfusion/ej2-charts/src/range-navigator/renderer/range-axis.js\");\n/* harmony import */ var _renderer_chart_render__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./renderer/chart-render */ \"./node_modules/@syncfusion/ej2-charts/src/range-navigator/renderer/chart-render.js\");\n/* harmony import */ var _renderer_slider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./renderer/slider */ \"./node_modules/@syncfusion/ej2-charts/src/range-navigator/renderer/slider.js\");\n/* harmony import */ var _model_range_base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./model/range-base */ \"./node_modules/@syncfusion/ej2-charts/src/range-navigator/model/range-base.js\");\n/* harmony import */ var _range_navigator_user_interaction_tooltip__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../range-navigator/user-interaction/tooltip */ \"./node_modules/@syncfusion/ej2-charts/src/range-navigator/user-interaction/tooltip.js\");\n/**\n * Range Navigator component export methods\n */\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-charts/src/range-navigator/index.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-charts/src/range-navigator/model/range-base.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-charts/src/range-navigator/model/range-base.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RangeNavigatorSeries: () => (/* binding */ RangeNavigatorSeries),\n/* harmony export */   RangeTooltipSettings: () => (/* binding */ RangeTooltipSettings),\n/* harmony export */   StyleSettings: () => (/* binding */ StyleSettings),\n/* harmony export */   ThumbSettings: () => (/* binding */ ThumbSettings)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _common_model_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/model/base */ \"./node_modules/@syncfusion/ej2-charts/src/common/model/base.js\");\n/* harmony import */ var _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-svg-base */ \"./node_modules/@syncfusion/ej2-svg-base/index.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n/**\n * Series class for the range navigator\n */\nvar RangeNavigatorSeries = /** @class */ (function (_super) {\n    __extends(RangeNavigatorSeries, _super);\n    function RangeNavigatorSeries() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.clipRect = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.Rect(0, 0, 0, 0);\n        return _this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeNavigatorSeries.prototype, \"dataSource\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeNavigatorSeries.prototype, \"xName\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeNavigatorSeries.prototype, \"yName\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], RangeNavigatorSeries.prototype, \"query\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Line')\n    ], RangeNavigatorSeries.prototype, \"type\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ enable: false }, _common_model_base__WEBPACK_IMPORTED_MODULE_1__.Animation)\n    ], RangeNavigatorSeries.prototype, \"animation\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ color: 'transparent', width: 2 }, _common_model_base__WEBPACK_IMPORTED_MODULE_1__.Border)\n    ], RangeNavigatorSeries.prototype, \"border\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeNavigatorSeries.prototype, \"fill\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1)\n    ], RangeNavigatorSeries.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1)\n    ], RangeNavigatorSeries.prototype, \"opacity\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('0')\n    ], RangeNavigatorSeries.prototype, \"dashArray\", void 0);\n    return RangeNavigatorSeries;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Thumb settings\n */\nvar ThumbSettings = /** @class */ (function (_super) {\n    __extends(ThumbSettings, _super);\n    function ThumbSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ThumbSettings.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ThumbSettings.prototype, \"height\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ width: 1, color: null }, _common_model_base__WEBPACK_IMPORTED_MODULE_1__.Border)\n    ], ThumbSettings.prototype, \"border\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ThumbSettings.prototype, \"fill\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Circle')\n    ], ThumbSettings.prototype, \"type\", void 0);\n    return ThumbSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Style settings\n */\nvar StyleSettings = /** @class */ (function (_super) {\n    __extends(StyleSettings, _super);\n    function StyleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, ThumbSettings)\n    ], StyleSettings.prototype, \"thumb\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], StyleSettings.prototype, \"selectedRegionColor\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], StyleSettings.prototype, \"unselectedRegionColor\", void 0);\n    return StyleSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/*\n * Configures the ToolTips in the chart.\n */\nvar RangeTooltipSettings = /** @class */ (function (_super) {\n    __extends(RangeTooltipSettings, _super);\n    function RangeTooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], RangeTooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeTooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeTooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeTooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ fontFamily: null, size: '12px', fontStyle: 'Normal', fontWeight: null, color: null }, _common_model_base__WEBPACK_IMPORTED_MODULE_1__.Font)\n    ], RangeTooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeTooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ color: null, width: null }, _common_model_base__WEBPACK_IMPORTED_MODULE_1__.Border)\n    ], RangeTooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('OnDemand')\n    ], RangeTooltipSettings.prototype, \"displayMode\", void 0);\n    return RangeTooltipSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-charts/src/range-navigator/model/range-base.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-charts/src/range-navigator/renderer/chart-render.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-charts/src/range-navigator/renderer/chart-render.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RangeSeries: () => (/* binding */ RangeSeries)\n/* harmony export */ });\n/* harmony import */ var _common_utils_helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils/helper */ \"./node_modules/@syncfusion/ej2-charts/src/common/utils/helper.js\");\n/* harmony import */ var _chart_axis_axis_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chart/axis/axis-helper */ \"./node_modules/@syncfusion/ej2-charts/src/chart/axis/axis-helper.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"./node_modules/@syncfusion/ej2-data/index.js\");\n/* harmony import */ var _utils_helper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/helper */ \"./node_modules/@syncfusion/ej2-charts/src/range-navigator/utils/helper.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _common_model_theme__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/model/theme */ \"./node_modules/@syncfusion/ej2-charts/src/common/model/theme.js\");\n/* harmony import */ var _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-svg-base */ \"./node_modules/@syncfusion/ej2-svg-base/index.js\");\n/* harmony import */ var _common_model_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/model/data */ \"./node_modules/@syncfusion/ej2-charts/src/common/model/data.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n/**\n * To render Chart series\n */\nvar RangeSeries = /** @class */ (function (_super) {\n    __extends(RangeSeries, _super);\n    function RangeSeries(range) {\n        var _this = _super.call(this) || this;\n        _this.dataSource = range.dataSource;\n        _this.xName = range.xName;\n        _this.yName = range.yName;\n        _this.query = range.query;\n        _this.xMin = Infinity;\n        _this.xMax = -Infinity;\n        _this.yMin = Infinity;\n        _this.yMax = -Infinity;\n        _this.labels = [];\n        _this.indexLabels = {};\n        return _this;\n    }\n    /**\n     * To render light weight and data manager process.\n     *\n     * @param {RangeNavigator} control - RangeNavigator instance.\n     * @returns {void}\n     */\n    RangeSeries.prototype.renderChart = function (control) {\n        var _this = this;\n        var dataSource;\n        var query;\n        this.seriesLength = 0;\n        control.rangeSlider.points = [];\n        if (control.series.length) {\n            control.series.map(function (series) {\n                dataSource = series.dataSource || control.dataSource;\n                query = series.query || control.query;\n                series.points = [];\n                _this.processDataSource(dataSource, query, control, series);\n            });\n        }\n        else {\n            this.processDataSource(control.dataSource, control.query, control);\n        }\n    };\n    RangeSeries.prototype.processDataSource = function (dataSource, query, control, series) {\n        var _this = this;\n        if (!(dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(dataSource) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(query)) {\n            this.dataManagerSuccess({ result: dataSource, count: dataSource.length }, control, series);\n            return;\n        }\n        control.dataModule = new _common_model_data__WEBPACK_IMPORTED_MODULE_7__.Data(dataSource, query);\n        var dataManager = control.dataModule.getData(control.dataModule.generateQuery().requiresCount());\n        dataManager.then(function (e) { return _this.dataManagerSuccess(e, control, series); });\n    };\n    /**\n     * data manager process calculated here.\n     *\n     * @param {Object} e - The data manager result object.\n     * @param {Object} e.result - The result of the data manager process.\n     * @param {number} e.count - The count of items in the result.\n     * @param {RangeNavigator} control - The RangeNavigator control.\n     * @param {RangeNavigatorSeries} series - Optional parameter representing the series data.\n     * @returns {void}\n     */\n    RangeSeries.prototype.dataManagerSuccess = function (e, control, series) {\n        var viewData = e.count ? e.result : [];\n        control.allowServerDataBinding = false;\n        this.processJsonData(viewData, control, Object.keys(viewData).length, series);\n        this.seriesLength += series ? 1 : this.seriesLength;\n        if (!series || this.seriesLength === control.series.length) {\n            this.processXAxis(control);\n            this.calculateGroupingBounds(control);\n            this.processYAxis(control);\n            control.renderChart();\n        }\n    };\n    /**\n     * Process JSON data from data source.\n     *\n     * @param {Object[]} viewData - The data array to be processed.\n     * @param {RangeNavigator} control - The RangeNavigator control.\n     * @param {number} len - The length of the data array.\n     * @param {RangeNavigatorSeries} series - The series data for the RangeNavigator control.\n     * @returns {void}\n     */\n    RangeSeries.prototype.processJsonData = function (viewData, control, len, series) {\n        var i = 0;\n        var point;\n        var xName = (series && series.xName) || control.xName;\n        var yName = (series && series.yName) || control.yName;\n        while (i < len) {\n            point = new _utils_helper__WEBPACK_IMPORTED_MODULE_3__.DataPoint((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.getValue)(xName, viewData[i]), (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.getValue)(yName, viewData[i]));\n            point.yValue = +point.y;\n            if (control.valueType.indexOf('DateTime') > -1) {\n                var dateParser = control.intl.getDateParser({ skeleton: 'full', type: 'dateTime' });\n                var dateFormatter = control.intl.getDateFormat({ skeleton: 'full', type: 'dateTime' });\n                point.x = new Date(_syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataUtil.parse.parseJson({ val: point.x }).val);\n                point.xValue = Date.parse(dateParser(dateFormatter(point.x)));\n                if (control.valueType === 'DateTimeCategory') {\n                    if (this.indexLabels[point.xValue.toString()] === undefined) {\n                        this.indexLabels[point.xValue.toString()] = this.labels.length;\n                        this.labels.push(point.xValue.toString());\n                    }\n                    point.xValue = this.indexLabels[point.xValue];\n                }\n            }\n            else {\n                point.xValue = +point.x;\n            }\n            if (series) {\n                series.points.push(point);\n            }\n            this.xMin = Math.min(this.xMin, point.xValue);\n            this.yMin = Math.min(this.yMin, point.yValue);\n            this.xMax = Math.max(this.xMax, point.xValue);\n            this.yMax = Math.max(this.yMax, point.yValue);\n            control.rangeSlider.points.push(point);\n            i++;\n        }\n    };\n    /**\n     * Process x axis for range navigator.\n     *\n     * @private\n     * @param {RangeNavigator} control - The RangeNavigator control.\n     * @returns {void}\n     */\n    RangeSeries.prototype.processXAxis = function (control) {\n        var axis = {\n            minimum: control.minimum, maximum: control.maximum,\n            interval: control.interval, valueType: control.valueType,\n            isInversed: control.enableRtl, labelFormat: control.labelFormat,\n            logBase: control.logBase, skeleton: control.skeleton, skeletonType: control.skeletonType\n        };\n        this.xAxis = axis;\n        this.xAxis.intervalType = control.intervalType;\n        this.xAxis.maximumLabels = 3;\n        this.xAxis.skeleton = control.skeleton;\n        this.xAxis.intervalDivs = [10, 5, 2, 1];\n        this.xAxis.rect = control.bounds;\n        this.xAxis.visibleLabels = [];\n        this.xAxis.orientation = 'Horizontal';\n        this.xAxis.labels = this.labels;\n        this.xAxis.indexLabels = this.indexLabels;\n        var axisModule = control[(0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_0__.firstToLowerCase)(control.valueType) + 'Module'];\n        axisModule.min = this.xMin;\n        axisModule.max = this.xMax;\n        axisModule.getActualRange(this.xAxis, control.bounds);\n        if (this.xAxis.valueType === 'Double' || this.xAxis.valueType === 'DateTime' || this.xAxis.valueType === 'DateTimeCategory') {\n            axisModule.updateActualRange(this.xAxis, this.xAxis.actualRange.min, this.xAxis.actualRange.max, this.xAxis.actualRange.interval);\n        }\n        this.xAxis.actualRange.delta = this.xAxis.actualRange.max - this.xAxis.actualRange.min;\n        this.xAxis.visibleRange = this.xAxis.actualRange;\n        axisModule.calculateVisibleLabels(this.xAxis, control);\n        if (this.xAxis.valueType === 'DateTimeCategory' && control.periodSelectorModule) {\n            control.periodSelectorModule.isDatetimeCategory = true;\n            control.periodSelectorModule.sortedData = this.labels.map(function (label) { return parseInt(label, 10); });\n        }\n    };\n    /**\n     * Process yAxis for range navigator.\n     *\n     * @param {RangeNavigator} control - RangeNavigator instance.\n     * @private\n     * @returns {void}\n     */\n    RangeSeries.prototype.processYAxis = function (control) {\n        var axis = {\n            majorGridLines: { width: 0 }, rangePadding: 'None',\n            majorTickLines: { width: 0 }, labelStyle: { size: '0' },\n            visible: false, valueType: 'Double', minimum: null, maximum: null,\n            interval: null\n        };\n        this.yAxis = axis;\n        this.yAxis.rect = control.bounds;\n        this.yAxis.maximumLabels = 3;\n        this.yAxis.intervalDivs = [10, 5, 2, 1];\n        this.yAxis.orientation = 'Vertical';\n        if (this.yMin === this.yMax) {\n            this.yMax += 1;\n            this.yMin -= 1;\n        }\n        control.doubleModule.min = this.yMin;\n        control.doubleModule.max = this.yMax;\n        control.doubleModule.getActualRange(this.yAxis, control.bounds);\n        control.doubleModule.updateActualRange(this.yAxis, this.yAxis.actualRange.min, this.yAxis.actualRange.max, this.yAxis.actualRange.interval);\n        this.yAxis.actualRange.delta = this.yAxis.actualRange.max - this.yAxis.actualRange.min;\n        this.yAxis.visibleRange = this.yAxis.actualRange;\n    };\n    /**\n     * Process Light weight control.\n     *\n     * @param {RangeNavigator} control - RangeNavigator instance.\n     * @private\n     * @returns {void}\n     */\n    RangeSeries.prototype.renderSeries = function (control) {\n        var _this = this;\n        this.chartGroup = control.renderer.createGroup({ id: control.element.id + '_chart' });\n        var colors = (0,_common_model_theme__WEBPACK_IMPORTED_MODULE_5__.getSeriesColor)(control.theme);\n        control.series.map(function (series, index) {\n            var isSeriesVisible = control.stockChart ? control.stockChart.series[index].visible : true;\n            if (isSeriesVisible) {\n                series.xAxis = _this.xAxis;\n                series.yAxis = _this.yAxis;\n                series.chart = control;\n                series.index = index;\n                series.xAxis.isInversed = control.enableRtl;\n                series.interior = series.fill || colors[index % colors.length];\n                _this.createSeriesElement(control, series, index);\n                if (series.xAxis.valueType === 'DateTimeCategory') {\n                    for (var i = 0; i < series.points.length; i++) {\n                        series.points[i].xValue =\n                            _this.xAxis.labels.indexOf(Date.parse(series.points[i].x.toString()).toString());\n                    }\n                }\n                if (control[(0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_0__.firstToLowerCase)(series.type) + 'SeriesModule']) {\n                    control[(0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_0__.firstToLowerCase)(series.type) + 'SeriesModule'].render(series, _this.xAxis, _this.yAxis, false);\n                }\n                else {\n                    control['line' + 'SeriesModule'].render(series, _this.xAxis, _this.yAxis, false);\n                }\n                _this.chartGroup.appendChild(series.seriesElement);\n                if (((series.animation.enable && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.animationMode !== 'Disable') || _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.animationMode === 'Enable') && control.animateSeries) {\n                    if (control[(0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_0__.firstToLowerCase)(series.type) + 'SeriesModule']) {\n                        control[(0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_0__.firstToLowerCase)(series.type) + 'SeriesModule'].doAnimation(series);\n                    }\n                    else {\n                        //control['line' + 'SeriesModule'].doAnimation(series);\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Append series elements in element.\n     *\n     * @param {RangeNavigator} control - The RangeNavigator control.\n     * @returns {void}\n     */\n    RangeSeries.prototype.appendSeriesElements = function (control) {\n        control.svgObject.appendChild(this.chartGroup);\n        if (control.series.length) {\n            this.drawSeriesBorder(control);\n        }\n    };\n    RangeSeries.prototype.createSeriesElement = function (control, series, index) {\n        var elementId = control.element.id;\n        series.clipRect = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_6__.Rect(this.xAxis.rect.x, this.yAxis.rect.y, this.xAxis.rect.width, this.yAxis.rect.height);\n        series.clipRectElement = control.renderer.drawClipPath(new _common_utils_helper__WEBPACK_IMPORTED_MODULE_0__.RectOption(elementId + '_RangeSeriesClipRect_' + index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n            x: 0, y: 0,\n            width: series.clipRect.width,\n            height: series.clipRect.height\n        }));\n        series.seriesElement = control.renderer.createGroup({\n            'id': elementId + 'SeriesGroup' + index,\n            'transform': 'translate(' + series.clipRect.x + ',' + (series.clipRect.y) + ')',\n            'clip-path': 'url(#' + elementId + '_RangeSeriesClipRect_' + index + ')'\n        });\n        series.seriesElement.appendChild(series.clipRectElement);\n    };\n    /**\n     * Calculate grouping bounds for x axis.\n     *\n     * @private\n     * @param {RangeNavigator} control - The RangeNavigator control.\n     * @returns {void}\n     */\n    RangeSeries.prototype.calculateGroupingBounds = function (control) {\n        var padding = control.margin.bottom;\n        var labelHeight = (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_6__.measureText)('string', control.labelStyle, control.themeStyle.axisLabelFont).height;\n        var xMin = control.valueType === 'DateTimeCategory' ? parseInt(this.xAxis.labels[this.xMin], 10) : this.xMin;\n        var xMax = control.valueType === 'DateTimeCategory' ? parseInt(this.xAxis.labels[this.xMax], 10) : this.xMax;\n        this.calculateDateTimeNiceInterval(this.xAxis, new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_6__.Size(control.bounds.width, control.bounds.height), xMin, xMax, false);\n        if (control.enableGrouping && (control.valueType === 'DateTime' || control.valueType === 'DateTimeCategory')\n            && (this.xAxis.actualIntervalType !== 'Years' || !control.series.length)) {\n            control.bounds.height -= (control.labelPosition === 'Outside' || control.series.length === 0) ? padding + labelHeight :\n                (labelHeight + 2 * padding);\n        }\n        if (!control.series.length) {\n            control.bounds.y += control.bounds.height / 4;\n            control.bounds.height = control.bounds.height / 2;\n        }\n    };\n    RangeSeries.prototype.drawSeriesBorder = function (control) {\n        var start = control.stockChart ? 'M' : 'L';\n        var close = control.stockChart ? '' : 'Z';\n        var options = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_6__.PathOption(control.element.id + '_SeriesBorder', 'transparent', control.navigatorBorder.width, control.navigatorBorder.color || (control.theme.indexOf('Dark') > -1 ? '#49454F' : '#DDDDDD'), 1, control.navigatorBorder.dashArray, ('M ' + (control.bounds.x) + ' ' + (control.bounds.y) +\n            ' L ' + (control.bounds.x + control.bounds.width) + ' ' + control.bounds.y +\n            start + (control.bounds.x + control.bounds.width) + ' ' + (control.bounds.y + control.bounds.height) +\n            ' L ' + (control.bounds.x) + ' ' + (control.bounds.y + control.bounds.height) + close));\n        var htmlObject = control.renderer.drawPath(options);\n        control.svgObject.appendChild(htmlObject);\n    };\n    return RangeSeries;\n}(_chart_axis_axis_helper__WEBPACK_IMPORTED_MODULE_1__.NiceInterval));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-charts/src/range-navigator/renderer/chart-render.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-charts/src/range-navigator/user-interaction/tooltip.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-charts/src/range-navigator/user-interaction/tooltip.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RangeTooltip: () => (/* binding */ RangeTooltip)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-svg-base */ \"./node_modules/@syncfusion/ej2-svg-base/index.js\");\n/* harmony import */ var _common_utils_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils/helper */ \"./node_modules/@syncfusion/ej2-charts/src/common/utils/helper.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n\n\n\n\n\n/**\n * `Tooltip` module is used to render the tooltip for chart series.\n */\nvar RangeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for tooltip module.\n     *\n     * @param {RangeNavigator} range - The RangeNavigator control.\n     * @private\n     */\n    function RangeTooltip(range) {\n        this.control = range;\n        this.elementId = range.element.id;\n    }\n    /**\n     * Left tooltip method called here.\n     *\n     * @param {RangeSlider} rangeSlider - RangeSlider\n     * @returns {void}\n     */\n    RangeTooltip.prototype.renderLeftTooltip = function (rangeSlider) {\n        this.fadeOutTooltip();\n        var content = this.getTooltipContent(rangeSlider.currentStart);\n        var contentWidth = this.getContentSize(content);\n        var rect = this.control.enableRtl ? rangeSlider.rightRect : rangeSlider.leftRect;\n        if (contentWidth > rect.width) {\n            rect = rangeSlider.midRect;\n        }\n        this.leftTooltip = this.renderTooltip(rect, this.createElement('_leftTooltip'), rangeSlider.startX, content);\n    };\n    /**\n     * get the content size.\n     *\n     * @param {string[]} value - The array of values.\n     * @returns {number} - The content size.\n     */\n    RangeTooltip.prototype.getContentSize = function (value) {\n        var width;\n        var font = this.control.tooltip.textStyle;\n        if (this.control.tooltip.template) {\n            width = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.createTemplate)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.createElement)('div', {\n                id: 'measureElement',\n                styles: 'position: absolute;'\n            }), 0, this.control.tooltip.template, this.control).getBoundingClientRect().width;\n        }\n        else {\n            // 20 for tooltip padding\n            width = (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_0__.measureText)(value[0], font, this.control.themeStyle.tooltipLabelFont).width + 20;\n        }\n        return width;\n    };\n    /**\n     * Right tooltip method called here.\n     *\n     * @param {RangeSlider} rangeSlider - RangeSlider\n     * @returns {void}\n     */\n    RangeTooltip.prototype.renderRightTooltip = function (rangeSlider) {\n        this.fadeOutTooltip();\n        var content = this.getTooltipContent(rangeSlider.currentEnd);\n        var contentWidth = this.getContentSize(content);\n        var rect = this.control.enableRtl ? rangeSlider.leftRect : rangeSlider.rightRect;\n        if (contentWidth > rect.width) {\n            rect = rangeSlider.midRect;\n            rect.x = !this.control.series.length ? rect.x : 0;\n        }\n        this.rightTooltip = this.renderTooltip(rect, this.createElement('_rightTooltip'), rangeSlider.endX, content);\n    };\n    /**\n     * Tooltip element creation.\n     *\n     * @param {string} id - The element id.\n     * @returns {Element} - The created tooltip element.\n     */\n    RangeTooltip.prototype.createElement = function (id) {\n        if ((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.elementId + id)) {\n            return (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.elementId + id);\n        }\n        else {\n            var element = document.createElement('div');\n            element.id = this.elementId + id;\n            element.className = 'ejSVGTooltip';\n            element.style.cssText = 'pointer-events:none; position:absolute;z-index: 1';\n            if (!this.control.stockChart) {\n                (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.elementId + '_Secondary_Element').appendChild(element);\n            }\n            else {\n                var stockChart = this.control.stockChart;\n                (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(stockChart.element.id + '_Secondary_Element').appendChild(element);\n                element.style.transform = 'translateY(' + (((stockChart.availableSize.height - stockChart.toolbarHeight - 51) +\n                    stockChart.toolbarHeight) + stockChart.titleSize.height) + 'px)';\n            }\n            return element;\n        }\n    };\n    /**\n     * Tooltip render called here.\n     *\n     * @param {Rect} bounds - bounds\n     * @param {Element} parent - parent\n     * @param {number} pointX - pointX\n     * @param {string[]} content - content\n     * @returns {SVGTooltip} - SVGTooltip\n     */\n    RangeTooltip.prototype.renderTooltip = function (bounds, parent, pointX, content) {\n        var control = this.control;\n        var tooltip = control.tooltip;\n        var argsData = {\n            cancel: false, name: 'tooltipRender', text: content,\n            textStyle: tooltip.textStyle\n        };\n        argsData.textStyle.fontWeight = tooltip.textStyle.fontWeight || this.control.themeStyle.tooltipLabelFont.fontWeight;\n        this.control.trigger('tooltipRender', argsData);\n        var left = control.svgObject.getBoundingClientRect().left -\n            control.element.getBoundingClientRect().left;\n        if (!argsData.cancel) {\n            return new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_0__.Tooltip({\n                location: { x: pointX, y: control.rangeSlider.sliderY },\n                content: argsData.text, marginX: 2,\n                enableShadow: false,\n                marginY: 2, arrowPadding: 8, rx: 4, ry: 4,\n                inverted: control.series.length > 0,\n                areaBounds: bounds, fill: tooltip.fill ? tooltip.fill : this.control.themeStyle.tooltipBackground,\n                theme: this.control.theme,\n                clipBounds: { x: left },\n                border: tooltip.border, opacity: tooltip.opacity ? tooltip.opacity : ((this.control.theme === 'Material3' || this.control.theme === 'Material3Dark' || this.control.theme.indexOf('Bootstrap5') > -1) ? 1 : 0.75),\n                template: tooltip.template,\n                textStyle: argsData.textStyle,\n                availableSize: control.availableSize,\n                controlName: 'RangeNavigator',\n                data: {\n                    'start': this.getTooltipContent(this.control.startValue)[0],\n                    'end': this.getTooltipContent(this.control.endValue)[0],\n                    'value': content[0]\n                }\n            }, parent);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Tooltip content processed here.\n     *\n     * @param {number} value - The tooltip value.\n     * @returns {string[]} - An array containing the processed tooltip content.\n     */\n    RangeTooltip.prototype.getTooltipContent = function (value) {\n        var control = this.control;\n        var tooltip = control.tooltip;\n        var xAxis = control.chartSeries.xAxis;\n        var text;\n        var format = tooltip.format || xAxis.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        var valueType = xAxis.valueType;\n        value = (valueType === 'DateTimeCategory' ? parseInt(xAxis.labels[Math.floor(value)], 10) : value);\n        if (valueType.indexOf('DateTime') > -1) {\n            text = (control.intl.getDateFormat({\n                format: format || 'MM/dd/yyyy',\n                type: (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.firstToLowerCase)(control.skeletonType),\n                skeleton: valueType === 'DateTime' ? control.dateTimeModule.getSkeleton(xAxis, null, null) : control.dateTimeCategoryModule.getSkeleton(xAxis, null, null)\n            }))(new Date(value));\n        }\n        else {\n            xAxis.format = control.intl.getNumberFormat({\n                format: isCustom ? '' : format,\n                useGrouping: control.useGroupingSeparator\n            });\n            text = control.doubleModule.formatValue(xAxis, isCustom, format, valueType === 'Logarithmic' ? Math.pow(xAxis.logBase, value) : value);\n        }\n        return [text];\n    };\n    /**\n     * Fadeout animation performed here.\n     *\n     * @returns {void}\n     */\n    RangeTooltip.prototype.fadeOutTooltip = function () {\n        var _this = this;\n        var tooltip = this.control.tooltip;\n        if (tooltip.displayMode === 'OnDemand') {\n            (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.stopTimer)(this.toolTipInterval);\n            if (this.rightTooltip) {\n                this.toolTipInterval = +setTimeout(function () {\n                    _this.leftTooltip.fadeOut();\n                    _this.rightTooltip.fadeOut();\n                }, 1000);\n            }\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - The name of the module.\n     */\n    RangeTooltip.prototype.getModuleName = function () {\n        return 'RangeTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    RangeTooltip.prototype.destroy = function () {\n        // Destroy method called here\n    };\n    return RangeTooltip;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-charts/src/range-navigator/user-interaction/tooltip.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-charts/src/range-navigator/utils/helper.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-charts/src/range-navigator/utils/helper.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataPoint: () => (/* binding */ DataPoint),\n/* harmony export */   getExactData: () => (/* binding */ getExactData),\n/* harmony export */   getNearestValue: () => (/* binding */ getNearestValue),\n/* harmony export */   getRangeValueXByPoint: () => (/* binding */ getRangeValueXByPoint),\n/* harmony export */   getXLocation: () => (/* binding */ getXLocation),\n/* harmony export */   rangeValueToCoefficient: () => (/* binding */ rangeValueToCoefficient)\n/* harmony export */ });\n/**\n * Method for calculating coefficient.\n *\n * @private\n * @param {number} value - The value to calculate the coefficient.\n * @param {VisibleRangeModel} range - The visible range model.\n * @param {boolean} inversed - Indicates whether the range is inversed.\n * @returns {number} - The calculated coefficient.\n */\nfunction rangeValueToCoefficient(value, range, inversed) {\n    var result = (value - range.min) / (range.delta);\n    return inversed ? (1 - result) : result;\n}\n/**\n * Calculates the coefficient for the x-location.\n *\n * @private\n * @param {number} x - The value to calculate the coefficient.\n * @param {VisibleRangeModel} range - The visible range model.\n * @param {number} size - The size for calculate the coefficient.\n * @param {boolean} inversed - Indicates whether the range is inversed.\n * @returns {number} - The calculated coefficient.\n */\nfunction getXLocation(x, range, size, inversed) {\n    x = rangeValueToCoefficient(x, range, inversed);\n    return x * size;\n}\n/**\n * Method for calculating range value by x point.\n *\n * @private\n * @param {number} value - The value for which to calculate the range value.\n * @param {number} size - The size used for calculating the coefficient.\n * @param {VisibleRangeModel} range - The visible range model.\n * @param {boolean} inversed - Indicates whether the range is inversed.\n * @returns {number} - The calculated range value.\n */\nfunction getRangeValueXByPoint(value, size, range, inversed) {\n    var actualValue = !inversed ? value / size : (1 - (value / size));\n    return actualValue * (range.delta) + range.min;\n}\n/**\n * Method for calculating the exact data.\n *\n * @private\n * @param {DataPoint[]} points - The array of data points.\n * @param {number} start - The start value of the range.\n * @param {number} end - The end value of the range.\n * @returns {DataPoint[]} - The calculated data points within the range.\n */\nfunction getExactData(points, start, end) {\n    var selectedData = [];\n    points.map(function (point) {\n        if (point.xValue >= start && point.xValue <= end) {\n            selectedData.push({\n                'x': point.x,\n                'y': point.y\n            });\n        }\n    });\n    return selectedData;\n}\n/**\n * Methods for calculating the nearest value.\n *\n * @private\n * @param {number[]} values - The array of values.\n * @param {number} point - The point for which to find the nearest value.\n * @returns {number} - The nearest value.\n */\nfunction getNearestValue(values, point) {\n    return values.reduce(function (prev, curr) {\n        return (Math.abs(curr - point) < Math.abs(prev - point) ? curr : prev);\n    });\n}\n/**\n * Data point\n *\n * @public\n */\nvar DataPoint = /** @class */ (function () {\n    function DataPoint(x, y, xValue, yValue, visible) {\n        if (visible === void 0) { visible = true; }\n        this.x = x;\n        this.y = y;\n        this.xValue = xValue;\n        this.visible = visible;\n    }\n    return DataPoint;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-charts/src/range-navigator/utils/helper.js?");

/***/ })

}]);