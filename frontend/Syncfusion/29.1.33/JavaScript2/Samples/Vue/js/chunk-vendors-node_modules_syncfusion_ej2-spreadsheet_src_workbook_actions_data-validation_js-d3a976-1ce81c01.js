"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-spreadsheet_src_workbook_actions_data-validation_js-d3a976-1ce81c01"],{

/***/ "./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/actions/data-validation.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/actions/data-validation.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WorkbookDataValidation: () => (/* binding */ WorkbookDataValidation)\n/* harmony export */ });\n/* harmony import */ var _base_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/base/index.js\");\n/* harmony import */ var _common_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/common/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n\n\n\n\n\n\n\n\n\n/**\n * The `WorkbookHyperlink` module is used to handle Hyperlink action in Spreadsheet.\n */\nvar WorkbookDataValidation = /** @class */ (function () {\n    /**\n     * Constructor for WorkbookSort module.\n     *\n     * @param {Workbook} parent - Specifies the parent element.\n     */\n    function WorkbookDataValidation(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * To destroy the sort module.\n     *\n     * @returns {void}\n     */\n    WorkbookDataValidation.prototype.destroy = function () {\n        this.removeEventListener();\n        this.highlightInvalidData = null;\n        this.parent = null;\n    };\n    WorkbookDataValidation.prototype.addEventListener = function () {\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.cellValidation, this.updateValidationHandler, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.addHighlight, this.addHighlightHandler, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.removeHighlight, this.removeHighlightHandler, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.beforeInsert, this.beforeInsertDeleteHandler, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.beforeDelete, this.beforeInsertDeleteHandler, this);\n        this.parent.on(_index__WEBPACK_IMPORTED_MODULE_2__.refreshInsertDelete, this.beforeInsertDeleteHandler, this);\n    };\n    WorkbookDataValidation.prototype.removeEventListener = function () {\n        if (!this.parent.isDestroyed) {\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.cellValidation, this.updateValidationHandler);\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.addHighlight, this.addHighlightHandler);\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.removeHighlight, this.removeHighlightHandler);\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.beforeInsert, this.beforeInsertDeleteHandler);\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.beforeDelete, this.beforeInsertDeleteHandler);\n            this.parent.off(_index__WEBPACK_IMPORTED_MODULE_2__.refreshInsertDelete, this.beforeInsertDeleteHandler);\n        }\n    };\n    WorkbookDataValidation.prototype.updateValidationHandler = function (args) {\n        var _this = this;\n        var sheetName;\n        var lastIndex = args.range.lastIndexOf('!');\n        var sheet;\n        var isActiveSheet;\n        if (lastIndex > -1) {\n            sheetName = args.range.substring(0, lastIndex);\n            args.range = args.range.substring(lastIndex + 1);\n            var sheetIdx = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getSheetIndex)(this.parent, sheetName);\n            sheet = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getSheet)(this.parent, sheetIdx);\n            isActiveSheet = sheetIdx === this.parent.activeSheetIndex;\n        }\n        else {\n            sheet = this.parent.getActiveSheet();\n            isActiveSheet = true;\n        }\n        var rangeInfo = this.getRangeWhenColumnSelected(args.range, sheet);\n        if (sheetName) {\n            args.range = sheetName + '!' + rangeInfo.range;\n        }\n        var indexes = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getSwapRange)((0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getRangeIndexes)(rangeInfo.range));\n        var column;\n        var cell;\n        var frozenRow;\n        var uiRefresh;\n        var viewport;\n        var updateCellHighlightOnUI;\n        var updateColHighlightOnUI;\n        var options = { colIdx: indexes[1] };\n        if (isActiveSheet) {\n            frozenRow = this.parent.frozenRowCount(sheet);\n            var frozenCol_1 = this.parent.frozenColCount(sheet);\n            var parent_1 = this.parent;\n            var viewOffset = parent_1.viewport || {};\n            viewport = parent_1.scrollSettings && parent_1.scrollSettings.enableVirtualization ? [frozenRow + viewOffset.topIndex, frozenCol_1 +\n                    viewOffset.leftIndex, viewOffset.bottomIndex, viewOffset.rightIndex] : [0, 0, sheet.rowCount - 1, sheet.colCount - 1];\n            if (rangeInfo.isFullCol) {\n                var viewportRowIndexes_1 = [[viewport[0], viewport[2]]];\n                if (frozenRow) {\n                    viewportRowIndexes_1.push([(0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getRangeIndexes)(sheet.topLeftCell)[0], frozenRow - 1]);\n                }\n                updateColHighlightOnUI = function (validation) {\n                    if (validation.isHighlighted && ((options.colIdx >= viewport[1] && options.colIdx <= viewport[3]) ||\n                        options.colIdx < frozenCol_1) && !(0,_index__WEBPACK_IMPORTED_MODULE_2__.isHiddenCol)(sheet, options.colIdx)) {\n                        viewportRowIndexes_1.forEach(function (indexes) {\n                            for (options.rowIdx = indexes[0]; options.rowIdx <= indexes[1]; options.rowIdx++) {\n                                if (!(0,_base_index__WEBPACK_IMPORTED_MODULE_0__.isHiddenRow)(sheet, options.rowIdx)) {\n                                    options.cell = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(options.rowIdx, options.colIdx, sheet, false, true);\n                                    options.validation = options.cell.validation ? options.cell.validation : validation;\n                                    _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.updateHighlight, options);\n                                }\n                            }\n                        });\n                    }\n                };\n            }\n            updateCellHighlightOnUI = function (validation) {\n                if (validation.isHighlighted && uiRefresh && ((options.colIdx >= viewport[1] && options.colIdx <= viewport[3]) ||\n                    options.colIdx < frozenCol_1) && !(0,_index__WEBPACK_IMPORTED_MODULE_2__.isHiddenCol)(sheet, options.colIdx)) {\n                    _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.updateHighlight, options);\n                }\n            };\n        }\n        var highlightObj;\n        var isListType;\n        var activeIdx;\n        var updateFormula;\n        if (args.isRemoveValidation) {\n            if (isActiveSheet) {\n                activeIdx = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getRangeIndexes)(sheet.activeCell);\n                if (activeIdx[0] >= indexes[0] && activeIdx[1] >= indexes[1] && activeIdx[0] <= indexes[2] && activeIdx[1] <= indexes[3]) {\n                    var validation = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(activeIdx[0], activeIdx[1], sheet, false, true).validation ||\n                        ((0,_base_index__WEBPACK_IMPORTED_MODULE_0__.checkColumnValidation)(sheet.columns[indexes[1]], activeIdx[0], activeIdx[1]) &&\n                            sheet.columns[activeIdx[1]].validation);\n                    isListType = validation && validation.type === 'List';\n                }\n                options.isRemoveValidation = true;\n                options.isRemoveHighlightedData = true;\n            }\n        }\n        else {\n            if (args.isAction && this.highlightInvalidData) {\n                highlightObj = { isHighlighted: this.highlightInvalidData };\n            }\n            if (args.rules.type === 'List') {\n                activeIdx = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getRangeIndexes)(sheet.activeCell);\n                isListType = isActiveSheet && activeIdx[0] >= indexes[0] && activeIdx[1] >= indexes[1] && activeIdx[0] <= indexes[2] &&\n                    activeIdx[1] <= indexes[3];\n                if (args.rules.value1) {\n                    args.rules.value1 = args.rules.value1.trim();\n                    if (args.rules.value1[args.rules.value1.length - 1] === this.parent.listSeparator) {\n                        args.rules.value1 = args.rules.value1.substring(0, args.rules.value1.length - 1);\n                    }\n                }\n            }\n            else if (args.rules.type === 'Custom' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.isNullOrUndefined)(args.rules.value2)) {\n                delete args.rules.value2;\n            }\n            if (isActiveSheet) {\n                options.removeOnValidData = true;\n            }\n            var isFormulaVal1_1 = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.checkIsFormula)(args.rules.value1);\n            var isFormulaVal2_1 = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.checkIsFormula)(args.rules.value2);\n            updateFormula = function (rowIdx) {\n                // Calculate previous indexes based on the original starting point of the formula\n                if (isFormulaVal1_1) {\n                    options.validation.value1 = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getUpdatedFormula)([rowIdx, options.colIdx, rowIdx, options.colIdx], indexes, sheet, _this.parent, { formula: args.rules.value1 });\n                }\n                if (isFormulaVal2_1) {\n                    options.validation.value2 = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getUpdatedFormula)([rowIdx, options.colIdx, rowIdx, options.colIdx], indexes, sheet, _this.parent, { formula: args.rules.value2 });\n                }\n            };\n        }\n        for (options.colIdx; options.colIdx <= indexes[3]; options.colIdx++) {\n            if (rangeInfo.isFullCol) {\n                if (args.isRemoveValidation) {\n                    column = sheet.columns[options.colIdx];\n                    if (column && column.validation) {\n                        if (isActiveSheet) {\n                            updateColHighlightOnUI(column.validation);\n                        }\n                        delete column.validation;\n                    }\n                }\n                else {\n                    options.validation = Object.assign({}, args.rules, highlightObj);\n                    updateFormula(0);\n                    if (!sheet.columns[options.colIdx]) {\n                        sheet.columns[options.colIdx] = {};\n                    }\n                    sheet.columns[options.colIdx].validation = options.validation;\n                    if (isActiveSheet) {\n                        updateColHighlightOnUI(options.validation);\n                    }\n                    continue;\n                }\n            }\n            for (options.rowIdx = indexes[0]; options.rowIdx <= indexes[2]; options.rowIdx++) {\n                uiRefresh = isActiveSheet && ((options.rowIdx >= viewport[0] && options.rowIdx <= viewport[2]) ||\n                    options.rowIdx < frozenRow) && !(0,_base_index__WEBPACK_IMPORTED_MODULE_0__.isHiddenRow)(sheet, options.rowIdx);\n                if (args.isRemoveValidation) {\n                    column = sheet.columns[options.colIdx];\n                    if (column && column.validation) {\n                        if (options.rowIdx === indexes[2]) {\n                            column.validation.address = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getSplittedAddressForColumn)(column.validation.address, [indexes[0], options.colIdx, indexes[2], options.colIdx], options.colIdx);\n                        }\n                        if (isActiveSheet) {\n                            updateCellHighlightOnUI(column.validation);\n                        }\n                    }\n                    cell = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(options.rowIdx, options.colIdx, sheet);\n                    if (cell && cell.validation && !(0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateCell)(this.parent, sheet, { cell: { validation: {} }, rowIdx: options.rowIdx, colIdx: options.colIdx })) {\n                        if (isActiveSheet) {\n                            updateCellHighlightOnUI(cell.validation);\n                        }\n                        delete cell.validation;\n                    }\n                }\n                else {\n                    options.validation = Object.assign({}, args.rules, highlightObj);\n                    updateFormula(options.rowIdx);\n                    if (!(0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateCell)(this.parent, sheet, { cell: { validation: options.validation }, rowIdx: options.rowIdx, colIdx: options.colIdx })) {\n                        if (isActiveSheet) {\n                            options.cell = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(options.rowIdx, options.colIdx, sheet);\n                            updateCellHighlightOnUI(options.validation);\n                        }\n                    }\n                }\n            }\n        }\n        if (isListType) {\n            cell = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(activeIdx[0], activeIdx[1], sheet, false, true);\n            var validation = cell.validation;\n            if (!validation) {\n                validation = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.checkColumnValidation)(sheet.columns[activeIdx[1]], activeIdx[0], activeIdx[1]) ?\n                    sheet.columns[activeIdx[1]].validation : {};\n            }\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.addListValidationDropdown, { validation: validation, cell: cell, rowIdx: activeIdx[0], colIdx: activeIdx[1], isRefresh: true });\n        }\n    };\n    WorkbookDataValidation.prototype.addHighlightHandler = function (args) {\n        if (args.isAction) {\n            this.highlightInvalidData = true;\n        }\n        this.invalidDataHandler(args.range);\n    };\n    WorkbookDataValidation.prototype.removeHighlightHandler = function (args) {\n        if (args.isAction) {\n            this.highlightInvalidData = null;\n        }\n        this.invalidDataHandler(args.range, true);\n    };\n    WorkbookDataValidation.prototype.invalidDataHandler = function (range, isRemoveHighlightedData) {\n        var _this = this;\n        var cell;\n        var col;\n        var rowIdx;\n        var colIdx;\n        var indexes;\n        var uiRefresh;\n        var isActiveSheet;\n        var isFullRange;\n        var lastColIdx;\n        var row;\n        var parent = this.parent;\n        var sheet = this.parent.getActiveSheet();\n        var frozenRow = this.parent.frozenRowCount(sheet);\n        var frozenCol = this.parent.frozenColCount(sheet);\n        var viewport = parent.scrollSettings && parent.scrollSettings.enableVirtualization ? (parent.viewport ?\n            [frozenRow + parent.viewport.topIndex, frozenCol + parent.viewport.leftIndex, parent.viewport.bottomIndex,\n                parent.viewport.rightIndex] : []) : [0, 0, sheet.rowCount - 1, sheet.colCount - 1];\n        var updateHighlightOnUI = function (validation, col) {\n            if (uiRefresh && ((colIdx >= viewport[1] && colIdx <= viewport[3]) || colIdx < frozenCol) && !(0,_index__WEBPACK_IMPORTED_MODULE_2__.isHiddenCol)(sheet, colIdx)) {\n                _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.updateHighlight, {\n                    isRemoveHighlightedData: isRemoveHighlightedData, rowIdx: rowIdx, colIdx: colIdx, cell: cell,\n                    validation: validation, removeOnValidData: true, col: col\n                });\n            }\n        };\n        var updateHighlightProp;\n        if (isRemoveHighlightedData) {\n            updateHighlightProp = function (validation, updateHighlight) {\n                if (validation.isHighlighted) {\n                    if (updateHighlight) {\n                        delete validation.isHighlighted;\n                    }\n                    updateHighlightOnUI(validation);\n                }\n            };\n        }\n        else {\n            updateHighlightProp = function (validation, updateHighlight, col) {\n                if (updateHighlight) {\n                    validation.isHighlighted = true;\n                }\n                updateHighlightOnUI(validation, col);\n            };\n        }\n        var updateValidationHighlight = function () {\n            for (rowIdx = indexes[0]; rowIdx <= indexes[2]; rowIdx++) {\n                uiRefresh = isActiveSheet && ((rowIdx >= viewport[0] && rowIdx <= viewport[2]) || rowIdx < frozenRow) &&\n                    !(0,_base_index__WEBPACK_IMPORTED_MODULE_0__.isHiddenRow)(sheet, rowIdx);\n                if (isFullRange) {\n                    row = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getRow)(sheet, rowIdx);\n                    lastColIdx = Math.max(row && row.cells ? row.cells.length - 1 : null, sheet.columns.length - 1, indexes[3]);\n                }\n                for (colIdx = indexes[1]; colIdx <= lastColIdx; colIdx++) {\n                    cell = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(rowIdx, colIdx, sheet, false, true);\n                    col = sheet.columns[colIdx];\n                    if (cell.validation) {\n                        updateHighlightProp(cell.validation, true, col);\n                    }\n                    else {\n                        if ((0,_base_index__WEBPACK_IMPORTED_MODULE_0__.checkColumnValidation)(col, rowIdx, colIdx)) {\n                            updateHighlightProp(col.validation, rowIdx === indexes[2]);\n                        }\n                    }\n                }\n            }\n        };\n        if (range) {\n            if (range.includes('!')) {\n                var sheetIdx = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getSheetIndexFromAddress)(this.parent, range);\n                sheet = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getSheet)(this.parent, sheetIdx);\n                range = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getRangeFromAddress)(range);\n                isActiveSheet = sheetIdx === this.parent.activeSheetIndex;\n            }\n            else {\n                isActiveSheet = true;\n            }\n            indexes = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getSwapRange)((0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getRangeIndexes)(this.getRangeWhenColumnSelected((0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getUpdatedRange)(sheet, range), sheet).range));\n            lastColIdx = indexes[3];\n            updateValidationHighlight();\n        }\n        else {\n            isFullRange = true;\n            this.parent.sheets.forEach(function (model, sheetIdx) {\n                sheet = model;\n                indexes = [0, 0, Math.max(sheet.rows.length - 1, viewport[2]), Math.max(sheet.usedRange.colIndex, viewport[3])];\n                isActiveSheet = sheetIdx === _this.parent.activeSheetIndex;\n                updateValidationHighlight();\n            });\n        }\n    };\n    WorkbookDataValidation.prototype.beforeInsertDeleteHandler = function (args) {\n        var _this = this;\n        var isSheetAction;\n        if (args.modelType === 'Sheet') {\n            if (args.name !== _index__WEBPACK_IMPORTED_MODULE_2__.refreshInsertDelete) {\n                return;\n            }\n            isSheetAction = true;\n        }\n        else if (args.name === _index__WEBPACK_IMPORTED_MODULE_2__.refreshInsertDelete) {\n            return;\n        }\n        var isInsert = args.name === _common_index__WEBPACK_IMPORTED_MODULE_1__.beforeInsert;\n        var eventArgs;\n        var endIdx;\n        var curSheet;\n        var prevIdx;\n        if (isInsert) {\n            curSheet = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getSheet)(this.parent, args.activeSheetIndex);\n            endIdx = args.index + (args.model.length - 1);\n            eventArgs = { insertDeleteArgs: { startIndex: args.index, endIndex: endIdx, modelType: args.modelType, isInsert: true,\n                    sheet: curSheet }, sheetIdx: args.activeSheetIndex };\n            prevIdx = args.index - 1;\n        }\n        else if (isSheetAction) {\n            var sheetNames = [];\n            var sheetId = void 0;\n            var formulaArgs = {\n                action: 'getSheetInfo', sheetInfo: []\n            };\n            this.parent.notify(_index__WEBPACK_IMPORTED_MODULE_2__.workbookFormulaOperation, formulaArgs);\n            for (var idx = args.startIndex; idx <= args.endIndex; idx++) {\n                sheetId = this.parent.sheets[idx].id;\n                for (var i = 0; i < formulaArgs.sheetInfo.length; i++) {\n                    if (formulaArgs.sheetInfo[i].index === sheetId) {\n                        sheetNames.push(formulaArgs.sheetInfo[i].sheet);\n                        break;\n                    }\n                }\n            }\n            eventArgs = { sheetNames: sheetNames };\n        }\n        else {\n            curSheet = args.model;\n            eventArgs = { insertDeleteArgs: { startIndex: args.start, modelType: args.modelType,\n                    endIndex: args.end, sheet: curSheet }, sheetIdx: (0,_index__WEBPACK_IMPORTED_MODULE_2__.getSheetIndexFromId)(this.parent, curSheet.id) };\n        }\n        var updateFormula = function (validation) {\n            if ((0,_common_index__WEBPACK_IMPORTED_MODULE_1__.checkIsFormula)(validation.value1) && (!eventArgs.otherSheet || validation.value1.includes(curSheet.name))) {\n                eventArgs.cell = { formula: validation.value1 };\n                _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.getUpdatedFormulaOnInsertDelete, eventArgs);\n                validation.value1 = eventArgs.cell.formula;\n            }\n            if ((0,_common_index__WEBPACK_IMPORTED_MODULE_1__.checkIsFormula)(validation.value2) && (!eventArgs.otherSheet || validation.value2.includes(curSheet.name))) {\n                eventArgs.cell = { formula: validation.value2 };\n                _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.getUpdatedFormulaOnInsertDelete, eventArgs);\n                validation.value2 = eventArgs.cell.formula;\n            }\n        };\n        var isColAction = args.modelType === 'Column';\n        var updateValidationToInsertedModel = function (validation, isColUpdate) {\n            if (validation) {\n                eventArgs.insertDeleteArgs.forceUpdate = true;\n                for (var insertIdx = args.index; insertIdx <= endIdx; insertIdx++) {\n                    validation = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__.extend)({}, validation);\n                    updateFormula(validation);\n                    if (isColUpdate) {\n                        (0,_index__WEBPACK_IMPORTED_MODULE_2__.setColumn)(curSheet, insertIdx, { validation: validation });\n                    }\n                    else if (isColAction) {\n                        (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.setCell)(rowIdx, insertIdx, curSheet, { validation: validation }, true);\n                    }\n                    else {\n                        (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.setCell)(insertIdx, colIdx, curSheet, { validation: validation }, true);\n                    }\n                }\n                delete eventArgs.insertDeleteArgs.forceUpdate;\n            }\n        };\n        var cell;\n        var column;\n        var endRowCount;\n        var endColCount;\n        var rowIdx;\n        var colIdx;\n        var isInsertOnCurSheet;\n        this.parent.sheets.forEach(function (sheet, sheetIdx) {\n            if (isSheetAction) {\n                if (sheetIdx >= args.startIndex && sheetIdx <= args.endIndex) {\n                    return;\n                }\n            }\n            else {\n                if (sheetIdx === eventArgs.sheetIdx) {\n                    isInsertOnCurSheet = isInsert;\n                    delete eventArgs.otherSheet;\n                    delete eventArgs.formulaSheet;\n                }\n                else {\n                    eventArgs.otherSheet = true;\n                    eventArgs.formulaSheet = sheet;\n                    isInsertOnCurSheet = false;\n                }\n            }\n            endRowCount = sheet.usedRange.rowIndex + 1;\n            for (colIdx = 0, endColCount = sheet.usedRange.colIndex + 1; colIdx < endColCount; colIdx++) {\n                if (isInsertOnCurSheet && isColAction && colIdx >= args.index && colIdx <= endIdx) {\n                    continue;\n                }\n                column = sheet.columns && sheet.columns[colIdx];\n                if (column && column.validation) {\n                    updateFormula(column.validation);\n                    if (isInsertOnCurSheet && isColAction && prevIdx === colIdx) {\n                        updateValidationToInsertedModel(column.validation, true);\n                    }\n                }\n                for (rowIdx = 0; rowIdx < endRowCount; rowIdx++) {\n                    cell = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(rowIdx, colIdx, sheet, false, true);\n                    if (cell.validation && (!isInsertOnCurSheet || isColAction || rowIdx < args.index || rowIdx > endIdx)) {\n                        updateFormula(cell.validation);\n                        if (isInsertOnCurSheet && prevIdx === (isColAction ? colIdx : rowIdx)) {\n                            updateValidationToInsertedModel(cell.validation);\n                        }\n                    }\n                }\n            }\n        });\n    };\n    WorkbookDataValidation.prototype.getRangeWhenColumnSelected = function (range, sheet) {\n        var isFullCol;\n        var colNames = range.split(':');\n        if (range.match(/\\D/g) && !range.match(/[0-9]/g)) {\n            colNames[0] += 1;\n            colNames[1] += sheet.rowCount;\n            range = colNames[0] + ':' + colNames[1];\n            isFullCol = true;\n        }\n        else if (!range.match(/\\D/g) && range.match(/[0-9]/g)) {\n            colNames[0] = 'A' + colNames[0];\n            colNames[1] = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(0, sheet.colCount - 1).replace(/[0-9]/g, '') + colNames[1];\n            range = colNames[0] + ':' + colNames[1];\n        }\n        return { range: range, isFullCol: isFullCol };\n    };\n    /**\n     * Gets the module name.\n     *\n     * @returns {string} string\n     */\n    WorkbookDataValidation.prototype.getModuleName = function () {\n        return 'workbookDataValidation';\n    };\n    return WorkbookDataValidation;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/actions/data-validation.js?");

/***/ })

}]);