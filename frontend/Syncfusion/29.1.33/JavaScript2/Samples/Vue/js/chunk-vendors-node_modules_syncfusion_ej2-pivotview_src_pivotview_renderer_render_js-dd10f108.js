"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-pivotview_src_pivotview_renderer_render_js-dd10f108"],{

/***/ "./node_modules/@syncfusion/ej2-pivotview/src/pivotview/renderer/render.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pivotview/src/pivotview/renderer/render.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Render: () => (/* binding */ Render)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-grids */ \"./node_modules/@syncfusion/ej2-grids/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/base/css-constant */ \"./node_modules/@syncfusion/ej2-pivotview/src/common/base/css-constant.js\");\n/* harmony import */ var _common_base_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/base/constant */ \"./node_modules/@syncfusion/ej2-pivotview/src/common/base/constant.js\");\n/* harmony import */ var _common_popups_aggregate_menu__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/popups/aggregate-menu */ \"./node_modules/@syncfusion/ej2-pivotview/src/common/popups/aggregate-menu.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../base/util */ \"./node_modules/@syncfusion/ej2-pivotview/src/base/util.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Module to render PivotGrid control\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module\n     *\n     * @param {PivotView} parent - Instance of pivot table.\n     */\n    function Render(parent) {\n        /** @hidden */\n        this.isAutoFitEnabled = false;\n        /** @hidden */\n        this.pivotColumns = [];\n        /** @hidden */\n        this.indentCollection = {};\n        this.colPos = 0;\n        this.lastSpan = 0;\n        this.lvlCollection = {};\n        this.hierarchyCollection = {};\n        this.lvlPosCollection = {};\n        this.hierarchyPosCollection = {};\n        this.position = 0;\n        this.measurePos = 0;\n        this.maxMeasurePos = 0;\n        this.hierarchyCount = 0;\n        this.actualText = '';\n        this.drilledLevelInfo = {};\n        this.parent = parent;\n        this.resColWidth = (this.parent.showGroupingBar && this.parent.groupingBarModule) ? (this.parent.isAdaptive ? 180 : 250) :\n            (this.parent.isAdaptive ? 140 : 200);\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.gridSettings = this.parent.gridSettings;\n        this.formatList = this.getFormatList();\n        this.aggMenu = new _common_popups_aggregate_menu__WEBPACK_IMPORTED_MODULE_4__.AggregateMenu(this.parent);\n    }\n    /** @hidden */\n    Render.prototype.render = function (refreshRequired) {\n        if (refreshRequired) {\n            this.initProperties();\n        }\n        this.resColWidth = this.parent.isTabular ? this.gridSettings.columnWidth :\n            (this.parent.showGroupingBar && this.parent.groupingBarModule) ? (this.parent.isAdaptive ? 180 : 250) :\n                (this.parent.isAdaptive ? 140 : 200);\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.gridSettings = this.parent.gridSettings;\n        this.formatList = this.getFormatList();\n        this.parent.gridCellCollection = {};\n        this.injectGridModules(this.parent);\n        this.rowStartPos = this.getRowStartPos();\n        if (this.parent.grid && this.parent.grid.element && this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GRID_CLASS)) {\n            this.parent.notEmpty = true;\n            if (!this.engine.isEngineUpdated) {\n                this.engine.headerContent = this.frameDataSource('header');\n                this.engine.valueContent = this.frameDataSource('value');\n            }\n            else {\n                if (this.parent.dataType !== 'olap') {\n                    if (this.parent.isTabular) {\n                        this.engine.headerContent = this.frameDataSource('header');\n                    }\n                    if (this.parent.enableValueSorting || this.parent.isTabular) {\n                        this.engine.valueContent = this.frameDataSource('value');\n                    }\n                }\n            }\n            this.engine.isEngineUpdated = false;\n            var frozenColumnsLength = this.parent.isTabular ? (this.parent.engineModule.rowMaxLevel + 1) : 1;\n            this.parent.grid.setProperties({\n                frozenColumns: frozenColumnsLength, columns: this.frameStackedHeaders(), dataSource: ((this.parent.dataType === 'olap' && this.parent.dataSourceSettings.url !== '') ? true :\n                    (this.parent.dataSourceSettings.dataSource && this.parent.engineModule.data.length > 0 &&\n                        this.parent.dataSourceSettings.values.length > 0)) && !this.engine.isEmptyData ?\n                    this.frameGridDataSource(this.engine.valueContent) : this.frameDataSource('value')\n            }, true);\n            this.parent.grid.notify('datasource-modified', {});\n            if (this.parent.isScrolling) {\n                this.parent.resizeInfo = {};\n            }\n            this.parent.grid.width = this.calculateGridWidth();\n            this.parent.grid.refreshColumns();\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.setGridRowWidth();\n            }\n            if (this.isAutoFitEnabled) {\n                this.addPivotAutoFitClass();\n            }\n            else {\n                this.removePivotAutoFitClass();\n            }\n            if (!this.gridSettings.allowAutoResizing && this.parent.showGroupingBar && this.parent.groupingBarModule && this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.refreshUI();\n            }\n            if (!this.parent.isScrolling) {\n                this.calculateGridHeight(true);\n            }\n            //this.parent.isScrolling = false;\n        }\n        else {\n            this.parent.element.innerHTML = '';\n            this.bindGrid(this.parent, (this.engine.isEmptyData ? true : false));\n            var gridElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: this.parent.element.id + '_grid' });\n            this.parent.element.appendChild(gridElement);\n            this.parent.grid.isStringTemplate = true;\n            this.parent.grid.appendTo(gridElement);\n        }\n        this.parent.grid.on(_syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.headerRefreshed, this.refreshHeader, this);\n    };\n    Render.prototype.initProperties = function () {\n        this.rowStartPos = undefined;\n        this.maxIndent = undefined;\n        this.resColWidth = undefined;\n        this.isOverflows = undefined;\n        this.indentCollection = {};\n        this.formatList = undefined;\n        this.colPos = 0;\n        this.colGrandPos = undefined;\n        this.rowGrandPos = undefined;\n        this.lastSpan = 0;\n        this.field = undefined;\n        this.fieldCaption = undefined;\n        this.lvlCollection = {};\n        this.hierarchyCollection = {};\n        this.lvlPosCollection = {};\n        this.hierarchyPosCollection = {};\n        this.position = 0;\n        this.measurePos = 0;\n        this.maxMeasurePos = 0;\n        this.hierarchyCount = 0;\n        this.actualText = '';\n        this.timeOutObj = undefined;\n    };\n    Render.prototype.refreshHeader = function () {\n        var mCont = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.CONTENT_VIRTUALTABLE_DIV);\n        if (this.parent.enableVirtualization && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(mCont)) {\n            var virtualTable = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.closest)(mCont, '.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GRID_CONTENT).querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.VIRTUALTABLE_DIV);\n            var mHdr = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MOVABLEHEADER_DIV);\n            var vtr = mCont.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.VIRTUALTRACK_DIV);\n            this.parent.virtualHeaderDiv = mHdr.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.VIRTUALTRACK_DIV);\n            if (mHdr.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.VIRTUALTRACK_DIV)) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.remove)(mHdr.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.VIRTUALTRACK_DIV));\n            }\n            else {\n                this.parent.virtualHeaderDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.VIRTUALTRACK_DIV });\n            }\n            mHdr.appendChild(this.parent.virtualHeaderDiv);\n            if (vtr) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.setStyleAttribute)(this.parent.virtualHeaderDiv, { height: 0, width: vtr.style.width });\n            }\n            if (mHdr.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.TABLE)) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.setStyleAttribute)(mHdr.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.TABLE), {\n                    transform: (mCont.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.TABLE).style.transform).split(',')[0] + ',' + 0 + 'px)'\n                });\n                var freezedCellValue = parseInt(mHdr.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.TABLE)\n                    .style.transform.split('(')[1].split(',')[0].split('px')[0], 10);\n                if (this.parent.enableRtl) {\n                    this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.FREEZED_CELL).style.right\n                        = Number(freezedCellValue) + 'px';\n                }\n                else {\n                    this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.FREEZED_CELL).style.left\n                        = Number(-freezedCellValue) + 'px';\n                }\n            }\n            var ele = this.parent.isAdaptive ? mCont :\n                (virtualTable && (virtualTable.style.display !== 'none')) ? virtualTable : mCont.parentElement;\n            mHdr.scrollLeft = ele.scrollLeft;\n        }\n    };\n    /** @hidden */\n    Render.prototype.bindGrid = function (parent, isEmpty) {\n        this.injectGridModules(parent);\n        this.parent.grid = new _syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.Grid({\n            cssClass: this.parent.cssClass,\n            frozenColumns: 1,\n            frozenRows: 0,\n            enableHover: false,\n            dataSource: isEmpty ? this.frameEmptyData() : this.frameDataSource('value'),\n            columns: isEmpty ? this.frameEmptyColumns() : this.frameStackedHeaders(),\n            height: isEmpty ? 'auto' : this.calculateGridHeight(),\n            width: isEmpty ? (this.gridSettings.allowAutoResizing ? this.parent.width : 400) : this.calculateGridWidth(),\n            locale: parent.locale,\n            enableRtl: parent.enableRtl,\n            allowExcelExport: parent.allowExcelExport,\n            allowPdfExport: parent.allowPdfExport,\n            allowResizing: this.gridSettings.allowResizing,\n            allowTextWrap: this.gridSettings.allowTextWrap,\n            clipMode: this.gridSettings.clipMode,\n            allowReordering: this.gridSettings.allowReordering,\n            allowSelection: this.gridSettings.allowSelection,\n            contextMenuItems: this.gridSettings.contextMenuItems,\n            selectedRowIndex: this.gridSettings.selectedRowIndex,\n            selectionSettings: this.gridSettings.selectionSettings,\n            textWrapSettings: this.gridSettings.textWrapSettings,\n            printMode: this.gridSettings.printMode,\n            rowHeight: this.gridSettings.rowHeight,\n            gridLines: this.gridSettings.gridLines,\n            contextMenuClick: this.contextMenuClick.bind(this),\n            contextMenuOpen: this.contextMenuOpen.bind(this),\n            beforeCopy: this.gridSettings.beforeCopy ? this.gridSettings.beforeCopy.bind(this.parent) : undefined,\n            beforePrint: this.gridSettings.beforePrint ? this.gridSettings.beforePrint.bind(this.parent) : undefined,\n            printComplete: this.gridSettings.printComplete ? this.gridSettings.printComplete.bind(this.parent) : undefined,\n            rowSelecting: this.gridSettings.rowSelecting ? this.gridSettings.rowSelecting.bind(this.parent) : undefined,\n            rowSelected: this.rowSelected.bind(this),\n            rowDeselecting: this.gridSettings.rowDeselecting ? this.gridSettings.rowDeselecting.bind(this.parent) : undefined,\n            rowDeselected: this.rowDeselected.bind(this),\n            cellSelecting: this.cellSelecting.bind(this),\n            cellSelected: this.cellSelected.bind(this),\n            cellDeselecting: this.gridSettings.cellDeselecting ? this.gridSettings.cellDeselecting.bind(this.parent) : undefined,\n            cellDeselected: this.cellDeselected.bind(this),\n            resizeStart: this.gridSettings.resizeStart ? this.gridSettings.resizeStart.bind(this.parent) : undefined,\n            columnDragStart: this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined,\n            columnDrag: this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined,\n            columnDrop: this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined,\n            beforeExcelExport: this.beforeExcelExport.bind(this),\n            resizing: this.setGroupWidth.bind(this),\n            resizeStop: this.onResizeStop.bind(this),\n            queryCellInfo: this.queryCellInfo.bind(this),\n            dataBound: this.dataBound.bind(this),\n            headerCellInfo: this.headerCellInfo.bind(this),\n            excelHeaderQueryCellInfo: this.excelHeaderQueryCellInfo.bind(this),\n            pdfHeaderQueryCellInfo: this.pdfHeaderQueryCellInfo.bind(this),\n            excelQueryCellInfo: this.excelQueryCellInfo.bind(this),\n            pdfQueryCellInfo: this.pdfQueryCellInfo.bind(this),\n            beforePdfExport: this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined,\n            pdfExportComplete: this.pdfExportComplete.bind(this),\n            excelExportComplete: this.excelExportComplete.bind(this),\n            actionComplete: this.actionComplete.bind(this)\n        });\n        this.parent.grid.on('header-refreshed', this.headerRefreshed.bind(this));\n        this.parent.grid.on('export-DataBound', this.excelDataBound.bind(this));\n    };\n    Render.prototype.actionComplete = function (args) {\n        if (args && args.requestType === 'refresh' && this.isAutoFitEnabled) {\n            this.removePivotAutoFitClass();\n        }\n    };\n    /**\n     * It is used to add the pivot autofit class\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.addPivotAutoFitClass = function () {\n        if (!document.body.classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_VIEW_CLASS)) {\n            document.body.classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_VIEW_CLASS);\n        }\n        if (!document.body.classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_VIEW_AUTOFIT)) {\n            document.body.classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_VIEW_AUTOFIT);\n        }\n    };\n    /**\n     * It is used to remove the pivot autofit class\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.removePivotAutoFitClass = function () {\n        if (document.body.classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_VIEW_CLASS)) {\n            document.body.classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_VIEW_CLASS);\n        }\n        if (document.body.classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_VIEW_AUTOFIT)) {\n            document.body.classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_VIEW_AUTOFIT);\n        }\n    };\n    Render.prototype.headerRefreshed = function () {\n        var mHdr = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MOVABLEHEADER_DIV);\n        if (this.parent.lastGridSettings && Object.keys(this.parent.lastGridSettings).indexOf('allowResizing') > -1 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(mHdr) && mHdr.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.TABLE) &&\n            this.parent.showGroupingBar && this.parent.groupingBarModule && this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUPING_BAR_CLASS)) {\n            this.parent.lastGridSettings = undefined;\n            this.parent.groupingBarModule.setGridRowWidth();\n        }\n    };\n    Render.prototype.beforeExcelExport = function (args) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args.gridObject.columns) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.pivotColumns)) {\n            args.gridObject.columns[args.gridObject.columns.length - 1].width =\n                this.parent.pivotColumns[this.parent.pivotColumns.length - 1].width;\n        }\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.beforeExcelExport, args);\n    };\n    Render.prototype.rowSelected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.rowSelected, args);\n    };\n    Render.prototype.rowDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.rowDeselected, args);\n    };\n    Render.prototype.cellSelected = function (args) {\n        if (this.parent.rowRangeSelection.enable) {\n            this.parent.grid.selectionModule.selectRowsByRange(this.parent.rowRangeSelection.startIndex, this.parent.rowRangeSelection.endIndex);\n            this.parent.rowRangeSelection.enable = false;\n        }\n        else {\n            this.parent.renderModule.selected();\n            this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.selected, args);\n        }\n    };\n    Render.prototype.cellSelecting = function (args) {\n        var target = this.parent.grid.selectionModule['actualTarget'];\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(target) && (target.classList.contains('e-expand') || target.classList.contains('e-collapse'))) {\n            args.cancel = true;\n        }\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.selecting, args);\n    };\n    Render.prototype.cellDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.cellDeselected, args);\n    };\n    Render.prototype.queryCellInfo = function (args) {\n        this.parent.renderModule.rowCellBoundEvent(args);\n    };\n    Render.prototype.headerCellInfo = function (args) {\n        this.parent.renderModule.columnCellBoundEvent(args);\n    };\n    Render.prototype.excelHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.excelColumnEvent(args);\n    };\n    Render.prototype.pdfQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfRowEvent(args);\n    };\n    Render.prototype.excelQueryCellInfo = function (args) {\n        this.parent.renderModule.excelRowEvent(args);\n    };\n    Render.prototype.pdfHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfColumnEvent(args);\n    };\n    Render.prototype.pdfExportComplete = function (args) {\n        if (this.parent.lastColumn !== undefined && this.parent.lastColumn &&\n            this.parent.lastColumn.width !== 'auto') {\n            this.parent.lastColumn.width = 'auto';\n            this.parent.lastColumn = undefined;\n        }\n        var exportCompleteEventArgs = {\n            type: 'PDF',\n            promise: args.promise\n        };\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.exportComplete, exportCompleteEventArgs);\n    };\n    Render.prototype.excelExportComplete = function (args) {\n        if (this.parent.lastColumn !== undefined && this.parent.lastColumn &&\n            this.parent.lastColumn.width !== 'auto') {\n            this.parent.lastColumn.width = 'auto';\n            this.parent.lastColumn = undefined;\n        }\n        var exportCompleteEventArgs = {\n            type: 'Excel/CSV',\n            promise: args.promise\n        };\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.exportComplete, exportCompleteEventArgs);\n    };\n    Render.prototype.dataBound = function () {\n        // if ((this.parent.dataSourceSettings.valueAxis === 'row' ||\n        //     !(this.parent.dataType === 'pivot' && this.parent.dataSourceSettings.valueAxis === 'column' && this.parent.engineModule && !this.parent.engineModule.isLastHeaderHasMeasures)) &&\n        //     this.parent.element.querySelector('.e-firstcell') && !(this.parent.dataSourceSettings.values.length === 1 && this.parent.dataSourceSettings.columns.length > 0)) {\n        //     if (this.parent.enableRtl) {\n        //         (this.parent.element.querySelector('.e-firstcell') as HTMLElement).style.borderRight = 'none';\n        //     } else {\n        //         (this.parent.element.querySelector('.e-firstcell') as HTMLElement).style.borderLeft = 'none';\n        //     }\n        // }\n        if (this.parent.notEmpty) {\n            this.calculateGridHeight(true);\n        }\n        this.parent.isScrolling = false;\n        this.setFocusOnLastCell();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent['renderReactTemplates'])) {\n            this.parent['renderReactTemplates']();\n        }\n        if (this.parent.isInitial) {\n            this.parent.isInitial = false;\n            this.parent.refreshData();\n            if (this.parent.enableVirtualization) {\n                this.parent.onContentReady();\n            }\n        }\n        this.parent.notify(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.contentReady, {});\n    };\n    Render.prototype.setFocusOnLastCell = function () {\n        if (this.parent.keyboardModule && this.parent.keyboardModule.event &&\n            this.parent.keyboardModule.event.target.nodeName === 'TD') {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.setFocusedElement(this.parent.keyboardModule.event.target);\n            gridFocus.focus(this.parent.keyboardModule.event);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([this.parent.keyboardModule.event.target], ['e-focused', 'e-focus']);\n            this.parent.keyboardModule.event.target.setAttribute('tabindex', '0');\n            this.parent.keyboardModule.event = undefined;\n        }\n    };\n    Render.prototype.getCellElement = function (target) {\n        var currentElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.closest)(target, 'td');\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(currentElement)) {\n            currentElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.closest)(target, 'th');\n        }\n        return currentElement;\n    };\n    Render.prototype.contextMenuOpen = function (args) {\n        var _this = this;\n        if (args.element && this.parent.cssClass) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([args.element.parentElement], this.parent.cssClass);\n        }\n        var _loop_1 = function (item) {\n            var cellTarget = this_1.parent.lastCellClicked ? this_1.parent.lastCellClicked :\n                (this_1.parent.isAdaptive ? args.event.target : this_1.parent.lastCellClicked);\n            var elem = this_1.getCellElement(cellTarget);\n            var bool = void 0;\n            var isGroupElement = void 0;\n            if (!elem || (elem && Number(elem.getAttribute('index')) === 0 && parseInt(elem.getAttribute('aria-colindex'), 10) - 1 === 0)) {\n                args.cancel = true;\n                return { value: void 0 };\n            }\n            if (elem.classList.contains('e-valuesheader') || elem.classList.contains('e-stot')) {\n                bool = true;\n            }\n            if (this_1.parent.allowGrouping && this_1.parent.groupingModule && !this_1.validateField(elem)) {\n                isGroupElement = true;\n            }\n            var rowIndex = Number(elem.getAttribute('index'));\n            var colIndex = parseInt(elem.getAttribute('aria-colindex'), 10) - 1;\n            var pivotValue1 = this_1.parent.pivotValues[rowIndex][colIndex];\n            var selectedID = item.id;\n            switch (selectedID) {\n                case this_1.parent.element.id + '_expand':\n                    if (elem.querySelectorAll('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.EXPAND).length > 0) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.selectAll)('#' + this_1.parent.element.id + '_expand', args.element)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_expand', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_expand', args.element).classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_expand', args.element).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_expand', args.element).classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_HIDE)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_expand', args.element).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_HIDE);\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_collapse', args.element).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_expand', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_HIDE);\n                        }\n                        else {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_expand', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_collapse':\n                    if (elem.querySelectorAll('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.COLLAPSE).length > 0) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_expand', args.element)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_expand', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_collapse', args.element).classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_collapse', args.element).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_collapse', args.element).classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_HIDE)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_collapse', args.element).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_HIDE);\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_expand', args.element).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_collapse', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_HIDE);\n                        }\n                        else {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_collapse', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_custom_group':\n                    if (!isGroupElement && args.items.length === 2) {\n                        args.cancel = true;\n                    }\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.selectAll)('#' + this_1.parent.element.id + '_custom_group', args.element)) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_custom_group', args.element)], _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.selectAll)('#' + this_1.parent.element.id + '_custom_group', args.element)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_custom_group', args.element)], _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_custom_ungroup':\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.selectAll)('#' + this_1.parent.element.id + '_custom_ungroup', args.element)) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_custom_ungroup', args.element)], _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        var isUngroupOption = false;\n                        var fieldName = elem.getAttribute('fieldname');\n                        var groupField = _base_util__WEBPACK_IMPORTED_MODULE_5__.PivotUtil.getFieldByName(fieldName, this_1.parent.dataSourceSettings.groupSettings);\n                        if (groupField && groupField.type === 'Custom' || (this_1.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_custom_group') > -1)) {\n                            groupField = _base_util__WEBPACK_IMPORTED_MODULE_5__.PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), this_1.parent.dataSourceSettings.groupSettings);\n                            if (groupField) {\n                                var cell = this_1.parent.engineModule.pivotValues[Number(elem.getAttribute('index'))][parseInt(elem.getAttribute('aria-colindex'), 10) - 1];\n                                var selectedCellsInfo = this_1.parent.groupingModule.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n                                selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(),\n                                    cellInfo: cell });\n                                var selectedOptions = this_1.parent.groupingModule.getSelectedOptions(selectedCellsInfo);\n                                for (var _i = 0, _a = groupField.customGroups; _i < _a.length; _i++) {\n                                    var customGroup = _a[_i];\n                                    if (selectedOptions.indexOf(customGroup.groupName) > -1) {\n                                        isUngroupOption = true;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        else if (groupField && (groupField.type === 'Date' || groupField.type === 'Number') ||\n                            (this_1.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_date_group') > -1)) {\n                            isUngroupOption = true;\n                        }\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.selectAll)('#' + this_1.parent.element.id + '_custom_ungroup', args.element) && isUngroupOption) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_custom_ungroup', args.element)], _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_drillthrough':\n                    if (!this_1.parent.allowDrillThrough) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_drillthrough', args.element)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_drillthrough', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                    }\n                    else if (!(elem.classList.contains('e-summary'))) {\n                        if (elem.innerText === '') {\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_drillthrough', args.element)) {\n                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_drillthrough', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                            }\n                        }\n                    }\n                    else {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_drillthrough', args.element).classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_drillthrough', args.element).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_sortasc':\n                    if (!this_1.parent.enableValueSorting) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortasc', args.element)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortasc', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-descending').length > 0) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortdesc', args.element)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                        else {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortasc', args.element).classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortasc', args.element).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                    }\n                    else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE)) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_sortdesc':\n                    if (!this_1.parent.enableValueSorting) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortdesc', args.element)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-ascending').length > 0) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortasc', args.element)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortasc', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                        else {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortasc', args.element).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                        }\n                    }\n                    else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortasc', args.element).classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE)) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_sortasc', args.element).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_CalculatedField':\n                    if (!this_1.parent.allowCalculatedField) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_CalculatedField', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_pdf':\n                    if (!this_1.parent.allowPdfExport) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_pdf', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_excel':\n                    if (!this_1.parent.allowExcelExport) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_excel', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_csv':\n                    if (!this_1.parent.allowExcelExport) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_csv', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_exporting':\n                    if ((!this_1.parent.allowExcelExport) && (!this_1.parent.allowPdfExport)) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_exporting', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_aggregate':\n                    if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_aggregate', args.element)) &&\n                        (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_aggregate', args.element).classList.contains(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE))) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + this_1.parent.element.id + '_aggregate', args.element).classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                    }\n                    if ((elem.classList.contains('e-valuesheader') || elem.classList.contains('e-valuescontent') ||\n                        (elem.classList.contains('e-stot') && elem.classList.contains('e-rowsheader'))) && this_1.parent.dataType !== 'olap') {\n                        var fieldType_1;\n                        if (!(elem.innerText === '')) {\n                            fieldType_1 = this_1.parent.engineModule.fieldList[pivotValue1.actualText.toString()].type;\n                        }\n                        var eventArgs = {\n                            cancel: false, fieldName: pivotValue1.actualText.toString(),\n                            aggregateTypes: this_1.getMenuItem(fieldType_1).slice(),\n                            displayMenuCount: 7\n                        };\n                        this_1.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.aggregateMenuOpen, eventArgs, function (observedArgs) {\n                            if (!observedArgs.cancel && !(elem.innerText === '')) {\n                                var menuItem = [];\n                                var checkDuplicates = [];\n                                for (var i = 0; i < observedArgs.aggregateTypes.length; i++) {\n                                    var key = observedArgs.aggregateTypes[i];\n                                    if (fieldType_1 !== 'number') {\n                                        if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                                            menuItem.push({ text: _this.parent.localeObj.getConstant(key), id: _this.parent.element.id + '_Agg' + key });\n                                            checkDuplicates.push(key);\n                                        }\n                                    }\n                                    else {\n                                        if ((_this.parent.getAllSummaryType().indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                                            menuItem.push({ text: _this.parent.localeObj.getConstant(key), id: _this.parent.element.id + '_Agg' + key });\n                                            checkDuplicates.push(key);\n                                        }\n                                    }\n                                }\n                                if (menuItem.length > observedArgs.displayMenuCount) {\n                                    menuItem.splice(observedArgs.displayMenuCount);\n                                    menuItem.push({\n                                        text: _this.parent.localeObj.getConstant('MoreOption'),\n                                        id: _this.parent.element.id + '_Agg' + 'MoreOption'\n                                    });\n                                }\n                                if (menuItem && menuItem.length >= 1) {\n                                    item.items = menuItem;\n                                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.select)('#' + _this.parent.element.id + '_aggregate', args.element).classList.remove(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.MENU_DISABLE);\n                                }\n                            }\n                        });\n                    }\n                    break;\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var state_1 = _loop_1(item);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.contextMenuOpen, args);\n    };\n    Render.prototype.getMenuItem = function (isStringField) {\n        var menuItems = [];\n        for (var i = 0; i < this.parent.aggregateTypes.length; i++) {\n            var key = this.parent.aggregateTypes[i];\n            if (isStringField !== 'string') {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n            else {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n        }\n        return menuItems;\n    };\n    Render.prototype.contextMenuClick = function (args) {\n        var _this = this;\n        // this.parent.gridSettings.contextMenuClick();\n        var target = this.parent.lastCellClicked;\n        var selected = args.item.id;\n        var exportArgs = {};\n        var ele = this.getCellElement(target);\n        var rowIndx = Number(ele.getAttribute('index'));\n        var colIndx = parseInt(ele.getAttribute('aria-colindex'), 10) - 1;\n        var pivotValue = this.parent.pivotValues[rowIndx][colIndx];\n        var aggregateType;\n        if (args.item.id.indexOf(this.parent.element.id + '_Agg') > -1) {\n            this.field = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].id;\n            this.fieldCaption = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].caption;\n            aggregateType = args.item.id.split('_Agg')[1];\n        }\n        switch (selected) {\n            case this.parent.element.id + '_pdf':\n                exportArgs = {\n                    pdfDoc: undefined,\n                    isBlob: false,\n                    isMultipleExport: false,\n                    pdfExportProperties: { fileName: 'Export.pdf' }\n                };\n                this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.beforeExport, exportArgs, function (observedArgs) {\n                    _this.parent.pdfExport(observedArgs.pdfExportProperties, observedArgs.isMultipleExport, observedArgs.pdfDoc, observedArgs.isBlob);\n                });\n                break;\n            case this.parent.element.id + '_excel':\n                exportArgs = {\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined,\n                    excelExportProperties: { fileName: 'Export.xlsx' }\n                };\n                this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.beforeExport, exportArgs, function (observedArgs) {\n                    _this.parent.excelExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                });\n                break;\n            case this.parent.element.id + '_csv':\n                exportArgs = {\n                    isBlob: false,\n                    workbook: undefined,\n                    isMultipleExport: false,\n                    excelExportProperties: { fileName: 'Export.csv' }\n                };\n                this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.beforeExport, exportArgs, function (observedArgs) {\n                    _this.parent.csvExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                });\n                break;\n            case this.parent.element.id + '_drillthrough_menu': {\n                var event_1 = new MouseEvent('dblclick', {\n                    'view': window,\n                    'bubbles': true,\n                    'cancelable': true\n                });\n                ele.dispatchEvent(event_1);\n                break;\n            }\n            case this.parent.element.id + '_sortasc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Ascending';\n                break;\n            case this.parent.element.id + '_sortdesc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Descending';\n                break;\n            case this.parent.element.id + '_expand':\n                if (ele.querySelectorAll('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.EXPAND)) {\n                    var exp = ele.querySelectorAll('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.EXPAND)[0];\n                    this.parent.onDrill(exp);\n                }\n                break;\n            case this.parent.element.id + '_collapse':\n                if (ele.querySelectorAll('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.COLLAPSE)) {\n                    var colp = ele.querySelectorAll('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.COLLAPSE)[0];\n                    this.parent.onDrill(colp);\n                }\n                break;\n            case this.parent.element.id + '_CalculatedField':\n                this.parent.calculatedFieldModule.createCalculatedFieldDialog();\n                break;\n            case this.parent.element.id + '_AggMoreOption':\n            case this.parent.element.id + '_AggDifferenceFrom':\n            case this.parent.element.id + '_AggPercentageOfDifferenceFrom':\n            case this.parent.element.id + '_AggPercentageOfParentTotal':\n                ele.setAttribute('id', this.field);\n                ele.setAttribute('data-caption', this.fieldCaption);\n                ele.setAttribute('data-field', this.field);\n                ele.setAttribute('data-type', this.engine.fieldList[pivotValue.actualText.toString()].aggregateType);\n                ele.setAttribute('data-basefield', this.engine.fieldList[pivotValue.actualText.toString()].baseField);\n                ele.setAttribute('data-baseItem', this.engine.fieldList[pivotValue.actualText.toString()].baseItem);\n                this.aggMenu.createValueSettingsDialog(ele, this.parent.element, aggregateType);\n                break;\n            case this.parent.element.id + '_Agg' + aggregateType:\n                this.updateAggregate(aggregateType);\n                break;\n            case this.parent.element.id + '_custom_group':\n            case this.parent.element.id + '_custom_ungroup':\n                if (this.parent.groupingModule) {\n                    var args_1 = {\n                        target: ele,\n                        option: selected,\n                        parentElement: this.parent.element\n                    };\n                    this.parent.notify(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.initGrouping, args_1);\n                    this.parent.grid.contextMenuModule.contextMenu.close();\n                }\n                break;\n        }\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.contextMenuClick, args);\n    };\n    Render.prototype.validateColumnTotalcell = function (columnIndex) {\n        var headerPosKeys = Object.keys(this.engine.headerContent);\n        var keysLength = headerPosKeys.length;\n        var sumLock = false;\n        var fieldName = '';\n        for (var pos = keysLength - 1; pos >= 0; pos--) {\n            var cell = this.engine.headerContent[Number(headerPosKeys[pos])][columnIndex];\n            if (cell) {\n                sumLock = sumLock && fieldName !== '' ? fieldName === cell.valueSort.axis : false;\n                fieldName = cell.valueSort.axis ? cell.valueSort.axis.toString() : '';\n                if (cell.type === 'sum') {\n                    sumLock = true;\n                }\n                if (sumLock && cell.members && cell.members.length > 0) {\n                    return true;\n                }\n            }\n            else {\n                return false;\n            }\n        }\n        return false;\n    };\n    Render.prototype.validateField = function (target) {\n        var isValueField = false;\n        if (target.classList.contains('e-stot') || target.classList.contains('e-gtot') || target.classList.contains('e-valuescontent') || target.classList.contains('e-valuesheader')) {\n            isValueField = true;\n        }\n        else {\n            var fieldName = target.getAttribute('fieldName');\n            if (!fieldName || fieldName === '') {\n                var rowIndx = Number(target.getAttribute('index'));\n                var colIndx = parseInt(target.getAttribute('aria-colindex'), 10) - 1;\n                fieldName = this.engine.pivotValues[rowIndx][colIndx].actualText;\n            }\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < valuefields.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === fieldName) {\n                    isValueField = true;\n                    break;\n                }\n            }\n        }\n        return isValueField;\n    };\n    Render.prototype.updateAggregate = function (aggregate) {\n        if (this.parent.getAllSummaryType().indexOf(aggregate) > -1) {\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < this.parent.dataSourceSettings.values.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === this.field) {\n                    var dataSourceItem = valuefields[valueCnt];\n                    dataSourceItem.type = aggregate;\n                }\n            }\n        }\n    };\n    Render.prototype.injectGridModules = function (parent) {\n        _syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.Grid.Inject(_syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.Freeze);\n        if (parent.allowExcelExport) {\n            _syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.Grid.Inject(_syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.ExcelExport);\n        }\n        if (parent.allowPdfExport) {\n            _syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.Grid.Inject(_syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.PdfExport);\n        }\n        _syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.Grid.Inject(_syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.Selection, _syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.Reorder, _syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.Resize);\n        if (this.gridSettings.contextMenuItems) {\n            _syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.Grid.Inject(_syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.ContextMenu);\n        }\n    };\n    /** @hidden */\n    Render.prototype.updateGridSettings = function () {\n        this.injectGridModules(this.parent);\n        this.parent.grid.allowResizing = this.gridSettings.allowResizing;\n        this.parent.grid.clipMode = this.gridSettings.clipMode;\n        this.parent.grid.allowTextWrap = this.gridSettings.allowTextWrap;\n        this.parent.grid.allowReordering = this.gridSettings.allowReordering;\n        this.parent.grid.allowSelection = this.gridSettings.allowSelection;\n        this.parent.grid.contextMenuItems = this.gridSettings.contextMenuItems;\n        this.parent.grid.selectedRowIndex = this.gridSettings.selectedRowIndex;\n        this.parent.grid.selectionSettings = this.gridSettings.selectionSettings;\n        this.parent.grid.textWrapSettings = this.gridSettings.textWrapSettings;\n        this.parent.grid.printMode = this.gridSettings.printMode;\n        this.parent.grid.rowHeight = this.gridSettings.rowHeight;\n        this.parent.grid.gridLines = this.gridSettings.gridLines;\n        if (this.parent.lastGridSettings) {\n            var keys = Object.keys(this.parent.lastGridSettings);\n            if (keys.indexOf('height') > -1) {\n                this.parent.grid.height = this.gridSettings.height;\n            }\n            if (keys.indexOf('width') > -1) {\n                this.parent.grid.width = this.gridSettings.width;\n            }\n            this.updatePivotColumns();\n            if (keys.indexOf('allowTextWrap') > -1 || keys.indexOf('clipMode') > -1) {\n                this.parent.layoutRefresh();\n            }\n        }\n        this.clearColumnSelection();\n    };\n    Render.prototype.updatePivotColumns = function () {\n        var keys = Object.keys(this.parent.lastGridSettings);\n        for (var colPos = 0; colPos < this.parent.pivotColumns.length; colPos++) {\n            var pivotColumn = this.parent.pivotColumns[colPos];\n            for (var keyPos = 0; keyPos < keys.length; keyPos++) {\n                var key = keys[keyPos];\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)((this.parent.pivotColumns[colPos])[key])) {\n                    pivotColumn[key] = this.parent.lastGridSettings[key];\n                }\n            }\n        }\n        this.parent.fillGridColumns(this.parent.grid.columns);\n    };\n    Render.prototype.clearColumnSelection = function () {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)(this.parent.element.querySelectorAll('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.CELL_ACTIVE_BGCOLOR), [_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.CELL_ACTIVE_BGCOLOR, _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.SELECTED_BGCOLOR]);\n    };\n    Render.prototype.appendValueSortIcon = function (cell, tCell, rCnt, cCnt, column) {\n        var engine = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        var vSort = this.parent.dataSourceSettings.valueSortSettings;\n        if (this.parent.enableValueSorting && vSort && vSort.headerText !== '') {\n            var len = (cell.type === 'grand sum' &&\n                this.parent.dataSourceSettings.values.length === 1 && !this.parent.dataSourceSettings.alwaysShowValueHeader) ? 0 :\n                (this.parent.dataSourceSettings.values.length > 1 || this.parent.dataSourceSettings.alwaysShowValueHeader) ?\n                    (engine.headerContent.length - 1) :\n                    this.parent.dataSourceSettings.columns.length === 0 ? 0 : (engine.headerContent.length - 1);\n            var lock = (vSort && vSort.headerText) ? cell.valueSort.levelName === vSort.headerText : cCnt === vSort.columnIndex;\n            if (vSort !== undefined && lock && (rCnt === len || (rCnt + 1) === len && cell.level > -1 &&\n                engine.headerContent[(rCnt + 1)][cCnt]\n                && engine.headerContent[(rCnt + 1)][cCnt].level === -1)\n                && this.parent.dataSourceSettings.valueAxis === 'column') {\n                tCell.querySelector('div div').appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\n                    className: (vSort.sortOrder === 'Descending' ?\n                        'e-icon-descending e-icons e-descending e-sortfilterdiv e-value-sort-icon' :\n                        'e-icon-ascending e-icons e-ascending e-sortfilterdiv e-value-sort-icon') + (cell.hasChild ? ' e-value-sort-align' : ''),\n                    styles: column.headerTextAlign === 'Right' ? 'float : left' : ''\n                }));\n            }\n            // return tCell;\n        }\n        return tCell;\n    };\n    Render.prototype.onResizeStop = function (args) {\n        if (args.column.columns && args.column.columns.length > 0) {\n            this.getChildColumnWidth(args.column.columns);\n        }\n        else {\n            var column = this.parent.isTabular ?\n                (args.column.index < this.parent.engineModule.rowMaxLevel + 1) ? args.column.index + \".formattedText\" :\n                    \"\" + args.column.customAttributes.cell.valueSort.levelName :\n                args.column.field === '0.formattedText' ? '0.formattedText' :\n                    \"\" + args.column.customAttributes.cell.valueSort.levelName;\n            this.parent.resizeInfo[column] = Number(args.column.width.toString().split('px')[0]);\n        }\n        if (this.parent.enableVirtualization && args.column.field === '0.formattedText') {\n            if (this.parent.dataSourceSettings.values.length > 1\n                && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.grid.columns[this.parent.grid.columns.length - 1].columns)) {\n                var gridColumns = this.parent.grid.columns[this.parent.grid.columns.length - 1].columns;\n                gridColumns[gridColumns.length - 1].minWidth = this.parent.gridSettings.columnWidth;\n            }\n            else {\n                this.parent.grid.columns[this.parent.grid.columns.length - 1].minWidth =\n                    this.parent.gridSettings.columnWidth;\n            }\n            this.parent.layoutRefresh();\n        }\n        this.setGroupWidth(args);\n        this.calculateGridHeight(true);\n        this.parent.grid.hideScroll();\n    };\n    Render.prototype.getChildColumnWidth = function (parentColumn) {\n        for (var _i = 0, parentColumn_1 = parentColumn; _i < parentColumn_1.length; _i++) {\n            var column = parentColumn_1[_i];\n            if (column.columns && column.columns.length > 0) {\n                this.getChildColumnWidth(column.columns);\n            }\n            else {\n                var colName = column.customAttributes.cell.valueSort.levelName;\n                this.parent.resizeInfo[colName] = Number(column.width.toString().split('px')[0]);\n            }\n        }\n    };\n    Render.prototype.setGroupWidth = function (args) {\n        if (this.parent.enableVirtualization && args.column.field === '0.formattedText') {\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule && this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUPING_BAR_CLASS) && Number(args.column.width.toString().split('px')[0]) < 250) {\n                args.cancel = true;\n            }\n            // else {\n            //     (this.parent.element.querySelector('.e-frozenscrollbar') as HTMLElement).style.width = args.column.width.toString().split('px')[0] + 'px';\n            // }\n        }\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n            if (this.parent.element.querySelector('.e-group-row').offsetWidth < 245 && !this.parent.firstColWidth) {\n                args.cancel = true;\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = this.resColWidth;\n                }\n                this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).querySelector('col').style.width = (this.resColWidth + 'px');\n                this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.CONTENT_CLASS).querySelector('col').style.width = (this.resColWidth + 'px');\n            }\n            this.parent.element.querySelector('.e-group-rows').style.height = 'auto';\n            this.parent.element.querySelector('.e-group-values').style.width =\n                this.parent.element.querySelector('.e-group-row').offsetWidth + 'px';\n            var firstRowHeight = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.HEADERCONTENT).offsetHeight;\n            this.parent.element.querySelector('.e-group-rows').style.height = firstRowHeight + 'px';\n        }\n        if (args.cancel) {\n            var column = args.column.field === '0.formattedText' ? '0.formattedText' :\n                args.column.customAttributes.cell.valueSort.levelName;\n            this.parent.resizeInfo[column] = Number(args.column.width.toString().split('px')[0]);\n            if (this.parent.enableVirtualization) {\n                this.parent.layoutRefresh();\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.resizedValue = (args.cancel || args.column.field !== '0.formattedText') ? this.parent.resizedValue : Number(args.column.width.toString().split('px')[0]);\n        }\n        this.parent.trigger(args.e.type === 'touchend' || args.e.type === 'mouseup' ? _common_base_constant__WEBPACK_IMPORTED_MODULE_3__.resizeStop : _common_base_constant__WEBPACK_IMPORTED_MODULE_3__.resizing, args);\n    };\n    /** @hidden */\n    Render.prototype.selected = function () {\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.onSelect.bind(this), 300);\n    };\n    Render.prototype.onSelect = function () {\n        var pivotArgs = { selectedCellsInfo: [], pivotValues: this.parent.pivotValues, currentCell: null };\n        var selectedElements = this.parent.element.querySelectorAll('.'\n            + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.CELL_SELECTED_BGCOLOR + ',.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.SELECTED_BGCOLOR);\n        for (var i = 0; i < selectedElements.length; i++) {\n            var element = selectedElements[i];\n            var colIndex = parseInt(element.getAttribute('aria-colindex'), 10) - 1;\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.engine.pivotValues[rowIndex][colIndex];\n            if (cell) {\n                if (cell.axis === 'value') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.value,\n                        columnHeaders: cell.columnHeaders,\n                        rowHeaders: cell.rowHeaders,\n                        measure: cell.actualText.toString()\n                    });\n                }\n                else if (cell.axis === 'column') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: cell.valueSort.levelName,\n                        rowHeaders: '',\n                        measure: ''\n                    });\n                }\n                else {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: '',\n                        rowHeaders: cell.valueSort.levelName,\n                        measure: ''\n                    });\n                }\n            }\n        }\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSelected, pivotArgs);\n    };\n    Render.prototype.rowCellBoundEvent = function (args) {\n        var tCell = args.cell;\n        var rowOuterDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\n            className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_ROW_CONTAINER\n        });\n        if (tCell && (this.parent.notEmpty) && this.engine.headerContent) {\n            var customClass = this.parent.hyperlinkSettings.cssClass;\n            var colIndex = parseInt(tCell.getAttribute('aria-colindex'), 10) - 1;\n            var index = this.parent.isTabular ? colIndex.toString() : '0';\n            var cell = args.data[Number(index)];\n            var isRowFieldsAvail = cell.valueSort && cell.valueSort.levelName === (this.parent.dataSourceSettings.rows.length === 0 && this.parent.dataSourceSettings.valueAxis === 'row' &&\n                this.parent.localeObj.getConstant('grandTotal') + (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText));\n            tCell.setAttribute('index', cell.rowIndex ? cell.rowIndex.toString() : '0');\n            var pivotValue = this.parent.pivotValues[cell.rowIndex] &&\n                this.parent.pivotValues[cell.rowIndex][colIndex] ?\n                this.parent.pivotValues[cell.rowIndex][colIndex] : null;\n            var dataColIndex = this.parent.isTabular ? this.parent.engineModule.rowMaxLevel : 0;\n            if (colIndex <= dataColIndex) {\n                if (this.parent.dataType === 'pivot') {\n                    var isValueCell = cell.type && cell.type === 'value';\n                    tCell.innerText = '';\n                    var levelName = cell.valueSort ? cell.valueSort.levelName.toString() : '';\n                    var memberPos = cell.actualText ?\n                        cell.actualText.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length : 0;\n                    var levelPosition = levelName.split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length -\n                        (memberPos ? memberPos - 1 : memberPos);\n                    var level = levelPosition ? (levelPosition - 1) : 0;\n                    if (this.parent.dataSourceSettings.subTotalsPosition === 'Bottom' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(levelName)) {\n                        var cellLevelName = !cell.isSum ? levelName : cell.type === 'value' ?\n                            levelName.split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter + (this.parent.engineModule.valueAxisFields[cell.actualText].caption ?\n                                this.parent.engineModule.valueAxisFields[cell.actualText].caption :\n                                this.parent.engineModule.valueAxisFields[cell.actualText].name))[0] : '';\n                        if (cell.isSum && (cell.type === 'value' ? this.drilledLevelInfo[cellLevelName] : true)) {\n                            level = level - 1;\n                        }\n                        else if (!cell.isSum) {\n                            if (cellLevelName.split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length === 1) {\n                                this.drilledLevelInfo = {};\n                            }\n                            if (cell.members && cell.members.length > 0) {\n                                this.drilledLevelInfo[cellLevelName] = cell.isDrilled;\n                            }\n                        }\n                    }\n                    if (!this.parent.isTabular) {\n                        do {\n                            if (level > 0) {\n                                rowOuterDiv.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\n                                    className: level === 0 ? '' : _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.NEXTSPAN\n                                }));\n                            }\n                            level--;\n                        } while (level > -1);\n                        level = levelPosition ? (levelPosition - 1) : 0;\n                        this.lastSpan = levelPosition ? this.lastSpan : 0;\n                        if (!cell.hasChild && (!isValueCell ? level : 0) > 0) {\n                            rowOuterDiv.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\n                                className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.LASTSPAN\n                            }));\n                        }\n                    }\n                    var fieldName = void 0;\n                    if ((this.parent.dataSourceSettings.rows.length > 0 &&\n                        (cell.valueSort ? Object.keys(cell.valueSort).length > 0 : true))) {\n                        if (isValueCell) {\n                            for (var _i = 0, _a = this.parent.dataSourceSettings.values; _i < _a.length; _i++) {\n                                var field = _a[_i];\n                                var name_1 = field.caption ? field.caption : field.name;\n                                if (levelName.indexOf(name_1) > -1) {\n                                    fieldName = field.name;\n                                    break;\n                                }\n                            }\n                        }\n                        else {\n                            fieldName = cell.level > -1 && this.parent.dataSourceSettings.rows[cell.level] ?\n                                this.parent.dataSourceSettings.rows[cell.level].name : '';\n                        }\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                }\n                else {\n                    rowOuterDiv = this.onOlapRowCellBoundEvent(tCell, rowOuterDiv, cell);\n                }\n                var localizedText = cell.formattedText;\n                if (cell.type) {\n                    if (cell.type === 'grand sum') {\n                        this.rowGrandPos = cell.rowIndex;\n                        tCell.classList.add('e-gtot');\n                        var values = this.parent.dataSourceSettings.values;\n                        localizedText = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(cell.valueSort.axis) ? (this.parent.dataSourceSettings.rows.length === 0 && values.length === 1 && this.parent.dataSourceSettings.valueAxis === 'row') ?\n                            this.parent.localeObj.getConstant('total') + ' ' + this.parent.localeObj.getConstant(values[values.length - 1].type) + ' ' +\n                                this.parent.localeObj.getConstant('of') + ' ' + (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(values[values.length - 1].caption) ? values[values.length - 1].caption : values[values.length - 1].name) :\n                            this.parent.localeObj.getConstant('grandTotal') : cell.formattedText;\n                    }\n                    else if (cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') +\n                        (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))) {\n                        tCell.classList.add('e-gtot');\n                        localizedText = isRowFieldsAvail ? this.parent.localeObj.getConstant('total') + ' ' + this.parent.localeObj.getConstant(this.parent.engineModule.fieldList[cell.actualText].aggregateType) + ' '\n                            + this.parent.localeObj.getConstant('of') + ' ' + cell.formattedText : localizedText;\n                    }\n                    else if (cell.type === 'sum' && cell.memberType !== 3) {\n                        localizedText = cell.formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total');\n                    }\n                    else {\n                        tCell.classList.add('e-stot');\n                    }\n                }\n                if (this.parent.isTabular) {\n                    this.setSpanAttributes('rowspan', cell.rowSpan, tCell);\n                    this.setSpanAttributes('colspan', cell.colSpan, tCell);\n                }\n                else {\n                    tCell.classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ROWSHEADER);\n                }\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    rowOuterDiv.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\n                        className: (cell.isDrilled === true ? _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.COLLAPSE : _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.EXPAND) + ' ' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    }));\n                }\n                rowOuterDiv.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\n                    className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.CELLVALUE,\n                    innerHTML: (this.parent.isRowCellHyperlink || cell.enableHyperlink ? '<a  data-url=\"' + localizedText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + localizedText + '</a>' : localizedText)\n                }));\n                var vSort = this.parent.pivotView.dataSourceSettings.valueSortSettings;\n                if (this.parent.enableValueSorting) {\n                    if (vSort && vSort.headerText && this.parent.dataSourceSettings.valueAxis === 'row' &&\n                        this.parent.pivotValues[Number(tCell.getAttribute('index'))][0] &&\n                        this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName) {\n                        if (this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName\n                            === vSort.headerText) {\n                            rowOuterDiv.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\n                                className: (vSort.sortOrder === 'Descending' ?\n                                    'e-icon-descending e-icons e-descending e-sortfilterdiv e-value-sort-icon' :\n                                    'e-icon-ascending e-icons e-ascending e-sortfilterdiv e-value-sort-icon') + (cell.hasChild ? ' e-value-sort-align' : ''),\n                                styles: rowOuterDiv.style.textAlign === 'right' ? 'float: left' : ''\n                            }));\n                        }\n                    }\n                }\n                tCell.appendChild(rowOuterDiv);\n            }\n            else {\n                var innerText = tCell.innerText;\n                tCell.innerText = '';\n                tCell.classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.VALUESCONTENT);\n                cell = args.data[colIndex];\n                cell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(cell) ? args.column.customAttributes.cell : cell;\n                cell.isGrandSum = isRowFieldsAvail ? true : cell.isGrandSum;\n                if (cell.isSum) {\n                    tCell.classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.SUMMARY);\n                }\n                var isGrandSum = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(cell.isGrandSum) && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.olapEngineModule) && this.parent.olapEngineModule.olapValueAxis === 'column') && this.parent.dataType === 'olap' &&\n                    ((this.colGrandPos - this.parent.dataSourceSettings.values.length) < colIndex));\n                if (cell.isGrandSum || (isGrandSum || this.colGrandPos === colIndex) || this.rowGrandPos === Number(tCell.getAttribute('index'))) {\n                    tCell.classList.add('e-gtot');\n                }\n                else if (this.parent.dataType === 'olap' ? cell.isSum : this.validateColumnTotalcell(cell.colIndex)) {\n                    tCell.classList.add('e-colstot');\n                }\n                if (pivotValue && pivotValue.cssClass) {\n                    tCell.classList.add(pivotValue.cssClass);\n                }\n                tCell.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\n                    className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.CELLVALUE,\n                    innerHTML: ((tCell.className.indexOf('e-summary') !== -1 && this.parent.isSummaryCellHyperlink) ||\n                        (tCell.className.indexOf('e-summary') === -1 && this.parent.isValueCellHyperlink) || cell.enableHyperlink ?\n                        '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>' : innerText)\n                }));\n                if (this.parent.gridSettings.allowReordering) {\n                    tCell.setAttribute('aria-colindex', args.column.customAttributes ? args.column.customAttributes.cell.colIndex.toString() : args.column.index.toString());\n                }\n            }\n            if (this.parent.cellTemplate) {\n                this.appendTemplate(tCell, pivotValue);\n            }\n            this.unWireEvents(tCell);\n            this.wireEvents(tCell);\n        }\n        args.pivotview = this.parent;\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.queryCellInfo, args);\n    };\n    Render.prototype.appendTemplate = function (tCell, pivotValue) {\n        var element = this.parent.getCellTemplate()({ targetCell: tCell, cellInfo: pivotValue }, this.parent, 'cellTemplate', this.parent.element.id +\n            '_cellTemplate', null, null, tCell);\n        if (element && element !== '' && element.length > 0) {\n            if (this.parent.enableHtmlSanitizer) {\n                if (this.parent.isVue || this.parent.isVue3) {\n                    var container = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div');\n                    container.innerHTML = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.SanitizeHtmlHelper.sanitize(element);\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.append)([container.firstChild], tCell);\n                }\n                else {\n                    this.parent.appendHtml(tCell, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                }\n            }\n            else {\n                if (this.parent.isVue || this.parent.isVue3) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.append)(element, tCell);\n                }\n                else {\n                    this.parent.appendHtml(tCell, element[0].outerHTML);\n                }\n            }\n        }\n    };\n    Render.prototype.onOlapRowCellBoundEvent = function (tCell, rowOuterDiv, cell) {\n        tCell.innerText = '';\n        var rowMeasurePos = this.engine.rowMeasurePos;\n        if (this.parent.enableVirtualization) {\n            if (cell.ordinal > -1 && this.parent.olapEngineModule.tupRowInfo.length > 0) {\n                var tupInfo = this.parent.olapEngineModule.tupRowInfo[cell.ordinal];\n                var cellActualText = cell.memberType === 3 ?\n                    this.engine.fieldList[cell.actualText.toString()].tag.toString() :\n                    cell.actualText.toString();\n                var memberPosition = tupInfo.uNameCollection.indexOf(cellActualText);\n                var cropUName = tupInfo.uNameCollection.substring(0, memberPosition) +\n                    (cell.memberType === 3 ? '' : cell.actualText.toString());\n                var fieldSep = cropUName.split('::[').map(function (item) {\n                    return item[0] === '[' ? item : ('[' + item);\n                });\n                if (cell.memberType === 3 && rowMeasurePos) {\n                    fieldSep.push(cell.actualText.toString());\n                }\n                var nxtIndextCount = -1;\n                var lastIndextCount = 0;\n                var prevHasChild = false;\n                for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                    var fieldMembers = fieldSep[fPos];\n                    var membersCount = fieldMembers.split('~~').length;\n                    nxtIndextCount += membersCount;\n                    var hasChild = tupInfo.typeCollection[fPos] !== '2' ? (this.engine.fieldList[tupInfo.members[fPos].getAttribute('Hierarchy')] && this.engine.fieldList[tupInfo.members[fPos].getAttribute('Hierarchy')].isHierarchy && fPos < this.parent.dataSourceSettings.rows.length - 1 && !this.parent.dataSourceSettings.rows[fPos + 1].isNamedSet && this.parent.dataSourceSettings.rows[fPos + 1].name.indexOf('[Measures]') < 0 && this.engine.fieldList[this.parent.dataSourceSettings.rows[fPos + 1].name] && this.engine.fieldList[this.parent.dataSourceSettings.rows[fPos + 1].name].hasAllMember) ? true : Number(tupInfo.members[fPos].querySelector('CHILDREN_CARDINALITY').textContent) > 0 : false;\n                    lastIndextCount += (fPos > 0 && prevHasChild && !hasChild) ? 1 : 0;\n                    prevHasChild = hasChild;\n                }\n                var indent = 0;\n                for (var iPos = 0; iPos < nxtIndextCount; iPos++) {\n                    rowOuterDiv.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\n                        className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.NEXTSPAN\n                    }));\n                    indent++;\n                }\n                for (var iPos = 0; iPos < lastIndextCount && nxtIndextCount > 0; iPos++) {\n                    rowOuterDiv.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\n                        className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.LASTSPAN\n                    }));\n                }\n                this.indentCollection[cell.rowIndex] = indent;\n                this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n            }\n        }\n        else {\n            var hierarchyName = cell.hierarchy;\n            var actualLevelName = cell.valueSort ? cell.valueSort.levelName.toString() : '';\n            var levelPosition = cell.level === -1 ? this.measurePos :\n                actualLevelName.split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length - 1;\n            var levelName = cell.memberType === 3 ? (levelPosition + '.' + cell.levelUniqueName) : cell.levelUniqueName;\n            var hasChild = cell.hasChild;\n            var isSubTotalCell = false;\n            if (cell.isSum && cell.memberType === 3) {\n                var currPos_1 = this.lvlCollection[cell.parentUniqueName].position;\n                for (var i = currPos_1 + 1; i < this.position; i++) {\n                    delete this.lvlCollection[this.lvlPosCollection[i]];\n                    delete this.lvlPosCollection[i];\n                }\n                this.position = this.position > (currPos_1 + 1) ? (currPos_1 + 1) : this.position;\n                isSubTotalCell = true;\n                this.measurePos = this.lvlCollection[cell.parentUniqueName].position;\n            }\n            if (!this.lvlCollection[levelName] && levelName) {\n                this.lvlPosCollection[this.position] = levelName;\n                this.lvlCollection[levelName] = { position: this.position, hasChild: hasChild };\n                this.position++;\n            }\n            else if (levelName) {\n                var currPos_2 = this.lvlCollection[levelName].position;\n                for (var pos = currPos_2 + 1; pos < this.position; pos++) {\n                    delete this.lvlCollection[this.lvlPosCollection[pos]];\n                    delete this.lvlPosCollection[pos];\n                }\n                this.position = this.position > (currPos_2 + 1) ? (currPos_2 + 1) : this.position;\n            }\n            if (!this.hierarchyCollection[hierarchyName] && hierarchyName) {\n                this.hierarchyPosCollection[this.hierarchyCount] = hierarchyName;\n                this.hierarchyCollection[hierarchyName] = {\n                    lvlPosition: this.position - 1,\n                    hierarchyPOs: this.hierarchyCount\n                };\n                this.hierarchyCount++;\n            }\n            else if (hierarchyName) {\n                var currPos_3 = this.hierarchyCollection[hierarchyName].hierarchyPOs;\n                for (var pos = currPos_3 + 1; pos < this.hierarchyCount; pos++) {\n                    delete this.hierarchyCollection[this.hierarchyPosCollection[pos]];\n                    delete this.hierarchyPosCollection[pos];\n                }\n                this.hierarchyCount = this.hierarchyCount > (currPos_3 + 1) ? (currPos_3 + 1) : this.hierarchyCount;\n            }\n            if (cell.memberType !== 3 && levelName && this.lvlCollection[levelName]) {\n                var currHierarchyPos = this.hierarchyCollection[hierarchyName] ?\n                    this.hierarchyCollection[hierarchyName].hierarchyPOs : -1;\n                this.measurePos = rowMeasurePos <= currHierarchyPos && this.hierarchyPosCollection[rowMeasurePos + 1] ?\n                    this.measurePos : this.lvlCollection[levelName].position;\n            }\n            var currPos = this.lvlCollection[levelName] ? this.lvlCollection[levelName].position : -1;\n            currPos = isSubTotalCell ? currPos - 1 : currPos;\n            var lvlPos = 0;\n            var indent = 0;\n            while (lvlPos <= currPos && currPos > 0 && cell.level > -1) {\n                var hasChild_1 = this.lvlCollection[this.lvlPosCollection[lvlPos]].hasChild;\n                var prevHasChild = lvlPos > 0 ? this.lvlCollection[this.lvlPosCollection[lvlPos - 1]].hasChild : false;\n                if (prevHasChild && !hasChild_1) {\n                    rowOuterDiv.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\n                        className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.LASTSPAN\n                    }));\n                }\n                if (lvlPos !== currPos) {\n                    rowOuterDiv.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\n                        className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.NEXTSPAN\n                    }));\n                    indent++;\n                }\n                lvlPos++;\n            }\n            if (this.parent.dataSourceSettings.grandTotalsPosition === 'Top' && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.olapEngineModule) && this.parent.olapEngineModule.olapValueAxis === 'row') && this.parent.dataType === 'olap' &&\n                (cell.valueSort.levelName.toString()).indexOf(this.parent.localeObj.getConstant('grandTotal') + this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) === 0) {\n                rowOuterDiv.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\n                    className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.NEXTSPAN\n                }));\n            }\n            if (cell.memberType === 3 && cell.level === -1 && Object.keys(this.lvlCollection).length > 1) {\n                rowOuterDiv.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\n                    className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.NEXTSPAN\n                }));\n                indent++;\n            }\n            this.indentCollection[cell.rowIndex] = indent;\n            this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n        }\n        rowOuterDiv.setAttribute('fieldname', cell.hierarchy);\n        tCell.setAttribute('fieldname', cell.hierarchy);\n        var grandTotal = (this.parent.olapEngineModule.tupRowInfo[cell.ordinal] ?\n            (this.parent.olapEngineModule.tupRowInfo[cell.ordinal].measurePosition === 0 ?\n                this.parent.olapEngineModule.tupRowInfo[cell.ordinal].allStartPos === 1 :\n                this.parent.olapEngineModule.tupRowInfo[cell.ordinal].allStartPos === 0) : false);\n        if (grandTotal) {\n            tCell.classList.add('e-gtot');\n        }\n        return rowOuterDiv;\n    };\n    Render.prototype.columnCellBoundEvent = function (args) {\n        if (args.cell.column && args.cell.column.customAttributes) {\n            var cell = args.cell.column.customAttributes.cell;\n            var tCell = args.node;\n            if (cell) {\n                var customClass = this.parent.hyperlinkSettings.cssClass;\n                var isValueCell = false;\n                for (var _i = 0, _a = this.parent.dataSourceSettings.values; _i < _a.length; _i++) {\n                    var field = _a[_i];\n                    if (field.name === cell.actualText) {\n                        isValueCell = true;\n                        tCell.setAttribute('fieldname', field.name);\n                    }\n                }\n                if ((cell.level === -1 && !cell.rowSpan) || cell.rowSpan === -1) {\n                    args.node.style.display = 'none';\n                }\n                else if (cell.rowSpan > 1) {\n                    args.node.setAttribute('rowspan', cell.rowSpan.toString());\n                    args.node.setAttribute('aria-rowspan', cell.rowSpan.toString());\n                    if ((cell.rowIndex + cell.rowSpan) === this.engine.headerContent.length) {\n                        args.node.style.borderBottomWidth = '0px';\n                    }\n                }\n                args.node.setAttribute('aria-colindex', (cell.colIndex + 1).toString());\n                args.node.setAttribute('index', cell.rowIndex.toString());\n                var fieldName = void 0;\n                if (this.parent.dataType === 'pivot') {\n                    if (!isValueCell && !(this.parent.dataSourceSettings.values && this.parent.dataSourceSettings.valueAxis === 'column' &&\n                        this.parent.dataSourceSettings.values.length > 1 &&\n                        (isValueCell && cell.rowIndex === this.engine.headerContent.length - 1)) && this.parent.dataSourceSettings.columns\n                        && this.parent.dataSourceSettings.columns.length > 0) {\n                        fieldName = cell.level > -1 && this.parent.dataSourceSettings.columns[cell.level] ?\n                            this.parent.dataSourceSettings.columns[cell.level].name : '';\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                    if (this.validateColumnTotalcell(cell.colIndex)) {\n                        tCell.classList.add('e-colstot');\n                    }\n                }\n                else {\n                    tCell = this.onOlapColumnCellBoundEvent(tCell, cell);\n                }\n                var isColumnFieldsAvail = (this.parent.dataSourceSettings.columns.length === 0 && this.parent.dataSourceSettings.valueAxis === 'column' && cell.valueSort &&\n                    cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') + (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText)));\n                if (cell.type || isColumnFieldsAvail) {\n                    tCell.classList.add(cell.type === 'grand sum' ? 'e-gtot' : 'e-stot');\n                    if (cell.type === 'grand sum') {\n                        this.colGrandPos = cell.colIndex;\n                    }\n                    else if (cell.type) {\n                        tCell.classList.add('e-colstot');\n                    }\n                    var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n                    var localizedText = cell.type === 'grand sum' ? ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(cell.valueSort.axis) || this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('grandTotal') :\n                        cell.formattedText) : cell.formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total');\n                    localizedText = isColumnFieldsAvail && engine.fieldList ? this.parent.localeObj.getConstant('total') + ' ' + this.parent.localeObj.getConstant(engine.fieldList[cell.actualText].aggregateType)\n                        + ' ' + this.parent.localeObj.getConstant('of') + ' ' + cell.formattedText : localizedText;\n                    if (tCell.querySelector('.e-headertext') !== null) {\n                        tCell.querySelector('.e-headertext').innerText = localizedText;\n                    }\n                    else {\n                        tCell.querySelector('.e-stackedheadercelldiv').innerText = localizedText;\n                    }\n                }\n                tCell.classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.COLUMNSHEADER);\n                if (this.parent.isColumnCellHyperlink || cell.enableHyperlink) {\n                    if (tCell.querySelector('.e-stackedheadercelldiv')) {\n                        var innerText = tCell.querySelector('.e-stackedheadercelldiv').innerText;\n                        tCell.querySelector('.e-stackedheadercelldiv').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                    else if (tCell.querySelector('.e-headertext')) {\n                        var innerText = tCell.querySelector('.e-headertext').innerText;\n                        tCell.querySelector('.e-headertext').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                }\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    var hdrdiv = tCell.querySelector('.e-headercelldiv');\n                    if (hdrdiv) {\n                        hdrdiv.style.height = 'auto';\n                        hdrdiv.style.lineHeight = 'normal';\n                    }\n                    var div = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\n                        className: (cell.isDrilled === true ? _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.COLLAPSE : _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.EXPAND) + ' ' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    });\n                    if (window.navigator.userAgent.indexOf('Edge') > -1 || window.navigator.userAgent.indexOf('Trident') > -1) {\n                        tCell.children[0].style.display = 'table';\n                    }\n                    else {\n                        tCell.children[0].style.display = 'block';\n                    }\n                    this.updateWrapper(tCell, div);\n                }\n                else {\n                    this.updateWrapper(tCell);\n                }\n                tCell = this.appendValueSortIcon(cell, tCell, cell.rowIndex, cell.colIndex, args.cell.column);\n                if (this.parent.cellTemplate) {\n                    this.appendTemplate(tCell, cell);\n                }\n                var len = this.parent.dataSourceSettings.values.length;\n                for (var vCnt = 0; vCnt < len; vCnt++) {\n                    if (this.parent.dataSourceSettings.values[vCnt].name === cell.actualText) {\n                        if (this.parent.dataType === 'olap') {\n                            var grandTotal = (this.parent.olapEngineModule.tupColumnInfo[cell.ordinal] ?\n                                (this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].measurePosition === 0 ?\n                                    this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].allStartPos === 1 :\n                                    this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].allStartPos === 0) : false);\n                            if (grandTotal) {\n                                tCell.classList.add('e-gtot');\n                            }\n                        }\n                        if (cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') + (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))\n                            || cell.valueSort.levelName === ('Grand Total' + (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))) {\n                            tCell.classList.add('e-gtot');\n                        }\n                        else {\n                            tCell.classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.VALUESHEADER);\n                        }\n                    }\n                }\n                this.unWireEvents(tCell);\n                this.wireEvents(tCell);\n            }\n        }\n        else {\n            if (this.parent.isTabular) {\n                var colSpan = this.parent.engineModule.rowMaxLevel + 1;\n                if (args.cell && args.cell.column && args.cell.column.index === 0) {\n                    args.node.setAttribute('colspan', colSpan.toString());\n                    args.node.classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.FREEZE_LEFT_BORDER);\n                }\n                else {\n                    args.node.style.display = 'none';\n                }\n            }\n        }\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.headerCellInfo, args);\n    };\n    Render.prototype.updateWrapper = function (tCell, div) {\n        if (tCell.querySelectorAll('.e-headercelldiv').length > 0 || tCell.querySelectorAll('.e-stackedheadercelldiv').length > 0) {\n            var outerDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\n                className: _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.PIVOT_CELL_CONTAINER\n            });\n            var innerDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\n                className: (div ? 'e-stackedheadertext' : 'e-headertext') + ' ' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.CELLVALUE,\n                innerHTML: tCell.querySelectorAll('.e-headercelldiv').length > 0 ? tCell.querySelector('.e-headercelldiv').innerHTML : tCell.querySelector('.e-stackedheadercelldiv').innerHTML\n            });\n            if (div) {\n                outerDiv.append(div);\n            }\n            outerDiv.append(innerDiv);\n            tCell.children[0].innerHTML = '';\n            tCell.children[0].append(outerDiv);\n        }\n        return tCell;\n    };\n    Render.prototype.onOlapColumnCellBoundEvent = function (tCell, cell) {\n        tCell.setAttribute('fieldname', cell.memberType === 3 ? cell.actualText.toString() : cell.hierarchy);\n        var prevCell = this.engine.headerContent[cell.rowIndex] ?\n            this.engine.headerContent[cell.rowIndex][cell.colIndex - 1] : undefined;\n        if (prevCell && prevCell.actualText === cell.actualText && prevCell.type === cell.type &&\n            (prevCell.colSpan > 1)) {\n            tCell.style.display = 'none';\n        }\n        else {\n            // tCell.setAttribute('colspan', cell.colSpan.toString());\n            // tCell.setAttribute('aria-colspan', cell.colSpan.toString());\n        }\n        if (cell.rowIndex === (this.engine.headerContent.length - 1) && cell.memberType === 2) {\n            tCell.style.display = this.isSpannedCell(this.engine.headerContent.length, cell) ? 'none' : tCell.style.display;\n        }\n        return tCell;\n    };\n    Render.prototype.isSpannedCell = function (colLength, currCell) {\n        var prevCell = this.engine.headerContent[currCell.rowIndex - 1] ?\n            this.engine.headerContent[currCell.rowIndex - 1][currCell.colIndex] : undefined;\n        var parentCellSpan;\n        var parentCellPos;\n        while (prevCell && ((prevCell.memberType === currCell.memberType) || (prevCell.type && currCell.type))) {\n            if (prevCell.rowSpan > 0) {\n                parentCellSpan = prevCell.rowSpan;\n                parentCellPos = prevCell.rowIndex;\n            }\n            prevCell = this.engine.headerContent[prevCell.rowIndex - 1] ?\n                this.engine.headerContent[prevCell.rowIndex - 1][currCell.colIndex] : undefined;\n        }\n        return (parentCellPos + parentCellSpan) >= colLength;\n    };\n    Render.prototype.onHyperCellClick = function (e) {\n        var cell = e.target.closest('td.e-rowcell') ? e.target.closest('td.e-rowcell') : e.target.closest('th');\n        var args = {\n            currentCell: cell,\n            data: this.engine.pivotValues[Number(cell.getAttribute('index'))][parseInt(cell.getAttribute('aria-colindex'), 10) - 1],\n            cancel: true,\n            nativeEvent: e\n        };\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.hyperlinkCellClick, args, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                args.currentCell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.getElement)(args.currentCell);\n                var url = args.currentCell.getAttribute('data-url') ? (args.currentCell).getAttribute('data-url') :\n                    args.currentCell.querySelector('a').getAttribute('data-url');\n                window.open(url);\n            }\n        });\n    };\n    Render.prototype.getRowStartPos = function () {\n        var pivotValues = this.parent.pivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < (pivotValues ? pivotValues.length : 0); rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        return rowPos;\n    };\n    Render.prototype.frameDataSource = function (type) {\n        var dataContent = [];\n        if (((this.parent.dataType === 'pivot' && this.parent.dataSourceSettings.dataSource && this.parent.engineModule.data.length > 0) || (this.parent.dataType === 'olap' && this.parent.dataSourceSettings.url !== '') ||\n            (this.parent.dataSourceSettings.mode === 'Server' && this.parent.dataSourceSettings.url !== '' && this.engine.pivotValues.length > 0)) && this.parent.dataSourceSettings.values.length > 0 && !this.engine.isEmptyData) {\n            if ((this.parent.enableValueSorting) || !this.engine.isEngineUpdated || (this.gridSettings.layout === 'Tabular')) {\n                var rowCnt = 0;\n                var pivotValues = this.parent.pivotValues;\n                var start = type === 'value' ? this.rowStartPos : 0;\n                var end = type === 'value' ? (pivotValues ? pivotValues.length : 0) : this.rowStartPos;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n            else {\n                dataContent = type === 'value' ? this.engine.valueContent : this.engine.headerContent;\n            }\n        }\n        else {\n            dataContent = this.frameEmptyData();\n        }\n        return dataContent;\n    };\n    /** @hidden */\n    Render.prototype.frameEmptyData = function () {\n        var dataContent = [{\n                0: { formattedText: this.parent.localeObj.getConstant('grandTotal') },\n                1: { formattedText: this.parent.localeObj.getConstant('emptyData') }\n            }];\n        return dataContent;\n    };\n    /** @hidden */\n    Render.prototype.calculateColWidth = function (colCount) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.resizedValue)) {\n            this.parent.resizedValue = (this.parent.showGroupingBar && this.parent.resizedValue < 250) ? 250 : this.parent.resizedValue;\n        }\n        this.resColWidth = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.resizedValue) ? this.parent.resizedValue : this.resColWidth;\n        var offsetWidth = this.calculateGridWidth();\n        var eleWidth = this.parent.element.getBoundingClientRect().width ?\n            this.parent.element.getBoundingClientRect().width : this.parent.element.offsetWidth;\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * eleWidth) : offsetWidth) :\n            Number(this.parent.width);\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.parent.isTabular ?\n            (this.parent.engineModule.rowMaxLevel + 1) * this.resColWidth : this.resColWidth);\n        colCount = this.parent.isTabular ? colCount - (this.parent.engineModule.rowMaxLevel + 1) : colCount - 1;\n        this.isOverflows = !((colCount * this.gridSettings.columnWidth) < parWidth);\n        if (!this.isOverflows) {\n            var gridHeight = this.calculateGridHeight();\n            var parentHeight = gridHeight === 'auto' ? this.parent.getHeightAsNumber() : gridHeight;\n            var headersLength = (this.engine && this.engine.headerContent) ? Object.keys(this.engine.headerContent).length : 1;\n            var height = parentHeight - (this.gridSettings.rowHeight * headersLength);\n            if (this.engine && this.engine.valueContent && ((this.gridSettings.rowHeight * this.engine.valueContent.length) > height)) {\n                parWidth = parWidth - (0,_syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.getScrollBarWidth)();\n            }\n        }\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return (!this.isOverflows && !this.gridSettings.allowAutoResizing) ? this.gridSettings.columnWidth : colWidth;\n    };\n    /** @hidden */\n    Render.prototype.resizeColWidth = function (colCount) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.resizedValue)) {\n            this.parent.resizedValue = (this.parent.showGroupingBar && this.parent.resizedValue < 250) ? 250 : this.parent.resizedValue;\n        }\n        this.resColWidth = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.resizedValue) ? this.parent.resizedValue : this.resColWidth;\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * this.parent.element.offsetWidth) : this.parent.element.offsetWidth) :\n            Number(this.parent.width);\n        colCount = colCount - 1;\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.resColWidth);\n        this.isOverflows = !((colCount * this.gridSettings.columnWidth) < parWidth);\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return (!this.isOverflows && !this.gridSettings.allowAutoResizing) ? this.gridSettings.columnWidth : colWidth;\n    };\n    /** @hidden */\n    Render.prototype.calculateGridWidth = function () {\n        var parWidth = this.parent.width;\n        var eleWidth = this.parent.element.getBoundingClientRect().width ?\n            this.parent.element.getBoundingClientRect().width : this.parent.element.offsetWidth;\n        if (eleWidth === 0) {\n            eleWidth = this.parent.element.parentElement.getBoundingClientRect().width ?\n                this.parent.element.parentElement.getBoundingClientRect().width : this.parent.element.parentElement.offsetWidth;\n        }\n        if (this.gridSettings.width === 'auto') {\n            if (this.parent.width === 'auto') {\n                parWidth = eleWidth;\n            }\n            else if (this.parent.width.toString().indexOf('%') > -1) {\n                parWidth = ((parseFloat(this.parent.width.toString()) / 100) * eleWidth);\n            }\n            else if (this.parent.width.toString().indexOf('px') > -1) {\n                parWidth = this.parent.width.toString().split('px')[0];\n            }\n        }\n        else {\n            parWidth = this.gridSettings.width;\n        }\n        return (!this.gridSettings.allowAutoResizing && parWidth > this.parent.totColWidth) ? this.parent.totColWidth : parWidth;\n    };\n    /** @hidden */\n    Render.prototype.calculateGridHeight = function (elementCreated) {\n        var contentElement = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GRID_CLASS + ' .' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.CONTENT_CLASS);\n        var gridHeight = this.parent.height;\n        var parHeight = this.parent.getHeightAsNumber();\n        if (contentElement) {\n            if (isNaN(parHeight)) {\n                parHeight = parHeight > this.parent.minHeight ? parHeight : this.parent.minHeight;\n            }\n            else {\n                parHeight = (contentElement.offsetWidth < contentElement.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.TABLE).offsetWidth) ?\n                    parHeight - (0,_syncfusion_ej2_grids__WEBPACK_IMPORTED_MODULE_0__.getScrollBarWidth)() : parHeight;\n            }\n            if ((this.parent.showToolbar && this.parent.currentView !== 'Chart') || (!this.parent.showToolbar && this.parent.displayOption.view !== 'Chart')) {\n                if (this.gridSettings.height === 'auto' && parHeight && this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GRID_HEADER)) {\n                    var rowColHeight = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GRID_HEADER).offsetHeight;\n                    var gBarHeight = rowColHeight + (this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GRID_GROUPING_BAR_CLASS) ?\n                        this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GRID_GROUPING_BAR_CLASS).offsetHeight : 0);\n                    var toolBarHeight = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GRID_TOOLBAR) ? 42 : 0;\n                    var pagerHeight = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GRID_PAGER) ? this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GRID_PAGER).offsetHeight : 0;\n                    gridHeight = parHeight - (gBarHeight + toolBarHeight + pagerHeight) - 1;\n                    gridHeight = gridHeight < 40 ? 40 : gridHeight;\n                    if (elementCreated) {\n                        var tableHeight = contentElement.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.TABLE).offsetHeight;\n                        var contentHeight = contentElement.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.TABLE).offsetHeight;\n                        var tableWidth = contentElement.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.TABLE).offsetWidth;\n                        var contentWidth = contentElement.offsetWidth;\n                        var horizontalOverflow = contentWidth <= tableWidth;\n                        // if (horizontalOverflow && ((contentWidth + 2) < tableWidth) && !this.parent.enableVirtualization) {\n                        //     contentElement.style.overflowX = 'scroll';\n                        // } else {\n                        //     contentElement.style.overflowX = 'hidden';\n                        //     horizontalOverflow = false;\n                        // }\n                        //let verticalOverflow: boolean = contentHeight < tableHeight;\n                        var commonOverflow = horizontalOverflow && ((gridHeight - tableHeight) < 18) ? true : false;\n                        if (gridHeight >= tableHeight && (horizontalOverflow ? gridHeight >= contentHeight : true) &&\n                            !commonOverflow) {\n                            this.parent.grid.height = 'auto';\n                        }\n                        else {\n                            this.parent.grid.height = gridHeight;\n                            this.parent.grid.dataBind();\n                        }\n                        // this.parent.grid.widthService.refreshFrozenScrollbar();\n                    }\n                    else {\n                        if (gridHeight > (this.engine.valueContent.length * this.gridSettings.rowHeight)) {\n                            gridHeight = 'auto';\n                        }\n                    }\n                }\n                else {\n                    gridHeight = this.gridSettings.height;\n                }\n            }\n        }\n        return gridHeight < this.parent.gridSettings.rowHeight ? this.parent.gridSettings.rowHeight : gridHeight;\n    };\n    /**\n     * It used to frame stacked headers.\n     *\n     * @returns {ColumnModel[]} - Returns grid columns.\n     * @hidden\n     */\n    Render.prototype.frameStackedHeaders = function () {\n        var pivotColumns = this.parent.pivotColumns;\n        var engine = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        var gridColumns = this.parent.grid['columnModel'];\n        var autoFitApplied = false;\n        var refreshColumn = this.parent.toolbarModule && this.parent.toolbarModule.isReportChange ? true : this.parent.actionObj ? ((this.parent.actionObj.actionName === 'Sort value' && engine.valueAxis === 1) ||\n            (this.parent.actionObj.actionName === 'Sort field' && this.parent.actionObj.fieldInfo.axis === 'columns') ||\n            (this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.actionObj.actionName === 'Sort field' && this.parent.pivotFieldListModule.actionObj.fieldInfo.axis === 'columns')) : false;\n        this.pivotColumns = [];\n        if ((((this.parent.dataType === 'olap' && this.parent.dataSourceSettings.url !== '') ? true :\n            (this.parent.dataSourceSettings.values.length > 0 && this.parent.dataSourceSettings.dataSource\n                && this.parent.engineModule.data.length > 0)) || (this.parent.dataSourceSettings.mode === 'Server'\n            && this.parent.dataSourceSettings.values.length > 0 && this.parent.dataSourceSettings.url !== '' &&\n            this.engine.pivotValues.length > 0)) && !this.engine.isEmptyData) {\n            var headerCnt = this.engine.headerContent.length;\n            var headerSplit = [];\n            var splitPos = [];\n            var colWidth = this.calculateColWidth(this.engine.pivotValues && this.engine.pivotValues[0] ?\n                this.engine.pivotValues[0].length : 0);\n            var measureFlag = this.parent.dataType === 'olap' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.engine.colMeasurePos)\n                && this.engine.colDepth - 1 === this.parent.olapEngineModule.colMeasurePos;\n            do {\n                var columnModel = [];\n                var actualCnt = 0;\n                headerCnt--;\n                var colField = this.engine.headerContent[headerCnt];\n                var colCount = colField ? Object.keys(colField).length : 0;\n                if (colField) {\n                    var colLength = this.parent.isTabular ? (this.parent.engineModule.rowMaxLevel + 1) : (colField[0] ? 0 : 1);\n                    for (var cCnt = 0, cLen = Object.keys(colField).length + colLength; cCnt < cLen; cCnt++) {\n                        var colSpan = (colField[cCnt] && colField[cCnt].colSpan) ?\n                            ((colField[cCnt].memberType !== 3 || (colField[cCnt].memberType === 3 && !measureFlag) ||\n                                headerCnt === 0) ? colField[cCnt].colSpan : headerSplit[cCnt]) : 1;\n                        colSpan = this.parent.dataType === 'olap' && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(colSpan) ? 1 : colSpan;\n                        var formattedText = colField[cCnt] ? (colField[cCnt].type === 'grand sum' ?\n                            ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(colField[cCnt].valueSort.axis) ? this.parent.localeObj.getConstant('grandTotal') :\n                                colField[cCnt].formattedText) : (colField[cCnt].type === 'sum' ?\n                            colField[cCnt].formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total') :\n                            colField[cCnt].formattedText)) : '';\n                        formattedText = this.parent.enableHtmlSanitizer ? _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.SanitizeHtmlHelper.sanitize(formattedText) : formattedText;\n                        if (headerCnt === this.engine.headerContent.length - 1) {\n                            colSpan = 1;\n                            autoFitApplied = pivotColumns.length - 1 !== colCount ? false : (!refreshColumn && !this.parent.isEmptyGrid\n                                && pivotColumns[actualCnt] && pivotColumns[actualCnt].autoFit);\n                            columnModel[actualCnt] = {\n                                field: (cCnt + '.formattedText'),\n                                headerText: formattedText,\n                                customAttributes: { 'cell': this.cloneDataWithoutIndex(colField[cCnt]) },\n                                width: autoFitApplied && gridColumns[actualCnt] ?\n                                    gridColumns[actualCnt].width : colField[cCnt]\n                                    ? colField[cCnt].valueSort ? this.setSavedWidth(colField[cCnt]\n                                        .valueSort.levelName, colWidth) : this.resColWidth : this.resColWidth,\n                                minWidth: autoFitApplied && actualCnt === colCount\n                                    ? gridColumns[gridColumns.length - 1].minWidth : 30,\n                                allowReordering: this.parent.gridSettings.allowReordering,\n                                allowResizing: this.parent.gridSettings.allowResizing,\n                                visible: true,\n                                textAlign: this.parent.enableRtl ? 'Left' : 'Right',\n                                headerTextAlign: this.parent.enableRtl ? 'Right' : 'Left'\n                            };\n                            if (cCnt === colCount) {\n                                columnModel[actualCnt].width = (columnModel[actualCnt].width - 3);\n                                this.lastColumn = columnModel[actualCnt];\n                            }\n                        }\n                        else if (headerSplit[cCnt]) {\n                            // colSpan = (colField[cCnt as number] && colField[cCnt as number].type === 'grand sum' &&\n                            //     colField[cCnt as number].memberType === 2) ? 1 : colSpan;\n                            var tmpSpan = colSpan;\n                            var innerModel = [];\n                            var innerPos = cCnt;\n                            while (tmpSpan > 0) {\n                                if (columnModel[actualCnt]) {\n                                    if (!this.pivotColumns[splitPos[innerPos]]) {\n                                        break;\n                                    }\n                                    innerModel.push(this.pivotColumns[splitPos[innerPos]]);\n                                }\n                                else {\n                                    columnModel[actualCnt] = {\n                                        headerText: formattedText,\n                                        field: colField[cCnt] ? colField[cCnt].valueSort\n                                            .levelName : '',\n                                        customAttributes: { 'cell': this.cloneDataWithoutIndex(colField[cCnt]) },\n                                        width: (autoFitApplied && actualCnt === 0 && !refreshColumn && !this.parent.isEmptyGrid\n                                            && pivotColumns[0].autoFit) ? gridColumns[0].width : colField[cCnt] ?\n                                            this.setSavedWidth(colField[cCnt].valueSort\n                                                .levelName, colWidth) : this.resColWidth,\n                                        minWidth: 30,\n                                        allowReordering: this.parent.gridSettings.allowReordering,\n                                        allowResizing: this.parent.gridSettings.allowResizing,\n                                        visible: true,\n                                        headerTextAlign: this.parent.enableRtl ? 'Right' : 'Left'\n                                    };\n                                    innerModel = [this.pivotColumns[splitPos[innerPos]]];\n                                }\n                                this.isAutoFitEnabled = this.isAutoFitEnabled ? true : autoFitApplied;\n                                tmpSpan = tmpSpan - headerSplit[innerPos];\n                                innerPos = innerPos + headerSplit[innerPos];\n                            }\n                            columnModel[actualCnt].columns = innerModel;\n                        }\n                        if (columnModel[actualCnt]) {\n                            columnModel[actualCnt].clipMode = this.gridSettings.clipMode;\n                        }\n                        headerSplit[cCnt] = colSpan;\n                        splitPos[cCnt] = actualCnt;\n                        actualCnt++;\n                        cCnt = cCnt + colSpan - 1;\n                    }\n                }\n                this.pivotColumns = columnModel.length > 0 ? columnModel : this.pivotColumns;\n            } while (headerCnt > 0);\n            if (this.parent.isTabular) {\n                for (var n = 0; n < this.parent.engineModule.rowMaxLevel + 1; n++) {\n                    if (this.parent.showGroupingBar && !this.parent.isAdaptive) {\n                        var groupRowElement = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_ROW);\n                        var buttonDivs = groupRowElement.querySelectorAll('.e-pvt-btn-div');\n                        var rowHeaderWidth = 0;\n                        if (this.parent.engineModule.rowMaxLevel !== buttonDivs.length - 1 && n === this.parent.engineModule.rowMaxLevel) {\n                            rowHeaderWidth = this.getTotalColumnWidth(buttonDivs, n);\n                        }\n                        else {\n                            if (groupRowElement.querySelectorAll('.e-pvt-btn-div').length === 1) {\n                                rowHeaderWidth = 250;\n                            }\n                            else {\n                                if ((this.parent.element.getBoundingClientRect().width * 0.8) <= this.getTotalColumnWidth(buttonDivs, 0)) {\n                                    rowHeaderWidth = this.gridSettings.columnWidth;\n                                }\n                                else {\n                                    var buttonWidth = groupRowElement.querySelectorAll('.e-pvt-btn-div')[n].getBoundingClientRect().width\n                                        < this.parent.gridSettings.columnWidth ? this.parent.gridSettings.columnWidth :\n                                        groupRowElement.querySelectorAll('.e-pvt-btn-div')[n].getBoundingClientRect().width;\n                                    rowHeaderWidth = buttonWidth + 6;\n                                }\n                            }\n                        }\n                        this.pivotColumns[n] = {\n                            field: (n + '.formattedText'),\n                            width: rowHeaderWidth > this.gridSettings.columnWidth ? rowHeaderWidth : this.resColWidth,\n                            minWidth: 30,\n                            headerText: '',\n                            allowReordering: false,\n                            allowResizing: this.parent.gridSettings.allowResizing,\n                            visible: true,\n                            clipMode: this.parent.gridSettings.clipMode\n                        };\n                    }\n                    else {\n                        for (var n_1 = 0; n_1 < this.parent.engineModule.rowMaxLevel + 1; n_1++) {\n                            this.updatePivotColumn(this.pivotColumns, n_1, autoFitApplied, refreshColumn, gridColumns);\n                        }\n                    }\n                }\n            }\n            else {\n                this.updatePivotColumn(this.pivotColumns, 0, autoFitApplied, refreshColumn, gridColumns);\n            }\n        }\n        else {\n            this.pivotColumns = this.frameEmptyColumns();\n        }\n        if (this.parent.toolbarModule && this.parent.showToolbar) {\n            this.parent.toolbarModule.isReportChange = false;\n        }\n        this.parent.triggerColumnRenderEvent(this.pivotColumns);\n        autoFitApplied = this.parent.pivotColumns.length > 0 && this.parent.pivotColumns[this.parent.pivotColumns.length - 1].autoFit;\n        return this.pivotColumns;\n    };\n    /** @hidden */\n    Render.prototype.setSavedWidth = function (column, width) {\n        if (column === '0.formattedText' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.resizedValue)) {\n            width = this.parent.resizedValue;\n        }\n        else {\n            if (this.parent.isTabular && this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ROW_CLASS).querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ROWCELL) &&\n                this.parent.showGroupingBar && column === '0.formattedText' && this.parent.dataSourceSettings.values.length === 0) {\n                var rowHeaderWidth = 0;\n                var buttonDivs = this.parent.element.querySelector('.' + _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.GROUP_ROW)\n                    .querySelectorAll('.e-pvt-btn-div');\n                for (var i = 0; i < buttonDivs.length; i++) {\n                    rowHeaderWidth += buttonDivs[i].getBoundingClientRect().width + 6;\n                }\n                width = rowHeaderWidth;\n            }\n            width = this.parent.resizeInfo[column] ? this.parent.resizeInfo[column] : width;\n        }\n        return width;\n    };\n    /** @hidden */\n    Render.prototype.frameEmptyColumns = function () {\n        var columns = [];\n        var colWidth = this.calculateColWidth(2);\n        columns.push({ field: '0.formattedText', headerText: '', minWidth: 30, width: this.resColWidth });\n        columns.push({ field: '1.formattedText', headerText: this.parent.localeObj.getConstant('grandTotal'), minWidth: 30, width: colWidth - 3 });\n        return columns;\n    };\n    /** @hidden */\n    Render.prototype.getFormatList = function () {\n        var formatArray = {};\n        for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n            var field = this.parent.dataSourceSettings.values[vCnt];\n            var format = 'N';\n            if (this.parent.dataType === 'olap') {\n                if (this.parent.olapEngineModule.fieldList[field.name] &&\n                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.olapEngineModule.fieldList[field.name].formatString)) {\n                    var fString = this.parent.olapEngineModule.formatFields[field.name] ?\n                        this.parent.olapEngineModule.formatFields[field.name].format :\n                        this.parent.olapEngineModule.fieldList[field.name].formatString;\n                    fString = (fString === 'Standard') ? 'Number' : fString;\n                    format = (fString.indexOf('#') > -1 || fString.match(/\\d/) !== null) ? fString : (fString[0] + '2');\n                }\n            }\n            else {\n                if ((['PercentageOfDifferenceFrom', 'PercentageOfRowTotal', 'PercentageOfColumnTotal', 'PercentageOfGrandTotal', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal']).indexOf(field.type) > -1) {\n                    format = 'P2';\n                }\n                else if (['PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar', 'Index'].indexOf(field.type) > -1) {\n                    format = undefined;\n                }\n                if (this.parent.dataSourceSettings.formatSettings.length > 0) {\n                    for (var fCnt = 0; fCnt < this.parent.dataSourceSettings.formatSettings.length; fCnt++) {\n                        var formatSettings = this.parent.dataSourceSettings.formatSettings[fCnt];\n                        if (field.name === formatSettings.name) {\n                            format = formatSettings.format;\n                            break;\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                }\n            }\n            formatArray[field.name] = format;\n        }\n        return formatArray;\n    };\n    Render.prototype.getValidHeader = function (args, axis) {\n        var values = this.parent.dataSourceSettings.values;\n        var cellValue;\n        if (axis === 'row') {\n            var cellInfo = args;\n            if (this.parent.dataSourceSettings.rows.length === 0 || this.parent.dataSourceSettings.columns.length === 0) {\n                if (this.parent.dataSourceSettings.rows.length === 0 && this.parent.dataSourceSettings.valueAxis === 'row' && (this.parent.localeObj.getConstant('grandTotal') +\n                    this.parent.dataSourceSettings.valueSortSettings.headerDelimiter + cellInfo.value)\n                    === cellInfo.data[0].valueSort.levelName) {\n                    return this.parent.localeObj.getConstant('total') + ' ' + this.parent.localeObj.getConstant(this.parent.engineModule.fieldList[cellInfo.value.toString()].aggregateType)\n                        + ' ' + this.parent.localeObj.getConstant('of') + ' ' + cellInfo.value.toString();\n                }\n                else if (values.length === 1 && this.parent.dataSourceSettings.rows.length === 0) {\n                    return this.parent.localeObj.getConstant('total') + ' ' + this.parent.localeObj.getConstant(values[values.length - 1].type)\n                        + ' ' + this.parent.localeObj.getConstant('of') + ' ' + (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(values[values.length - 1].caption) ? values[values.length - 1].caption : values[values.length - 1].name);\n                }\n            }\n            cellValue = cellInfo.value;\n        }\n        else if (axis === 'column') {\n            var cellInfo = args;\n            if (this.parent.dataSourceSettings.rows.length === 0 || this.parent.dataSourceSettings.columns.length === 0) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args\n                    .gridCell.column.customAttributes) && this.parent.dataSourceSettings.columns.length === 0 &&\n                    this.parent.dataSourceSettings.valueAxis === 'column' && (this.parent.localeObj.getConstant('grandTotal') +\n                    this.parent.dataSourceSettings.valueSortSettings.headerDelimiter + cellInfo.gridCell.column\n                    .customAttributes.cell.formattedText) === cellInfo.gridCell.column\n                    .customAttributes.cell.valueSort.levelName) {\n                    return this.parent.localeObj.getConstant('total') + ' ' + this.parent.localeObj.getConstant(this.parent.engineModule\n                        .fieldList[cellInfo.gridCell.column.customAttributes.cell.actualText]\n                        .aggregateType) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + cellInfo.gridCell\n                        .column.customAttributes.cell.formattedText;\n                }\n            }\n            cellValue = cellInfo.cell.value;\n        }\n        return cellValue;\n    };\n    Render.prototype.excelColumnEvent = function (args) {\n        if (this.parent.dataSourceSettings.columns.length === 0 && this.parent.dataSourceSettings.valueAxis === 'column') {\n            args.cell.value = this.getValidHeader(args, 'column');\n        }\n        if (args.gridCell !== undefined && args.gridCell.column.width === 'auto') {\n            this.parent.lastColumn = args.gridCell.column;\n            args.gridCell.column.width = args.gridCell.column.minWidth;\n        }\n        args = this.exportHeaderEvent(args, 'XLSX');\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.excelHeaderQueryCellInfo, args);\n    };\n    Render.prototype.pdfColumnEvent = function (args) {\n        if (this.parent.dataSourceSettings.columns.length === 0 && this.parent.dataSourceSettings.valueAxis === 'column') {\n            args.cell.value = this.getValidHeader(args, 'column');\n        }\n        if (args.gridCell !== undefined && args.gridCell.column.width === 'auto') {\n            this.parent.lastColumn = args.gridCell.column;\n            args.gridCell.column.width = args.gridCell.column.minWidth;\n        }\n        if (args.gridCell.column.index === 0) {\n            args.cell.colSpan = this.parent.isTabular ? this.parent.engineModule.rowMaxLevel + 1 : 1;\n        }\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.pdfHeaderQueryCellInfo, args);\n    };\n    Render.prototype.excelRowEvent = function (args) {\n        var pivotValue;\n        var rowMaxLevel = this.parent.isTabular ? this.parent.engineModule.rowMaxLevel : 0;\n        var colIndex = args.column ? args.column.index : undefined;\n        if (colIndex >= 0 && colIndex <= rowMaxLevel) {\n            var cell = args.data[colIndex];\n            var isValueCell = cell.type && cell.type === 'value';\n            var level = 0;\n            if (this.parent.dataType === 'olap') {\n                level = this.indentCollection[cell.rowIndex];\n            }\n            else {\n                var levelName = cell.valueSort ? cell.valueSort.levelName.toString() : '';\n                var memberPos = cell.actualText ?\n                    cell.actualText.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length : 0;\n                var levelPosition = levelName.split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length -\n                    (memberPos ? memberPos - 1 : memberPos);\n                level = levelPosition ? (levelPosition - 1) : 0;\n            }\n            this.colPos = 0;\n            args.style = { hAlign: 'Left', indent: level * 2 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n            if ((args.data[colIndex].rowSpan === 0 || args.data[colIndex].colSpan\n                === 0) && this.parent.exportType === 'CSV' && this.parent.isTabular) {\n                args.value = '';\n            }\n        }\n        else {\n            this.colPos++;\n            pivotValue = (args.data)[args.column.customAttributes.cell ?\n                args.column.customAttributes.cell.colIndex : this.colPos];\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(pivotValue.value) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(pivotValue.formattedText) || pivotValue.formattedText === '') {\n                args.value = this.parent.exportType === 'Excel' ? null : '';\n            }\n            else {\n                var aggMatrix = this.parent.dataType === 'pivot' && this.parent.engineModule ? this.parent.engineModule.aggregatedValueMatrix : undefined;\n                if (aggMatrix && aggMatrix[pivotValue.rowIndex] && aggMatrix[pivotValue.rowIndex][pivotValue.colIndex]) {\n                    args.value = aggMatrix[pivotValue.rowIndex][pivotValue.colIndex];\n                }\n                else {\n                    args.value = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(pivotValue.value) ? (pivotValue.formattedText === '#DIV/0!' ? pivotValue.formattedText : pivotValue.value) : pivotValue.formattedText;\n                }\n            }\n        }\n        args = this.exportContentEvent(args);\n        if (this.parent.dataSourceSettings.rows.length === 0 && this.parent.dataSourceSettings.valueAxis === 'row') {\n            args.value = args.column.field === '0.formattedText' ? this.getValidHeader(args, 'row')\n                : args.value;\n        }\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.excelQueryCellInfo, args);\n        if (pivotValue && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args.value) && args.value !== '') {\n            if (args.style && this.formatList[pivotValue.actualText]) {\n                args.style.type = 'number';\n                args.style.numberFormat = args.style.numberFormat ? args.style.numberFormat : this.formatList[pivotValue.actualText];\n            }\n            else if (this.formatList[pivotValue.actualText]) {\n                args.style = { numberFormat: this.formatList[pivotValue.actualText] };\n            }\n            args.column.format = this.formatList[pivotValue.actualText];\n        }\n    };\n    Render.prototype.pdfRowEvent = function (args) {\n        args = this.exportContentEvent(args);\n        if (args.column.field === '0.formattedText') {\n            var level = 0;\n            var cell = args.data[0];\n            var isValueCell = cell.type && cell.type === 'value';\n            if (this.parent.dataType === 'olap') {\n                level = this.indentCollection[cell.rowIndex];\n            }\n            else {\n                var levelName = cell.valueSort ? cell.valueSort.levelName.toString() : '';\n                var memberPos = cell.actualText ?\n                    cell.actualText.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length : 0;\n                var levelPosition = levelName.split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length -\n                    (memberPos ? memberPos - 1 : memberPos);\n                level = levelPosition ? (levelPosition - 1) : 0;\n            }\n            args.style = { paragraphIndent: level * 10 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n            if (this.parent.dataSourceSettings.rows.length === 0 && this.parent.dataSourceSettings.valueAxis === 'row') {\n                args.value = this.getValidHeader(args, 'row');\n            }\n        }\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_3__.pdfQueryCellInfo, args);\n    };\n    Render.prototype.excelDataBound = function (args) {\n        var excelRows = args.excelRows;\n        var rowStartPos = Object.keys(this.engine.headerContent).length;\n        for (var i = 0; i < rowStartPos; i++) {\n            var cells = excelRows[i].cells;\n            var tmpCell = [];\n            for (var j = 0; j < cells.length; j++) {\n                if (cells[j].rowSpan !== -1) {\n                    tmpCell.push(cells[j]);\n                }\n            }\n            excelRows[i].cells = tmpCell;\n        }\n    };\n    Render.prototype.exportHeaderEvent = function (args, exportType) {\n        var rowSpan = 1;\n        if (args.gridCell.column.customAttributes) {\n            var cell = args.gridCell.column.customAttributes.cell;\n            rowSpan = cell.rowSpan > 0 ? cell.rowSpan : 1;\n            if (exportType === 'XLSX') {\n                if (cell.rowSpan > 0) {\n                    rowSpan = cell.rowSpan;\n                }\n                else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(cell.type) && cell.level !== 0) {\n                    rowSpan = 1;\n                    args.cell.rowSpan = 1;\n                }\n            }\n            this.actualText = cell.actualText;\n        }\n        else {\n            rowSpan = Object.keys(this.engine.headerContent).length;\n        }\n        if (args.cell.rowSpan !== rowSpan && rowSpan > 0) {\n            args.cell.rowSpan = rowSpan;\n        }\n        return args;\n    };\n    /**\n     *\n     * @param {IGridValues} actualData - It contains the data source.\n     * @returns {IGridValues} - It frames the data source without index and indexObject properties.\n     * @hidden */\n    Render.prototype.frameGridDataSource = function (actualData) {\n        var framedDataSource = [];\n        for (var i = 0; i < actualData.length; i++) {\n            var keyPos = 0;\n            framedDataSource[i] = {};\n            var keys = Object.keys(actualData[i]);\n            for (var j = 0; actualData[i] != null && j < keys.length; j++) {\n                while (keyPos < keys.length) {\n                    framedDataSource[i][Number(keys[keyPos])] =\n                        this.cloneDataWithoutIndex(actualData[i][Number(keys[keyPos])]);\n                    keyPos++;\n                }\n            }\n        }\n        return framedDataSource;\n    };\n    /** @hidden */\n    Render.prototype.cloneDataWithoutIndex = function (data) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data)) {\n            var keys = Object.keys(data);\n            var keyPos = 0;\n            var clonedData = {};\n            while (keyPos < keys.length) {\n                if (keys[keyPos] !== 'indexObject' && keys[keyPos] !== 'index') {\n                    clonedData[keys[keyPos]] = data[keys[keyPos]];\n                }\n                keyPos++;\n            }\n            return clonedData;\n        }\n        return data;\n    };\n    Render.prototype.exportContentEvent = function (args) {\n        var cell = args.data[Number(args.column.field.split('.formattedText')[0])];\n        if (cell.rowSpan > 0 && cell.axis === 'row') {\n            args.cell.rowSpan = cell.rowSpan;\n        }\n        if (cell.colSpan > 0 && cell.axis === 'row') {\n            args.colSpan = cell.colSpan;\n        }\n        args.value = cell.type === 'grand sum' ? ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(cell.valueSort.axis) ?\n            this.parent.localeObj.getConstant('grandTotal') : cell.formattedText) : args.value;\n        return args;\n    };\n    Render.prototype.unWireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.EventHandler.remove(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick);\n        }\n        else {\n            return;\n        }\n    };\n    Render.prototype.wireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.EventHandler.add(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick, this);\n        }\n        else {\n            return;\n        }\n    };\n    Render.prototype.setSpanAttributes = function (attrName, spanValue, element) {\n        element.setAttribute(attrName, spanValue ? spanValue.toString() : '1');\n        element.classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ROWSHEADER, _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.FREEZE_LEFT_BORDER, _common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.TABULAR_LAYOUT_HEADER);\n        if (spanValue === 0) {\n            element.classList.add(_common_base_css_constant__WEBPACK_IMPORTED_MODULE_2__.ICON_DISABLE);\n        }\n    };\n    Render.prototype.updatePivotColumn = function (pivotColumns, n, autoFitApplied, refreshColumn, gridColumns) {\n        pivotColumns[n] = {\n            field: (n + '.formattedText'),\n            width: (autoFitApplied && !refreshColumn && !this.parent.isEmptyGrid && pivotColumns[n].autoFit)\n                ? gridColumns[n].width : this.resColWidth,\n            minWidth: 30,\n            headerText: '',\n            allowReordering: false,\n            allowResizing: this.parent.gridSettings.allowResizing,\n            visible: true,\n            clipMode: this.parent.gridSettings.clipMode\n        };\n    };\n    Render.prototype.getTotalColumnWidth = function (buttonDivs, n) {\n        var totalColumnWidth = 0;\n        for (var i = n; i < buttonDivs.length; i++) {\n            var buttonWidth = buttonDivs[i].getBoundingClientRect().width < this.parent.gridSettings.columnWidth ?\n                this.parent.gridSettings.columnWidth : buttonDivs[i].getBoundingClientRect().width;\n            totalColumnWidth += buttonWidth + 6;\n        }\n        return totalColumnWidth;\n    };\n    return Render;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pivotview/src/pivotview/renderer/render.js?");

/***/ })

}]);