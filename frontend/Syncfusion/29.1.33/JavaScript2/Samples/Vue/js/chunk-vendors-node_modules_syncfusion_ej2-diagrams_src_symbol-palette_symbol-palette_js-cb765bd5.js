"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-diagrams_src_symbol-palette_symbol-palette_js-cb765bd5"],{

/***/ "./node_modules/@syncfusion/ej2-diagrams/src/symbol-palette/symbol-palette.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-diagrams/src/symbol-palette/symbol-palette.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Palette: () => (/* binding */ Palette),\n/* harmony export */   SymbolDragSize: () => (/* binding */ SymbolDragSize),\n/* harmony export */   SymbolPalette: () => (/* binding */ SymbolPalette),\n/* harmony export */   SymbolPreview: () => (/* binding */ SymbolPreview)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\");\n/* harmony import */ var _diagram_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../diagram/index */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/index.js\");\n/* harmony import */ var _diagram_rendering_svg_renderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../diagram/rendering/svg-renderer */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/rendering/svg-renderer.js\");\n/* harmony import */ var _diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../diagram/utility/dom-util */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/dom-util.js\");\n/* harmony import */ var _diagram_utility_diagram_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../diagram/utility/diagram-util */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/diagram-util.js\");\n/* harmony import */ var _diagram_utility_base_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../diagram/utility/base-util */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/base-util.js\");\n/* harmony import */ var _diagram_utility_connector__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../diagram/utility/connector */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/connector.js\");\n/* harmony import */ var _diagram_primitives_point__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../diagram/primitives/point */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/primitives/point.js\");\n/* harmony import */ var _diagram_rendering_canvas_renderer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../diagram/rendering/canvas-renderer */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/rendering/canvas-renderer.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/ban-types */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// eslint-disable-next-line\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Connector;\n    }\n    if (obj.shape && (obj.shape instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Shape || obj.shape.type)) {\n        return _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Node;\n    }\n    return _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    // eslint-disable-next-line\n    function Palette(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.CollectionFactory)(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * customize the drag size of the individual palette items.\n */\nvar SymbolDragSize = /** @class */ (function (_super) {\n    __extends(SymbolDragSize, _super);\n    function SymbolDragSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SymbolDragSize.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SymbolDragSize.prototype, \"height\", void 0);\n    return SymbolDragSize;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _diagram_primitives_point__WEBPACK_IMPORTED_MODULE_8__.Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods\n    /**\n     *  Constructor for creating the symbol palette Component\n     *\n     * @param {SymbolPaletteModel} options The symbol palette model.\n     * @param {string | HTMLElement} element The symbol palette element.\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.oldObject = null;\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        _this.paletteid = 88123;\n        _this.checkOnRender = false;\n        _this.symbolTooltipObject = null;\n        // eslint-disable\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = (_this.selectedSymbol && _this.selectedSymbol.id) || e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[\"\" + id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                //const position: PointModel = this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[parseInt(i.toString(), 10)].symbols.length; j++) {\n                child = _this.palettes[parseInt(i.toString(), 10)].symbols[parseInt(j.toString(), 10)];\n                node = options.palettes[parseInt(i.toString(), 10)].symbols[parseInt(j.toString(), 10)];\n                if (child && child.shape.type === 'UmlActivity') {\n                    (0,_diagram_utility_diagram_util__WEBPACK_IMPORTED_MODULE_5__.setUMLActivityDefaults)(node, child);\n                }\n                if (_this.nodeDefaults || _this.connectorDefaults) {\n                    (0,_diagram_utility_diagram_util__WEBPACK_IMPORTED_MODULE_5__.updateDefaultValues)(child, node, child instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Node ? _this.nodeDefaults : _this.connectorDefaults);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\\\n     *\n     * @returns {  void}    Refreshes the panel when the symbol palette properties are updated .\\\n     * @param {SymbolPaletteModel} newProp - Defines the new values of the changed properties.\n     * @param {SymbolPaletteModel} oldProp - Defines the old values of the changed properties.\n     */\n    // eslint-disable-next-line\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    if (this.isReact) {\n                        refresh = false;\n                    }\n                    else {\n                        refresh = true;\n                    }\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() && !this.accordionElement.items[parseInt(index.toString(), 10)]) {\n                            this.accordionElement.items[parseInt(index.toString(), 10)] = {\n                                header: newProp.palettes[parseInt(index.toString(), 10)].title || '',\n                                expanded: newProp.palettes[parseInt(index.toString(), 10)].expanded,\n                                iconCss: newProp.palettes[parseInt(index.toString(), 10)].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[parseInt(index.toString(), 10)].height) {\n                            var paletteDiv = document.getElementById(this.palettes[parseInt(index.toString(), 10)].id + '_content');\n                            paletteDiv.style.height = newProp.palettes[parseInt(index.toString(), 10)].height + 'px';\n                        }\n                        if (newProp.palettes[parseInt(index.toString(), 10)].iconCss !== undefined) {\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                                this.accordionElement.items[parseInt(index.toString(), 10)].iconCss = newProp.palettes[parseInt(index.toString(), 10)].iconCss || '';\n                                refresh = true;\n                            }\n                        }\n                        if (newProp.palettes[parseInt(index.toString(), 10)].expanded !== undefined && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                            if (!this.palettes[parseInt(index.toString(), 10)].isInteraction) {\n                                this.accordionElement.items[parseInt(index.toString(), 10)].expanded\n                                    = newProp.palettes[parseInt(index.toString(), 10)].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[parseInt(index.toString(), 10)].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                        if (!this.enableAnimation) {\n                            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                        }\n                        else {\n                            this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                        }\n                    }\n                    break;\n                case 'expandMode':\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                        this.accordionElement.expandMode = this.expandMode;\n                        refresh = true;\n                        this.isExpandMode = true;\n                    }\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.initDraggable();\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[parseInt(p.toString(), 10)].id;\n                if (window[\"\" + paletteElement]) {\n                    if (window[\"\" + paletteElement].length > 1) {\n                        window[\"\" + paletteElement][1].parentNode.removeChild(window[\"\" + paletteElement][1]);\n                        window[\"\" + paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * updateBlazorProperties method\\\n     *\n     * @returns {void}    updateBlazorProperties method .\\\n     * @param {SymbolPaletteModel} newProp - provide the scale value.\n     *\n     * @private\n     */\n    // public updateBlazorProperties(newProp: SymbolPaletteModel): void {\n    //     const blazorInterop: string = 'sfBlazor';\n    //     const blazor: string = 'Blazor';\n    //     if (window && window[`${blazor}`]) {\n    //         const palObj: object = { palette: newProp.palettes };\n    //         const obj: object = { 'methodName': 'UpdateBlazorProperties', 'paletteobj': palObj };\n    //         window[`${blazorInterop}`].updateBlazorProperties(obj, this);\n    //     }\n    // }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string}  Get the properties to be maintained in the persisted state.\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initializes the values of private members.\n     *\n     * @returns {void}  Initializes the values of private members.\n     * @private\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.l10n = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n(this.getModuleName(), this.defaultLocale(), this.locale);\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-symbolpalette').length;\n            this.element.id = 'symbolpalette_' + this.paletteid + '_' + collection;\n        }\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.createTextbox();\n        }\n        //create accordion element\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            var accordionDiv = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('div', { id: this.element.id + '_container' });\n            this.accordionElement = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Accordion({\n                expandMode: this.expandMode\n            });\n            if (!this.enableAnimation) {\n                this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n            }\n            this.accordionElement.created = function () {\n                _this.checkOnRender = true;\n            };\n            this.accordionElement.expanded = function (args) {\n                var index = _this.accordionElement.items.indexOf(args.item);\n                var isAllowDatabind = _this.allowServerDataBinding;\n                _this.allowServerDataBinding = false;\n                _this.palettes[parseInt(index.toString(), 10)].expanded = args.isExpanded;\n                _this.palettes[parseInt(index.toString(), 10)].isInteraction = true;\n                _this.allowServerDataBinding = isAllowDatabind;\n            };\n            this.accordionElement.expanding = function (args) {\n                if (_this.checkOnRender) {\n                    // eslint-disable-next-line\n                    var diagramArgs = {\n                        element: args.element, content: args.content, index: args.index, cancel: false,\n                        isExpanded: args.isExpanded, palette: _this.palettes[args.index]\n                    };\n                    var event_1 = 'paletteExpanding';\n                    _this.trigger(event_1, diagramArgs);\n                    args.cancel = diagramArgs.cancel;\n                }\n            };\n            this.element.appendChild(accordionDiv);\n        }\n        var measureWindowElement = 'measureElement';\n        if (window[\"\" + measureWindowElement]) {\n            window[\"\" + measureWindowElement] = null;\n        }\n        (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createMeasureElements)();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * EJ2-61531- Localization support for the symbol palette search box placeholder.\n     * @returns {Object} defaultLocale\n     */\n    SymbolPalette.prototype.defaultLocale = function () {\n        return { SearchShapes: 'Search Shapes' };\n    };\n    /**\n     * Renders the rulers.\n     *\n     * @returns {void}  Renders the rulers.\n     * @private\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.DiagramRenderer(this.element.id, new _diagram_rendering_svg_renderer__WEBPACK_IMPORTED_MODULE_3__.SvgRenderer(), false);\n        this.svgRenderer = new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.DiagramRenderer(this.element.id, new _diagram_rendering_svg_renderer__WEBPACK_IMPORTED_MODULE_3__.SvgRenderer(), true);\n        this.updatePalettes();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.accordionElement.appendTo('#' + this.element.id + '_container');\n        }\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     *\n     * @returns {string}  Core method to return the component name.\n     * @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering.\n     *\n     * @returns {ModuleDeclaration[]}  To provide the array of modules needed for control rendering .\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     *To destroy the ruler\n     *\n     * @returns {void} To destroy the ruler\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[\"\" + measureElemnt]) {\n                    window[\"\" + measureElemnt].usageCount -= 1;\n                    var measureElementCount = 'measureElementCount';\n                    window[\"\" + measureElementCount]--;\n                    if (window[\"\" + measureElementCount] === 0) {\n                        window[\"\" + measureElemnt].parentNode.removeChild(window[\"\" + measureElemnt]);\n                        window[\"\" + measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n        }\n    };\n    /**\n     * Add particular palettes to symbol palette at runtime.\\\n     *\n     * @returns {  void}    Refreshes the ruler when the Ruler properties are updated .\\\n     * @param { PaletteModel[]} palettes -Defines the collection of palettes to be added.\n     */\n    SymbolPalette.prototype.addPalettes = function (palettes) {\n        var palette;\n        for (var i = 0; i < palettes.length; i++) {\n            var isEnableServerDatabind = this.allowServerDataBinding;\n            this.isProtectedOnChange = true;\n            this.allowServerDataBinding = false;\n            palette = new Palette(this, 'palettes', palettes[parseInt(i.toString(), 10)], true);\n            this.palettes.push(palette);\n            this.initSymbols(palette);\n            this.allowServerDataBinding = isEnableServerDatabind;\n            this.isProtectedOnChange = false;\n            this.renderPalette(palette);\n        }\n        this.bulkChanges = {};\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.accordionElement.refresh();\n        }\n    };\n    /**\n     * removePalette method\\\n     *\n     * @returns {void}    removePalette method .\\\n     * @param {string} paletteId - provide the scale value.\n     *\n     * @private\n     */\n    SymbolPalette.prototype.removePalette = function (paletteId) {\n        for (var i = 0; i < this.palettes.length; i++) {\n            if (this.palettes[parseInt(i.toString(), 10)].id === paletteId) {\n                this.palettes.splice(i, 1);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                    this.accordionElement.items.splice(i, 1);\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Remove particular palettes to symbol palette at runtime \\\n     *\n     * @returns {void}   Remove particular palettes to symbol palette at runtime .\\\n     * @param {string[]} palettes - provide the scale value.\n     */\n    SymbolPalette.prototype.removePalettes = function (palettes) {\n        var isEnableServerDatabind = this.allowServerDataBinding;\n        this.allowServerDataBinding = false;\n        for (var i = 0; i < palettes.length; i++) {\n            this.removePalette(palettes[parseInt(i.toString(), 10)]);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.accordionElement.refresh();\n        }\n        else {\n            this.updatePalettes();\n        }\n        this.allowServerDataBinding = isEnableServerDatabind;\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols \\\n     *\n     * @returns {void}    Method to initialize the items in the symbols .\\\n     * @param {PaletteModel} symbolGroup - provide the scale value.\n     *\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + (0,_diagram_utility_base_util__WEBPACK_IMPORTED_MODULE_6__.randomId)(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + (0,_diagram_utility_base_util__WEBPACK_IMPORTED_MODULE_6__.randomId)(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            //Rendering the UML node as an HTML group node ensures that it is visually represented exactly as intended in the diagram\n            if (symbol.shape.type === 'UmlClassifier' && !symbol.shape.relationship) {\n                var umlObj = symbol;\n                var newObj = void 0;\n                var getStyle = void 0;\n                if (symbol.style.fill === 'white') {\n                    getStyle = {\n                        fill: '#26A0DA'\n                    };\n                }\n                else {\n                    getStyle = {\n                        fill: symbol.style.fill\n                    };\n                }\n                if (symbol.shape.classifier === 'Class') {\n                    newObj = {\n                        id: 'node' + (0,_diagram_utility_base_util__WEBPACK_IMPORTED_MODULE_6__.randomId)(), shape: {\n                            type: 'HTML', content: '<div id=\"parentDiv\" style=\"width:100%; height:50%; border:1px solid #000; background:#6BA5D7; display: flex; align-items: center; justify-content: center;\"><div id=\"textDiv\" style=\"font-size:0.7vw;\">class</div></div>'\n                        },\n                        width: umlObj.width ? umlObj.width : 100,\n                        height: umlObj.height ? umlObj.height : 100,\n                        style: getStyle,\n                        offsetX: umlObj.width ? umlObj.width / 2 : 50,\n                        offsetY: umlObj.height ? umlObj.height / 2 : 50\n                    };\n                    this.addPaletteItem(symbolGroup.id, newObj);\n                }\n                else if (symbol.shape.classifier === 'Enumeration') {\n                    newObj = {\n                        id: 'node' + (0,_diagram_utility_base_util__WEBPACK_IMPORTED_MODULE_6__.randomId)(), shape: {\n                            type: 'HTML', content: '<div id=\"parentDiv2\" style=\"width:100%; height:50%; border:1px solid #000; background:#6BA5D7; display: flex; align-items: center; justify-content: center;\"><div id=\"textDiv2\" style=\"font-size:0.5vw;\">Enumeration</div></div>'\n                        },\n                        width: umlObj.width ? umlObj.width : 100,\n                        height: umlObj.height ? umlObj.height : 100,\n                        style: getStyle,\n                        offsetX: umlObj.width ? umlObj.width / 2 : 50,\n                        offsetY: umlObj.height ? umlObj.height / 2 : 50\n                    };\n                    this.addPaletteItem(symbolGroup.id, newObj);\n                }\n                else if (symbol.shape.classifier === 'Interface') {\n                    newObj = {\n                        id: 'node' + (0,_diagram_utility_base_util__WEBPACK_IMPORTED_MODULE_6__.randomId)(), shape: {\n                            type: 'HTML', content: '<div id=\"parentDiv3\" style=\"width:100%; height:50%; border:1px solid #000; background:#6BA5D7; display: flex; align-items: center; justify-content: center;\"><div id=\"textDiv3\" style=\"font-size:0.7vw;\">Interface</div></div>'\n                        },\n                        width: umlObj.width ? umlObj.width : 100,\n                        height: umlObj.height ? umlObj.height : 100,\n                        style: getStyle,\n                        offsetX: umlObj.width ? umlObj.width / 2 : 50,\n                        offsetY: umlObj.height ? umlObj.height / 2 : 50\n                    };\n                    this.addPaletteItem(symbolGroup.id, newObj);\n                }\n                var memberObj = {\n                    id: 'member' + (0,_diagram_utility_base_util__WEBPACK_IMPORTED_MODULE_6__.randomId)(), shape: { type: 'HTML', content: '<div style=\"width:100%;height:100%;border:1px solid #000;background:white\"></div>' },\n                    width: umlObj.width ? umlObj.width : 100,\n                    height: umlObj.height ? umlObj.height : 100,\n                    offsetX: umlObj.width ? umlObj.width / 2 : 50,\n                    offsetY: umlObj.height ? umlObj.height / 2 + (newObj.height / 2) : 50 + (newObj.height / 2)\n                };\n                this.addPaletteItem(symbolGroup.id, memberObj);\n                umlObj.children = [newObj.id, memberObj.id];\n            }\n            //Set the strokeDashArray for specific connectors to ensure that it is visually represented exactly as intended in the diagram\n            if (symbol.shape.type === 'UmlClassifier' && symbol.shape.relationship) {\n                if (symbol.shape.relationship === 'Inheritance') {\n                    symbol.style.strokeDashArray = symbol.style.strokeDashArray ? symbol.style.strokeDashArray : '4 4';\n                }\n                if (symbol.shape.relationship === 'Dependency') {\n                    symbol.style.strokeDashArray = symbol.style.strokeDashArray ? symbol.style.strokeDashArray : '4 4';\n                }\n            }\n            if (symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Node) {\n                var getNodeDefaults = (0,_diagram_utility_base_util__WEBPACK_IMPORTED_MODULE_6__.getFunction)(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Connector) {\n                var getConnectorDefaults = (0,_diagram_utility_base_util__WEBPACK_IMPORTED_MODULE_6__.getFunction)(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[parseInt(i.toString(), 10)].children.length; j++) {\n                node = (this.symbolTable[group[parseInt(i.toString(), 10)].children[parseInt(j.toString(), 10)]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[parseInt(i.toString(), 10)].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteParentDiv = document.getElementById(symbolGroup.id);\n        var paletteDiv = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            var item = {\n                header: symbolGroup.title, expanded: symbolGroup.expanded,\n                content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n            };\n            this.accordionElement.items.push(item);\n        }\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes \\\n     *\n     * @returns {void}    Used to add the palette item as nodes or connectors in palettes .\\\n     * @param {string} paletteName - provide the scale value.\n     * @param {NodeModel | ConnectorModel} paletteSymbol - provide the scale value.\n     * @param {boolean} isChild - provide the scale value.\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol, isChild) {\n        paletteSymbol = (0,_diagram_utility_base_util__WEBPACK_IMPORTED_MODULE_6__.cloneObject)(paletteSymbol);\n        //let refresh: boolean;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[parseInt(i.toString(), 10)];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // eslint-disable-next-line\n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // eslint-disable-next-line\n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    var isEnableServerDatabind_1 = this.allowServerDataBinding;\n                    this.allowServerDataBinding = false;\n                    obj[Object.keys(paletteSymbol)[parseInt(i_1.toString(), 10)]]\n                        = paletteSymbol[Object.keys(paletteSymbol)[parseInt(i_1.toString(), 10)]];\n                    this.allowServerDataBinding = isEnableServerDatabind_1;\n                }\n                (0,_diagram_utility_diagram_util__WEBPACK_IMPORTED_MODULE_5__.updateDefaultValues)(obj, paletteSymbol, obj instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Node ? this.nodeDefaults : this.connectorDefaults);\n                symbolPaletteGroup.symbols.push(obj);\n                var isEnableServerDatabind = this.allowServerDataBinding;\n                this.allowServerDataBinding = false;\n                this.prepareSymbol(obj);\n                this.allowServerDataBinding = isEnableServerDatabind;\n                this.symbolTable[obj.id] = obj;\n                if (isChild) {\n                    this.childTable[obj.id] = obj;\n                }\n                else {\n                    var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                    if (paletteDiv) {\n                        paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                    }\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes \\\n     *\n     * @returns {void}    Used to remove the palette item as nodes or connectors in palettes .\\\n     * @param {string} paletteName - provide the scale value.\n     * @param {string} symbolId - provide the scale value.\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[parseInt(i.toString(), 10)];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[parseInt(i_2.toString(), 10)])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Canvas();\n        var container = (symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = (0,_diagram_utility_base_util__WEBPACK_IMPORTED_MODULE_6__.getFunction)(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                if (symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Connector && symbol.shape.type === 'UmlClassifier' && symbol.shape.relationship) {\n                    content = symbol.init(this);\n                    for (var i = content.children.length - 1; i >= 0; i--) {\n                        if (content.children[parseInt(i.toString(), 10)] instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.TextElement) {\n                            content.children.splice(i, 1);\n                        }\n                    }\n                }\n                else {\n                    content = symbol.init(this);\n                }\n                if (symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = (0,_diagram_utility_base_util__WEBPACK_IMPORTED_MODULE_6__.getFunction)(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || this.symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                //let isLane: boolean = (symbol.shape as SwimLane).isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                //Bug 873843: Issue with node height and width in the symbol palette. Checked !== Bpmn to avoid the actual height decrement for bpmn nodes\n                if (symbol.shape && symbol.shape.type !== 'Bpmn' && symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Connector) {\n                    outerBounds = (0,_diagram_utility_connector__WEBPACK_IMPORTED_MODULE_7__.getOuterBounds)(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel, symbol);\n            //EJ2-867827 - In diagram palette symbols, part of the symbol is not visible in left and top side\n            stackPanel.padding = { left: 1, right: 1, bottom: 1, top: 1 };\n            stackPanel.measure(new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    // private getBlazorSymbolInfo(symbol: NodeModel | ConnectorModel, symbolInfo: SymbolInfo): SymbolInfo {\n    //     const node: NodeModel | ConnectorModel = symbol as NodeModel | ConnectorModel;\n    //     const shapeSymbolInfo: SymbolPaletteInfoModel = node.symbolInfo;\n    //     if (shapeSymbolInfo) {\n    //         symbolInfo.description = shapeSymbolInfo.description || this.symbolInfo.description;\n    //         symbolInfo.fit = shapeSymbolInfo.fit || this.symbolInfo.fit;\n    //         symbolInfo.height = shapeSymbolInfo.height || this.symbolInfo.height;\n    //         symbolInfo.width = shapeSymbolInfo.width || this.symbolInfo.width;\n    //         symbolInfo.tooltip = shapeSymbolInfo.tooltip || this.symbolInfo.tooltip;\n    //         symbolInfo.template = shapeSymbolInfo.template || this.symbolInfo.template;\n    //     }\n    //     return symbolInfo;\n    // }\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[parseInt(i.toString(), 10)]]) {\n                container.children.push(this.symbolTable[child[parseInt(i.toString(), 10)]].wrapper);\n            }\n        }\n        container.measure(new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            (0,_diagram_utility_diagram_util__WEBPACK_IMPORTED_MODULE_5__.arrangeChild)(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Feature [EJ2- 47318] - Support for the change of the symbol description\n     * Feature [EJ2- 50705] - Support to add margin between the text and symbols\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent, symbol) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.id = parent.id + '_text';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.color = symbolInfo.description.color || 'black';\n            textElement.style.fill = symbolInfo.description.fill || 'transparent';\n            textElement.style.fontFamily = symbolInfo.description.fontFamily || 'Arial';\n            textElement.style.fontSize = symbolInfo.description.fontSize || 12;\n            textElement.style.bold = symbolInfo.description.bold || false;\n            textElement.style.italic = symbolInfo.description.italic || false;\n            textElement.style.textDecoration = symbolInfo.description.textDecoration || 'None';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            //Bug 873843: Issue with node height and width in the symbol palette. Added below to set margin bottom value for bpmn symbol with description.\n            if (symbol.shape && symbol.shape.type === 'Bpmn') {\n                textElement.margin = {\n                    left: 0, right: 0,\n                    top: symbolInfo.description.margin ? symbolInfo.description.margin.top : 0,\n                    bottom: symbolInfo.description.margin ? symbolInfo.description.margin.bottom : this.symbolMargin.bottom\n                };\n            }\n            else {\n                textElement.margin = {\n                    left: 0, right: 0,\n                    top: symbolInfo.description.margin ? symbolInfo.description.margin.top : 0,\n                    bottom: symbolInfo.description.margin ? symbolInfo.description.margin.bottom : 5\n                };\n            }\n            parent.children.push(textElement);\n        }\n    };\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    SymbolPalette.prototype.getSymbolPreview = function (\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    symbol, evt, parentDiv) {\n        this.allowServerDataBinding = false;\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        var symbolPreview = symbol.previewSize;\n        if ((symbol && (symbolPreview.width || symbolPreview.height)) ||\n            this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (symbolPreview.width || this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (symbolPreview.height || this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            // EJ2-56887 - Connector do not get rendered properly in symbol palette.\n            // Added below code to check if connector width is less than strokewidth means then set symbol width for connector.\n            if (symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Connector) {\n                if (content.actualSize.width <= symbol.style.strokeWidth) {\n                    content.actualSize.width = this.symbolWidth;\n                }\n                if (content.actualSize.height <= symbol.style.strokeWidth) {\n                    content.actualSize.height = this.symbolHeight;\n                }\n            }\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Node);\n        var previewContainer = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createSvgElement)('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createSvgElement)('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n            //EJ2-838575 - for refreshing the symbols after dragged\n            this.prepareSymbol(symbol);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n            //EJ2-838575 - for refreshing the symbols after dragged\n            this.prepareSymbol(symbol);\n        }\n        else if (symbol.shape.type === 'UmlClassifier' && !symbol.shape.relationship) {\n            if (symbol.children &&\n                symbol.children.length > 0 && (0,_diagram_utility_diagram_util__WEBPACK_IMPORTED_MODULE_5__.groupHasType)(symbol, 'HTML', this.childTable)) {\n                div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n                this.prepareSymbol(symbol);\n            }\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && (0,_diagram_utility_diagram_util__WEBPACK_IMPORTED_MODULE_5__.groupHasType)(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n                //EJ2-838575 - for refreshing the symbols after dragged\n                this.prepareSymbol(symbol);\n            }\n            else {\n                canvas = _diagram_rendering_canvas_renderer__WEBPACK_IMPORTED_MODULE_9__.CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                // BLAZ-3223: translate applied only for Basic and Flow now and need to add for remaining shapes in future\n                if (symbol.shape.type === 'Basic' || symbol.shape.type === 'Flow') {\n                    style += 'transform: scale(0.5) translate(-' + canvas.width / 2 + 'px, -' + canvas.height / 2 + 'px);';\n                }\n                else {\n                    style += 'transform:scale(0.5);';\n                }\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n                //EJ2-838575 - for refreshing the symbols after dragged\n                this.prepareSymbol(symbol);\n            }\n        }\n        (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.applyStyleAgainstCsp)(((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas), style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        this.allowServerDataBinding = true;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Transform.Self;\n        }\n        content.measure(new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Size());\n        content.arrange(content.desiredSize);\n        if (content.children && content.children.length > 0) {\n            content.children[0].transform = _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        //Bug 857673: Symbol palette tooltip is not rendered properly after search symbols and hover over palette shapes\n        // If the shape is to be rendered in search palette, then the id of the shape is appended with 'SearchSymbol'\n        // To create a unique id for the shape in search palette to avoid tooltip issue.\n        var symbolId = parentDiv.id === 'SearchPalette' ? symbol.id + 'SearchSymbol' : symbol.id;\n        var container = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('div', {\n            id: symbolId + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden'\n            // title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createSvgElement)('svg', {\n                id: symbolId,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createSvgElement)('g', { id: symbolId + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false, parentDiv.id === 'SearchPalette');\n        }\n        //This method is responsible for rendering the UML node, as the UML node is displayed as an HTML group node.\n        else if (symbol.shape.type === 'UmlClassifier' && !symbol.shape.relationship) {\n            if (symbol.children &&\n                symbol.children.length > 0 && (0,_diagram_utility_diagram_util__WEBPACK_IMPORTED_MODULE_5__.groupHasType)(symbol, 'HTML', this.childTable)) {\n                div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && (0,_diagram_utility_diagram_util__WEBPACK_IMPORTED_MODULE_5__.groupHasType)(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = _diagram_rendering_canvas_renderer__WEBPACK_IMPORTED_MODULE_9__.CanvasRenderer.createCanvas(symbolId, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.applyStyleAgainstCsp)(((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas), style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute'\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = _diagram_rendering_canvas_renderer__WEBPACK_IMPORTED_MODULE_9__.CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview, isSearchSymbol) {\n        //Bug 857673: Symbol palette tooltip is not rendered properly after search symbols and hover over palette shapes\n        // If the shape is to be rendered in search palette, then the id of the shape is appended with 'SearchSymbol'\n        // To create a unique id for the shape in search palette to avoid tooltip issue.\n        var symbolId = isSearchSymbol ? symbol.id + 'SearchSymbol' : symbol.id;\n        var div = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('div', {\n            'id': symbolId + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('div', {\n            'id': symbolId + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('div', {\n            'id': symbolId + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute'\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        //EJ2-841339 - Html shapes in palette are not rendered properly\n        var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n        var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n        var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n        style += 'margin-left:' +\n            Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n            + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n            + 'px;';\n        style += 'transform:scale(.5,.5);position:absolute';\n        canvas = _diagram_rendering_canvas_renderer__WEBPACK_IMPORTED_MODULE_9__.CanvasRenderer.createCanvas(symbolId, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.applyStyleAgainstCsp)(canvas, style);\n        container.appendChild(div);\n        //EJ2-70280 - Text description in symbol palette for HTML nodes is not visible.\n        if (isPreview) {\n            //When dragging the UML node from the palette, set the preview specifically for that UML node\n            if (symbol.shape.type === 'UmlClassifier') {\n                if (symbol.shape.classifier === 'Class') {\n                    symbol.wrapper.children[0].children[0].children[0].content = '<div id=\"parentDiv\" style=\"width:100%; height:50%; border:1px solid #000; background:#6BA5D7; display: flex; align-items: center; justify-content: center;\"><div id=\"textDiv\" style=\"font-size:1vw;\">class</div></div>';\n                }\n                else if (symbol.shape.classifier === 'Enumeration') {\n                    symbol.wrapper.children[0].children[0].children[0].content = '<div id=\"parentDiv2\" style=\"width:100%; height:50%; border:1px solid #000; background:#6BA5D7; display: flex; align-items: center; justify-content: center;\"><div id=\"textDiv2\" style=\"font-size:0.8vw;\">Enumeration</div></div>';\n                }\n                else if (symbol.shape.classifier === 'Interface') {\n                    symbol.wrapper.children[0].children[0].children[0].content = '<div id=\"parentDiv3\" style=\"width:100%; height:50%; border:1px solid #000; background:#6BA5D7; display: flex; align-items: center; justify-content: center;\"><div id=\"textDiv3\" style=\"font-size:0.9vw;\">Interface</div></div>';\n                }\n            }\n            this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        }\n        else {\n            this.diagramRenderer.renderElement(symbol.wrapper, canvas, htmlLayer);\n        }\n        return div;\n    };\n    // eslint-disable-next-line\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    /** Gets the default content of the Tooltip\n     *\n     * @returns {string | HTMLElement} Returns the default content of the Tooltip.\\\n     * @param {object} obj - provide the Symbol object.\n     */\n    SymbolPalette.prototype.getContent = function (obj) {\n        var isPrivateTooltip = ((this.hoverElement instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Node) &&\n            this.hoverElement.constraints & _diagram_index__WEBPACK_IMPORTED_MODULE_2__.NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Connector) &&\n                this.hoverElement.constraints & _diagram_index__WEBPACK_IMPORTED_MODULE_2__.ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            obj.id;\n        return content;\n    };\n    /**\n     * Initialize the basic properties of Toolip object\n     *\n     * @returns {Tooltip} Returns the basic properties of Toolip object.\\\n     * @param {NodeModel | ConnectorModel} element - provide the Symbol object.\n     */\n    SymbolPalette.prototype.initTooltip = function (element) {\n        var tooltip;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            var tooltipOption = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_10__.Tooltip;\n            tooltipOption = this.updateTooltipContent(this.hoverElement.tooltip, tooltipOption);\n            tooltip = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_10__.Tooltip(tooltipOption);\n            tooltip.cssClass = 'e-symbolPalette-tooltip';\n            tooltip.opensOn = 'custom';\n            tooltip.appendTo('#' + element.id);\n            tooltip.close();\n        }\n        return tooltip;\n    };\n    /**Method to update Tooltip Content\n     *\n     * @returns { Tooltip } Returns the basic properties of Toolip object.\\\n     *\n     * @param {TooltipModel} tooltip - provide the Symbol object.\n     * @param {Tooltip} tooltipObject - provide the Symbol object.\n     */\n    SymbolPalette.prototype.updateTooltipContent = function (tooltip, tooltipObject) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = 'BottomRight';\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n        return tooltipObject;\n    };\n    /**\n     * To open the Tooltip element relevant to the target and relative mode\n     *\n     * @returns { void} opens the Tooltip element relevant to the target and relative mode.\\\n     *\n     * @param {PointModel} mousePosition - provide the mousePosition value.\n     * @param {boolean} elementOver - provide the elementOver value.\n     * @param {boolean} isSearchSymbol - provide the isSearchSymbol value.\n     */\n    SymbolPalette.prototype.elementEnter = function (mousePosition, elementOver, isSearchSymbol) {\n        if (!elementOver) {\n            //set the collision target element to given position if enabled\n            this.symbolTooltipObject.windowCollision = true;\n            //840454 - support to provide isSticky property for tooltip in diagram control\n            if (this.hoverElement.tooltip.isSticky) {\n                this.symbolTooltipObject.isSticky = true;\n            }\n            if (this.hoverElement instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Node) {\n                if (!(this.hoverElement.constraints & (_diagram_index__WEBPACK_IMPORTED_MODULE_2__.NodeConstraints.Default && _diagram_index__WEBPACK_IMPORTED_MODULE_2__.NodeConstraints.Tooltip))) {\n                    this.hoverElement.tooltip.content = this.hoverElement.id;\n                    //Task 834121: Content-Security-Policy support for diagram\n                    this.symbolTooltipObject.content = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.initializeCSPTemplate)(function () {\n                        return this.hoverElement.id;\n                    }, this);\n                }\n            }\n            else if (this.hoverElement instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Connector) {\n                if (!(this.hoverElement.constraints & (_diagram_index__WEBPACK_IMPORTED_MODULE_2__.ConnectorConstraints.Default && _diagram_index__WEBPACK_IMPORTED_MODULE_2__.ConnectorConstraints.Tooltip))) {\n                    this.hoverElement.tooltip.content = this.hoverElement.id;\n                    this.symbolTooltipObject.content = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.initializeCSPTemplate)(function () {\n                        return this.hoverElement.id;\n                    }, this);\n                }\n            }\n            if (this.hoverElement.tooltip.content) {\n                if (this.hoverElement.tooltip.relativeMode === 'Mouse') {\n                    //To set relative mode only to object for Symbol Palatte\n                    this.hoverElement.tooltip.relativeMode = 'Object';\n                    this.symbolTooltipObject.offsetX = 0;\n                    this.symbolTooltipObject.offsetY = 0;\n                }\n                else {\n                    this.symbolTooltipObject.offsetX = 0;\n                    this.symbolTooltipObject.offsetY = 0;\n                }\n            }\n            //Bug 857673: Symbol palette tooltip is not rendered properly after search symbols and hover over palette shapes\n            // To render tooltip for the symbol in search palette, the id of the shape is appended with 'SearchSymbol'.\n            var targetId = isSearchSymbol ? this.hoverElement.id + 'SearchSymbol' : this.hoverElement.id;\n            var targetEle = document.getElementById(targetId);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && this.hoverElement.tooltip.content !== '') {\n                this.symbolTooltipObject.close();\n                this.symbolTooltipObject.opensOn = this.hoverElement.tooltip.openOn;\n                this.symbolTooltipObject.dataBind();\n            }\n            if (this.hoverElement.tooltip.openOn === 'Auto') {\n                this.symbolTooltipObject.target = this.hoverElement.id;\n                this.symbolTooltipObject.open(targetEle);\n            }\n        }\n    };\n    // eslint-disable-next-line\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        //Bug 857673: Symbol palette tooltip is not rendered properly after search symbols and hover over palette shapes\n        // To render highlighter for the search symbols while hovering over the symbol in search palette.\n        if (this.symbolTable[\"\" + id] || (id !== 'SearchPalette' && e.target && e.target.id.includes('SearchSymbol'))) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n        var isSearchSymbol = false;\n        if (e.target && e.target.id.includes('SearchSymbol')) {\n            isSearchSymbol = true;\n            id = id.split('SearchSymbol')[0];\n        }\n        //EJ2-66311-tooltip support for Symbolpalette\n        var obj = this.symbolTable[\"\" + id];\n        if (this.symbolTable[\"\" + id] && obj !== this.hoverElement) {\n            this.currentPosition = this.getMousePosition(e);\n            var content = this.getContent(obj);\n            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.elementLeave();\n            }\n            this.hoverElement = obj;\n            this.symbolTooltipObject = this.initTooltip(this.hoverElement);\n            if (content === '') {\n                content = this.hoverElement.id;\n            }\n            if (this.hoverElement.tooltip && content !== '') {\n                this.elementEnter(this.currentPosition, false, isSearchSymbol);\n            }\n        }\n        if (obj === undefined && this.hoverElement && !this.hoverElement.tooltip.isSticky && this.hoverElement.tooltip.openOn === 'Auto') {\n            this.hoverElement = null;\n            this.elementLeave();\n        }\n    };\n    /**\n     * When Mouse pointer leaves the symbol palette object Mouse leave event is called and closes Tooltip\n     * @returns {void} Function to close symbol tooltip on mouse leave.\n     */\n    SymbolPalette.prototype.elementLeave = function () {\n        if (this.symbolTooltipObject && this.symbolTooltipObject.opensOn !== 'Custom') {\n            this.symbolTooltipObject.close();\n        }\n    };\n    /** @private\n     * @returns {void} Handles mouse leave events\n     * @param {PointerEvent} evt - provide event name\n     */\n    SymbolPalette.prototype.mouseLeave = function (evt) {\n        this.elementLeave();\n        evt.preventDefault();\n    };\n    // eslint-enable\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.oldObject, newValue: id };\n                    var event_2 = 'paletteSelectionChange';\n                    this.trigger(event_2, args);\n                    this.oldObject = id;\n                    evt.preventDefault();\n                }\n                else if (this.oldObject !== '') {\n                    this.oldObject = '';\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            // eslint-disable-next-line\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        var isSearchSymbol = false;\n        //Bug 857673: Symbol palette tooltip is not rendered properly after search symbols and hover over palette shapes\n        // To split the original id of shape to find it in symbol table.\n        if (id.includes('SearchSymbol')) {\n            id = id.split('SearchSymbol')[0];\n            isSearchSymbol = true;\n        }\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            //Bug 857673: Symbol palette tooltip is not rendered properly after search symbols and hover over palette shapes\n            // To highlight and remove highlight of the selected symbol in search palette on mouse down.\n            var oldSearchSymbol = document.getElementById(this.selectedSymbol.id + 'SearchSymbol' + '_container');\n            if ((oldSymbol || oldSearchSymbol)) {\n                oldSymbol.classList.remove('e-symbol-selected');\n                if (oldSearchSymbol) {\n                    oldSearchSymbol.classList.remove('e-symbol-selected');\n                }\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[\"\" + id]) {\n            var containerId = id;\n            if (isSearchSymbol) {\n                containerId = id + 'SearchSymbol';\n            }\n            var container = document.getElementById(containerId + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[\"\" + id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        // eslint-disable-next-line\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[\"\" + helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[\"\" + intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            //let drag: Draggable;\n            this.draggable = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(args[\"\" + target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[\"\" + e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    // eslint-enable\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!(0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-diagram')) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(e.helper);\n        }\n    };\n    //end region - draggable\n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape.type === 'Bpmn' && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[parseInt(i.toString(), 10)];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[parseInt(i.toString(), 10)];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    ///let node: Node;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        //const node: Node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[parseInt(i.toString(), 10)];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                (0,_diagram_utility_diagram_util__WEBPACK_IMPORTED_MODULE_5__.scaleElement)(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[parseInt(i.toString(), 10)];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[parseInt(i.toString(), 10)];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.accordionElement.items = [];\n        }\n        (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.removeElementsByClass)('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            this.accordionElement.dataBind();\n        }\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[parseInt(i.toString(), 10)];\n            //Bug 857693: Collapsing the palettes after searching shapes throws wrong arguments in paletteExpanding event.\n            //To remove search palette from palette collection.\n            if (symGroup.id === 'search_palette') {\n                this.palettes.splice(i, 1);\n                i--;\n            }\n            else {\n                this.initSymbols(symGroup);\n                this.renderPalette(symGroup);\n            }\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('div', { id: this.element.id + '_search' });\n        (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.applyStyleAgainstCsp)(searchDiv, 'height:30px');\n        //  searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('input', {});\n        textBox.placeholder = this.l10n.getConstant('SearchShapes');\n        textBox.id = 'textEnter';\n        (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.applyStyleAgainstCsp)(textBox, 'width:100%;height:auto');\n        //textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.getFilterSymbol = function (symbol) {\n        var _this = this;\n        var items = [];\n        //884490: filter the symbol based on ignoreSymbolsOnSearch property\n        items = symbol.filter(function (element) { return !_this.ignoreSymbolsOnSearch.includes(element.id); });\n        return items;\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var i = element.children.length - 1; i >= 0; i--) {\n                element.removeChild(element.children[parseInt(i.toString(), 10)]);\n            }\n            //Bug-857693: Collapsing the palettes after searching shapes throws wrong arguments in paletteExpanding event.\n            //To remove search palette from palette collection.\n            this.palettes.splice(0, 1);\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[parseInt(i.toString(), 10)];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[parseInt(j.toString(), 10)];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = (0,_diagram_utility_base_util__WEBPACK_IMPORTED_MODULE_6__.getFunction)(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        if (this.ignoreSymbolsOnSearch && this.ignoreSymbolsOnSearch.length > 0) {\n            symbolGroup = this.getFilterSymbol(symbolGroup);\n        }\n        //Bug 857693: Collapsing the palettes after searching shapes throws wrong arguments in paletteExpanding event.\n        //To render search palette and add it to the palettes collection.\n        if (value !== '') {\n            var searchPalette = { id: 'search_palette', expanded: true, symbols: symbolGroup, title: 'Search Shapes' };\n            var palette = new Palette(this, 'palettes', searchPalette, true);\n            this.palettes.splice(0, 0, palette);\n        }\n        //create a palette collection\n        if (!element && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                if (symbol.parentId === '') {\n                    this.getSymbolContainer(symbol, element);\n                }\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n                this.accordionElement.removeItem(0);\n                var searchPalette = document.getElementById('SearchPalette');\n                if (searchPalette) {\n                    searchPalette.remove();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = (0,_diagram_utility_dom_util__WEBPACK_IMPORTED_MODULE_4__.createHtmlElement)('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette'\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent;\n        var stopEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent;\n        var moveEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, cancelEvent, this.mouseLeave, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent;\n        var stopEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent;\n        var moveEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent;\n        var cancelEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, startEvent, this.mouseDown);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, cancelEvent, this.mouseLeave);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, keyEvent, this.keyUp);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({ fit: true })\n    ], SymbolPalette.prototype, \"symbolInfo\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SymbolPalette.prototype, \"ignoreSymbolsOnSearch\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ left: 10, right: 10, top: 10, bottom: 10 }, _diagram_index__WEBPACK_IMPORTED_MODULE_2__.Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, SymbolDragSize)\n    ], SymbolPalette.prototype, \"symbolDragSize\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], SymbolPalette.prototype, \"paletteExpanding\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SymbolPalette.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SymbolPalette.prototype, \"connectorDefaults\", void 0);\n    return SymbolPalette;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-diagrams/src/symbol-palette/symbol-palette.js?");

/***/ })

}]);