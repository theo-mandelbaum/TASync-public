"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-richtexteditor_src_rich-text-editor_actions_emoji-picker_j-6685a3bd"],{

/***/ "./node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/actions/emoji-picker.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/actions/emoji-picker.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmojiPicker: () => (/* binding */ EmojiPicker)\n/* harmony export */ });\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base/constant */ \"./node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/base/constant.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n/* harmony import */ var _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\");\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\");\n\n\n\n\n\nvar EmojiPicker = /** @class */ (function () {\n    function EmojiPicker(parent, serviceLocator) {\n        this.noResultsFoundCount = 0;\n        this.parent = parent;\n        this.locator = serviceLocator;\n        this.i10n = serviceLocator.getService('rteLocale');\n        this.renderFactory = this.locator.getService('rendererFactory');\n        this.addEventListener();\n        this.isDestroyed = false;\n        this.isPopupDestroyed = false;\n    }\n    /**\n     * Destroys the Count.\n     *\n     * @function destroy\n     * @returns {void}\n     * @hidden\n     * @deprecated\n     */\n    EmojiPicker.prototype.destroy = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.removeEventListener();\n        this.isDestroyed = true;\n    };\n    EmojiPicker.prototype.childDestroy = function () {\n        if (this.isPopupDestroyed) {\n            return;\n        }\n        if (this.popupObj && !this.popupObj.isDestroyed) {\n            if (this.popupObj.element && this.popupObj.element.querySelector('.e-rte-emoji-search')) {\n                var textBox = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.getComponent)(this.popupObj.element.querySelector('.e-rte-emoji-search'), 'textbox');\n                if (textBox && !textBox.isDestroyed) {\n                    textBox.destroy();\n                }\n            }\n            if (this.popupObj.element && this.popupObj.element.querySelector('.e-rte-emojipicker-toolbar')) {\n                var toolbar_1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.getComponent)(this.popupObj.element.querySelector('.e-rte-emojipicker-toolbar'), 'toolbar');\n                if (toolbar_1 && !toolbar_1.isDestroyed) {\n                    toolbar_1.destroy();\n                }\n            }\n            var closeIcon = this.popupObj.element.querySelector('.e-clear-icon');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(closeIcon)) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.EventHandler.remove(closeIcon, 'mousedown', this.searchFilter);\n            }\n            this.popupObj.destroy();\n            this.isPopupDestroyed = true;\n        }\n        if (this.popDiv) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.EventHandler.remove(this.popDiv, 'keydown', this.onKeyDown);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.EventHandler.remove(this.popDiv, 'keyup', this.searchFilter);\n            if (this.popDiv.querySelector('.e-rte-emojipicker-btn')) {\n                var btn = this.popDiv.querySelector('.e-rte-emojipicker-btn');\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.EventHandler.remove(btn, 'scroll', this.scrollEvent);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.EventHandler.remove(btn, 'click', this.emojiBtnClick);\n            }\n        }\n    };\n    EmojiPicker.prototype.addEventListener = function () {\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_0__.emojiPicker, this.toolbarClick, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_0__.docClick, this.docClick, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_0__.iframeMouseDown, this.onIframeMouseDown, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_0__.keyDown, this.onkeyPress, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_0__.keyUp, this.onkeyUp, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_0__.contentscroll, this.contentscroll, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_0__.scroll, this.contentscroll, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_0__.destroy, this.destroy, this);\n    };\n    // eslint-disable-next-line\n    EmojiPicker.prototype.toolbarClick = function (args) {\n        var _this = this;\n        var _a, _b;\n        this.noResultsFoundCount = 0;\n        var spanElement;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.element.querySelector('.e-emoji'))) {\n            spanElement = this.parent.element.querySelector('.e-emoji');\n        }\n        else if (this.parent.inlineMode.enable) {\n            spanElement = this.parent.element.ownerDocument.querySelector('.e-emoji');\n        }\n        this.divElement = spanElement.closest('div');\n        if (!(this.parent.inputElement.contains(this.parent.formatter.editorManager.nodeSelection.\n            getRange(this.parent.contentModule.getDocument()).startContainer))) {\n            this.parent.contentModule.getEditPanel().focus();\n        }\n        var range = this.parent.formatter.editorManager.nodeSelection.getRange(this.parent.contentModule.getDocument());\n        this.save = this.parent.formatter.editorManager.nodeSelection.save(range, this.parent.contentModule.getDocument());\n        this.clickEvent = args.args;\n        var emojiPicker = this.parent.emojiPickerSettings.iconsSet;\n        if (this.popupObj) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([this.divElement], 'e-active');\n            if (this.popupObj.element.querySelector('.e-rte-emoji-search') || !this.parent.emojiPickerSettings.showSearchBox) {\n                this.popupObj.hide();\n                return;\n            }\n            this.popupObj.hide();\n        }\n        this.popDiv = this.parent.createElement('div', { className: 'e-rte-emojipicker-popup', id: this.parent.getID() + '_emojiPicker' });\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.getToolbar()) && !this.parent.inlineMode.enable) {\n            this.parent.getToolbar().parentElement.appendChild(this.popDiv);\n        }\n        else if (this.parent.inlineMode.enable) {\n            this.parent.rootContainer.appendChild(this.popDiv);\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.EventHandler.add(this.popDiv, 'keydown', this.onKeyDown, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.EventHandler.add(this.popDiv, 'keyup', this.searchFilter, this);\n        var extendEle = this.parent.element.querySelector('.e-toolbar-extended');\n        var zIndex;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(extendEle)) {\n            var computedStyle = window.getComputedStyle(extendEle);\n            zIndex = computedStyle.getPropertyValue('z-index');\n        }\n        else {\n            zIndex = '10001';\n        }\n        var target;\n        var xValue;\n        var yValue;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args.args) && !this.parent.inlineMode.enable &&\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.quickToolbarSettings.text)) {\n            target = args.args.originalEvent.target;\n            target = target.classList.contains('e-toolbar-item') ? target.firstChild : target.parentElement;\n            xValue = 'left';\n            yValue = 'bottom';\n        }\n        else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args.x) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args.y) && !this.parent.inlineMode.enable && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.quickToolbarSettings.text)) {\n            target = this.parent.inputElement;\n            if (this.parent.contentModule.getDocument().getSelection().rangeCount > 0) {\n                var coordinates = this.getCoordinates();\n                xValue = coordinates.left;\n                yValue = coordinates.top;\n            }\n        }\n        else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args.x) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args.y) && (this.parent.inlineMode.enable || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.quickToolbarSettings.text))) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_0__.hidePopup, {});\n            if (this.parent.contentModule.getDocument().getSelection().rangeCount > 0) {\n                var coordinates = this.getCoordinates();\n                xValue = coordinates.left;\n                yValue = coordinates.top;\n            }\n        }\n        else {\n            target = this.parent.inputElement;\n            xValue = args.x;\n            yValue = args.y;\n        }\n        this.popupObj = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_2__.Popup(this.popDiv, {\n            targetType: 'relative',\n            relateTo: target,\n            collision: { X: 'fit', Y: 'none' },\n            offsetY: 8,\n            viewPortElement: this.parent.element,\n            position: { X: xValue, Y: yValue },\n            enableRtl: this.parent.enableRtl,\n            zIndex: parseInt(zIndex, 10) + 1,\n            actionOnScroll: 'hide',\n            close: function () {\n                _this.parent.isBlur = false;\n                _this.childDestroy();\n                _this.popupObj.element.parentElement.style.zIndex = '';\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.detach)(_this.popupObj.element);\n                _this.popupObj = null;\n                var activeElement = _this.divElement.firstChild;\n                activeElement.focus();\n            }\n        });\n        this.isPopupDestroyed = false;\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([this.popupObj.element], 'e-popup-open');\n        this.popupObj.element.parentElement.style.zIndex = '11';\n        this.popupObj.refreshPosition(target);\n        // header search element\n        if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args.args) || ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args.x) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args.y))) &&\n            this.parent.emojiPickerSettings.showSearchBox) {\n            var inputEle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('input', { id: 'e-rte-emoji-search', className: 'e-rte-emoji-search' });\n            this.popDiv.append(inputEle);\n            var inputobj = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_4__.TextBox({\n                placeholder: this.i10n.getConstant('emojiPickerTypeToFind'),\n                showClearButton: true\n            });\n            inputobj.appendTo(inputEle);\n            if (this.parent.userAgentData.isSafari() && this.parent.inputElement.contains(this.parent.getRange().startContainer)) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_0__.selectionSave, {});\n            }\n            inputEle.focus();\n        }\n        var closeIcon = this.popupObj.element.querySelector('.e-clear-icon');\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(closeIcon)) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.EventHandler.add(closeIcon, 'mousedown', this.searchFilter, this);\n        }\n        // Header emoji toolbar div\n        var emojiToolBar = this.parent.createElement('div', { className: 'e-rte-emojipicker-toolbar' });\n        this.popDiv.appendChild(emojiToolBar);\n        var pushToolBar = [];\n        for (var i = 0; i < this.parent.emojiPickerSettings.iconsSet.length; i++) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.emojiPickerSettings.iconsSet[i].iconCss)) {\n                pushToolBar.push({ prefixIcon: this.parent.emojiPickerSettings.iconsSet[i].iconCss, htmlAttributes: (_a = {}, _a['title'] = this.parent.emojiPickerSettings.iconsSet[i].name, _a) });\n            }\n            else {\n                pushToolBar.push({ text: '&#x' + this.parent.emojiPickerSettings.iconsSet[i].code + ';', htmlAttributes: (_b = {}, _b['title'] = this.parent.emojiPickerSettings.iconsSet[i].name, _b) });\n            }\n        }\n        var toolbarObj = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_3__.Toolbar({\n            items: pushToolBar,\n            clicked: this.emojiToolbarClick.bind(this)\n        });\n        toolbarObj.appendTo(emojiToolBar);\n        // emoji btn div\n        var emojiBtnDiv = this.parent.createElement('div', { className: 'e-rte-emojipicker-btn' });\n        this.popDiv.appendChild(emojiBtnDiv);\n        var height;\n        var popupBorder = window.getComputedStyle(this.popDiv);\n        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args.args) && !((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args.x) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args.y))) ||\n            !this.parent.emojiPickerSettings.showSearchBox) {\n            height = (this.popDiv.getBoundingClientRect().height - emojiToolBar.getBoundingClientRect().height - (2 * parseFloat(popupBorder.borderWidth))) + 'px';\n            emojiBtnDiv.style.setProperty('height', height, 'important');\n        }\n        else {\n            var inputELe = this.parent.element.querySelector('.e-rte-emoji-search').parentElement;\n            var getComputedStyle_1 = window.getComputedStyle(inputELe);\n            height = (this.popDiv.getBoundingClientRect().height - emojiToolBar.getBoundingClientRect().height\n                - inputELe.getBoundingClientRect().height\n                - parseFloat(getComputedStyle_1.marginTop) - parseFloat(getComputedStyle_1.marginBottom)\n                - (2 * parseFloat(popupBorder.borderWidth))) + 'px';\n            emojiBtnDiv.style.setProperty('height', height, 'important');\n        }\n        for (var i = 0; i < emojiPicker.length; i++) {\n            var emojiGroupDiv = this.parent.createElement('div', { className: 'e-rte-emojipicker-group' });\n            emojiBtnDiv.appendChild(emojiGroupDiv);\n            var emojiName = this.parent.createElement('div', { className: 'e-rte-emojipicker-name' });\n            emojiName.innerText = this.parent.emojiPickerSettings.iconsSet[i].name;\n            emojiName.setAttribute('aria-label', this.parent.emojiPickerSettings.iconsSet[i].name);\n            emojiGroupDiv.appendChild(emojiName);\n            var emojiBtn = this.parent.createElement('div', { className: 'e-rte-emojipickerbtn-group' });\n            emojiGroupDiv.appendChild(emojiBtn);\n            for (var j = 0; j < emojiPicker[i].icons.length; j++) {\n                var button = this.parent.createElement('button', { className: 'e-btn ' + ' ' + 'e-control' });\n                button.innerHTML = this.buttoncode(this.parent.emojiPickerSettings.iconsSet[i].icons[j].code);\n                button.setAttribute('aria-label', (this.parent.emojiPickerSettings.iconsSet[i].icons[j].desc));\n                button.setAttribute('title', (this.parent.emojiPickerSettings.iconsSet[i].icons[j].desc));\n                emojiBtn.appendChild(button);\n                if (button.innerHTML.length > 2) {\n                    button.style.fontSize = '17px';\n                }\n            }\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.EventHandler.add(emojiBtnDiv, 'scroll', this.scrollEvent, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.EventHandler.add(emojiBtnDiv, 'click', this.emojiBtnClick, this);\n        var emojiButtons = this.parent.element.querySelectorAll('.e-rte-emojipicker-btn button');\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.parent.element.querySelector('.e-rte-emoji-search')) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(args.args)) {\n            emojiButtons[0].focus();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([emojiButtons[0]], 'e-focus');\n        }\n        var popup = this.parent.element.querySelector('.e-rte-emojipicker-btn');\n        var toolbarName = this.parent.element.querySelectorAll('.e-rte-emojipicker-toolbar button');\n        var scrollTop;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(popup)) {\n            scrollTop = Math.round(popup.scrollTop);\n        }\n        if (scrollTop < toolbarName[0].offsetHeight) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([toolbarName[0]], 'e-selected');\n        }\n        if (this.popupObj) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([this.divElement], 'e-active');\n        }\n    };\n    EmojiPicker.prototype.onIframeMouseDown = function (e) {\n        if (this.popupObj) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([this.divElement], 'e-active');\n            this.popupObj.hide();\n        }\n    };\n    EmojiPicker.prototype.buttoncode = function (value) {\n        var valueLength = value.split('-');\n        // eslint-disable-next-line\n        var joinedEmoji = valueLength.map(function (cp) { return String.fromCodePoint(parseInt(cp, 16)); }).join('\\u200D');\n        return joinedEmoji;\n    };\n    EmojiPicker.prototype.docClick = function (e) {\n        var target = e.args.target;\n        if (target && target.classList && ((this.popupObj && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.closest)(target, '[id=' + '\\'' + this.popupObj.element.id + '\\'' + ']')))\n            && (!target.classList.contains('e-emoji') && !target.classList.contains('e-toolbar-item'))) {\n            if (this.popupObj) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([this.divElement], 'e-active');\n                this.popupObj.hide();\n            }\n        }\n    };\n    EmojiPicker.prototype.scrollEvent = function () {\n        var popup = this.parent.element.querySelector('.e-rte-emojipicker-btn');\n        var emojiSet = this.parent.element.querySelectorAll('.e-rte-emojipicker-group');\n        var toolbarName = this.parent.element.querySelectorAll('.e-rte-emojipicker-toolbar button');\n        var scrollTop;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(popup)) {\n            scrollTop = Math.round(popup.scrollTop);\n        }\n        var firstSetWidth = 0;\n        for (var j = 0; j < toolbarName.length; j++) {\n            if (scrollTop < toolbarName[0].offsetHeight) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(toolbarName[j + 1])) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([toolbarName[j + 1]], 'e-selected');\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([toolbarName[0]], 'e-selected');\n            }\n        }\n        for (var i = 0; i < emojiSet.length; i++) {\n            firstSetWidth += Math.round(emojiSet[i].offsetHeight);\n            if (scrollTop >= firstSetWidth) {\n                for (var k = 0; k < toolbarName.length; k++) {\n                    if (toolbarName[k].classList.contains('e-selected')) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([toolbarName[k]], 'e-selected');\n                    }\n                    /* eslint-enable */\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(toolbarName[i + 1])) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([toolbarName[i + 1]], 'e-selected');\n                }\n            }\n        }\n    };\n    EmojiPicker.prototype.contentscroll = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.clickEvent) && this.popupObj) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([this.divElement], 'e-active');\n            this.popupObj.hide();\n            return;\n        }\n    };\n    EmojiPicker.prototype.emojiToolbarClick = function (e) {\n        var args = {\n            // eslint-disable-next-line\n            text: e.item.htmlAttributes.title,\n        };\n        var currentEleName = args.text;\n        var emojiGroups = this.parent.element.querySelectorAll('.e-rte-emojipicker-group');\n        var emojiButtons = this.parent.element.querySelectorAll('.e-rte-emojipicker-btn button');\n        var toolbarName = this.parent.element.querySelectorAll('.e-rte-emojipicker-toolbar button');\n        for (var i = 0; i < toolbarName.length; i++) {\n            if (toolbarName[i].classList.contains('e-selected')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([toolbarName[i]], 'e-selected');\n            }\n            /* eslint-enable */\n        }\n        for (var i = 0; i < emojiButtons.length; i++) {\n            if (emojiButtons[i].classList.contains('e-focus')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([emojiButtons[i]], 'e-focus');\n            }\n        }\n        // Loop through the selected elements and perform the same operation on each element\n        var emojiGroupsheight = this.parent.element.querySelector('.e-rte-emojipicker-btn');\n        var emojiHeight = 0;\n        // eslint-disable-next-line\n        emojiGroups.forEach(function (group) {\n            var childNodes = group.childNodes[0];\n            var focusBtn = group.childNodes[1].childNodes[0];\n            var ariaLabel = childNodes.getAttribute('aria-label');\n            if (currentEleName === ariaLabel) {\n                if (childNodes) {\n                    emojiGroupsheight.scrollTop = emojiHeight + 10;\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusBtn], 'e-focus');\n                    focusBtn.focus();\n                }\n            }\n            else {\n                emojiHeight += group.scrollHeight;\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([focusBtn], 'e-focus');\n            }\n        });\n    };\n    EmojiPicker.prototype.onKeyDown = function (e) {\n        // Select all emoji buttons\n        var emojiButtons = this.parent.element.querySelectorAll('.e-rte-emojipicker-btn button');\n        var emojiGroups = this.parent.element.querySelectorAll('.e-rte-emojipickerbtn-group');\n        var searchKeyHandler = this.parent.element.querySelector('.e-rte-emojisearch-btn button');\n        if (e.keyCode === 27) {\n            if (this.popupObj) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([this.divElement], 'e-active');\n                this.popupObj.hide();\n            }\n        }\n        if (e.keyCode === 13) {\n            var activeEle = document.activeElement;\n            if (activeEle.classList.contains('e-btn')) {\n                this.emojiBtnClick(e);\n                e.preventDefault();\n            }\n        }\n        var srcElement = e.srcElement;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(srcElement)) {\n            if (srcElement.classList.contains('e-rte-emoji-search') && e.keyCode === 40) {\n                for (var i = 0; i < emojiButtons.length; i++) {\n                    if (emojiButtons[i].classList.contains('e-focus')) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([emojiButtons[i]], 'e-focus');\n                    }\n                }\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(searchKeyHandler)) {\n            this.filterKeyHandler(e);\n        }\n        else {\n            for (var i = 0; i < emojiButtons.length; i++) {\n                var focusIndex = i;\n                if (emojiButtons[i].classList.contains('e-focus')) {\n                    if (e.keyCode === 40) {\n                        // Move focus to next row if there is one\n                        if (emojiButtons.length - 4 > i) {\n                            var count = 0;\n                            for (var j = 0; j < emojiGroups.length; j++) {\n                                for (var k = 0; k < emojiGroups[j].childNodes.length; k++) {\n                                    // eslint-disable-next-line\n                                    var childNodes = emojiGroups[j].childNodes[k];\n                                    if (childNodes.classList.contains('e-focus') && count !== 1) {\n                                        var currentIndex = k;\n                                        var lastChild = emojiGroups[j].lastChild;\n                                        var lastRowIndex = Math.floor((k) % 6);\n                                        var lastEleLength = emojiGroups[j].childNodes.length - 1;\n                                        var lastEleIndex = Math.floor((lastEleLength) % 6);\n                                        if (currentIndex !== -1) {\n                                            var nextRowIndex = currentIndex + 6;\n                                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(emojiGroups[j].childNodes[nextRowIndex])) {\n                                                // next row has six buttons\n                                                // handle focus change here\n                                                var firstFocusEle = emojiButtons[i];\n                                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([firstFocusEle], 'e-focus');\n                                                var focusEle = emojiButtons[focusIndex += 6];\n                                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                                                focusEle.focus();\n                                                break;\n                                            }\n                                            else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(emojiGroups[j].childNodes[nextRowIndex]) && !lastChild.classList.contains('e-focus') && lastEleIndex < lastRowIndex) {\n                                                var firstFocusEle = emojiButtons[i];\n                                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([firstFocusEle], 'e-focus');\n                                                var focusEle = emojiGroups[j].lastChild;\n                                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                                                focusEle.focus();\n                                                count = 1;\n                                                break;\n                                            }\n                                            else {\n                                                var firstFocusEle = emojiButtons[i];\n                                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([firstFocusEle], 'e-focus');\n                                                var focusEle = emojiGroups[j + 1]\n                                                    .childNodes[lastRowIndex];\n                                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                                                focusEle.focus();\n                                                count = 1;\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    else if (e.keyCode === 38) {\n                        // Move focus to previous row if there is one\n                        if (i >= 6) {\n                            var count = 0;\n                            for (var j = 0; j < emojiGroups.length; j++) {\n                                for (var k = 0; k < emojiGroups[j].childNodes.length; k++) {\n                                    var childNodes = emojiGroups[j].childNodes[k];\n                                    if (childNodes.classList.contains('e-focus') && count !== 1) {\n                                        // eslint-disable-next-line\n                                        var currentIndex = k;\n                                        var previousRowLength = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(emojiGroups[j - 1]) ? null :\n                                            emojiGroups[j - 1].childNodes.length % 6 || 6;\n                                        if (currentIndex !== -1) {\n                                            var previousRowIndex = currentIndex - 6;\n                                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(emojiGroups[j].childNodes[previousRowIndex])) {\n                                                // previous row has six buttons\n                                                // handle focus change here\n                                                var firstFocusEle = emojiButtons[i];\n                                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([firstFocusEle], 'e-focus');\n                                                var focusEle = emojiButtons[focusIndex -= 6];\n                                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                                                focusEle.focus();\n                                                break;\n                                            }\n                                            else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(emojiGroups[j - 1].childNodes[emojiGroups[j - 1]\n                                                .childNodes.length - (previousRowLength - k)])) {\n                                                var firstFocusEle = emojiButtons[i];\n                                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([firstFocusEle], 'e-focus');\n                                                var focusEle = emojiGroups[j - 1].lastChild;\n                                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                                                focusEle.focus();\n                                                count = 1;\n                                                break;\n                                            }\n                                            else {\n                                                // previous row has less than six buttons\n                                                // handle focus change here\n                                                var firstFocusEle = emojiButtons[i];\n                                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([firstFocusEle], 'e-focus');\n                                                var focusEle = emojiGroups[j - 1].childNodes[emojiGroups[j - 1].\n                                                    childNodes.length - (previousRowLength - k)];\n                                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                                                focusEle.focus();\n                                                count = 1;\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            var firstFocusEle = emojiButtons[i];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([firstFocusEle], 'e-focus');\n                            var focusEle = emojiButtons[focusIndex -= 1];\n                            var inputELe = this.popupObj.element.querySelector('.e-rte-emoji-search');\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(focusEle) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inputELe)) {\n                                inputELe.focus();\n                                break;\n                            }\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                            focusEle.focus();\n                        }\n                        break;\n                    }\n                    else if (e.keyCode === 39) {\n                        // Move focus to next button in current row\n                        if (emojiButtons.length !== i + 1) {\n                            var firstFocusEle = emojiButtons[i];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([firstFocusEle], 'e-focus');\n                            var focusEle = emojiButtons[focusIndex += 1];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                            emojiButtons[focusIndex].focus();\n                        }\n                        break;\n                    }\n                    else if (e.keyCode === 37) {\n                        // Move focus to previous button in current row\n                        if (i > 0) {\n                            var firstFocusEle = emojiButtons[i];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([firstFocusEle], 'e-focus');\n                            var focusEle = emojiButtons[focusIndex -= 1];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                            emojiButtons[focusIndex].focus();\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        if (e.keyCode === 40) {\n            var firstFocusEle = this.parent.element.querySelector('.e-focus');\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(firstFocusEle)) {\n                var focusEle = emojiButtons[0];\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                if (this.parent.userAgentData.isSafari() && this.parent.inputElement.contains(this.parent.getRange().startContainer)) {\n                    this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_0__.selectionSave, {});\n                }\n                emojiButtons[0].focus();\n            }\n        }\n    };\n    EmojiPicker.prototype.filterKeyHandler = function (e) {\n        var emojiButtons = this.parent.element.querySelectorAll('.e-rte-emojisearch-btn button');\n        var firstFocusEle = this.parent.element.querySelector('.e-focus');\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(firstFocusEle) && e.keyCode === 40) {\n            var focusEle = emojiButtons[0];\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n            if (this.parent.userAgentData.isSafari()) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_0__.selectionSave, {});\n            }\n            emojiButtons[0].focus();\n        }\n        else {\n            for (var i = 0; i < emojiButtons.length; i++) {\n                var focusIndex = i;\n                var childNodes = emojiButtons[i];\n                if (childNodes.classList.contains('e-focus')) {\n                    if (e.keyCode === 38) {\n                        if (i >= 6) {\n                            var firstFocusEle_1 = emojiButtons[i];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([firstFocusEle_1], 'e-focus');\n                            var focusEle = emojiButtons[focusIndex -= 6];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                            focusEle.focus();\n                            break;\n                        }\n                        else {\n                            var firstFocusEle_2 = emojiButtons[i];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([firstFocusEle_2], 'e-focus');\n                            var focusEle = emojiButtons[focusIndex -= 1];\n                            var inputELe = this.popupObj.element.querySelector('.e-rte-emoji-search');\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(focusEle) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inputELe)) {\n                                inputELe.focus();\n                                break;\n                            }\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                            focusEle.focus();\n                        }\n                    }\n                    else if (e.keyCode === 40) {\n                        if (emojiButtons.length - 6 > i) {\n                            var firstFocusEle_3 = emojiButtons[i];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([firstFocusEle_3], 'e-focus');\n                            var focusEle = emojiButtons[focusIndex += 6];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                            focusEle.focus();\n                            break;\n                        }\n                    }\n                    else if (e.keyCode === 39) {\n                        if (emojiButtons.length !== i + 1) {\n                            var firstFocusEle_4 = emojiButtons[i];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([firstFocusEle_4], 'e-focus');\n                            var focusEle = emojiButtons[focusIndex += 1];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                            emojiButtons[focusIndex].focus();\n                        }\n                        break;\n                    }\n                    else if (e.keyCode === 37) {\n                        if (i > 0) {\n                            var firstFocusEle_5 = emojiButtons[i];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([firstFocusEle_5], 'e-focus');\n                            var focusEle = emojiButtons[focusIndex -= 1];\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.addClass)([focusEle], 'e-focus');\n                            emojiButtons[focusIndex].focus();\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    EmojiPicker.prototype.searchFilter = function (e, value, hasInternalCall) {\n        if (hasInternalCall === void 0) { hasInternalCall = false; }\n        var inputElement = this.parent.element.querySelector('.e-rte-emoji-search');\n        var contentELe = this.parent.iframeSettings.enable ? this.parent.contentModule.getPanel() :\n            this.parent.element.querySelector('.e-content');\n        if (document.activeElement === inputElement || document.activeElement === contentELe) {\n            var trimmedStr = void 0;\n            if (value !== ':' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(value)) {\n                trimmedStr = value.replace(/^:/, '');\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(value)) {\n                trimmedStr = value;\n            }\n            var inputValue = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inputElement) ? trimmedStr : inputElement.value;\n            var emojiButtons = this.parent.element.querySelectorAll('.e-rte-emojipicker-btn button');\n            var emojipickerAll = this.parent.element.querySelector('.e-rte-emojipicker-btn');\n            var emojiGroups = this.parent.element.querySelectorAll('.e-rte-emojipicker-group');\n            var toolbarGroup = this.parent.element.querySelector('.e-rte-emojipicker-toolbar');\n            var excludedDiv_1 = this.parent.element.querySelector('.e-rte-emojisearch-btn');\n            var firstChild = this.popDiv.childNodes[0];\n            var getComputedStyle_2 = window.getComputedStyle(firstChild);\n            var inputHeight = firstChild.nodeName === 'SPAN' ? (firstChild.getBoundingClientRect().height + parseFloat(getComputedStyle_2.marginTop) +\n                parseFloat(getComputedStyle_2.marginBottom)) : 0;\n            var popupBorder = window.getComputedStyle(this.popDiv);\n            // eslint-disable-next-line @typescript-eslint/tslint/config\n            var filteredButtons = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(excludedDiv_1) ? emojiButtons :\n                // eslint-disable-next-line @typescript-eslint/tslint/config\n                Array.from(emojiButtons).filter(function (button) { return !excludedDiv_1.contains(button); });\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(toolbarGroup) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(emojipickerAll) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inputValue)) {\n                if (inputValue === '' || value === ':') {\n                    toolbarGroup.style.display = '';\n                    emojipickerAll.style.height = (this.popDiv.getBoundingClientRect().height - toolbarGroup.getBoundingClientRect().height - inputHeight - (2 * parseFloat(popupBorder.borderWidth))) + 'px';\n                    // eslint-disable-next-line @typescript-eslint/tslint/config\n                    emojiGroups.forEach(function (element) {\n                        element.style.display = '';\n                    });\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/tslint/config\n                    emojiGroups.forEach(function (element) {\n                        element.style.display = 'none';\n                    });\n                    toolbarGroup.style.display = 'none';\n                    emojipickerAll.style.height = (this.popDiv.getBoundingClientRect().height - inputHeight - (2 * parseFloat(popupBorder.borderWidth))) + 'px';\n                }\n                var emojiBtnDiv = this.parent.createElement('div', { className: 'e-rte-emojisearch-btn' });\n                var emojis = this.parent.element.querySelector('.e-rte-emojisearch-btn');\n                if (emojis) {\n                    emojis.remove();\n                }\n                var noEMoji = true;\n                for (var i = 0; i < filteredButtons.length; i++) {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(filteredButtons[i].getAttribute('title'))) {\n                        var title = filteredButtons[i].getAttribute('title').toLowerCase();\n                        var titleLength = title.split(' ');\n                        for (var j = 0; j < titleLength.length; j++) {\n                            if (titleLength[j].startsWith(inputValue.toLowerCase()) && inputValue !== '') {\n                                var emoji = filteredButtons[i].cloneNode(true);\n                                emojiBtnDiv.appendChild(emoji);\n                                noEMoji = false;\n                                break;\n                            }\n                        }\n                    }\n                }\n                var noEmojiObj = this.parent.createElement('div', { className: 'e-rte-emojiSearch-noEmoji' });\n                if (noEMoji && !this.parent.element.querySelector('.e-rte-emojiSearch-noEmoji') && (inputValue !== '' && value !== ':' && value !== ': :')) {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(noEmojiObj)) {\n                        noEmojiObj.innerHTML = '<span style=\"color: rgba(0, 0, 0, 0.75); font-weight: 500; font-size: 16px;\">' + this.i10n.getConstant('emojiPickerNoResultFound') + ' 😥 </span>' + '<br>' + '<span style=\"color: rgba(0, 0, 0, 0.75);\"> ' + this.i10n.getConstant('emojiPickerTrySomethingElse') + ' ? </span>';\n                        noEmojiObj.style.margin = '55px';\n                        emojipickerAll.appendChild(noEmojiObj);\n                    }\n                }\n                else if (!noEMoji && this.parent.element.querySelector('.e-rte-emojiSearch-noEmoji') || (inputValue === '' && value === ':') || (inputValue === '' && this.parent.element.querySelector('.e-rte-emojiSearch-noEmoji'))) {\n                    emojipickerAll.removeChild(this.parent.element.querySelector('.e-rte-emojiSearch-noEmoji'));\n                }\n                emojipickerAll.appendChild(emojiBtnDiv);\n                if (hasInternalCall) {\n                    if (noEMoji && value !== ':') {\n                        this.noResultsFoundCount += 1;\n                    }\n                    else {\n                        this.noResultsFoundCount = 0;\n                    }\n                    if (this.noResultsFoundCount >= 9) {\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.popupObj)) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([this.divElement], 'e-active');\n                            this.popupObj.hide();\n                            this.noResultsFoundCount = 0;\n                            return;\n                        }\n                    }\n                }\n            }\n            else {\n                return;\n            }\n        }\n        else {\n            return;\n        }\n    };\n    EmojiPicker.prototype.emojiBtnClick = function (e) {\n        var event = new MouseEvent('mouseleave', { bubbles: true, cancelable: true });\n        // Includes the emote button element tooltip and toolbar tooltip\n        var emotePickerTooltips = this.parent.element.querySelectorAll('.e-rte-emojipicker-popup [data-tooltip-id]');\n        for (var i = 0; i < emotePickerTooltips.length; i++) {\n            emotePickerTooltips[i].dispatchEvent(event);\n        }\n        var targetEle = e.target;\n        if (targetEle.tagName !== 'BUTTON') {\n            return;\n        }\n        targetEle.focus();\n        var startOffset = this.save.startOffset;\n        var textContent = this.save.range.startContainer.textContent;\n        var previousText = textContent.substring(startOffset, startOffset + 1);\n        // When toolbar action is clicked then only restore the range.\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.clickEvent) || previousText !== ':') {\n            this.save.restore();\n        }\n        if (this.popupObj) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([this.divElement], 'e-active');\n            this.popupObj.hide();\n        }\n        if (this.parent.userAgentData.isSafari() && e.type === 'keydown') {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_0__.selectionRestore, {});\n        }\n        var originalEvent = e;\n        this.parent.formatter.process(this.parent, {\n            item: {\n                'command': 'EmojiPicker',\n                'subCommand': 'EmojiPicker',\n                value: targetEle.innerHTML\n            },\n            originalEvent: originalEvent\n        }, e, originalEvent);\n    };\n    EmojiPicker.prototype.onkeyPress = function (e) {\n        var originalEvent = e.args;\n        var selection = (this.parent.iframeSettings.enable) ?\n            this.parent.contentModule.getPanel().contentWindow.getSelection() :\n            this.parent.contentModule.getDocument().getSelection();\n        if (selection.rangeCount <= 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n        var cursorPos = range.startOffset;\n        var prevChar = selection.focusNode.textContent.substring(cursorPos - 1, cursorPos);\n        var isPrevSpace = /\\s/.test(prevChar);\n        var isPrevColon = selection.focusNode.textContent.substring(cursorPos - 1, cursorPos) === ':';\n        var colon = selection.focusNode.textContent.charAt(cursorPos - 1) === ':';\n        if (originalEvent.keyCode === 186 && originalEvent.shiftKey && (isPrevSpace || selection.focusOffset === 0)) {\n            var coordinates = this.getCoordinates();\n            this.parent.showEmojiPicker(coordinates.left, coordinates.top);\n        }\n        if (originalEvent.keyCode === 8 && colon && this.popupObj) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([this.divElement], 'e-active');\n            this.popupObj.hide();\n        }\n        if (originalEvent.keyCode === 32 && isPrevColon && this.popupObj) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.removeClass)([this.divElement], 'e-active');\n            var currentDocument = this.parent.iframeSettings.enable ? this.parent.contentModule.getPanel().ownerDocument :\n                this.parent.contentModule.getDocument();\n            if (this.parent.showTooltip && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(currentDocument.querySelector('.e-tooltip-wrap'))) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_0__.destroyTooltip, { args: event });\n            }\n            this.popupObj.hide();\n        }\n        if (this.popupObj && (originalEvent.keyCode === 37 || originalEvent.keyCode === 38 || originalEvent.keyCode === 39\n            || originalEvent.keyCode === 27 || originalEvent.keyCode === 40)) {\n            this.onKeyDown(originalEvent);\n            originalEvent.preventDefault();\n        }\n    };\n    EmojiPicker.prototype.onkeyUp = function (e) {\n        var originalEvent = e.args;\n        var selection = (this.parent.iframeSettings.enable) ?\n            this.parent.contentModule.getPanel().contentWindow.getSelection() :\n            this.parent.contentModule.getDocument().getSelection();\n        if (selection.rangeCount <= 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n        var cursorPos = range.startOffset;\n        // eslint-disable-next-line\n        var selectedValue;\n        var count = 0;\n        for (var i = cursorPos - 1; i >= (cursorPos - selection.focusNode.textContent.length); i--) {\n            var prevChar = selection.focusNode.textContent.substring(i - 1, i);\n            var isPrevSpace = /:$/.test(prevChar);\n            if (isPrevSpace && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.popDiv) && count === 0) {\n                selectedValue = range.startContainer.textContent.substring(i - 1, cursorPos);\n                this.searchFilter(originalEvent, selectedValue, true);\n                count = 1;\n            }\n        }\n        var colon = selection.focusNode.textContent.substring(cursorPos - 1, cursorPos);\n        if (colon === ':' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.popupObj)) {\n            selectedValue = colon;\n            this.searchFilter(originalEvent, selectedValue, true);\n        }\n    };\n    EmojiPicker.prototype.getCoordinates = function () {\n        var coordinates;\n        var selection = (this.parent.iframeSettings.enable) ?\n            this.parent.contentModule.getPanel().contentWindow.getSelection() : window.getSelection();\n        var range = selection.getRangeAt(0);\n        var firstChild;\n        if (range.startContainer.nodeName === 'P' || range.startContainer.nodeName === 'DIV') {\n            if (range.startContainer.childNodes[0].nodeName !== '#text') {\n                firstChild = range.startContainer.childNodes[0];\n            }\n        }\n        // eslint-disable-next-line\n        var rect = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(firstChild) ? range.getBoundingClientRect() : firstChild.getBoundingClientRect();\n        var rteContent = this.parent.element.querySelector('.e-rte-content');\n        var rteEle = this.parent.element;\n        var toolbarHeight = rteEle.offsetHeight - rteContent.offsetHeight;\n        var cursorTop = rect.top - this.parent.inputElement.getBoundingClientRect().top;\n        var cursorLeft = rect.left - this.parent.inputElement.getBoundingClientRect().left;\n        var screenHeight = window.innerHeight;\n        var popupHeight = 330;\n        var popupTop = cursorTop;\n        var popupLeft = cursorLeft + rect.width;\n        if (rteEle.getBoundingClientRect().top < 0 && !this.parent.inlineMode.enable) {\n            popupTop = popupTop + rteContent.getBoundingClientRect().top - toolbarHeight;\n        }\n        if (rect.top < popupHeight) {\n            // eslint-disable-next-line\n            popupTop = popupTop;\n        }\n        else if (rect.top + popupHeight > screenHeight) {\n            popupTop -= popupHeight + 20;\n        }\n        if (this.parent.inputElement) {\n            coordinates = {\n                top: popupTop + 60,\n                left: popupLeft + 8\n            };\n        }\n        return coordinates;\n    };\n    EmojiPicker.prototype.removeEventListener = function () {\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_0__.emojiPicker, this.toolbarClick);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_0__.docClick, this.docClick);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_0__.iframeMouseDown, this.onIframeMouseDown);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_0__.keyDown, this.onkeyPress);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_0__.keyUp, this.onkeyUp);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_0__.contentscroll, this.contentscroll);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_0__.scroll, this.contentscroll);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_0__.destroy, this.destroy);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - returns the string value\n     */\n    EmojiPicker.prototype.getModuleName = function () {\n        return 'emojiPicker';\n    };\n    return EmojiPicker;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/actions/emoji-picker.js?");

/***/ })

}]);