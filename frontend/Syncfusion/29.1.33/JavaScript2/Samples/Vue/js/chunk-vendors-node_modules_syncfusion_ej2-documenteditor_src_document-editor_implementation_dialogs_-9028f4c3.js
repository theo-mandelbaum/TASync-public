"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_dialogs_-9028f4c3"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/form-field-text-dialog.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/form-field-text-dialog.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TextFormFieldDialog: () => (/* binding */ TextFormFieldDialog)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\");\n/* harmony import */ var _viewer_page__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../viewer/page */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/viewer/page.js\");\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\");\n/* harmony import */ var _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n/* harmony import */ var _editor_editor_helper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../editor/editor-helper */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor/editor-helper.js\");\n\n\n\n\n\n\n\n\n/**\n * Form field text dialog is used to modify the value in text form field.\n */\nvar TextFormFieldDialog = /** @class */ (function () {\n    /**\n     * @param {DocumentHelper} owner - Specifies the document helper.\n     * @private\n     */\n    function TextFormFieldDialog(owner) {\n        var _this = this;\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.updateTextFormtas = function () {\n            var defautText = _this.updateFormats(_this.defaultTextInput.value);\n            _this.defaultTextInput.value = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(defautText) ? defautText : '';\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.onCancelButtonClick = function () {\n            _this.documentHelper.dialog.hide();\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.insertTextField = function () {\n            var valid = true;\n            if (_this.typeDropDown.value === 'Date') {\n                valid = _this.isValidDateFormat();\n            }\n            if (valid) {\n                _this.updateTextFormtas();\n                if (_this.defaultTextInput.value.length > _this.maxLengthNumber.value && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.maxLengthNumber.value) &&\n                    _this.maxLengthNumber.value !== 0) {\n                    _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_5__.DialogUtility.alert({\n                        content: 'The maximum length value must be equal or greater than the length of the default text.',\n                        showCloseIcon: true,\n                        closeOnEscape: true,\n                        position: { X: 'center', Y: 'center' },\n                        animationSettings: { effect: 'Zoom' }\n                    }).enableRtl = _this.owner.enableRtl;\n                }\n                else {\n                    var type = void 0;\n                    if (_this.typeDropDown.value === 'Date') {\n                        type = 'Date';\n                    }\n                    else if (_this.typeDropDown.value === 'Number') {\n                        type = 'Number';\n                    }\n                    else {\n                        type = 'Text';\n                    }\n                    var format = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(_this.textFormatDropDown.value);\n                    var formField = new _viewer_page__WEBPACK_IMPORTED_MODULE_2__.TextFormField();\n                    formField.type = type;\n                    formField.defaultValue = _this.defaultTextInput.value;\n                    formField.maxLength = _this.maxLengthNumber.value;\n                    formField.format = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(format) ? format : '';\n                    formField.name = _this.bookmarkTextInput.value;\n                    formField.helpText = _this.tooltipTextInput.value;\n                    formField.enabled = _this.fillInEnable.checked;\n                    _this.owner.editorModule.editFormField('Text', formField);\n                    _this.closeTextField();\n                }\n            }\n            else {\n                _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_5__.DialogUtility.alert({\n                    content: 'A valid date or time is required',\n                    showCloseIcon: true,\n                    closeOnEscape: true,\n                    position: { X: 'center', Y: 'center' },\n                    animationSettings: { effect: 'Zoom' }\n                }).enableRtl = _this.owner.enableRtl;\n            }\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.closeTextField = function () {\n            _this.documentHelper.dialog.hide();\n            _this.documentHelper.dialog.element.style.pointerEvents = '';\n        };\n        this.owner = owner;\n    }\n    Object.defineProperty(TextFormFieldDialog.prototype, \"documentHelper\", {\n        get: function () {\n            return this.owner.documentHelper;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextFormFieldDialog.prototype.getModuleName = function () {\n        return 'TextFormFieldDialog';\n    };\n    /* eslint-disable  */\n    /**\n     * @private\n     * @param {L10n} locale - Specifies the locale.\n     * @returns {void}\n     */\n    TextFormFieldDialog.prototype.initTextDialog = function (localValue, isRtl) {\n        var _this = this;\n        this.target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n        this.dialogDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n        this.firstDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-container-row' });\n        this.typeDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-subcontainer-left' });\n        this.defaultTextDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-subcontainer-right' });\n        // let typeLabel: HTMLElement = createElement('div', {\n        //     className: 'e-de-ff-dlg-heading-small',\n        //     innerHTML: localValue.getConstant('Type')\n        // });\n        //define the array of complex data\n        var typeDropDownitems = [\n            { Value: 'Regular text', Name: localValue.getConstant('Regular text') },\n            { Value: 'Number', Name: localValue.getConstant('Number') },\n            { Value: 'Date', Name: localValue.getConstant('Date') }\n        ];\n        this.typeDropDownList = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input');\n        this.typeDropDown = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_4__.DropDownList({\n            dataSource: typeDropDownitems,\n            popupHeight: '150px',\n            value: 'Regular text',\n            change: this.changeTypeDropDown.bind(this),\n            floatLabelType: 'Always',\n            placeholder: localValue.getConstant('Type'),\n            fields: { text: 'Name', value: 'Value' },\n            htmlAttributes: { 'aria-labelledby': localValue.getConstant('Type') }\n        });\n        // this.defaultTextLabel = createElement('div', {\n        //     className: 'e-de-ff-dlg-heading-small',\n        //     innerHTML: localValue.getConstant('Default text')\n        // });\n        this.defaultTextInput = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', { className: 'e-input e-bookmark-textbox-input' });\n        this.secondDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-container-row' });\n        this.maxLengthDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-subcontainer-left' });\n        // let maxLengthLabel: HTMLElement = createElement('div', {\n        //     className: 'e-de-ff-dlg-heading-small',\n        //     innerHTML: localValue.getConstant('Maximum length')\n        // });\n        this.maxLength = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', { attrs: { 'aria-labelledby': localValue.getConstant('Maximum length') } });\n        this.maxLengthNumber = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_3__.NumericTextBox({\n            format: 'n', value: 0, min: 0, max: 32767, width: '100%', enablePersistence: false,\n            placeholder: localValue.getConstant('Maximum length'), floatLabelType: 'Always',\n            change: function (args) {\n                if (!args.value) {\n                    this.element.value = localValue.getConstant('Unlimited');\n                }\n            },\n            focus: function (args) {\n                if (!args.value) {\n                    this.element.value = localValue.getConstant('Unlimited');\n                }\n            },\n            blur: function (args) {\n                if (!args.value) {\n                    var proxy_1 = this;\n                    setTimeout(function () {\n                        proxy_1.element.value = localValue.getConstant('Unlimited');\n                    }, 0);\n                }\n            },\n        });\n        this.textFromatDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-subcontainer-right' });\n        // this.textFormatLabel = createElement('div', {\n        //     className: 'e-de-ff-dlg-heading-small',\n        //     innerHTML: localValue.getConstant('Text format')\n        // });\n        this.textFormatList = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input');\n        var formatDropDownitems = [\n            { Value: \"Uppercase\", Name: localValue.getConstant(\"Uppercase\") },\n            { Value: \"Lowercase\", Name: localValue.getConstant(\"Lowercase\") },\n            { Value: \"FirstCapital\", Name: localValue.getConstant(\"FirstCapital\") },\n            { Value: \"Titlecase\", Name: localValue.getConstant(\"TitleCase\") }\n        ];\n        this.textFormatDropDown = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_4__.ComboBox({\n            dataSource: formatDropDownitems,\n            popupHeight: '150px',\n            allowCustom: true,\n            showClearButton: false,\n            change: this.updateTextFormtas.bind(this),\n            placeholder: localValue.getConstant('Text format'),\n            floatLabelType: 'Always',\n            fields: { text: 'Name', value: 'Value' }\n        });\n        this.textFormatDropDown.focus = function () {\n            _this.textFormatDropDown.element.select();\n        };\n        this.fileSettingsLabel = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: 'e-de-ff-dlg-heading',\n            innerHTML: localValue.getConstant('Field settings')\n        });\n        this.thirdDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-container-row' });\n        this.toolTipTotalDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-subcontainer-left' });\n        this.bookmarkTotalDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-subcontainer-right' });\n        // let toolTipHeadingLabel: HTMLElement = createElement('div', {\n        //     className: 'e-de-ff-dlg-heading-small',\n        //     innerHTML: localValue.getConstant('Tooltip')\n        // });\n        this.tooltipTextInput = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', { className: 'e-input e-bookmark-textbox-input' });\n        // let bookmarkHeadingLabel: HTMLElement = createElement('div', {\n        //     className: 'e-de-ff-dlg-heading-small',\n        //     innerHTML: localValue.getConstant('Name')\n        // });\n        this.bookmarkTextInput = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', { className: 'e-input e-bookmark-textbox-input' });\n        this.fillInEnableDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n        this.fillInEnableEle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', { attrs: { type: 'checkbox' } });\n        this.fillInEnableEle.setAttribute('aria-label', localValue.getConstant('Fillin enabled'));\n        this.fillInEnable = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.CheckBox({\n            cssClass: 'e-de-ff-dlg-check',\n            label: localValue.getConstant('Fillin enabled'),\n            enableRtl: isRtl\n        });\n        if (isRtl) {\n            this.typeDiv.classList.add('e-de-rtl');\n            this.maxLengthDiv.classList.add('e-de-rtl');\n            this.toolTipTotalDiv.classList.add('e-de-rtl');\n            this.bookmarkTotalDiv.classList.add('e-de-rtl');\n        }\n        this.target.appendChild(this.dialogDiv);\n        this.dialogDiv.appendChild(this.firstDiv);\n        this.firstDiv.appendChild(this.typeDiv);\n        //typeDiv.appendChild(typeLabel);\n        this.typeDiv.appendChild(this.typeDropDownList);\n        this.typeDropDown.appendTo(this.typeDropDownList);\n        this.firstDiv.appendChild(this.defaultTextDiv);\n        //this.defaultTextDiv.appendChild(this.defaultTextLabel);\n        this.defaultTextDiv.appendChild(this.defaultTextInput);\n        this.dialogDiv.appendChild(this.secondDiv);\n        this.secondDiv.appendChild(this.maxLengthDiv);\n        //maxLengthDiv.appendChild(maxLengthLabel);\n        this.maxLengthDiv.appendChild(this.maxLength);\n        this.maxLengthNumber.appendTo(this.maxLength);\n        this.secondDiv.appendChild(this.textFromatDiv);\n        //textFromatDiv.appendChild(this.textFormatLabel);\n        this.textFromatDiv.appendChild(this.textFormatList);\n        this.textFormatDropDown.appendTo(this.textFormatList);\n        this.dialogDiv.appendChild(this.fileSettingsLabel);\n        this.dialogDiv.appendChild(this.thirdDiv);\n        this.thirdDiv.appendChild(this.toolTipTotalDiv);\n        //toolTipTotalDiv.appendChild(toolTipHeadingLabel);\n        this.toolTipTotalDiv.appendChild(this.tooltipTextInput);\n        this.thirdDiv.appendChild(this.bookmarkTotalDiv);\n        //bookmarkTotalDiv.appendChild(bookmarkHeadingLabel);\n        this.bookmarkTotalDiv.appendChild(this.bookmarkTextInput);\n        this.dialogDiv.appendChild(this.fillInEnableDiv);\n        this.fillInEnableDiv.appendChild(this.fillInEnableEle);\n        this.fillInEnable.appendTo(this.fillInEnableEle);\n        this.defaultTextLabel = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_3__.TextBox({ placeholder: localValue.getConstant('Default text'), floatLabelType: 'Always' }, this.defaultTextInput);\n        new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_3__.TextBox({ placeholder: localValue.getConstant('Tooltip'), floatLabelType: 'Always' }, this.tooltipTextInput);\n        new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_3__.TextBox({ placeholder: localValue.getConstant('Name'), floatLabelType: 'Always', htmlAttributes: { 'aria-labelledby': localValue.getConstant('Name') } }, this.bookmarkTextInput);\n        this.defaultTextInput.setAttribute('aria-labelledby', localValue.getConstant('Default text'));\n        this.tooltipTextInput.setAttribute('aria-labelledby', localValue.getConstant('Tooltip'));\n        this.bookmarkTextInput.setAttribute('aria-labelledby', localValue.getConstant('Name'));\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    TextFormFieldDialog.prototype.show = function () {\n        this.localObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', this.documentHelper.owner.defaultLocale);\n        this.localObj.setLocale(this.documentHelper.owner.locale);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.target)) {\n            this.initTextDialog(this.localObj, this.documentHelper.owner.enableRtl);\n        }\n        this.loadTextDialog(this.localObj);\n        this.documentHelper.dialog.header = this.localObj.getConstant('Text Form Field');\n        this.documentHelper.dialog.position = { X: 'center', Y: 'center' };\n        this.documentHelper.dialog.height = 'auto';\n        this.documentHelper.dialog.width = '448px';\n        this.documentHelper.dialog.content = this.target;\n        this.documentHelper.dialog.buttons = [{\n                click: this.insertTextField,\n                buttonModel: { content: this.localObj.getConstant('Ok'), cssClass: 'e-flat e-table-cell-margin-okay', isPrimary: true }\n            },\n            {\n                click: this.onCancelButtonClick,\n                buttonModel: { content: this.localObj.getConstant('Cancel'), cssClass: 'e-flat e-table-cell-margin-cancel' }\n            }];\n        this.documentHelper.dialog.show();\n    };\n    /**\n     * @private\n     * @param {ChangeEventArgs} args - Specifies the event args.\n     * @returns {void}\n     */\n    TextFormFieldDialog.prototype.changeTypeDropDown = function (args) {\n        if (args.isInteracted) {\n            this.defaultTextInput.value = '';\n            this.textFormatDropDown.value = '';\n        }\n        if (args.value === 'Regular text') {\n            this.textFormatDropDown.fields = { text: 'Name', value: 'Value' };\n            this.defaultTextLabel.placeholder = this.localObj.getConstant('Default text');\n            this.textFormatDropDown.placeholder = this.localObj.getConstant('Text format');\n            this.textFormatDropDown.dataSource = [\n                { Value: \"Uppercase\", Name: this.localObj.getConstant(\"Uppercase\") },\n                { Value: \"Lowercase\", Name: this.localObj.getConstant(\"Lowercase\") },\n                { Value: \"FirstCapital\", Name: this.localObj.getConstant(\"FirstCapital\") },\n                { Value: \"Titlecase\", Name: this.localObj.getConstant(\"TitleCase\") }\n            ];\n        }\n        else if (args.value === 'Number') {\n            this.textFormatDropDown.fields = { text: null, value: null };\n            this.defaultTextLabel.placeholder = this.localObj.getConstant('Default number');\n            this.textFormatDropDown.placeholder = this.localObj.getConstant('Number format');\n            this.textFormatDropDown.dataSource = ['0', '0.00', '#,##0', '#,##0.00', '$#,##0.00;($#,##0.00)', '0%'];\n        }\n        else if (args.value === 'Date') {\n            this.textFormatDropDown.fields = { text: null, value: null };\n            this.defaultTextLabel.placeholder = this.localObj.getConstant('Default date');\n            this.textFormatDropDown.placeholder = this.localObj.getConstant('Date format');\n            this.textFormatDropDown.dataSource = ['M/d/yyyy', 'dddd, MMMM d, yyyy', 'MMMM d, yyyy', 'M/d/yy', 'yyyy-MM-dd', 'd-MMM-yy',\n                'M.d.yyyy', 'MMM. d, yy', 'd MMMM yyyy', 'MMMM yy', 'MMM-yy', 'M/d/yyyy h:mm am/pm', 'M/d/yyyy h:mm:ss am/pm', 'h:mm am/pm', 'h:mm:ss am/pm',\n                'HH:mm', 'HH:mm:ss'];\n        }\n        this.defaultTextLabel.dataBind();\n        this.textFormatDropDown.dataBind();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    TextFormFieldDialog.prototype.loadTextDialog = function (local) {\n        var inline = this.owner.selectionModule.getCurrentFormField();\n        if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_2__.FieldElementBox) {\n            this.fieldBegin = inline;\n            var data = inline.formFieldData;\n            if (data.maxLength > 0) {\n                this.maxLengthNumber.value = data.maxLength;\n            }\n            else {\n                this.maxLengthNumber.value = 0;\n                this.maxLengthNumber.element.value = local ? local.getConstant('Unlimited') : 'Unlimited';\n            }\n            if (data.type === 'Date') {\n                this.typeDropDown.value = 'Date';\n            }\n            else if (data.type === 'Number') {\n                this.typeDropDown.value = 'Number';\n            }\n            else {\n                this.typeDropDown.value = 'Regular text';\n            }\n            if (data.format) {\n                this.textFormatDropDown.value = data.format;\n            }\n            else {\n                this.textFormatDropDown.value = '';\n            }\n            this.defaultTextInput.value = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(data.defaultValue) ? data.defaultValue : '';\n            this.fillInEnable.checked = data.enabled;\n            this.tooltipTextInput.value = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(data.helpText) ? data.helpText : '';\n            this.bookmarkTextInput.value = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(data.name) ? data.name : '';\n        }\n    };\n    TextFormFieldDialog.prototype.updateFormats = function (value) {\n        var format = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.textFormatDropDown.value) ? '' : this.textFormatDropDown.value.toString();\n        if (this.typeDropDown.value === 'Regular text') {\n            return _editor_editor_helper__WEBPACK_IMPORTED_MODULE_6__.HelperMethods.formatText(format, value);\n        }\n        if (this.typeDropDown.value === 'Number') {\n            var data = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_6__.HelperMethods.formatNumber(format, value);\n            if (!(data.toString() === 'NaN')) {\n                return data;\n            }\n            return '';\n        }\n        if (this.typeDropDown.value === 'Date') {\n            return _editor_editor_helper__WEBPACK_IMPORTED_MODULE_6__.HelperMethods.formatDate(format, value);\n        }\n        return '';\n    };\n    /**\n     * @private\n     * @returns {boolean} returns is valid date format.\n     */\n    TextFormFieldDialog.prototype.isValidDateFormat = function () {\n        var value = this.defaultTextInput.value;\n        if (value !== '') {\n            var date = new Date(value);\n            if (isNaN(date.getDate())) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    TextFormFieldDialog.prototype.destroy = function () {\n        var textDialogTarget = this.target;\n        if (textDialogTarget) {\n            if (textDialogTarget.parentElement) {\n                textDialogTarget.parentElement.removeChild(textDialogTarget);\n            }\n            this.target = undefined;\n        }\n        if (this.maxLengthNumber) {\n            this.maxLengthNumber.destroy();\n            this.maxLengthNumber = undefined;\n        }\n        if (this.fillInEnable) {\n            this.fillInEnable.destroy();\n            this.fillInEnable = undefined;\n        }\n        if (this.typeDropDown) {\n            this.typeDropDown.destroy();\n            this.typeDropDown = undefined;\n        }\n        if (this.textFormatDropDown) {\n            this.textFormatDropDown.destroy();\n            this.textFormatDropDown = undefined;\n        }\n        this.owner = undefined;\n        this.defaultTextInput = undefined;\n        this.tooltipTextInput = undefined;\n        this.bookmarkTextInput = undefined;\n        this.defaultTextLabel = undefined;\n        this.defaultTextDiv = undefined;\n        this.textFormatLabel = undefined;\n        this.removeElements();\n    };\n    TextFormFieldDialog.prototype.removeElements = function () {\n        if (this.dialogDiv) {\n            this.dialogDiv.remove();\n            this.dialogDiv = undefined;\n        }\n        if (this.firstDiv) {\n            this.firstDiv.remove();\n            this.firstDiv = undefined;\n        }\n        if (this.typeDiv) {\n            this.typeDiv.remove();\n            this.typeDiv = undefined;\n        }\n        if (this.typeDropDownList) {\n            this.typeDropDownList.remove();\n            this.typeDropDownList = undefined;\n        }\n        if (this.secondDiv) {\n            this.secondDiv.remove();\n            this.secondDiv = undefined;\n        }\n        if (this.maxLengthDiv) {\n            this.maxLengthDiv.remove();\n            this.maxLengthDiv = undefined;\n        }\n        if (this.maxLength) {\n            this.maxLength.remove();\n            this.maxLength = undefined;\n        }\n        if (this.textFromatDiv) {\n            this.textFromatDiv.remove();\n            this.textFromatDiv = undefined;\n        }\n        if (this.textFormatList) {\n            this.textFormatList.remove();\n            this.textFormatList = undefined;\n        }\n        if (this.fileSettingsLabel) {\n            this.fileSettingsLabel.remove();\n            this.fileSettingsLabel = undefined;\n        }\n        if (this.thirdDiv) {\n            this.thirdDiv.remove();\n            this.thirdDiv = undefined;\n        }\n        if (this.toolTipTotalDiv) {\n            this.toolTipTotalDiv.remove();\n            this.toolTipTotalDiv = undefined;\n        }\n        if (this.bookmarkTotalDiv) {\n            this.bookmarkTotalDiv.remove();\n            this.bookmarkTotalDiv = undefined;\n        }\n        if (this.fillInEnableDiv) {\n            this.fillInEnableDiv.remove();\n            this.fillInEnableDiv = undefined;\n        }\n        if (this.fillInEnableEle) {\n            this.fillInEnableEle.remove();\n            this.fillInEnableEle = undefined;\n        }\n    };\n    return TextFormFieldDialog;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/form-field-text-dialog.js?");

/***/ })

}]);