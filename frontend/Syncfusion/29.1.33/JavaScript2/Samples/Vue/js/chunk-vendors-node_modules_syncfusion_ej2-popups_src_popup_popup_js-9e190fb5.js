"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-popups_src_popup_popup_js-9e190fb5"],{

/***/ "./node_modules/@syncfusion/ej2-popups/src/popup/popup.js":
/*!****************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-popups/src/popup/popup.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Popup: () => (/* binding */ Popup),\n/* harmony export */   PositionData: () => (/* binding */ PositionData),\n/* harmony export */   getMaxZindex: () => (/* binding */ getMaxZindex),\n/* harmony export */   getScrollableParent: () => (/* binding */ getScrollableParent),\n/* harmony export */   getZindexPartial: () => (/* binding */ getZindexPartial)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _common_position__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/position */ \"./node_modules/@syncfusion/ej2-popups/src/common/position.js\");\n/* harmony import */ var _common_collision__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/collision */ \"./node_modules/@syncfusion/ej2-popups/src/common/collision.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\n\n/**\n * Specifies the offset position values.\n */\nvar PositionData = /** @class */ (function (_super) {\n    __extends(PositionData, _super);\n    function PositionData() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('left')\n    ], PositionData.prototype, \"X\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('top')\n    ], PositionData.prototype, \"Y\", void 0);\n    return PositionData;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n// don't use space in classNames\nvar CLASSNAMES = {\n    ROOT: 'e-popup',\n    RTL: 'e-rtl',\n    OPEN: 'e-popup-open',\n    CLOSE: 'e-popup-close'\n};\n/**\n * Represents the Popup Component\n * ```html\n * <div id=\"popup\" style=\"position:absolute;height:100px;width:100px;\">\n * <div style=\"margin:35px 25px;\">Popup Content</div></div>\n * ```\n * ```typescript\n * <script>\n *   var popupObj = new Popup();\n *   popupObj.appendTo(\"#popup\");\n * </script>\n * ```\n */\nvar Popup = /** @class */ (function (_super) {\n    __extends(Popup, _super);\n    function Popup(element, options) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {PopupModel} newProp - specifies the new property\n     * @param {PopupModel} oldProp - specifies the old property\n     * @private\n     * @returns {void}\n     */\n    Popup.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.element, { 'width': (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(newProp.width) });\n                    break;\n                case 'height':\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.element, { 'height': (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(newProp.height) });\n                    break;\n                case 'zIndex':\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.element, { 'zIndex': newProp.zIndex });\n                    break;\n                case 'enableRtl':\n                    this.setEnableRtl();\n                    break;\n                case 'position':\n                case 'relateTo':\n                    this.refreshPosition();\n                    break;\n                case 'offsetX': {\n                    var x = newProp.offsetX - oldProp.offsetX;\n                    this.element.style.left = (parseInt(this.element.style.left, 10) + (x)).toString() + 'px';\n                    break;\n                }\n                case 'offsetY': {\n                    var y = newProp.offsetY - oldProp.offsetY;\n                    this.element.style.top = (parseInt(this.element.style.top, 10) + (y)).toString() + 'px';\n                    break;\n                }\n                case 'content':\n                    this.setContent();\n                    break;\n                case 'actionOnScroll':\n                    if (newProp.actionOnScroll !== 'none') {\n                        this.wireScrollEvents();\n                    }\n                    else {\n                        this.unwireScrollEvents();\n                    }\n                    break;\n            }\n        }\n    };\n    /**\n     * gets the Component module name.\n     *\n     * @returns {void}\n     * @private\n     */\n    Popup.prototype.getModuleName = function () {\n        return 'popup';\n    };\n    /**\n     * To resolve if any collision occurs.\n     *\n     * @returns {void}\n     */\n    Popup.prototype.resolveCollision = function () {\n        this.checkCollision();\n    };\n    /**\n     * gets the persisted state properties of the Component.\n     *\n     * @returns {void}\n     */\n    Popup.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * To destroy the control.\n     *\n     * @returns {void}\n     */\n    Popup.prototype.destroy = function () {\n        if (this.element.classList.contains('e-popup-open')) {\n            this.unwireEvents();\n        }\n        this.element.classList.remove(CLASSNAMES.ROOT, CLASSNAMES.RTL, CLASSNAMES.OPEN, CLASSNAMES.CLOSE);\n        this.content = null;\n        this.relateTo = null;\n        (0,_common_collision__WEBPACK_IMPORTED_MODULE_2__.destroy)();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    Popup.prototype.render = function () {\n        this.element.classList.add(CLASSNAMES.ROOT);\n        var styles = {};\n        if (this.zIndex !== 1000) {\n            styles.zIndex = this.zIndex;\n        }\n        if (this.width !== 'auto') {\n            styles.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.width);\n        }\n        if (this.height !== 'auto') {\n            styles.height = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.height);\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.element, styles);\n        this.fixedParent = false;\n        this.setEnableRtl();\n        this.setContent();\n    };\n    Popup.prototype.wireEvents = function () {\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(window, 'orientationchange', this.orientationOnChange, this);\n        }\n        if (this.actionOnScroll !== 'none') {\n            this.wireScrollEvents();\n        }\n    };\n    Popup.prototype.wireScrollEvents = function () {\n        if (this.getRelateToElement()) {\n            for (var _i = 0, _a = this.getScrollableParent(this.getRelateToElement()); _i < _a.length; _i++) {\n                var parent_1 = _a[_i];\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(parent_1, 'scroll', this.scrollRefresh, this);\n            }\n        }\n    };\n    Popup.prototype.unwireEvents = function () {\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(window, 'orientationchange', this.orientationOnChange);\n        }\n        if (this.actionOnScroll !== 'none') {\n            this.unwireScrollEvents();\n        }\n    };\n    Popup.prototype.unwireScrollEvents = function () {\n        if (this.getRelateToElement()) {\n            for (var _i = 0, _a = this.getScrollableParent(this.getRelateToElement()); _i < _a.length; _i++) {\n                var parent_2 = _a[_i];\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(parent_2, 'scroll', this.scrollRefresh);\n            }\n        }\n    };\n    Popup.prototype.getRelateToElement = function () {\n        var relateToElement = this.relateTo === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.relateTo) ?\n            document.body : this.relateTo;\n        this.setProperties({ relateTo: relateToElement }, true);\n        return ((typeof this.relateTo) === 'string') ?\n            document.querySelector(this.relateTo) : this.relateTo;\n    };\n    Popup.prototype.scrollRefresh = function (e) {\n        if (this.actionOnScroll === 'reposition') {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element) && !(this.element.offsetParent === e.target ||\n                (this.element.offsetParent && this.element.offsetParent.tagName === 'BODY' &&\n                    e.target.parentElement == null))) {\n                this.refreshPosition();\n            }\n        }\n        else if (this.actionOnScroll === 'hide') {\n            this.hide();\n        }\n        if (this.actionOnScroll !== 'none') {\n            if (this.getRelateToElement()) {\n                var targetVisible = this.isElementOnViewport(this.getRelateToElement(), e.target);\n                if (!targetVisible && !this.targetInvisibleStatus) {\n                    this.trigger('targetExitViewport');\n                    this.targetInvisibleStatus = true;\n                }\n                else if (targetVisible) {\n                    this.targetInvisibleStatus = false;\n                }\n            }\n        }\n    };\n    /**\n     * This method is to get the element visibility on viewport when scroll\n     * the page. This method will returns true even though 1 px of element\n     * part is in visible.\n     *\n     * @param {HTMLElement} relateToElement - specifies the element\n     * @param {HTMLElement} scrollElement - specifies the scroll element\n     * @returns {boolean} - retruns the boolean\n     */\n    // eslint-disable-next-line\n    Popup.prototype.isElementOnViewport = function (relateToElement, scrollElement) {\n        var scrollParents = this.getScrollableParent(relateToElement);\n        for (var parent_3 = 0; parent_3 < scrollParents.length; parent_3++) {\n            if (this.isElementVisible(relateToElement, scrollParents[parent_3])) {\n                continue;\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    };\n    Popup.prototype.isElementVisible = function (relateToElement, scrollElement) {\n        var rect = this.checkGetBoundingClientRect(relateToElement);\n        if (!rect.height || !rect.width) {\n            return false;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.checkGetBoundingClientRect(scrollElement))) {\n            var parent_4 = scrollElement.getBoundingClientRect();\n            return !(rect.bottom < parent_4.top) &&\n                (!(rect.bottom > parent_4.bottom) &&\n                    (!(rect.right > parent_4.right) &&\n                        !(rect.left < parent_4.left)));\n        }\n        else {\n            var win = window;\n            var windowView = {\n                top: win.scrollY,\n                left: win.scrollX,\n                right: win.scrollX + win.outerWidth,\n                bottom: win.scrollY + win.outerHeight\n            };\n            var off = (0,_common_position__WEBPACK_IMPORTED_MODULE_1__.calculatePosition)(relateToElement);\n            var ele = {\n                top: off.top,\n                left: off.left,\n                right: off.left + rect.width,\n                bottom: off.top + rect.height\n            };\n            var elementView = {\n                top: windowView.bottom - ele.top,\n                left: windowView.right - ele.left,\n                bottom: ele.bottom - windowView.top,\n                right: ele.right - windowView.left\n            };\n            return elementView.top > 0\n                && elementView.left > 0\n                && elementView.right > 0\n                && elementView.bottom > 0;\n        }\n    };\n    /**\n     * Initialize the event handler\n     *\n     * @returns {void}\n     * @private\n     */\n    Popup.prototype.preRender = function () {\n        //There is no event handler\n    };\n    Popup.prototype.setEnableRtl = function () {\n        this.reposition();\n        if (this.enableRtl) {\n            this.element.classList.add(CLASSNAMES.RTL);\n        }\n        else {\n            this.element.classList.remove(CLASSNAMES.RTL);\n        }\n    };\n    Popup.prototype.setContent = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.content)) {\n            this.element.innerHTML = '';\n            if (typeof (this.content) === 'string') {\n                this.element.textContent = this.content;\n            }\n            else {\n                var relateToElem = this.getRelateToElement();\n                // eslint-disable-next-line\n                var props = this.content.props;\n                if (!relateToElem.classList.contains('e-dropdown-btn') || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(props)) {\n                    this.element.appendChild(this.content);\n                }\n            }\n        }\n    };\n    Popup.prototype.orientationOnChange = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.refreshPosition();\n        }, 200);\n    };\n    /**\n     * Based on the `relative` element and `offset` values, `Popup` element position will refreshed.\n     *\n     * @param {HTMLElement} target - The target element.\n     * @param {boolean} collision - Specifies whether to check for collision.\n     * @returns {void}\n     */\n    Popup.prototype.refreshPosition = function (target, collision) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target)) {\n            this.checkFixedParent(target);\n        }\n        this.reposition();\n        if (!collision) {\n            this.checkCollision();\n        }\n    };\n    Popup.prototype.reposition = function () {\n        var pos;\n        var position;\n        var relateToElement = this.getRelateToElement();\n        if (typeof this.position.X === 'number' && typeof this.position.Y === 'number') {\n            pos = { left: this.position.X, top: this.position.Y };\n        }\n        else if ((typeof this.position.X === 'string' && typeof this.position.Y === 'number') ||\n            (typeof this.position.X === 'number' && typeof this.position.Y === 'string')) {\n            var parentDisplay = void 0;\n            var display = this.element.style.display;\n            this.element.style.display = 'block';\n            if (this.element.classList.contains('e-dlg-modal')) {\n                parentDisplay = this.element.parentElement.style.display;\n                this.element.parentElement.style.display = 'block';\n            }\n            position = this.getAnchorPosition(relateToElement, this.element, this.position, this.offsetX, this.offsetY);\n            if (typeof this.position.X === 'string') {\n                pos = { left: position.left, top: this.position.Y };\n            }\n            else {\n                pos = { left: this.position.X, top: position.top };\n            }\n            this.element.style.display = display;\n            if (this.element.classList.contains('e-dlg-modal')) {\n                this.element.parentElement.style.display = parentDisplay;\n            }\n        }\n        else if (relateToElement) {\n            var height = this.element.clientHeight;\n            var display = this.element.style.display;\n            this.element.style.display = 'block';\n            pos = this.getAnchorPosition(relateToElement, this.element, this.position, this.offsetX, this.offsetY, height);\n            this.element.style.display = display;\n        }\n        else {\n            pos = { left: 0, top: 0 };\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pos)) {\n            this.element.style.left = pos.left + 'px';\n            this.element.style.top = pos.top + 'px';\n        }\n    };\n    Popup.prototype.checkGetBoundingClientRect = function (ele) {\n        var eleRect;\n        try {\n            eleRect = ele.getBoundingClientRect();\n            return eleRect;\n        }\n        catch (error) {\n            return null;\n        }\n    };\n    Popup.prototype.getAnchorPosition = function (anchorEle, ele, position, offsetX, offsetY, height) {\n        if (height === void 0) { height = 0; }\n        var eleRect = this.checkGetBoundingClientRect(ele);\n        var anchorRect = this.checkGetBoundingClientRect(anchorEle);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(eleRect) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(anchorRect)) {\n            return null;\n        }\n        var anchor = anchorEle;\n        var anchorPos = { left: 0, top: 0 };\n        if (ele.offsetParent && ele.offsetParent.tagName === 'BODY' && anchorEle.tagName === 'BODY') {\n            anchorPos = (0,_common_position__WEBPACK_IMPORTED_MODULE_1__.calculatePosition)(anchorEle);\n        }\n        else {\n            if ((ele.classList.contains('e-dlg-modal') && anchor.tagName !== 'BODY')) {\n                ele = ele.parentElement;\n            }\n            anchorPos = (0,_common_position__WEBPACK_IMPORTED_MODULE_1__.calculateRelativeBasedPosition)(anchor, ele);\n        }\n        switch (position.X) {\n            default:\n            case 'left':\n                break;\n            case 'center':\n                if ((ele.classList.contains('e-dlg-modal') && anchor.tagName === 'BODY' && this.targetType === 'container')) {\n                    anchorPos.left += (window.innerWidth / 2 - eleRect.width / 2);\n                }\n                else if (this.targetType === 'container') {\n                    anchorPos.left += (anchorRect.width / 2 - eleRect.width / 2);\n                }\n                else {\n                    anchorPos.left += (anchorRect.width / 2);\n                }\n                break;\n            case 'right':\n                if ((ele.classList.contains('e-dlg-modal') && anchor.tagName === 'BODY' && this.targetType === 'container')) {\n                    anchorPos.left += (window.innerWidth - eleRect.width);\n                }\n                else if (this.targetType === 'container') {\n                    var scaleX = 1;\n                    var tranformElement = (0,_common_collision__WEBPACK_IMPORTED_MODULE_2__.getTransformElement)(ele);\n                    if (tranformElement) {\n                        var transformStyle = getComputedStyle(tranformElement).transform;\n                        if (transformStyle !== 'none') {\n                            var matrix = new DOMMatrix(transformStyle);\n                            scaleX = matrix.a;\n                        }\n                        var zoomStyle = getComputedStyle(tranformElement).zoom;\n                        if (zoomStyle !== 'none') {\n                            var bodyZoom = (0,_common_collision__WEBPACK_IMPORTED_MODULE_2__.getZoomValue)(document.body);\n                            scaleX = bodyZoom * scaleX;\n                        }\n                    }\n                    anchorPos.left += ((anchorRect.width - eleRect.width) / scaleX);\n                }\n                else {\n                    anchorPos.left += (anchorRect.width);\n                }\n                break;\n        }\n        switch (position.Y) {\n            default:\n            case 'top':\n                break;\n            case 'center':\n                if ((ele.classList.contains('e-dlg-modal') && anchor.tagName === 'BODY' && this.targetType === 'container')) {\n                    anchorPos.top += (window.innerHeight / 2 - eleRect.height / 2);\n                }\n                else if (this.targetType === 'container') {\n                    anchorPos.top += (anchorRect.height / 2 - eleRect.height / 2);\n                }\n                else {\n                    anchorPos.top += (anchorRect.height / 2);\n                }\n                break;\n            case 'bottom':\n                if ((ele.classList.contains('e-dlg-modal') && anchor.tagName === 'BODY' && this.targetType === 'container')) {\n                    anchorPos.top += (window.innerHeight - eleRect.height);\n                }\n                else if (this.targetType === 'container' && !ele.classList.contains('e-dialog')) {\n                    anchorPos.top += (anchorRect.height - eleRect.height);\n                }\n                else if (this.targetType === 'container' && ele.classList.contains('e-dialog')) {\n                    anchorPos.top += (anchorRect.height - height);\n                }\n                else {\n                    anchorPos.top += (anchorRect.height);\n                }\n                break;\n        }\n        anchorPos.left += offsetX;\n        anchorPos.top += offsetY;\n        return anchorPos;\n    };\n    Popup.prototype.callFlip = function (param) {\n        var relateToElement = this.getRelateToElement();\n        (0,_common_collision__WEBPACK_IMPORTED_MODULE_2__.flip)(this.element, relateToElement, this.offsetX, this.offsetY, this.position.X, this.position.Y, this.viewPortElement, param, this.fixedParent);\n    };\n    Popup.prototype.callFit = function (param) {\n        if ((0,_common_collision__WEBPACK_IMPORTED_MODULE_2__.isCollide)(this.element, this.viewPortElement).length !== 0) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.viewPortElement)) {\n                var data = (0,_common_collision__WEBPACK_IMPORTED_MODULE_2__.fit)(this.element, this.viewPortElement, param);\n                if (param.X) {\n                    this.element.style.left = data.left + 'px';\n                }\n                if (param.Y) {\n                    this.element.style.top = data.top + 'px';\n                }\n            }\n            else {\n                var elementRect = this.checkGetBoundingClientRect(this.element);\n                var viewPortRect = this.checkGetBoundingClientRect(this.viewPortElement);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(elementRect) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(viewPortRect)) {\n                    return null;\n                }\n                if (param && param.Y === true) {\n                    if (viewPortRect.top > elementRect.top) {\n                        this.element.style.top = '0px';\n                    }\n                    else if (viewPortRect.bottom < elementRect.bottom) {\n                        this.element.style.top = parseInt(this.element.style.top, 10) - (elementRect.bottom - viewPortRect.bottom) + 'px';\n                    }\n                }\n                if (param && param.X === true) {\n                    if (viewPortRect.right < elementRect.right) {\n                        this.element.style.left = parseInt(this.element.style.left, 10) - (elementRect.right - viewPortRect.right) + 'px';\n                    }\n                    else if (viewPortRect.left > elementRect.left) {\n                        this.element.style.left = parseInt(this.element.style.left, 10) + (viewPortRect.left - elementRect.left) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Popup.prototype.checkCollision = function () {\n        var horz = this.collision.X;\n        var vert = this.collision.Y;\n        if (horz === 'none' && vert === 'none') {\n            return;\n        }\n        if (horz === 'flip' && vert === 'flip') {\n            this.callFlip({ X: true, Y: true });\n        }\n        else if (horz === 'fit' && vert === 'fit') {\n            this.callFit({ X: true, Y: true });\n        }\n        else {\n            if (horz === 'flip') {\n                this.callFlip({ X: true, Y: false });\n            }\n            else if (vert === 'flip') {\n                this.callFlip({ Y: true, X: false });\n            }\n            if (horz === 'fit') {\n                this.callFit({ X: true, Y: false });\n            }\n            else if (vert === 'fit') {\n                this.callFit({ X: false, Y: true });\n            }\n        }\n    };\n    /**\n     * Shows the popup element from screen.\n     *\n     * @returns {void}\n     * @param {AnimationModel} animationOptions - specifies the model\n     * @param { HTMLElement } relativeElement - To calculate the zIndex value dynamically.\n     */\n    Popup.prototype.show = function (animationOptions, relativeElement) {\n        var _this = this;\n        this.wireEvents();\n        if (this.zIndex === 1000 || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(relativeElement)) {\n            var zIndexElement = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(relativeElement)) ? this.element : relativeElement;\n            this.zIndex = getZindexPartial(zIndexElement);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.element, { 'zIndex': this.zIndex });\n        }\n        animationOptions = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(animationOptions) && typeof animationOptions === 'object') ?\n            animationOptions : this.showAnimation;\n        if (this.collision.X !== 'none' || this.collision.Y !== 'none') {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], CLASSNAMES.CLOSE);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], CLASSNAMES.OPEN);\n            this.checkCollision();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], CLASSNAMES.OPEN);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], CLASSNAMES.CLOSE);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(animationOptions)) {\n            animationOptions.begin = function () {\n                if (!_this.isDestroyed) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([_this.element], CLASSNAMES.CLOSE);\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([_this.element], CLASSNAMES.OPEN);\n                }\n            };\n            animationOptions.end = function () {\n                if (!_this.isDestroyed) {\n                    _this.trigger('open');\n                }\n            };\n            new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation(animationOptions).animate(this.element);\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], CLASSNAMES.CLOSE);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], CLASSNAMES.OPEN);\n            this.trigger('open');\n        }\n    };\n    /**\n     * Hides the popup element from screen.\n     *\n     * @param {AnimationModel} animationOptions - To give the animation options.\n     * @returns {void}\n     */\n    Popup.prototype.hide = function (animationOptions) {\n        var _this = this;\n        animationOptions = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(animationOptions) && typeof animationOptions === 'object') ?\n            animationOptions : this.hideAnimation;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(animationOptions)) {\n            animationOptions.end = function () {\n                if (!_this.isDestroyed) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([_this.element], CLASSNAMES.OPEN);\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([_this.element], CLASSNAMES.CLOSE);\n                    _this.trigger('close');\n                }\n            };\n            new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation(animationOptions).animate(this.element);\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], CLASSNAMES.OPEN);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], CLASSNAMES.CLOSE);\n            this.trigger('close');\n        }\n        this.unwireEvents();\n    };\n    /**\n     * Gets scrollable parent elements for the given element.\n     *\n     * @returns {void}\n     * @param { HTMLElement } element - Specify the element to get the scrollable parents of it.\n     */\n    Popup.prototype.getScrollableParent = function (element) {\n        this.checkFixedParent(element);\n        return getScrollableParent(element, this.fixedParent);\n    };\n    Popup.prototype.checkFixedParent = function (element) {\n        var parent = element.parentElement;\n        while (parent && parent.tagName !== 'HTML') {\n            var parentStyle = getComputedStyle(parent);\n            if ((parentStyle.position === 'fixed' || parentStyle.position === 'sticky') && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element) && this.element.offsetParent &&\n                this.element.offsetParent.tagName === 'BODY' && getComputedStyle(this.element.offsetParent).overflow !== 'hidden') {\n                this.element.style.top = window.scrollY > parseInt(this.element.style.top, 10) ?\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(window.scrollY - parseInt(this.element.style.top, 10))\n                    : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(parseInt(this.element.style.top, 10) - window.scrollY);\n                this.element.style.position = 'fixed';\n                this.fixedParent = true;\n            }\n            parent = parent.parentElement;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.offsetParent) && parentStyle.position === 'fixed'\n                && this.element.style.position === 'fixed') {\n                this.fixedParent = true;\n            }\n        }\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')\n    ], Popup.prototype, \"height\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')\n    ], Popup.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Popup.prototype, \"content\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('container')\n    ], Popup.prototype, \"targetType\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Popup.prototype, \"viewPortElement\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({ X: 'none', Y: 'none' })\n    ], Popup.prototype, \"collision\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Popup.prototype, \"relateTo\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, PositionData)\n    ], Popup.prototype, \"position\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], Popup.prototype, \"offsetX\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], Popup.prototype, \"offsetY\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1000)\n    ], Popup.prototype, \"zIndex\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Popup.prototype, \"enableRtl\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('reposition')\n    ], Popup.prototype, \"actionOnScroll\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Popup.prototype, \"showAnimation\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Popup.prototype, \"hideAnimation\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Popup.prototype, \"open\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Popup.prototype, \"close\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Popup.prototype, \"targetExitViewport\", void 0);\n    Popup = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], Popup);\n    return Popup;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n/**\n * Gets scrollable parent elements for the given element.\n *\n * @param { HTMLElement } element - Specify the element to get the scrollable parents of it.\n * @param {boolean} fixedParent - specifies the parent element\n * @private\n * @returns {void}\n */\nfunction getScrollableParent(element, fixedParent) {\n    var eleStyle = getComputedStyle(element);\n    var scrollParents = [];\n    var overflowRegex = /(auto|scroll)/;\n    var parent = element.parentElement;\n    while (parent && parent.tagName !== 'HTML') {\n        var parentStyle = getComputedStyle(parent);\n        if (!(eleStyle.position === 'absolute' && parentStyle.position === 'static')\n            && overflowRegex.test(parentStyle.overflow + parentStyle.overflowY + parentStyle.overflowX)) {\n            scrollParents.push(parent);\n        }\n        parent = parent.parentElement;\n    }\n    if (!fixedParent) {\n        scrollParents.push(document);\n    }\n    return scrollParents;\n}\n/**\n * Gets the maximum z-index of the given element.\n *\n * @returns {void}\n * @param { HTMLElement } element - Specify the element to get the maximum z-index of it.\n * @private\n */\nfunction getZindexPartial(element) {\n    // upto body traversal\n    var parent = element.parentElement;\n    var parentZindex = [];\n    while (parent) {\n        if (parent.tagName !== 'BODY') {\n            var index = document.defaultView.getComputedStyle(parent, null).getPropertyValue('z-index');\n            var position = document.defaultView.getComputedStyle(parent, null).getPropertyValue('position');\n            if (index !== 'auto' && position !== 'static') {\n                parentZindex.push(index);\n            }\n            parent = parent.parentElement;\n        }\n        else {\n            break;\n        }\n    }\n    var childrenZindex = [];\n    for (var i = 0; i < document.body.children.length; i++) {\n        if (!element.isEqualNode(document.body.children[i])) {\n            var index = document.defaultView.getComputedStyle(document.body.children[i], null).getPropertyValue('z-index');\n            var position = document.defaultView.getComputedStyle(document.body.children[i], null).getPropertyValue('position');\n            if (index !== 'auto' && position !== 'static') {\n                childrenZindex.push(index);\n            }\n        }\n    }\n    childrenZindex.push('999');\n    var siblingsZindex = [];\n    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.parentElement) && element.parentElement.tagName !== 'BODY') {\n        var childNodes = [].slice.call(element.parentElement.children);\n        for (var i = 0; i < childNodes.length; i++) {\n            if (!element.isEqualNode(childNodes[i])) {\n                var index = document.defaultView.getComputedStyle(childNodes[i], null).getPropertyValue('z-index');\n                var position = document.defaultView.getComputedStyle(childNodes[i], null).getPropertyValue('position');\n                if (index !== 'auto' && position !== 'static') {\n                    siblingsZindex.push(index);\n                }\n            }\n        }\n    }\n    var finalValue = parentZindex.concat(childrenZindex, siblingsZindex);\n    // eslint-disable-next-line\n    var currentZindexValue = Math.max.apply(Math, finalValue) + 1;\n    return currentZindexValue > 2147483647 ? 2147483647 : currentZindexValue;\n}\n/**\n * Gets the maximum z-index of the page.\n *\n * @returns {void}\n * @param { HTMLElement } tagName - Specify the tagName to get the maximum z-index of it.\n * @private\n */\nfunction getMaxZindex(tagName) {\n    if (tagName === void 0) { tagName = ['*']; }\n    var maxZindex = [];\n    for (var i = 0; i < tagName.length; i++) {\n        var elements = document.getElementsByTagName(tagName[i]);\n        for (var i_1 = 0; i_1 < elements.length; i_1++) {\n            var index = document.defaultView.getComputedStyle(elements[i_1], null).getPropertyValue('z-index');\n            var position = document.defaultView.getComputedStyle(elements[i_1], null).getPropertyValue('position');\n            if (index !== 'auto' && position !== 'static') {\n                maxZindex.push(index);\n            }\n        }\n    }\n    // eslint-disable-next-line\n    var currentZindexValue = Math.max.apply(Math, maxZindex) + 1;\n    return currentZindexValue > 2147483647 ? 2147483647 : currentZindexValue;\n}\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-popups/src/popup/popup.js?");

/***/ })

}]);