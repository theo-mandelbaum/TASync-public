"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_collabor-eecfcd6a"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/collaboration/collaboration.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/collaboration/collaboration.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CollaborativeEditingHandler: () => (/* binding */ CollaborativeEditingHandler)\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* eslint-disable */\n\n\n\n/**\n * Module to handle collaborative editing.\n */\nvar CollaborativeEditingHandler = /** @class */ (function () {\n    function CollaborativeEditingHandler(documentEditor) {\n        //TODO need to prevent document change on collaborative editing session i.e. New document, select new document\n        //#region SignalR collabrative editing\n        this.version = 0;\n        this.userMap = {};\n        this.connectionId = '';\n        this.pendingOps = [];\n        this.commentsStart = [];\n        this.commentsEnd = [];\n        this.deletedComments = [];\n        this.serviceUrl = '';\n        this.isSyncServerChanges = false;\n        this.logEventEnabled = true;\n        this.message = '';\n        this.documentEditor = documentEditor;\n    }\n    ;\n    /**\n     * Get module name.\n     * @returns - Returns the module name\n     */\n    CollaborativeEditingHandler.prototype.getModuleName = function () {\n        return 'CollaborativeEditingHandler';\n    };\n    /**\n     * This function updates the room information and server url of the collaborative editing session.\n     * @param roomName - Specifies the current collaborative editing room name.\n     * @param version - Specifies the current version of the document.\n     * @param serviceUrl - Specifies the base url of the collaborative editing service.\n     */\n    CollaborativeEditingHandler.prototype.updateRoomInfo = function (roomName, version, serviceUrl) {\n        this.roomName = roomName;\n        this.serviceUrl = serviceUrl;\n        this.version = version;\n    };\n    /**\n     * Send the current action to the server.\n     * @param args - Specified the current action.\n     * @returns\n     */\n    CollaborativeEditingHandler.prototype.sendActionToServer = function (operations) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operations) && operations.length === 0) {\n            return;\n        }\n        var lastPendingOp = this.pendingOps[this.pendingOps.length - 1];\n        if (!lastPendingOp || !this.checkAndCombineOperation(lastPendingOp, operations)) {\n            this.pendingOps.push(operations);\n        }\n        if (!this.isAcknowledgePending()) {\n            this.sendLocalOperation();\n        }\n        this.transformRemoteCursor(this.connectionId, operations[0], operations[0].offset);\n    };\n    CollaborativeEditingHandler.prototype.checkAndCombineOperation = function (lastAction, currentAction) {\n        if (lastAction.length !== 1 || currentAction.length !== 1) {\n            return false;\n        }\n        var lastOperation = lastAction[0];\n        var currentOperation = currentAction[0];\n        if (this.isSameOperation(lastOperation, currentOperation) && this.canCombineOperation(lastOperation, currentOperation)) {\n            if ((lastOperation.action === 'Insert' && lastOperation.offset + lastOperation.length === currentOperation.offset) ||\n                (lastOperation.action === 'Delete' && (lastOperation.offset === currentOperation.offset))) {\n                lastOperation.length += currentOperation.length;\n                lastOperation.text += currentOperation.text;\n                return true;\n            }\n            else if (lastOperation.action === 'Delete' && currentOperation.offset + currentOperation.length === lastOperation.offset) {\n                lastOperation.text = currentOperation.text + lastOperation.text;\n                lastOperation.offset = currentOperation.offset;\n                lastOperation.length += currentOperation.length;\n                return true;\n            }\n        }\n        return false;\n    };\n    CollaborativeEditingHandler.prototype.canCombineOperation = function (lastOperation, currentOperation) {\n        return lastOperation.format === currentOperation.format &&\n            !this.isControlCharacter(lastOperation.text) &&\n            !this.isControlCharacter(currentOperation.text) &&\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(lastOperation.markerData) &&\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(currentOperation.markerData);\n    };\n    CollaborativeEditingHandler.prototype.isSameOperation = function (lastOperation, currentOperation) {\n        return lastOperation.action === currentOperation.action;\n    };\n    CollaborativeEditingHandler.prototype.isControlCharacter = function (text) {\n        var controlCharacters = [\n            _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Table,\n            _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Row,\n            _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Cell,\n            _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Image,\n            _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.PageBreak,\n            _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.ColumnBreak,\n            _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Section_Break,\n            _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Table,\n            _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Field_Separator,\n            _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start,\n            _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_End,\n            _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Tab,\n            _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.LineBreak\n        ];\n        return controlCharacters.indexOf(text) !== -1;\n    };\n    /**\n     * Apply the remote operation to the current document.\n     * @param action - Specifies the remote action type.\n     * @param data - Specifies the remote operation data.\n     */\n    CollaborativeEditingHandler.prototype.applyRemoteAction = function (action, data) {\n        switch (action) {\n            case 'connectionId':\n                this.connectionId = data;\n                break;\n            case 'removeUser':\n                this.removeCarets(data);\n                break;\n            case 'action':\n                this.dataReceived(data);\n                break;\n        }\n    };\n    CollaborativeEditingHandler.prototype.isAcknowledgePending = function () {\n        return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.acknowledgmentPending);\n    };\n    CollaborativeEditingHandler.prototype.handleAcknowledgementReceived = function (action) {\n        var versionDiff = this.getVersionDifference(action);\n        if (versionDiff > 1) {\n            this.checkAndRetriveChangesFromServer();\n        }\n        else {\n            this.logMessage('Ack received: ' + action.version);\n            this.logMessage('Ack version diff: ' + versionDiff);\n            if (action.version > this.version) {\n                this.updateVersion(action.version);\n                this.acknowledgementReceived();\n                this.sendLocalOperation();\n            }\n        }\n    };\n    CollaborativeEditingHandler.prototype.updateVersion = function (version) {\n        if (version > this.version) {\n            this.version = version;\n        }\n    };\n    CollaborativeEditingHandler.prototype.acknowledgementReceived = function () {\n        this.acknowledgmentPending = undefined;\n    };\n    //Send the local operation to server\n    CollaborativeEditingHandler.prototype.sendLocalOperation = function () {\n        var _this = this;\n        if (this.pendingOps.length > 0) {\n            var operations = this.pendingOps.shift();\n            var changes = {};\n            changes.currentUser = this.documentEditor.currentUser;\n            changes.roomName = this.roomName;\n            changes.connectionId = this.connectionId;\n            changes.version = this.version;\n            changes.operations = operations;\n            this.acknowledgmentPending = operations;\n            var httpRequest = new XMLHttpRequest();\n            httpRequest.open('Post', this.serviceUrl + 'UpdateAction', true);\n            httpRequest.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');\n            this.setCustomAjaxHeaders(httpRequest);\n            httpRequest.onreadystatechange = function () {\n                if (httpRequest.readyState === 4) {\n                    if (httpRequest.status === 200 || httpRequest.status === 304) {\n                        var dataObject = JSON.parse(httpRequest.responseText);\n                        if (!_this.isSyncServerChanges) {\n                            _this.handleAcknowledgementReceived(dataObject);\n                        }\n                    }\n                    else {\n                        var failedArgs = { status: (httpRequest.status).toString(), statusText: httpRequest.statusText, url: _this.serviceUrl + 'UpdateAction' };\n                        _this.documentEditor.fireServiceFailure(failedArgs);\n                    }\n                }\n            };\n            this.logMessage('Sent: ' + JSON.stringify(changes));\n            httpRequest.send(JSON.stringify(changes));\n        }\n    };\n    CollaborativeEditingHandler.prototype.dataReceived = function (action) {\n        if ((action.connectionId === this.connectionId && !this.documentEditor.editor.isIncrementalSave) || this.isSyncServerChanges) {\n            this.logMessage(this.isSyncServerChanges ? 'SignalR Server sync' + action.version : 'SignalR Same user sync:' + action.version);\n            return;\n        }\n        var versionDiff = this.getVersionDifference(action);\n        if (versionDiff <= 0 && !this.documentEditor.editor.isIncrementalSave) {\n            this.logMessage('SignalR return diff:<=0' + action.version);\n            return;\n        }\n        if (versionDiff > 1 && !this.documentEditor.editor.isIncrementalSave) {\n            this.logMessage('SignalR return diff:>=1' + action.version);\n            this.checkAndRetriveChangesFromServer();\n            return;\n        }\n        this.logMessage('SignalR ack: ' + action.version);\n        // try {\n        this.logMessage('Received: ' + JSON.stringify(action));\n        this.handleRemoteOperation(action);\n        // } catch (e) {\n        //     if (e instanceof Error) {\n        //         this.logMessage('Error while handling remote operation: ' + e);\n        //         this.logMessage('Error while handling remote operation: ' + e.stack);\n        //     } else {\n        //         this.logMessage('Error while handling remote operation: ' + e);\n        //     }\n        // }\n    };\n    CollaborativeEditingHandler.prototype.getVersionDifference = function (action) {\n        return action.version - this.version;\n    };\n    CollaborativeEditingHandler.prototype.handleRemoteOperation = function (action) {\n        //To Prevent the content change event while applying the remote operation\n        this.documentEditor.editorModule.isRemoteAction = true;\n        //TODO: Need to handle backward selection.\n        var localStartOffset = this.documentEditor.selectionModule.getAbsolutePositionFromRelativePosition(this.documentEditor.selectionModule.start);\n        var selectionLength = this.documentEditor.selectionModule.getAbsolutePositionFromRelativePosition(this.documentEditor.selectionModule.end) - localStartOffset;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.acknowledgmentPending)) {\n            this.logMessage('Acknowledge transform:' + this.acknowledgmentPending[0].text + 'version:' + action.version);\n            this.transform([this.acknowledgmentPending], action.operations);\n        }\n        if (this.pendingOps.length > 0) {\n            this.logMessage('Pending transform:' + this.pendingOps.length + 'version:' + action.version);\n        }\n        this.transform(this.pendingOps, action.operations);\n        this.applyRemoteOperation(action, localStartOffset, selectionLength);\n        this.updateVersion(action.version);\n        this.documentEditor.editorModule.isRemoteAction = false;\n        if (this.documentEditor.editorHistoryModule.canUndo()) {\n            this.documentEditor.editorHistoryModule.undoStack.length = 0;\n        }\n        if (this.documentEditor.editorHistoryModule.canRedo()) {\n            this.documentEditor.editorHistoryModule.redoStack.length = 0;\n        }\n    };\n    CollaborativeEditingHandler.prototype.transform = function (operation, remoteOperation) {\n        for (var i = 0; i < remoteOperation.length; i++) {\n            var remoteData = remoteOperation[i];\n            if (operation.length > 0) {\n                for (var j = 0; j < operation.length; j++) {\n                    for (var k = 0; k < operation[j].length; k++) {\n                        var localOperation = operation[j][k];\n                        this.transformSelectionOperation(localOperation, remoteData);\n                        var previousOffset = remoteData.offset;\n                        this.transformOperation(localOperation, remoteData, remoteOperation);\n                        this.logMessage('Transformed offset:' + (remoteData.offset - previousOffset));\n                    }\n                }\n            }\n        }\n    };\n    CollaborativeEditingHandler.prototype.skipAction = function (remoteOperation) {\n        for (var i = 0; i < remoteOperation.length; i++) {\n            var data = remoteOperation[i];\n            data.length = 0;\n            data.skipOperation = true;\n        }\n    };\n    CollaborativeEditingHandler.prototype.handleAcceptReject = function (revisions, operation) {\n        for (var i = 0; i < revisions.length; i++) {\n            var revision = revisions[i];\n            if (revision.author === operation.markerData.author && revision.revisionType === operation.markerData.revisionType) {\n                var currentRevision = this.documentEditor.editorModule.getRevision(revision.revisionID);\n                if (currentRevision) {\n                    if (operation.markerData.isAcceptOrReject === 'Accept') {\n                        revision.accept();\n                    }\n                    else if (operation.markerData.isAcceptOrReject === 'Reject') {\n                        revision.reject();\n                    }\n                }\n            }\n        }\n    };\n    CollaborativeEditingHandler.prototype.applyRemoteOperation = function (action, offset, selectionLength) {\n        var currentUser = this.documentEditor.currentUser;\n        var currentEditMode = this.documentEditor.commentReviewPane.commentPane.isEditMode;\n        var currenteditorHistory = this.documentEditor.editorHistoryModule.lastOperation;\n        var currentTextArea;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.documentEditor.commentReviewPane.commentPane.currentEditingComment)) {\n            currentTextArea = this.documentEditor.commentReviewPane.commentPane.currentEditingComment.textArea;\n        }\n        var contentControlProperties;\n        for (var i = 0; i < action.operations.length; i++) {\n            var markerData = action.operations[i].markerData;\n            var tableLength = undefined;\n            var trackingCurrentValue = this.documentEditor.enableTrackChanges;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData.author)) {\n                this.documentEditor.currentUser = markerData.author;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData.isSkipTracking) && markerData.isSkipTracking && this.documentEditor.enableTrackChanges) {\n                this.documentEditor.skipSettingsOps = true;\n                this.documentEditor.enableTrackChanges = false;\n            }\n            if (action.operations[i].skipOperation || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(action.operations[i].markerData) && action.operations[i].markerData.skipOperation)) {\n                continue;\n            }\n            if (action.operations[i].action === 'Update') {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(action.operations[i].styleData)) {\n                    var styleData = JSON.parse(action.operations[i].styleData);\n                    this.documentEditor.editor.updateStyleObject(styleData);\n                }\n                continue;\n            }\n            var startOffset = this.getRelativePositionFromAbsolutePosition(action.operations[i].offset, false, false, false);\n            // Code for Comparing the offset calculated using old approach and optimized approach\n            // this.documentEditor.selection.isNewApproach = true;\n            // let newStartOffset = this.getRelativePositionFromAbsolutePosition(action.operations[i].offset, false, false, false);\n            // this.documentEditor.selection.isNewApproach = false;\n            // throwCustomError(startOffset !== newStartOffset, \"New StartIndex \" + newStartOffset + \" and old StartIndex \" + startOffset + \" doesnot match\");\n            var op2 = action.operations[i];\n            var endOffset = startOffset;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(action.operations[i].action)) {\n                this.documentSettings(action.operations[i]);\n                continue;\n            }\n            if (action.operations[i].action === 'Delete' || action.operations[i].action === 'Format') {\n                //Update endOffset\n                if (!(op2.action === 'Format' && op2.length === 0)) {\n                    this.documentEditor.selectionModule.isEndOffset = true;\n                }\n                endOffset = this.getRelativePositionFromAbsolutePosition(action.operations[i].offset + action.operations[i].length, false, false, false);\n                this.documentEditor.selectionModule.isEndOffset = false;\n                // Code for Comparing the offset calculated using old approach and optimized approach\n                // this.documentEditor.selection.isNewApproach = true;\n                // let newEndOffset = this.getRelativePositionFromAbsolutePosition(action.operations[i].offset + action.operations[i].length, false, false, false);\n                // this.documentEditor.selection.isNewApproach = false;\n                // throwCustomError(endOffset !== newEndOffset, \"New EndIndex \" + newEndOffset + \" and old EndIndex \" + endOffset + \" doesnot match\");\n            }\n            if (op2.action === 'Insert' && (op2.text !== _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Row && op2.text !== _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Cell) && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData.isAcceptOrReject))) {\n                this.documentEditor.selectionModule.select(startOffset, endOffset);\n            }\n            else if (op2.action === 'Delete' && op2.text !== _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Cell && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData.isAcceptOrReject))) {\n                this.documentEditor.selectionModule.select(startOffset, endOffset);\n            }\n            else if (op2.action === 'Format' && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData.isAcceptOrReject))) {\n                this.documentEditor.selectionModule.select(startOffset, endOffset);\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData)) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData.revisionForFootnoteEndnoteContent) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData.revisionId)) {\n                    this.documentEditor.editorModule.revisionData = [];\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData.revisionForFootnoteEndnoteContent)) {\n                    this.documentEditor.editorModule.revisionData.push(op2.markerData.revisionForFootnoteEndnoteContent);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData.revisionId)) {\n                    this.documentEditor.editorModule.revisionData.push(op2.markerData);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData.splittedRevisions) && op2.markerData.splittedRevisions.length > 0) {\n                    this.documentEditor.editorModule.revisionData = this.documentEditor.editorModule.revisionData.concat(op2.markerData.splittedRevisions);\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData.isAcceptOrReject) && op2.markerData.isAcceptOrReject !== '') {\n                var revision = this.documentEditor.editorModule.getRevision(op2.markerData.revisionId);\n                if (revision) {\n                    if (op2.markerData.isAcceptOrReject === 'Accept') {\n                        revision.accept();\n                    }\n                    else if (op2.markerData.isAcceptOrReject === 'Reject') {\n                        revision.reject();\n                    }\n                }\n                else {\n                    if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Row) {\n                        var data_1 = this.getRelativePositionFromAbsolutePosition(op2.offset, false, true, false);\n                        if (data_1 && data_1.rowWidget) {\n                            this.handleAcceptReject(data_1.rowWidget.rowFormat.revisions, op2);\n                        }\n                    }\n                    else {\n                        this.documentEditor.selectionModule.select(startOffset, endOffset);\n                        var item = void 0;\n                        if (this.documentEditor.selection.start.isAtParagraphEnd) {\n                            item = this.documentEditor.selection.start.currentWidget.paragraph.characterFormat;\n                        }\n                        else {\n                            var elementInfo = this.documentEditor.selectionModule.start.currentWidget.getInline(this.documentEditor.selectionModule.start.offset + 1, 0);\n                            item = elementInfo.element;\n                        }\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(item)) {\n                            this.handleAcceptReject(item.revisions, op2);\n                        }\n                    }\n                }\n                continue;\n            }\n            if (op2.action === 'Insert') {\n                if (op2.type === 'Paste') {\n                    this.documentEditor.editorModule.isPasteListUpdated = false;\n                    this.documentEditor.editorModule.pasteContents(_index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.getSfdtDocument(op2.pasteContent));\n                }\n                else if (op2.type === 'PasteToc') {\n                    this.documentEditor.editorModule.isInsertingTOC = true;\n                    this.documentEditor.editorModule.pasteContents(_index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.getSfdtDocument(op2.pasteContent));\n                    this.documentEditor.editorModule.isInsertingTOC = false;\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Image.toString()) {\n                    this.insertImage(op2.imageData);\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Section_Break.toString() && op2.type === 'NewPage') {\n                    this.documentEditor.editorModule.insertSectionBreak();\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Section_Break.toString() && op2.type === 'Continuous') {\n                    this.documentEditor.editorModule.insertSectionBreak(_index__WEBPACK_IMPORTED_MODULE_0__.SectionBreakType.Continuous);\n                }\n                else if (markerData && (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start || op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_End || op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Field_Separator)) {\n                    var element = void 0;\n                    if (markerData.type && markerData.type === 'Bookmark') {\n                        if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start) {\n                            var bookmarks = this.documentEditor.editorModule.createBookmarkElements(markerData.bookmarkName);\n                            element = bookmarks[0];\n                            this.documentEditor.documentHelper.isBookmarkInserted = false;\n                            this.documentEditor.editorModule.insertElementsInternal(this.documentEditor.selectionModule.start, [element]);\n                        }\n                        else {\n                            if (this.documentEditor.documentHelper.bookmarks.containsKey(markerData.bookmarkName)) {\n                                var bookmark = this.documentEditor.documentHelper.bookmarks.get(markerData.bookmarkName);\n                                if (bookmark) {\n                                    element = bookmark.reference;\n                                    this.documentEditor.documentHelper.isBookmarkInserted = true;\n                                    this.documentEditor.editorModule.insertElementsInternal(this.documentEditor.selectionModule.start, [element]);\n                                    this.documentEditor.selectionModule.selectBookmark(markerData.bookmarkName);\n                                    bookmark.properties = this.documentEditor.selectionModule.getBookmarkProperties(bookmark);\n                                    element.properties = this.documentEditor.selectionModule.getBookmarkProperties(element);\n                                    this.documentEditor.editorModule.fireContentChange();\n                                }\n                            }\n                        }\n                    }\n                    else if (markerData.type && markerData.type === 'EditRange') {\n                        var user = markerData.user;\n                        var id = markerData.editRangeId;\n                        if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start) {\n                            if (this.documentEditor.documentHelper.restrictEditingPane) {\n                                this.documentEditor.documentHelper.restrictEditingPane.addUserDialog.bindListData(user);\n                            }\n                            element = this.documentEditor.editorModule.addEditElement(user, id);\n                            element.columnFirst = parseInt(markerData.columnFirst);\n                            element.columnLast = parseInt(markerData.columnLast);\n                            element.line = this.documentEditor.selectionModule.start.currentWidget;\n                        }\n                        else {\n                            var editRanges = this.documentEditor.documentHelper.editRanges.get(user);\n                            for (var _i = 0, editRanges_1 = editRanges; _i < editRanges_1.length; _i++) {\n                                var editStart = editRanges_1[_i];\n                                if (editStart.editRangeId === id) {\n                                    element = editStart.editRangeEnd;\n                                    element.line = this.documentEditor.selectionModule.start.currentWidget;\n                                    break;\n                                }\n                            }\n                        }\n                        this.documentEditor.editorModule.insertElementsInternal(this.documentEditor.selectionModule.start, [element]);\n                        this.documentEditor.editorModule.fireContentChange();\n                    }\n                    else if (markerData.type && markerData.type === 'Field') {\n                        this.documentEditor.editor.isFieldOperation = true;\n                        var type = op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start ? 0 : op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_End ? 1 : op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Field_Separator ? 2 : undefined;\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(type) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData.checkBoxValue)) {\n                            var field = new _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox(type);\n                            if (type === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData.formFieldData)) {\n                                var formFieldData = this.documentEditor.editor.getFormFieldData(op2.type);\n                                this.documentEditor.parser.parseFormFieldData(0, JSON.parse(markerData.formFieldData), formFieldData);\n                                field.formFieldData = formFieldData;\n                            }\n                            var characterFormat = new _index__WEBPACK_IMPORTED_MODULE_0__.WCharacterFormat();\n                            if (op2.format) {\n                                var data_2 = JSON.parse(op2.format);\n                                this.documentEditor.parser.parseCharacterFormat(0, data_2, characterFormat);\n                            }\n                            field.characterFormat.copyFormat(characterFormat);\n                            this.documentEditor.editorModule.initInsertInline(field);\n                        }\n                        else {\n                            var inlineObj = this.documentEditor.selectionModule.start.currentWidget.getInline(this.documentEditor.selectionModule.start.offset, 0);\n                            var inline = inlineObj.element;\n                            if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                                this.documentEditor.editorModule.toggleCheckBoxFormField(inline, true, markerData.checkBoxValue);\n                            }\n                        }\n                    }\n                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData.commentId)) {\n                        var commentType = op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start ? 0 : 1;\n                        var deleteComment = this.documentEditor.documentHelper.layout.getCommentById(this.deletedComments, markerData.commentId);\n                        var ownerDeleteComment = undefined;\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(deleteComment)) {\n                            deleteComment = this.documentEditor.documentHelper.layout.getCommentById(this.documentEditor.documentHelper.comments, markerData.commentId);\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(deleteComment) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData.ownerCommentId)) {\n                                ownerDeleteComment = this.documentEditor.documentHelper.layout.getCommentById(this.documentEditor.documentHelper.comments, markerData.ownerCommentId);\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(ownerDeleteComment)) {\n                                    deleteComment = this.documentEditor.documentHelper.layout.getCommentById(ownerDeleteComment.replyComments, markerData.commentId);\n                                }\n                            }\n                        }\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(deleteComment)) {\n                            var item = new _index__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox(commentType);\n                            item.commentId = markerData.commentId;\n                            this.documentEditor.editorModule.insertElementsInternal(this.documentEditor.selectionModule.start, [item]);\n                            item.comment = deleteComment;\n                            var index = this.documentEditor.selectionModule.start.currentWidget.children.indexOf(item);\n                            deleteComment.commentStart = this.documentEditor.selectionModule.start.currentWidget.children[index];\n                        }\n                        else {\n                            var item = new _index__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox(commentType);\n                            item.commentId = markerData.commentId;\n                            this.documentEditor.editorModule.insertElementsInternal(this.documentEditor.selectionModule.start, [item]);\n                            commentType === 0 ? this.commentsStart.push(item) : this.commentsEnd.push(item);\n                        }\n                    }\n                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData.type) && (op2.markerData.type === 'Footnote' || op2.markerData.type === 'Endnote')) {\n                        if (op2.markerData.type === 'Footnote') {\n                            this.documentEditor.editorModule.insertFootnote();\n                        }\n                        else if (op2.markerData.type === 'Endnote') {\n                            this.documentEditor.editorModule.insertEndnote();\n                        }\n                    }\n                    else if (markerData.type && markerData.type === 'ContentControl') {\n                        if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start) {\n                            contentControlProperties = new _index__WEBPACK_IMPORTED_MODULE_0__.ContentControlProperties(markerData.text);\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData.contentControlProperties)) {\n                                this.documentEditor.editorModule.assignContentControl(contentControlProperties, JSON.parse(markerData.contentControlProperties));\n                            }\n                        }\n                        var contentControl = new _index__WEBPACK_IMPORTED_MODULE_0__.ContentControl(contentControlProperties.contentControlWidgetType);\n                        contentControl.contentControlProperties = contentControlProperties;\n                        contentControl.type = op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start ? 0 : 1;\n                        this.documentEditor.editorModule.insertElementsInternal(this.documentEditor.selectionModule.start, [contentControl]);\n                        if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_End && contentControl.reference) {\n                            this.documentEditor.editorModule.updatePropertiesToBlock(contentControl.reference, true);\n                        }\n                    }\n                }\n                else if (markerData && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData.dropDownIndex) && op2.type === 'DropDown') {\n                    var inlineObj = this.documentEditor.selectionModule.start.currentWidget.getInline(this.documentEditor.selectionModule.start.offset, 0);\n                    var inline = inlineObj.element;\n                    if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                        this.documentEditor.editorModule.updateFormField(inline, markerData.dropDownIndex, false);\n                    }\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Section_Break.toString() && op2.type === 'NewPage') {\n                    this.documentEditor.editorModule.insertSectionBreak();\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Section_Break.toString() && op2.type === 'Continuous') {\n                    this.documentEditor.editorModule.insertSectionBreak(_index__WEBPACK_IMPORTED_MODULE_0__.SectionBreakType.Continuous);\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Table) {\n                    i = action.operations.length;\n                    this.buildTable(action.operations);\n                    tableLength = this.getOperationLength(action.operations);\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Row) {\n                    i = action.operations.length;\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.format)) {\n                        action.operations.reverse();\n                    }\n                    this.buildRow(action.operations);\n                    tableLength = this.getOperationLength(action.operations);\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Cell) {\n                    var paraFormat = undefined;\n                    var charFormat = undefined;\n                    if (op2.type === 'CellFormat') {\n                        if (op2.length > 0) {\n                            paraFormat = action.operations[i - 1].format;\n                            charFormat = action.operations[i - 2].format;\n                        }\n                        this.buildCell(op2, paraFormat, charFormat);\n                    }\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.PageBreak.toString()) {\n                    this.documentEditor.editorModule.insertPageBreak();\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.ColumnBreak.toString()) {\n                    this.documentEditor.editorModule.insertColumnBreak();\n                }\n                else {\n                    if (op2.format) {\n                        var characterFormat = new _index__WEBPACK_IMPORTED_MODULE_0__.WCharacterFormat();\n                        var data = JSON.parse(op2.format);\n                        this.documentEditor.parser.parseCharacterFormat(0, data, characterFormat);\n                        this.documentEditor.selectionModule.isRetrieveFormatting = true;\n                        this.documentEditor.selectionModule.characterFormat.copyFormat(characterFormat);\n                        this.documentEditor.selectionModule.isRetrieveFormatting = false;\n                    }\n                    this.documentEditor.editorModule.insertText(op2.text);\n                }\n            }\n            else if (op2.action === 'Delete') {\n                // if (this.documentEditor.selection.isEmpty && this.documentEditor.selection.start.currentWidget.isLastLine()\n                //     && this.documentEditor.selection.start.offset === this.documentEditor.selection.getLineLength(this.documentEditor.selection.start.currentWidget) + 1) {\n                //     this.documentEditor.selection.start.offset--;\n                //     this.documentEditor.selection.end.offset--;\n                //     //Delete pargaraph marker\n                //     this.documentEditor.editor.delete();\n                // } else {\n                if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start || op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_End) {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData.commentId)) {\n                        var selection = this.documentEditor.selectionModule;\n                        var commentType = op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start ? 0 : 1;\n                        var deleteComment = void 0;\n                        if (this.documentEditor.selection.getElementInfo(this.documentEditor.selection.end.currentWidget, this.documentEditor.selection.end.offset).element instanceof _index__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox) {\n                            deleteComment = this.documentEditor.selection.getElementInfo(this.documentEditor.selection.end.currentWidget, this.documentEditor.selection.end.offset).element;\n                        }\n                        if (commentType === 1) {\n                            var commentEnd = deleteComment;\n                            if (commentEnd.indexInOwner !== -1) {\n                                this.documentEditor.editorModule.removeAtOffset(selection.start.currentWidget, this.documentEditor.selectionModule, selection.start.offset);\n                            }\n                        }\n                        else {\n                            var commentStart = deleteComment;\n                            if (commentStart.indexInOwner !== -1) {\n                                this.documentEditor.editorModule.removeAtOffset(selection.start.currentWidget, this.documentEditor.selectionModule, selection.start.offset);\n                            }\n                            commentStart.removeCommentMark();\n                        }\n                    }\n                    else {\n                        var selection = this.documentEditor.selectionModule;\n                        var offset_1 = selection.start.offset - 1;\n                        this.documentEditor.editorModule.removeAtOffset(selection.start.currentWidget, this.documentEditor.selectionModule, offset_1);\n                    }\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Cell) {\n                    this.buildDeleteCells(op2);\n                }\n                else {\n                    this.documentEditor.editorModule.onBackSpace();\n                }\n                //}\n            }\n            else if (op2.action === 'Format') {\n                if (op2.text === (_index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start.toString() + _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_End.toString())) {\n                    this.updateOperation(op2);\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.format)) {\n                    var contentcontrol = this.documentEditor.selection.currentContentControl;\n                    if (contentcontrol) {\n                        this.documentEditor.editorModule.assignContentControl(contentcontrol.contentControlProperties, JSON.parse(op2.format));\n                    }\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData) && op2.markerData.type === 'ContentControlCheckBox') {\n                    var contentcontrol = this.documentEditor.selection.currentContentControl;\n                    if (contentcontrol && contentcontrol.contentControlProperties.type === 'CheckBox') {\n                        this.documentEditor.editorModule.toggleContentControlCheckBox(contentcontrol, markerData.checkBoxValue);\n                    }\n                }\n                else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData.revisionId)) {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(op2.markerData.revisionType)) {\n                        if (op2.markerData.revisionType === 'Deletion') {\n                            if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Row) {\n                                var data_3 = this.getRelativePositionFromAbsolutePosition(op2.offset, false, true, false);\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data_3.rowWidget)) {\n                                    var row = data_3.rowWidget;\n                                    this.documentEditor.editorModule.trackRowDeletion(row);\n                                    this.documentEditor.trackChangesPane.updateTrackChanges();\n                                    continue;\n                                }\n                            }\n                            this.documentEditor.editorModule.onBackSpace();\n                        }\n                    }\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Row) {\n                    var data_4 = this.getRelativePositionFromAbsolutePosition(op2.offset, false, true, false);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data_4.rowWidget)) {\n                        var table = data_4.rowWidget.ownerTable;\n                        var rowData = JSON.parse(op2.format);\n                        this.documentEditor.documentHelper.owner.parser.parseRowFormat(rowData, data_4.rowWidget.rowFormat, 0);\n                        table.calculateGrid(false);\n                        this.documentEditor.documentHelper.layout.reLayoutTable(table);\n                    }\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Cell) {\n                    if (op2.type === 'TableFormat') {\n                        var tableData = this.getRelativePositionFromAbsolutePosition(op2.offset, true, false, false);\n                        var table = JSON.parse(op2.format);\n                        this.documentEditor.documentHelper.owner.parser.parseTableFormat(table, tableData.tableWidget.tableFormat, 0);\n                        tableData.tableWidget.calculateGrid(false);\n                        this.documentEditor.documentHelper.layout.reLayoutTable(tableData.tableWidget);\n                    }\n                    if (op2.type === 'RowFormat') {\n                        var rowData = this.getRelativePositionFromAbsolutePosition(op2.offset, false, true, false);\n                        var row = JSON.parse(op2.format);\n                        this.documentEditor.documentHelper.owner.parser.parseRowFormat(row, rowData.rowWidget.rowFormat, 0);\n                    }\n                    if (op2.type === 'CellFormat') {\n                        var cellData = this.getRelativePositionFromAbsolutePosition(op2.offset, false, false, true);\n                        var cell = JSON.parse(op2.format);\n                        this.documentEditor.documentHelper.owner.parser.parseCellFormat(cell, cellData.cellWidget.cellFormat, 0);\n                    }\n                }\n                else if (op2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Image) {\n                    var inlineObj = this.documentEditor.selectionModule.end.currentWidget.getInline(this.documentEditor.selectionModule.end.offset, 0);\n                    var inline = inlineObj.element;\n                    if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox) {\n                        this.documentEditor.editorModule.onImageFormat(inline, _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.convertPointToPixel(op2.imageData.width), _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.convertPointToPixel(op2.imageData.height), op2.imageData.alternativeText);\n                    }\n                }\n                else if (op2.type === 'ListFormat') {\n                    var paragraphFormat = JSON.parse(op2.format);\n                    var format = new _index__WEBPACK_IMPORTED_MODULE_0__.WParagraphFormat(undefined);\n                    this.documentEditor.parser.parseParagraphFormat(0, paragraphFormat, format);\n                    this.updateList(op2, format);\n                    var list = this.documentEditor.documentHelper.getListById(paragraphFormat.listFormat.nsid, true);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(list)) {\n                        format.listFormat.listId = list.listId;\n                        format.listFormat.list = list;\n                    }\n                    this.documentEditor.editorModule.onApplyParagraphFormat(op2.text, format.listFormat, false, false);\n                }\n                else if (op2.type === 'RestartNumbering') {\n                    var nsid = this.updateList(op2);\n                    var list = this.documentEditor.documentHelper.getListById(nsid, true);\n                    this.documentEditor.editorModule.restartListAtInternal(this.documentEditor.selectionModule, list.listId, list.nsid);\n                }\n                else if (op2.type === 'ContinueNumbering') {\n                    var paragraphFormat = JSON.parse(op2.format);\n                    var format = new _index__WEBPACK_IMPORTED_MODULE_0__.WParagraphFormat(undefined);\n                    this.documentEditor.parser.parseParagraphFormat(0, paragraphFormat, format);\n                    var list = this.documentEditor.documentHelper.getListById(format.listFormat.nsid, true);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(list)) {\n                        format.listFormat.listId = list.listId;\n                        format.listFormat.list = list;\n                    }\n                    this.documentEditor.editorModule.applyContinueNumberingInternal(this.documentEditor.selectionModule, format);\n                }\n                else if (op2.type === 'CharacterFormat') {\n                    this.insertCharaterFormat(op2.type, op2.format);\n                }\n                else if (op2.type === 'ParagraphFormat') {\n                    this.insertParagraphFormat(op2, op2.format);\n                }\n                else if (op2.type === 'TableFormat') {\n                    this.insertTableFormat(op2.text, op2.format, op2.offset);\n                }\n                else if (op2.type === 'SectionFormat') {\n                    this.insertSectionFormat(op2.text, op2.format);\n                }\n                else if (op2.type === 'RowFormat') {\n                    this.insertRowFormat(op2.text, op2.format);\n                }\n                else if (op2.type === 'CellFormat') {\n                    this.insertCellFormat(op2.format);\n                }\n            }\n            this.documentEditor.editor.revisionData = undefined;\n            if (this.documentEditor.enableTrackChanges != trackingCurrentValue) {\n                this.documentEditor.skipSettingsOps = true;\n                this.documentEditor.enableTrackChanges = trackingCurrentValue;\n            }\n            this.documentEditor.currentUser = currentUser;\n            var newOffset = this.documentEditor.selectionModule.startOffset;\n            //op2.offset = newOffset;\n            this.updateRemoteSelection(action, this.documentEditor.selectionModule.getAbsolutePositionFromRelativePosition(newOffset));\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(tableLength)) {\n                var temp = op2.length;\n                op2.length = tableLength;\n                tableLength = temp;\n            }\n            var tranformedOffset = this.transformSection(op2.action, op2, offset)[1];\n            //TODO: Need to handle backward selection.\n            //TODO: Need to optimize the code. Need to transform selection end length based on remove content\n            var tranformedEndOffset = this.transformSection(op2.action, op2, offset + selectionLength)[1];\n            offset = tranformedOffset;\n            this.documentEditor.selectionModule.select(this.getRelativePositionFromAbsolutePosition(tranformedOffset, false, false, false), this.getRelativePositionFromAbsolutePosition(tranformedEndOffset, false, false, false));\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(tableLength)) {\n                op2.length = tableLength;\n            }\n            this.transformRemoteCursor(action.connectionId, op2, op2.offset);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.documentEditor.searchModule) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.documentEditor.optionsPaneModule) && this.documentEditor.searchModule.searchResults.length > 0 && this.documentEditor.optionsPaneModule.isOptionsPaneShow) {\n                this.documentEditor.optionsPaneModule.searchIconClickInternal();\n            }\n        }\n        contentControlProperties = undefined;\n        if (this.documentEditor.editor.isFieldOperation) {\n            this.documentEditor.editorModule.layoutWholeDocument();\n            this.documentEditor.editor.isFieldOperation = false;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.rowWidget)) {\n            var ownerTable = this.rowWidget.ownerTable.combineWidget(this.documentEditor.viewer);\n            ownerTable.updateRowIndex(0);\n            ownerTable.calculateGrid(true);\n            this.documentEditor.documentHelper.layout.reLayoutTable(ownerTable);\n            this.documentEditor.editorModule.reLayout(this.documentEditor.selectionModule);\n            this.rowWidget = undefined;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.table)) {\n            this.table.calculateGrid();\n            this.documentEditor.editorModule.updateTable(this.table);\n            this.documentEditor.editorModule.reLayout(this.documentEditor.selectionModule, true);\n            this.table = undefined;\n        }\n        this.documentEditor.currentUser = currentUser;\n        this.documentEditor.commentReviewPane.commentPane.isEditMode = currentEditMode;\n        this.documentEditor.editorHistoryModule.lastOperation = currenteditorHistory;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.documentEditor.commentReviewPane.commentPane.currentEditingComment)) {\n            this.documentEditor.commentReviewPane.commentPane.currentEditingComment.textArea = currentTextArea;\n        }\n    };\n    CollaborativeEditingHandler.prototype.updateOperation = function (operation) {\n        var markerData = operation.markerData;\n        if (operation.text === (_index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start.toString() + _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_End.toString())) {\n            var ownerComment = undefined;\n            var commentToDelete = undefined;\n            if (this.documentEditor.selection.getElementInfo(this.documentEditor.selection.end.currentWidget, this.documentEditor.selection.end.offset).element instanceof _index__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox && operation.offset > 0) {\n                var commentID = this.documentEditor.selection.getElementInfo(this.documentEditor.selection.end.currentWidget, this.documentEditor.selection.end.offset).element.commentId;\n                commentToDelete = this.getComment(commentID);\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(commentToDelete) && !(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData.done) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData.date)) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData.isReply)) {\n                if (commentToDelete.text !== markerData.text) {\n                    var commentView = this.documentEditor.commentReviewPane.commentPane.comments.get(commentToDelete);\n                    commentView.commentText.innerText = markerData.text;\n                    commentToDelete.text = markerData.text;\n                    return;\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(commentToDelete)) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData.done) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData.commentAction)) {\n                    if (markerData.done) {\n                        this.documentEditor.editorModule.resolveComment(commentToDelete);\n                    }\n                    else {\n                        this.documentEditor.editorModule.reopenComment(commentToDelete);\n                    }\n                    return;\n                }\n                if (markerData.commentAction === \"remove\") {\n                    var commentView = this.documentEditor.commentReviewPane.commentPane.comments.get(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(ownerComment) ? ownerComment : commentToDelete);\n                    commentView.showDrawer();\n                    this.documentEditor.editorModule.deleteCommentWidget(commentToDelete);\n                    this.deletedComments.push(commentToDelete);\n                    commentView.hideDrawer();\n                }\n                else {\n                    var item = new _index__WEBPACK_IMPORTED_MODULE_0__.CommentElementBox(markerData.date);\n                    item.commentId = markerData.commentId;\n                    var commentStart = this.getObjectByCommentId(this.commentsStart, item.commentId);\n                    var commentEnd = this.getObjectByCommentId(this.commentsEnd, item.commentId);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(commentStart) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(commentEnd)) {\n                        this.documentEditor.editorModule.updateCommentElement(item, commentStart, commentEnd, markerData);\n                        item.ownerComment = commentToDelete;\n                        commentToDelete.replyComments.splice(markerData.commentIndex, 0, item);\n                        this.documentEditor.commentReviewPane.addReply(item, false, false);\n                    }\n                }\n            }\n            else {\n                var item = new _index__WEBPACK_IMPORTED_MODULE_0__.CommentElementBox(markerData.date);\n                item.commentId = markerData.commentId;\n                var commentStart = this.getObjectByCommentId(this.commentsStart, item.commentId);\n                var commentEnd = this.getObjectByCommentId(this.commentsEnd, item.commentId);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(commentStart) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(commentEnd)) {\n                    this.documentEditor.editorModule.updateCommentElement(item, commentStart, commentEnd, markerData);\n                    this.documentEditor.editorModule.addCommentWidget(item, true, true, false);\n                    this.commentsStart.splice(this.commentsStart.indexOf(commentStart), 1);\n                    this.commentsEnd.splice(this.commentsEnd.indexOf(commentEnd), 1);\n                    var comment = this.documentEditor.commentReviewPane.commentPane.comments.get(item);\n                    comment.postComment();\n                }\n            }\n        }\n    };\n    CollaborativeEditingHandler.prototype.getComment = function (commentID) {\n        var collection = this.documentEditor.documentHelper.comments;\n        for (var i = 0; i < collection.length; i++) {\n            var comment = this.documentEditor.documentHelper.layout.getCommentById(collection, commentID);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(comment)) {\n                for (var j = 0; j < collection[i].replyComments.length; j++) {\n                    var replyComment = this.documentEditor.documentHelper.layout.getCommentById(collection[i].replyComments, commentID);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(replyComment)) {\n                        return replyComment;\n                    }\n                }\n            }\n            else {\n                return comment;\n            }\n        }\n        return null;\n    };\n    CollaborativeEditingHandler.prototype.updateList = function (operation, format) {\n        var nsid = -1;\n        if (operation.listData) {\n            var listData = JSON.parse(operation.listData);\n            if (listData.hasOwnProperty('optimizeSfdt')) {\n                this.documentEditor.parser.keywordIndex = listData.optimizeSfdt ? 1 : 0;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(format)) {\n                var list = this.documentEditor.documentHelper.getListById(format.listFormat.nsid, true);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(list)) {\n                    this.updateListCollection(listData, this.documentEditor.parser.keywordIndex);\n                }\n                else {\n                    var abstractLists = [];\n                    this.documentEditor.parser.parseAbstractList(listData, abstractLists);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(list.abstractList)) {\n                        if (list.abstractList.levels.length < format.listFormat.listLevelNumber) {\n                            list.abstractList.levels = [];\n                            for (var i = 0; i < abstractLists[0].levels.length; i++) {\n                                list.abstractList.levels.push(abstractLists[0].levels[i]);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (listData.hasOwnProperty(_index__WEBPACK_IMPORTED_MODULE_0__.nsidProperty)) {\n                    nsid = listData[_index__WEBPACK_IMPORTED_MODULE_0__.nsidProperty];\n                }\n                this.updateListCollection(listData, this.documentEditor.parser.keywordIndex);\n            }\n        }\n        return nsid;\n    };\n    CollaborativeEditingHandler.prototype.getOperationLength = function (operations) {\n        var length = 0;\n        for (var i = 0; i < operations.length; i++) {\n            if (operations[parseInt(i.toString(), 10)].text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Table || operations[parseInt(i.toString(), 10)].text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Row || operations[parseInt(i.toString(), 10)].text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Cell)\n                length += operations[parseInt(i.toString(), 10)].length;\n        }\n        return length;\n    };\n    CollaborativeEditingHandler.prototype.updateListCollection = function (listData, keywordIndex) {\n        var uniqueListId = this.documentEditor.editorModule.getUniqueListOrAbstractListId(true);\n        var uniqueAbsLstId = this.documentEditor.editorModule.getUniqueListOrAbstractListId(false);\n        var _loop_1 = function (k) {\n            var list = listData[_index__WEBPACK_IMPORTED_MODULE_0__.listsProperty[keywordIndex]][k];\n            var abstractList = listData[_index__WEBPACK_IMPORTED_MODULE_0__.abstractListsProperty[keywordIndex]].filter(function (obj) {\n                return obj[_index__WEBPACK_IMPORTED_MODULE_0__.abstractListIdProperty[keywordIndex]] === list[_index__WEBPACK_IMPORTED_MODULE_0__.abstractListIdProperty[keywordIndex]];\n            })[0];\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(abstractList)) {\n                abstractList[_index__WEBPACK_IMPORTED_MODULE_0__.abstractListIdProperty[keywordIndex]] = uniqueAbsLstId;\n                list[_index__WEBPACK_IMPORTED_MODULE_0__.listIdProperty[keywordIndex]] = uniqueListId;\n                list[_index__WEBPACK_IMPORTED_MODULE_0__.abstractListIdProperty[keywordIndex]] = uniqueAbsLstId;\n                uniqueListId++;\n                uniqueAbsLstId++;\n            }\n        };\n        for (var k = 0; k < listData[_index__WEBPACK_IMPORTED_MODULE_0__.listsProperty[keywordIndex]].length; k++) {\n            _loop_1(k);\n        }\n        this.documentEditor.parser.parseAbstractList(listData, this.documentEditor.documentHelper.abstractLists);\n        this.documentEditor.parser.parseList(listData, this.documentEditor.documentHelper.lists);\n    };\n    CollaborativeEditingHandler.prototype.getObjectByCommentId = function (collection, commentId) {\n        for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n            var obj = collection_1[_i];\n            if (obj.commentId === commentId) {\n                return obj;\n            }\n        }\n        return undefined;\n    };\n    CollaborativeEditingHandler.prototype.transformOperation = function (operation1, operation2, action) {\n        if (operation1.action === 'Insert' && (operation2.action === 'Insert' || operation2.action === 'Format')) {\n            if (operation1.offset < operation2.offset) {\n                operation2.offset = operation2.offset + operation1.length;\n                return [operation1, operation2];\n            }\n            else if (operation1.offset >= operation2.offset && operation2.action !== 'Format') {\n                operation1.offset = operation1.offset + operation2.length;\n                return [operation1, operation2,];\n            }\n        }\n        else if (operation1.action === 'Delete' && (operation2.action === 'Delete' || operation2.action === 'Format')) {\n            if (operation1.offset < operation2.offset) {\n                operation2.offset = operation2.offset - operation1.length;\n                return [operation1, operation2];\n            }\n            else if (operation1.offset > operation2.offset && operation2.action !== 'Format') {\n                operation1.offset = operation1.offset - operation2.length;\n                return [operation1, operation2,];\n            }\n        }\n        else if (operation1.action === 'Insert' && (operation2.action === 'Delete' || operation2.action === 'Format')) {\n            if (operation1.offset <= operation2.offset) {\n                operation2.offset = operation2.offset + operation1.length;\n                return [operation1, operation2];\n            }\n            else if (operation1.offset >= operation2.offset + operation2.length && operation2.action !== 'Format') {\n                operation1.offset = operation1.offset - operation2.length;\n                return [operation1, operation2,];\n            }\n            // Local selection fully encompasses the conflicting selection\n            else if (operation1.offset > operation2.offset && operation1.offset < (operation2.offset + operation2.length)) {\n                operation2.length += operation1.length;\n            }\n        }\n        else if (operation1.action === 'Delete' && (operation2.action === 'Insert' || operation2.action === 'Format')) {\n            if (operation1.offset <= operation2.offset && (operation1.offset + operation1.length) <= operation2.offset) {\n                operation2.offset = operation2.offset - operation1.length;\n            }\n            else if (operation1.offset < operation2.offset && (operation1.offset + operation1.length) >= (operation2.offset + operation2.length)) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operation2.markerData) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operation2.markerData.type) && operation2.markerData.type !== 'Field' && (operation2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_End || operation2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start)) {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operation2.markerData.commentId) && operation2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_End) {\n                        this.skipAction(action);\n                        return [operation1, operation2];\n                    }\n                    var conflictLenth = operation2.offset - operation1.offset;\n                    operation2.offset -= conflictLenth;\n                }\n                else {\n                    //Skip insert operation\n                    operation2.length = 0;\n                    operation2.skipOperation = true;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operation2.markerData) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operation2.markerData.type) && operation2.markerData.type === 'Field' && (operation2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_Start || operation2.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Marker_End)) {\n                        this.skipAction(action);\n                    }\n                }\n            }\n            else if (operation1.offset <= operation2.offset && operation2.action == \"Insert\" && (operation1.offset + operation1.length) >= operation2.offset) {\n                this.skipAction(action);\n            }\n            else if (operation1.offset > operation2.offset && operation2.action !== 'Format') {\n                operation1.offset = operation1.offset + operation2.length;\n            }\n        }\n        // else {\n        //     throw new Error(`Invalid operation types: ${operation1.action}, ${operation2.action}`);\n        // }\n        return [operation1, operation2];\n    };\n    CollaborativeEditingHandler.prototype.transformSection = function (action, operation1, operation2) {\n        if (action === 'Insert') {\n            if (operation1.offset < operation2) {\n                return [operation1.offset, operation2 + operation1.length];\n            }\n            // else if (operation1.offset > operation2.offset) {\n            //     return [\n            //         operation1.offset + operation2.length,\n            //         operation2.offset,\n            //     ];\n            // }\n        }\n        else if (action === 'Delete') {\n            if (operation1.offset <= operation2) {\n                return [operation1.offset, operation2 - operation1.length];\n            }\n        }\n        return [operation1.offset, operation2];\n    };\n    CollaborativeEditingHandler.prototype.transformRemoteCursor = function (connectionId, operation, offset) {\n        if (this.documentEditor.editorModule.isIncrementalSave) {\n            return;\n        }\n        this.updateCaretPosition(connectionId, operation);\n    };\n    /**\n     * @private\n     * @returns {void}\n    */\n    CollaborativeEditingHandler.prototype.updateCaretPosition = function (connectionId, operation) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.userMap)) {\n            return;\n        }\n        var keys = Object.keys(this.userMap);\n        var tranformedOffset;\n        //For loop to iterate over the keys\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (key === connectionId) {\n                continue;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operation)) {\n                var remoteOffset = this.userMap[key].offset;\n                tranformedOffset = this.transformSection(operation.action, operation, remoteOffset)[1];\n                this.userMap[key].offset = tranformedOffset;\n            }\n            else {\n                tranformedOffset = this.userMap[key].offset;\n            }\n            this.updateCaretPositionInteral(this.userMap[key].caret, tranformedOffset);\n        }\n    };\n    CollaborativeEditingHandler.prototype.updateRemoteSelection = function (data, removeOffset) {\n        if (this.documentEditor.editorModule.isIncrementalSave) {\n            return;\n        }\n        if (data.connectionId) {\n            var color = '';\n            var caret = void 0;\n            if (this.userMap[data.connectionId] !== undefined) {\n                color = this.userMap[data.connectionId].color;\n                caret = this.userMap[data.connectionId].caret;\n            }\n            else {\n                color = this.getColorForMember(Math.random() * 100);\n                caret = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'e-de-blink-cursor', styles: ('position:absolute;border-left: 2px solid ' + color) });\n                this.userMap[data.connectionId] = new CaretInfo(color, caret, removeOffset, data.currentUser);\n            }\n            this.userMap[data.connectionId].offset = removeOffset;\n            this.updateCaretPositionInteral(caret, removeOffset);\n        }\n    };\n    CollaborativeEditingHandler.prototype.removeCarets = function (connectionId) {\n        if (this.userMap[connectionId] !== undefined) {\n            this.userMap[connectionId].caret.remove();\n            delete this.userMap[connectionId];\n        }\n    };\n    CollaborativeEditingHandler.prototype.getColorForMember = function (randonNumber) {\n        var colorValue = randonNumber % 20;\n        return \"hsl(\" + (colorValue * 360 / 7) % 360 + \", 100%, 35%)\";\n    };\n    CollaborativeEditingHandler.prototype.updateCaretPositionInteral = function (caret, start) {\n        var zoomFactor = this.documentEditor.zoomFactor;\n        var selection = this.documentEditor.selectionModule;\n        var startPos = selection.getTextPosBasedOnLogicalIndex(this.getRelativePositionFromAbsolutePosition(start, false, false, false));\n        //let endPos: TextPosition = selection.getTextPosBasedOnLogicalIndex(end);\n        var caretPosition = startPos.location;\n        //if (startPos.isInSameParagraph(endPos)) {\n        caret.style.display = 'block';\n        if (!caret.parentElement) {\n            this.documentEditor.documentHelper.viewerContainer.appendChild(caret);\n        }\n        var page = selection.getSelectionPage(startPos);\n        if (page) {\n            caret.style.left = page.boundingRectangle.x + (Math.round(caretPosition.x) * zoomFactor) + 'px';\n            var caretInfo = selection.updateCaretSize(startPos, true);\n            var topMargin = caretInfo.topMargin;\n            caret.style.height = (caretInfo.height * zoomFactor) + 'px';\n            var pageTop = selection.getPageTop(page);\n            caret.style.top = pageTop + Math.round(caretPosition.y + topMargin) * zoomFactor + 'px';\n            if (selection.characterFormat.baselineAlignment === 'Subscript') {\n                caret.style.top = parseFloat(caret.style.top) + (parseFloat(caret.style.height) / 2) + 'px';\n            }\n        }\n    };\n    CollaborativeEditingHandler.prototype.getBlockPosition = function (offset, currentLength, block, completed, isTableInserted, isRowInserted, isCellInserted) {\n        var paragraph;\n        if (block instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n            // let paraLength: number = block.length;\n            // Code for Comparing the offset calculated using old approach and optimized approach\n            // if (this.documentEditor.selection.getParagraphLength(block) + 1 == block.length && currentLength + paraLength < offset && currentLength + paraLength + 1 < offset && this.documentEditor.selection.isNewApproach) {\n            //     currentLength += paraLength;\n            // } else {\n            var absoluteData = this.getBlockTotalLength(offset, currentLength, block, completed, isTableInserted, isRowInserted, isCellInserted);\n            // length = block.getTotalLength() + 1;\n            // paragraph = block;\n            if (completed.done) {\n                completed.done = true;\n                return absoluteData;\n            }\n            else {\n                //Add paragraph mark length\n                currentLength = absoluteData.currentLength;\n                offset = absoluteData.offset;\n                paragraph = absoluteData.paragraph;\n            }\n            // }\n        }\n        else if (block instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n            // Table start mark length\n            offset -= 1;\n            if (offset === currentLength) {\n                if (isTableInserted || this.documentEditor.selectionModule.isEndOffset) {\n                    completed.done = true;\n                    return { 'offset': offset, 'currentLength': currentLength, 'paragraph': paragraph, 'tableWidget': block };\n                }\n            }\n            var row = block.firstChild;\n            while (row) {\n                // Row mark length\n                offset -= 1;\n                if (offset === currentLength) {\n                    if (isRowInserted || this.documentEditor.selectionModule.isEndOffset) {\n                        completed.done = true;\n                        var index = row.index;\n                        return { 'offset': offset, 'currentLength': currentLength, 'paragraph': paragraph, 'rowOrCellIndex': index, 'rowWidget': row };\n                    }\n                    else if (isCellInserted) {\n                        completed.done = true;\n                        var cellWidget = paragraph.associatedCell;\n                        var index = cellWidget.cellIndex + 1;\n                        return { 'offset': offset, 'currentLength': currentLength, 'paragraph': paragraph, 'rowOrCellIndex': index, 'cellWidget': cellWidget };\n                    }\n                }\n                var cell = row.firstChild;\n                while (cell) {\n                    // Cell mark length\n                    offset -= 1;\n                    if (offset === currentLength) {\n                        if (isCellInserted) {\n                            completed.done = true;\n                            var index = cell.cellIndex;\n                            return { 'offset': offset, 'currentLength': currentLength, 'paragraph': paragraph, 'rowOrCellIndex': index, 'cellWidget': cell };\n                        }\n                    }\n                    var childBlock = cell.firstChild;\n                    while (childBlock) {\n                        var data = this.getBlockPosition(offset, currentLength, childBlock, completed, isTableInserted, isRowInserted, isCellInserted);\n                        if (completed.done) {\n                            if (isRowInserted && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data.rowWidget)) {\n                                completed.done = true;\n                                var rowWidget = cell.ownerRow;\n                                var index = rowWidget.index + 1;\n                                return { 'offset': offset, 'currentLength': currentLength, 'paragraph': paragraph, 'rowOrCellIndex': index, 'rowWidget': rowWidget };\n                            }\n                            else if (isCellInserted && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data.cellWidget)) {\n                                completed.done = true;\n                                var cellWidget = cell;\n                                var index = cellWidget.cellIndex + 1;\n                                return { 'offset': offset, 'currentLength': currentLength, 'paragraph': paragraph, 'rowOrCellIndex': index, 'cellWidget': cellWidget };\n                            }\n                            else {\n                                return data;\n                            }\n                        }\n                        else {\n                            offset = data.offset;\n                            currentLength = data.currentLength;\n                            paragraph = data.paragraph;\n                        }\n                        childBlock = childBlock.getSplitWidgets().pop().nextRenderedWidget;\n                    }\n                    cell = cell.nextWidget;\n                }\n                var tableIndex = row.ownerTable.index;\n                row = row.getSplitWidgets().pop().nextRenderedWidget;\n                if (row && row.ownerTable.index !== tableIndex) {\n                    row = undefined;\n                }\n            }\n        }\n        return { 'offset': offset, 'currentLength': currentLength, 'paragraph': paragraph };\n    };\n    CollaborativeEditingHandler.prototype.getBlockTotalLength = function (offset, currentLength, block, completed, isTableInserted, isRowInserted, isCellInserted) {\n        var splittedWidget = block.getSplitWidgets();\n        //Paragraph start offset\n        var paragraphStartLength = 1;\n        var length = 0;\n        if (currentLength + paragraphStartLength >= offset) {\n            completed.done = true;\n            return { 'offset': offset - 1, 'currentLength': currentLength, 'paragraph': block };\n        }\n        var childBlockLength = 0;\n        for (var i = 0; i < splittedWidget.length; i++) {\n            for (var j = 0; j < splittedWidget[i].childWidgets.length; j++) {\n                var line = splittedWidget[i].childWidgets[j];\n                for (var k = 0; k < line.children.length; k++) {\n                    var element = line.children[k];\n                    if (element instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                        continue;\n                    }\n                    if ((element instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(element.textFrame) && element.textFrame.childWidgets.length > 0)\n                        || element instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FootnoteElementBox) {\n                        var absoluteData = void 0;\n                        if (element instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ShapeElementBox) {\n                            var currentLengthValue = currentLength + childBlockLength + length + paragraphStartLength;\n                            for (var i_1 = 0; i_1 < element.textFrame.childWidgets.length; i_1++) {\n                                absoluteData = this.getBlockPosition(offset, currentLengthValue, element.textFrame.childWidgets[i_1], completed, isTableInserted, isRowInserted, isCellInserted);\n                                currentLengthValue = absoluteData.currentLength;\n                                offset = absoluteData.offset;\n                            }\n                        }\n                        else {\n                            var currentLengthValue = currentLength + childBlockLength + length + paragraphStartLength;\n                            for (var m = 0; m < element.bodyWidget.childWidgets.length && !completed.done; m++) {\n                                absoluteData = this.getBlockPosition(offset, currentLengthValue, element.bodyWidget.childWidgets[m], completed, isTableInserted, isRowInserted, isCellInserted);\n                                currentLengthValue = absoluteData.currentLength;\n                                offset = absoluteData.offset;\n                            }\n                        }\n                        offset = absoluteData.offset;\n                        childBlockLength += (absoluteData.currentLength - (currentLength + length + paragraphStartLength + childBlockLength));\n                        if (completed.done) {\n                            currentLength = absoluteData.currentLength;\n                            return absoluteData;\n                        }\n                    }\n                    length += element.length;\n                    offset += element.skipformFieldLength ? element.length : 0;\n                    if (currentLength + childBlockLength + length + paragraphStartLength >= offset) {\n                        completed.done = true;\n                        return { 'offset': offset - 1, 'currentLength': currentLength + childBlockLength, 'paragraph': block };\n                    }\n                }\n            }\n        }\n        if (currentLength + childBlockLength + length + paragraphStartLength + 1 == offset && this.documentEditor.selection.isEndOffset && !this.documentEditor.selection.isFootEndNoteParagraph(block)) {\n            completed.done = true;\n            return { 'offset': offset - 1, 'currentLength': currentLength + childBlockLength, 'paragraph': block };\n        }\n        else {\n            currentLength += (length + childBlockLength + paragraphStartLength);\n            return { 'offset': offset, 'currentLength': currentLength, 'paragraph': block };\n        }\n    };\n    CollaborativeEditingHandler.prototype.getRelativePositionFromAbsolutePosition = function (offset, isTableInserted, isRowInserted, isCellInserted) {\n        var documentEditor = this.documentEditor;\n        var block = this.documentEditor.documentHelper.pages[0].bodyWidgets[0].childWidgets[0];\n        var currentLength = 0;\n        var positionInfo = { done: false };\n        var blockObj = this.getBlockByIndex(block, offset, currentLength, positionInfo, isTableInserted, isRowInserted, isCellInserted);\n        if (positionInfo.done) {\n            var paraOffset = blockObj.offset - blockObj.currentLength;\n            if (paraOffset < 0) {\n                paraOffset = 0;\n            }\n            var paragraphInfo = {\n                paragraph: blockObj.paragraph,\n                offset: paraOffset,\n            };\n            if (isTableInserted || isRowInserted || isCellInserted) {\n                return blockObj;\n            }\n            else {\n                return documentEditor.selectionModule.getHierarchicalIndex(paragraphInfo.paragraph, paragraphInfo.offset.toString());\n            }\n        }\n        else if (blockObj.offset === blockObj.currentLength + 1 && this.documentEditor.selection.isEndOffset) {\n            var length_1 = this.documentEditor.selection.getParagraphLength(blockObj.paragraph);\n            currentLength = blockObj.currentLength - length_1;\n            return documentEditor.selection.getHierarchicalIndex(blockObj.paragraph, (blockObj.offset - currentLength).toString());\n        }\n        var blockObj1 = this.getBlockIndexFromHeaderFooter(blockObj.offset, blockObj.currentLength, positionInfo, isTableInserted, isRowInserted, isCellInserted);\n        if (positionInfo.done) {\n            var paraOffset = blockObj1.offset - blockObj1.currentLength;\n            if (paraOffset < 0) {\n                paraOffset = 0;\n            }\n            var paragraphInfo = {\n                paragraph: blockObj1.paragraph,\n                offset: paraOffset,\n            };\n            if (isTableInserted || isRowInserted || isCellInserted) {\n                return blockObj1;\n            }\n            else {\n                return documentEditor.selectionModule.getHierarchicalIndex(paragraphInfo.paragraph, paragraphInfo.offset.toString());\n            }\n        }\n        return '';\n    };\n    CollaborativeEditingHandler.prototype.getBlockIndexFromHeaderFooter = function (offset, currentLength, positionInfo, isTableInserted, isRowInserted, isCellInserted) {\n        //Iterate header/footer content;\n        var blockObj;\n        var headersFooters = this.documentEditor.documentHelper.headersFooters;\n        for (var _i = 0, headersFooters_1 = headersFooters; _i < headersFooters_1.length; _i++) {\n            var headerFooter = headersFooters_1[_i];\n            for (var i = 0; i < 6; i++) {\n                var currentHeaderFooter = headerFooter[i];\n                if (currentHeaderFooter) {\n                    blockObj = this.getBlockByIndex(currentHeaderFooter.childWidgets[0], offset, currentLength, positionInfo, isTableInserted, isRowInserted, isCellInserted);\n                    currentLength = blockObj.currentLength;\n                    offset = blockObj.offset;\n                    if (positionInfo.done) {\n                        return blockObj;\n                    }\n                }\n                else {\n                    if (currentLength + 1 >= offset) {\n                        positionInfo.done = true;\n                        return blockObj;\n                    }\n                    //Insert new header footer and paragraph to existing collection.\n                    currentLength++;\n                    blockObj.currentLength = currentLength;\n                }\n            }\n        }\n        return blockObj;\n    };\n    CollaborativeEditingHandler.prototype.getBlockByIndex = function (block, offset, currentLength, positionInfo, isTableInserted, isRowInserted, isCellInserted) {\n        var blockObj;\n        do {\n            blockObj = this.getBlockPosition(offset, currentLength, block, positionInfo, isTableInserted, isRowInserted, isCellInserted);\n            currentLength = blockObj.currentLength;\n            offset = blockObj.offset;\n            if (positionInfo.done) {\n                return blockObj;\n            }\n            block = block.getSplitWidgets().pop().nextRenderedWidget;\n        } while (block);\n        return blockObj;\n    };\n    CollaborativeEditingHandler.prototype.insertImage = function (imageData) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(imageData.metaString)) {\n            this.documentEditor.editorModule.insertImageInternal(imageData.imageString, true, _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.convertPointToPixel(imageData.width), _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.convertPointToPixel(imageData.height), imageData.alternativeText);\n        }\n        else {\n            this.documentEditor.editorModule.isImageInsert = true;\n            this.documentEditor.editorModule.insertImageInternal(imageData.metaString, true, _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.convertPointToPixel(imageData.width), _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.convertPointToPixel(imageData.height), imageData.alternativeText);\n        }\n    };\n    CollaborativeEditingHandler.prototype.buildTable = function (operations) {\n        var rows = 0;\n        var columns = 0;\n        for (var i = 0; i < operations.length; i++) {\n            if (operations[i].text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Row) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operations[i].markerData)) {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.documentEditor.editorModule.revisionData)) {\n                        this.documentEditor.editorModule.revisionData = [];\n                    }\n                    this.documentEditor.editorModule.revisionData.push(operations[i].markerData);\n                }\n                rows++;\n            }\n        }\n        for (var i = 0; i < operations.length; i++) {\n            if (operations[i].text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Cell) {\n                i += 2;\n                columns++;\n            }\n            if (operations[i].text !== _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Table && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operations[i + 1]) || operations[i + 1].text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Row)) {\n                break;\n            }\n        }\n        this.documentEditor.editorModule.insertTable(rows, columns);\n        this.documentEditor.editorModule.revisionData = undefined;\n    };\n    CollaborativeEditingHandler.prototype.buildRow = function (operations) {\n        var rowData;\n        var cellDatas = [];\n        var paragraphDatas = [];\n        var characterDatas = [];\n        var cellCount = 0;\n        var insertRow = 0;\n        var data = this.getRelativePositionFromAbsolutePosition(operations[0].offset, false, true, false);\n        var tableWidget = data.rowWidget.ownerTable.combineWidget(this.documentEditor.viewer);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operations[0].markerData)) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operations[0].format)) {\n                var row = data.rowWidget;\n                if (row.rowFormat.revisions.length > 0) {\n                    var revision = row.rowFormat.revisions[0];\n                    revision.accept();\n                    return;\n                }\n            }\n        }\n        for (var i = 0; i < operations.length; i++) {\n            var operation = operations[i];\n            if (operation.text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Cell) {\n                cellCount++;\n                cellDatas.push(JSON.parse(operation.format));\n                paragraphDatas.push(JSON.parse(operations[i + 1].format));\n                characterDatas.push(JSON.parse(operations[i + 2].format));\n                i += 2;\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operations[i + 1]) || operations[i + 1].text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Row) {\n                break;\n            }\n        }\n        for (var i = 0; i < operations.length; i++) {\n            if (operations[i].text === _index__WEBPACK_IMPORTED_MODULE_0__.CONTROL_CHARACTERS.Row) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operations[i].markerData)) {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.documentEditor.editorModule.revisionData)) {\n                        this.documentEditor.editorModule.revisionData = [];\n                    }\n                    this.documentEditor.editorModule.revisionData.push(operations[i].markerData);\n                }\n                insertRow++;\n                rowData = JSON.parse(operations[i].format);\n            }\n        }\n        this.documentEditor.editorModule.rowInsertionForCE(data.rowOrCellIndex, cellCount, insertRow, tableWidget, rowData, cellDatas, paragraphDatas, characterDatas);\n        cellDatas = [];\n        paragraphDatas = [];\n        characterDatas = [];\n        this.documentEditor.editorModule.revisionData = undefined;\n    };\n    CollaborativeEditingHandler.prototype.buildCell = function (operation, paraFormt, charFormat) {\n        var data = this.getRelativePositionFromAbsolutePosition(operation.offset, false, false, true);\n        if (operation.length > 0) {\n            this.rowWidget = data.cellWidget.ownerRow;\n            this.documentEditor.editorModule.cellInsertionForCE(data.rowOrCellIndex, this.rowWidget, JSON.parse(operation.format), JSON.parse(paraFormt), JSON.parse(charFormat));\n        }\n        else {\n            this.documentEditor.documentHelper.owner.parser.parseCellFormat(JSON.parse(operation.format), data.cellWidget.cellFormat, 0);\n        }\n    };\n    CollaborativeEditingHandler.prototype.buildDeleteCells = function (operation) {\n        var data = this.getRelativePositionFromAbsolutePosition(operation.offset, false, false, true);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data.cellWidget)) {\n            var firstPara = this.documentEditor.selectionModule.getFirstParagraph(data.cellWidget);\n            var lastPara = this.documentEditor.selectionModule.getLastParagraph(data.cellWidget);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(firstPara) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(lastPara)) {\n                this.documentEditor.selectionModule.start.setPosition(firstPara.firstChild, true);\n                this.documentEditor.selectionModule.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n            }\n            this.documentEditor.editorModule.checkAndRemoveComments();\n            this.table = data.cellWidget.ownerTable.combineWidget(this.documentEditor.viewer);\n            var paragraph = undefined;\n            if (data.cellWidget.nextWidget) {\n                var nextCell = data.cellWidget.nextWidget;\n                paragraph = this.documentEditor.selectionModule.getFirstParagraph(nextCell);\n            }\n            else if (data.cellWidget.previousWidget) {\n                var previousCell = data.cellWidget.previousWidget;\n                paragraph = this.documentEditor.selectionModule.getFirstParagraph(previousCell);\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(paragraph)) {\n                paragraph = this.documentEditor.editorModule.getParagraphForSelection(this.table);\n            }\n            operation.length += this.documentEditor.editorModule.onDeleteColumn(this.table, [data.cellWidget]);\n            this.table.updateRowIndex(0);\n            this.documentEditor.selectionModule.selectParagraphInternal(paragraph, true);\n        }\n    };\n    CollaborativeEditingHandler.prototype.transformSelectionOperation = function (operation, conflictingOperation) {\n        if (operation.action === 'Delete' && (conflictingOperation.action === 'Delete' || conflictingOperation.action == 'Format')) {\n            var previousStart = conflictingOperation.offset;\n            var conflictingSelection = conflictingOperation;\n            // Case 1: No overlap, no conflict\n            if ((operation.offset + operation.length) <= conflictingSelection.offset || operation.offset >= (conflictingSelection.offset + conflictingSelection.length)) {\n                return;\n            }\n            // Case 2: Local selection is completely within the conflicting selection\n            if (operation.offset >= conflictingSelection.offset && (operation.offset + operation.length) <= (conflictingSelection.offset + conflictingSelection.length)) {\n                conflictingOperation.offset = conflictingOperation.offset;\n                conflictingOperation.length -= operation.length;\n                if (conflictingOperation.length <= 0) {\n                    conflictingOperation.skipOperation = true;\n                }\n                return;\n            }\n            // Case 3: Local selection overlaps from the left side\n            if (operation.offset < conflictingSelection.offset && (operation.offset + operation.length) <= (conflictingSelection.offset + conflictingSelection.length)) {\n                conflictingOperation.offset = operation.offset + operation.length;\n                conflictingOperation.length -= conflictingOperation.offset - previousStart;\n                //return transformedOperation;\n                return;\n            }\n            // Case 4: Local selection overlaps from the right side\n            if (operation.offset >= conflictingSelection.offset && (operation.offset + operation.length) > (conflictingSelection.offset + conflictingSelection.length)) {\n                conflictingOperation.length -= (conflictingOperation.offset + conflictingOperation.length) - operation.offset;\n                return;\n            }\n            // Case 5: Local selection fully encompasses the conflicting selection\n            if (operation.offset < conflictingSelection.offset && (operation.offset + operation.length) > (conflictingSelection.offset + conflictingSelection.length)) {\n                conflictingSelection.offset = operation.offset;\n                conflictingSelection.length = 0;\n                conflictingOperation.skipOperation = true;\n                return;\n            }\n        }\n    };\n    CollaborativeEditingHandler.prototype.documentSettings = function (operation) {\n        this.documentEditor.skipSettingsOps = true;\n        switch (operation.text) {\n            case 'enableTrackChanges':\n                this.documentEditor.enableTrackChanges = operation.enableTrackChanges;\n                break;\n            case 'protection':\n                this.documentEditor.documentHelper.restrictEditingPane.showHideRestrictPane(this.documentEditor.documentHelper.restrictEditingPane.isShowRestrictPane);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operation.protectionData.saltValue)) {\n                    if (operation.protectionData.hashValue === '' && operation.protectionData.saltValue === '') {\n                        this.documentEditor.editorModule.protectDocument(operation.protectionData.protectionType);\n                    }\n                    else {\n                        this.documentEditor.editorModule.enforceProtectionAssign(operation.protectionData.saltValue, operation.protectionData.hashValue, operation.protectionData.protectionType);\n                    }\n                }\n                else {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(operation.protectionData.hashValue)) {\n                        this.documentEditor.editorModule.unProtectDocument();\n                    }\n                    else {\n                        this.documentEditor.editorModule.validateHashValue(operation.protectionData.hashValue);\n                    }\n                }\n                break;\n        }\n    };\n    CollaborativeEditingHandler.prototype.checkAndRetriveChangesFromServer = function () {\n        var _this = this;\n        if (!this.isSyncServerChanges) {\n            var action = {\n                version: this.version,\n                connectionId: this.connectionId,\n                roomName: this.roomName,\n            };\n            var httpRequest = new XMLHttpRequest();\n            httpRequest.open('Post', this.serviceUrl + 'GetActionsFromServer', true);\n            httpRequest.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');\n            this.setCustomAjaxHeaders(httpRequest);\n            httpRequest.onreadystatechange = function () {\n                if (httpRequest.readyState === 4) {\n                    if (httpRequest.status === 200 || httpRequest.status === 304) {\n                        _this.applyChangesFromServer(httpRequest.responseText);\n                    }\n                    else {\n                        var failedArgs = { status: (httpRequest.status).toString(), statusText: httpRequest.statusText, url: _this.serviceUrl + 'GetActionsFromServer' };\n                        _this.documentEditor.fireServiceFailure(failedArgs);\n                    }\n                }\n            };\n            httpRequest.send(JSON.stringify(action));\n            this.isSyncServerChanges = true;\n        }\n    };\n    CollaborativeEditingHandler.prototype.applyChangesFromServer = function (data) {\n        var dataObject = JSON.parse(data);\n        if (dataObject.length > 0) {\n            for (var i = 0; i < dataObject.length; i++) {\n                var data_5 = dataObject[i];\n                if (data_5.connectionId === this.connectionId) {\n                    this.acknowledgementReceived();\n                    this.logMessage(this.isSyncServerChanges ? 'SignalR Server sync' + data_5.version : 'SignalR Same user sync:' + data_5.version);\n                }\n                else {\n                    this.handleRemoteOperation(data_5);\n                    this.logMessage('Received: ' + JSON.stringify(JSON.stringify(data_5)));\n                }\n                this.updateVersion(data_5.version);\n                this.logMessage('Server sync ack:' + data_5.version);\n            }\n            this.updateVersion(dataObject[dataObject.length - 1].version);\n        }\n        this.isSyncServerChanges = false;\n        if (!this.isAcknowledgePending()) {\n            this.acknowledgementReceived();\n        }\n        this.sendLocalOperation();\n    };\n    CollaborativeEditingHandler.prototype.insertCharaterFormat = function (type, characterData) {\n        var format = new _index__WEBPACK_IMPORTED_MODULE_0__.WCharacterFormat(undefined);\n        var characterFormat = JSON.parse(characterData);\n        var keys = Object.keys(characterFormat);\n        this.documentEditor.documentHelper.owner.parser.parseCharacterFormat(0, characterFormat, format);\n        if (keys.length > 1) {\n            this.documentEditor.documentHelper.owner.fontDialogModule.onCharacterFormat(this.documentEditor.selectionModule, format);\n            this.documentEditor.editorModule.onApplyCharacterFormat('CharacterFormat', format);\n        }\n        else if (keys.length === 1) {\n            if (keys.indexOf('styleName') !== -1) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(characterFormat.styleName)) {\n                    this.documentEditor.editorModule.onApplyCharacterFormat('styleName', null, false, true);\n                }\n                else {\n                    this.documentEditor.editorModule.applyStyle(characterFormat.styleName);\n                }\n            }\n            else if (keys.indexOf('Uppercase') !== -1 || keys.indexOf('Lowercase') !== -1 || keys.indexOf('SentenceCase') !== -1 || keys.indexOf('ToggleCase') !== -1 || keys.indexOf('CapitalizeEachWord') !== -1) {\n                this.documentEditor.editorModule.changeCase(keys[0]);\n            }\n            else {\n                if (type === 'increment' || type === 'decrement') {\n                    this.documentEditor.editorModule.onApplyCharacterFormat(keys[0], type, true);\n                }\n                else {\n                    this.documentEditor.editorModule.onApplyCharacterFormat(keys[0], characterFormat[keys[0]]);\n                }\n            }\n        }\n        else {\n            this.documentEditor.editorModule.clearFormatting();\n        }\n    };\n    CollaborativeEditingHandler.prototype.insertParagraphFormat = function (operation, paragraphData) {\n        var format = new _index__WEBPACK_IMPORTED_MODULE_0__.WParagraphFormat(undefined);\n        var paragraphFormat = JSON.parse(paragraphData);\n        var update = false;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(paragraphFormat.isFirstParaForList)) {\n            delete paragraphFormat.isFirstParaForList;\n            update = true;\n        }\n        var keys = Object.keys(paragraphFormat);\n        this.documentEditor.documentHelper.owner.parser.parseParagraphFormat(0, paragraphFormat, format);\n        if (keys.length === 1) {\n            if (keys.indexOf('styleName') !== -1) {\n                this.documentEditor.editorModule.applyStyle(paragraphFormat.styleName);\n            }\n            else {\n                if (keys[0] === 'borders') {\n                    this.documentEditor.editorModule.onApplyParagraphFormat(keys[0], format.borders, false, false);\n                }\n                else if (keys[0] === 'listFormat') {\n                    this.updateList(operation, format);\n                    var list = this.documentEditor.documentHelper.getListById(paragraphFormat.listFormat.nsid, true);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(list)) {\n                        format.listFormat.listId = list.listId;\n                        format.listFormat.list = list;\n                    }\n                    this.documentEditor.editorModule.onApplyParagraphFormat('listFormat', format.listFormat, false, false);\n                }\n                else {\n                    this.documentEditor.editorModule.onApplyParagraphFormat(keys[0], paragraphFormat[keys[0]], update, false);\n                }\n            }\n        }\n        else {\n            this.documentEditor.documentHelper.owner.paragraphDialogModule.onParagraphFormat(format);\n        }\n    };\n    CollaborativeEditingHandler.prototype.insertTableFormat = function (type, tableData, offset) {\n        var format = new _index__WEBPACK_IMPORTED_MODULE_0__.WTableFormat(undefined);\n        var tableFormat = JSON.parse(tableData);\n        var keys = Object.keys(tableFormat);\n        this.documentEditor.documentHelper.owner.parser.parseTableFormat(tableFormat, format, 0);\n        var data = this.getRelativePositionFromAbsolutePosition(offset, true, false, false);\n        var sourceTable = data.tableWidget;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(type)) {\n            var typeValue = type === 'TableAutoFitToContents' ? 'FitToContents' : type === 'TableAutoFitToWindow' ? 'FitToWindow' : 'FixedColumnWidth';\n            this.documentEditor.editorModule.insertAutoFitTable(typeValue, sourceTable);\n            return;\n        }\n        if (keys.length === 1) {\n            this.documentEditor.editorModule.onApplyTableFormat(keys[0], tableFormat[keys[0]], sourceTable);\n        }\n        else {\n            if (keys.indexOf('borders') !== -1 || keys.indexOf('shading') !== -1) {\n                this.documentEditor.editorModule.isBordersAndShadingDialog = true;\n                this.documentEditor.editorModule.onTableFormat(format, true, sourceTable);\n                this.documentEditor.editorModule.isBordersAndShadingDialog = false;\n            }\n            else if (keys.indexOf('cellSpacing') !== -1 || keys.indexOf('leftMargin') !== -1 || keys.indexOf('topMargin') !== -1 || keys.indexOf('rightMargin') !== -1 || keys.indexOf('bottomMargin') !== -1) {\n                this.documentEditor.documentHelper.owner.tableOptionsDialogModule.applySubTableOptions(format, sourceTable);\n            }\n            else {\n                this.documentEditor.editorModule.onTableFormat(format, false, sourceTable);\n            }\n        }\n    };\n    CollaborativeEditingHandler.prototype.insertRowFormat = function (property, rowData) {\n        var format = new _index__WEBPACK_IMPORTED_MODULE_0__.WRowFormat(undefined);\n        var rowFormat = JSON.parse(rowData);\n        var keys = Object.keys(rowFormat);\n        this.documentEditor.documentHelper.owner.parser.parseRowFormat(rowFormat, format, 0);\n        if (keys.length === 1) {\n            this.documentEditor.editorModule.onApplyTableRowFormat(keys[0], rowFormat[keys[0]]);\n        }\n        else {\n            this.documentEditor.editorModule.onRowFormat(format);\n        }\n    };\n    CollaborativeEditingHandler.prototype.insertCellFormat = function (cellData) {\n        if (!this.documentEditor.selectionModule.start.paragraph.isInsideTable) {\n            return;\n        }\n        var format = new _index__WEBPACK_IMPORTED_MODULE_0__.WCellFormat(undefined);\n        var formatCell = JSON.parse(cellData);\n        var keys = Object.keys(formatCell);\n        this.documentEditor.documentHelper.owner.parser.parseCellFormat(formatCell, format, 0);\n        var cellFormat = this.documentEditor.selectionModule.start.paragraph.associatedCell.cellFormat;\n        if (keys.length === 1) {\n            if (keys[0] === 'shading') {\n                this.documentEditor.editorModule.applyCellPropertyValue(this.documentEditor.selectionModule, keys[0], format.shading, cellFormat);\n            }\n            else if (keys[0] === 'borders') {\n                this.documentEditor.editorModule.applyCellPropertyValue(this.documentEditor.selectionModule, keys[0], format.borders, cellFormat);\n            }\n            else {\n                this.documentEditor.editorModule.applyCellPropertyValue(this.documentEditor.selectionModule, keys[0], formatCell[keys[0]], cellFormat);\n            }\n            this.rowWidget = this.documentEditor.selectionModule.start.paragraph.associatedCell.ownerRow;\n        }\n        else {\n            if (keys.indexOf('preferredWidth') !== -1 || keys.indexOf('preferredWidthType') !== -1 || keys.indexOf('verticalAlignment') !== -1 || keys.indexOf('borders') !== -1 || keys.indexOf('shading') !== -1) {\n                if (keys.indexOf('borders') !== -1 || keys.indexOf('shading') !== -1) {\n                    this.documentEditor.editorModule.isBordersAndShadingDialog = true;\n                }\n                this.documentEditor.editorModule.applyCellPropertyValue(this.documentEditor.selectionModule, undefined, format, cellFormat);\n                this.rowWidget = this.documentEditor.selectionModule.start.paragraph.associatedCell.ownerRow;\n                this.documentEditor.editorModule.isBordersAndShadingDialog = false;\n            }\n            else {\n                this.documentEditor.documentHelper.owner.cellOptionsDialogModule.applySubCellOptions(format);\n            }\n        }\n    };\n    CollaborativeEditingHandler.prototype.insertSectionFormat = function (property, sectionData) {\n        var data = JSON.parse(sectionData);\n        var keys = Object.keys(data);\n        if (keys[0] === 'linkToPrevious') {\n            var headerFooterWidget = this.documentEditor.selectionModule.start.paragraph.bodyWidget;\n            var sectionIndex = headerFooterWidget.sectionIndex;\n            var headerFooterType = headerFooterWidget.headerFooterType;\n            this.documentEditor.editorModule.removeInlineHeaderFooterWidget(sectionIndex, headerFooterType, property, data['linkToPrevious']);\n        }\n        else if (keys.length > 1) {\n            var sectionFormat = new _index__WEBPACK_IMPORTED_MODULE_0__.WSectionFormat();\n            this.documentEditor.documentHelper.owner.parser.parseSectionFormat(0, data, sectionFormat);\n            this.documentEditor.editorModule.onApplySectionFormat(undefined, sectionFormat);\n        }\n        else {\n            this.documentEditor.editorModule.onApplySectionFormat(Object.keys(data)[0], data[Object.keys(data)[0]]);\n        }\n    };\n    CollaborativeEditingHandler.prototype.logMessage = function (event) {\n        if (this.logEventEnabled) {\n            this.message += event + ' ' + '\\n';\n        }\n    };\n    CollaborativeEditingHandler.prototype.setCustomAjaxHeaders = function (xmlHttpRequest) {\n        for (var i = 0; i < this.documentEditor.headers.length; i++) {\n            var header = this.documentEditor.headers[i];\n            for (var _i = 0, _a = Object.keys(header); _i < _a.length; _i++) {\n                var key = _a[_i];\n                xmlHttpRequest.setRequestHeader(key, header[key]);\n            }\n        }\n    };\n    /**\n     * Destory collaborative editing module.\n     * @private\n     */\n    CollaborativeEditingHandler.prototype.destroy = function () {\n        this.version = undefined;\n        this.documentEditor = undefined;\n        this.roomName = undefined;\n        this.userMap = undefined;\n        this.connectionId = undefined;\n        this.acknowledgmentPending = undefined;\n        this.pendingOps = undefined;\n        this.serviceUrl = undefined;\n        this.isSyncServerChanges = undefined;\n        this.message = undefined;\n        this.rowWidget = undefined;\n    };\n    return CollaborativeEditingHandler;\n}());\n\n/**\n * @private\n */\nvar CaretInfo = /** @class */ (function () {\n    function CaretInfo(color, caret, offset, userName) {\n        this.color = color;\n        this.caret = caret;\n        this.offset = offset;\n        this.userName = userName;\n        this.initializeElement();\n    }\n    /**\n     * @private\n     */\n    CaretInfo.prototype.initializeElement = function () {\n        this.hoverDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'e-de-user-info e-de-user-name-collapse', styles: 'z-index: 1; visibility: hidden;left:-4px;position:absolute;width:20px;height:20px;pointer-events:all;' });\n        this.userViewContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div');\n        this.spanViewContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { styles: 'background-color:' + this.color + ';left: 0px; top: 15px; visibility: visible;' });\n        this.spanView = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', { styles: 'background-color:' + this.color + '; left: 0px;top:-4px;pointer:default' });\n        this.spanViewContainer.appendChild(this.spanView);\n        this.userViewContainer.appendChild(this.spanViewContainer);\n        this.hoverDiv.appendChild(this.userViewContainer);\n        this.caret.appendChild(this.hoverDiv);\n        this.hoverDiv.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        this.hoverDiv.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    };\n    CaretInfo.prototype.onMouseEnter = function () {\n        this.hoverDiv.classList.remove('e-de-user-name-collapse');\n        this.hoverDiv.classList.add('e-de-user-name-expended');\n        this.spanView.innerText = this.userName;\n    };\n    CaretInfo.prototype.onMouseLeave = function () {\n        this.hoverDiv.classList.add('e-de-user-name-collapse');\n        this.hoverDiv.classList.remove('e-de-user-name-expended');\n        this.spanView.innerText = '';\n    };\n    return CaretInfo;\n}());\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/collaboration/collaboration.js?");

/***/ })

}]);