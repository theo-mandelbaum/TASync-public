"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-calendars_src_datetimepicker_datetimepicker_js-ec91f382"],{

/***/ "./node_modules/@syncfusion/ej2-calendars/src/datetimepicker/datetimepicker.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-calendars/src/datetimepicker/datetimepicker.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DateTimePicker: () => (/* binding */ DateTimePicker)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\");\n/* harmony import */ var _datepicker_datepicker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../datepicker/datepicker */ \"./node_modules/@syncfusion/ej2-calendars/src/datepicker/datepicker.js\");\n/* harmony import */ var _timepicker_timepicker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../timepicker/timepicker */ \"./node_modules/@syncfusion/ej2-calendars/src/timepicker/timepicker.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n///<reference path='../datepicker/datepicker-model.d.ts'/>\n\n\n\n\n\n\n\n\n\n//class constant defination\nvar DATEWRAPPER = 'e-date-wrapper';\nvar DATEPICKERROOT = 'e-datepicker';\nvar DATETIMEWRAPPER = 'e-datetime-wrapper';\nvar DAY = new Date().getDate();\nvar MONTH = new Date().getMonth();\nvar YEAR = new Date().getFullYear();\nvar HOUR = new Date().getHours();\nvar MINUTE = new Date().getMinutes();\nvar SECOND = new Date().getSeconds();\nvar MILLISECOND = new Date().getMilliseconds();\nvar ROOT = 'e-datetimepicker';\nvar DATETIMEPOPUPWRAPPER = 'e-datetimepopup-wrapper';\nvar INPUTWRAPPER = 'e-input-group-icon';\nvar POPUP = 'e-popup';\nvar TIMEICON = 'e-time-icon';\nvar INPUTFOCUS = 'e-input-focus';\nvar POPUPDIMENSION = '250px';\nvar ICONANIMATION = 'e-icon-anim';\nvar DISABLED = 'e-disabled';\nvar ERROR = 'e-error';\nvar CONTENT = 'e-content';\nvar NAVIGATION = 'e-navigation';\nvar ACTIVE = 'e-active';\nvar HOVER = 'e-hover';\nvar ICONS = 'e-icons';\nvar HALFPOSITION = 2;\nvar LISTCLASS = 'e-list-item';\nvar ANIMATIONDURATION = 100;\nvar OVERFLOW = 'e-time-overflow';\n/**\n * Represents the DateTimePicker component that allows user to select\n * or enter a date time value.\n * ```html\n * <input id=\"dateTimePicker\"/>\n * ```\n * ```typescript\n * <script>\n *   let dateTimePickerObject:DateTimePicker = new DateTimePicker({ value: new Date() });\n *   dateTimePickerObject.appendTo(\"#dateTimePicker\");\n * </script>\n * ```\n */\nvar DateTimePicker = /** @class */ (function (_super) {\n    __extends(DateTimePicker, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {DateTimePickerModel} options - Specifies the DateTimePicker model.\n     * @param {string | HTMLInputElement} element - Specifies the element to render as component.\n     * @private\n     */\n    function DateTimePicker(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.valueWithMinutes = null;\n        _this.scrollInvoked = false;\n        _this.moduleName = _this.getModuleName();\n        _this.formatRegex = /dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yyy|yy|y|'[^']*'|'[^']*'/g;\n        _this.dateFormatString = '';\n        _this.dateTimeOptions = options;\n        return _this;\n    }\n    DateTimePicker.prototype.focusHandler = function () {\n        if (!this.enabled) {\n            return;\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputWrapper.container], INPUTFOCUS);\n    };\n    /**\n     * Sets the focus to widget for interaction.\n     *\n     * @returns {void}\n     */\n    DateTimePicker.prototype.focusIn = function () {\n        _super.prototype.focusIn.call(this);\n    };\n    /**\n     * Remove the focus from widget, if the widget is in focus state.\n     *\n     * @returns {void}\n     */\n    DateTimePicker.prototype.focusOut = function () {\n        if (document.activeElement === this.inputElement) {\n            this.inputElement.blur();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.inputWrapper.container], [INPUTFOCUS]);\n        }\n    };\n    DateTimePicker.prototype.blurHandler = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        // IE popup closing issue when click over the scrollbar\n        if (this.isTimePopupOpen() && this.isPreventBlur) {\n            this.inputElement.focus();\n            return;\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.inputWrapper.container], INPUTFOCUS);\n        var blurArguments = {\n            model: this\n        };\n        if (this.isTimePopupOpen()) {\n            this.hide(e);\n        }\n        this.trigger('blur', blurArguments);\n    };\n    /**\n     * To destroy the widget.\n     *\n     * @returns {void}\n     */\n    DateTimePicker.prototype.destroy = function () {\n        if (this.showClearButton) {\n            this.clearButton = document.getElementsByClassName('e-clear-icon')[0];\n        }\n        if (this.popupObject && this.popupObject.element.classList.contains(POPUP)) {\n            this.popupObject.destroy();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.dateTimeWrapper);\n            this.dateTimeWrapper = undefined;\n            this.liCollections = this.timeCollections = [];\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.rippleFn)) {\n                this.rippleFn();\n            }\n        }\n        var ariaAttribute = {\n            'aria-live': 'assertive', 'aria-atomic': 'true', 'aria-invalid': 'false',\n            'autocorrect': 'off', 'autocapitalize': 'off', 'spellcheck': 'false',\n            'aria-expanded': 'false', 'role': 'combobox', 'autocomplete': 'off'\n        };\n        if (this.inputElement) {\n            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.removeAttributes(ariaAttribute, this.inputElement);\n        }\n        if (this.isCalendar()) {\n            if (this.popupWrapper) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.popupWrapper);\n            }\n            this.popupObject = this.popupWrapper = null;\n            this.keyboardHandler.destroy();\n        }\n        this.unBindInputEvents();\n        this.liCollections = null;\n        this.rippleFn = null;\n        this.selectedElement = null;\n        this.listTag = null;\n        this.timeIcon = null;\n        this.popupObject = null;\n        this.preventArgs = null;\n        this.keyboardModule = null;\n        _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.destroy({\n            element: this.inputElement,\n            floatLabelType: this.floatLabelType,\n            properties: this.properties\n        }, this.clearButton);\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To Initialize the control rendering.\n     *\n     * @returns {void}\n     * @private\n     */\n    DateTimePicker.prototype.render = function () {\n        this.timekeyConfigure = {\n            enter: 'enter',\n            escape: 'escape',\n            end: 'end',\n            tab: 'tab',\n            home: 'home',\n            down: 'downarrow',\n            up: 'uparrow',\n            left: 'leftarrow',\n            right: 'rightarrow',\n            open: 'alt+downarrow',\n            close: 'alt+uparrow'\n        };\n        this.valueWithMinutes = null;\n        this.previousDateTime = null;\n        this.isPreventBlur = false;\n        this.cloneElement = this.element.cloneNode(true);\n        this.dateTimeFormat = this.cldrDateTimeFormat();\n        this.initValue = this.value;\n        if (typeof (this.min) === 'string') {\n            this.min = this.checkDateValue(new Date(this.min));\n        }\n        if (typeof (this.max) === 'string') {\n            this.max = this.checkDateValue(new Date(this.max));\n        }\n        if (typeof (this.minTime) === 'string') {\n            this.minTime = this.checkDateValue(new Date(this.minTime));\n        }\n        if (typeof (this.maxTime) === 'string') {\n            this.maxTime = this.checkDateValue(new Date(this.maxTime));\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.element, 'fieldset')) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.element, 'fieldset').disabled) {\n            this.enabled = false;\n        }\n        _super.prototype.updateHtmlAttributeToElement.call(this);\n        this.checkAttributes(false);\n        var localeText = { placeholder: this.placeholder };\n        this.l10n = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('datetimepicker', localeText, this.locale);\n        this.setProperties({ placeholder: this.placeholder || this.l10n.getConstant('placeholder') }, true);\n        _super.prototype.render.call(this);\n        this.createInputElement();\n        _super.prototype.updateHtmlAttributeToWrapper.call(this);\n        this.bindInputEvents();\n        if (this.enableMask) {\n            this.notify('createMask', {\n                module: 'MaskedDateTime'\n            });\n        }\n        this.setValue(true);\n        if (this.enableMask && !this.value && this.maskedDateValue && (this.floatLabelType === 'Always' || !this.floatLabelType || !this.placeholder)) {\n            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setValue(this.maskedDateValue, this.inputElement, this.floatLabelType, this.showClearButton);\n        }\n        this.setProperties({ scrollTo: this.checkDateValue(new Date(this.checkValue(this.scrollTo))) }, true);\n        this.previousDateTime = this.value && new Date(+this.value);\n        if (this.element.tagName === 'EJS-DATETIMEPICKER') {\n            this.tabIndex = this.element.hasAttribute('tabindex') ? this.element.getAttribute('tabindex') : '0';\n            this.element.removeAttribute('tabindex');\n            if (!this.enabled) {\n                this.inputElement.tabIndex = -1;\n            }\n        }\n        if (this.floatLabelType !== 'Never') {\n            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.calculateWidth(this.inputElement, this.inputWrapper.container);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper.buttons[0]) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper.container.getElementsByClassName('e-float-text-overflow')[0]) && this.floatLabelType !== 'Never') {\n            this.inputWrapper.container.getElementsByClassName('e-float-text-overflow')[0].classList.add('e-date-time-icon');\n        }\n        this.renderComplete();\n    };\n    DateTimePicker.prototype.setValue = function (isDynamic) {\n        if (isDynamic === void 0) { isDynamic = false; }\n        this.initValue = this.validateMinMaxRange(this.value);\n        if (!this.strictMode && this.isDateObject(this.initValue)) {\n            var value = this.validateMinMaxRange(this.initValue);\n            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setValue(this.getFormattedValue(value), this.inputElement, this.floatLabelType, this.showClearButton);\n            this.setProperties({ value: value }, true);\n        }\n        else {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value)) {\n                this.initValue = null;\n                this.setProperties({ value: null }, true);\n            }\n        }\n        this.valueWithMinutes = this.value;\n        _super.prototype.updateInput.call(this, isDynamic);\n    };\n    DateTimePicker.prototype.validateMinMaxRange = function (value) {\n        var result = value;\n        if (this.isDateObject(value)) {\n            result = this.validateValue(value);\n        }\n        else {\n            if (+this.min > +this.max) {\n                this.disablePopupButton(true);\n            }\n        }\n        this.checkValidState(result);\n        return result;\n    };\n    DateTimePicker.prototype.checkValidState = function (value) {\n        this.isValidState = true;\n        if (!this.strictMode) {\n            if ((+(value) > +(this.max)) || (+(value) < +(this.min)) || !this.isValidTime(value)) {\n                this.isValidState = false;\n            }\n        }\n        this.checkErrorState();\n    };\n    DateTimePicker.prototype.checkErrorState = function () {\n        if (this.isValidState) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.inputWrapper.container], ERROR);\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputWrapper.container], ERROR);\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.inputElement, { 'aria-invalid': this.isValidState ? 'false' : 'true' });\n    };\n    DateTimePicker.prototype.isValidTime = function (value) {\n        if (value != null && (this.minTime || this.maxTime)) {\n            var minTimeValue = void 0;\n            var maxTimeValue = void 0;\n            var maxValue = void 0;\n            var minValue = void 0;\n            var valueTime = value.getHours() * 3600000 + value.getMinutes() * 60000 +\n                value.getSeconds() * 1000 + value.getMilliseconds();\n            if (this.minTime) {\n                minTimeValue = this.minTime.getHours() * 3600000 + this.minTime.getMinutes() * 60000 +\n                    this.minTime.getSeconds() * 1000 + this.minTime.getMilliseconds();\n            }\n            if (this.maxTime) {\n                maxTimeValue = this.maxTime.getHours() * 3600000 + this.maxTime.getMinutes() * 60000 +\n                    this.maxTime.getSeconds() * 1000 + this.maxTime.getMilliseconds();\n            }\n            if (this.min && (+value.getDate() === +this.min.getDate() && +value.getMonth() === +this.min.getMonth() &&\n                +value.getFullYear() === +this.min.getFullYear())) {\n                minValue = this.min.getHours() * 3600000 + this.min.getMinutes() * 60000 +\n                    this.min.getSeconds() * 1000 + this.min.getMilliseconds();\n                minTimeValue = minTimeValue < minValue ? minValue : minTimeValue;\n            }\n            if (this.max && (+value.getDate() === +this.max.getDate() && +value.getMonth() === +this.max.getMonth() &&\n                +this.max.getFullYear() === +this.max.getFullYear())) {\n                maxValue = this.max.getHours() * 3600000 + this.max.getMinutes() * 60000 +\n                    this.max.getSeconds() * 1000 + this.max.getMilliseconds();\n                maxTimeValue = maxTimeValue > maxValue ? maxValue : maxTimeValue;\n            }\n            if (this.strictMode) {\n                var newValue = void 0;\n                if (minTimeValue && valueTime < minTimeValue) {\n                    newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), this.minTime.getHours(), this.minTime.getMinutes(), this.minTime.getSeconds(), this.minTime.getMilliseconds());\n                    this.setProperties({ value: newValue }, true);\n                    this.changedArgs = { value: this.value };\n                }\n                else if (maxTimeValue && valueTime > maxTimeValue) {\n                    newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), this.maxTime.getHours(), this.maxTime.getMinutes(), this.maxTime.getSeconds(), this.maxTime.getMilliseconds());\n                    this.setProperties({ value: newValue }, true);\n                    this.changedArgs = { value: this.value };\n                }\n                return true;\n            }\n            else {\n                return !((minTimeValue && valueTime < minTimeValue) || (maxTimeValue && valueTime > maxTimeValue));\n            }\n        }\n        return true;\n    };\n    DateTimePicker.prototype.validateValue = function (value) {\n        var dateVal = value;\n        if (this.strictMode) {\n            if (+this.min > +this.max) {\n                this.disablePopupButton(true);\n                dateVal = this.max;\n            }\n            else if (+value < +this.min) {\n                dateVal = this.min;\n            }\n            else if (+value > +this.max) {\n                dateVal = this.max;\n            }\n        }\n        else {\n            if (+this.min > +this.max) {\n                this.disablePopupButton(true);\n                dateVal = value;\n            }\n        }\n        return dateVal;\n    };\n    DateTimePicker.prototype.disablePopupButton = function (isDisable) {\n        if (isDisable) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputWrapper.buttons[0], this.timeIcon], DISABLED);\n            this.hide();\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.inputWrapper.buttons[0], this.timeIcon], DISABLED);\n        }\n    };\n    DateTimePicker.prototype.getFormattedValue = function (value) {\n        var dateOptions;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value)) {\n            if (this.calendarMode === 'Gregorian') {\n                dateOptions = { format: this.cldrDateTimeFormat(), type: 'dateTime', skeleton: 'yMd' };\n            }\n            else {\n                dateOptions = { format: this.cldrDateTimeFormat(), type: 'dateTime', skeleton: 'yMd', calendar: 'islamic' };\n            }\n            return this.globalize.formatDate(value, dateOptions);\n        }\n        else {\n            return null;\n        }\n    };\n    DateTimePicker.prototype.isDateObject = function (value) {\n        return (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value) && !isNaN(+value)) ? true : false;\n    };\n    DateTimePicker.prototype.createInputElement = function () {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.inputElement], DATEPICKERROOT);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.inputWrapper.container], DATEWRAPPER);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputWrapper.container], DATETIMEWRAPPER);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputElement], ROOT);\n        this.renderTimeIcon();\n    };\n    DateTimePicker.prototype.renderTimeIcon = function () {\n        this.timeIcon = _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.appendSpan(INPUTWRAPPER + ' ' + TIMEICON + ' ' + ICONS, this.inputWrapper.container);\n    };\n    DateTimePicker.prototype.bindInputEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.timeIcon, 'mousedown', this.timeHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.inputWrapper.buttons[0], 'mousedown', this.dateHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.inputElement, 'blur', this.blurHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.inputElement, 'focus', this.focusHandler, this);\n        this.defaultKeyConfigs = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(this.defaultKeyConfigs, this.keyConfigs);\n        this.keyboardHandler = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.KeyboardEvents(this.inputElement, {\n            eventName: 'keydown',\n            keyAction: this.inputKeyAction.bind(this),\n            keyConfigs: this.defaultKeyConfigs\n        });\n    };\n    DateTimePicker.prototype.unBindInputEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.timeIcon, 'mousedown touchstart', this.timeHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.inputWrapper.buttons[0], 'mousedown touchstart', this.dateHandler);\n        if (this.inputElement) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.inputElement, 'blur', this.blurHandler);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.inputElement, 'focus', this.focusHandler);\n        }\n        if (this.keyboardHandler) {\n            this.keyboardHandler.destroy();\n        }\n    };\n    DateTimePicker.prototype.cldrTimeFormat = function () {\n        var cldrTime;\n        if (this.isNullOrEmpty(this.timeFormat)) {\n            if (this.locale === 'en' || this.locale === 'en-US') {\n                cldrTime = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('timeFormats.short', (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getDefaultDateObject)()));\n            }\n            else {\n                cldrTime = (this.getCultureTimeObject(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.cldrData, '' + this.locale));\n            }\n        }\n        else {\n            cldrTime = this.timeFormat;\n        }\n        return cldrTime;\n    };\n    DateTimePicker.prototype.cldrDateTimeFormat = function () {\n        var cldrTime;\n        var culture = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization(this.locale);\n        var dateFormat = culture.getDatePattern({ skeleton: 'yMd' });\n        if (this.isNullOrEmpty(this.formatString)) {\n            cldrTime = dateFormat + ' ' + this.getCldrFormat('time');\n        }\n        else {\n            cldrTime = this.formatString;\n        }\n        return cldrTime;\n    };\n    DateTimePicker.prototype.getCldrFormat = function (type) {\n        var cldrDateTime;\n        if (this.locale === 'en' || this.locale === 'en-US') {\n            cldrDateTime = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('timeFormats.short', (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getDefaultDateObject)()));\n        }\n        else {\n            cldrDateTime = (this.getCultureTimeObject(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.cldrData, '' + this.locale));\n        }\n        return cldrDateTime;\n    };\n    DateTimePicker.prototype.isNullOrEmpty = function (value) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value) || (typeof value === 'string' && value.trim() === '')) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    DateTimePicker.prototype.getCultureTimeObject = function (ld, c) {\n        if (this.calendarMode === 'Gregorian') {\n            return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('main.' + '' + this.locale + '.dates.calendars.gregorian.timeFormats.short', ld);\n        }\n        else {\n            return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('main.' + '' + this.locale + '.dates.calendars.islamic.timeFormats.short', ld);\n        }\n    };\n    DateTimePicker.prototype.timeHandler = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        this.isIconClicked = true;\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.inputElement.setAttribute('readonly', '');\n        }\n        if (e.currentTarget === this.timeIcon) {\n            e.preventDefault();\n        }\n        if (this.enabled && !this.readonly) {\n            if (this.isDatePopupOpen()) {\n                _super.prototype.hide.call(this, e);\n            }\n            if (this.isTimePopupOpen()) {\n                this.closePopup(e);\n            }\n            else {\n                this.inputElement.focus();\n                this.popupCreation('time', e);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputWrapper.container], [INPUTFOCUS]);\n            }\n        }\n        this.isIconClicked = false;\n    };\n    DateTimePicker.prototype.dateHandler = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        if (e.currentTarget === this.inputWrapper.buttons[0]) {\n            e.preventDefault();\n        }\n        if (this.enabled && !this.readonly) {\n            if (this.isTimePopupOpen()) {\n                this.closePopup(e);\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.popupWrapper)) {\n                this.popupCreation('date', e);\n            }\n        }\n    };\n    DateTimePicker.prototype.show = function (type, e) {\n        if ((this.enabled && this.readonly) || !this.enabled) {\n            return;\n        }\n        else {\n            if (type === 'time' && !this.dateTimeWrapper) {\n                if (this.isDatePopupOpen()) {\n                    this.hide(e);\n                }\n                this.popupCreation('time', e);\n            }\n            else if (!this.popupObj) {\n                if (this.isTimePopupOpen()) {\n                    this.hide(e);\n                }\n                _super.prototype.show.call(this);\n                this.popupCreation('date', e);\n            }\n        }\n    };\n    DateTimePicker.prototype.toggle = function (e) {\n        if (this.isDatePopupOpen()) {\n            _super.prototype.hide.call(this, e);\n            this.show('time', null);\n        }\n        else if (this.isTimePopupOpen()) {\n            this.hide(e);\n            _super.prototype.show.call(this, null, e);\n            this.popupCreation('date', null);\n        }\n        else {\n            this.show(null, e);\n        }\n    };\n    DateTimePicker.prototype.listCreation = function () {\n        var dateObject;\n        if (this.calendarMode === 'Gregorian') {\n            this.cldrDateTimeFormat().replace(this.formatRegex, this.TimePopupFormat());\n            if (this.dateFormatString === '') {\n                this.dateFormatString = this.cldrDateTimeFormat();\n            }\n            dateObject = this.globalize.parseDate(this.getAmPmValue(this.inputElement.value), {\n                format: this.dateFormatString, type: 'datetime'\n            });\n        }\n        else {\n            dateObject = this.globalize.parseDate(this.getAmPmValue(this.inputElement.value), {\n                format: this.cldrDateTimeFormat(), type: 'datetime', calendar: 'islamic'\n            });\n        }\n        var value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) ? this.inputElement.value !== '' ?\n            dateObject : new Date() : this.value;\n        this.valueWithMinutes = value;\n        this.listWrapper = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: CONTENT, attrs: { 'tabindex': '0' } });\n        var min = this.startTime(value);\n        var max = this.endTime(value);\n        var listDetails = _timepicker_timepicker__WEBPACK_IMPORTED_MODULE_4__.TimePickerBase.createListItems(this.createElement, min, max, this.globalize, this.cldrTimeFormat(), this.step);\n        this.timeCollections = listDetails.collection;\n        this.listTag = listDetails.list;\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.listTag, { 'role': 'listbox', 'aria-hidden': 'false', 'id': this.element.id + '_options' });\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)([listDetails.list], this.listWrapper);\n        this.wireTimeListEvents();\n        var rippleModel = { duration: 300, selector: '.' + LISTCLASS };\n        this.rippleFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.rippleEffect)(this.listWrapper, rippleModel);\n        this.liCollections = this.listWrapper.querySelectorAll('.' + LISTCLASS);\n    };\n    DateTimePicker.prototype.popupCreation = function (type, e) {\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.element.setAttribute('readonly', 'readonly');\n        }\n        if (type === 'date') {\n            if (!this.readonly && this.popupWrapper) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.popupWrapper], DATETIMEPOPUPWRAPPER);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.popupWrapper, { 'id': this.element.id + '_options' });\n            }\n        }\n        else {\n            if (!this.readonly) {\n                var dateTimeWrapperElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                    className: ROOT + ' ' + POPUP,\n                    attrs: { 'id': this.element.id + '_timepopup' }\n                });\n                dateTimeWrapperElement.style.cssText = 'visibility: hidden; display: block;';\n                this.dateTimeWrapper = dateTimeWrapperElement;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.cssClass)) {\n                    this.dateTimeWrapper.className += ' ' + this.cssClass;\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.step) && this.step > 0) {\n                    this.listCreation();\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)([this.listWrapper], this.dateTimeWrapper);\n                }\n                document.body.appendChild(this.dateTimeWrapper);\n                this.addTimeSelection();\n                this.renderPopup();\n                this.setTimeScrollPosition();\n                this.openPopup(e);\n                if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !this.fullScreenMode)) {\n                    this.popupObject.refreshPosition(this.inputElement);\n                }\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    this.modelWrapper.style.zIndex = (this.popupObject.zIndex - 1).toString();\n                    if (this.fullScreenMode) {\n                        this.dateTimeWrapper.style.left = '0px';\n                    }\n                }\n            }\n        }\n    };\n    DateTimePicker.prototype.openPopup = function (e) {\n        var _this = this;\n        this.preventArgs = {\n            cancel: false,\n            popup: this.popupObject,\n            event: e || null\n        };\n        var eventArgs = this.preventArgs;\n        this.trigger('open', eventArgs, function (eventArgs) {\n            _this.preventArgs = eventArgs;\n            if (!_this.preventArgs.cancel && !_this.readonly) {\n                var openAnimation = {\n                    name: 'FadeIn',\n                    duration: ANIMATIONDURATION\n                };\n                if (_this.zIndex === 1000) {\n                    _this.popupObject.show(new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation(openAnimation), _this.element);\n                }\n                else {\n                    _this.popupObject.show(new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation(openAnimation), null);\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([_this.inputWrapper.container], [ICONANIMATION]);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(_this.inputElement, { 'aria-expanded': 'true' });\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(_this.inputElement, { 'aria-owns': _this.inputElement.id + '_options' });\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(_this.inputElement, { 'aria-controls': _this.inputElement.id });\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'mousedown touchstart', _this.documentClickHandler, _this);\n            }\n        });\n    };\n    DateTimePicker.prototype.documentClickHandler = function (event) {\n        var target = event.target;\n        if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.popupObject) && (this.inputWrapper.container.contains(target) && event.type !== 'mousedown' ||\n            (this.popupObject.element && this.popupObject.element.contains(target)))) && event.type !== 'touchstart') {\n            event.preventDefault();\n        }\n        if (!((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '[id=\"' + (this.popupObject && this.popupObject.element.id + '\"]'))) && target !== this.inputElement\n            && target !== this.timeIcon && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper) && target !== this.inputWrapper.container && !target.classList.contains('e-dlg-overlay')) {\n            if (this.isTimePopupOpen()) {\n                this.hide(event);\n                this.focusOut();\n            }\n        }\n        else if (target !== this.inputElement) {\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                this.isPreventBlur = ((document.activeElement === this.inputElement) && (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isIE || _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'edge')\n                    && target === this.popupObject.element);\n            }\n        }\n    };\n    DateTimePicker.prototype.isTimePopupOpen = function () {\n        return (this.dateTimeWrapper && this.dateTimeWrapper.classList.contains('' + ROOT)) ? true : false;\n    };\n    DateTimePicker.prototype.isDatePopupOpen = function () {\n        return (this.popupWrapper && this.popupWrapper.classList.contains('' + DATETIMEPOPUPWRAPPER)) ? true : false;\n    };\n    DateTimePicker.prototype.renderPopup = function () {\n        var _this = this;\n        this.containerStyle = this.inputWrapper.container.getBoundingClientRect();\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.timeModal = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n            this.timeModal.className = '' + ROOT + ' e-time-modal';\n            document.body.className += ' ' + OVERFLOW;\n            this.timeModal.style.display = 'block';\n            document.body.appendChild(this.timeModal);\n        }\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.modelWrapper = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-datetime-mob-popup-wrap' });\n            this.modelWrapper.appendChild(this.dateTimeWrapper);\n            var dlgOverlay = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-dlg-overlay' });\n            dlgOverlay.style.zIndex = (this.zIndex - 1).toString();\n            this.modelWrapper.appendChild(dlgOverlay);\n            document.body.appendChild(this.modelWrapper);\n        }\n        var offset = 4;\n        this.popupObject = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__.Popup(this.dateTimeWrapper, {\n            width: this.setPopupWidth(),\n            zIndex: this.zIndex,\n            targetType: 'container',\n            collision: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? { X: 'fit', Y: 'fit' } : { X: 'flip', Y: 'flip' },\n            relateTo: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? document.body : this.inputWrapper.container,\n            position: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? { X: 'center', Y: 'center' } : { X: 'left', Y: 'bottom' },\n            enableRtl: this.enableRtl,\n            offsetY: offset,\n            open: function () {\n                _this.dateTimeWrapper.style.visibility = 'visible';\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([_this.timeIcon], ACTIVE);\n                if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    _this.timekeyConfigure = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(_this.timekeyConfigure, _this.keyConfigs);\n                    _this.inputEvent = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.KeyboardEvents(_this.inputWrapper.container, {\n                        keyAction: _this.timeKeyActionHandle.bind(_this),\n                        keyConfigs: _this.timekeyConfigure,\n                        eventName: 'keydown'\n                    });\n                }\n            }, close: function () {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([_this.timeIcon], ACTIVE);\n                _this.unWireTimeListEvents();\n                _this.inputElement.removeAttribute('aria-activedescendant');\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(_this.popupObject.element);\n                _this.popupObject.destroy();\n                _this.dateTimeWrapper.innerHTML = '';\n                if (_this.modelWrapper) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(_this.modelWrapper);\n                }\n                _this.listWrapper = _this.dateTimeWrapper = undefined;\n                if (_this.inputEvent) {\n                    _this.inputEvent.destroy();\n                }\n            }, targetExitViewport: function () {\n                if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    _this.hide();\n                }\n            }\n        });\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.fullScreenMode) {\n            this.popupObject.element.style.maxHeight = '100%';\n            this.popupObject.element.style.width = '100%';\n        }\n        else {\n            this.popupObject.element.style.maxHeight = POPUPDIMENSION;\n        }\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.fullScreenMode) {\n            var modelHeader = this.createElement('div', { className: 'e-model-header' });\n            var modelTitleSpan = this.createElement('span', { className: 'e-model-title' });\n            modelTitleSpan.textContent = 'Select time';\n            var modelCloseIcon = this.createElement('span', { className: 'e-popup-close' });\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(modelCloseIcon, 'mousedown touchstart', this.dateTimeCloseHandler, this);\n            modelHeader.appendChild(modelCloseIcon);\n            modelHeader.appendChild(modelTitleSpan);\n            this.dateTimeWrapper.insertBefore(modelHeader, this.dateTimeWrapper.firstElementChild);\n        }\n    };\n    DateTimePicker.prototype.dateTimeCloseHandler = function (e) {\n        this.hide();\n    };\n    DateTimePicker.prototype.setDimension = function (width) {\n        if (typeof width === 'number') {\n            width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(width);\n        }\n        else if (typeof width === 'string') {\n            // eslint-disable-next-line no-self-assign\n            width = width;\n        }\n        else {\n            width = '100%';\n        }\n        return width;\n    };\n    DateTimePicker.prototype.setPopupWidth = function () {\n        var width = this.setDimension(this.width);\n        if (width.indexOf('%') > -1) {\n            var inputWidth = this.containerStyle.width * parseFloat(width) / 100;\n            width = inputWidth.toString() + 'px';\n        }\n        return width;\n    };\n    DateTimePicker.prototype.wireTimeListEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.listWrapper, 'click', this.onMouseClick, this);\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.listWrapper, 'mouseover', this.onMouseOver, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.listWrapper, 'mouseout', this.onMouseLeave, this);\n        }\n    };\n    DateTimePicker.prototype.unWireTimeListEvents = function () {\n        if (this.listWrapper) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.listWrapper, 'click', this.onMouseClick);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'mousedown touchstart', this.documentClickHandler);\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.listWrapper, 'mouseover', this.onMouseOver, this);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.listWrapper, 'mouseout', this.onMouseLeave, this);\n            }\n        }\n    };\n    DateTimePicker.prototype.onMouseOver = function (event) {\n        var currentLi = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(event.target, '.' + LISTCLASS);\n        this.setTimeHover(currentLi, HOVER);\n    };\n    DateTimePicker.prototype.onMouseLeave = function () {\n        this.removeTimeHover(HOVER);\n    };\n    DateTimePicker.prototype.setTimeHover = function (li, className) {\n        if (this.enabled && this.isValidLI(li) && !li.classList.contains(className)) {\n            this.removeTimeHover(className);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([li], className);\n        }\n    };\n    DateTimePicker.prototype.getPopupHeight = function () {\n        var height = parseInt(POPUPDIMENSION, 10);\n        var popupHeight = this.dateTimeWrapper.getBoundingClientRect().height;\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.fullScreenMode) {\n            return popupHeight;\n        }\n        else {\n            return popupHeight > height ? height : popupHeight;\n        }\n    };\n    DateTimePicker.prototype.changeEvent = function (e) {\n        _super.prototype.changeEvent.call(this, e);\n        if ((this.value && this.value.valueOf()) !== (this.previousDateTime && +this.previousDateTime.valueOf())) {\n            this.valueWithMinutes = this.value;\n            this.setInputValue('date');\n            this.previousDateTime = this.value && new Date(+this.value);\n        }\n    };\n    DateTimePicker.prototype.updateValue = function (e) {\n        this.setInputValue('time');\n        if (+this.previousDateTime !== +this.value) {\n            this.changedArgs = {\n                value: this.value, event: e || null,\n                isInteracted: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e),\n                element: this.element\n            };\n            this.addTimeSelection();\n            this.trigger('change', this.changedArgs);\n            this.previousDateTime = this.previousDate = this.value;\n        }\n    };\n    DateTimePicker.prototype.setTimeScrollPosition = function () {\n        var popupElement = this.selectedElement;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(popupElement)) {\n            this.findScrollTop(popupElement);\n        }\n        else if (this.dateTimeWrapper && this.checkDateValue(this.scrollTo)) {\n            this.setScrollTo();\n        }\n    };\n    DateTimePicker.prototype.findScrollTop = function (element) {\n        var listHeight = this.getPopupHeight();\n        var nextElement = element.nextElementSibling;\n        var height = nextElement ? nextElement.offsetTop : element.offsetTop;\n        var lineHeight = element.getBoundingClientRect().height;\n        if ((height + element.offsetTop) > listHeight) {\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.fullScreenMode) {\n                var listContent = this.dateTimeWrapper.querySelector('.e-content');\n                listContent.scrollTop = nextElement ? (height - (listHeight / HALFPOSITION + lineHeight / HALFPOSITION)) : height;\n            }\n            else {\n                this.dateTimeWrapper.scrollTop = nextElement ? (height - (listHeight / HALFPOSITION + lineHeight / HALFPOSITION)) : height;\n            }\n        }\n        else {\n            this.dateTimeWrapper.scrollTop = 0;\n        }\n    };\n    DateTimePicker.prototype.setScrollTo = function () {\n        var element;\n        var items = this.dateTimeWrapper.querySelectorAll('.' + LISTCLASS);\n        if (items.length >= 0) {\n            this.scrollInvoked = true;\n            var initialTime = this.timeCollections[0];\n            var scrollTime = this.getDateObject(this.checkDateValue(this.scrollTo)).getTime();\n            element = items[Math.round((scrollTime - initialTime) / (this.step * 60000))];\n        }\n        else {\n            this.dateTimeWrapper.scrollTop = 0;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element)) {\n            this.findScrollTop(element);\n        }\n        else {\n            this.dateTimeWrapper.scrollTop = 0;\n        }\n    };\n    DateTimePicker.prototype.setInputValue = function (type) {\n        if (type === 'date') {\n            this.inputElement.value = this.previousElementValue = this.getFormattedValue(this.getFullDateTime());\n            this.setProperties({ value: this.getFullDateTime() }, true);\n        }\n        else {\n            var tempVal = this.getFormattedValue(new Date(this.timeCollections[this.activeIndex]));\n            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setValue(tempVal, this.inputElement, this.floatLabelType, this.showClearButton);\n            this.previousElementValue = this.inputElement.value;\n            this.setProperties({ value: new Date(this.timeCollections[this.activeIndex]) }, true);\n            if (this.enableMask) {\n                this.createMask();\n            }\n        }\n        this.updateIconState();\n    };\n    DateTimePicker.prototype.getFullDateTime = function () {\n        var value = null;\n        if (this.isDateObject(this.valueWithMinutes)) {\n            value = this.combineDateTime(this.valueWithMinutes);\n        }\n        else {\n            value = this.previousDate;\n        }\n        return this.validateMinMaxRange(value);\n    };\n    DateTimePicker.prototype.createMask = function () {\n        this.notify('createMask', {\n            module: 'MaskedDateTime'\n        });\n    };\n    DateTimePicker.prototype.combineDateTime = function (value) {\n        if (this.isDateObject(value)) {\n            var day = this.previousDate.getDate();\n            var month = this.previousDate.getMonth();\n            var year = this.previousDate.getFullYear();\n            var hour = value.getHours();\n            var minutes = value.getMinutes();\n            var seconds = value.getSeconds();\n            return new Date(year, month, day, hour, minutes, seconds);\n        }\n        else {\n            return this.previousDate;\n        }\n    };\n    DateTimePicker.prototype.onMouseClick = function (event) {\n        var target = event.target;\n        var li = this.selectedElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + LISTCLASS);\n        if (li && li.classList.contains(LISTCLASS)) {\n            this.timeValue = li.getAttribute('data-value');\n            this.hide(event);\n        }\n        this.setSelection(li, event);\n    };\n    DateTimePicker.prototype.setSelection = function (li, event) {\n        if (this.isValidLI(li) && !li.classList.contains(ACTIVE)) {\n            this.selectedElement = li;\n            var index = Array.prototype.slice.call(this.liCollections).indexOf(li);\n            this.activeIndex = index;\n            this.valueWithMinutes = new Date(this.timeCollections[this.activeIndex]);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.selectedElement], ACTIVE);\n            this.selectedElement.setAttribute('aria-selected', 'true');\n            this.updateValue(event);\n        }\n    };\n    DateTimePicker.prototype.setTimeActiveClass = function () {\n        var collections = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dateTimeWrapper) ? this.listWrapper : this.dateTimeWrapper;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(collections)) {\n            var items = collections.querySelectorAll('.' + LISTCLASS);\n            if (items.length) {\n                for (var i = 0; i < items.length; i++) {\n                    if (this.timeCollections[i] === +(this.valueWithMinutes)) {\n                        items[i].setAttribute('aria-selected', 'true');\n                        this.selectedElement = items[i];\n                        this.activeIndex = i;\n                        this.setTimeActiveDescendant();\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    DateTimePicker.prototype.setTimeActiveDescendant = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.selectedElement) && this.value) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.inputElement, { 'aria-activedescendant': this.selectedElement.getAttribute('id') });\n        }\n        else {\n            this.inputElement.removeAttribute('aria-activedescendant');\n        }\n    };\n    DateTimePicker.prototype.addTimeSelection = function () {\n        this.selectedElement = null;\n        this.removeTimeSelection();\n        this.setTimeActiveClass();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.selectedElement)) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.selectedElement], ACTIVE);\n            this.selectedElement.setAttribute('aria-selected', 'true');\n        }\n    };\n    DateTimePicker.prototype.removeTimeSelection = function () {\n        this.removeTimeHover(HOVER);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dateTimeWrapper)) {\n            var items = this.dateTimeWrapper.querySelectorAll('.' + ACTIVE);\n            if (items.length) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(items, ACTIVE);\n                items[0].removeAttribute('aria-selected');\n            }\n        }\n    };\n    DateTimePicker.prototype.removeTimeHover = function (className) {\n        var hoveredItem = this.getTimeHoverItem(className);\n        if (hoveredItem && hoveredItem.length) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(hoveredItem, className);\n        }\n    };\n    DateTimePicker.prototype.getTimeHoverItem = function (className) {\n        var collections = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dateTimeWrapper) ? this.listWrapper : this.dateTimeWrapper;\n        var hoveredItem;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(collections)) {\n            hoveredItem = collections.querySelectorAll('.' + className);\n        }\n        return hoveredItem;\n    };\n    DateTimePicker.prototype.isValidLI = function (li) {\n        return (li && li.classList.contains(LISTCLASS) && !li.classList.contains(DISABLED));\n    };\n    DateTimePicker.prototype.calculateStartEnd = function (value, range, method) {\n        var day = value.getDate();\n        var month = value.getMonth();\n        var year = value.getFullYear();\n        var hours = value.getHours();\n        var minutes = value.getMinutes();\n        var seconds = value.getSeconds();\n        var milliseconds = value.getMilliseconds();\n        if (range) {\n            if (method === 'starttime') {\n                return new Date(year, month, day, 0, 0, 0);\n            }\n            else {\n                return new Date(year, month, day, 23, 59, 59);\n            }\n        }\n        else {\n            return new Date(year, month, day, hours, minutes, seconds, milliseconds);\n        }\n    };\n    DateTimePicker.prototype.startTime = function (date) {\n        var tempStartValue;\n        var start;\n        var tempMin = this.min;\n        var tempMax = this.max;\n        var value = date === null ? new Date() : date;\n        var isModified = false;\n        var startValue;\n        if (this.minTime) {\n            startValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), this.minTime.getHours(), this.minTime.getMinutes(), this.minTime.getSeconds(), this.minTime.getMilliseconds());\n            isModified = true;\n        }\n        else {\n            startValue = value;\n        }\n        if ((+startValue.getDate() === +tempMin.getDate() && +startValue.getMonth() === +tempMin.getMonth() &&\n            +startValue.getFullYear() === +tempMin.getFullYear()) ||\n            ((+new Date(startValue.getFullYear(), startValue.getMonth(), startValue.getDate())) <=\n                +new Date(tempMin.getFullYear(), tempMin.getMonth(), tempMin.getDate()))) {\n            start = false;\n            tempStartValue = tempMin;\n            if (isModified && ((+new Date(startValue.getFullYear(), startValue.getMonth(), startValue.getDate(), startValue.getHours(), startValue.getMinutes(), startValue.getSeconds(), startValue.getMilliseconds())) >=\n                +new Date(tempMin.getFullYear(), tempMin.getMonth(), tempMin.getDate(), tempMin.getHours(), tempMin.getMinutes(), tempMin.getSeconds(), tempMin.getMilliseconds()))) {\n                tempStartValue.setHours(startValue.getHours(), startValue.getMinutes(), startValue.getSeconds(), startValue.getMilliseconds());\n            }\n        }\n        else if (+startValue < +tempMax && +startValue > +tempMin) {\n            start = !isModified;\n            tempStartValue = startValue;\n        }\n        else if (+startValue >= +tempMax) {\n            start = true;\n            tempStartValue = tempMax;\n        }\n        return this.calculateStartEnd(tempStartValue, start, 'starttime');\n    };\n    DateTimePicker.prototype.TimePopupFormat = function () {\n        var format = '';\n        var formatCount = 0;\n        var proxy =  false || this;\n        /**\n         * Formats the value specifier.\n         *\n         * @param {string} formattext - The format text.\n         * @returns {string} The formatted value specifier.\n         */\n        function formatValueSpecifier(formattext) {\n            switch (formattext) {\n                case 'd':\n                case 'dd':\n                case 'ddd':\n                case 'dddd':\n                case 'M':\n                case 'MM':\n                case 'MMM':\n                case 'MMMM':\n                case 'y':\n                case 'yy':\n                case 'yyy':\n                case 'yyyy':\n                    if (format === '') {\n                        format = format + formattext;\n                    }\n                    else {\n                        format = format + '/' + formattext;\n                    }\n                    formatCount = formatCount + 1;\n                    break;\n            }\n            if (formatCount > 2) {\n                proxy.dateFormatString = format;\n            }\n            return format;\n        }\n        return formatValueSpecifier;\n    };\n    DateTimePicker.prototype.endTime = function (date) {\n        var tempEndValue;\n        var end;\n        var tempMax = this.max;\n        var value = date === null ? new Date() : date;\n        var isModified = false;\n        var endValue;\n        if (this.maxTime) {\n            endValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), this.maxTime.getHours(), this.maxTime.getMinutes(), this.maxTime.getSeconds(), this.maxTime.getMilliseconds());\n            isModified = true;\n        }\n        else {\n            endValue = value;\n        }\n        if ((+endValue.getDate() === +tempMax.getDate() && +endValue.getMonth() === +tempMax.getMonth() &&\n            +endValue.getFullYear() === +tempMax.getFullYear()) ||\n            (+new Date(endValue.getUTCFullYear(), endValue.getMonth(), endValue.getDate()) >=\n                +new Date(tempMax.getFullYear(), tempMax.getMonth(), tempMax.getDate()))) {\n            end = false;\n            tempEndValue = this.max;\n            if (isModified && (+new Date(endValue.getUTCFullYear(), endValue.getMonth(), endValue.getDate(), endValue.getHours(), endValue.getMinutes(), endValue.getSeconds(), endValue.getMilliseconds()) <=\n                +new Date(tempMax.getFullYear(), tempMax.getMonth(), tempMax.getDate(), tempMax.getHours(), tempMax.getMinutes(), tempMax.getSeconds(), tempMax.getMilliseconds()))) {\n                tempEndValue.setHours(endValue.getHours(), endValue.getMinutes(), endValue.getSeconds(), endValue.getMilliseconds());\n            }\n        }\n        else if (+endValue < +this.max && +endValue > +this.min) {\n            end = !isModified;\n            tempEndValue = endValue;\n        }\n        else if (+endValue <= +this.min) {\n            end = true;\n            tempEndValue = this.min;\n        }\n        return this.calculateStartEnd(tempEndValue, end, 'endtime');\n    };\n    DateTimePicker.prototype.hide = function (e) {\n        var _this = this;\n        if (this.popupObj || this.dateTimeWrapper) {\n            this.preventArgs = {\n                cancel: false,\n                popup: this.popupObj || this.popupObject,\n                event: e || null\n            };\n            var eventArgs = this.preventArgs;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.popupObj)) {\n                this.trigger('close', eventArgs, function (eventArgs) {\n                    _this.dateTimeCloseEventCallback(e, eventArgs);\n                });\n            }\n            else {\n                this.dateTimeCloseEventCallback(e, eventArgs);\n            }\n        }\n        else {\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.allowEdit && !this.readonly) {\n                this.inputElement.removeAttribute('readonly');\n            }\n            this.setAllowEdit();\n        }\n    };\n    DateTimePicker.prototype.dateTimeCloseEventCallback = function (e, eventArgs) {\n        this.preventArgs = eventArgs;\n        if (!this.preventArgs.cancel) {\n            if (this.isDatePopupOpen()) {\n                _super.prototype.hide.call(this, e);\n            }\n            else if (this.isTimePopupOpen()) {\n                this.closePopup(e);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([document.body], OVERFLOW);\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.timeModal) {\n                    this.timeModal.style.display = 'none';\n                    this.timeModal.outerHTML = '';\n                    this.timeModal = null;\n                }\n                this.setTimeActiveDescendant();\n            }\n        }\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.allowEdit && !this.readonly) {\n            this.inputElement.removeAttribute('readonly');\n        }\n        this.setAllowEdit();\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    DateTimePicker.prototype.closePopup = function (e) {\n        if (this.isTimePopupOpen() && this.popupObject) {\n            var animModel = {\n                name: 'FadeOut',\n                duration: ANIMATIONDURATION,\n                delay: 0\n            };\n            this.popupObject.hide(new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation(animModel));\n            this.inputWrapper.container.classList.remove(ICONANIMATION);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.inputElement, { 'aria-expanded': 'false' });\n            this.inputElement.removeAttribute('aria-owns');\n            this.inputElement.removeAttribute('aria-controls');\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'mousedown touchstart', this.documentClickHandler);\n        }\n    };\n    DateTimePicker.prototype.preRender = function () {\n        this.checkFormat();\n        this.dateTimeFormat = this.cldrDateTimeFormat();\n        _super.prototype.preRender.call(this);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.inputElementCopy], [ROOT]);\n    };\n    DateTimePicker.prototype.getProperty = function (date, val) {\n        if (val === 'min') {\n            this.setProperties({ min: this.validateValue(date.min) }, true);\n        }\n        else {\n            this.setProperties({ max: this.validateValue(date.max) }, true);\n        }\n    };\n    DateTimePicker.prototype.checkAttributes = function (isDynamic) {\n        var attributes = isDynamic ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) :\n            ['style', 'name', 'step', 'disabled', 'readonly', 'value', 'min', 'max', 'placeholder', 'type'];\n        var value;\n        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n            var prop = attributes_1[_i];\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputElement.getAttribute(prop))) {\n                switch (prop) {\n                    case 'name':\n                        this.inputElement.setAttribute('name', this.inputElement.getAttribute(prop));\n                        break;\n                    case 'step':\n                        this.step = parseInt(this.inputElement.getAttribute(prop), 10);\n                        break;\n                    case 'readonly':\n                        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dateTimeOptions) || (this.dateTimeOptions['readonly'] === undefined)) || isDynamic) {\n                            var readonly = this.inputElement.getAttribute(prop) === 'disabled' ||\n                                this.inputElement.getAttribute(prop) === '' ||\n                                this.inputElement.getAttribute(prop) === 'true' ? true : false;\n                            this.setProperties({ readonly: readonly }, !isDynamic);\n                        }\n                        break;\n                    case 'placeholder':\n                        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dateTimeOptions) || (this.dateTimeOptions['placeholder'] === undefined)) || isDynamic) {\n                            this.setProperties({ placeholder: this.inputElement.getAttribute(prop) }, !isDynamic);\n                        }\n                        break;\n                    case 'min':\n                        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dateTimeOptions) || (this.dateTimeOptions['min'] === undefined)) || isDynamic) {\n                            value = new Date(this.inputElement.getAttribute(prop));\n                            if (!this.isNullOrEmpty(value) && !isNaN(+value)) {\n                                this.setProperties({ min: value }, !isDynamic);\n                            }\n                        }\n                        break;\n                    case 'disabled':\n                        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dateTimeOptions) || (this.dateTimeOptions['enabled'] === undefined)) || isDynamic) {\n                            var enabled = this.inputElement.getAttribute(prop) === 'disabled' ||\n                                this.inputElement.getAttribute(prop) === 'true' ||\n                                this.inputElement.getAttribute(prop) === '' ? false : true;\n                            this.setProperties({ enabled: enabled }, !isDynamic);\n                        }\n                        break;\n                    case 'value':\n                        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dateTimeOptions) || (this.dateTimeOptions['value'] === undefined)) || isDynamic) {\n                            value = new Date(this.inputElement.getAttribute(prop));\n                            if (!this.isNullOrEmpty(value) && !isNaN(+value)) {\n                                this.setProperties({ value: value }, !isDynamic);\n                            }\n                        }\n                        break;\n                    case 'max':\n                        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dateTimeOptions) || (this.dateTimeOptions['max'] === undefined)) || isDynamic) {\n                            value = new Date(this.inputElement.getAttribute(prop));\n                            if (!this.isNullOrEmpty(value) && !isNaN(+value)) {\n                                this.setProperties({ max: value }, !isDynamic);\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    DateTimePicker.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.calendarMode === 'Islamic') {\n            modules.push({ args: [this], member: 'islamic', name: 'Islamic' });\n        }\n        if (this.enableMask) {\n            modules.push(this.maskedDateModule());\n        }\n        return modules;\n    };\n    DateTimePicker.prototype.maskedDateModule = function () {\n        var modules = { args: [this], member: 'MaskedDateTime' };\n        return modules;\n    };\n    DateTimePicker.prototype.getTimeActiveElement = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dateTimeWrapper)) {\n            return this.dateTimeWrapper.querySelectorAll('.' + ACTIVE);\n        }\n        else {\n            return null;\n        }\n    };\n    DateTimePicker.prototype.createDateObj = function (val) {\n        return val instanceof Date ? val : null;\n    };\n    DateTimePicker.prototype.getDateObject = function (text) {\n        if (!this.isNullOrEmpty(text)) {\n            var dateValue = this.createDateObj(text);\n            var value = this.valueWithMinutes;\n            var status_1 = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value);\n            if (this.checkDateValue(dateValue)) {\n                var date = status_1 ? value.getDate() : DAY;\n                var month = status_1 ? value.getMonth() : MONTH;\n                var year = status_1 ? value.getFullYear() : YEAR;\n                var hour = status_1 ? value.getHours() : HOUR;\n                var minute = status_1 ? value.getMinutes() : MINUTE;\n                var second = status_1 ? value.getSeconds() : SECOND;\n                var millisecond = status_1 ? value.getMilliseconds() : MILLISECOND;\n                if (!this.scrollInvoked) {\n                    return new Date(year, month, date, hour, minute, second, millisecond);\n                }\n                else {\n                    this.scrollInvoked = false;\n                    return new Date(year, month, date, dateValue.getHours(), dateValue.getMinutes(), dateValue.getSeconds(), dateValue.getMilliseconds());\n                }\n            }\n        }\n        return null;\n    };\n    DateTimePicker.prototype.findNextTimeElement = function (event) {\n        var textVal = (this.inputElement).value;\n        var value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.valueWithMinutes) ? this.createDateObj(textVal) :\n            this.getDateObject(this.valueWithMinutes);\n        var dateTimeVal = null;\n        var listCount = this.liCollections.length;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.activeIndex) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.checkDateValue(value))) {\n            if (event.action === 'home') {\n                dateTimeVal = +(this.createDateObj(new Date(this.timeCollections[0])));\n                this.activeIndex = 0;\n            }\n            else if (event.action === 'end') {\n                dateTimeVal = +(this.createDateObj(new Date(this.timeCollections[this.timeCollections.length - 1])));\n                this.activeIndex = this.timeCollections.length - 1;\n            }\n            else {\n                if (event.action === 'down') {\n                    for (var i = 0; i < listCount; i++) {\n                        if (+value < this.timeCollections[i]) {\n                            dateTimeVal = +(this.createDateObj(new Date(this.timeCollections[i])));\n                            this.activeIndex = i;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var i = listCount - 1; i >= 0; i--) {\n                        if (+value > this.timeCollections[i]) {\n                            dateTimeVal = +(this.createDateObj(new Date(this.timeCollections[i])));\n                            this.activeIndex = i;\n                            break;\n                        }\n                    }\n                }\n            }\n            this.selectedElement = this.liCollections[this.activeIndex];\n            this.timeElementValue((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dateTimeVal) ? null : new Date(dateTimeVal));\n        }\n    };\n    DateTimePicker.prototype.setTimeValue = function (date, value) {\n        var dateString;\n        var time;\n        var val = this.validateMinMaxRange(value);\n        var newval = this.createDateObj(val);\n        if (this.getFormattedValue(newval) !== (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) ? this.getFormattedValue(this.value) : null)) {\n            this.valueWithMinutes = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newval) ? null : newval;\n            time = new Date(+this.valueWithMinutes);\n        }\n        else {\n            if (this.strictMode) {\n                //for strict mode case, when value not present within a range. Reset the nearest range value.\n                date = newval;\n            }\n            this.valueWithMinutes = this.checkDateValue(date);\n            time = new Date(+this.valueWithMinutes);\n        }\n        if (this.calendarMode === 'Gregorian') {\n            dateString = this.globalize.formatDate(time, {\n                format: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formatString) ? this.formatString : this.cldrDateTimeFormat(),\n                type: 'dateTime', skeleton: 'yMd'\n            });\n        }\n        else {\n            dateString = this.globalize.formatDate(time, {\n                format: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formatString) ? this.formatString : this.cldrDateTimeFormat(),\n                type: 'dateTime', skeleton: 'yMd', calendar: 'islamic'\n            });\n        }\n        if (!this.strictMode && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(time)) {\n            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setValue(dateString, this.inputElement, this.floatLabelType, this.showClearButton);\n        }\n        else {\n            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setValue(dateString, this.inputElement, this.floatLabelType, this.showClearButton);\n        }\n        return time;\n    };\n    DateTimePicker.prototype.timeElementValue = function (value) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.checkDateValue(value)) && !this.isNullOrEmpty(value)) {\n            var date = value instanceof Date ? value : this.getDateObject(value);\n            return this.setTimeValue(date, value);\n        }\n        return null;\n    };\n    DateTimePicker.prototype.timeKeyHandler = function (event) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.step) || this.step <= 0) {\n            return;\n        }\n        var listCount = this.timeCollections.length;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.getTimeActiveElement()) || this.getTimeActiveElement().length === 0) {\n            if (this.liCollections.length > 0) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.activeIndex)) {\n                    this.activeIndex = 0;\n                    this.selectedElement = this.liCollections[0];\n                    this.timeElementValue(new Date(this.timeCollections[0]));\n                }\n                else {\n                    this.findNextTimeElement(event);\n                }\n            }\n        }\n        else {\n            var nextItemValue = void 0;\n            if ((event.keyCode >= 37) && (event.keyCode <= 40)) {\n                var index = (event.keyCode === 40 || event.keyCode === 39) ? ++this.activeIndex : --this.activeIndex;\n                this.activeIndex = index = this.activeIndex === (listCount) ? 0 : this.activeIndex;\n                this.activeIndex = index = this.activeIndex < 0 ? (listCount - 1) : this.activeIndex;\n                nextItemValue = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.timeCollections[index]) ?\n                    this.timeCollections[0] : this.timeCollections[index];\n            }\n            else if (event.action === 'home') {\n                this.activeIndex = 0;\n                nextItemValue = this.timeCollections[0];\n            }\n            else if (event.action === 'end') {\n                this.activeIndex = listCount - 1;\n                nextItemValue = this.timeCollections[listCount - 1];\n            }\n            this.selectedElement = this.liCollections[this.activeIndex];\n            this.timeElementValue(new Date(nextItemValue));\n        }\n        this.isNavigate = true;\n        this.setTimeHover(this.selectedElement, NAVIGATION);\n        this.setTimeActiveDescendant();\n        if (this.isTimePopupOpen() && this.selectedElement !== null && (!event || event.type !== 'click')) {\n            this.setTimeScrollPosition();\n        }\n    };\n    DateTimePicker.prototype.timeKeyActionHandle = function (event) {\n        if (this.enabled) {\n            if (event.action !== 'right' && event.action !== 'left' && event.action !== 'tab') {\n                event.preventDefault();\n            }\n            switch (event.action) {\n                case 'up':\n                case 'down':\n                case 'home':\n                case 'end':\n                    this.timeKeyHandler(event);\n                    break;\n                case 'enter':\n                    if (this.isNavigate) {\n                        this.selectedElement = this.liCollections[this.activeIndex];\n                        this.valueWithMinutes = new Date(this.timeCollections[this.activeIndex]);\n                        this.setInputValue('time');\n                        if (+this.previousDateTime !== +this.value) {\n                            this.changedArgs.value = this.value;\n                            this.addTimeSelection();\n                            this.previousDateTime = this.value;\n                        }\n                    }\n                    else {\n                        this.updateValue(event);\n                    }\n                    this.hide(event);\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputWrapper.container], INPUTFOCUS);\n                    this.isNavigate = false;\n                    event.stopPropagation();\n                    break;\n                case 'escape':\n                    this.hide(event);\n                    break;\n                default:\n                    this.isNavigate = false;\n                    break;\n            }\n        }\n    };\n    DateTimePicker.prototype.inputKeyAction = function (event) {\n        switch (event.action) {\n            case 'altDownArrow':\n                this.strictModeUpdate();\n                this.updateInput();\n                this.toggle(event);\n                break;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {DateTimePickerModel} newProp - Returns the dynamic property value of the component.\n     * @param {DateTimePickerModel} oldProp - Returns the previous property value of the component.\n     * @returns {void}\n     * @deprecated\n     */\n    DateTimePicker.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            var openPopup = ['blur', 'change', 'cleared', 'close', 'created', 'destroyed', 'focus', 'navigated', 'open', 'renderDayCell'];\n            if (openPopup.indexOf(prop) > 0 && this.isReact) {\n                this.isDynamicValueChanged = true;\n            }\n            switch (prop) {\n                case 'value':\n                    this.isDynamicValueChanged = true;\n                    this.invalidValueString = null;\n                    this.checkInvalidValue(newProp.value);\n                    newProp.value = this.value;\n                    newProp.value = this.validateValue(newProp.value);\n                    if (this.enableMask) {\n                        _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setValue(this.maskedDateValue, this.inputElement, this.floatLabelType, this.showClearButton);\n                    }\n                    else {\n                        _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setValue(this.getFormattedValue(newProp.value), this.inputElement, this.floatLabelType, this.showClearButton);\n                    }\n                    this.valueWithMinutes = newProp.value;\n                    this.setProperties({ value: newProp.value }, true);\n                    if (this.popupObj) {\n                        this.popupUpdate();\n                    }\n                    this.previousDateTime = new Date(this.inputElement.value);\n                    this.updateInput();\n                    this.changeTrigger(null);\n                    this.preventChange = this.isAngular && this.preventChange ? !this.preventChange : this.preventChange;\n                    if (this.enableMask && this.value) {\n                        this.notify('createMask', {\n                            module: 'MaskedDateTime'\n                        });\n                    }\n                    break;\n                case 'min':\n                case 'max':\n                    this.getProperty(newProp, prop);\n                    this.updateInput();\n                    break;\n                case 'enableRtl':\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setEnableRtl(this.enableRtl, [this.inputWrapper.container]);\n                    break;\n                case 'cssClass':\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(oldProp.cssClass)) {\n                        oldProp.cssClass = (oldProp.cssClass.replace(/\\s+/g, ' ')).trim();\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.cssClass)) {\n                        newProp.cssClass = (newProp.cssClass.replace(/\\s+/g, ' ')).trim();\n                    }\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setCssClass(newProp.cssClass, [this.inputWrapper.container], oldProp.cssClass);\n                    if (this.dateTimeWrapper) {\n                        _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setCssClass(newProp.cssClass, [this.dateTimeWrapper], oldProp.cssClass);\n                    }\n                    break;\n                case 'locale':\n                    this.globalize = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization(this.locale);\n                    this.l10n.setLocale(this.locale);\n                    if (this.dateTimeOptions && this.dateTimeOptions.placeholder == null) {\n                        this.setProperties({ placeholder: this.l10n.getConstant('placeholder') }, true);\n                        _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setPlaceholder(this.l10n.getConstant('placeholder'), this.inputElement);\n                    }\n                    this.dateTimeFormat = this.cldrDateTimeFormat();\n                    _super.prototype.updateInput.call(this);\n                    break;\n                case 'htmlAttributes':\n                    this.updateHtmlAttributeToElement();\n                    this.updateHtmlAttributeToWrapper();\n                    this.checkAttributes(true);\n                    break;\n                case 'format':\n                    this.setProperties({ format: newProp.format }, true);\n                    this.checkFormat();\n                    this.dateTimeFormat = this.formatString;\n                    this.setValue();\n                    if (this.enableMask) {\n                        this.notify('createMask', {\n                            module: 'MaskedDateTime'\n                        });\n                        if (!this.value) {\n                            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setValue(this.maskedDateValue, this.inputElement, this.floatLabelType, this.showClearButton);\n                        }\n                    }\n                    break;\n                case 'placeholder':\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setPlaceholder(newProp.placeholder, this.inputElement);\n                    break;\n                case 'enabled':\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setEnabled(this.enabled, this.inputElement);\n                    if (this.enabled) {\n                        this.inputElement.setAttribute('tabindex', this.tabIndex);\n                    }\n                    else {\n                        this.inputElement.tabIndex = -1;\n                    }\n                    break;\n                case 'strictMode':\n                    this.invalidValueString = null;\n                    this.updateInput();\n                    break;\n                case 'width':\n                    this.setWidth(newProp.width);\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.calculateWidth(this.inputElement, this.inputWrapper.container);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper.buttons[0]) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper.container.getElementsByClassName('e-float-text-overflow')[0]) && this.floatLabelType !== 'Never') {\n                        this.inputWrapper.container.getElementsByClassName('e-float-text-overflow')[0].classList.add('e-date-time-icon');\n                    }\n                    break;\n                case 'readonly':\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setReadonly(this.readonly, this.inputElement);\n                    break;\n                case 'floatLabelType':\n                    this.floatLabelType = newProp.floatLabelType;\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.removeFloating(this.inputWrapper);\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.addFloating(this.inputElement, this.floatLabelType, this.placeholder);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper.buttons[0]) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper.container.getElementsByClassName('e-float-text-overflow')[0]) && this.floatLabelType !== 'Never') {\n                        this.inputWrapper.container.getElementsByClassName('e-float-text-overflow')[0].classList.add('e-date-time-icon');\n                    }\n                    break;\n                case 'scrollTo':\n                    if (this.checkDateValue(new Date(this.checkValue(newProp.scrollTo)))) {\n                        if (this.dateTimeWrapper) {\n                            this.setScrollTo();\n                        }\n                        this.setProperties({ scrollTo: this.checkDateValue(new Date(this.checkValue(newProp.scrollTo))) }, true);\n                    }\n                    else {\n                        this.setProperties({ scrollTo: null }, true);\n                    }\n                    break;\n                case 'enableMask':\n                    if (this.enableMask) {\n                        this.notify('createMask', {\n                            module: 'MaskedDateTime'\n                        });\n                        _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setValue(this.maskedDateValue, this.inputElement, this.floatLabelType, this.showClearButton);\n                    }\n                    else {\n                        if (this.inputElement.value === this.maskedDateValue) {\n                            this.maskedDateValue = '';\n                            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setValue(this.maskedDateValue, this.inputElement, this.floatLabelType, this.showClearButton);\n                        }\n                    }\n                    break;\n                default:\n                    _super.prototype.onPropertyChanged.call(this, newProp, oldProp);\n                    break;\n            }\n            if (!this.isDynamicValueChanged) {\n                this.hide(null);\n            }\n            this.isDynamicValueChanged = false;\n        }\n    };\n    /**\n     * To get component name.\n     *\n     * @returns {string} Returns the component name.\n     * @private\n     */\n    DateTimePicker.prototype.getModuleName = function () {\n        return 'datetimepicker';\n    };\n    DateTimePicker.prototype.restoreValue = function () {\n        this.previousDateTime = this.previousDate;\n        this.currentDate = this.value ? this.value : new Date();\n        this.valueWithMinutes = this.value;\n        this.previousDate = this.value;\n        this.previousElementValue = this.previousElementValue = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputValueCopy)) ? '' :\n            this.getFormattedValue(this.inputValueCopy);\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DateTimePicker.prototype, \"timeFormat\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(30)\n    ], DateTimePicker.prototype, \"step\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DateTimePicker.prototype, \"scrollTo\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1000)\n    ], DateTimePicker.prototype, \"zIndex\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DateTimePicker.prototype, \"value\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DateTimePicker.prototype, \"keyConfigs\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({})\n    ], DateTimePicker.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], DateTimePicker.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], DateTimePicker.prototype, \"allowEdit\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], DateTimePicker.prototype, \"isMultiSelection\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DateTimePicker.prototype, \"values\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], DateTimePicker.prototype, \"showClearButton\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DateTimePicker.prototype, \"placeholder\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], DateTimePicker.prototype, \"strictMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], DateTimePicker.prototype, \"fullScreenMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DateTimePicker.prototype, \"serverTimezoneOffset\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(new Date(1900, 0, 1))\n    ], DateTimePicker.prototype, \"min\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(new Date(2099, 11, 31))\n    ], DateTimePicker.prototype, \"max\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DateTimePicker.prototype, \"minTime\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DateTimePicker.prototype, \"maxTime\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DateTimePicker.prototype, \"firstDayOfWeek\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Gregorian')\n    ], DateTimePicker.prototype, \"calendarMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Month')\n    ], DateTimePicker.prototype, \"start\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Month')\n    ], DateTimePicker.prototype, \"depth\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], DateTimePicker.prototype, \"weekNumber\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], DateTimePicker.prototype, \"showTodayButton\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Short')\n    ], DateTimePicker.prototype, \"dayHeaderFormat\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], DateTimePicker.prototype, \"openOnFocus\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], DateTimePicker.prototype, \"enableMask\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({ day: 'day', month: 'month', year: 'year', hour: 'hour', minute: 'minute', second: 'second', dayOfTheWeek: 'day of the week' })\n    ], DateTimePicker.prototype, \"maskPlaceholder\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], DateTimePicker.prototype, \"open\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], DateTimePicker.prototype, \"close\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], DateTimePicker.prototype, \"cleared\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], DateTimePicker.prototype, \"blur\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], DateTimePicker.prototype, \"focus\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], DateTimePicker.prototype, \"created\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], DateTimePicker.prototype, \"destroyed\", void 0);\n    DateTimePicker = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], DateTimePicker);\n    return DateTimePicker;\n}(_datepicker_datepicker__WEBPACK_IMPORTED_MODULE_3__.DatePicker));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-calendars/src/datetimepicker/datetimepicker.js?");

/***/ })

}]);