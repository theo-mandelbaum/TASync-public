"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-grids_src_grid_actions_edit_js-ddb41384"],{

/***/ "./node_modules/@syncfusion/ej2-grids/src/grid/actions/edit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-grids/src/grid/actions/edit.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Edit: () => (/* binding */ Edit)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/constant */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _renderer_edit_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../renderer/edit-renderer */ \"./node_modules/@syncfusion/ej2-grids/src/grid/renderer/edit-renderer.js\");\n/* harmony import */ var _renderer_boolean_edit_cell__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../renderer/boolean-edit-cell */ \"./node_modules/@syncfusion/ej2-grids/src/grid/renderer/boolean-edit-cell.js\");\n/* harmony import */ var _renderer_dropdown_edit_cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../renderer/dropdown-edit-cell */ \"./node_modules/@syncfusion/ej2-grids/src/grid/renderer/dropdown-edit-cell.js\");\n/* harmony import */ var _renderer_numeric_edit_cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../renderer/numeric-edit-cell */ \"./node_modules/@syncfusion/ej2-grids/src/grid/renderer/numeric-edit-cell.js\");\n/* harmony import */ var _renderer_default_edit_cell__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../renderer/default-edit-cell */ \"./node_modules/@syncfusion/ej2-grids/src/grid/renderer/default-edit-cell.js\");\n/* harmony import */ var _inline_edit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./inline-edit */ \"./node_modules/@syncfusion/ej2-grids/src/grid/actions/inline-edit.js\");\n/* harmony import */ var _batch_edit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./batch-edit */ \"./node_modules/@syncfusion/ej2-grids/src/grid/actions/batch-edit.js\");\n/* harmony import */ var _dialog_edit__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dialog-edit */ \"./node_modules/@syncfusion/ej2-grids/src/grid/actions/dialog-edit.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../base/util */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\");\n/* harmony import */ var _renderer_datepicker_edit_cell__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../renderer/datepicker-edit-cell */ \"./node_modules/@syncfusion/ej2-grids/src/grid/renderer/datepicker-edit-cell.js\");\n/* harmony import */ var _renderer_template_edit_cell__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../renderer/template-edit-cell */ \"./node_modules/@syncfusion/ej2-grids/src/grid/renderer/template-edit-cell.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"./node_modules/@syncfusion/ej2-data/index.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../base/string-literals */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for the Grid editing module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} serviceLocator - specifies the servicelocator\n     * @hidden\n     */\n    function Edit(parent, serviceLocator) {\n        /** @hidden */\n        this.isShowAddedRowValidate = false;\n        this.editType = { 'Inline': _inline_edit__WEBPACK_IMPORTED_MODULE_7__.InlineEdit, 'Normal': _inline_edit__WEBPACK_IMPORTED_MODULE_7__.InlineEdit, 'Batch': _batch_edit__WEBPACK_IMPORTED_MODULE_8__.BatchEdit, 'Dialog': _dialog_edit__WEBPACK_IMPORTED_MODULE_9__.DialogEdit };\n        this.fieldname = '';\n        this.data = {};\n        /* @hidden */\n        this.editCellDialogClose = false;\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.l10n = this.serviceLocator.getService('localization');\n        this.addEventListener();\n        this.updateEditObj();\n        this.createAlertDlg();\n        this.createConfirmDlg();\n    }\n    Edit.prototype.updateColTypeObj = function () {\n        var cols = this.parent.columnModel;\n        for (var i = 0; i < cols.length; i++) {\n            if (this.parent.editSettings.template || cols[parseInt(i.toString(), 10)].editTemplate) {\n                var templteCell = 'templateedit';\n                cols[parseInt(i.toString(), 10)].edit = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(new Edit.editCellType[\"\" + templteCell](this.parent), cols[parseInt(i.toString(), 10)].edit || {});\n            }\n            else {\n                cols[parseInt(i.toString(), 10)].edit = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(new Edit.editCellType[cols[parseInt(i.toString(), 10)].editType\n                    && Edit.editCellType[cols[parseInt(i.toString(), 10)].editType] ?\n                    cols[parseInt(i.toString(), 10)].editType : 'defaultedit'](this.parent, this.serviceLocator), cols[parseInt(i.toString(), 10)].edit || {});\n            }\n        }\n        this.parent.log('primary_column_missing');\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        var gObj = this.parent;\n        for (var _i = 0, _a = Object.keys(e.properties); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'allowAdding':\n                case 'allowDeleting':\n                case 'allowEditing':\n                    if (gObj.editSettings.allowAdding || gObj.editSettings.allowEditing || gObj.editSettings.allowDeleting) {\n                        this.initialEnd();\n                    }\n                    break;\n                case 'mode':\n                    this.updateEditObj();\n                    gObj.isEdit = gObj.editSettings.showAddNewRow ? true : false;\n                    gObj.refresh();\n                    break;\n            }\n        }\n    };\n    Edit.prototype.updateEditObj = function () {\n        if (this.editModule) {\n            this.editModule.destroy();\n        }\n        this.renderer = new _renderer_edit_renderer__WEBPACK_IMPORTED_MODULE_2__.EditRender(this.parent, this.serviceLocator);\n        this.editModule = new this.editType[this.parent.editSettings.mode](this.parent, this.serviceLocator, this.renderer);\n    };\n    Edit.prototype.initialEnd = function () {\n        this.updateColTypeObj();\n    };\n    /**\n     * Edits any bound record in the Grid by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     * @returns {void}\n     */\n    Edit.prototype.startEdit = function (tr) {\n        var gObj = this.parent;\n        if (!gObj.editSettings.allowEditing || (gObj.isEdit && (!gObj.editSettings.showAddNewRow ||\n            (gObj.editSettings.showAddNewRow && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.editedRow)))))\n            || gObj.editSettings.mode === 'Batch') {\n            return;\n        }\n        this.parent.element.classList.add('e-editing');\n        if (!gObj.getSelectedRows().length || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.getRowByIndex(parseInt(this.parent.getSelectedRows()[0].getAttribute('aria-rowindex'), 10) - 1))) {\n            if (!tr) {\n                this.showDialog('EditOperationAlert', this.alertDObj);\n                return;\n            }\n        }\n        else if (!tr) {\n            tr = gObj.getSelectedRows()[0];\n        }\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Normal') {\n            var idx = parseInt(tr.getAttribute('aria-rowindex'), 10) - 1;\n            tr = this.parent.getRowByIndex(idx);\n        }\n        var lastTr = gObj.getContent().querySelector('tr:last-child');\n        var hdrTbody = gObj.getHeaderContent().querySelector('tbody');\n        if (gObj.frozenRows && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lastTr) && hdrTbody && hdrTbody.querySelector('tr:last-child')) {\n            this.isLastRow = tr.rowIndex === parseInt(gObj.getHeaderContent().querySelector('tbody').querySelector('tr:last-child').getAttribute('aria-rowindex'), 10) - 1;\n        }\n        else if (lastTr) {\n            this.isLastRow = tr.rowIndex === lastTr.rowIndex;\n        }\n        if (tr.style.display === 'none') {\n            return;\n        }\n        this.editModule.startEdit(tr);\n        this.refreshToolbar();\n        gObj.element.querySelector('.e-gridpopup').style.display = 'none';\n        this.parent.notify('start-edit', {});\n        if (gObj.editSettings.showAddNewRow) {\n            this.destroyToolTip();\n        }\n    };\n    /**\n     * @param {Element} tr - specifies the tr element\n     * @param {object} args - specifies the object\n     * @param {Element} args.row -specfifes the row\n     * @param {string} args.requestType - specifies the request type\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.checkLastRow = function (tr, args) {\n        var checkLastRow = this.isLastRow;\n        if (this.parent.height !== 'auto' && this.parent.editSettings.newRowPosition === 'Bottom' && args && args.requestType === 'add' &&\n            this.parent.getContent().firstElementChild.offsetHeight > this.parent.getContentTable().scrollHeight) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([].slice.call(tr.getElementsByClassName(_base_string_literals__WEBPACK_IMPORTED_MODULE_16__.rowCell)), 'e-lastrowadded');\n        }\n        else if (checkLastRow && tr && tr.classList) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([].slice.call(tr.getElementsByClassName(_base_string_literals__WEBPACK_IMPORTED_MODULE_16__.rowCell)), 'e-lastrowcell');\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.closeEdit = function () {\n        if (this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.showConfirmDialog\n            && this.parent.element.getElementsByClassName('e-updatedtd').length) {\n            this.showDialog('CancelEdit', this.dialogObj);\n            return;\n        }\n        this.parent.element.classList.remove('e-editing');\n        this.editModule.closeEdit();\n        this.refreshToolbar();\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.closeEdit, { requestType: 'cancel' });\n        if (this.parent.editSettings.showAddNewRow) {\n            this.destroyToolTip();\n        }\n    };\n    Edit.prototype.refreshToolbar = function () {\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.toolbarRefresh, {});\n    };\n    /**\n     * To adds a new row at the top with the given data. When data is not passed, it will add empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index) {\n        if (!this.parent.editSettings.allowAdding) {\n            return;\n        }\n        var args = { startEdit: true };\n        if (!data) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.virtualScrollAddActionBegin, args);\n        }\n        if (args.startEdit) {\n            this.parent.element.classList.add('e-editing');\n            this.editModule.addRecord(data, index);\n            this.refreshToolbar();\n            this.parent.notify('start-add', {});\n        }\n    };\n    /**\n     * Deletes a record with the given options. If fieldname and data are not given, the Grid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldname - Defines the primary key field name of the column.\n     * @param {Object} data - Defines the JSON data record to be deleted.\n     * @returns {void}\n     */\n    Edit.prototype.deleteRecord = function (fieldname, data) {\n        var gObj = this.parent;\n        if (!gObj.editSettings.allowDeleting) {\n            return;\n        }\n        if (!data) {\n            if (!gObj.getSelectedRecords().length && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.commandDelIndex)) {\n                this.showDialog('DeleteOperationAlert', this.alertDObj);\n                return;\n            }\n        }\n        if (gObj.editSettings.showDeleteConfirmDialog) {\n            this.fieldname = fieldname;\n            this.data = data;\n            this.showDialog('ConfirmDelete', this.dialogObj);\n            return;\n        }\n        this.editModule.deleteRecord(fieldname, data);\n    };\n    /**\n     * Deletes a visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    Edit.prototype.deleteRow = function (tr) {\n        this.deleteRowUid = tr.getAttribute('data-uid');\n        var rowObj = this.parent.getRowObjectFromUID(this.deleteRowUid);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowObj)) {\n            this.deleteRecord(null, rowObj.data);\n        }\n    };\n    /**\n     * If Grid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.endEdit = function () {\n        if (this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.showConfirmDialog &&\n            ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formObj) || this.formObj.validate())) {\n            this.parent.editModule.saveCell();\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.editNextValCell, {});\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formObj) || this.formObj.validate()) {\n                this.showDialog('BatchSaveConfirm', this.dialogObj);\n                return;\n            }\n        }\n        this.endEditing();\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    Edit.prototype.updateCell = function (rowIndex, field, value) {\n        this.editModule.updateCell(rowIndex, field, value);\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    Edit.prototype.updateRow = function (index, data) {\n        this.editModule.updateRow(index, data);\n    };\n    /**\n     * Resets added, edited, and deleted records in the batch mode.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.batchCancel = function () {\n        this.closeEdit();\n    };\n    /**\n     * Bulk saves added, edited, and deleted records in the batch mode.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.batchSave = function () {\n        this.endEdit();\n    };\n    /**\n     * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n     *\n     * @param {number} index - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform batch edit.\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (index, field) {\n        this.editModule.editCell(index, field);\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} returns whether the form is validated\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.formObj ? this.formObj.validate() : true;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} returns the Object\n     */\n    Edit.prototype.getBatchChanges = function () {\n        return this.editModule.getBatchChanges ? this.editModule.getBatchChanges() : {};\n    };\n    /**\n     * Gets the current value of the edited component.\n     *\n     * @returns {Object} returns the Object\n     */\n    Edit.prototype.getCurrentEditCellData = function () {\n        var obj = this.getCurrentEditedData(this.formObj.element, {});\n        return obj[Object.keys(obj)[0]];\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.saveCell = function () {\n        this.editModule.saveCell();\n    };\n    Edit.prototype.endEditing = function () {\n        if (!this.parent.editSettings.showAddNewRow) {\n            this.parent.element.classList.remove('e-editing');\n        }\n        this.editModule.endEdit();\n        this.isShowAddedRowValidate = false;\n        this.refreshToolbar();\n    };\n    Edit.prototype.showDialog = function (content, obj) {\n        obj.content = '<div>' + this.l10n.getConstant(content) + '</div>';\n        obj.dataBind();\n        obj.show();\n        if (this.parent.enableRtl) {\n            obj.refresh();\n        }\n    };\n    Edit.prototype.getValueFromType = function (col, value) {\n        var val = value;\n        switch (col.type) {\n            case 'number':\n                val = !isNaN(parseFloat(value)) ? parseFloat(value) : null;\n                break;\n            case 'boolean':\n                if (col.editType !== 'booleanedit') {\n                    val = value === this.l10n.getConstant('True') || value === true ? true : false;\n                }\n                break;\n            case 'date':\n            case 'datetime':\n                if (col.editType !== 'datepickeredit' && col.editType !== 'datetimepickeredit'\n                    && value && value.length) {\n                    val = new Date(value);\n                }\n                else if (value === '') {\n                    val = null;\n                }\n                break;\n            case 'dateonly':\n                // eslint-disable-next-line no-cond-assign\n                val = value && (value = new Date(value)) ?\n                    value.getFullYear() + '-' + (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.padZero)(value.getMonth() + 1) + '-' + (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.padZero)(value.getDate()) : null;\n                break;\n        }\n        return val;\n    };\n    Edit.prototype.destroyToolTip = function () {\n        var elements = [].slice.call(this.parent.element.getElementsByClassName('e-griderror'));\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var elem = elements_1[_i];\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(elem);\n        }\n        this.parent.getContent().firstElementChild.style.position = 'relative';\n        if (this.parent.isFrozenGrid()) {\n            if (this.parent.element.querySelector('.e-gridheader')) {\n                this.parent.element.querySelector('.e-gridheader').style.position = '';\n            }\n            this.parent.element.querySelector('.e-gridcontent').style.position = '';\n        }\n    };\n    Edit.prototype.createConfirmDlg = function () {\n        this.dialogObj = this.dlgWidget([\n            {\n                click: this.dlgOk.bind(this),\n                buttonModel: { content: this.l10n.getConstant('OKButton'),\n                    cssClass: this.parent.cssClass ? 'e-primary' + ' ' + this.parent.cssClass : 'e-primary',\n                    isPrimary: true }\n            },\n            {\n                click: this.dlgCancel.bind(this),\n                buttonModel: { cssClass: this.parent.cssClass ? 'e-flat' + ' ' + this.parent.cssClass : 'e-flat',\n                    content: this.l10n.getConstant('CancelButton') }\n            }\n        ], 'EditConfirm');\n    };\n    Edit.prototype.createAlertDlg = function () {\n        this.alertDObj = this.dlgWidget([\n            {\n                click: this.alertClick.bind(this),\n                buttonModel: { content: this.l10n.getConstant('OKButton'),\n                    cssClass: this.parent.cssClass ? 'e-flat' + ' ' + this.parent.cssClass : 'e-flat',\n                    isPrimary: true }\n            }\n        ], 'EditAlert');\n    };\n    Edit.prototype.alertClick = function () {\n        this.alertDObj.hide();\n    };\n    Edit.prototype.dlgWidget = function (btnOptions, name) {\n        var div = this.parent.createElement('div', { id: this.parent.element.id + name });\n        this.parent.element.appendChild(div);\n        var options = {\n            showCloseIcon: false,\n            isModal: true,\n            visible: false,\n            closeOnEscape: true,\n            target: this.parent.element,\n            width: '320px',\n            animationSettings: { effect: 'None' },\n            cssClass: this.parent.cssClass ? this.parent.cssClass : ''\n        };\n        options.buttons = btnOptions;\n        var obj = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_10__.Dialog(options);\n        var isStringTemplate = 'isStringTemplate';\n        obj[\"\" + isStringTemplate] = true;\n        obj.appendTo(div);\n        return obj;\n    };\n    Edit.prototype.dlgCancel = function () {\n        if (this.parent.pagerModule) {\n            this.parent.pagerModule.isForceCancel = false;\n        }\n        this.parent.focusModule.clearIndicator();\n        this.dialogObj.hide();\n        this.parent.focusModule.restoreFocus({ requestType: 'cancel' });\n        this.parent.notify('cancelcnfrmDlg', {});\n    };\n    Edit.prototype.dlgOk = function () {\n        switch (this.dialogObj.element.querySelector('.e-dlg-content').firstElementChild.innerText) {\n            case this.l10n.getConstant('ConfirmDelete'):\n                this.editModule.deleteRecord(this.fieldname, this.data);\n                if (this.parent.editSettings.showDeleteConfirmDialog && !this.parent.allowSelection) {\n                    this.parent.commandDelIndex = undefined;\n                }\n                break;\n            case this.l10n.getConstant('CancelEdit'):\n                this.editModule.closeEdit();\n                break;\n            case this.l10n.getConstant('BatchSaveConfirm'):\n                this.endEditing();\n                break;\n            case this.l10n.getConstant('BatchSaveLostChanges'):\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.editModule.addCancelWhilePaging();\n                }\n                if (this.parent.pagerModule) {\n                    this.parent.pagerModule.isForceCancel = false;\n                }\n                this.executeAction();\n                break;\n        }\n        this.dlgCancel();\n    };\n    Edit.prototype.destroyEditComponents = function () {\n        if (this.parent.isEdit) {\n            this.destroyWidgets();\n            this.destroyForm();\n        }\n        this.destroy();\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.eventDetails = [{ event: _base_constant__WEBPACK_IMPORTED_MODULE_1__.inBoundModelChanged, handler: this.onPropertyChanged },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_1__.initialEnd, handler: this.initialEnd },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_1__.keyPressed, handler: this.keyPressHandler },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_1__.autoCol, handler: this.updateColTypeObj },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_1__.tooltipDestroy, handler: this.destroyToolTip },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_1__.preventBatch, handler: this.preventBatch },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_1__.destroyForm, handler: this.destroyForm },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_1__.destroy, handler: this.destroyEditComponents }];\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.addRemoveEventListener)(this.parent, this.eventDetails, true, this);\n        this.actionBeginFunction = this.onActionBegin.bind(this);\n        this.actionCompleteFunction = this.actionComplete.bind(this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.destroyEditForm, this.actionBeginFunction);\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_1__.actionComplete, this.actionCompleteFunction);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.addRemoveEventListener)(this.parent, this.eventDetails, false);\n        this.parent.removeEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_1__.actionComplete, this.actionCompleteFunction);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.destroyEditForm, this.actionBeginFunction);\n    };\n    Edit.prototype.actionComplete = function (e) {\n        var actions = ['add', 'beginEdit', 'save', 'delete', 'cancel', 'filterAfterOpen', 'filterchoicerequest'];\n        if (actions.indexOf(e.requestType) < 0) {\n            this.parent.isEdit = this.parent.editSettings.showAddNewRow ? true : false;\n        }\n        if (e.requestType === 'batchsave') {\n            this.parent.focusModule.restoreFocus({ requestType: 'save' });\n        }\n        this.refreshToolbar();\n    };\n    /**\n     * @param {Element} form - specifies the element\n     * @param {Object} editedData - specifies the edited data\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    Edit.prototype.getCurrentEditedData = function (form, editedData) {\n        var gObj = this.parent;\n        if (gObj.editSettings.template) {\n            var elements = [].slice.call(form.elements);\n            for (var k = 0; k < elements.length; k++) {\n                if (((elements[parseInt(k.toString(), 10)].hasAttribute('name') && (elements[parseInt(k.toString(), 10)].className !== 'e-multi-hidden')) ||\n                    elements[parseInt(k.toString(), 10)].classList.contains('e-multiselect')) && !(elements[parseInt(k.toString(), 10)].type === 'hidden' &&\n                    ((0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(elements[parseInt(k.toString(), 10)], 'e-switch-wrapper') || (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(elements[parseInt(k.toString(), 10)], 'e-checkbox-wrapper')))) {\n                    var field = (elements[parseInt(k.toString(), 10)].hasAttribute('name')) ? (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.setComplexFieldID)(elements[parseInt(k.toString(), 10)].getAttribute('name')) :\n                        (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.setComplexFieldID)(elements[parseInt(k.toString(), 10)].getAttribute('id'));\n                    var column = gObj.getColumnByField(field) || { field: field, type: elements[parseInt(k.toString(), 10)].getAttribute('type') };\n                    var value = void 0;\n                    if (column.type === 'checkbox' || column.type === 'boolean') {\n                        value = elements[parseInt(k.toString(), 10)].checked;\n                    }\n                    else if (elements[parseInt(k.toString(), 10)].value) {\n                        value = elements[parseInt(k.toString(), 10)].value;\n                        if (elements[parseInt(k.toString(), 10)].ej2_instances &&\n                            elements[parseInt(k.toString(), 10)].ej2_instances.length &&\n                            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(elements[parseInt(k.toString(), 10)].ej2_instances[0].value)) {\n                            elements[parseInt(k.toString(), 10)].blur();\n                            value = elements[parseInt(k.toString(), 10)]\n                                .ej2_instances[0].value;\n                        }\n                    }\n                    else if (elements[parseInt(k.toString(), 10)].ej2_instances) {\n                        value = elements[parseInt(k.toString(), 10)]\n                            .ej2_instances[0].value;\n                    }\n                    if (column.edit && typeof column.edit.read === 'string') {\n                        value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(column.edit.read, window)(elements[parseInt(k.toString(), 10)], value);\n                    }\n                    else if (column.edit && column.edit.read) {\n                        value = column.edit.read(elements[parseInt(k.toString(), 10)], value);\n                    }\n                    value = gObj.editModule.getValueFromType(column, value);\n                    if (elements[parseInt(k.toString(), 10)].type === 'radio') {\n                        if (elements[parseInt(k.toString(), 10)].checked) {\n                            _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_15__.DataUtil.setValue(column.field, value, editedData);\n                        }\n                    }\n                    else {\n                        if (typeof value === 'string') {\n                            this.parent.sanitize(value);\n                        }\n                        _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_15__.DataUtil.setValue(column.field, value, editedData);\n                    }\n                }\n            }\n            return editedData;\n        }\n        var col = gObj.columnModel.filter(function (col) { return col.editTemplate; });\n        for (var j = 0; j < col.length; j++) {\n            if (form[(0,_base_util__WEBPACK_IMPORTED_MODULE_11__.getComplexFieldID)(col[parseInt(j.toString(), 10)].field)]) {\n                var inputElements = [].slice.call(form[(0,_base_util__WEBPACK_IMPORTED_MODULE_11__.getComplexFieldID)(col[parseInt(j.toString(), 10)].field)])\n                    .filter(function (element) { return element.tagName.toLowerCase() === 'input'; });\n                inputElements = inputElements.length ? inputElements : [form[(0,_base_util__WEBPACK_IMPORTED_MODULE_11__.getComplexFieldID)(col[parseInt(j.toString(), 10)].field)]];\n                var temp = inputElements.filter(function (e) {\n                    return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((e.ej2_instances));\n                });\n                if (temp.length === 0) {\n                    temp = inputElements.filter(function (e) { return e.hasAttribute('name'); });\n                }\n                for (var k = 0; k < temp.length; k++) {\n                    var value = this.getValue(col[parseInt(j.toString(), 10)], temp[parseInt(k.toString(), 10)], editedData);\n                    if (col[parseInt(j.toString(), 10)].type === 'string') {\n                        value = this.parent.sanitize(value);\n                    }\n                    _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_15__.DataUtil.setValue(col[parseInt(j.toString(), 10)].field, value, editedData);\n                }\n            }\n        }\n        var inputs = [].slice.call(form.getElementsByClassName('e-field'));\n        for (var i = 0, len = inputs.length; i < len; i++) {\n            var col_1 = gObj.getColumnByUid(inputs[parseInt(i.toString(), 10)].getAttribute('e-mappinguid'));\n            if (col_1 && col_1.field) {\n                var value = this.getValue(col_1, inputs[parseInt(i.toString(), 10)], editedData);\n                if (col_1.type === 'string' && !(col_1.isForeignColumn() && typeof value !== 'string')) {\n                    value = this.parent.sanitize(value);\n                }\n                _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_15__.DataUtil.setValue(col_1.field, value, editedData);\n            }\n        }\n        return editedData;\n    };\n    Edit.prototype.getValue = function (col, input, editedData) {\n        var value = input.ej2_instances ?\n            input.ej2_instances[0].value : input.value;\n        var gObj = this.parent;\n        var temp = col.edit.read;\n        if (col.type === 'checkbox' || col.type === 'boolean') {\n            value = input.checked;\n        }\n        if (typeof temp === 'string') {\n            temp = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(temp, window);\n            value = gObj.editModule.getValueFromType(col, (temp)(input, value));\n        }\n        else {\n            value = gObj.editModule.getValueFromType(col, col.edit.read(input, value));\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(editedData[col.field]) && value === '') {\n            value = editedData[col.field];\n        }\n        return value;\n    };\n    /**\n     * @param {NotifyArgs} e - specifies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.onActionBegin = function (e) {\n        if ((e.requestType === 'columnstate' || (this.parent.enableInfiniteScrolling && this.parent.infiniteScrollSettings.enableCache\n            && e.requestType === 'sorting')) && this.parent.isEdit && this.parent.editSettings.mode !== 'Batch') {\n            this.closeEdit();\n        }\n        else {\n            var editRow = this.parent.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.editedRow);\n            var addRow = this.parent.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.addedRow);\n            if (editRow && this.parent.frozenRows && e.requestType === 'virtualscroll'\n                && parseInt((0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(editRow, _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.row).getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_16__.ariaRowIndex), 10) - 1 < this.parent.frozenRows) {\n                return;\n            }\n            var restrictedRequestTypes = ['filterAfterOpen', 'filterBeforeOpen', 'filterchoicerequest', 'filterSearchBegin', 'save', 'infiniteScroll', 'virtualscroll'];\n            var isRestrict = restrictedRequestTypes.indexOf(e.requestType) === -1;\n            var isAddRows = !this.parent.editSettings.showAddNewRow || (this.parent.editSettings.showAddNewRow &&\n                !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.element.querySelector('.e-editedrow')));\n            var isDestroyVirtualForm = (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && this.formObj\n                && isAddRows && !this.formObj.isDestroyed && (editRow || addRow || e.requestType === 'cancel') && isRestrict;\n            if ((!this.parent.enableVirtualization && isAddRows && this.parent.editSettings.mode !== 'Batch' && this.formObj && !this.formObj.isDestroyed\n                && isRestrict && !e.cancel) || isDestroyVirtualForm) {\n                this.destroyWidgets();\n                this.destroyForm();\n            }\n        }\n    };\n    /**\n     * @param {Column[]} cols - specfies the column\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroyWidgets = function (cols) {\n        var gObj = this.parent;\n        gObj.isWidgetsDestroyed = true;\n        if (gObj.editSettings.template) {\n            var parentIns = (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.getParentIns)(this.parent);\n            parentIns = parentIns.isReact ? parentIns : this.parent;\n            parentIns.destroyTemplate(['editSettingsTemplate']);\n            if (this.parent.isReact) {\n                this.parent.renderTemplates();\n            }\n        }\n        if (this.parent.editSettings.mode === 'Dialog' && this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n            cols = [];\n            var allColumns = this.parent.getColumns();\n            for (var i = 0; i < allColumns.length; i++) {\n                var column = allColumns[parseInt(i.toString(), 10)];\n                if (column.visible || (this.parent.groupSettings.columns.indexOf(column.field) > -1)) {\n                    cols.push(column);\n                }\n            }\n        }\n        else {\n            cols = cols ? cols : this.parent.getCurrentVisibleColumns(this.parent.enableColumnVirtualization);\n        }\n        if (cols.some(function (column) { return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.editTemplate); })) {\n            this.parent.destroyTemplate(['editTemplate']);\n            if (this.parent.isReact) {\n                this.parent.renderTemplates();\n            }\n        }\n        for (var _i = 0, cols_1 = cols; _i < cols_1.length; _i++) {\n            var col = cols_1[_i];\n            var temp = col.edit.destroy;\n            if (col.edit.destroy) {\n                if (typeof temp === 'string') {\n                    temp = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(temp, window);\n                    temp();\n                }\n                else {\n                    col.edit.destroy();\n                }\n            }\n        }\n        var elements = [].slice.call(this.formObj.element.elements);\n        for (var i = 0; i < elements.length; i++) {\n            var element = elements[parseInt(i.toString(), 10)];\n            if (element.hasAttribute('name')) {\n                var instanceElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.parentElement) ? null : element.parentElement.classList.contains('e-ddl') ?\n                    element.parentElement.querySelector('input') : element;\n                if (instanceElement && instanceElement.ej2_instances &&\n                    instanceElement.ej2_instances.length &&\n                    !instanceElement.ej2_instances[0].isDestroyed) {\n                    instanceElement.ej2_instances[0].destroy();\n                    instanceElement.remove();\n                }\n            }\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.destroyToolTip();\n        var formObjects = [this.formObj, this.virtualFormObj];\n        var col = this.parent.columnModel.filter(function (col) { return col.editTemplate; });\n        for (var i = 0; i < formObjects.length; i++) {\n            if (formObjects[parseInt(i.toString(), 10)] && formObjects[parseInt(i.toString(), 10)].element\n                && !formObjects[parseInt(i.toString(), 10)].isDestroyed) {\n                formObjects[parseInt(i.toString(), 10)].destroy();\n                var parentIns = (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.getParentIns)(this.parent);\n                if (parentIns.isReact && this.parent.editSettings.mode === 'Dialog'\n                    && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.editSettings.template) || col.length)) {\n                    formObjects[parseInt(i.toString(), 10)].element.remove();\n                }\n            }\n        }\n        this.destroyToolTip();\n    };\n    /**\n     * To destroy the editing.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        var gridElement = this.parent.element;\n        if (!gridElement) {\n            return;\n        }\n        var hasGridChild = gridElement.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.gridHeader) &&\n            gridElement.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.gridContent) ? true : false;\n        if (hasGridChild) {\n            this.destroyForm();\n        }\n        this.removeEventListener();\n        var elem = this.dialogObj.element;\n        if (elem.childElementCount > 0) {\n            this.dialogObj.destroy();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(elem);\n        }\n        elem = this.alertDObj.element;\n        if (elem.childElementCount > 0) {\n            this.alertDObj.destroy();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(elem);\n        }\n        if (!hasGridChild) {\n            return;\n        }\n        if (this.editModule) {\n            this.editModule.destroy();\n        }\n    };\n    Edit.prototype.keyPressHandler = function (e) {\n        var isMacLike = /(Mac)/i.test(navigator.platform);\n        if (isMacLike && e.metaKey && e.action === 'ctrlEnter') {\n            e.action = 'insert';\n        }\n        switch (e.action) {\n            case 'insert':\n                this.addRecord();\n                break;\n            case 'delete':\n                if ((e.target.tagName !== 'INPUT' || e.target.classList.contains('e-checkselect'))\n                    && !document.querySelector('.e-popup-open.e-edit-dialog')) {\n                    this.deleteRecord();\n                }\n                break;\n            case 'f2':\n                this.startEdit();\n                break;\n            case 'enter':\n                if (!(0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(e.target, 'e-unboundcelldiv') && this.parent.editSettings.mode !== 'Batch' &&\n                    ((0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.gridContent) || ((this.parent.frozenRows ||\n                        (this.parent.editSettings.showAddNewRow && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)))\n                        && (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.headerContent)))\n                    && (!document.getElementsByClassName('e-popup-open').length || (document.querySelectorAll('.e-popup-open .e-editcell').length &&\n                        !document.querySelectorAll('.e-popup-open:not(.e-dialog)').length))) {\n                    e.preventDefault();\n                    if (this.parent.isEdit) {\n                        this.parent.isFocusFirstCell = true;\n                    }\n                    this.endEdit();\n                }\n                break;\n            case 'escape':\n                if (this.parent.isEdit && !this.editCellDialogClose) {\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.editModule.escapeCellEdit();\n                    }\n                    else {\n                        this.curretRowFocus(e);\n                    }\n                }\n                if (this.editCellDialogClose) {\n                    this.editCellDialogClose = false;\n                }\n                break;\n            case 'tab':\n            case 'shiftTab':\n                this.curretRowFocus(e);\n                break;\n        }\n    };\n    Edit.prototype.curretRowFocus = function (e) {\n        if (this.parent.isEdit && this.parent.editSettings.mode !== 'Batch') {\n            this.parent.isWidgetsDestroyed = false;\n            var editedRow = (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(e.target, 'e-editedrow') || (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(e.target, 'e-addedrow');\n            if (editedRow) {\n                var focusableEditCells = [].slice.call(editedRow.querySelectorAll('.e-input:not(.e-disabled)'));\n                var commandColCell = [].slice.call(editedRow.querySelectorAll('.e-unboundcell'));\n                if (commandColCell && commandColCell.length) {\n                    for (var i = 0; i < commandColCell.length; i++) {\n                        focusableEditCells = focusableEditCells.concat([].slice\n                            .call(commandColCell[parseInt(i.toString(), 10)].querySelectorAll('.e-btn:not(.e-hide)')));\n                    }\n                }\n                var rowCell = (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(e.target, 'e-rowcell');\n                rowCell = rowCell && rowCell.classList.contains('e-unboundcell') ? e.target : rowCell;\n                var lastCell = (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(focusableEditCells[focusableEditCells.length - 1], 'e-rowcell');\n                lastCell = lastCell && lastCell.classList.contains('e-unboundcell') ?\n                    focusableEditCells[focusableEditCells.length - 1] : lastCell;\n                if ((rowCell === lastCell && e.action === 'tab') || e.action === 'escape' ||\n                    (rowCell === (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(focusableEditCells[0], 'e-rowcell') && e.action === 'shiftTab' &&\n                        !this.parent.editSettings.showAddNewRow)) {\n                    var uid = editedRow.getAttribute('data-uid');\n                    var rows = this.parent.allowGrouping ? (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.getContent()) ?\n                        [].slice.call(this.parent.getContent().querySelectorAll('tr')) : []) : this.parent.getRows();\n                    var rowIndex = rows.map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n                    if (this.parent.frozenRows) {\n                        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(editedRow, 'e-gridheader')) {\n                            rowIndex = editedRow.rowIndex;\n                        }\n                        else if ((0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(editedRow, 'e-gridcontent')) {\n                            rowIndex = rowIndex - this.parent.frozenRows;\n                        }\n                    }\n                    if (editedRow.classList.contains('e-addedrow')) {\n                        rowIndex = 0;\n                    }\n                    if (e.action === 'escape') {\n                        this.parent.isFocusFirstCell = true;\n                        this.closeEdit();\n                    }\n                    else {\n                        this.isShowAddedRowValidate = true;\n                        this.parent.selectionModule.preventFocus = false;\n                        this.parent.isFocusFirstCell = true;\n                        this.endEdit();\n                        this.isShowAddedRowValidate = false;\n                    }\n                    if (this.parent.focusModule.active && (!this.parent.editSettings.showAddNewRow ||\n                        editedRow.classList.contains('e-editedrow') || (this.parent.editSettings.showAddNewRow &&\n                        (editedRow.classList.contains('e-addedrow') && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.element.querySelector('.e-griderror:not([style*=\"display: none\"])')))))) {\n                        var firstCellIndex = 0;\n                        var matrix = this.parent.focusModule.active.matrix;\n                        if (matrix && matrix.matrix.length && matrix.matrix[parseInt(rowIndex.toString(), 10)]) {\n                            var rowMatrix = matrix.matrix[parseInt(rowIndex.toString(), 10)];\n                            for (var i = 0; i < rowMatrix.length; i++) {\n                                if (rowMatrix[parseInt(i.toString(), 10)] > 0) {\n                                    firstCellIndex = i;\n                                    break;\n                                }\n                            }\n                        }\n                        var firstCell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(rowIndex + \".cells.\" + firstCellIndex, this.parent.focusModule.active.matrix.getRowsFromIndex(rowIndex, this.parent.focusModule.active));\n                        if (firstCell && firstCell.getBoundingClientRect().width === 0) {\n                            var firstContentCellIndex = this.parent.focusModule.active.matrix.nextVisibleCellFocus(rowIndex, firstCellIndex, e.action, this.parent.focusModule.active.keyActions[e.action], this.parent.focusModule.active, this.parent.focusModule.active.matrix.current[1]);\n                            firstCellIndex = firstContentCellIndex[1];\n                        }\n                        this.parent.focusModule.active.matrix.current = [rowIndex, firstCellIndex];\n                    }\n                }\n                if (this.parent.editSettings.showAddNewRow && e.action === 'tab' && (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(e.target, 'e-addedrow')) {\n                    this.isShowAddedRowValidate = true;\n                }\n            }\n        }\n    };\n    Edit.prototype.preventBatch = function (args) {\n        this.preventObj = args;\n        this.showDialog('BatchSaveLostChanges', this.dialogObj);\n    };\n    Edit.prototype.executeAction = function () {\n        this.preventObj.handler.call(this.preventObj.instance, this.preventObj.arg1, this.preventObj.arg2, this.preventObj.arg3, this.preventObj.arg4, this.preventObj.arg5, this.preventObj.arg6, this.preventObj.arg7, this.preventObj.arg8);\n    };\n    /**\n     * @param {Column[]} cols - specifies the column\n     * @param {Object} newRule - specifies the new rule object\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols, newRule) {\n        var gObj = this.parent;\n        var idx = 0;\n        var form = this.parent.editSettings.mode !== 'Dialog' ?\n            gObj.editSettings.showAddNewRow && gObj.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.editedRow) ?\n                gObj.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.editedRow).getElementsByClassName('e-gridform')[parseInt(idx.toString(), 10)] :\n                gObj.element.getElementsByClassName('e-gridform')[parseInt(idx.toString(), 10)] :\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + gObj.element.id + '_dialogEdit_wrapper .e-gridform', document);\n        var index = 1;\n        var rules = {};\n        var mRules = {};\n        var frRules = {};\n        cols = cols ? cols : gObj.getColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (!cols[parseInt(i.toString(), 10)].visible && (gObj.editSettings.mode !== 'Dialog' || (gObj.groupSettings.columns.indexOf(cols[parseInt(i.toString(), 10)].field) === -1\n                && gObj.editSettings.mode === 'Dialog'))) {\n                continue;\n            }\n            if (cols[parseInt(i.toString(), 10)].validationRules && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newRule)) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.setValidationRuels)(cols[parseInt(i.toString(), 10)], index, rules, mRules, frRules, cols.length);\n            }\n        }\n        rules = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(rules, mRules, frRules);\n        this.parent.editModule.formObj = this.createFormObj(form, newRule ? newRule : rules);\n    };\n    /**\n     * @param {HTMLFormElement} form - Defined Form element\n     * @param {Object} rules - Defines form rules\n     * @returns {FormValidator} Returns formvalidator instance\n     * @hidden\n     */\n    Edit.prototype.createFormObj = function (form, rules) {\n        var _this = this;\n        return new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_12__.FormValidator(form, {\n            rules: rules,\n            locale: this.parent.locale,\n            validationComplete: function (args) {\n                _this.validationComplete(args);\n            },\n            customPlacement: function (inputElement, error) {\n                var uid = inputElement.getAttribute('e-mappinguid');\n                var args = {\n                    column: _this.parent.getColumnByUid(uid),\n                    error: error,\n                    inputElement: inputElement,\n                    value: inputElement.value\n                };\n                if ((!(event && event['relatedTarget'] && event['relatedTarget'].classList.contains('e-cancelbutton')) &&\n                    !_this.parent.editSettings.showAddNewRow) || (_this.parent.editSettings.showAddNewRow && event && event.target &&\n                    ((0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(event.target, _this.parent.element.id + '_update', true) ||\n                        ((0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(event.target, 'e-grid-menu') && (event.target.classList.contains('e-save') ||\n                            event.target.querySelector('.e-save'))) || _this.isShowAddedRowValidate ||\n                        ((0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(event.target, 'e-unboundcell') && (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(event.target, 'e-update')) ||\n                        (event['action'] === 'enter' && ((0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(event.target, 'e-content') || (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(event.target, 'e-addedrow'))))) ||\n                    (_this.parent.editSettings.showAddNewRow && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.parent.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.editedRow)))) {\n                    _this.valErrorPlacement(inputElement, error);\n                }\n                _this.isShowAddedRowValidate = false;\n                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.valCustomPlacement, args);\n            }\n        });\n    };\n    Edit.prototype.valErrorPlacement = function (inputElement, error) {\n        if (this.parent.isEdit) {\n            var id = error.getAttribute('for');\n            var elem = this.getElemTable(inputElement).querySelector('#' + (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.getParsedFieldID)(id) + '_Error');\n            if (!elem) {\n                this.createTooltip(inputElement, error, id, '');\n            }\n            else {\n                elem.querySelector('.e-tip-content').innerHTML = error.outerHTML;\n            }\n        }\n    };\n    Edit.prototype.getElemTable = function (inputElement) {\n        var isFrozenHdr;\n        var gObj = this.parent;\n        var table;\n        if (gObj.editSettings.mode !== 'Dialog') {\n            isFrozenHdr = (gObj.frozenRows && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(inputElement, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.row) && gObj.frozenRows\n                > (parseInt((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(inputElement, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.row).getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_16__.ariaRowIndex), 10) - 1 || 0));\n            table = this.parent.isFrozenGrid() ? gObj.element : isFrozenHdr || (gObj.editSettings.showAddNewRow &&\n                (gObj.enableVirtualization || gObj.enableInfiniteScrolling)) ? gObj.getHeaderTable() : gObj.getContentTable();\n        }\n        else {\n            table = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + gObj.element.id + '_dialogEdit_wrapper', document);\n        }\n        return table;\n    };\n    Edit.prototype.resetElemPosition = function (elem, args) {\n        var td = (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(args.element, _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.rowCell);\n        if (td) {\n            var tdRight = td.getBoundingClientRect().right;\n            var elemRight = elem.getBoundingClientRect().right;\n            if (elemRight > tdRight) {\n                var offSet = elemRight - tdRight;\n                elem.style.left = (elem.offsetLeft - offSet) + 'px';\n            }\n        }\n    };\n    Edit.prototype.validationComplete = function (args) {\n        if (this.parent.isEdit) {\n            var elem = this.getElemTable(args.element).querySelector('#' + (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.getParsedFieldID)(args.inputName) + '_Error');\n            if (this.parent.editSettings.showAddNewRow && !elem && args.element) {\n                var error = (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(args.element, 'e-rowcell').querySelector('.e-error');\n                if (error) {\n                    error.classList.remove('e-error');\n                }\n            }\n            if (elem) {\n                if (args.status === 'failure') {\n                    elem.style.display = '';\n                    this.resetElemPosition(elem, args);\n                }\n                else {\n                    elem.style.display = 'none';\n                }\n            }\n        }\n    };\n    Edit.prototype.createTooltip = function (element, error, name, display) {\n        var formObj = this.formObj.element;\n        var customForm = (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(element, 'e-virtual-validation');\n        if (customForm) {\n            formObj = this.virtualFormObj.element;\n        }\n        var gcontent = this.parent.getContent().firstElementChild;\n        var isScroll = gcontent.scrollHeight > gcontent.clientHeight || gcontent.scrollWidth > gcontent.clientWidth;\n        var isInline = this.parent.editSettings.mode !== 'Dialog';\n        var td = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.rowCell);\n        var row = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.row);\n        var isFHdr;\n        var isFHdrLastRow = false;\n        var validationForBottomRowPos;\n        var isBatchModeLastRow = false;\n        var isAddNewRow = this.parent.editSettings.showAddNewRow && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_base_util__WEBPACK_IMPORTED_MODULE_11__.parentsUntil)(element, _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.addedRow))\n            && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling);\n        var viewPortRowCount = Math.round(this.parent.getContent().clientHeight / this.parent.getRowHeight()) - 1;\n        var rows = [].slice.call(this.parent.getContent().getElementsByClassName(_base_string_literals__WEBPACK_IMPORTED_MODULE_16__.row));\n        if (this.parent.editSettings.mode === 'Batch') {\n            rows = [].slice.call(this.parent.getContent().querySelectorAll('.e-row:not(.e-hiddenrow)'));\n            if (viewPortRowCount > 1 && rows.length > viewPortRowCount && parseInt(rows[rows.length - 1].\n                getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_16__.ariaRowIndex), 10) - 1 === parseInt(row.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_16__.ariaRowIndex), 10) - 1) {\n                isBatchModeLastRow = true;\n            }\n        }\n        if (isInline) {\n            if (this.parent.frozenRows || isAddNewRow) {\n                var headerRows = this.parent.editSettings.showAddNewRow ? '.e-row:not(.e-hiddenrow.e-addedrow)' :\n                    '.e-row:not(.e-hiddenrow)';\n                var fHearderRows = [].slice.call(this.parent.getHeaderTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_16__.tbody).querySelectorAll(headerRows));\n                isFHdr = fHearderRows.length > (parseInt(row.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_16__.ariaRowIndex), 10) - 1 || 0);\n                isFHdrLastRow = isFHdr && parseInt(row.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_16__.ariaRowIndex), 10) - 1 === fHearderRows.length - 1;\n                var insertRow = [].slice.call(this.parent.getHeaderTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_16__.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n                if (insertRow.length === 1 && (insertRow[0].classList.contains('e-addedrow') || insertRow[0].classList.contains('e-insertedrow'))) {\n                    isFHdrLastRow = true;\n                }\n            }\n            if (isFHdrLastRow || (viewPortRowCount > 1 && rows.length > viewPortRowCount\n                && ((this.parent.editSettings.newRowPosition === 'Bottom' && (this.editModule.args\n                    && this.editModule.args.requestType === 'add')) || (td.classList.contains('e-lastrowcell')\n                    && !row.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_16__.addedRow)))) || isBatchModeLastRow) {\n                validationForBottomRowPos = true;\n            }\n        }\n        var table = isInline ?\n            (isFHdr ? this.parent.getHeaderTable() : this.parent.getContentTable()) :\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + this.parent.element.id + '_dialogEdit_wrapper .e-dlg-content', document);\n        var client = table.getBoundingClientRect();\n        var left = isInline ?\n            this.parent.element.getBoundingClientRect().left : client.left;\n        var input = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, 'td');\n        var inputClient = input ? input.getBoundingClientRect() : element.parentElement.getBoundingClientRect();\n        var div = this.parent.createElement('div', {\n            className: 'e-tooltip-wrap e-lib e-control e-popup e-griderror',\n            id: name + '_Error'\n        });\n        var divStyles = 'display:' + display + ';top:' +\n            ((isFHdr ? inputClient.top + inputClient.height : inputClient.bottom - client.top) + table.scrollTop + 9) + 'px;left:' +\n            (inputClient.left - left + table.scrollLeft + inputClient.width / 2) + 'px;' +\n            'max-width:' + inputClient.width + 'px;text-align:center;';\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.updateCSSText)(div, divStyles);\n        if (this.parent.cssClass) {\n            div.classList.add(this.parent.cssClass);\n        }\n        if (isInline && client.left < left) {\n            div.style.left = parseInt(div.style.left, 10) - client.left + left + 'px';\n        }\n        var content = this.parent.createElement('div', { className: 'e-tip-content' });\n        content.appendChild(error);\n        var arrow;\n        if (validationForBottomRowPos) {\n            arrow = this.parent.createElement('div', { className: 'e-arrow-tip e-tip-bottom' });\n            arrow.appendChild(this.parent.createElement('div', { className: 'e-arrow-tip-outer e-tip-bottom' }));\n            arrow.appendChild(this.parent.createElement('div', { className: 'e-arrow-tip-inner e-tip-bottom' }));\n        }\n        else {\n            arrow = this.parent.createElement('div', { className: 'e-arrow-tip e-tip-top' });\n            arrow.appendChild(this.parent.createElement('div', { className: 'e-arrow-tip-outer e-tip-top' }));\n            arrow.appendChild(this.parent.createElement('div', { className: 'e-arrow-tip-inner e-tip-top' }));\n        }\n        div.appendChild(content);\n        div.appendChild(arrow);\n        if (!customForm && (this.parent.frozenRows || isAddNewRow) && this.parent.editSettings.mode !== 'Dialog') {\n            var getEditCell = this.parent.editSettings.mode === 'Normal' ?\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-editcell') : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.table);\n            getEditCell.style.position = 'relative';\n            div.style.position = 'absolute';\n            if (this.parent.editSettings.mode === 'Batch' ||\n                ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.frozenContent) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_16__.frozenHeader))\n                || (this.parent.frozenRows || isAddNewRow)) {\n                if (this.parent.isFrozenGrid()) {\n                    if (td.classList.contains('e-unfreeze')) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([div], 'e-unfreeze');\n                        formObj.appendChild(div);\n                    }\n                    else {\n                        var elem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(td, '.e-gridheader') ? this.parent.element.querySelector('.e-gridheader') :\n                            rows.length === 1 ? this.parent.element.querySelector('.e-gridcontent').querySelector('.e-content') :\n                                this.parent.element.querySelector('.e-gridcontent');\n                        elem.appendChild(div);\n                        elem.style.position = 'relative';\n                    }\n                }\n                else {\n                    formObj.appendChild(div);\n                }\n            }\n        }\n        else {\n            if (customForm) {\n                this.virtualFormObj.element.appendChild(div);\n            }\n            else {\n                if (this.parent.editSettings.mode !== 'Dialog' && this.parent.isFrozenGrid()) {\n                    if (td.classList.contains('e-unfreeze')) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([div], 'e-unfreeze');\n                        this.formObj.element.appendChild(div);\n                    }\n                    else {\n                        var elem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(td, '.e-gridheader') ? this.parent.element.querySelector('.e-gridheader') :\n                            rows.length === 1 ? this.parent.element.querySelector('.e-gridcontent').querySelector('.e-content') :\n                                this.parent.element.querySelector('.e-gridcontent');\n                        elem.appendChild(div);\n                        elem.style.position = 'relative';\n                    }\n                }\n                else {\n                    this.formObj.element.appendChild(div);\n                }\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(td)) {\n            if (td.classList.contains('e-fixedfreeze')) {\n                div.classList.add('e-fixederror');\n            }\n            else if (td.classList.contains('e-leftfreeze') || td.classList.contains('e-rightfreeze')) {\n                div.classList.add('e-freezeerror');\n            }\n        }\n        if (!validationForBottomRowPos && isInline && gcontent.getBoundingClientRect().bottom < inputClient.bottom + inputClient.height) {\n            var contentDiv = this.parent.getContent().querySelector('.e-content');\n            if (this.parent.currentViewData.length === 0 && contentDiv.scrollTop === 0) {\n                contentDiv.scrollTop = div.offsetHeight + arrow.scrollHeight;\n            }\n            else {\n                gcontent.scrollTop = gcontent.scrollTop + div.offsetHeight + arrow.scrollHeight;\n            }\n        }\n        var lineHeight = parseInt(document.defaultView.getComputedStyle(div, null).getPropertyValue('font-size'), 10);\n        if ((this.parent.frozenRows || isAddNewRow) && this.parent.editSettings.mode !== 'Dialog') {\n            div.style.left = input.offsetLeft + (input.offsetWidth / 2 - div.offsetWidth / 2) + 'px';\n        }\n        else {\n            div.style.left = (parseInt(div.style.left, 10) - div.offsetWidth / 2) + 'px';\n        }\n        if (div.getBoundingClientRect().width < inputClient.width &&\n            div.querySelector('label').getBoundingClientRect().height / (lineHeight * 1.2) >= 2) {\n            div.style.width = div.style.maxWidth;\n        }\n        if (isInline && !isScroll && !this.parent.allowPaging || (this.parent.frozenRows || isAddNewRow)) {\n            // gcontent.style.position = 'static';\n            var pos = (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_10__.calculateRelativeBasedPosition)(input, div);\n            div.style.top = pos.top + inputClient.height + 9 + 'px';\n        }\n        if (validationForBottomRowPos) {\n            if (isScroll && this.parent.height !== 'auto' && (!this.parent.frozenRows || !isAddNewRow)\n                && !this.parent.enableVirtualization && !this.parent.enableInfiniteScrolling && !(div.classList.contains('e-freezeerror')\n                && div.classList.contains('e-fixederror'))) {\n                var scrollWidth = gcontent.scrollWidth > gcontent.offsetWidth ? (0,_base_util__WEBPACK_IMPORTED_MODULE_11__.getScrollBarWidth)() : 0;\n                var gHeight = this.parent.height.toString().indexOf('%') === -1 ?\n                    parseInt(this.parent.height, 10) : gcontent.offsetHeight;\n                div.style.bottom = (gHeight - gcontent.querySelector('table').offsetHeight\n                    - scrollWidth) + inputClient.height + 9 + 'px';\n            }\n            else {\n                div.style.bottom = inputClient.height + 9 + 'px';\n            }\n            if (rows.length < viewPortRowCount && this.parent.editSettings.newRowPosition === 'Bottom' && (this.editModule.args\n                && this.editModule.args.requestType === 'add')) {\n                var rowsCount = this.parent.frozenRows ? (isAddNewRow ? this.parent.frozenRows + 1 : this.parent.frozenRows) +\n                    (rows.length - 1) : rows.length - 1;\n                var rowsHeight = rowsCount * this.parent.getRowHeight();\n                var position = this.parent.getContent().clientHeight - rowsHeight;\n                div.style.bottom = position + 9 + 'px';\n            }\n            div.style.top = null;\n        }\n    };\n    /**\n     * @param {Column} col - specfies the column\n     * @returns {boolean} returns the whether column is grouped\n     * @hidden\n     */\n    Edit.prototype.checkColumnIsGrouped = function (col) {\n        return !col.visible && !(this.parent.groupSettings.columns.indexOf(col.field) > -1);\n    };\n    /**\n     * @param {object} editors -specfies the editors\n     * @returns {void}\n     * @hidden\n     */\n    Edit.AddEditors = function (editors) {\n        Edit.editCellType = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(Edit.editCellType, editors);\n    };\n    Edit.editCellType = {\n        'dropdownedit': _renderer_dropdown_edit_cell__WEBPACK_IMPORTED_MODULE_4__.DropDownEditCell, 'numericedit': _renderer_numeric_edit_cell__WEBPACK_IMPORTED_MODULE_5__.NumericEditCell,\n        'datepickeredit': _renderer_datepicker_edit_cell__WEBPACK_IMPORTED_MODULE_13__.DatePickerEditCell, 'datetimepickeredit': _renderer_datepicker_edit_cell__WEBPACK_IMPORTED_MODULE_13__.DatePickerEditCell,\n        'booleanedit': _renderer_boolean_edit_cell__WEBPACK_IMPORTED_MODULE_3__.BooleanEditCell, 'defaultedit': _renderer_default_edit_cell__WEBPACK_IMPORTED_MODULE_6__.DefaultEditCell,\n        'templateedit': _renderer_template_edit_cell__WEBPACK_IMPORTED_MODULE_14__.TemplateEditCell\n    };\n    return Edit;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-grids/src/grid/actions/edit.js?");

/***/ })

}]);