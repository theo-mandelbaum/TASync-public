"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-spreadsheet_src_workbook_actions_find-and-replace_js-7877f-dc9fab49"],{

/***/ "./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/actions/find-and-replace.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/actions/find-and-replace.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WorkbookFindAndReplace: () => (/* binding */ WorkbookFindAndReplace)\n/* harmony export */ });\n/* harmony import */ var _base_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/base/index.js\");\n/* harmony import */ var _common_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/common/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/index.js\");\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n\n\n\n\n\n/**\n * `WorkbookFindAndReplace` module is used to handle the search action in Spreadsheet.\n */\nvar WorkbookFindAndReplace = /** @class */ (function () {\n    /**\n     * Constructor for WorkbookFindAndReplace module.\n     *\n     * @param {Workbook} parent - Specifies the workbook.\n     */\n    function WorkbookFindAndReplace(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * To destroy the FindAndReplace module.\n     *\n     * @returns {void} - To destroy the FindAndReplace module.\n     */\n    WorkbookFindAndReplace.prototype.destroy = function () {\n        this.removeEventListener();\n        this.parent = null;\n    };\n    WorkbookFindAndReplace.prototype.addEventListener = function () {\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.find, this.find, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.replace, this.replace, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.replaceAll, this.replaceAll, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.count, this.totalCount, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.findAllValues, this.findAllValues, this);\n    };\n    WorkbookFindAndReplace.prototype.removeEventListener = function () {\n        if (!this.parent.isDestroyed) {\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.find, this.find);\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.replace, this.replace);\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.replaceAll, this.replaceAll);\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.count, this.totalCount);\n            this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.findAllValues, this.findAllValues);\n        }\n    };\n    WorkbookFindAndReplace.prototype.find = function (args) {\n        args.sheetIndex = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(args.sheetIndex) ? this.parent.activeSheetIndex : args.sheetIndex;\n        var sheet = this.parent.sheets[args.sheetIndex];\n        var activeCell = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getRangeIndexes)(sheet.activeCell);\n        var findArgs = { startRow: activeCell[0], startCol: activeCell[1],\n            findVal: args.isCSen ? args.value : args.value.toLowerCase(), activeCell: activeCell };\n        if (args.searchBy === 'By Row' ? findArgs.startRow > sheet.usedRange.rowIndex : findArgs.startCol > sheet.usedRange.colIndex) {\n            if (args.findOpt === 'next') {\n                findArgs.startRow = findArgs.startCol = 0;\n            }\n            else {\n                findArgs.startRow = sheet.usedRange.rowIndex;\n                findArgs.startCol = sheet.usedRange.colIndex;\n            }\n        }\n        else {\n            if (args.searchBy === 'By Row') {\n                if (findArgs.startCol > sheet.usedRange.colIndex) {\n                    if (args.findOpt === 'next') {\n                        findArgs.startRow++;\n                        if (findArgs.startRow > sheet.usedRange.rowIndex) {\n                            findArgs.startRow = 0;\n                        }\n                        findArgs.startCol = 0;\n                    }\n                    else {\n                        findArgs.startRow--;\n                        if (findArgs.startRow < 0) {\n                            findArgs.startRow = sheet.usedRange.rowIndex;\n                        }\n                        findArgs.startCol = sheet.usedRange.colIndex;\n                    }\n                }\n            }\n            else {\n                if (findArgs.startRow > sheet.usedRange.rowIndex) {\n                    if (args.findOpt === 'next') {\n                        findArgs.startCol++;\n                        if (findArgs.startCol > sheet.usedRange.colIndex) {\n                            findArgs.startRow = 0;\n                        }\n                        findArgs.startRow = 0;\n                    }\n                    else {\n                        findArgs.startCol--;\n                        if (findArgs.startCol < 0) {\n                            findArgs.startCol = sheet.usedRange.colIndex;\n                        }\n                        findArgs.startRow = sheet.usedRange.colIndex;\n                    }\n                }\n            }\n        }\n        if (args.mode === 'Workbook') {\n            findArgs.sheets = this.parent.sheets;\n            findArgs.sheetIdx = args.sheetIndex;\n        }\n        else {\n            findArgs.sheets = [sheet];\n            findArgs.sheetIdx = 0;\n        }\n        var headerHgt;\n        var hdrPanel = args.showDialog && this.parent.element && this.parent.element.querySelector('.e-header-panel');\n        if (hdrPanel) {\n            headerHgt = (hdrPanel.offsetHeight || (sheet.showHeaders ? 30 : 0)) + 1;\n        }\n        args.localeObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.getNumericObject)(this.parent.locale);\n        if (args.findOpt === 'next') {\n            this.findNext(args, findArgs);\n        }\n        else {\n            this.findPrevious(args, findArgs);\n        }\n        if (args.showDialog) {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.findToolDlg, { findValue: args.value, isPublic: true, headerHgt: headerHgt });\n        }\n    };\n    WorkbookFindAndReplace.prototype.findNext = function (args, findArgs) {\n        var _this = this;\n        var findOnSheet = function (startIdx, endIdx, initIteration) {\n            var sheet;\n            var cellAddr;\n            for (var sheetIdx = startIdx; sheetIdx <= endIdx; sheetIdx++) {\n                sheet = findArgs.sheets[sheetIdx];\n                if (sheetIdx === findArgs.sheetIdx) {\n                    if (initIteration) {\n                        cellAddr = _this.findNextOnSheet(args, findArgs.startRow, findArgs.startCol, findArgs.findVal, sheet, undefined, findArgs.activeCell);\n                    }\n                    else {\n                        cellAddr = _this.findNextOnSheet(args, 0, 0, findArgs.findVal, sheet, args.searchBy === 'By Row' ? findArgs.startRow : findArgs.startCol);\n                    }\n                }\n                else {\n                    cellAddr = _this.findNextOnSheet(args, 0, 0, findArgs.findVal, sheet);\n                }\n                if (cellAddr) {\n                    break;\n                }\n            }\n            return cellAddr;\n        };\n        var cellAddr = findOnSheet(findArgs.sheetIdx, findArgs.sheets.length - 1, true);\n        if (!cellAddr) {\n            cellAddr = findOnSheet(0, findArgs.sheetIdx);\n        }\n        if (cellAddr) {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.goto, { address: cellAddr });\n        }\n        else {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.showFindAlert, null);\n        }\n    };\n    WorkbookFindAndReplace.prototype.findNextOnSheet = function (args, startRow, startCol, findVal, sheet, endIdx, activeCell) {\n        var cellAddr;\n        var rowIdx;\n        var colIdx;\n        if (args.searchBy === 'By Row') {\n            if (endIdx === undefined) {\n                endIdx = sheet.rows.length - 1;\n            }\n            var colLen = void 0;\n            for (rowIdx = startRow; rowIdx <= endIdx; rowIdx++) {\n                if ((0,_base_index__WEBPACK_IMPORTED_MODULE_0__.isHiddenRow)(sheet, rowIdx)) {\n                    continue;\n                }\n                colIdx = activeCell && rowIdx === startRow ? startCol : 0;\n                colLen = sheet.rows[rowIdx] && sheet.rows[rowIdx].cells && sheet.rows[rowIdx].cells.length;\n                for (colIdx; colIdx < colLen; colIdx++) {\n                    if (!(0,_base_index__WEBPACK_IMPORTED_MODULE_0__.isHiddenCol)(sheet, colIdx)) {\n                        cellAddr = this.checkMatch(args, findVal, rowIdx, colIdx, sheet, activeCell);\n                        if (cellAddr) {\n                            return cellAddr;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (endIdx === undefined) {\n                endIdx = sheet.usedRange.colIndex;\n            }\n            var endRow = sheet.rows && sheet.rows.length - 1;\n            for (colIdx = startCol; colIdx <= endIdx; colIdx++) {\n                if ((0,_base_index__WEBPACK_IMPORTED_MODULE_0__.isHiddenCol)(sheet, colIdx)) {\n                    continue;\n                }\n                rowIdx = activeCell && colIdx === startCol ? startRow : 0;\n                for (rowIdx; rowIdx <= endRow; rowIdx++) {\n                    if (!(0,_base_index__WEBPACK_IMPORTED_MODULE_0__.isHiddenRow)(sheet, rowIdx)) {\n                        cellAddr = this.checkMatch(args, findVal, rowIdx, colIdx, sheet, activeCell);\n                        if (cellAddr) {\n                            return cellAddr;\n                        }\n                    }\n                }\n            }\n        }\n        return cellAddr;\n    };\n    WorkbookFindAndReplace.prototype.findPrevious = function (args, findArgs) {\n        var _this = this;\n        var findOnSheet = function (startIdx, endIdx, initIteration) {\n            var sheet;\n            var cellAddr;\n            for (var sheetIdx = startIdx; sheetIdx >= endIdx; sheetIdx--) {\n                sheet = findArgs.sheets[sheetIdx];\n                if (sheetIdx === findArgs.sheetIdx) {\n                    if (initIteration) {\n                        cellAddr = _this.findPrevOnSheet(args, findArgs.startRow, findArgs.startCol, 0, 0, findArgs.findVal, sheet, findArgs.activeCell);\n                    }\n                    else {\n                        if (args.searchBy === 'By Row') {\n                            cellAddr = _this.findPrevOnSheet(args, sheet.usedRange.rowIndex, sheet.usedRange.colIndex, findArgs.startRow, 0, findArgs.findVal, sheet);\n                        }\n                        else {\n                            cellAddr = _this.findPrevOnSheet(args, sheet.usedRange.rowIndex, sheet.usedRange.colIndex, 0, findArgs.startCol, findArgs.findVal, sheet);\n                        }\n                    }\n                }\n                else {\n                    cellAddr = _this.findPrevOnSheet(args, sheet.usedRange.rowIndex, sheet.usedRange.colIndex, 0, 0, findArgs.findVal, sheet);\n                }\n                if (cellAddr) {\n                    break;\n                }\n            }\n            return cellAddr;\n        };\n        var cellAddr;\n        cellAddr = findOnSheet(findArgs.sheetIdx, 0, true);\n        if (!cellAddr) {\n            cellAddr = findOnSheet(findArgs.sheets.length - 1, findArgs.sheetIdx);\n        }\n        if (cellAddr) {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.goto, { address: cellAddr });\n        }\n        else {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.showFindAlert, null);\n        }\n    };\n    WorkbookFindAndReplace.prototype.findPrevOnSheet = function (args, startRow, startCol, endRow, endCol, findVal, sheet, activeCell) {\n        var cellAddr;\n        var colIdx;\n        var rowIdx;\n        if (args.searchBy === 'By Row') {\n            for (rowIdx = startRow; rowIdx >= endRow; rowIdx--) {\n                if ((0,_base_index__WEBPACK_IMPORTED_MODULE_0__.isHiddenRow)(sheet, rowIdx)) {\n                    continue;\n                }\n                colIdx = activeCell && rowIdx === startRow ? startCol : sheet.rows[rowIdx] &&\n                    sheet.rows[rowIdx].cells && sheet.rows[rowIdx].cells.length - 1;\n                for (colIdx; colIdx >= endCol; colIdx--) {\n                    if (!(0,_base_index__WEBPACK_IMPORTED_MODULE_0__.isHiddenCol)(sheet, colIdx)) {\n                        cellAddr = this.checkMatch(args, findVal, rowIdx, colIdx, sheet, activeCell);\n                        if (cellAddr) {\n                            return cellAddr;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            for (colIdx = startCol; colIdx >= endCol; colIdx--) {\n                if ((0,_base_index__WEBPACK_IMPORTED_MODULE_0__.isHiddenCol)(sheet, colIdx)) {\n                    continue;\n                }\n                rowIdx = activeCell && colIdx === startCol ? startRow : sheet.rows && sheet.rows.length - 1;\n                for (rowIdx; rowIdx >= endRow; rowIdx--) {\n                    if (!(0,_base_index__WEBPACK_IMPORTED_MODULE_0__.isHiddenRow)(sheet, rowIdx)) {\n                        cellAddr = this.checkMatch(args, findVal, rowIdx, colIdx, sheet, activeCell);\n                        if (cellAddr) {\n                            return cellAddr;\n                        }\n                    }\n                }\n            }\n        }\n        return cellAddr;\n    };\n    WorkbookFindAndReplace.prototype.checkMatch = function (args, findVal, rowIdx, colIdx, sheet, curCell) {\n        if (curCell && rowIdx === curCell[0] && colIdx === curCell[1]) {\n            return null;\n        }\n        var cell = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(rowIdx, colIdx, sheet, false, true);\n        if (sheet.isProtected && !sheet.protectSettings.selectCells && sheet.protectSettings.selectUnLockedCells &&\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.isLocked)(cell, (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getColumn)(sheet, colIdx))) {\n            return null;\n        }\n        var checkValues = function (cellVal) {\n            if (cellVal) {\n                if (!args.isCSen) {\n                    cellVal = cellVal.toLowerCase();\n                }\n                if (args.isEMatch) {\n                    if (cellVal === findVal) {\n                        return sheet.name + \"!\" + (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(rowIdx, colIdx);\n                    }\n                }\n                else if (cellVal.includes(findVal)) {\n                    return sheet.name + \"!\" + (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(rowIdx, colIdx);\n                }\n            }\n            return null;\n        };\n        var displayText = this.getDisplayText(cell, rowIdx, colIdx, args.localeObj);\n        var cellAddr = checkValues(displayText);\n        if (!cellAddr) {\n            cell = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(rowIdx, colIdx, sheet, false, true);\n            if (cell.format && !(0,_index__WEBPACK_IMPORTED_MODULE_3__.isCustomDateTime)(cell.format, true) && !displayText.includes('%')) {\n                cellAddr = checkValues(this.getCellVal(cell, args.localeObj));\n            }\n        }\n        return cellAddr;\n    };\n    WorkbookFindAndReplace.prototype.replace = function (args) {\n        var _this = this;\n        var sheetIndex = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(args.sheetIndex) ? this.parent.activeSheetIndex : args.sheetIndex;\n        var sheet = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getSheet)(this.parent, args.sheetIndex);\n        if (sheet.isProtected) {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.workBookeditAlert, null);\n            return;\n        }\n        var address = args.address;\n        var activeCell = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getRangeIndexes)(address || sheet.activeCell);\n        var activeCellModel = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(activeCell[0], activeCell[1], sheet, false, true);\n        var compareVal = this.parent.getDisplayText(activeCellModel).toString();\n        var checkValue;\n        args.value = args.value.toString();\n        if (!args.isCSen) {\n            checkValue = args.value.toLowerCase();\n        }\n        var localeObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.getNumericObject)(this.parent.locale);\n        var getReplaceValue = function (isRecursive) {\n            var replaceVal;\n            if (args.isCSen) {\n                if (args.isEMatch) {\n                    replaceVal = compareVal === args.value && args.replaceValue;\n                }\n                else {\n                    replaceVal = compareVal.indexOf(args.value) > -1 && compareVal.replace(args.value, args.replaceValue);\n                }\n            }\n            else {\n                if (args.isEMatch) {\n                    replaceVal = compareVal.toLowerCase() === checkValue && args.replaceValue;\n                }\n                else {\n                    var regExp = RegExp;\n                    replaceVal = (compareVal.toLowerCase().includes(checkValue)) &&\n                        compareVal.replace(new regExp(args.value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'ig'), args.replaceValue);\n                }\n            }\n            if (!isRecursive && !replacedValue && activeCellModel.format && !(0,_index__WEBPACK_IMPORTED_MODULE_3__.isCustomDateTime)(activeCellModel.format, true) &&\n                !compareVal.includes('%')) {\n                compareVal = _this.getCellVal(activeCellModel, localeObj);\n                if (compareVal) {\n                    replaceVal = getReplaceValue(true);\n                }\n            }\n            return replaceVal;\n        };\n        var replacedValue = getReplaceValue();\n        if (!replacedValue) {\n            args.findOpt = 'next';\n            this.find(args);\n            activeCell = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellIndexes)(sheet.activeCell);\n            activeCellModel = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(activeCell[0], activeCell[1], sheet, false, true);\n            compareVal = this.parent.getDisplayText(activeCellModel).toString();\n            replacedValue = getReplaceValue();\n            if (!replacedValue) {\n                return;\n            }\n        }\n        if ((0,_common_index__WEBPACK_IMPORTED_MODULE_1__.isReadOnly)((0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(activeCell[0], activeCell[1], sheet), (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getColumn)(sheet, activeCell[1]), (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getRow)(sheet, activeCell[0]))) {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.workbookReadonlyAlert, null);\n            return;\n        }\n        var eventArgs = { address: sheet.name + \"!\" + (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(activeCell[0], activeCell[1]), cancel: false,\n            compareValue: args.value, replaceValue: args.replaceValue, sheetIndex: sheetIndex };\n        if (args.isAction) {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.beginAction, { action: 'beforeReplace', eventArgs: eventArgs });\n            if (eventArgs.cancel) {\n                return;\n            }\n            delete eventArgs.cancel;\n        }\n        (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateCell)(this.parent, sheet, { cell: { value: replacedValue }, rowIdx: activeCell[0], colIdx: activeCell[1], uiRefresh: true,\n            checkCF: true, valChange: true });\n        if (args.isAction) {\n            this.parent.notify('actionComplete', { action: 'replace', eventArgs: eventArgs });\n        }\n    };\n    WorkbookFindAndReplace.prototype.replaceAll = function (args) {\n        var _this = this;\n        var startSheet = args.mode === 'Sheet' ? args.sheetIndex : 0;\n        var sheet = this.parent.sheets[startSheet];\n        var endRow = sheet.usedRange.rowIndex;\n        var startRow = 0;\n        var endColumn = sheet.usedRange.colIndex;\n        var startColumn = 0;\n        var addressCollection = [];\n        var triggerEvent = args.isAction;\n        var activeCellIdx = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellIndexes)(sheet.activeCell);\n        var eventArgs = __assign({ addressCollection: addressCollection, cancel: false }, args);\n        var replaceCount = 0;\n        var updateAsync = function (val, index, cell) {\n            if (requestAnimationFrame) {\n                requestAnimationFrame(function () {\n                    if (!eventArgs.cancel && eventArgs.addressCollection[index]) {\n                        var indexes = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellIndexes)(eventArgs.addressCollection[index].substring(eventArgs.addressCollection[index].lastIndexOf('!') + 1));\n                        var sheetIndex = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getSheetIndexFromAddress)(_this.parent, eventArgs.addressCollection[index]);\n                        (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.updateCell)(_this.parent, _this.parent.sheets[sheetIndex], { cell: { value: val }, rowIdx: indexes[0],\n                            uiRefresh: true, checkCF: true, colIdx: indexes[1], valChange: true,\n                            skipFormatCheck: args.skipFormatCheck });\n                        if (activeCellIdx[0] === indexes[0] && activeCellIdx[1] === indexes[1]) {\n                            _this.parent.notify('formulaBarOperation', { action: 'refreshFormulabar',\n                                cell: (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(indexes[0], indexes[1], _this.parent.sheets[sheetIndex], false, true) });\n                        }\n                        if (index === eventArgs.addressCollection.length - 1 && triggerEvent) {\n                            _this.parent.notify('actionComplete', { action: 'replaceAll', eventArgs: eventArgs });\n                        }\n                    }\n                });\n            }\n            else {\n                _this.parent.updateCellDetails({ value: val }, eventArgs.addressCollection[index], undefined, undefined, true);\n            }\n            if (!cell.formula) {\n                replaceCount++;\n            }\n        };\n        var checkMatch = function (cellval, cell) {\n            var matchFound;\n            if (cellval) {\n                if (args.isCSen) {\n                    if (args.isEMatch) {\n                        if (cellval === args.value) {\n                            updateAsync(args.replaceValue, addressCollection.length, cell);\n                            addressCollection.push(sheet.name + '!' + (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(startRow, startColumn));\n                            matchFound = true;\n                        }\n                    }\n                    else {\n                        if (cellval.indexOf(args.value) > -1) {\n                            updateAsync(cellval.replace(args.value, args.replaceValue), addressCollection.length, cell);\n                            addressCollection.push(sheet.name + '!' + (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(startRow, startColumn));\n                            matchFound = true;\n                        }\n                    }\n                }\n                else {\n                    if (args.isEMatch) {\n                        if (cellval.toLowerCase() === args.value) {\n                            updateAsync(args.replaceValue, addressCollection.length, cell);\n                            addressCollection.push(sheet.name + '!' + (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(startRow, startColumn));\n                            matchFound = true;\n                        }\n                    }\n                    else {\n                        var val = cellval.toLowerCase();\n                        if ((cellval === args.value || val.indexOf(args.value.toString().toLowerCase()) > -1) || val ===\n                            args.value || cellval === args.value || val.indexOf(args.value) > -1) {\n                            var regExp = RegExp;\n                            regX = new regExp(args.value.toString().replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'ig');\n                            updateAsync(cellval.replace(regX, args.replaceValue), addressCollection.length, cell);\n                            addressCollection.push(sheet.name + '!' + (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(startRow, startColumn));\n                            matchFound = true;\n                        }\n                    }\n                }\n            }\n            return matchFound;\n        };\n        var displayText;\n        var row;\n        var regX;\n        var localeObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.getNumericObject)(this.parent.locale);\n        var cell;\n        for (startRow; startRow <= endRow + 1; startRow++) {\n            if (startColumn > endColumn && startRow > endRow) {\n                if (args.mode === 'Workbook') {\n                    startSheet++;\n                    sheet = this.parent.sheets[startSheet];\n                    if (sheet) {\n                        startColumn = 0;\n                        startRow = 0;\n                        endColumn = sheet.usedRange.colIndex;\n                        endRow = sheet.usedRange.rowIndex;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            row = sheet.rows[startRow];\n            if (row) {\n                if (startColumn === endColumn + 1) {\n                    startColumn = 0;\n                }\n                for (startColumn; startColumn <= endColumn; startColumn++) {\n                    if (row) {\n                        cell = row.cells && row.cells[startColumn];\n                        if (cell) {\n                            if ((0,_common_index__WEBPACK_IMPORTED_MODULE_1__.isReadOnly)(cell, (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getColumn)(sheet, startColumn), row)) {\n                                continue;\n                            }\n                            displayText = this.getDisplayText(cell, startRow, startColumn, localeObj).toString();\n                            if (!checkMatch(displayText, cell) && cell.format && !(0,_index__WEBPACK_IMPORTED_MODULE_3__.isCustomDateTime)(cell.format, true) &&\n                                !displayText.includes('%')) {\n                                checkMatch(this.getCellVal(row.cells[startColumn], localeObj), cell);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (addressCollection.length && triggerEvent) {\n            this.parent.notify('actionBegin', { action: 'beforeReplaceAll', eventArgs: eventArgs });\n            if (!eventArgs.cancel) {\n                this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.replaceAllDialog, { count: replaceCount, replaceValue: eventArgs.replaceValue });\n            }\n        }\n        else {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.replaceAllDialog, { count: replaceCount, replaceValue: eventArgs.replaceValue });\n        }\n    };\n    WorkbookFindAndReplace.prototype.getDisplayText = function (cell, rowIdx, colIdx, localeObj) {\n        if (!cell) {\n            return '';\n        }\n        if (!cell.value && cell.value !== 0) {\n            if (cell.hyperlink) {\n                return typeof cell.hyperlink === 'string' ? cell.hyperlink : cell.hyperlink.address || '';\n            }\n            return '';\n        }\n        var cellValue = cell.value.toString();\n        if (cell.format || cellValue.includes(localeObj.dateSeparator)) {\n            var eventArgs = { value: cell.value, format: cell.format, formattedText: cell.value, cell: cell,\n                rowIndex: rowIdx, colIndex: colIdx };\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.getFormattedCellObject, eventArgs);\n            return eventArgs.formattedText;\n        }\n        else {\n            return cellValue;\n        }\n    };\n    WorkbookFindAndReplace.prototype.getCellVal = function (cell, localeObj) {\n        if ((0,_index__WEBPACK_IMPORTED_MODULE_3__.isNumber)(cell.value)) {\n            if (localeObj.decimal !== '.') {\n                return cell.value.toString().split('.').join(localeObj.decimal);\n            }\n            return cell.value.toString();\n        }\n        return cell.value ? cell.value.toString().toLowerCase() : '';\n    };\n    WorkbookFindAndReplace.prototype.totalCount = function (args) {\n        var _this = this;\n        var sheet = this.parent.sheets[args.sheetIndex];\n        var activeCell = (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellIndexes)(sheet.activeCell);\n        var count = 0;\n        var requiredCount = 0;\n        var findValue = args.value.toLowerCase();\n        var localeObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.getNumericObject)(this.parent.locale);\n        var displayText;\n        sheet.rows.filter(function (row, rowIdx) { return row && row.cells && (!row.isFiltered && !row.hidden) &&\n            row.cells.filter(function (cell, colIdx) {\n                if (cell && (cell.value || cell.value === 0) && !(0,_base_index__WEBPACK_IMPORTED_MODULE_0__.isHiddenCol)(sheet, colIdx) && (!sheet.isProtected ||\n                    sheet.protectSettings.selectCells || !(0,_common_index__WEBPACK_IMPORTED_MODULE_1__.isLocked)(cell, (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getColumn)(sheet, colIdx)))) {\n                    displayText = _this.getDisplayText(cell, rowIdx, colIdx, localeObj).toLowerCase();\n                    if (displayText.includes(findValue) || (cell.format && !(0,_index__WEBPACK_IMPORTED_MODULE_3__.isCustomDateTime)(cell.format, true) &&\n                        !displayText.includes('%') && _this.getCellVal(cell, localeObj).includes(findValue))) {\n                        count++;\n                        if ((rowIdx === activeCell[0] && colIdx >= activeCell[1]) || rowIdx > activeCell[0]) {\n                            requiredCount++;\n                        }\n                    }\n                }\n            }); });\n        requiredCount -= 1;\n        var totalCount = count;\n        count = totalCount - requiredCount;\n        if (count > totalCount) {\n            count = totalCount;\n        }\n        if (count !== 0 && !this.parent.getDisplayText((0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(activeCell[0], activeCell[1], sheet)).toLowerCase().includes(findValue)) {\n            count -= 1;\n        }\n        args.findCount = count + \" of \" + totalCount;\n    };\n    WorkbookFindAndReplace.prototype.findAllValues = function (findAllArguments) {\n        var startSheet = findAllArguments.sheetIndex;\n        var sheet = this.parent.sheets[startSheet];\n        var endRow = sheet.usedRange.rowIndex;\n        var rowIndex = 0;\n        var count = 0;\n        var address;\n        var endColumn = sheet.usedRange.colIndex;\n        var columnIndex = 0;\n        var sheetLength = this.parent.sheets.length;\n        var initialSheet = findAllArguments.sheetIndex;\n        for (rowIndex; rowIndex <= endRow + 1; rowIndex++) {\n            if ((initialSheet !== 1) && (findAllArguments.sheetIndex === sheetLength)) {\n                startSheet = 1;\n            }\n            if (rowIndex > endRow && columnIndex > endColumn) {\n                if (findAllArguments.mode === 'Workbook') {\n                    startSheet++;\n                    if (startSheet > sheetLength - 1) {\n                        startSheet = 0;\n                    }\n                    if (initialSheet === startSheet) {\n                        if (count === 0) {\n                            return;\n                        }\n                        return;\n                    }\n                    sheet = this.parent.sheets[startSheet];\n                    if (sheet) {\n                        rowIndex = 0;\n                        columnIndex = 0;\n                        endColumn = sheet.usedRange.colIndex;\n                        endRow = sheet.usedRange.rowIndex;\n                    }\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(sheet)) {\n                if (sheet.rows[rowIndex]) {\n                    var row = sheet.rows[rowIndex];\n                    if (columnIndex === endColumn + 2) {\n                        columnIndex = 0;\n                    }\n                    for (columnIndex; columnIndex <= endColumn + 1; columnIndex++) {\n                        if (row) {\n                            if (row.cells && row.cells[columnIndex]) {\n                                var cell = sheet.rows[rowIndex].cells[columnIndex];\n                                if (cell && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(cell.value) && cell.value !== '' && (!sheet.isProtected ||\n                                    sheet.protectSettings.selectCells || (sheet.protectSettings.selectUnLockedCells &&\n                                    !(0,_common_index__WEBPACK_IMPORTED_MODULE_1__.isLocked)(cell, (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getColumn)(sheet, columnIndex))))) {\n                                    var cellFormat = cell.format;\n                                    var cellvalue = void 0;\n                                    if (cellFormat) {\n                                        var displayTxt = this.parent.getDisplayText(sheet.rows[rowIndex].cells[columnIndex]);\n                                        cellvalue = displayTxt.toString();\n                                    }\n                                    else {\n                                        cellvalue = cell.value.toString();\n                                    }\n                                    if (findAllArguments.isCSen && findAllArguments.isEMatch) {\n                                        if (cellvalue === findAllArguments.value) {\n                                            address = sheet.name + '!' + (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(rowIndex, columnIndex);\n                                            findAllArguments.findCollection.push(address);\n                                            count++;\n                                        }\n                                    }\n                                    else if (findAllArguments.isCSen && !findAllArguments.isEMatch) {\n                                        var index = cellvalue.indexOf(findAllArguments.value) > -1;\n                                        if ((cellvalue === findAllArguments.value) || (index)) {\n                                            address = sheet.name + '!' + (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(rowIndex, columnIndex);\n                                            findAllArguments.findCollection.push(address);\n                                            count++;\n                                        }\n                                    }\n                                    else if (!findAllArguments.isCSen && findAllArguments.isEMatch) {\n                                        var val = cellvalue.toString().toLowerCase();\n                                        if (val === findAllArguments.value.toLowerCase()) {\n                                            address = sheet.name + '!' + (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(rowIndex, columnIndex);\n                                            findAllArguments.findCollection.push(address);\n                                            count++;\n                                        }\n                                    }\n                                    else if (!findAllArguments.isCSen && !findAllArguments.isEMatch) {\n                                        var val = cellvalue.toString().toLowerCase();\n                                        var index = val.indexOf(findAllArguments.value.toLowerCase()) > -1;\n                                        if ((val === findAllArguments.value) || ((cellvalue === findAllArguments.value) || (index)) ||\n                                            ((cellvalue === findAllArguments.value))) {\n                                            address = sheet.name + '!' + (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(rowIndex, columnIndex);\n                                            findAllArguments.findCollection.push(address);\n                                            count++;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (count === 0) {\n            return;\n        }\n        return;\n    };\n    /**\n     * Gets the module name.\n     *\n     * @returns {string} - Return the string\n     */\n    WorkbookFindAndReplace.prototype.getModuleName = function () {\n        return 'workbookfindAndReplace';\n    };\n    return WorkbookFindAndReplace;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/actions/find-and-replace.js?");

/***/ })

}]);