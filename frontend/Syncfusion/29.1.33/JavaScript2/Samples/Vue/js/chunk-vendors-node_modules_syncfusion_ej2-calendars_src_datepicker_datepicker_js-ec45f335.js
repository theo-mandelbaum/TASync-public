"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-calendars_src_datepicker_datepicker_js-ec45f335"],{

/***/ "./node_modules/@syncfusion/ej2-calendars/src/datepicker/datepicker.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-calendars/src/datepicker/datepicker.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatePicker: () => (/* binding */ DatePicker)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\");\n/* harmony import */ var _calendar_calendar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../calendar/calendar */ \"./node_modules/@syncfusion/ej2-calendars/src/calendar/calendar.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path='../calendar/calendar-model.d.ts'/>\n\n\n\n\n\n\n\n//class constant defination\nvar DATEWRAPPER = 'e-date-wrapper';\nvar ROOT = 'e-datepicker';\nvar LIBRARY = 'e-lib';\nvar CONTROL = 'e-control';\nvar POPUPWRAPPER = 'e-popup-wrapper';\nvar INPUTWRAPPER = 'e-input-group-icon';\nvar POPUP = 'e-popup';\nvar INPUTCONTAINER = 'e-input-group';\nvar INPUTFOCUS = 'e-input-focus';\nvar INPUTROOT = 'e-input';\nvar ERROR = 'e-error';\nvar ACTIVE = 'e-active';\nvar OVERFLOW = 'e-date-overflow';\nvar DATEICON = 'e-date-icon';\nvar CLEARICON = 'e-clear-icon';\nvar ICONS = 'e-icons';\nvar OPENDURATION = 300;\nvar OFFSETVALUE = 4;\nvar SELECTED = 'e-selected';\nvar FOCUSEDDATE = 'e-focused-date';\nvar NONEDIT = 'e-non-edit';\nvar containerAttr = ['title', 'class', 'style'];\n/**\n * Represents the DatePicker component that allows user to select\n * or enter a date value.\n * ```html\n * <input id='datepicker'/>\n * ```\n * ```typescript\n * <script>\n *   let datePickerObject:DatePicker = new DatePicker({ value: new Date() });\n *   datePickerObject.appendTo('#datepicker');\n * </script>\n * ```\n */\nvar DatePicker = /** @class */ (function (_super) {\n    __extends(DatePicker, _super);\n    /**\n     * Constructor for creating the widget.\n     *\n     * @param {DatePickerModel} options - Specifies the DatePicker model.\n     * @param {string | HTMLInputElement} element - Specifies the element to render as component.\n     * @private\n     */\n    function DatePicker(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.isDateIconClicked = false;\n        _this.isAltKeyPressed = false;\n        _this.isInteracted = true;\n        _this.invalidValueString = null;\n        _this.checkPreviousValue = null;\n        _this.maskedDateValue = '';\n        _this.preventChange = false;\n        _this.isIconClicked = false;\n        _this.isDynamicValueChanged = false;\n        _this.moduleName = _this.getModuleName();\n        _this.isFocused = false;\n        _this.isBlur = false;\n        _this.isKeyAction = false;\n        _this.datepickerOptions = options;\n        return _this;\n    }\n    /**\n     * To Initialize the control rendering.\n     *\n     * @returns {void}\n     * @private\n     */\n    DatePicker.prototype.render = function () {\n        this.initialize();\n        this.bindEvents();\n        if (this.floatLabelType !== 'Never') {\n            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.calculateWidth(this.inputElement, this.inputWrapper.container);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper.buttons[0]) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper.container.getElementsByClassName('e-float-text-overflow')[0]) && this.floatLabelType !== 'Never') {\n            this.inputWrapper.container.getElementsByClassName('e-float-text-overflow')[0].classList.add('e-icon');\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.element, 'fieldset')) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.element, 'fieldset').disabled) {\n            this.enabled = false;\n        }\n        this.renderComplete();\n        this.setTimeZone(this.serverTimezoneOffset);\n    };\n    DatePicker.prototype.setTimeZone = function (offsetValue) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.serverTimezoneOffset) && this.value) {\n            var clientTimeZoneDiff = new Date().getTimezoneOffset() / 60;\n            var serverTimezoneDiff = offsetValue;\n            var timeZoneDiff = serverTimezoneDiff + clientTimeZoneDiff;\n            timeZoneDiff = this.isDayLightSaving() ? timeZoneDiff-- : timeZoneDiff;\n            this.value = new Date((this.value).getTime() + (timeZoneDiff * 60 * 60 * 1000));\n            this.updateInput();\n        }\n    };\n    DatePicker.prototype.isDayLightSaving = function () {\n        var firstOffset = new Date(this.value.getFullYear(), 0, 1).getTimezoneOffset();\n        var secondOffset = new Date(this.value.getFullYear(), 6, 1).getTimezoneOffset();\n        return (this.value.getTimezoneOffset() < Math.max(firstOffset, secondOffset));\n    };\n    DatePicker.prototype.setAllowEdit = function () {\n        if (this.allowEdit) {\n            if (!this.readonly) {\n                this.inputElement.removeAttribute('readonly');\n            }\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.inputElement, { 'readonly': '' });\n        }\n        this.updateIconState();\n    };\n    DatePicker.prototype.updateIconState = function () {\n        if (!this.allowEdit && this.inputWrapper && !this.readonly) {\n            if (this.inputElement.value === '') {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.inputWrapper.container], [NONEDIT]);\n            }\n            else {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputWrapper.container], [NONEDIT]);\n            }\n        }\n        else if (this.inputWrapper) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.inputWrapper.container], [NONEDIT]);\n        }\n    };\n    DatePicker.prototype.initialize = function () {\n        this.checkInvalidValue(this.value);\n        if (this.enableMask) {\n            this.notify('createMask', {\n                module: 'MaskedDateTime'\n            });\n        }\n        this.createInput();\n        this.updateHtmlAttributeToWrapper();\n        this.setAllowEdit();\n        if (this.enableMask && !this.value && this.maskedDateValue && (this.floatLabelType === 'Always' || !this.floatLabelType || !this.placeholder)) {\n            this.updateInput(true);\n            this.updateInputValue(this.maskedDateValue);\n        }\n        else if (!this.enableMask) {\n            this.updateInput(true);\n        }\n        this.previousElementValue = this.inputElement.value;\n        this.previousDate = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) ? new Date(+this.value) : null;\n        this.inputElement.setAttribute('value', this.inputElement.value);\n        this.inputValueCopy = this.value;\n    };\n    DatePicker.prototype.createInput = function () {\n        var ariaAttrs = {\n            'aria-atomic': 'true', 'aria-expanded': 'false',\n            'role': 'combobox', 'autocomplete': 'off', 'autocorrect': 'off',\n            'autocapitalize': 'off', 'spellcheck': 'false', 'aria-invalid': 'false'\n        };\n        if (this.getModuleName() === 'datepicker') {\n            var l10nLocale = { placeholder: this.placeholder };\n            this.globalize = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization(this.locale);\n            this.l10n = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('datepicker', l10nLocale, this.locale);\n            this.setProperties({ placeholder: this.placeholder || this.l10n.getConstant('placeholder') }, true);\n        }\n        if (this.fullScreenMode && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.cssClass += ' ' + 'e-popup-expand';\n        }\n        var updatedCssClassValues = this.cssClass;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.cssClass) && this.cssClass !== '') {\n            updatedCssClassValues = (this.cssClass.replace(/\\s+/g, ' ')).trim();\n        }\n        var isBindClearAction = this.enableMask ? false : true;\n        this.inputWrapper = _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.createInput({\n            element: this.inputElement,\n            floatLabelType: this.floatLabelType,\n            bindClearAction: isBindClearAction,\n            properties: {\n                readonly: this.readonly,\n                placeholder: this.placeholder,\n                cssClass: updatedCssClassValues,\n                enabled: this.enabled,\n                enableRtl: this.enableRtl,\n                showClearButton: this.showClearButton\n            },\n            buttons: [INPUTWRAPPER + ' ' + DATEICON + ' ' + ICONS]\n        }, this.createElement);\n        this.setWidth(this.width);\n        if (this.inputElement.name !== '') {\n            this.inputElement.setAttribute('name', '' + this.inputElement.getAttribute('name'));\n        }\n        else {\n            this.inputElement.setAttribute('name', '' + this.element.id);\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.inputElement, ariaAttrs);\n        if (!this.inputElement.hasAttribute('aria-label')) {\n            this.inputElement.setAttribute('aria-label', this.getModuleName());\n        }\n        if (!this.enabled) {\n            this.inputElement.setAttribute('aria-disabled', 'true');\n            this.inputElement.tabIndex = -1;\n        }\n        else {\n            this.inputElement.setAttribute('aria-disabled', 'false');\n            this.inputElement.setAttribute('tabindex', this.tabIndex);\n        }\n        _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.addAttributes({ 'aria-label': 'select', 'role': 'button' }, this.inputWrapper.buttons[0]);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputWrapper.container], DATEWRAPPER);\n    };\n    DatePicker.prototype.updateInput = function (isDynamic, isBlur) {\n        if (isDynamic === void 0) { isDynamic = false; }\n        if (isBlur === void 0) { isBlur = false; }\n        var formatOptions;\n        if (this.value && !this.isCalendar()) {\n            this.disabledDates(isDynamic, isBlur);\n        }\n        if (isNaN(+new Date(this.checkValue(this.value)))) {\n            this.setProperties({ value: null }, true);\n        }\n        if (this.strictMode) {\n            //calls the Calendar processDate protected method to update the date value according to the strictMode true behaviour.\n            _super.prototype.validateDate.call(this);\n            this.minMaxUpdates();\n            _super.prototype.minMaxUpdate.call(this);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value)) {\n            var dateValue = this.value;\n            var dateString = void 0;\n            var tempFormat = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formatString) ? this.formatString : this.dateTimeFormat;\n            if (this.getModuleName() === 'datetimepicker') {\n                if (this.calendarMode === 'Gregorian') {\n                    dateString = this.globalize.formatDate(this.value, {\n                        format: tempFormat, type: 'dateTime', skeleton: 'yMd'\n                    });\n                }\n                else {\n                    dateString = this.globalize.formatDate(this.value, {\n                        format: tempFormat, type: 'dateTime', skeleton: 'yMd', calendar: 'islamic'\n                    });\n                }\n            }\n            else {\n                if (this.calendarMode === 'Gregorian') {\n                    formatOptions = { format: this.formatString, type: 'dateTime', skeleton: 'yMd' };\n                }\n                else {\n                    formatOptions = { format: this.formatString, type: 'dateTime', skeleton: 'yMd', calendar: 'islamic' };\n                }\n                dateString = this.globalize.formatDate(this.value, formatOptions);\n            }\n            if ((+dateValue <= +this.max) && (+dateValue >= +this.min)) {\n                this.updateInputValue(dateString);\n            }\n            else {\n                var value = (+dateValue >= +this.max || !+this.value) || (!+this.value || +dateValue <= +this.min);\n                if (!this.strictMode && value) {\n                    this.updateInputValue(dateString);\n                }\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) && this.strictMode) {\n            if (!this.enableMask) {\n                this.updateInputValue('');\n            }\n            else {\n                this.updateInputValue(this.maskedDateValue);\n                this.notify('createMask', {\n                    module: 'MaskedDateTime'\n                });\n            }\n        }\n        if (!this.strictMode && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) && this.invalidValueString) {\n            this.updateInputValue(this.invalidValueString);\n        }\n        this.changedArgs = { value: this.value };\n        this.errorClass();\n        this.updateIconState();\n    };\n    DatePicker.prototype.minMaxUpdates = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) && this.value < this.min && this.min <= this.max && this.strictMode) {\n            this.setProperties({ value: this.min }, true);\n            this.changedArgs = { value: this.value };\n        }\n        else {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) && this.value > this.max && this.min <= this.max && this.strictMode) {\n                this.setProperties({ value: this.max }, true);\n                this.changedArgs = { value: this.value };\n            }\n        }\n    };\n    DatePicker.prototype.checkStringValue = function (val) {\n        var returnDate = null;\n        var formatOptions = null;\n        var formatDateTime = null;\n        if (this.getModuleName() === 'datetimepicker') {\n            var culture = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization(this.locale);\n            if (this.calendarMode === 'Gregorian') {\n                formatOptions = { format: this.dateTimeFormat, type: 'dateTime', skeleton: 'yMd' };\n                formatDateTime = { format: culture.getDatePattern({ skeleton: 'yMd' }), type: 'dateTime' };\n            }\n            else {\n                formatOptions = { format: this.dateTimeFormat, type: 'dateTime', skeleton: 'yMd', calendar: 'islamic' };\n                formatDateTime = { format: culture.getDatePattern({ skeleton: 'yMd' }), type: 'dateTime', calendar: 'islamic' };\n            }\n        }\n        else {\n            if (this.calendarMode === 'Gregorian') {\n                formatOptions = { format: this.formatString, type: 'dateTime', skeleton: 'yMd' };\n            }\n            else {\n                formatOptions = { format: this.formatString, type: 'dateTime', skeleton: 'yMd', calendar: 'islamic' };\n            }\n        }\n        returnDate = this.checkDateValue(this.globalize.parseDate(this.getAmPmValue(val), formatOptions));\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(returnDate) && (this.getModuleName() === 'datetimepicker')) {\n            returnDate = this.checkDateValue(this.globalize.parseDate(this.getAmPmValue(val), formatDateTime));\n        }\n        return returnDate;\n    };\n    DatePicker.prototype.checkInvalidValue = function (value) {\n        if (!(value instanceof Date) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value)) {\n            var valueDate = null;\n            var valueString = value;\n            if (typeof value === 'number') {\n                valueString = value.toString();\n            }\n            var formatOptions = null;\n            var formatDateTime = null;\n            if (this.getModuleName() === 'datetimepicker') {\n                var culture = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization(this.locale);\n                if (this.calendarMode === 'Gregorian') {\n                    formatOptions = { format: this.dateTimeFormat, type: 'dateTime', skeleton: 'yMd' };\n                    formatDateTime = { format: culture.getDatePattern({ skeleton: 'yMd' }), type: 'dateTime' };\n                }\n                else {\n                    formatOptions = { format: this.dateTimeFormat, type: 'dateTime', skeleton: 'yMd', calendar: 'islamic' };\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    formatDateTime = { format: culture.getDatePattern({ skeleton: 'yMd' }), type: 'dateTime', calendar: 'islamic' };\n                }\n            }\n            else {\n                if (this.calendarMode === 'Gregorian') {\n                    formatOptions = { format: this.formatString, type: 'dateTime', skeleton: 'yMd' };\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    formatOptions = { format: this.formatString, type: 'dateTime', skeleton: 'yMd', calendar: 'islamic' };\n                }\n            }\n            var invalid = false;\n            if (typeof valueString !== 'string') {\n                valueString = null;\n                invalid = true;\n            }\n            else {\n                if (typeof valueString === 'string') {\n                    valueString = valueString.trim();\n                }\n                valueDate = this.checkStringValue(valueString);\n                if (!valueDate) {\n                    var extISOString = null;\n                    var basicISOString = null;\n                    // eslint-disable-next-line\n                    extISOString = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n                    // eslint-disable-next-line\n                    basicISOString = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n                    if ((!extISOString.test(valueString) && !basicISOString.test(valueString))\n                        || (/^[a-zA-Z0-9- ]*$/).test(valueString) || isNaN(+new Date(this.checkValue(valueString)))) {\n                        invalid = true;\n                    }\n                    else {\n                        valueDate = new Date(valueString);\n                    }\n                }\n            }\n            if (invalid) {\n                if (!this.strictMode) {\n                    this.invalidValueString = valueString;\n                }\n                this.setProperties({ value: null }, true);\n            }\n            else {\n                this.setProperties({ value: valueDate }, true);\n            }\n        }\n    };\n    DatePicker.prototype.bindInputEvent = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formatString) || this.enableMask) {\n            if (this.enableMask || this.formatString.indexOf('y') === -1) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.inputElement, 'input', this.inputHandler, this);\n            }\n            else {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.inputElement, 'input', this.inputHandler);\n            }\n        }\n    };\n    DatePicker.prototype.bindEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.inputWrapper.buttons[0], 'mousedown', this.dateIconHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.inputElement, 'mouseup', this.mouseUpHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.inputElement, 'focus', this.inputFocusHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.inputElement, 'blur', this.inputBlurHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.inputElement, 'keyup', this.keyupHandler, this);\n        if (this.enableMask) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.inputElement, 'keydown', this.keydownHandler, this);\n        }\n        this.bindInputEvent();\n        // To prevent the twice triggering.\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.inputElement, 'change', this.inputChangeHandler, this);\n        if (this.showClearButton && this.inputWrapper.clearButton) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.inputWrapper.clearButton, 'mousedown touchstart', this.resetHandler, this);\n        }\n        if (this.formElement) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.formElement, 'reset', this.resetFormHandler, this);\n        }\n        this.defaultKeyConfigs = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(this.defaultKeyConfigs, this.keyConfigs);\n        this.keyboardModules = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.KeyboardEvents(this.inputElement, {\n            eventName: 'keydown',\n            keyAction: this.inputKeyActionHandle.bind(this),\n            keyConfigs: this.defaultKeyConfigs\n        });\n    };\n    DatePicker.prototype.keydownHandler = function (e) {\n        switch (e.code) {\n            case 'ArrowLeft':\n            case 'ArrowRight':\n            case 'ArrowUp':\n            case 'ArrowDown':\n            case 'Home':\n            case 'End':\n            case 'Backspace':\n            case 'Delete':\n                if (this.enableMask && !this.popupObj && !this.readonly) {\n                    if (e.code !== 'Delete' && e.code !== 'Backspace') {\n                        e.preventDefault();\n                    }\n                    this.notify('keyDownHandler', {\n                        module: 'MaskedDateTime',\n                        e: e\n                    });\n                }\n                break;\n            default:\n                break;\n        }\n    };\n    DatePicker.prototype.unBindEvents = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper)) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.inputWrapper.buttons[0], 'mousedown', this.dateIconHandler);\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.inputElement, 'mouseup', this.mouseUpHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.inputElement, 'focus', this.inputFocusHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.inputElement, 'blur', this.inputBlurHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.inputElement, 'change', this.inputChangeHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.inputElement, 'keyup', this.keyupHandler);\n        if (this.enableMask) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.inputElement, 'keydown', this.keydownHandler);\n        }\n        if (this.showClearButton && this.inputWrapper.clearButton) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.inputWrapper.clearButton, 'mousedown touchstart', this.resetHandler);\n        }\n        if (this.formElement) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.formElement, 'reset', this.resetFormHandler);\n        }\n    };\n    DatePicker.prototype.resetFormHandler = function () {\n        if (!this.enabled) {\n            return;\n        }\n        if (!this.inputElement.disabled) {\n            var value = this.inputElement.getAttribute('value');\n            if (this.element.tagName === 'EJS-DATEPICKER' || this.element.tagName === 'EJS-DATETIMEPICKER') {\n                value = '';\n                this.inputValueCopy = null;\n                this.inputElement.setAttribute('value', '');\n            }\n            this.setProperties({ value: this.inputValueCopy }, true);\n            this.restoreValue();\n            if (this.inputElement) {\n                this.updateInputValue(value);\n                this.errorClass();\n            }\n        }\n    };\n    DatePicker.prototype.restoreValue = function () {\n        this.currentDate = this.value ? this.value : new Date();\n        this.previousDate = this.value;\n        this.previousElementValue = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputValueCopy)) ? '' :\n            this.globalize.formatDate(this.inputValueCopy, {\n                format: this.formatString, type: 'dateTime', skeleton: 'yMd'\n            });\n    };\n    DatePicker.prototype.inputChangeHandler = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        e.stopPropagation();\n    };\n    DatePicker.prototype.bindClearEvent = function () {\n        if (this.showClearButton && this.inputWrapper.clearButton) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.inputWrapper.clearButton, 'mousedown touchstart', this.resetHandler, this);\n        }\n    };\n    DatePicker.prototype.resetHandler = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        e.preventDefault();\n        this.clear(e);\n    };\n    DatePicker.prototype.mouseUpHandler = function (e) {\n        if (this.enableMask) {\n            e.preventDefault();\n            this.notify('setMaskSelection', {\n                module: 'MaskedDateTime'\n            });\n        }\n    };\n    DatePicker.prototype.clear = function (event) {\n        this.setProperties({ value: null }, true);\n        if (!this.enableMask) {\n            this.updateInputValue('');\n        }\n        var clearedArgs = {\n            event: event\n        };\n        this.trigger('cleared', clearedArgs);\n        this.invalidValueString = '';\n        this.updateInput();\n        this.popupUpdate();\n        this.changeEvent(event);\n        if (this.enableMask) {\n            this.notify('clearHandler', {\n                module: 'MaskedDateTime'\n            });\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.element, 'form')) {\n            var element = this.element;\n            var keyupEvent = document.createEvent('KeyboardEvent');\n            keyupEvent.initEvent('keyup', false, true);\n            element.dispatchEvent(keyupEvent);\n        }\n    };\n    DatePicker.prototype.preventEventBubbling = function (e) {\n        e.preventDefault();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.interopAdaptor.invokeMethodAsync('OnDateIconClick');\n    };\n    DatePicker.prototype.updateInputValue = function (value) {\n        _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setValue(value, this.inputElement, this.floatLabelType, this.showClearButton);\n    };\n    DatePicker.prototype.dateIconHandler = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        this.isIconClicked = true;\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.inputElement.setAttribute('readonly', '');\n            this.inputElement.blur();\n        }\n        e.preventDefault();\n        if (!this.readonly) {\n            if (this.isCalendar()) {\n                this.hide(e);\n            }\n            else {\n                this.isDateIconClicked = true;\n                this.show(null, e);\n                if (this.getModuleName() === 'datetimepicker') {\n                    this.inputElement.focus();\n                }\n                this.inputElement.focus();\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputWrapper.container], [INPUTFOCUS]);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(this.inputWrapper.buttons, ACTIVE);\n            }\n        }\n        this.isIconClicked = false;\n    };\n    DatePicker.prototype.updateHtmlAttributeToWrapper = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.htmlAttributes[\"\" + key])) {\n                    if (containerAttr.indexOf(key) > -1) {\n                        if (key === 'class') {\n                            var updatedClassValues = (this.htmlAttributes[\"\" + key].replace(/\\s+/g, ' ')).trim();\n                            if (updatedClassValues !== '') {\n                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputWrapper.container], updatedClassValues.split(' '));\n                            }\n                        }\n                        else if (key === 'style') {\n                            var setStyle = this.inputWrapper.container.getAttribute(key);\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(setStyle)) {\n                                if (setStyle.charAt(setStyle.length - 1) === ';') {\n                                    setStyle = setStyle + this.htmlAttributes[\"\" + key];\n                                }\n                                else {\n                                    setStyle = setStyle + ';' + this.htmlAttributes[\"\" + key];\n                                }\n                            }\n                            else {\n                                setStyle = this.htmlAttributes[\"\" + key];\n                            }\n                            this.inputWrapper.container.setAttribute(key, setStyle);\n                        }\n                        else {\n                            this.inputWrapper.container.setAttribute(key, this.htmlAttributes[\"\" + key]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DatePicker.prototype.updateHtmlAttributeToElement = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (containerAttr.indexOf(key) < 0) {\n                    this.inputElement.setAttribute(key, this.htmlAttributes[\"\" + key]);\n                }\n            }\n        }\n    };\n    DatePicker.prototype.updateCssClass = function (newCssClass, oldCssClass) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(oldCssClass)) {\n            oldCssClass = (oldCssClass.replace(/\\s+/g, ' ')).trim();\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newCssClass)) {\n            newCssClass = (newCssClass.replace(/\\s+/g, ' ')).trim();\n        }\n        _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setCssClass(newCssClass, [this.inputWrapper.container], oldCssClass);\n        if (this.popupWrapper) {\n            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setCssClass(newCssClass, [this.popupWrapper], oldCssClass);\n        }\n    };\n    DatePicker.prototype.calendarKeyActionHandle = function (e) {\n        switch (e.action) {\n            case 'escape':\n                if (this.isCalendar()) {\n                    this.hide(e);\n                }\n                else {\n                    this.inputWrapper.container.children[this.index].blur();\n                }\n                break;\n            case 'enter':\n                if (!this.isCalendar()) {\n                    this.show(null, e);\n                }\n                else {\n                    if (+this.value !== +this.currentDate && !this.isCalendar()) {\n                        this.inputWrapper.container.children[this.index].focus();\n                    }\n                }\n                if (this.getModuleName() === 'datetimepicker') {\n                    this.inputElement.focus();\n                }\n                break;\n        }\n    };\n    DatePicker.prototype.inputFocusHandler = function () {\n        this.isFocused = true;\n        if (!this.enabled) {\n            return;\n        }\n        if (this.enableMask && !this.inputElement.value && this.placeholder) {\n            if (this.maskedDateValue && !this.value && (this.floatLabelType === 'Auto' || this.floatLabelType === 'Never' || this.placeholder)) {\n                this.updateInputValue(this.maskedDateValue);\n                this.inputElement.selectionStart = 0;\n                this.inputElement.selectionEnd = this.inputElement.value.length;\n            }\n        }\n        if (this.enableMask && this.showClearButton && this.inputElement && this.inputElement.value === this.maskedDateValue && this.inputWrapper && this.inputWrapper.clearButton && !this.inputWrapper.clearButton.classList.contains('e-clear-icon-hide')) {\n            this.inputWrapper.clearButton.classList.add('e-clear-icon-hide');\n        }\n        var focusArguments = {\n            model: this\n        };\n        this.isDateIconClicked = false;\n        this.trigger('focus', focusArguments);\n        this.updateIconState();\n        if (this.openOnFocus && !this.isIconClicked) {\n            this.show();\n        }\n    };\n    DatePicker.prototype.inputHandler = function (e) {\n        this.isPopupClicked = false;\n        if (this.enableMask) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.inputType) && e.inputType === 'insertFromPaste') {\n                this.notify('maskPasteInputHandler', {\n                    module: 'MaskedDateTime'\n                });\n            }\n            else {\n                this.notify('inputHandler', {\n                    module: 'MaskedDateTime'\n                });\n            }\n        }\n    };\n    DatePicker.prototype.inputBlurHandler = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        this.strictModeUpdate();\n        if (this.inputElement.value === '' && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value)) {\n            this.invalidValueString = null;\n            this.updateInputValue('');\n        }\n        this.isBlur = true;\n        this.updateInput(false, true);\n        this.isBlur = false;\n        this.popupUpdate();\n        this.changeTrigger(e);\n        if (this.enableMask && this.maskedDateValue && this.placeholder && this.floatLabelType !== 'Always') {\n            if (this.inputElement.value === this.maskedDateValue && !this.value && (this.floatLabelType === 'Auto' || this.floatLabelType === 'Never' || this.placeholder)) {\n                this.updateInputValue('');\n            }\n        }\n        this.errorClass();\n        if (this.isCalendar() && document.activeElement === this.inputElement) {\n            this.hide(e);\n        }\n        if (this.getModuleName() === 'datepicker') {\n            var blurArguments = {\n                model: this\n            };\n            this.trigger('blur', blurArguments);\n        }\n        if (this.isCalendar()) {\n            this.defaultKeyConfigs = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(this.defaultKeyConfigs, this.keyConfigs);\n            this.calendarKeyboardModules = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.KeyboardEvents(this.calendarElement.children[1].firstElementChild, {\n                eventName: 'keydown',\n                keyAction: this.calendarKeyActionHandle.bind(this),\n                keyConfigs: this.defaultKeyConfigs\n            });\n        }\n        this.isPopupClicked = false;\n    };\n    DatePicker.prototype.documentHandler = function (e) {\n        if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.popupObj) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper) && (this.inputWrapper.container.contains(e.target) && e.type !== 'mousedown' ||\n            (this.popupObj.element && this.popupObj.element.contains(e.target)))) && e.type !== 'touchstart') {\n            e.preventDefault();\n        }\n        var target = e.target;\n        if (!((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-datepicker.e-popup-wrapper')) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper)\n            && !((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + INPUTCONTAINER) === this.inputWrapper.container)\n            && (!target.classList.contains('e-day'))\n            && (!target.classList.contains('e-dlg-overlay'))) {\n            this.hide(e);\n            this.focusOut();\n        }\n        else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-datepicker.e-popup-wrapper')) {\n            // Fix for close the popup when select the previously selected value.\n            if (target.classList.contains('e-day')\n                && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.target.parentElement)\n                && e.target.parentElement.classList.contains('e-selected')\n                && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-content')\n                && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-content').classList.contains('e-' + this.depth.toLowerCase())) {\n                this.hide(e);\n            }\n            else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-footer-container')\n                && target.classList.contains('e-today')\n                && target.classList.contains('e-btn')\n                && (+new Date(+this.value) === +_super.prototype.generateTodayVal.call(this, this.value))) {\n                this.hide(e);\n            }\n        }\n    };\n    DatePicker.prototype.inputKeyActionHandle = function (e) {\n        var clickedView = this.currentView();\n        switch (e.action) {\n            case 'altUpArrow':\n                this.isAltKeyPressed = false;\n                this.hide(e);\n                this.inputElement.focus();\n                break;\n            case 'altDownArrow':\n                this.isAltKeyPressed = true;\n                this.strictModeUpdate();\n                this.updateInput();\n                this.changeTrigger(e);\n                if (this.getModuleName() === 'datepicker') {\n                    this.show(null, e);\n                }\n                break;\n            case 'escape':\n                this.hide(e);\n                break;\n            case 'enter':\n                this.strictModeUpdate();\n                this.updateInput();\n                this.popupUpdate();\n                this.changeTrigger(e);\n                this.errorClass();\n                if (!this.isCalendar() && document.activeElement === this.inputElement) {\n                    this.hide(e);\n                }\n                if (this.isCalendar()) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            case 'tab':\n            case 'shiftTab':\n                {\n                    var start = this.inputElement.selectionStart;\n                    var end = this.inputElement.selectionEnd;\n                    if (this.enableMask && !this.popupObj && !this.readonly) {\n                        var length_1 = this.inputElement.value.length;\n                        if ((start === 0 && end === length_1) || (end !== length_1 && e.action === 'tab') || (start !== 0 && e.action === 'shiftTab')) {\n                            e.preventDefault();\n                        }\n                        this.notify('keyDownHandler', {\n                            module: 'MaskedDateTime',\n                            e: e\n                        });\n                        start = this.inputElement.selectionStart;\n                        end = this.inputElement.selectionEnd;\n                    }\n                    this.strictModeUpdate();\n                    this.updateInput();\n                    this.popupUpdate();\n                    this.changeTrigger(e);\n                    this.errorClass();\n                    if (this.enableMask) {\n                        this.inputElement.selectionStart = start;\n                        this.inputElement.selectionEnd = end;\n                    }\n                    if (e.action === 'tab' && e.target === this.inputElement && this.isCalendar() && document.activeElement === this.inputElement) {\n                        e.preventDefault();\n                        this.headerTitleElement.focus();\n                    }\n                    if (e.action === 'shiftTab' && e.target === this.inputElement && this.isCalendar() && document.activeElement === this.inputElement) {\n                        this.hide(e);\n                    }\n                    break;\n                }\n            default:\n                this.defaultAction(e);\n                // Fix for close the popup when select the previously selected value.\n                if (e.action === 'select' && clickedView === this.depth) {\n                    this.hide(e);\n                }\n        }\n    };\n    DatePicker.prototype.defaultAction = function (e) {\n        this.previousDate = ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) && new Date(+this.value)) || null);\n        if (this.isCalendar()) {\n            _super.prototype.keyActionHandle.call(this, e);\n            if (this.isCalendar()) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.inputElement, {\n                    'aria-activedescendant': '' + this.setActiveDescendant()\n                });\n            }\n        }\n    };\n    DatePicker.prototype.popupUpdate = function () {\n        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value)) && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.previousDate)) ||\n            (((this.getModuleName() !== 'datetimepicker') && (+this.value !== +this.previousDate)) || ((this.getModuleName() === 'datetimepicker') && (+this.value !== +this.previousDateTime)))) {\n            if (this.popupObj) {\n                if (this.popupObj.element.querySelectorAll('.' + SELECTED).length > 0) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(this.popupObj.element.querySelectorAll('.' + SELECTED), [SELECTED]);\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value)) {\n                if ((+this.value >= +this.min) && (+this.value <= +this.max)) {\n                    var targetdate = new Date(this.checkValue(this.value));\n                    _super.prototype.navigateTo.call(this, 'Month', targetdate);\n                }\n            }\n        }\n    };\n    DatePicker.prototype.strictModeUpdate = function () {\n        var format;\n        var pattern = /^y/;\n        var charPattern = /[^a-zA-Z]/;\n        var formatOptions;\n        if (this.getModuleName() === 'datetimepicker') {\n            format = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formatString) ? this.formatString : this.dateTimeFormat;\n        }\n        else if (!pattern.test(this.formatString) || charPattern.test(this.formatString)) {\n            format = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formatString) ? this.formatString : this.formatString.replace('dd', 'd');\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(format)) {\n            var len = format.split('M').length - 1;\n            if (len < 3) {\n                format = format.replace('MM', 'M');\n            }\n        }\n        else {\n            format = this.formatString;\n        }\n        var dateOptions;\n        if (this.getModuleName() === 'datetimepicker') {\n            if (this.calendarMode === 'Gregorian') {\n                dateOptions = {\n                    format: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formatString) ? this.formatString : this.dateTimeFormat,\n                    type: 'dateTime', skeleton: 'yMd'\n                };\n            }\n            else {\n                dateOptions = {\n                    format: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formatString) ? this.formatString : this.dateTimeFormat,\n                    type: 'dateTime', skeleton: 'yMd', calendar: 'islamic'\n                };\n            }\n        }\n        else {\n            if (this.calendarMode === 'Gregorian') {\n                formatOptions = { format: format, type: 'dateTime', skeleton: 'yMd' };\n            }\n            else {\n                formatOptions = { format: format, type: 'dateTime', skeleton: 'yMd', calendar: 'islamic' };\n            }\n            dateOptions = formatOptions;\n        }\n        var date;\n        if (typeof this.inputElement.value === 'string') {\n            this.inputElement.value = this.inputElement.value.trim();\n        }\n        if ((this.getModuleName() === 'datetimepicker')) {\n            if (this.checkDateValue(this.globalize.parseDate(this.getAmPmValue(this.inputElement.value), dateOptions))) {\n                date = this.globalize.parseDate(this.getAmPmValue(this.inputElement.value), dateOptions);\n            }\n            else {\n                if (this.calendarMode === 'Gregorian') {\n                    formatOptions = { format: format, type: 'dateTime', skeleton: 'yMd' };\n                }\n                else {\n                    formatOptions = { format: format, type: 'dateTime', skeleton: 'yMd', calendar: 'islamic' };\n                }\n                date = this.globalize.parseDate(this.getAmPmValue(this.inputElement.value), formatOptions);\n            }\n            if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(date) || (typeof (date) === 'object' && isNaN(date.getTime())))\n                && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputFormatsString)) {\n                for (var _i = 0, _a = this.inputFormatsString; _i < _a.length; _i++) {\n                    var format_1 = _a[_i];\n                    var inputFormatOptions = void 0;\n                    if (this.calendarMode === 'Gregorian') {\n                        inputFormatOptions = { format: format_1, type: 'dateTime', skeleton: 'yMd' };\n                    }\n                    else {\n                        inputFormatOptions = { format: format_1, type: 'dateTime', skeleton: 'yMd', calendar: 'islamic' };\n                    }\n                    date = this.globalize.parseDate(this.getAmPmValue(this.inputElement.value), inputFormatOptions);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(date) && date instanceof Date && !isNaN(date.getTime())) {\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            date = this.globalize.parseDate(this.getAmPmValue(this.inputElement.value), dateOptions);\n            if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(date) || (typeof (date) === 'object' && isNaN(date.getTime())))\n                && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputFormatsString)) {\n                for (var _b = 0, _c = this.inputFormatsString; _b < _c.length; _b++) {\n                    var format_2 = _c[_b];\n                    var inputFormatOptions = void 0;\n                    if (this.calendarMode === 'Gregorian') {\n                        inputFormatOptions = { format: format_2, type: 'dateTime', skeleton: 'yMd' };\n                    }\n                    else {\n                        inputFormatOptions = { format: format_2, type: 'dateTime', skeleton: 'yMd', calendar: 'islamic' };\n                    }\n                    date = this.globalize.parseDate(this.getAmPmValue(this.inputElement.value), inputFormatOptions);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(date) && date instanceof Date && !isNaN(date.getTime())) {\n                        break;\n                    }\n                }\n            }\n            date = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(date) && isNaN(+date)) ? null : date;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formatString) && this.inputElement.value !== '' && this.strictMode) {\n                if ((this.isPopupClicked || (!this.isPopupClicked && this.inputElement.value === this.previousElementValue))\n                    && this.formatString.indexOf('y') === -1) {\n                    date.setFullYear(this.value.getFullYear());\n                }\n            }\n        }\n        // EJ2-35061 - To prevent change event from triggering twice when using strictmode and format property\n        if ((this.getModuleName() === 'datepicker') && (this.value && !isNaN(+this.value)) && date) {\n            date.setHours(this.value.getHours(), this.value.getMinutes(), this.value.getSeconds(), this.value.getMilliseconds());\n        }\n        if (this.strictMode && date) {\n            this.updateInputValue(this.globalize.formatDate(date, dateOptions));\n            if (this.inputElement.value !== this.previousElementValue) {\n                this.setProperties({ value: date }, true);\n            }\n        }\n        else if (!this.strictMode) {\n            if (this.inputElement.value !== this.previousElementValue) {\n                this.setProperties({ value: date }, true);\n            }\n        }\n        if (this.strictMode && !date && this.inputElement.value === (this.enableMask ? this.maskedDateValue : '')) {\n            this.setProperties({ value: null }, true);\n        }\n        if (isNaN(+this.value)) {\n            this.setProperties({ value: null }, true);\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value)) {\n            this.currentDate = new Date(new Date().setHours(0, 0, 0, 0));\n        }\n    };\n    DatePicker.prototype.createCalendar = function () {\n        var _this = this;\n        this.popupWrapper = this.createElement('div', { className: '' + ROOT + ' ' + POPUPWRAPPER, id: this.inputElement.id + '_options' });\n        this.popupWrapper.setAttribute('aria-label', this.element.id);\n        this.popupWrapper.setAttribute('role', 'dialog');\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.cssClass)) {\n            this.popupWrapper.className += ' ' + this.cssClass;\n        }\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.modelHeader();\n            this.modal = this.createElement('div');\n            this.modal.className = '' + ROOT + ' e-date-modal';\n            document.body.className += ' ' + OVERFLOW;\n            this.modal.style.display = 'block';\n            document.body.appendChild(this.modal);\n        }\n        //this.calendarElement represent the Calendar object from the Calendar class.\n        this.calendarElement.querySelector('table tbody').className = '';\n        this.popupObj = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_1__.Popup(this.popupWrapper, {\n            content: this.calendarElement,\n            relateTo: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? document.body : this.inputWrapper.container,\n            position: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? { X: 'center', Y: 'center' } : (this.enableRtl ? { X: 'right', Y: 'bottom' } : { X: 'left', Y: 'bottom' }),\n            offsetY: OFFSETVALUE,\n            targetType: 'container',\n            enableRtl: this.enableRtl,\n            zIndex: this.zIndex,\n            collision: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? { X: 'fit', Y: 'fit' } : (this.enableRtl ? { X: 'fit', Y: 'flip' } : { X: 'flip', Y: 'flip' }),\n            open: function () {\n                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && _this.fullScreenMode) {\n                    _this.iconRight = parseInt(window.getComputedStyle(_this.calendarElement.querySelector('.e-header.e-month .e-prev')).marginRight, 10) > 16 ? true : false;\n                    _this.touchModule = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Touch(_this.calendarElement.querySelector('.e-content.e-month'), {\n                        swipe: _this.CalendarSwipeHandler.bind(_this)\n                    });\n                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(_this.calendarElement.querySelector('.e-content.e-month'), 'touchstart', _this.TouchStartHandler, _this);\n                }\n                if (_this.getModuleName() !== 'datetimepicker') {\n                    if (document.activeElement !== _this.inputElement) {\n                        _this.defaultKeyConfigs = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(_this.defaultKeyConfigs, _this.keyConfigs);\n                        _this.calendarElement.children[1].firstElementChild.focus();\n                        _this.calendarKeyboardModules = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.KeyboardEvents(_this.calendarElement.children[1].firstElementChild, {\n                            eventName: 'keydown',\n                            keyAction: _this.calendarKeyActionHandle.bind(_this),\n                            keyConfigs: _this.defaultKeyConfigs\n                        });\n                        _this.calendarKeyboardModules = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.KeyboardEvents(_this.inputWrapper.container.children[_this.index], {\n                            eventName: 'keydown',\n                            keyAction: _this.calendarKeyActionHandle.bind(_this),\n                            keyConfigs: _this.defaultKeyConfigs\n                        });\n                    }\n                }\n            }, close: function () {\n                if (_this.isDateIconClicked) {\n                    _this.inputWrapper.container.children[_this.index].focus();\n                }\n                if (_this.value) {\n                    _this.disabledDates();\n                }\n                if (_this.popupObj) {\n                    _this.popupObj.destroy();\n                }\n                _this.resetCalendar();\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(_this.popupWrapper);\n                _this.popupObj = _this.popupWrapper = null;\n                _this.preventArgs = null;\n                _this.calendarKeyboardModules = null;\n                _this.setAriaAttributes();\n            }, targetExitViewport: function () {\n                if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                    _this.hide();\n                }\n            }\n        });\n        this.popupObj.element.className += ' ' + this.cssClass;\n        this.setAriaAttributes();\n    };\n    DatePicker.prototype.getAmPmValue = function (date) {\n        try {\n            if (typeof date === 'string' && date.trim() !== '') {\n                // Replace am/pm variants with uppercase AM/PM\n                return date.replace(/(am|pm|Am|aM|pM|Pm)/g, function (match) { return match.toLocaleUpperCase(); });\n            }\n            // If date is null, undefined, or an empty string, return a default value or empty string\n            return '';\n        }\n        catch (error) {\n            console.error('Error occurred while processing date:', error);\n            return ''; // Return a default value in case of an error\n        }\n    };\n    DatePicker.prototype.CalendarSwipeHandler = function (e) {\n        var direction = 0;\n        if (this.iconRight) {\n            switch (e.swipeDirection) {\n                case 'Left':\n                    direction = 1;\n                    break;\n                case 'Right':\n                    direction = -1;\n                    break;\n                default:\n                    break;\n            }\n        }\n        else {\n            switch (e.swipeDirection) {\n                case 'Up':\n                    direction = 1;\n                    break;\n                case 'Down':\n                    direction = -1;\n                    break;\n                default:\n                    break;\n            }\n        }\n        if (this.touchStart) {\n            if (direction === 1) {\n                this.navigateNext(e);\n            }\n            else if (direction === -1) {\n                this.navigatePrevious(e);\n            }\n            this.touchStart = false;\n        }\n    };\n    DatePicker.prototype.TouchStartHandler = function (e) {\n        this.touchStart = true;\n    };\n    DatePicker.prototype.setAriaDisabled = function () {\n        if (!this.enabled) {\n            this.inputElement.setAttribute('aria-disabled', 'true');\n            this.inputElement.tabIndex = -1;\n        }\n        else {\n            this.inputElement.setAttribute('aria-disabled', 'false');\n            this.inputElement.setAttribute('tabindex', this.tabIndex);\n        }\n    };\n    DatePicker.prototype.modelHeader = function () {\n        var dateOptions;\n        var modelHeader = this.createElement('div', { className: 'e-model-header' });\n        var yearHeading = this.createElement('h1', { className: 'e-model-year' });\n        var h2 = this.createElement('div');\n        var daySpan = this.createElement('span', { className: 'e-model-day' });\n        var monthSpan = this.createElement('span', { className: 'e-model-month' });\n        if (this.calendarMode === 'Gregorian') {\n            dateOptions = { format: 'y', skeleton: 'dateTime' };\n        }\n        else {\n            dateOptions = { format: 'y', skeleton: 'dateTime', calendar: 'islamic' };\n        }\n        yearHeading.textContent = '' + this.globalize.formatDate(this.value || new Date(), dateOptions);\n        if (this.calendarMode === 'Gregorian') {\n            dateOptions = { format: 'E', skeleton: 'dateTime' };\n        }\n        else {\n            dateOptions = { format: 'E', skeleton: 'dateTime', calendar: 'islamic' };\n        }\n        daySpan.textContent = '' + this.globalize.formatDate(this.value || new Date(), dateOptions) + ', ';\n        if (this.calendarMode === 'Gregorian') {\n            dateOptions = { format: 'MMM d', skeleton: 'dateTime' };\n        }\n        else {\n            dateOptions = { format: 'MMM d', skeleton: 'dateTime', calendar: 'islamic' };\n        }\n        monthSpan.textContent = '' + this.globalize.formatDate(this.value || new Date(), dateOptions);\n        if (this.fullScreenMode) {\n            var modelCloseIcon = this.createElement('span', { className: 'e-popup-close' });\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(modelCloseIcon, 'mousedown touchstart', this.modelCloseHandler, this);\n            var modelTodayButton = this.calendarElement.querySelector('button.e-today');\n            h2.classList.add('e-day-wrapper');\n            modelTodayButton.classList.add('e-outline');\n            modelHeader.appendChild(modelCloseIcon);\n            modelHeader.appendChild(modelTodayButton);\n        }\n        if (!this.fullScreenMode) {\n            modelHeader.appendChild(yearHeading);\n        }\n        h2.appendChild(daySpan);\n        h2.appendChild(monthSpan);\n        modelHeader.appendChild(h2);\n        this.calendarElement.insertBefore(modelHeader, this.calendarElement.firstElementChild);\n    };\n    DatePicker.prototype.modelCloseHandler = function (e) {\n        this.hide();\n    };\n    DatePicker.prototype.changeTrigger = function (event) {\n        if (this.inputElement.value !== this.previousElementValue) {\n            if (((this.previousDate && this.previousDate.valueOf()) !== (this.value && this.value.valueOf()))) {\n                if (this.isDynamicValueChanged && this.isCalendar()) {\n                    this.popupUpdate();\n                }\n                this.changedArgs.value = this.value;\n                this.changedArgs.event = event || null;\n                this.changedArgs.element = this.element;\n                this.changedArgs.isInteracted = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(event);\n                if (this.isAngular && this.preventChange) {\n                    this.preventChange = false;\n                }\n                else {\n                    this.trigger('change', this.changedArgs);\n                }\n                this.previousElementValue = this.inputElement.value;\n                this.previousDate = !isNaN(+new Date(this.checkValue(this.value))) ? new Date(this.checkValue(this.value)) : null;\n                this.isInteracted = true;\n            }\n        }\n        this.isKeyAction = false;\n    };\n    DatePicker.prototype.navigatedEvent = function (eve) {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(this.navigatedArgs, { name: 'navigated', event: eve });\n        this.trigger('navigated', this.navigatedArgs);\n    };\n    DatePicker.prototype.keyupHandler = function (e) {\n        this.isKeyAction = (this.inputElement.value !== this.previousElementValue) ? true : false;\n        if (this.enableMask && this.showClearButton && this.inputElement && this.inputElement.value === this.maskedDateValue && this.inputWrapper && this.inputWrapper.clearButton && !this.inputWrapper.clearButton.classList.contains('e-clear-icon-hide')) {\n            this.inputWrapper.clearButton.classList.add('e-clear-icon-hide');\n        }\n    };\n    DatePicker.prototype.changeEvent = function (event) {\n        if (!this.isIconClicked && !(this.isBlur || this.isKeyAction)) {\n            this.selectCalendar(event);\n        }\n        if (((this.previousDate && this.previousDate.valueOf()) !== (this.value && this.value.valueOf()))) {\n            this.changedArgs.event = event ? event : null;\n            this.changedArgs.element = this.element;\n            this.changedArgs.isInteracted = this.isInteracted;\n            if (!this.isDynamicValueChanged) {\n                this.trigger('change', this.changedArgs);\n            }\n            this.previousDate = this.value && new Date(+this.value);\n            if (!this.isDynamicValueChanged) {\n                this.hide(event);\n            }\n            this.previousElementValue = this.inputElement.value;\n            this.errorClass();\n        }\n        else if (event) {\n            this.hide(event);\n        }\n        this.isKeyAction = false;\n    };\n    DatePicker.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.calendarMode === 'Islamic') {\n            modules.push({ args: [this], member: 'islamic', name: 'Islamic' });\n        }\n        if (this.enableMask) {\n            modules.push({ args: [this], member: 'MaskedDateTime' });\n        }\n        return modules;\n    };\n    DatePicker.prototype.selectCalendar = function (e) {\n        var date;\n        var tempFormat;\n        var formatOptions;\n        if (this.getModuleName() === 'datetimepicker') {\n            tempFormat = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formatString) ? this.formatString : this.dateTimeFormat;\n        }\n        else {\n            tempFormat = this.formatString;\n        }\n        if (this.value) {\n            if (this.getModuleName() === 'datetimepicker') {\n                if (this.calendarMode === 'Gregorian') {\n                    formatOptions = { format: tempFormat, type: 'dateTime', skeleton: 'yMd' };\n                }\n                else {\n                    formatOptions = { format: tempFormat, type: 'dateTime', skeleton: 'yMd', calendar: 'islamic' };\n                }\n                date = this.globalize.formatDate(this.changedArgs.value, formatOptions);\n            }\n            else {\n                if (this.calendarMode === 'Gregorian') {\n                    formatOptions = { format: this.formatString, type: 'dateTime', skeleton: 'yMd' };\n                }\n                else {\n                    formatOptions = { format: this.formatString, type: 'dateTime', skeleton: 'yMd', calendar: 'islamic' };\n                }\n                date = this.globalize.formatDate(this.changedArgs.value, formatOptions);\n            }\n            if (this.enableMask) {\n                this.notify('createMask', {\n                    module: 'MaskedDateTime'\n                });\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(date)) {\n            this.updateInputValue(date);\n            if (this.enableMask) {\n                this.notify('setMaskSelection', {\n                    module: 'MaskedDateTime'\n                });\n            }\n        }\n    };\n    DatePicker.prototype.isCalendar = function () {\n        if (this.popupWrapper && this.popupWrapper.classList.contains('' + POPUPWRAPPER)) {\n            return true;\n        }\n        return false;\n    };\n    DatePicker.prototype.setWidth = function (width) {\n        if (typeof width === 'number') {\n            this.inputWrapper.container.style.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.width);\n        }\n        else if (typeof width === 'string') {\n            this.inputWrapper.container.style.width = (width.match(/px|%|em/)) ? (this.width) : ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.width));\n        }\n        else {\n            this.inputWrapper.container.style.width = '100%';\n        }\n    };\n    /* eslint-disable valid-jsdoc, jsdoc/require-param */\n    /**\n     * Shows the Calendar.\n     *\n     * @returns {void}\n     * @deprecated\n     */\n    DatePicker.prototype.show = function (type, e) {\n        var _this = this;\n        if ((this.enabled && this.readonly) || !this.enabled || this.popupObj) {\n            return;\n        }\n        else {\n            var prevent_1 = true;\n            var outOfRange = void 0;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) && !(+this.value >= +new Date(this.checkValue(this.min))\n                && +this.value <= +new Date(this.checkValue(this.max)))) {\n                outOfRange = new Date(this.checkValue(this.value));\n                this.setProperties({ 'value': null }, true);\n            }\n            else {\n                outOfRange = this.value || null;\n            }\n            if (!this.isCalendar()) {\n                _super.prototype.render.call(this);\n                this.setProperties({ 'value': outOfRange || null }, true);\n                this.previousDate = outOfRange;\n                this.createCalendar();\n            }\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                this.mobilePopupWrapper = this.createElement('div', { className: 'e-datepick-mob-popup-wrap' });\n                document.body.appendChild(this.mobilePopupWrapper);\n            }\n            this.preventArgs = {\n                preventDefault: function () {\n                    prevent_1 = false;\n                },\n                popup: this.popupObj,\n                event: e || null,\n                cancel: false,\n                appendTo: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? this.mobilePopupWrapper : document.body\n            };\n            var eventArgs = this.preventArgs;\n            this.trigger('open', eventArgs, function (eventArgs) {\n                _this.preventArgs = eventArgs;\n                if (prevent_1 && !_this.preventArgs.cancel) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(_this.inputWrapper.buttons, ACTIVE);\n                    _this.preventArgs.appendTo.appendChild(_this.popupWrapper);\n                    _this.popupObj.refreshPosition(_this.inputElement);\n                    var openAnimation = {\n                        name: 'FadeIn',\n                        duration: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? 0 : OPENDURATION\n                    };\n                    if (_this.zIndex === 1000) {\n                        _this.popupObj.show(new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation(openAnimation), _this.element);\n                    }\n                    else {\n                        _this.popupObj.show(new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation(openAnimation), null);\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    _super.prototype.setOverlayIndex.call(_this, _this.mobilePopupWrapper, _this.popupObj.element, _this.modal, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice);\n                    _this.setAriaAttributes();\n                    if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                        var dlgOverlay = _this.createElement('div', { className: 'e-dlg-overlay' });\n                        dlgOverlay.style.zIndex = (_this.zIndex - 1).toString();\n                        _this.mobilePopupWrapper.appendChild(dlgOverlay);\n                    }\n                }\n                else {\n                    _this.popupObj.destroy();\n                    _this.popupWrapper = _this.popupObj = null;\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.inputElement) && _this.inputElement.value === '') {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.tableBodyElement) && _this.tableBodyElement.querySelectorAll('td.e-selected').length > 0) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([_this.tableBodyElement.querySelector('td.e-selected')], FOCUSEDDATE);\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(_this.tableBodyElement.querySelectorAll('td.e-selected'), SELECTED);\n                    }\n                }\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'mousedown touchstart', _this.documentHandler, _this);\n            });\n        }\n    };\n    /**\n     * Hide the Calendar.\n     *\n     * @returns {void}\n     * @deprecated\n     */\n    DatePicker.prototype.hide = function (event) {\n        var _this = this;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.popupWrapper)) {\n            var prevent_2 = true;\n            this.preventArgs = {\n                preventDefault: function () {\n                    prevent_2 = false;\n                },\n                popup: this.popupObj,\n                event: event || null,\n                cancel: false\n            };\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(this.inputWrapper.buttons, ACTIVE);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([document.body], OVERFLOW);\n            var eventArgs = this.preventArgs;\n            if (this.isCalendar()) {\n                this.trigger('close', eventArgs, function (eventArgs) {\n                    _this.closeEventCallback(prevent_2, eventArgs);\n                });\n            }\n            else {\n                this.closeEventCallback(prevent_2, eventArgs);\n            }\n        }\n        else {\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.allowEdit && !this.readonly) {\n                this.inputElement.removeAttribute('readonly');\n            }\n            this.setAllowEdit();\n        }\n    };\n    /* eslint-enable valid-jsdoc, jsdoc/require-param */\n    DatePicker.prototype.closeEventCallback = function (prevent, eventArgs) {\n        this.preventArgs = eventArgs;\n        if (this.isCalendar() && (prevent && !this.preventArgs.cancel)) {\n            this.popupObj.hide();\n            this.isAltKeyPressed = false;\n            this.keyboardModule.destroy();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(this.inputWrapper.buttons, ACTIVE);\n        }\n        this.setAriaAttributes();\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.modal) {\n            this.modal.style.display = 'none';\n            this.modal.outerHTML = '';\n            this.modal = null;\n        }\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.mobilePopupWrapper) &&\n                (prevent && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.preventArgs) || !this.preventArgs.cancel))) {\n                this.mobilePopupWrapper.remove();\n                this.mobilePopupWrapper = null;\n            }\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'mousedown touchstart', this.documentHandler);\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && this.allowEdit && !this.readonly) {\n            this.inputElement.removeAttribute('readonly');\n        }\n        this.setAllowEdit();\n    };\n    /* eslint-disable jsdoc/require-param */\n    /**\n     * Sets the focus to widget for interaction.\n     *\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    DatePicker.prototype.focusIn = function (triggerEvent) {\n        if (document.activeElement !== this.inputElement && this.enabled) {\n            this.inputElement.focus();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputWrapper.container], [INPUTFOCUS]);\n        }\n    };\n    /* eslint-enable jsdoc/require-param */\n    /**\n     * Remove the focus from widget, if the widget is in focus state.\n     *\n     * @returns {void}\n     */\n    DatePicker.prototype.focusOut = function () {\n        if (document.activeElement === this.inputElement) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.inputWrapper.container], [INPUTFOCUS]);\n            this.inputElement.blur();\n        }\n    };\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Gets the current view of the DatePicker.\n     *\n     * @returns {string}\n     * @deprecated\n     */\n    DatePicker.prototype.currentView = function () {\n        var currentView;\n        if (this.calendarElement) {\n            // calls the Calendar currentView public method\n            currentView = _super.prototype.currentView.call(this);\n        }\n        return currentView;\n    };\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Navigates to specified month or year or decade view of the DatePicker.\n     *\n     * @param  {string} view - Specifies the view of the calendar.\n     * @param  {Date} date - Specifies the focused date in a view.\n     * @returns {void}\n     * @deprecated\n     */\n    DatePicker.prototype.navigateTo = function (view, date) {\n        if (this.calendarElement) {\n            // calls the Calendar navigateTo public method\n            _super.prototype.navigateTo.call(this, view, date);\n        }\n    };\n    /**\n     * To destroy the widget.\n     *\n     * @returns {void}\n     */\n    DatePicker.prototype.destroy = function () {\n        this.unBindEvents();\n        if (this.showClearButton) {\n            this.clearButton = document.getElementsByClassName('e-clear-icon')[0];\n        }\n        _super.prototype.destroy.call(this);\n        _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.destroy({\n            element: this.inputElement,\n            floatLabelType: this.floatLabelType,\n            properties: this.properties\n        }, this.clearButton);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.keyboardModules)) {\n            this.keyboardModules.destroy();\n        }\n        if (this.popupObj && this.popupObj.element.classList.contains(POPUP)) {\n            _super.prototype.destroy.call(this);\n        }\n        var ariaAttrs = {\n            'aria-atomic': 'true', 'aria-disabled': 'true',\n            'aria-expanded': 'false', 'role': 'combobox', 'autocomplete': 'off',\n            'autocorrect': 'off', 'autocapitalize': 'off', 'spellcheck': 'false'\n        };\n        if (this.inputElement.hasAttribute('aria-label')) {\n            this.inputElement.removeAttribute('aria-label');\n        }\n        if (this.inputElement) {\n            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.removeAttributes(ariaAttrs, this.inputElement);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputElementCopy.getAttribute('tabindex'))) {\n                this.inputElement.setAttribute('tabindex', this.tabIndex);\n            }\n            else {\n                this.inputElement.removeAttribute('tabindex');\n            }\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.inputElement, 'blur', this.inputBlurHandler);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.inputElement, 'focus', this.inputFocusHandler);\n            this.ensureInputAttribute();\n        }\n        if (this.isCalendar()) {\n            if (this.popupWrapper) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.popupWrapper);\n            }\n            this.popupObj = this.popupWrapper = null;\n            this.keyboardModule.destroy();\n        }\n        if (this.ngTag === null) {\n            if (this.inputElement) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper)) {\n                    this.inputWrapper.container.insertAdjacentElement('afterend', this.inputElement);\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.inputElement], [INPUTROOT]);\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], [ROOT]);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper)) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.inputWrapper.container);\n            }\n        }\n        if (this.formElement) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.formElement, 'reset', this.resetFormHandler);\n        }\n        this.inputWrapper = null;\n        this.keyboardModules = null;\n    };\n    DatePicker.prototype.ensureInputAttribute = function () {\n        var prop = [];\n        for (var i = 0; i < this.inputElement.attributes.length; i++) {\n            prop[i] = this.inputElement.attributes[i].name;\n        }\n        for (var i = 0; i < prop.length; i++) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputElementCopy.getAttribute(prop[i]))) {\n                if (prop[i].toLowerCase() === 'value') {\n                    this.inputElement.value = '';\n                }\n                this.inputElement.removeAttribute(prop[i]);\n            }\n            else {\n                if (prop[i].toLowerCase() === 'value') {\n                    this.inputElement.value = this.inputElementCopy.getAttribute(prop[i]);\n                }\n                this.inputElement.setAttribute(prop[i], this.inputElementCopy.getAttribute(prop[i]));\n            }\n        }\n    };\n    /**\n     * Initialize the event handler\n     *\n     * @returns {void}\n     * @private\n     */\n    DatePicker.prototype.preRender = function () {\n        this.inputElementCopy = this.element.cloneNode(true);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.inputElementCopy], [ROOT, CONTROL, LIBRARY]);\n        this.inputElement = this.element;\n        this.formElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.inputElement, 'form');\n        this.index = this.showClearButton ? 2 : 1;\n        this.ngTag = null;\n        if (this.element.tagName === 'EJS-DATEPICKER' || this.element.tagName === 'EJS-DATETIMEPICKER') {\n            this.ngTag = this.element.tagName;\n            this.inputElement = this.createElement('input');\n            this.element.appendChild(this.inputElement);\n        }\n        if (this.element.getAttribute('id')) {\n            if (this.ngTag !== null) {\n                this.inputElement.id = this.element.getAttribute('id') + '_input';\n            }\n        }\n        else {\n            if (this.getModuleName() === 'datetimepicker') {\n                this.element.id = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getUniqueID)('ej2-datetimepicker');\n                if (this.ngTag !== null) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.inputElement, { 'id': this.element.id + '_input' });\n                }\n            }\n            else {\n                this.element.id = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getUniqueID)('ej2-datepicker');\n                if (this.ngTag !== null) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.inputElement, { 'id': this.element.id + '_input' });\n                }\n            }\n        }\n        if (this.ngTag !== null) {\n            this.validationAttribute(this.element, this.inputElement);\n        }\n        this.updateHtmlAttributeToElement();\n        this.defaultKeyConfigs = this.getDefaultKeyConfig();\n        this.checkHtmlAttributes(false);\n        if (this.inputFormats) {\n            this.checkInputFormats();\n        }\n        this.tabIndex = this.element.hasAttribute('tabindex') ? this.element.getAttribute('tabindex') : '0';\n        this.element.removeAttribute('tabindex');\n        _super.prototype.preRender.call(this);\n    };\n    DatePicker.prototype.getDefaultKeyConfig = function () {\n        this.defaultKeyConfigs = {\n            altUpArrow: 'alt+uparrow',\n            altDownArrow: 'alt+downarrow',\n            escape: 'escape',\n            enter: 'enter',\n            controlUp: 'ctrl+38',\n            controlDown: 'ctrl+40',\n            moveDown: 'downarrow',\n            moveUp: 'uparrow',\n            moveLeft: 'leftarrow',\n            moveRight: 'rightarrow',\n            select: 'enter',\n            home: 'home',\n            end: 'end',\n            pageUp: 'pageup',\n            pageDown: 'pagedown',\n            shiftPageUp: 'shift+pageup',\n            shiftPageDown: 'shift+pagedown',\n            controlHome: 'ctrl+home',\n            controlEnd: 'ctrl+end',\n            shiftTab: 'shift+tab',\n            tab: 'tab'\n        };\n        return this.defaultKeyConfigs;\n    };\n    DatePicker.prototype.validationAttribute = function (target, inputElement) {\n        var nameAttribute = target.getAttribute('name') ? target.getAttribute('name') : target.getAttribute('id');\n        inputElement.setAttribute('name', nameAttribute);\n        target.removeAttribute('name');\n        var attribute = ['required', 'aria-required', 'form'];\n        for (var i = 0; i < attribute.length; i++) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target.getAttribute(attribute[i]))) {\n                continue;\n            }\n            var attr = target.getAttribute(attribute[i]);\n            inputElement.setAttribute(attribute[i], attr);\n            target.removeAttribute(attribute[i]);\n        }\n    };\n    DatePicker.prototype.checkFormat = function () {\n        var culture = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization(this.locale);\n        if (this.format) {\n            if (typeof this.format === 'string') {\n                this.formatString = this.format;\n            }\n            else if (this.format.skeleton !== '' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.format.skeleton)) {\n                var skeletonString = this.format.skeleton;\n                if (this.getModuleName() === 'datetimepicker') {\n                    this.formatString = culture.getDatePattern({ skeleton: skeletonString, type: 'dateTime' });\n                }\n                else {\n                    this.formatString = culture.getDatePattern({ skeleton: skeletonString, type: 'date' });\n                }\n            }\n            else {\n                if (this.getModuleName() === 'datetimepicker') {\n                    this.formatString = this.dateTimeFormat;\n                }\n                else {\n                    this.formatString = null;\n                }\n            }\n        }\n        else {\n            this.formatString = null;\n        }\n    };\n    DatePicker.prototype.checkInputFormats = function () {\n        var culture = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization(this.locale);\n        this.inputFormatsString = [];\n        if (this.inputFormats) {\n            for (var _i = 0, _a = this.inputFormats; _i < _a.length; _i++) {\n                var format = _a[_i];\n                var formatString = '';\n                if (typeof format === 'string') {\n                    formatString = format;\n                }\n                else if (format.skeleton !== '' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(format.skeleton)) {\n                    var skeletonString = format.skeleton;\n                    if (this.getModuleName() === 'datetimepicker') {\n                        formatString = culture.getDatePattern({ skeleton: skeletonString, type: 'dateTime' });\n                    }\n                    else {\n                        formatString = culture.getDatePattern({ skeleton: skeletonString, type: 'date' });\n                    }\n                }\n                if (formatString) {\n                    this.inputFormatsString.push(formatString);\n                }\n            }\n            if (this.inputFormatsString.length === 0) {\n                this.inputFormatsString = null;\n            }\n        }\n        else {\n            this.inputFormatsString = null;\n        }\n    };\n    DatePicker.prototype.checkHtmlAttributes = function (dynamic) {\n        this.globalize = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization(this.locale);\n        this.checkFormat();\n        this.checkView();\n        var attributes = dynamic ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) :\n            ['value', 'min', 'max', 'disabled', 'readonly', 'style', 'name', 'placeholder', 'type'];\n        var options;\n        if (this.getModuleName() === 'datetimepicker') {\n            if (this.calendarMode === 'Gregorian') {\n                options = {\n                    format: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formatString) ? this.formatString : this.dateTimeFormat,\n                    type: 'dateTime', skeleton: 'yMd'\n                };\n            }\n            else {\n                options = {\n                    format: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formatString) ? this.formatString : this.dateTimeFormat,\n                    type: 'dateTime', skeleton: 'yMd', calendar: 'islamic'\n                };\n            }\n        }\n        else {\n            if (this.calendarMode === 'Gregorian') {\n                options = { format: this.formatString, type: 'dateTime', skeleton: 'yMd' };\n            }\n            else {\n                options = { format: this.formatString, type: 'dateTime', skeleton: 'yMd', calendar: 'islamic' };\n            }\n        }\n        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n            var prop = attributes_1[_i];\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputElement.getAttribute(prop))) {\n                switch (prop) {\n                    case 'disabled':\n                        if ((((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.datepickerOptions) || (this.datepickerOptions['enabled'] === undefined)) || dynamic)) {\n                            var enabled = this.inputElement.getAttribute(prop) === 'disabled' ||\n                                this.inputElement.getAttribute(prop) === '' ||\n                                this.inputElement.getAttribute(prop) === 'true' ? false : true;\n                            this.setProperties({ enabled: enabled }, !dynamic);\n                        }\n                        break;\n                    case 'readonly':\n                        if ((((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.datepickerOptions) || (this.datepickerOptions['readonly'] === undefined)) || dynamic)) {\n                            var readonly = this.inputElement.getAttribute(prop) === 'readonly' ||\n                                this.inputElement.getAttribute(prop) === '' || this.inputElement.getAttribute(prop) === 'true' ? true : false;\n                            this.setProperties({ readonly: readonly }, !dynamic);\n                        }\n                        break;\n                    case 'placeholder':\n                        if ((((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.datepickerOptions) || (this.datepickerOptions['placeholder'] === undefined)) || dynamic)) {\n                            this.setProperties({ placeholder: this.inputElement.getAttribute(prop) }, !dynamic);\n                        }\n                        break;\n                    case 'style':\n                        this.inputElement.setAttribute('style', '' + this.inputElement.getAttribute(prop));\n                        break;\n                    case 'name':\n                        this.inputElement.setAttribute('name', '' + this.inputElement.getAttribute(prop));\n                        break;\n                    case 'value':\n                        if ((((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.datepickerOptions) || (this.datepickerOptions['value'] === undefined)) || dynamic)) {\n                            var value = this.inputElement.getAttribute(prop);\n                            this.setProperties((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)(prop, this.globalize.parseDate(this.getAmPmValue(value), options), {}), !dynamic);\n                        }\n                        break;\n                    case 'min':\n                        if ((+this.min === +new Date(1900, 0, 1)) || dynamic) {\n                            var min = this.inputElement.getAttribute(prop);\n                            this.setProperties((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)(prop, this.globalize.parseDate(this.getAmPmValue(min), options), {}), !dynamic);\n                        }\n                        break;\n                    case 'max':\n                        if ((+this.max === +new Date(2099, 11, 31)) || dynamic) {\n                            var max = this.inputElement.getAttribute(prop);\n                            this.setProperties((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)(prop, this.globalize.parseDate(this.getAmPmValue(max), options), {}), !dynamic);\n                        }\n                        break;\n                    case 'type':\n                        if (this.inputElement.getAttribute(prop) !== 'text') {\n                            this.inputElement.setAttribute('type', 'text');\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    /**\n     * To get component name.\n     *\n     * @returns {string} Returns the component name.\n     * @private\n     */\n    DatePicker.prototype.getModuleName = function () {\n        return 'datepicker';\n    };\n    DatePicker.prototype.disabledDates = function (isDynamic, isBlur) {\n        if (isDynamic === void 0) { isDynamic = false; }\n        if (isBlur === void 0) { isBlur = false; }\n        var formatOptions;\n        var globalize;\n        var valueCopy = this.checkDateValue(this.value) ? new Date(+this.value) : new Date(this.checkValue(this.value));\n        var previousValCopy = this.previousDate;\n        //calls the Calendar render method to check the disabled dates through renderDayCell event and update the input value accordingly.\n        this.minMaxUpdates();\n        if (!isDynamic || (isDynamic && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.renderDayCell))) {\n            _super.prototype.render.call(this);\n        }\n        this.previousDate = previousValCopy;\n        var date = valueCopy && +(valueCopy);\n        var dateIdString = '*[id^=\"/id\"]'.replace('/id', '' + date);\n        if (!this.strictMode) {\n            if (typeof this.value === 'string' || ((typeof this.value === 'object') && (+this.value) !== (+valueCopy))) {\n                this.setProperties({ value: valueCopy }, true);\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.calendarElement) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.calendarElement.querySelectorAll(dateIdString)[0])) {\n            if (this.calendarElement.querySelectorAll(dateIdString)[0].classList.contains('e-disabled')) {\n                if (!this.strictMode) {\n                    this.currentDate = new Date(new Date().setHours(0, 0, 0, 0));\n                }\n            }\n        }\n        var inputVal;\n        if (this.getModuleName() === 'datetimepicker') {\n            if (this.calendarMode === 'Gregorian') {\n                globalize = this.globalize.formatDate(valueCopy, {\n                    format: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formatString) ? this.formatString : this.dateTimeFormat,\n                    type: 'dateTime', skeleton: 'yMd'\n                });\n            }\n            else {\n                globalize = this.globalize.formatDate(valueCopy, {\n                    format: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.formatString) ? this.formatString : this.dateTimeFormat,\n                    type: 'dateTime', skeleton: 'yMd', calendar: 'islamic'\n                });\n            }\n            inputVal = globalize;\n        }\n        else {\n            if (this.calendarMode === 'Gregorian') {\n                formatOptions = { format: this.formatString, type: 'dateTime', skeleton: 'yMd' };\n            }\n            else {\n                formatOptions = { format: this.formatString, type: 'dateTime', skeleton: 'yMd', calendar: 'islamic' };\n            }\n            inputVal = this.globalize.formatDate(valueCopy, formatOptions);\n        }\n        if (!this.popupObj) {\n            this.updateInputValue(inputVal);\n            if (this.enableMask) {\n                this.updateInputValue(this.maskedDateValue);\n                this.notify('createMask', {\n                    module: 'MaskedDateTime', isBlur: isBlur\n                });\n            }\n        }\n    };\n    DatePicker.prototype.setAriaAttributes = function () {\n        if (this.isCalendar()) {\n            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.addAttributes({ 'aria-expanded': 'true' }, this.inputElement);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.inputElement, { 'aria-owns': this.inputElement.id + '_options' });\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.inputElement, { 'aria-controls': this.inputElement.id });\n            if (this.value) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.inputElement, { 'aria-activedescendant': '' + this.setActiveDescendant() });\n            }\n        }\n        else {\n            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.addAttributes({ 'aria-expanded': 'false' }, this.inputElement);\n            this.inputElement.removeAttribute('aria-owns');\n            this.inputElement.removeAttribute('aria-controls');\n            this.inputElement.removeAttribute('aria-activedescendant');\n        }\n    };\n    DatePicker.prototype.errorClass = function () {\n        var dateIdString = '*[id^=\"/id\"]'.replace('/id', '' + (+this.value));\n        var isDisabledDate = this.calendarElement &&\n            this.calendarElement.querySelectorAll(dateIdString)[0] &&\n            this.calendarElement.querySelectorAll(dateIdString)[0].classList.contains('e-disabled');\n        if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.min) &&\n            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.max) && !(new Date(this.value).setMilliseconds(0) >=\n            new Date(this.min).setMilliseconds(0)\n            && new Date(this.value).setMilliseconds(0) <= new Date(this.max).setMilliseconds(0)))\n            || (!this.strictMode && this.inputElement.value !== '' && this.inputElement.value !== this.maskedDateValue &&\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value) || isDisabledDate) || !this.isValidTime(this.value)) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputWrapper.container], ERROR);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.inputElement, { 'aria-invalid': 'true' });\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper)) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.inputWrapper.container], ERROR);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.inputElement, { 'aria-invalid': 'false' });\n        }\n    };\n    DatePicker.prototype.isValidTime = function (value) {\n        return true;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {DatePickerModel} newProp - Returns the dynamic property value of the component.\n     * @param {DatePickerModel} oldProp - Returns the previous property value of the component.\n     * @returns {void}\n     * @private\n     */\n    DatePicker.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            var openPopup = ['blur', 'change', 'cleared', 'close', 'created', 'destroyed', 'focus', 'navigated', 'open', 'renderDayCell'];\n            if (openPopup.indexOf(prop) > 0 && this.isReact) {\n                this.isDynamicValueChanged = true;\n            }\n            switch (prop) {\n                case 'value':\n                    this.isDynamicValueChanged = true;\n                    this.isInteracted = false;\n                    this.invalidValueString = null;\n                    this.checkInvalidValue(newProp.value);\n                    newProp.value = this.value;\n                    this.previousElementValue = this.inputElement.value;\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.value)) {\n                        if (this.enableMask) {\n                            this.updateInputValue(this.maskedDateValue);\n                        }\n                        else {\n                            this.updateInputValue('');\n                        }\n                        this.currentDate = new Date(new Date().setHours(0, 0, 0, 0));\n                    }\n                    this.updateInput(true);\n                    if (+this.previousDate !== +this.value) {\n                        this.changeTrigger(null);\n                    }\n                    this.isInteracted = true;\n                    this.preventChange = this.isAngular && this.preventChange ? !this.preventChange : this.preventChange;\n                    if (this.enableMask) {\n                        this.notify('createMask', {\n                            module: 'MaskedDateTime'\n                        });\n                    }\n                    break;\n                case 'format':\n                    this.checkFormat();\n                    this.bindInputEvent();\n                    this.updateInput();\n                    if (this.enableMask) {\n                        this.notify('createMask', {\n                            module: 'MaskedDateTime'\n                        });\n                        if (!this.value) {\n                            this.updateInputValue(this.maskedDateValue);\n                        }\n                    }\n                    break;\n                case 'inputFormats':\n                    this.checkInputFormats();\n                    break;\n                case 'allowEdit':\n                    this.setAllowEdit();\n                    break;\n                case 'placeholder':\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setPlaceholder(this.placeholder, this.inputElement);\n                    break;\n                case 'readonly':\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setReadonly(this.readonly, this.inputElement);\n                    break;\n                case 'enabled':\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setEnabled(this.enabled, this.inputElement);\n                    this.setAriaDisabled();\n                    break;\n                case 'htmlAttributes':\n                    this.updateHtmlAttributeToElement();\n                    this.updateHtmlAttributeToWrapper();\n                    this.checkHtmlAttributes(true);\n                    break;\n                case 'locale':\n                    this.globalize = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization(this.locale);\n                    this.l10n.setLocale(this.locale);\n                    if (this.datepickerOptions && this.datepickerOptions.placeholder == null) {\n                        this.setProperties({ placeholder: this.l10n.getConstant('placeholder') }, true);\n                        _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setPlaceholder(this.placeholder, this.inputElement);\n                    }\n                    this.updateInput();\n                    if (this.enableMask) {\n                        this.notify('createMask', {\n                            module: 'MaskedDateTime'\n                        });\n                    }\n                    break;\n                case 'enableRtl':\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setEnableRtl(this.enableRtl, [this.inputWrapper.container]);\n                    break;\n                case 'start':\n                case 'depth':\n                    this.checkView();\n                    if (this.calendarElement) {\n                        _super.prototype.onPropertyChanged.call(this, newProp, oldProp);\n                    }\n                    break;\n                case 'zIndex':\n                    this.setProperties({ zIndex: newProp.zIndex }, true);\n                    break;\n                case 'cssClass':\n                    this.updateCssClass(newProp.cssClass, oldProp.cssClass);\n                    break;\n                case 'showClearButton':\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.setClearButton(this.showClearButton, this.inputElement, this.inputWrapper);\n                    this.bindClearEvent();\n                    this.index = this.showClearButton ? 2 : 1;\n                    break;\n                case 'strictMode':\n                    this.invalidValueString = null;\n                    this.updateInput();\n                    break;\n                case 'width':\n                    this.setWidth(newProp.width);\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.calculateWidth(this.inputElement, this.inputWrapper.container);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper.buttons[0]) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper.container.getElementsByClassName('e-float-text-overflow')[0]) && this.floatLabelType !== 'Never') {\n                        this.inputWrapper.container.getElementsByClassName('e-float-text-overflow')[0].classList.add('e-icon');\n                    }\n                    break;\n                case 'floatLabelType':\n                    this.floatLabelType = newProp.floatLabelType;\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.removeFloating(this.inputWrapper);\n                    _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_2__.Input.addFloating(this.inputElement, this.floatLabelType, this.placeholder);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper.buttons[0]) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inputWrapper.container.getElementsByClassName('e-float-text-overflow')[0]) && this.floatLabelType !== 'Never') {\n                        this.inputWrapper.container.getElementsByClassName('e-float-text-overflow')[0].classList.add('e-icon');\n                    }\n                    break;\n                case 'enableMask':\n                    if (this.enableMask) {\n                        this.notify('createMask', {\n                            module: 'MaskedDateTime'\n                        });\n                        this.updateInputValue(this.maskedDateValue);\n                        this.bindInputEvent();\n                    }\n                    else {\n                        if (this.inputElement.value === this.maskedDateValue) {\n                            this.updateInputValue('');\n                        }\n                    }\n                    break;\n                default:\n                    if (this.calendarElement && this.isCalendar()) {\n                        _super.prototype.onPropertyChanged.call(this, newProp, oldProp);\n                    }\n                    if (prop === 'min' && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.min)) {\n                        this.min = new Date(1900, 0, 1);\n                    }\n                    if (prop === 'max' && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.max)) {\n                        this.max = new Date(2099, 11, 31);\n                    }\n                    break;\n            }\n            if (!this.isDynamicValueChanged) {\n                this.hide(null);\n            }\n            this.isDynamicValueChanged = false;\n        }\n    };\n    /**\n     * @private\n     * @param {Date | Date[]} dates - Specifies the date or dates to be added to the values property of the Calendar.\n     * @returns {void}\n     */\n    DatePicker.prototype.addDate = function (dates) {\n        // no code\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DatePicker.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DatePicker.prototype, \"value\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DatePicker.prototype, \"cssClass\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], DatePicker.prototype, \"strictMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DatePicker.prototype, \"format\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DatePicker.prototype, \"inputFormats\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], DatePicker.prototype, \"enabled\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], DatePicker.prototype, \"fullScreenMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({})\n    ], DatePicker.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DatePicker.prototype, \"values\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], DatePicker.prototype, \"isMultiSelection\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], DatePicker.prototype, \"showClearButton\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], DatePicker.prototype, \"allowEdit\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DatePicker.prototype, \"keyConfigs\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], DatePicker.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1000)\n    ], DatePicker.prototype, \"zIndex\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], DatePicker.prototype, \"readonly\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DatePicker.prototype, \"placeholder\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Never')\n    ], DatePicker.prototype, \"floatLabelType\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], DatePicker.prototype, \"serverTimezoneOffset\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], DatePicker.prototype, \"openOnFocus\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], DatePicker.prototype, \"enableMask\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({ day: 'day', month: 'month', year: 'year', hour: 'hour', minute: 'minute', second: 'second', dayOfTheWeek: 'day of the week' })\n    ], DatePicker.prototype, \"maskPlaceholder\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], DatePicker.prototype, \"open\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], DatePicker.prototype, \"cleared\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], DatePicker.prototype, \"close\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], DatePicker.prototype, \"blur\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], DatePicker.prototype, \"focus\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], DatePicker.prototype, \"created\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], DatePicker.prototype, \"destroyed\", void 0);\n    DatePicker = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], DatePicker);\n    return DatePicker;\n}(_calendar_calendar__WEBPACK_IMPORTED_MODULE_3__.Calendar));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-calendars/src/datepicker/datepicker.js?");

/***/ })

}]);