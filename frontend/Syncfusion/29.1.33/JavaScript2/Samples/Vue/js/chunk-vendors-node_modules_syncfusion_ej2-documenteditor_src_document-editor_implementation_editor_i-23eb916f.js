"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_editor_i-23eb916f"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor/image-resizer.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor/image-resizer.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageResizer: () => (/* binding */ ImageResizer),\n/* harmony export */   ImageResizingPoints: () => (/* binding */ ImageResizingPoints),\n/* harmony export */   SelectedImageInfo: () => (/* binding */ SelectedImageInfo)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../index */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/index.js\");\n/* harmony import */ var _base_dictionary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../base/dictionary */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/dictionary.js\");\n/* harmony import */ var _selection_selection_helper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../selection/selection-helper */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/selection/selection-helper.js\");\n/* harmony import */ var _viewer_page__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../viewer/page */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/viewer/page.js\");\n/* harmony import */ var _editor_helper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./editor-helper */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor/editor-helper.js\");\n/* harmony import */ var _editor_history_base_history_info__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../editor-history/base-history-info */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor-history/base-history-info.js\");\n/* harmony import */ var _base_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../base/types */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/types.js\");\n\n\n\n\n\n\n\n\n/**\n * Image resizer implementation.\n */\nvar ImageResizer = /** @class */ (function () {\n    /**\n     * Constructor for image resizer module.\n     *\n     * @param {DocumentEditor} node - Specfies the document editor\n     * @param {DocumentHelper} documentHelper - Specified the document helper\n     * @private\n     */\n    function ImageResizer(node, documentHelper) {\n        /**\n         * @private\n         */\n        this.resizeContainerDiv = undefined;\n        /**\n         * @private\n         */\n        this.topLeftRect = undefined;\n        /**\n         * @private\n         */\n        this.topMiddleRect = undefined;\n        /**\n         * @private\n         */\n        this.topRightRect = undefined;\n        /**\n         * @private\n         */\n        this.bottomLeftRect = undefined;\n        /**\n         * @private\n         */\n        this.bottomMiddleRect = undefined;\n        /**\n         * @private\n         */\n        this.bottomRightRect = undefined;\n        /**\n         * @private\n         */\n        this.leftMiddleRect = undefined;\n        /**\n         * @private\n         */\n        this.rightMiddleRect = undefined;\n        /**\n         * @private\n         */\n        this.topLeftRectParent = undefined;\n        /**\n         * @private\n         */\n        this.topMiddleRectParent = undefined;\n        /**\n         * @private\n         */\n        this.topRightRectParent = undefined;\n        /**\n         * @private\n         */\n        this.bottomLeftRectParent = undefined;\n        /**\n         * @private\n         */\n        this.bottomMiddleRectParent = undefined;\n        /**\n         * @private\n         */\n        this.bottomRightRectParent = undefined;\n        /**\n         * @private\n         */\n        this.leftMiddleRectParent = undefined;\n        /**\n         * @private\n         */\n        this.rightMiddleRectParent = undefined;\n        /**\n         * @private\n         */\n        this.resizeMarkSizeIn = 7;\n        /**\n         * @private\n         */\n        this.selectedImageWidget = undefined;\n        /**\n         * @private\n         */\n        this.baseHistoryInfo = undefined;\n        /**\n         * @private\n         */\n        this.isImageResizing = false;\n        /**\n         * @private\n         */\n        this.isImageResizerVisible = false;\n        /**\n         * @private\n         */\n        this.isImageMoveToNextPage = false;\n        /**\n         * @private\n         */\n        this.selectedResizeElement = undefined;\n        /**\n         * @private\n         */\n        this.topValue = undefined;\n        /**\n         * @private\n         */\n        this.leftValue = undefined;\n        this.owner = node;\n        this.selectedImageWidget = new _base_dictionary__WEBPACK_IMPORTED_MODULE_2__.Dictionary();\n        this.documentHelper = documentHelper;\n        this.imageResizerPoints = new ImageResizingPoints();\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.imageResizerDiv) && this.viewer && this.documentHelper.pageContainer) {\n            this.initializeImageResizer();\n        }\n    }\n    Object.defineProperty(ImageResizer.prototype, \"currentImageElementBox\", {\n        /**\n         * Gets or Sets the current image element box.\n         *\n         * @private\n         * @returns {ImageElementBox | ShapeElementBox} - Returns the image element.\n         */\n        get: function () {\n            return this.currentImageElementBoxIn;\n        },\n        /**\n         * @param {ImageElementBox | ShapeElementBox} value - Specifies the current element box.\n         */\n        set: function (value) {\n            this.currentImageElementBoxIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageResizer.prototype, \"resizeMarkSize\", {\n        /**\n         * Gets or Sets the resize mark size.\n         *\n         * @private\n         * @returns {number} - Returns resize mark size\n         */\n        get: function () {\n            return this.resizeMarkSizeIn;\n        },\n        /**\n         * @private\n         * @param {number} value - Specifies resize mark size.\n         */\n        set: function (value) {\n            this.resizeMarkSizeIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageResizer.prototype, \"isShapeResize\", {\n        /**\n         * @returns {boolean} - Returns the shape size.\n         */\n        get: function () {\n            if (this.currentImageElementBox instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_4__.ShapeElementBox) {\n                return true;\n            }\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageResizer.prototype, \"viewer\", {\n        get: function () {\n            return this.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ImageResizer.prototype.getModuleName = function () {\n        return 'ImageResizer';\n    };\n    //Image Resizing Methods\n    /**\n     * Sets image resizer position.\n     *\n     * @param {number} x - Specifies for image resizer left value.\n     * @param {number} y - Specifies for image resizer top value.\n     * @param {number} width - Specifies for image resizer width value.\n     * @param {number} height - Specifies for image resizer height value.\n     * @private\n     * @returns {void}\n     */\n    ImageResizer.prototype.setImageResizerPositions = function (x, y, width, height) {\n        this.imageResizerDivElement.style.top = y.toString() + 'px';\n        this.imageResizerDivElement.style.left = x.toString() + 'px';\n        this.imageResizerDivElement.style.borderWidth = '0px';\n        this.imageResizerDivElement.style.height = height + 'px';\n        if (this.owner.viewer instanceof _index__WEBPACK_IMPORTED_MODULE_1__.WebLayoutViewer) {\n            this.imageResizerDivElement.style.width = width - x - this.documentHelper.scrollbarWidth + 'px';\n        }\n        else {\n            this.imageResizerDivElement.style.width = width + 'px';\n        }\n        this.imageResizerDivElement.style.backgroundColor = 'transparent';\n        this.imageResizerDivElement.style.overflow = 'hidden';\n        this.imageResizerDivElement.style.position = 'absolute';\n    };\n    /**\n     * Creates image resizer DOM element.\n     *\n     * @private\n     * @returns {void}\n     */\n    ImageResizer.prototype.initializeImageResizer = function () {\n        this.imageResizerDivElement = document.createElement('div');\n        this.imageResizerDivElement.style.zIndex = '1';\n        this.imageResizerDivElement.style.display = 'none';\n        this.documentHelper.pageContainer.appendChild(this.imageResizerDivElement);\n    };\n    /**\n     * Position an image resizer\n     *\n     * @private\n     * @param {ImageElementBox} elementBox - Specifies the image position.\n     * @returns {void}\n     */\n    ImageResizer.prototype.positionImageResizer = function (elementBox) {\n        this.selectedImageWidget.clear();\n        // Initializes the image resizer on demand, i.e at the time of selecting an image for the first time.\n        var resizeDiv;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentHelper.currentPage)) {\n            resizeDiv = this.imageResizerDivElement;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(resizeDiv) && !resizeDiv.contains(this.imageResizerDiv)) {\n            this.imageResizerDiv = this.initResizeMarks(resizeDiv, this);\n        }\n        this.imageResizerDiv.style.width = (elementBox.width) + 'px';\n        this.imageResizerDiv.style.height = (elementBox.height) + 'px';\n        this.currentImageElementBox = elementBox;\n        var lineWidget = elementBox.line;\n        var top;\n        var left;\n        if (elementBox instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_4__.ImageElementBox && elementBox.textWrappingStyle !== 'Inline') {\n            top = elementBox.y;\n            left = elementBox.x;\n        }\n        else {\n            top = this.documentHelper.selection.getTop(lineWidget) + elementBox.margin.top;\n            left = this.documentHelper.selection.getLeftInternal(lineWidget, elementBox, 0);\n        }\n        var page = this.documentHelper.selection.getPage(lineWidget.paragraph);\n        this.currentPage = page;\n        var x = 0;\n        //let y: number = 0;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(resizeDiv)) {\n            if (this.owner.viewer instanceof _index__WEBPACK_IMPORTED_MODULE_1__.WebLayoutViewer) {\n                this.imageResizerDivElement.style.width = page.boundingRectangle.width - page.boundingRectangle.x - left - this.documentHelper.scrollbarWidth + 'px';\n            }\n            this.imageResizerDivElement.style.display = 'block';\n            if (this.owner.viewer instanceof _index__WEBPACK_IMPORTED_MODULE_1__.WebLayoutViewer) {\n                resizeDiv.style.width = (page.boundingRectangle.width - this.documentHelper.scrollbarWidth - page.boundingRectangle.x - left) + 'px';\n            }\n            else {\n                resizeDiv.style.width = page.boundingRectangle.width + 'px';\n            }\n            resizeDiv.style.height = page.boundingRectangle.height + 'px';\n            resizeDiv.style.left = page.boundingRectangle.x + 'px';\n            resizeDiv.style.top = page.boundingRectangle.y + 'px';\n            resizeDiv.style.borderWidth = '0px';\n            resizeDiv.style.backgroundColor = 'transparent';\n            resizeDiv.style.overflow = 'hidden';\n            resizeDiv.style.position = 'absolute';\n        }\n        var horizontalWidth = 0;\n        var pageWidth = this.documentHelper.getPageWidth(page);\n        //const pagelayout: PageLayoutViewer = this.viewer as PageLayoutViewer;\n        horizontalWidth = parseFloat(this.imageResizerDivElement.style.width);\n        x = (this.documentHelper.visibleBounds.width - horizontalWidth * this.documentHelper.zoomFactor) / 2;\n        if (x < 30) {\n            x = 30;\n        }\n        if (pageWidth < horizontalWidth) {\n            x += (horizontalWidth - pageWidth) * this.documentHelper.zoomFactor / 2;\n        }\n        var currentPageDiv = this.imageResizerDivElement;\n        var currentPageDivWidth = parseFloat(currentPageDiv.style.width);\n        var currentPageDivHeight = parseFloat(currentPageDiv.style.height);\n        var imageResizerDivWidth = parseFloat(this.imageResizerDiv.style.width);\n        var imageResizerDivHeight = parseFloat(this.imageResizerDiv.style.height);\n        var margin = (this.resizeMarkSize - 1) / 2;\n        var width = imageResizerDivWidth + 2 * margin;\n        var height = imageResizerDivHeight + 2 * margin;\n        if (width > (currentPageDivWidth - left) * this.documentHelper.zoomFactor + margin) {\n            width = (currentPageDivWidth - left) * this.documentHelper.zoomFactor;\n        }\n        if (height > (currentPageDivHeight - top) * this.documentHelper.zoomFactor + margin) {\n            height = (currentPageDivHeight - top) * this.documentHelper.zoomFactor;\n        }\n        // if (width < imageResizerDivHeight + margin || height < imageResizerDivHeight + margin) {\n        // }\n        this.imageResizerDivElement.style.width = parseInt(this.imageResizerDivElement.style.width.replace('px', ''), 10) * this.documentHelper.zoomFactor + 'px';\n        this.imageResizerDivElement.style.height = parseInt(this.imageResizerDivElement.style.height.replace('px', ''), 10) * this.documentHelper.zoomFactor + 'px';\n        height = this.documentHelper.render.getScaledValue(elementBox.height);\n        width = this.documentHelper.render.getScaledValue(elementBox.width);\n        if (elementBox instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_4__.ImageElementBox) {\n            left = this.documentHelper.render.getScaledValue(left);\n            top = this.documentHelper.render.getScaledValue(top);\n        }\n        else {\n            left = elementBox.x * this.documentHelper.zoomFactor;\n            top = elementBox.y * this.documentHelper.zoomFactor;\n        }\n        this.setImageResizerPosition(left, top, width, height, this);\n        if (this.owner.selectionModule.isInShape) {\n            this.resizeContainerDiv.style.borderStyle = 'dashed';\n        }\n        else {\n            this.resizeContainerDiv.style.borderStyle = 'solid';\n        }\n        if (!this.selectedImageWidget.containsKey(lineWidget)) {\n            var selectedImageInfo = new SelectedImageInfo(elementBox.height, elementBox.width);\n            this.selectedImageWidget.add(lineWidget, selectedImageInfo);\n        }\n    };\n    /**\n     * Shows the image resizer.\n     *\n     * @private\n     * @returns {void}\n     */\n    ImageResizer.prototype.showImageResizer = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.imageResizerDivElement)) {\n            this.imageResizerDivElement.style.display = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.resizeContainerDiv)) {\n            this.resizeContainerDiv.style.display = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.bottomLeftRect)) {\n            this.bottomLeftRect.style.display = '';\n            this.bottomLeftRectParent.style.display = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.bottomRightRect)) {\n            this.bottomRightRect.style.display = '';\n            this.bottomRightRectParent.style.display = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.bottomMiddleRect)) {\n            this.bottomMiddleRect.style.display = '';\n            this.bottomMiddleRectParent.style.display = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.rightMiddleRect)) {\n            this.rightMiddleRect.style.display = '';\n            this.rightMiddleRectParent.style.display = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.topRightRect)) {\n            this.topRightRect.style.display = '';\n            this.topRightRectParent.style.display = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.topLeftRect)) {\n            this.topLeftRect.style.display = '';\n            this.topLeftRectParent.style.display = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.leftMiddleRect)) {\n            this.leftMiddleRect.style.display = '';\n            this.leftMiddleRectParent.style.display = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.topMiddleRect)) {\n            this.topMiddleRect.style.display = '';\n            this.topMiddleRectParent.style.display = '';\n        }\n        this.isImageResizerVisible = true;\n    };\n    /**\n     * Hides the image resizer.\n     *\n     * @private\n     * @returns {void}\n     */\n    ImageResizer.prototype.hideImageResizer = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.imageResizerDivElement)) {\n            this.imageResizerDivElement.style.display = 'none';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.resizeContainerDiv)) {\n            this.resizeContainerDiv.style.display = 'none';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.bottomLeftRect)) {\n            this.bottomLeftRect.style.display = 'none';\n            this.bottomLeftRectParent.style.display = 'none';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.bottomRightRect)) {\n            this.bottomRightRect.style.display = 'none';\n            this.bottomRightRectParent.style.display = 'none';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.bottomMiddleRect)) {\n            this.bottomMiddleRect.style.display = 'none';\n            this.bottomMiddleRectParent.style.display = 'none';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.rightMiddleRect)) {\n            this.rightMiddleRect.style.display = 'none';\n            this.rightMiddleRectParent.style.display = 'none';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.topRightRect)) {\n            this.topRightRect.style.display = 'none';\n            this.topRightRectParent.style.display = 'none';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.topLeftRect)) {\n            this.topLeftRect.style.display = 'none';\n            this.topLeftRectParent.style.display = 'none';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.leftMiddleRect)) {\n            this.leftMiddleRect.style.display = 'none';\n            this.leftMiddleRectParent.style.display = 'none';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.topMiddleRect)) {\n            this.topMiddleRect.style.display = 'none';\n            this.topMiddleRectParent.style.display = 'none';\n        }\n        this.isImageResizerVisible = false;\n        this.currentPage = undefined;\n    };\n    /**\n     * Initialize the resize marks.\n     *\n     * @private\n     * @param {HTMLElement} resizeDiv - Specifies to appending resizer container div element.\n     * @param {ImageResizer} imageResizer - Specifies to creating div element of each position.\n     * @returns {void}\n     */\n    /* eslint-disable  */\n    ImageResizer.prototype.initResizeMarks = function (resizeDiv, imageResizer) {\n        this.initResizeContainerDiv(imageResizer);\n        resizeDiv.appendChild(imageResizer.resizeContainerDiv);\n        imageResizer.topRightRectParent = document.createElement('div');\n        imageResizer.topRightRectParent.style.cursor = 'ne-resize';\n        imageResizer.topRightRectParent.id = this.documentHelper.owner.containerId + '_TopRightRectParent';\n        this.applyProperties(imageResizer.topRightRectParent);\n        imageResizer.topRightRectParent.style.width = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.topRightRectParent.style.height = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.topRightRectParent.style.opacity = '-1';\n        resizeDiv.appendChild(imageResizer.topRightRectParent);\n        imageResizer.topRightRect = document.createElement('div');\n        imageResizer.topRightRect.id = this.documentHelper.owner.containerId + '_TopRightRect';\n        imageResizer.topRightRect.style.cursor = 'ne-resize';\n        this.applyProperties(imageResizer.topRightRect);\n        resizeDiv.appendChild(imageResizer.topRightRect);\n        imageResizer.topLeftRectParent = document.createElement('div');\n        imageResizer.topLeftRectParent.style.cursor = 'nw-resize';\n        imageResizer.topLeftRectParent.id = this.documentHelper.owner.containerId + '_TopLeftRectParent';\n        this.applyProperties(imageResizer.topLeftRectParent);\n        imageResizer.topLeftRectParent.style.width = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.topLeftRectParent.style.height = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.topLeftRectParent.style.opacity = '-1';\n        resizeDiv.appendChild(imageResizer.topLeftRectParent);\n        imageResizer.topLeftRect = document.createElement('div');\n        imageResizer.topLeftRect.id = this.documentHelper.owner.containerId + '_TopLeftRect';\n        imageResizer.topLeftRect.style.cursor = 'nw-resize';\n        this.applyProperties(imageResizer.topLeftRect);\n        resizeDiv.appendChild(imageResizer.topLeftRect);\n        imageResizer.topMiddleRectParent = document.createElement('div');\n        imageResizer.topMiddleRectParent.style.cursor = 'n-resize';\n        imageResizer.topMiddleRectParent.id = this.documentHelper.owner.containerId + '_TopMiddleRectParent';\n        this.applyProperties(imageResizer.topMiddleRectParent);\n        imageResizer.topMiddleRectParent.style.width = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.topMiddleRectParent.style.height = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.topMiddleRectParent.style.opacity = '-1';\n        resizeDiv.appendChild(imageResizer.topMiddleRectParent);\n        imageResizer.topMiddleRect = document.createElement('div');\n        imageResizer.topMiddleRect.id = this.documentHelper.owner.containerId + '_TopMiddleRect';\n        imageResizer.topMiddleRect.style.cursor = 'n-resize';\n        this.applyProperties(imageResizer.topMiddleRect);\n        resizeDiv.appendChild(imageResizer.topMiddleRect);\n        imageResizer.bottomRightRectParent = document.createElement('div');\n        imageResizer.bottomRightRectParent.style.cursor = 'se-resize';\n        imageResizer.bottomRightRectParent.id = this.documentHelper.owner.containerId + '_BottomRightRectParent';\n        this.applyProperties(imageResizer.bottomRightRectParent);\n        imageResizer.bottomRightRectParent.style.width = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.bottomRightRectParent.style.height = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.bottomRightRectParent.style.opacity = '-1';\n        resizeDiv.appendChild(imageResizer.bottomRightRectParent);\n        imageResizer.bottomRightRect = document.createElement('div');\n        imageResizer.bottomRightRect.id = this.documentHelper.owner.containerId + '_BottomRightRect';\n        imageResizer.bottomRightRect.style.cursor = 'se-resize';\n        this.applyProperties(imageResizer.bottomRightRect);\n        resizeDiv.appendChild(imageResizer.bottomRightRect);\n        imageResizer.bottomLeftRectParent = document.createElement('div');\n        imageResizer.bottomLeftRectParent.style.cursor = 'sw-resize';\n        imageResizer.bottomLeftRectParent.id = this.documentHelper.owner.containerId + '_BottomLeftRectParent';\n        this.applyProperties(imageResizer.bottomLeftRectParent);\n        imageResizer.bottomLeftRectParent.style.width = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.bottomLeftRectParent.style.height = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.bottomLeftRectParent.style.opacity = '-1';\n        resizeDiv.appendChild(imageResizer.bottomLeftRectParent);\n        imageResizer.bottomLeftRect = document.createElement('div');\n        imageResizer.bottomLeftRect.id = this.documentHelper.owner.containerId + '_BottomLeftRect';\n        imageResizer.bottomLeftRect.style.cursor = 'sw-resize';\n        this.applyProperties(imageResizer.bottomLeftRect);\n        resizeDiv.appendChild(imageResizer.bottomLeftRect);\n        imageResizer.bottomMiddleRectParent = document.createElement('div');\n        imageResizer.bottomMiddleRectParent.style.cursor = 's-resize';\n        imageResizer.bottomMiddleRectParent.id = this.documentHelper.owner.containerId + '_BottomMiddleRectParent';\n        this.applyProperties(imageResizer.bottomMiddleRectParent);\n        imageResizer.bottomMiddleRectParent.style.width = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.bottomMiddleRectParent.style.height = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.bottomMiddleRectParent.style.opacity = '-1';\n        resizeDiv.appendChild(imageResizer.bottomMiddleRectParent);\n        imageResizer.bottomMiddleRect = document.createElement('div');\n        imageResizer.bottomMiddleRect.id = this.documentHelper.owner.containerId + '_BottomMiddleRect';\n        imageResizer.bottomMiddleRect.style.cursor = 's-resize';\n        this.applyProperties(imageResizer.bottomMiddleRect);\n        resizeDiv.appendChild(imageResizer.bottomMiddleRect);\n        imageResizer.rightMiddleRectParent = document.createElement('div');\n        imageResizer.rightMiddleRectParent.style.cursor = 'e-resize';\n        imageResizer.rightMiddleRectParent.id = this.documentHelper.owner.containerId + '_RightMiddleRectParent';\n        this.applyProperties(imageResizer.rightMiddleRectParent);\n        imageResizer.rightMiddleRectParent.style.width = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.rightMiddleRectParent.style.height = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.rightMiddleRectParent.style.opacity = '-1';\n        resizeDiv.appendChild(imageResizer.rightMiddleRectParent);\n        imageResizer.rightMiddleRect = document.createElement('div');\n        imageResizer.rightMiddleRect.id = this.documentHelper.owner.containerId + '_RightMiddleRect';\n        imageResizer.rightMiddleRect.style.cursor = 'e-resize';\n        this.applyProperties(imageResizer.rightMiddleRect);\n        resizeDiv.appendChild(imageResizer.rightMiddleRect);\n        imageResizer.leftMiddleRectParent = document.createElement('div');\n        imageResizer.leftMiddleRectParent.style.cursor = 'w-resize';\n        imageResizer.leftMiddleRectParent.id = this.documentHelper.owner.containerId + '_LeftMiddleRectParent';\n        this.applyProperties(imageResizer.leftMiddleRectParent);\n        imageResizer.leftMiddleRectParent.style.width = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.leftMiddleRectParent.style.height = !this.documentHelper.isTouchInput ? '14px' : '30px';\n        imageResizer.leftMiddleRectParent.style.opacity = '-1';\n        resizeDiv.appendChild(imageResizer.leftMiddleRectParent);\n        imageResizer.leftMiddleRect = document.createElement('div');\n        imageResizer.leftMiddleRect.id = this.documentHelper.owner.containerId + '_LeftMiddleRect';\n        imageResizer.leftMiddleRect.style.cursor = 'w-resize';\n        this.applyProperties(imageResizer.leftMiddleRect);\n        resizeDiv.appendChild(imageResizer.leftMiddleRect);\n        return imageResizer.resizeContainerDiv;\n    };\n    /**\n     * Sets the image resizer position.\n     *\n     * @private\n     * @param {number} left - Specifies for image resizer left value.\n     * @param {number} top - Specifies for image resizer top value.\n     * @param {number} width - Specifies for image resizer width value.\n     * @param {number} height - Specifies for image resizer height value.\n     * @param {ImageResizer} imageResizer - Specifies for image resizer.\n     * @returns {void}\n     */\n    ImageResizer.prototype.setImageResizerPosition = function (left, top, width, height, imageResizer) {\n        //Positions Updating For Image Resize Div\n        imageResizer.resizeContainerDiv.style.width = width + 'px';\n        imageResizer.resizeContainerDiv.style.height = height + 'px';\n        imageResizer.resizeContainerDiv.style.left = left + 'px';\n        imageResizer.resizeContainerDiv.style.top = top + 'px';\n        //Positions Updating For Image Resizing Points\n        imageResizer.topRightRect.style.left = ((left + width) - 5) + 'px';\n        imageResizer.topRightRect.style.top = (top - 4) + 'px';\n        imageResizer.topLeftRect.style.left = (left - 5) + 'px';\n        imageResizer.topLeftRect.style.top = (top - 4) + 'px';\n        imageResizer.topMiddleRect.style.left = ((parseFloat(imageResizer.topLeftRect.style.left) + (width / 2)) - 4) + 'px';\n        imageResizer.topMiddleRect.style.top = (top - 4) + 'px';\n        imageResizer.bottomRightRect.style.left = imageResizer.topRightRect.style.left;\n        imageResizer.bottomRightRect.style.top = (parseFloat(imageResizer.topRightRect.style.top) + height) + 'px';\n        imageResizer.bottomLeftRect.style.left = imageResizer.topLeftRect.style.left;\n        imageResizer.bottomLeftRect.style.top = (parseFloat(imageResizer.topLeftRect.style.top) + height) + 'px';\n        imageResizer.bottomMiddleRect.style.left = imageResizer.topMiddleRect.style.left;\n        imageResizer.bottomMiddleRect.style.top = (parseFloat(imageResizer.topMiddleRect.style.top) + height) + 'px';\n        imageResizer.rightMiddleRect.style.left = ((left + width) - 4) + 'px';\n        imageResizer.rightMiddleRect.style.top = (parseFloat(imageResizer.topRightRect.style.top) + (height / 2)) + 'px';\n        imageResizer.leftMiddleRect.style.left = imageResizer.topLeftRect.style.left;\n        imageResizer.leftMiddleRect.style.top = (parseFloat(imageResizer.topLeftRect.style.top) + (height / 2)) + 'px';\n        imageResizer.topRightRectParent.style.left = !this.documentHelper.isTouchInput ? ((left + width) - 8) + 'px' : ((left + width) - 15) + 'px';\n        imageResizer.topRightRectParent.style.top = !this.documentHelper.isTouchInput ? (top - 7) + 'px' : (top - 15) + 'px';\n        imageResizer.topLeftRectParent.style.left = !this.documentHelper.isTouchInput ? (left - 8) + 'px' : (left - 15) + 'px';\n        imageResizer.topLeftRectParent.style.top = !this.documentHelper.isTouchInput ? (top - 7) + 'px' : (top - 15) + 'px';\n        imageResizer.topMiddleRectParent.style.left = ((parseFloat(imageResizer.topLeftRectParent.style.left) + (width / 2)) - 4) + 'px';\n        imageResizer.topMiddleRectParent.style.top = !this.documentHelper.isTouchInput ? (top - 7) + 'px' : (top - 15) + 'px';\n        imageResizer.bottomRightRectParent.style.left = imageResizer.topRightRectParent.style.left;\n        imageResizer.bottomRightRectParent.style.top = (parseFloat(imageResizer.topRightRectParent.style.top) + height) + 'px';\n        imageResizer.bottomLeftRectParent.style.left = imageResizer.topLeftRectParent.style.left;\n        imageResizer.bottomLeftRectParent.style.top = (parseFloat(imageResizer.topLeftRectParent.style.top) + height) + 'px';\n        imageResizer.bottomMiddleRectParent.style.left = imageResizer.topMiddleRectParent.style.left;\n        imageResizer.bottomMiddleRectParent.style.top = (parseFloat(imageResizer.topMiddleRectParent.style.top) + height) + 'px';\n        imageResizer.rightMiddleRectParent.style.left = !this.documentHelper.isTouchInput ? ((left + width) - 7) + 'px' : ((left + width) - 15) + 'px';\n        imageResizer.rightMiddleRectParent.style.top = (parseFloat(imageResizer.topRightRectParent.style.top) + (height / 2)) + 'px';\n        imageResizer.leftMiddleRectParent.style.left = imageResizer.topLeftRectParent.style.left;\n        imageResizer.leftMiddleRectParent.style.top = (parseFloat(imageResizer.topLeftRectParent.style.top) + (height / 2)) + 'px';\n        this.setImageResizingPoints(imageResizer);\n        if (this.documentHelper.isTouchInput) {\n            this.applyPropertiesForTouch();\n        }\n        else {\n            this.applyPropertiesForMouse();\n        }\n    };\n    /**\n     * Sets the image resizing points.\n     *\n     * @private\n     * @param {ImageResizer} imageResizer - Specifies for position of each resizing elements.\n     * @returns {void}\n     */\n    ImageResizer.prototype.setImageResizingPoints = function (imageResizer) {\n        this.imageResizerPoints.resizeContainerDiv.x = parseFloat(imageResizer.resizeContainerDiv.style.left);\n        this.imageResizerPoints.resizeContainerDiv.y = parseFloat(imageResizer.resizeContainerDiv.style.top);\n        this.imageResizerPoints.bottomLeftRectParent.x = parseFloat(imageResizer.bottomLeftRectParent.style.left);\n        this.imageResizerPoints.bottomLeftRectParent.y = parseFloat(imageResizer.bottomLeftRectParent.style.top);\n        this.imageResizerPoints.bottomRightRectParent.x = parseFloat(imageResizer.bottomRightRectParent.style.left);\n        this.imageResizerPoints.bottomRightRectParent.y = parseFloat(imageResizer.bottomRightRectParent.style.top);\n        this.imageResizerPoints.bottomMiddleRectParent.x = parseFloat(imageResizer.bottomMiddleRectParent.style.left);\n        this.imageResizerPoints.bottomMiddleRectParent.y = parseFloat(imageResizer.bottomMiddleRectParent.style.top);\n        this.imageResizerPoints.topLeftRectParent.x = parseFloat(imageResizer.topLeftRectParent.style.left);\n        this.imageResizerPoints.topLeftRectParent.y = parseFloat(imageResizer.topLeftRectParent.style.top);\n        this.imageResizerPoints.topRightRectParent.x = parseFloat(imageResizer.topRightRectParent.style.left);\n        this.imageResizerPoints.topRightRectParent.y = parseFloat(imageResizer.topRightRectParent.style.top);\n        this.imageResizerPoints.topMiddleRectParent.x = parseFloat(imageResizer.topMiddleRectParent.style.left);\n        this.imageResizerPoints.topMiddleRectParent.y = parseFloat(imageResizer.topMiddleRectParent.style.top);\n        this.imageResizerPoints.leftMiddleRectParent.x = parseFloat(imageResizer.leftMiddleRectParent.style.left);\n        this.imageResizerPoints.leftMiddleRectParent.y = parseFloat(imageResizer.leftMiddleRectParent.style.top);\n        this.imageResizerPoints.rightMiddleRectParent.x = parseFloat(imageResizer.rightMiddleRectParent.style.left);\n        this.imageResizerPoints.rightMiddleRectParent.y = parseFloat(imageResizer.rightMiddleRectParent.style.top);\n    };\n    /**\n     * Initialize the resize container div element.\n     *\n     * @private\n     * @param {ImageResizer} imageResizer - Specifies for creating resize container div element.\n     * @returns {void}\n     */\n    ImageResizer.prototype.initResizeContainerDiv = function (imageResizer) {\n        imageResizer.resizeContainerDiv = document.createElement('div');\n        imageResizer.resizeContainerDiv.id = this.documentHelper.owner.containerId + '_ResizeDivElement';\n        imageResizer.resizeContainerDiv.style.position = 'absolute';\n        imageResizer.resizeContainerDiv.style.border = '1px solid #bfbfbf';\n        imageResizer.resizeContainerDiv.style.zIndex = '30';\n        imageResizer.resizeContainerDiv.style.backgroundColor = 'transparent';\n        imageResizer.resizeContainerDiv.style.display = 'block';\n    };\n    /**\n     * Apply the properties of each resize rectangle element.\n     *\n     * @private\n     * @param {HTMLDivElement} resizeRectElement - Specifies for applying properties to resize rectangle element.\n     * @returns {void}\n     */\n    ImageResizer.prototype.applyProperties = function (resizeRectElement) {\n        resizeRectElement.style.position = 'absolute';\n        resizeRectElement.style.width = '8px';\n        resizeRectElement.style.height = '8px';\n        resizeRectElement.style.fontSize = '0px';\n        resizeRectElement.style.zIndex = ' 551';\n        resizeRectElement.style.backgroundColor = '#ffffff';\n        resizeRectElement.style.border = '1px solid #bfbfbf';\n        resizeRectElement.style.boxShadow = '0 1px 2px 0 #bfbfbf 0.35';\n        resizeRectElement.style.color = '#000000';\n    };\n    /**\n     * Handles an image resizing.\n     *\n     * @private\n     * @param {number} x  - Specifies for left value while resizing.\n     * @param {number} y - Specifies for top value while resizing.\n     * @returns {void}\n     */\n    ImageResizer.prototype.handleImageResizing = function (touchPoint, prevX, prevY) {\n        prevX = prevX / this.documentHelper.zoomFactor;\n        prevY = prevY / this.documentHelper.zoomFactor;\n        this.leftValue = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.leftValue) ? prevX : this.leftValue;\n        this.topValue = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.topValue) ? prevY : this.topValue;\n        var points;\n        var id = this.selectedResizeElement.id.split('_');\n        var currentElementId = id[id.length - 1];\n        switch (currentElementId) {\n            case 'TopRightRectParent':\n                points = this.topRightResizing(touchPoint);\n                prevX = points.left;\n                prevY = points.top;\n                break;\n            case 'TopLeftRectParent':\n                points = this.topLeftResizing(touchPoint);\n                prevX = -points.left;\n                prevY = -points.top;\n                break;\n            case 'TopMiddleRectParent':\n                prevX = 0;\n                prevY = this.topMiddleResizing(touchPoint);\n                break;\n            case 'BottomRightRectParent':\n                points = this.bottomRightResizing(touchPoint);\n                prevX = points.left;\n                prevY = points.top;\n                break;\n            case 'BottomLeftRectParent':\n                points = this.bottomLeftResizing(touchPoint);\n                prevX = -points.left;\n                prevY = -points.top;\n                break;\n            case 'BottomMiddleRectParent':\n                prevY = touchPoint.y - prevY;\n                prevX = 0;\n                break;\n            case 'RightMiddleRectParent':\n                prevX = touchPoint.x - prevX;\n                prevY = 0;\n                break;\n            case 'LeftMiddleRectParent':\n                prevX = this.leftMiddleResizing(touchPoint);\n                prevY = 0;\n                break;\n            default:\n                break;\n        }\n        if (prevX !== 0 || prevY !== 0) {\n            var widget = this.currentImageElementBox.line.paragraph;\n            var image = this.currentImageElementBox;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(widget) && widget.isInsideTable) {\n                var cellWidget = widget.containerWidget;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellWidget)) {\n                    var rowWidget = cellWidget.containerWidget;\n                    var imageHeight = _editor_helper__WEBPACK_IMPORTED_MODULE_5__.HelperMethods.convertPointToPixel(image.height);\n                    var widgetHeight = rowWidget.height - imageHeight;\n                    if (prevY > 0 && rowWidget.y + widgetHeight + imageHeight + prevY > this.viewer.clientArea.bottom) {\n                        this.isImageMoveToNextPage = true;\n                    }\n                }\n            }\n            if (this.owner.enableHistoryMode) {\n                this.initHistoryForImageResizer(this.currentImageElementBox);\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentImageElementBox)) {\n                var width = this.currentImageElementBox.width + prevX > 10 ? this.currentImageElementBox.width + prevX : 10;\n                var height = this.currentImageElementBox.height + prevY > 10 ? this.currentImageElementBox.height + prevY : 10;\n                if (currentElementId === 'BottomRightRectParent'\n                    || currentElementId === 'TopRightRectParent'\n                    || currentElementId === 'BottomLeftRectParent'\n                    || currentElementId === 'TopLeftRectParent') {\n                    height = this.currentImageElementBox.height / this.currentImageElementBox.width * width;\n                    width = this.currentImageElementBox.width / this.currentImageElementBox.height * height;\n                }\n                this.currentImageElementBox.width = width;\n                this.currentImageElementBox.height = height;\n                var owner = this.currentImageElementBox.line.paragraph;\n                this.positionImageResizer(this.currentImageElementBox);\n            }\n            this.isImageResizing = true;\n        }\n    };\n    /**\n     * Handles image resizing on mouse.\n     *\n     * @private\n     * @param {MouseEvent} event - Specifies for image resizing using mouse event.\n     * @returns {void}\n     */\n    ImageResizer.prototype.handleImageResizingOnMouse = function (event) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.selectedResizeElement)) {\n            var prevX = parseFloat(this.selectedResizeElement.style.left);\n            var prevY = parseFloat(this.selectedResizeElement.style.top);\n            var cursorPoint = new _editor_helper__WEBPACK_IMPORTED_MODULE_5__.Point(event.offsetX, event.offsetY);\n            var touchPoint = this.viewer.findFocusedPage(cursorPoint, true);\n            this.handleImageResizing(touchPoint, prevX, prevY);\n        }\n    };\n    ImageResizer.prototype.topMiddleResizing = function (touchPoint) {\n        var prevY;\n        if (this.topValue >= touchPoint.y) {\n            prevY = this.topValue / touchPoint.y;\n            this.topValue = touchPoint.y;\n            if (this.viewer instanceof _index__WEBPACK_IMPORTED_MODULE_1__.PageLayoutViewer) {\n                if (this.topValue <= this.viewer.pageGap) {\n                    prevY = 1;\n                }\n            }\n        }\n        else {\n            prevY = -(touchPoint.y / this.topValue);\n            this.topValue = touchPoint.y;\n            if (this.topValue === 0) {\n                prevY = -1;\n            }\n        }\n        return prevY;\n    };\n    ImageResizer.prototype.leftMiddleResizing = function (touchPoint) {\n        var prevX;\n        if (this.leftValue >= touchPoint.x) {\n            prevX = this.leftValue / touchPoint.x;\n            this.leftValue = touchPoint.x;\n            if (this.leftValue === 0) {\n                prevX = 1;\n                this.leftValue = parseFloat(this.selectedResizeElement.style.left);\n            }\n        }\n        else {\n            prevX = -(touchPoint.x / this.leftValue);\n            this.leftValue = touchPoint.x;\n        }\n        return prevX;\n    };\n    ImageResizer.prototype.topRightResizing = function (touchPoint) {\n        var points;\n        if (this.leftValue <= touchPoint.x && this.topValue >= touchPoint.y) {\n            points = this.getOuterResizingPoint(touchPoint);\n        }\n        else {\n            points = this.getInnerResizingPoint(touchPoint);\n        }\n        return points;\n    };\n    ImageResizer.prototype.topLeftResizing = function (touchPoint) {\n        var points;\n        if (this.leftValue >= touchPoint.x && this.topValue >= touchPoint.y) {\n            points = this.getOuterResizingPoint(touchPoint);\n        }\n        else {\n            points = this.getInnerResizingPoint(touchPoint);\n        }\n        return points;\n    };\n    ImageResizer.prototype.bottomRightResizing = function (touchPoint) {\n        var points;\n        if (this.leftValue <= touchPoint.x && this.topValue <= touchPoint.y) {\n            points = this.getOuterResizingPoint(touchPoint);\n        }\n        else {\n            points = this.getInnerResizingPoint(touchPoint);\n        }\n        return points;\n    };\n    ImageResizer.prototype.bottomLeftResizing = function (touchPoint) {\n        var points;\n        if (this.leftValue >= touchPoint.x && this.topValue <= touchPoint.y) {\n            points = this.getOuterResizingPoint(touchPoint);\n        }\n        else {\n            points = this.getInnerResizingPoint(touchPoint);\n        }\n        return points;\n    };\n    ImageResizer.prototype.getOuterResizingPoint = function (touchPoint) {\n        var prevX;\n        var prevY;\n        prevX = touchPoint.x - this.leftValue;\n        this.leftValue = touchPoint.x;\n        prevY = touchPoint.y - this.topValue;\n        this.topValue = touchPoint.y;\n        return { left: prevX, top: prevY };\n    };\n    ImageResizer.prototype.getInnerResizingPoint = function (touchPoint) {\n        var prevX;\n        var prevY;\n        prevX = -(this.leftValue - touchPoint.x);\n        this.leftValue = touchPoint.x;\n        prevY = -(this.topValue - touchPoint.y);\n        this.topValue = touchPoint.y;\n        return { left: prevX, top: prevY };\n    };\n    /**\n     * Handles image resizing on touch.\n     *\n     * @private\n     * @param {TouchEvent} touchEvent - Specifies for image resizing using touch event.\n     * @returns {void}\n     */\n    ImageResizer.prototype.handleImageResizingOnTouch = function (touchEvent) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.selectedResizeElement)) {\n            var prevX = parseFloat(this.selectedResizeElement.style.left) + 24;\n            var prevY = parseFloat(this.selectedResizeElement.style.top) + 24;\n            var touch = touchEvent.touches;\n            var cursorPoint = new _editor_helper__WEBPACK_IMPORTED_MODULE_5__.Point(touch[0].clientX, touch[0].clientY);\n            var touchPoint = this.viewer.findFocusedPage(cursorPoint, true);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentImageElementBox) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentImageElementBox)) {\n                return;\n            }\n            this.handleImageResizing(touchPoint, prevX, prevY);\n        }\n    };\n    /**\n     * Gets the image point of mouse.\n     *\n     * @private\n     * @param {Point} touchPoint - Specifies for resizer cursor position.\n     * @returns {ImagePointInfo} - Returns image point\n     */\n    ImageResizer.prototype.getImagePoint = function (touchPoint) {\n        var x = this.documentHelper.render.getScaledValue(touchPoint.x, 1);\n        var y = this.documentHelper.render.getScaledValue(touchPoint.y, 2);\n        touchPoint = new _editor_helper__WEBPACK_IMPORTED_MODULE_5__.Point(x, y);\n        var imageResizingPoints = this.imageResizerPoints;\n        var resizePosition = '';\n        var selectedElement = undefined;\n        var bottomMiddle = imageResizingPoints.bottomMiddleRectParent;\n        var bottomRight = imageResizingPoints.bottomRightRectParent;\n        var bottomLeft = imageResizingPoints.bottomLeftRectParent;\n        var topMiddle = imageResizingPoints.topMiddleRectParent;\n        var topRight = imageResizingPoints.topRightRectParent;\n        var topLeft = imageResizingPoints.topLeftRectParent;\n        var rightMiddle = imageResizingPoints.rightMiddleRectParent;\n        var leftMiddle = imageResizingPoints.leftMiddleRectParent;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.bottomMiddleRectParent) && this.bottomMiddleRectParent.style.display !== 'none') {\n            if ((touchPoint.x > bottomMiddle.x && touchPoint.x <= bottomMiddle.x + 15) && (touchPoint.y > bottomMiddle.y && touchPoint.y <= bottomMiddle.y + 15)) {\n                selectedElement = this.bottomMiddleRectParent;\n                resizePosition = 's-resize';\n            }\n            else if ((touchPoint.x > bottomRight.x && touchPoint.x <= bottomRight.x + 15) && (touchPoint.y > bottomRight.y && touchPoint.y <= bottomRight.y + 15)) {\n                selectedElement = this.bottomRightRectParent;\n                resizePosition = 'se-resize';\n            }\n            else if ((touchPoint.x > bottomLeft.x && touchPoint.x <= bottomLeft.x + 15) && (touchPoint.y > bottomLeft.y && touchPoint.y <= bottomLeft.y + 15)) {\n                selectedElement = this.bottomLeftRectParent;\n                resizePosition = 'sw-resize';\n            }\n            else if ((touchPoint.x > topMiddle.x && touchPoint.x <= topMiddle.x + 15) && (touchPoint.y > topMiddle.y && touchPoint.y <= topMiddle.y + 15)) {\n                selectedElement = this.topMiddleRectParent;\n                resizePosition = 'n-resize';\n            }\n            else if ((touchPoint.x > topRight.x && touchPoint.x <= topRight.x + 15) && (touchPoint.y > topRight.y && touchPoint.y <= topRight.y + 15)) {\n                selectedElement = this.topRightRectParent;\n                resizePosition = 'ne-resize';\n            }\n            else if ((touchPoint.x > topLeft.x && touchPoint.x <= topLeft.x + 15) && (touchPoint.y > topLeft.y && touchPoint.y <= topLeft.y + 15)) {\n                selectedElement = this.topLeftRectParent;\n                resizePosition = 'nw-resize';\n            }\n            else if ((touchPoint.x > leftMiddle.x && touchPoint.x <= leftMiddle.x + 15) && (touchPoint.y > leftMiddle.y && touchPoint.y <= leftMiddle.y + 15)) {\n                selectedElement = this.leftMiddleRectParent;\n                resizePosition = 'w-resize';\n            }\n            else if ((touchPoint.x > rightMiddle.x && touchPoint.x <= rightMiddle.x + 15) && (touchPoint.y > rightMiddle.y && touchPoint.y <= rightMiddle.y + 15)) {\n                selectedElement = this.rightMiddleRectParent;\n                resizePosition = 'e-resize';\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.resizeContainerDiv) && (touchPoint.x > parseFloat(this.resizeContainerDiv.style.left)\n                && touchPoint.x <= (parseFloat(this.resizeContainerDiv.style.left) + parseFloat(this.resizeContainerDiv.style.width)))\n                && (touchPoint.y > parseFloat(this.resizeContainerDiv.style.top)\n                    && touchPoint.y <= (parseFloat(this.resizeContainerDiv.style.top) + parseFloat(this.resizeContainerDiv.style.height)))) {\n                resizePosition = 'move';\n            }\n        }\n        return { 'selectedElement': selectedElement, 'resizePosition': resizePosition };\n    };\n    ImageResizer.prototype.applyPropertiesForMouse = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.bottomLeftRectParent)) {\n            this.bottomMiddleRectParent.style.width = '14px';\n            this.bottomMiddleRectParent.style.height = '14px';\n            this.bottomRightRectParent.style.width = '14px';\n            this.bottomRightRectParent.style.height = '14px';\n            this.bottomLeftRectParent.style.width = '14px';\n            this.bottomLeftRectParent.style.height = '14px';\n            this.topMiddleRectParent.style.width = '14px';\n            this.topMiddleRectParent.style.height = '14px';\n            this.topRightRectParent.style.width = '14px';\n            this.topRightRectParent.style.height = '14px';\n            this.topLeftRectParent.style.width = '14px';\n            this.topLeftRectParent.style.height = '14px';\n            this.leftMiddleRectParent.style.width = '14px';\n            this.leftMiddleRectParent.style.height = '14px';\n            this.rightMiddleRectParent.style.width = '14px';\n            this.rightMiddleRectParent.style.height = '14px';\n        }\n    };\n    /**\n     * Gets the image point of touch.\n     *\n     * @private\n     * @param {Point} touchPoints - Specifies for resizer cursor position.\n     * @returns {ImagePointInfo} - Returns image point info.\n     */\n    ImageResizer.prototype.getImagePointOnTouch = function (touchPoints) {\n        var x = this.documentHelper.render.getScaledValue(touchPoints.x, 1);\n        var y = this.documentHelper.render.getScaledValue(touchPoints.y, 2);\n        touchPoints = new _editor_helper__WEBPACK_IMPORTED_MODULE_5__.Point(x, y);\n        var imageResizingPointsOnTouch = this.imageResizerPoints;\n        var resizePosition = '';\n        var selectedElements = undefined;\n        var bottomMiddle = imageResizingPointsOnTouch.bottomMiddleRectParent;\n        var bottomRight = imageResizingPointsOnTouch.bottomRightRectParent;\n        var bottomLeft = imageResizingPointsOnTouch.bottomLeftRectParent;\n        var topMiddle = imageResizingPointsOnTouch.topMiddleRectParent;\n        var topRight = imageResizingPointsOnTouch.topRightRectParent;\n        var topLeft = imageResizingPointsOnTouch.topLeftRectParent;\n        var rightMiddle = imageResizingPointsOnTouch.rightMiddleRectParent;\n        var leftMiddle = imageResizingPointsOnTouch.leftMiddleRectParent;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.bottomMiddleRectParent) && this.bottomMiddleRectParent.style.display !== 'none') {\n            if ((touchPoints.x > bottomMiddle.x && touchPoints.x <= bottomMiddle.x + 25) && (touchPoints.y > bottomMiddle.y && touchPoints.y <= bottomMiddle.y + 25)) {\n                selectedElements = this.bottomMiddleRectParent;\n                resizePosition = 's-resize';\n            }\n            else if ((touchPoints.x > bottomRight.x && touchPoints.x <= bottomRight.x + 25) && (touchPoints.y > bottomRight.y && touchPoints.y <= bottomRight.y + 25)) {\n                selectedElements = this.bottomRightRectParent;\n                resizePosition = 'se-resize';\n            }\n            else if ((touchPoints.x > bottomLeft.x && touchPoints.x <= bottomLeft.x + 25) && (touchPoints.y > bottomLeft.y && touchPoints.y <= bottomLeft.y + 25)) {\n                selectedElements = this.bottomLeftRectParent;\n                resizePosition = 'sw-resize';\n            }\n            else if ((touchPoints.x > topMiddle.x && touchPoints.x <= topMiddle.x + 25) && (touchPoints.y > topMiddle.y && touchPoints.y <= topMiddle.y + 25)) {\n                selectedElements = this.topMiddleRectParent;\n                resizePosition = 'n-resize';\n            }\n            else if ((touchPoints.x > topRight.x && touchPoints.x <= topRight.x + 25) && (touchPoints.y > topRight.y && touchPoints.y <= topRight.y + 25)) {\n                selectedElements = this.topRightRectParent;\n                resizePosition = 'ne-resize';\n            }\n            else if ((touchPoints.x > topLeft.x && touchPoints.x <= topLeft.x + 25) && (touchPoints.y > topLeft.y && touchPoints.y <= topLeft.y + 25)) {\n                selectedElements = this.topLeftRectParent;\n                resizePosition = 'nw-resize';\n            }\n            else if ((touchPoints.x > leftMiddle.x && touchPoints.x <= leftMiddle.x + 25) && (touchPoints.y > leftMiddle.y && touchPoints.y <= leftMiddle.y + 25)) {\n                selectedElements = this.leftMiddleRectParent;\n                resizePosition = 'w-resize';\n            }\n            else if ((touchPoints.x > rightMiddle.x && touchPoints.x <= rightMiddle.x + 25) && (touchPoints.y > rightMiddle.y && touchPoints.y <= rightMiddle.y + 25)) {\n                selectedElements = this.rightMiddleRectParent;\n                resizePosition = 'e-resize';\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.resizeContainerDiv) && (touchPoints.x > parseFloat(this.resizeContainerDiv.style.left)\n                && touchPoints.x <= (parseFloat(this.resizeContainerDiv.style.left) + parseFloat(this.resizeContainerDiv.style.width)))\n                && (touchPoints.y > parseFloat(this.resizeContainerDiv.style.top)\n                    && touchPoints.y <= (parseFloat(this.resizeContainerDiv.style.top) + parseFloat(this.resizeContainerDiv.style.height)))) {\n                resizePosition = 'move';\n            }\n        }\n        return { 'selectedElement': selectedElements, 'resizePosition': resizePosition };\n    };\n    ImageResizer.prototype.applyPropertiesForTouch = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.bottomLeftRectParent)) {\n            this.bottomMiddleRectParent.style.width = '30px';\n            this.bottomMiddleRectParent.style.height = '30px';\n            this.bottomRightRectParent.style.width = '30px';\n            this.bottomRightRectParent.style.height = '30px';\n            this.bottomLeftRectParent.style.width = '30px';\n            this.bottomLeftRectParent.style.height = '30px';\n            this.topMiddleRectParent.style.width = '30px';\n            this.topMiddleRectParent.style.height = '30px';\n            this.topRightRectParent.style.width = '30px';\n            this.topRightRectParent.style.height = '30px';\n            this.topLeftRectParent.style.width = '30px';\n            this.topLeftRectParent.style.height = '30px';\n            this.leftMiddleRectParent.style.width = '30px';\n            this.leftMiddleRectParent.style.height = '30px';\n            this.rightMiddleRectParent.style.width = '30px';\n            this.rightMiddleRectParent.style.height = '30px';\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    ImageResizer.prototype.mouseUpInternal = function () {\n        this.currentImageElementBox.width = parseFloat(this.imageResizerDiv.style.width) / this.documentHelper.zoomFactor;\n        this.currentImageElementBox.height = parseFloat(this.imageResizerDiv.style.height) / this.documentHelper.zoomFactor;\n        this.owner.isShiftingEnabled = true;\n        this.owner.editorModule.setOffsetValue(this.owner.selectionModule);\n        this.documentHelper.layout.layoutBodyWidgetCollection(this.currentImageElementBox.line.paragraph.index, this.currentImageElementBox.line.paragraph.containerWidget, this.currentImageElementBox.line.paragraph, false);\n        this.updateHistoryForImageResizer();\n        this.owner.editorModule.reLayout(this.owner.selectionModule, true);\n        this.viewer.updateScrollBars();\n    };\n    /**\n     * Initialize history for image resizer.\n     *\n     * @private\n     * @param {ImageResizer} imageResizer - Specifies for image resizer.\n     * @param {WImage} imageContainer - Specifies for an image.\n     * @returns {void}\n     */\n    ImageResizer.prototype.initHistoryForImageResizer = function (imageContainer) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.owner) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.baseHistoryInfo)) {\n            this.baseHistoryInfo = new _editor_history_base_history_info__WEBPACK_IMPORTED_MODULE_6__.BaseHistoryInfo(this.owner);\n            this.baseHistoryInfo.action = 'ImageResizing';\n            this.baseHistoryInfo.updateSelection();\n            this.baseHistoryInfo.modifiedProperties.push(new _selection_selection_helper__WEBPACK_IMPORTED_MODULE_3__.ImageSizeInfo(imageContainer));\n        }\n    };\n    /**\n     * Updates histroy for image resizer.\n     *\n     * @private\n     * @returns {void}\n     */\n    ImageResizer.prototype.updateHistoryForImageResizer = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.owner) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.baseHistoryInfo)) {\n            var imageFormat = this.baseHistoryInfo.modifiedProperties[0];\n            if (this.currentImageElementBox.width === imageFormat.width\n                && this.currentImageElementBox.height === imageFormat.height) {\n                this.baseHistoryInfo.modifiedProperties.pop();\n            }\n            else {\n                //Records the image size modifications\n                this.baseHistoryInfo.insertedText = _base_types__WEBPACK_IMPORTED_MODULE_7__.CONTROL_CHARACTERS.Image;\n                this.baseHistoryInfo.insertedData = { width: _editor_helper__WEBPACK_IMPORTED_MODULE_5__.HelperMethods.convertPixelToPoint(this.currentImageElementBox.width), height: _editor_helper__WEBPACK_IMPORTED_MODULE_5__.HelperMethods.convertPixelToPoint(this.currentImageElementBox.height), alternativeText: this.currentImageElementBox.alternateText };\n                this.owner.editorHistoryModule.recordChanges(this.baseHistoryInfo);\n            }\n            //Fires the content changed event for the image size modifications\n            this.baseHistoryInfo = undefined;\n        }\n    };\n    /**\n     * Updates image resize container when applying zooming\n     *\n     * @private\n     * @returns {void}\n     */\n    ImageResizer.prototype.updateImageResizerPosition = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentImageElementBox)) {\n            var elementBox = this.currentImageElementBox instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_4__.ImageElementBox ? this.currentImageElementBox : this.currentImageElementBox;\n            var lineWidget = elementBox.line;\n            var top_1;\n            var left = void 0;\n            var topValue = void 0;\n            var leftValue = void 0;\n            if (this.currentImageElementBox instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_4__.ImageElementBox) {\n                top_1 = this.documentHelper.selection.getTop(lineWidget) + elementBox.margin.top;\n                left = this.documentHelper.selection.getLeftInternal(lineWidget, elementBox, 0);\n                topValue = top_1 * this.documentHelper.zoomFactor;\n                leftValue = left * this.documentHelper.zoomFactor;\n            }\n            else {\n                leftValue = elementBox.x * this.documentHelper.zoomFactor;\n                topValue = elementBox.y * this.documentHelper.zoomFactor;\n            }\n            var height = this.documentHelper.render.getScaledValue(elementBox.height, 2);\n            var width = this.documentHelper.render.getScaledValue(elementBox.width, 1);\n            this.setImageResizerPosition(leftValue, topValue, width, height, this);\n        }\n    };\n    /**\n     * Dispose the internal objects which are maintained.\n     *\n     * @private\n     * @returns {void}\n     */\n    ImageResizer.prototype.destroy = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.resizeContainerDiv)) {\n            this.resizeContainerDiv.innerHTML = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.topLeftRect)) {\n            this.topLeftRect.innerHTML = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.topMiddleRect)) {\n            this.topMiddleRect.innerHTML = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.topRightRect)) {\n            this.topRightRect.innerHTML = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.bottomLeftRect)) {\n            this.bottomLeftRect.innerHTML = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.bottomMiddleRect)) {\n            this.bottomMiddleRect.innerHTML = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.bottomRightRect)) {\n            this.bottomRightRect.innerHTML = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.leftMiddleRect)) {\n            this.leftMiddleRect.innerHTML = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.rightMiddleRect)) {\n            this.rightMiddleRect.innerHTML = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.imageResizerDiv)) {\n            this.imageResizerDiv.innerHTML = '';\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.selectedImageWidget)) {\n            this.selectedImageWidget.destroy();\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.imageResizerDivElement)) {\n            this.imageResizerDivElement.innerHTML = '';\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.imageResizerDivElement.parentElement)) {\n                this.imageResizerDivElement.parentElement.removeChild(this.imageResizerDivElement);\n            }\n        }\n        this.imageResizerDivElement = undefined;\n        this.resizeContainerDiv = undefined;\n        this.topLeftRect = undefined;\n        this.topMiddleRect = undefined;\n        this.topRightRect = undefined;\n        this.bottomLeftRect = undefined;\n        this.bottomMiddleRect = undefined;\n        this.bottomRightRect = undefined;\n        this.leftMiddleRect = undefined;\n        this.rightMiddleRect = undefined;\n        this.imageResizerDiv = undefined;\n        this.selectedImageWidget = undefined;\n        this.isImageResizing = false;\n        this.isImageResizerVisible = false;\n        this.currentImageElementBoxIn = undefined;\n        this.imageResizerPoints = undefined;\n        //this.baseHistoryInfo = undefined;\n        this.resizeMarkSizeIn = undefined;\n        this.currentPage = undefined;\n        this.documentHelper = undefined;\n        this.owner = undefined;\n    };\n    return ImageResizer;\n}());\n\n/**\n * @private\n */\nvar ImageResizingPoints = /** @class */ (function () {\n    function ImageResizingPoints() {\n        /**\n         * @private\n         */ this.resizeContainerDiv = new _editor_helper__WEBPACK_IMPORTED_MODULE_5__.Point(0, 0);\n        /**\n         * @private\n         */\n        this.topLeftRectParent = new _editor_helper__WEBPACK_IMPORTED_MODULE_5__.Point(0, 0);\n        /**\n         * @private\n         */\n        this.topMiddleRectParent = new _editor_helper__WEBPACK_IMPORTED_MODULE_5__.Point(0, 0);\n        /**\n         * @private\n         */\n        this.topRightRectParent = new _editor_helper__WEBPACK_IMPORTED_MODULE_5__.Point(0, 0);\n        /**\n         * @private\n         */\n        this.bottomLeftRectParent = new _editor_helper__WEBPACK_IMPORTED_MODULE_5__.Point(0, 0);\n        /**\n         * @private\n         */\n        this.bottomMiddleRectParent = new _editor_helper__WEBPACK_IMPORTED_MODULE_5__.Point(0, 0);\n        /**\n         * @private\n         */\n        this.bottomRightRectParent = new _editor_helper__WEBPACK_IMPORTED_MODULE_5__.Point(0, 0);\n        /**\n         * @private\n         */\n        this.leftMiddleRectParent = new _editor_helper__WEBPACK_IMPORTED_MODULE_5__.Point(0, 0);\n        /**\n         * @private\n         */\n        this.rightMiddleRectParent = new _editor_helper__WEBPACK_IMPORTED_MODULE_5__.Point(0, 0);\n    }\n    return ImageResizingPoints;\n}());\n\n/**\n * @private\n */\nvar SelectedImageInfo = /** @class */ (function () {\n    /**\n     * Constructor for selected image info class.\n     * @param {number} height - Specifies for height value.\n     * @param {number} width - Specifies for width value.\n     */\n    function SelectedImageInfo(height, width) {\n        this.heightIn = 0;\n        this.widthIn = 0;\n        this.heightIn = height;\n        this.widthIn = width;\n    }\n    Object.defineProperty(SelectedImageInfo.prototype, \"height\", {\n        get: function () {\n            return this.heightIn;\n        },\n        set: function (value) {\n            this.heightIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SelectedImageInfo.prototype, \"width\", {\n        get: function () {\n            return this.widthIn;\n        },\n        set: function (value) {\n            this.widthIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SelectedImageInfo;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor/image-resizer.js?");

/***/ })

}]);