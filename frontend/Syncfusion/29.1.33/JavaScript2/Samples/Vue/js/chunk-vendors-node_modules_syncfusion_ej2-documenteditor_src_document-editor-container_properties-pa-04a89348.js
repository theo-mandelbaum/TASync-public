"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor-container_properties-pa-04a89348"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor-container/properties-pane/text-properties.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor-container/properties-pane/text-properties.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Text: () => (/* binding */ Text)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\");\n/* harmony import */ var _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-splitbuttons */ \"./node_modules/@syncfusion/ej2-splitbuttons/index.js\");\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"./node_modules/@syncfusion/ej2-data/index.js\");\n/* eslint-disable */\n\n\n\n\n\n\n\n/**\n * Text Properties\n *\n * @private\n */\nvar Text = /** @class */ (function () {\n    /**\n     * Initialize text properties.\n     *\n     * @param {DocumentEditorContainer} container - DocumentEditorContainer instance.\n     * @param {boolean} isRtl - Specifies the RTL layout.\n     */\n    function Text(container, isRtl) {\n        var _this = this;\n        this.isRetrieving = false;\n        this.appliedHighlightColor = 'rgb(255, 255, 0)';\n        this.createChangecase = function (container) {\n            var items = [\n                {\n                    text: _this.localObj.getConstant('SentenceCase'), id: 'sentencecase'\n                }, {\n                    text: _this.localObj.getConstant('UPPERCASE'), id: 'uppercase'\n                }, {\n                    text: _this.localObj.getConstant('Lowercase'), id: 'lowercase'\n                }, {\n                    text: _this.localObj.getConstant('CapitalizeEachWord'), id: 'capitalizeEachWord'\n                }, {\n                    text: _this.localObj.getConstant('ToggleCase'), id: 'togglecase'\n                }\n            ];\n            _this.changeCaseDropdown = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_3__.DropDownButton({\n                items: items,\n                iconCss: 'e-icons e-de-ctnr-change-case',\n                enableRtl: _this.isRtl\n            });\n            var changeCaseContainer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                id: container.id + '_changeCase', className: 'e-de-ctnr-group-btn'\n            });\n            var buttonElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', {\n                id: changeCaseContainer.id + '_dropdownBtn',\n                attrs: { type: 'button' }\n            });\n            changeCaseContainer.appendChild(buttonElement);\n            container.appendChild(changeCaseContainer);\n            _this.changeCaseDropdown.appendTo(buttonElement);\n        };\n        this.changeCase = function (args) {\n            if (_this.isRetrieving) {\n                return;\n            }\n            var text = args.item.id;\n            switch (text) {\n                case 'sentencecase':\n                    if (!_this.documentEditor.isReadOnly && _this.documentEditor.editorModule) {\n                        _this.documentEditor.editorModule.changeCase('SentenceCase');\n                    }\n                    break;\n                case 'uppercase':\n                    if (!_this.documentEditor.isReadOnly && _this.documentEditor.editorModule) {\n                        _this.documentEditor.editorModule.changeCase('Uppercase');\n                    }\n                    break;\n                case 'lowercase':\n                    if (!_this.documentEditor.isReadOnly && _this.documentEditor.editorModule) {\n                        _this.documentEditor.editorModule.changeCase('Lowercase');\n                    }\n                    break;\n                case 'capitalizeEachWord':\n                    if (!_this.documentEditor.isReadOnly && _this.documentEditor.editorModule) {\n                        _this.documentEditor.editorModule.changeCase('CapitalizeEachWord');\n                    }\n                    break;\n                case 'togglecase':\n                    if (!_this.documentEditor.isReadOnly && _this.documentEditor.editorModule) {\n                        _this.documentEditor.editorModule.changeCase('ToggleCase');\n                    }\n                    break;\n                default:\n                    break;\n            }\n        };\n        this.container = container;\n        this.isRtl = isRtl;\n    }\n    Object.defineProperty(Text.prototype, \"documentEditor\", {\n        get: function () {\n            return this.container.documentEditor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Text.prototype.initializeTextPropertiesDiv = function (wholeDiv, isRtl) {\n        this.localObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditorcontainer', this.container.defaultLocale, this.container.locale);\n        this.textProperties = wholeDiv;\n        var element = this.documentEditor.element.id + '_font_properties';\n        var textDiv = this.createDiv(element + '_text', wholeDiv);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(textDiv, ['e-de-cntr-pane-padding', 'e-de-prop-separator-line'], []);\n        var fontDiv = this.createDiv(element + '_sizeStyle', textDiv, 'display:inline-flex;');\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(fontDiv, ['e-de-ctnr-segment'], []);\n        if (isRtl) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(fontDiv, ['e-de-ctnr-segment-rtl'], []);\n        }\n        var fontFamilyDiv = this.createDiv(element + '_fontFamilyDiv', fontDiv);\n        var fontFamily = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', {\n            id: element + '_fontFamily', className: 'e-prop-font-style'\n        });\n        fontFamilyDiv.appendChild(fontFamily);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(fontFamilyDiv, ['e-de-panel-left-width'], []);\n        this.createDropDownListForFamily(fontFamily);\n        var fontSizeDiv = this.createDiv(element + '_fontSizeDiv', fontDiv);\n        var divClassName = 'e-de-ctnr-group-btn e-de-char-fmt-btn-left e-btn-group';\n        if (isRtl) {\n            divClassName = 'e-rtl ' + divClassName;\n        }\n        var fontSize = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', {\n            id: element + '_fontSize', innerHTML: 'type:number', className: 'e-prop-font-style'\n        });\n        fontSizeDiv.appendChild(fontSize);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(fontSizeDiv, ['e-de-panel-right-width'], []);\n        this.createDropDownListForSize(fontSize);\n        var propertiesDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            id: element + '_properties', styles: 'display:inline-flex;', className: 'e-de-ctnr-segment'\n        });\n        if (isRtl) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(propertiesDiv, ['e-de-ctnr-segment-rtl'], []);\n        }\n        textDiv.appendChild(propertiesDiv);\n        var leftDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            id: element + '_leftDiv', className: divClassName, styles: 'display:inline-flex;'\n        });\n        propertiesDiv.appendChild(leftDiv);\n        this.bold = this.createButtonTemplate(element + '_bold', 'e-de-ctnr-bold e-icons', leftDiv, 'e-de-prop-font-button', '40.5', 'Bold Tooltip');\n        this.italic = this.createButtonTemplate(element + '_italic', 'e-de-ctnr-italic e-icons', leftDiv, 'e-de-prop-font-button', '40.5', 'Italic Tooltip');\n        this.underline = this.createButtonTemplate(element + '_underline', 'e-de-ctnr-underline e-icons', leftDiv, 'e-de-prop-font-button', '40.5', 'Underline Tooltip');\n        this.strikethrough = this.createButtonTemplate(element + '_strikethrough', 'e-de-ctnr-strikethrough e-icons', leftDiv, 'e-de-prop-font-last-button', '40.5', 'Strikethrough');\n        divClassName = 'e-de-ctnr-group-btn e-de-char-fmt-btn-right e-btn-group';\n        if (isRtl) {\n            divClassName = 'e-rtl ' + divClassName;\n        }\n        var rightDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: element + '_rightDiv', className: divClassName, styles: 'display:inline-flex;' });\n        propertiesDiv.appendChild(rightDiv);\n        this.superscript = this.createButtonTemplate(element + '_superscript', 'e-de-ctnr-superscript e-icons', rightDiv, 'e-de-prop-font-button', '38.5', 'Superscript Tooltip');\n        this.subscript = this.createButtonTemplate(element + '_subscript', 'e-de-ctnr-subscript e-icons', rightDiv, 'e-de-prop-font-last-button', '38.5', 'Subscript Tooltip');\n        var colorDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            id: element + '_colorDiv', styles: 'display:inline-flex;', className: 'e-de-ctnr-segment'\n        });\n        if (isRtl) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(propertiesDiv, ['e-de-ctnr-segment-rtl'], []);\n        }\n        var leftDiv2 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: element + '_color', className: 'e-de-font-clr-picker e-de-ctnr-group-btn', styles: 'display:inline-flex;' });\n        if (isRtl) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(leftDiv2, ['e-rtl'], []);\n        }\n        colorDiv.appendChild(leftDiv2);\n        textDiv.appendChild(colorDiv);\n        this.fontColor = this.createFontColorPicker(element + '_textColor', 40.5, leftDiv2, this.localObj.getConstant('Font color'));\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(leftDiv2.firstElementChild.lastElementChild.lastElementChild.firstChild, ['e-de-ctnr-fontcolor', 'e-icons'], ['e-caret']);\n        this.initializeHighlightColorElement();\n        this.highlightColor = this.createHighlightColorSplitButton(element + '_highlightColor', 34.5, leftDiv2, this.localObj.getConstant('Text highlight color'));\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.highlightColor.element.nextElementSibling.firstElementChild, ['e-de-ctnr-highlight', 'e-icons'], ['e-caret']);\n        this.highlightColorInputElement = this.highlightColor.element.firstChild;\n        this.clearFormat = this.createButtonTemplate(element + '_clearFormat', 'e-de-ctnr-clearall e-icons', leftDiv2, 'e-de-prop-font-last-button', '40.5', 'Clear all formatting');\n        var rightDiv2 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            id: element + '_rightDiv2', className: divClassName.replace('e-btn-group', ''), styles: 'display:inline-flex;'\n        });\n        if (isRtl) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(rightDiv2, ['e-rtl'], []);\n        }\n        rightDiv2.setAttribute('title', this.container.localObj.getConstant('Change case Tooltip'));\n        textDiv.appendChild(rightDiv2);\n        this.createChangecase(rightDiv2);\n    };\n    Text.prototype.createHighlightColorSplitButton = function (id, width, divElement, toolTipText) {\n        var _this = this;\n        var buttonElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', { id: id, attrs: { type: 'button' } });\n        // buttonElement.style.width = width + 'px';\n        // buttonElement.style.padding = '1px';\n        // buttonElement.style.height = 30 + 'px';\n        divElement.appendChild(buttonElement);\n        var hgltSplitObj = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_3__.SplitButton({\n            cssClass: 'e-de-btn-hghlclr',\n            iconCss: 'e-de-ctnr-hglt-color',\n            /* eslint-disable-next-line max-len */\n            target: this.highlightColorElement, close: this.closePopup.bind(this), beforeOpen: this.openPopup.bind(this), enableRtl: this.isRtl\n        });\n        hgltSplitObj.appendTo(buttonElement);\n        hgltSplitObj.click = function () {\n            _this.applyHighlightColor(_this.highlightColorInputElement.style.backgroundColor);\n        };\n        hgltSplitObj.element.firstChild.style.backgroundColor = 'rgb(255, 255, 0)';\n        hgltSplitObj.element.parentElement.setAttribute('title', toolTipText);\n        hgltSplitObj.element.parentElement.setAttribute('aria-label', toolTipText);\n        return hgltSplitObj;\n    };\n    Text.prototype.openPopup = function () {\n        this.highlightColorElement.style.display = 'block';\n    };\n    Text.prototype.closePopup = function () {\n        this.highlightColorElement.style.display = 'none';\n    };\n    Text.prototype.initializeHighlightColorElement = function () {\n        this.highlightColorElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            styles: 'display:none;width:157px',\n            className: 'e-de-cntr-highlight-pane'\n        });\n        var yellowDiv = this.createHightlighColorPickerDiv('#ffff00', 'yellowDiv');\n        var brightGreenDiv = this.createHightlighColorPickerDiv('#00ff00', 'brightGreenDiv');\n        var turquoiseDiv = this.createHightlighColorPickerDiv('#00ffff', 'turquoiseDiv');\n        var hotPinkDiv = this.createHightlighColorPickerDiv('#ff00ff', 'hotPinkDiv');\n        var blueDiv = this.createHightlighColorPickerDiv('#0000ff', 'blueDiv');\n        var redDiv = this.createHightlighColorPickerDiv('#ff0000', 'redDiv');\n        var darkBlueDiv = this.createHightlighColorPickerDiv('#000080', 'darkBlueDiv');\n        var tealDiv = this.createHightlighColorPickerDiv('#008080', 'tealDiv');\n        var greenDiv = this.createHightlighColorPickerDiv('#008000', 'greenDiv');\n        var violetDiv = this.createHightlighColorPickerDiv('#800080', 'violetDiv');\n        var darkRedDiv = this.createHightlighColorPickerDiv('#800000', 'darkRedDiv');\n        var darkYellowDiv = this.createHightlighColorPickerDiv('#808000', 'darkYellowDiv');\n        var gray50Div = this.createHightlighColorPickerDiv('#808080', 'gray50Div');\n        var gray25Div = this.createHightlighColorPickerDiv('#c0c0c0', 'gray25Div');\n        var blackDiv = this.createHightlighColorPickerDiv('#000000', 'blackDiv');\n        var nocolor = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-hglt-no-color' });\n        this.highlightColorElement.appendChild(nocolor);\n        var nocolorDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { styles: 'width:24px;height:24px;background-color:#ffffff;margin:3px;', id: 'noColorDiv' });\n        nocolor.appendChild(nocolorDiv);\n        var nocolorDivValue = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { innerHTML: this.localObj.getConstant('No color'), className: 'e-de-ctnr-hglt-no-color' });\n        nocolorDiv.appendChild(nocolorDivValue);\n        yellowDiv.addEventListener('click', this.onHighLightColor.bind(this));\n        brightGreenDiv.addEventListener('click', this.onHighLightColor.bind(this));\n        turquoiseDiv.addEventListener('click', this.onHighLightColor.bind(this));\n        hotPinkDiv.addEventListener('click', this.onHighLightColor.bind(this));\n        blueDiv.addEventListener('click', this.onHighLightColor.bind(this));\n        redDiv.addEventListener('click', this.onHighLightColor.bind(this));\n        darkBlueDiv.addEventListener('click', this.onHighLightColor.bind(this));\n        tealDiv.addEventListener('click', this.onHighLightColor.bind(this));\n        greenDiv.addEventListener('click', this.onHighLightColor.bind(this));\n        violetDiv.addEventListener('click', this.onHighLightColor.bind(this));\n        darkRedDiv.addEventListener('click', this.onHighLightColor.bind(this));\n        darkYellowDiv.addEventListener('click', this.onHighLightColor.bind(this));\n        gray50Div.addEventListener('click', this.onHighLightColor.bind(this));\n        gray25Div.addEventListener('click', this.onHighLightColor.bind(this));\n        blackDiv.addEventListener('click', this.onHighLightColor.bind(this));\n        nocolor.addEventListener('click', this.onHighLightColor.bind(this));\n    };\n    Text.prototype.createHightlighColorPickerDiv = function (backgroundColor, id) {\n        var colorDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-de-ctnr-hglt-btn', id: id });\n        colorDiv.style.backgroundColor = backgroundColor;\n        this.highlightColorElement.appendChild(colorDiv);\n        return colorDiv;\n    };\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Text.prototype.onHighLightColor = function (event) {\n        if (this.documentEditor.selectionModule) {\n            this.applyHighlightColor(event.currentTarget.style.backgroundColor);\n            this.highlightColor.toggle();\n        }\n    };\n    Text.prototype.applyHighlightColorAsBackground = function (color) {\n        this.removeSelectedColorDiv();\n        if (color === 'NoColor') {\n            this.highlightColorElement.querySelector('#noColorDiv').classList.add('e-color-selected');\n        }\n        else if (color === 'Yellow') {\n            this.highlightColorElement.querySelector('#yellowDiv').classList.add('e-color-selected');\n        }\n        else if (color === 'BrightGreen') {\n            this.highlightColorElement.querySelector('#brightGreenDiv').classList.add('e-color-selected');\n        }\n        else if (color === 'Turquoise') {\n            this.highlightColorElement.querySelector('#turquoiseDiv').classList.add('e-color-selected');\n        }\n        else if (color === 'Pink') {\n            this.highlightColorElement.querySelector('#hotPinkDiv').classList.add('e-color-selected');\n        }\n        else if (color === 'Red') {\n            this.highlightColorElement.querySelector('#redDiv').classList.add('e-color-selected');\n        }\n        else if (color === 'DarkBlue') {\n            this.highlightColorElement.querySelector('#darkBlueDiv').classList.add('e-color-selected');\n        }\n        else if (color === 'Teal') {\n            this.highlightColorElement.querySelector('#tealDiv').classList.add('e-color-selected');\n        }\n        else if (color === 'Green') {\n            this.highlightColorElement.querySelector('#greenDiv').classList.add('e-color-selected');\n        }\n        else if (color === 'Violet') {\n            this.highlightColorElement.querySelector('#violetDiv').classList.add('e-color-selected');\n        }\n        else if (color === 'DarkRed') {\n            this.highlightColorElement.querySelector('#darkRedDiv').classList.add('e-color-selected');\n        }\n        else if (color === 'DarkYellow') {\n            this.highlightColorElement.querySelector('#darkYellowDiv').classList.add('e-color-selected');\n        }\n        else if (color === 'Gray50') {\n            this.highlightColorElement.querySelector('#gray50Div').classList.add('e-color-selected');\n        }\n        else if (color === 'Gray25') {\n            this.highlightColorElement.querySelector('#gray25Div').classList.add('e-color-selected');\n        }\n        else if (color === 'Black') {\n            this.highlightColorElement.querySelector('#blackDiv').classList.add('e-color-selected');\n        }\n        else if (color === 'Blue') {\n            this.highlightColorElement.querySelector('#blueDiv').classList.add('e-color-selected');\n        }\n    };\n    Text.prototype.removeSelectedColorDiv = function () {\n        this.highlightColorElement.querySelector('#noColorDiv').classList.remove('e-color-selected');\n        this.highlightColorElement.querySelector('#yellowDiv').classList.remove('e-color-selected');\n        this.highlightColorElement.querySelector('#brightGreenDiv').classList.remove('e-color-selected');\n        this.highlightColorElement.querySelector('#turquoiseDiv').classList.remove('e-color-selected');\n        this.highlightColorElement.querySelector('#hotPinkDiv').classList.remove('e-color-selected');\n        this.highlightColorElement.querySelector('#redDiv').classList.remove('e-color-selected');\n        this.highlightColorElement.querySelector('#darkBlueDiv').classList.remove('e-color-selected');\n        this.highlightColorElement.querySelector('#tealDiv').classList.remove('e-color-selected');\n        this.highlightColorElement.querySelector('#greenDiv').classList.remove('e-color-selected');\n        this.highlightColorElement.querySelector('#violetDiv').classList.remove('e-color-selected');\n        this.highlightColorElement.querySelector('#darkRedDiv').classList.remove('e-color-selected');\n        this.highlightColorElement.querySelector('#darkYellowDiv').classList.remove('e-color-selected');\n        this.highlightColorElement.querySelector('#gray50Div').classList.remove('e-color-selected');\n        this.highlightColorElement.querySelector('#gray25Div').classList.remove('e-color-selected');\n        this.highlightColorElement.querySelector('#blackDiv').classList.remove('e-color-selected');\n    };\n    Text.prototype.applyHighlightColor = function (color) {\n        this.appliedHighlightColor = color;\n        var hgltColor = this.getHighLightColor(color);\n        if (hgltColor === 'NoColor') {\n            this.documentEditor.selectionModule.characterFormat.highlightColor = null;\n        }\n        this.documentEditor.selectionModule.characterFormat.highlightColor = hgltColor;\n        this.documentEditor.focusIn();\n    };\n    Text.prototype.getHighLightColor = function (color) {\n        switch (color) {\n            case 'rgb(255, 255, 0)':\n                return 'Yellow';\n            case 'rgb(0, 255, 0)':\n                return 'BrightGreen';\n            case 'rgb(0, 255, 255)':\n                return 'Turquoise';\n            case 'rgb(255, 0, 255)':\n                return 'Pink';\n            case 'rgb(0, 0, 255)':\n                return 'Blue';\n            case 'rgb(255, 0, 0)':\n                return 'Red';\n            case 'rgb(0, 0, 128)':\n                return 'DarkBlue';\n            case 'rgb(0, 128, 128)':\n                return 'Teal';\n            case 'rgb(0, 128, 0)':\n                return 'Green';\n            case 'rgb(128, 0, 128)':\n                return 'Violet';\n            case 'rgb(128, 0, 0)':\n                return 'DarkRed';\n            case 'rgb(128, 128, 0)':\n                return 'DarkYellow';\n            case 'rgb(128, 128, 128)':\n                return 'Gray50';\n            case 'rgb(192, 192, 192)':\n                return 'Gray25';\n            case 'rgb(0, 0, 0)':\n                return 'Black';\n            default:\n                return 'NoColor';\n        }\n    };\n    Text.prototype.createDiv = function (id, parentDiv, style) {\n        var div;\n        if (style) {\n            div = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: id, styles: style });\n        }\n        else {\n            div = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: id });\n        }\n        parentDiv.appendChild(div);\n        return div;\n    };\n    /* eslint-disable-next-line max-len */\n    Text.prototype.createButtonTemplate = function (id, iconcss, div, buttonClass, width, toolTipText) {\n        var button = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('Button', { id: id, attrs: { type: 'button' } });\n        // button.style.width = width + 'px';\n        // buttonElement.style.height = 32 + 'px';\n        div.appendChild(button);\n        var btn = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__.Button({\n            cssClass: buttonClass, iconCss: iconcss, enableRtl: this.isRtl\n        });\n        btn.appendTo(button);\n        button.setAttribute('title', this.localObj.getConstant(toolTipText));\n        button.setAttribute('aria-label', this.localObj.getConstant(toolTipText));\n        button.setAttribute('aria-pressed', 'false');\n        switch (toolTipText) {\n            case 'Bold Tooltip':\n                this.boldBtn = btn;\n                break;\n            case 'Italic Tooltip':\n                this.italicBtn = btn;\n                break;\n            case 'Underline Tooltip':\n                this.underlineBtn = btn;\n                break;\n            case 'Strikethrough':\n                this.strikethroughBtn = btn;\n                break;\n            case 'Superscript Tooltip':\n                this.superscriptBtn = btn;\n                break;\n            case 'Subscript Tooltip':\n                this.subscriptBtn = btn;\n                break;\n            default:\n                this.clearFormatBtn = btn;\n        }\n        return button;\n    };\n    Text.prototype.createFontColorPicker = function (id, width, divElement, toolTipText) {\n        var _a = this.documentEditor.documentEditorSettings.colorPickerSettings, columns = _a.columns, createPopupOnClick = _a.createPopupOnClick, cssClass = _a.cssClass, disabled = _a.disabled, enablePersistence = _a.enablePersistence, inline = _a.inline, mode = _a.mode, modeSwitcher = _a.modeSwitcher, noColor = _a.noColor, presetColors = _a.presetColors, showButtons = _a.showButtons;\n        var inputElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('input', { id: id, attrs: { 'type': 'color' } });\n        inputElement.style.width = width + 'px';\n        divElement.appendChild(inputElement);\n        this.fontColorInputElement = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_4__.ColorPicker({ value: '#000000', enableRtl: this.isRtl, locale: this.container.locale, enableOpacity: false, mode: mode, modeSwitcher: modeSwitcher, showButtons: showButtons, columns: columns, createPopupOnClick: createPopupOnClick, cssClass: cssClass, disabled: disabled, enablePersistence: enablePersistence, inline: inline, noColor: noColor, presetColors: presetColors }, inputElement);\n        this.fontColorInputElement.element.parentElement.setAttribute('title', toolTipText);\n        this.fontColorInputElement.element.parentElement.setAttribute('aria-label', toolTipText);\n        this.documentEditor.documentHelper.fontColorInputElement = this.fontColorInputElement;\n        return inputElement;\n    };\n    Text.prototype.createDropDownListForSize = function (fontSelectElement) {\n        var _this = this;\n        var fontSize = ['8', '9', '10', '11', '12', '14', '16', '18', '20', '22', '24', '26', '28', '36', '48', '72', '96'];\n        this.fontSize = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_1__.ComboBox({\n            dataSource: fontSize, popupHeight: '180px',\n            popupWidth: '80px',\n            cssClass: 'e-de-prop-dropdown',\n            allowCustom: true,\n            showClearButton: false,\n            enableRtl: this.isRtl\n        });\n        this.fontSize.focus = function () {\n            _this.isRetrieving = false;\n            _this.fontSize.element.select();\n        };\n        var format = this.documentEditor.selectionModule.characterFormat;\n        this.fontSize.value = (format.bidi || format.complexScript) ? format.fontSizeBidi.toString() : format.fontSize.toString();\n        this.fontSize.appendTo(fontSelectElement);\n        this.fontSize.element.parentElement.setAttribute('title', this.localObj.getConstant('Font Size'));\n    };\n    Text.prototype.createDropDownListForFamily = function (fontSelectElement) {\n        var _this = this;\n        /* eslint-disable */\n        var fontStyle;\n        var isStringTemplate = false;\n        var itemTemplate = '';\n        if (!this.container.enableCsp) {\n            itemTemplate = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.initializeCSPTemplate)(function (data) { return \"<span style=\\\"font-family: \" + data.FontName + \";\\\">\" + data.FontName + \"</span>\"; });\n            isStringTemplate = true;\n        }\n        this.fontFamily = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_1__.ComboBox({\n            dataSource: fontStyle,\n            query: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.Query().select(['FontName']),\n            fields: { text: 'FontName', value: 'FontValue' },\n            popupHeight: '150px',\n            cssClass: 'e-de-prop-dropdown',\n            allowCustom: true,\n            showClearButton: false,\n            enableRtl: this.isRtl,\n            itemTemplate: itemTemplate\n        });\n        this.fontFamily.appendTo(fontSelectElement);\n        this.fontFamily.isStringTemplate = isStringTemplate;\n        var fontFamilyValue = this.container.documentEditorSettings.fontFamilies;\n        for (var i = 0; i < fontFamilyValue.length; i++) {\n            var fontValue = fontFamilyValue[i];\n            var fontStyleValue = { 'FontName': fontValue, 'FontValue': fontValue };\n            this.fontFamily.addItem(fontStyleValue, i);\n        }\n        this.fontFamily.focus = function () {\n            _this.isRetrieving = false;\n            _this.fontFamily.element.select();\n        };\n        this.fontFamily.element.parentElement.setAttribute('title', this.localObj.getConstant('Font'));\n    };\n    /* eslint-enable */\n    Text.prototype.wireEvent = function () {\n        var _this = this;\n        this.fontFamily.addEventListener('change', function () {\n            _this.changeFontFamily();\n        });\n        this.fontSize.addEventListener('change', function () {\n            _this.changeFontSize();\n        });\n        this.bold.addEventListener('click', function () {\n            _this.isRetrieving = false;\n            _this.boldAction();\n        });\n        this.italic.addEventListener('click', function () {\n            _this.isRetrieving = false;\n            _this.italicAction();\n        });\n        this.underline.addEventListener('click', function () {\n            _this.isRetrieving = false;\n            _this.underlineAction();\n        });\n        this.strikethrough.addEventListener('click', function () {\n            _this.isRetrieving = false;\n            _this.strikethroughAction();\n        });\n        this.superscript.addEventListener('click', function () {\n            _this.isRetrieving = false;\n            _this.superscriptAction();\n        });\n        this.subscript.addEventListener('click', function () {\n            _this.isRetrieving = false;\n            _this.subscriptAction();\n        });\n        this.fontColorInputElement.addEventListener('change', function (args) {\n            _this.isRetrieving = false;\n            _this.changeFontColor(args);\n        });\n        this.clearFormat.addEventListener('click', function () {\n            _this.isRetrieving = false;\n            _this.clearFormatAction();\n        });\n        this.changeCaseDropdown.addEventListener('select', function (args) {\n            _this.isRetrieving = false;\n            _this.changeCase(args);\n        });\n    };\n    Text.prototype.unwireEvents = function () {\n        this.fontFamily.change = undefined;\n        this.fontSize.change = undefined;\n        this.bold.click = undefined;\n        this.italic.click = undefined;\n        this.underline.click = undefined;\n        this.strikethrough.click = undefined;\n        this.superscript.click = undefined;\n        this.subscript.click = undefined;\n        this.fontColorInputElement.change = undefined;\n        this.highlightColorElement.click = undefined;\n        this.highlightColor.click = undefined;\n        this.clearFormat.click = undefined;\n        this.changeCaseDropdown.select = undefined;\n    };\n    Text.prototype.boldAction = function () {\n        if (this.isRetrieving) {\n            return;\n        }\n        if (!this.documentEditor.isReadOnly && this.documentEditor.editorModule) {\n            this.documentEditor.editorModule.toggleBold();\n            this.documentEditor.focusIn();\n        }\n    };\n    Text.prototype.italicAction = function () {\n        if (this.isRetrieving) {\n            return;\n        }\n        if (!this.documentEditor.isReadOnly && this.documentEditor.editorModule) {\n            this.documentEditor.editorModule.toggleItalic();\n            this.documentEditor.focusIn();\n        }\n    };\n    Text.prototype.underlineAction = function () {\n        if (this.isRetrieving) {\n            return;\n        }\n        if (!this.documentEditor.isReadOnly && this.documentEditor.editorModule) {\n            this.documentEditor.editorModule.toggleUnderline('Single');\n            this.documentEditor.focusIn();\n        }\n    };\n    Text.prototype.strikethroughAction = function () {\n        if (this.isRetrieving) {\n            return;\n        }\n        if (!this.documentEditor.isReadOnly && this.documentEditor.editorModule) {\n            this.documentEditor.editorModule.toggleStrikethrough();\n            this.documentEditor.focusIn();\n        }\n    };\n    Text.prototype.clearFormatAction = function () {\n        if (this.isRetrieving) {\n            return;\n        }\n        if (!this.documentEditor.isReadOnly && this.documentEditor.editorModule) {\n            this.documentEditor.editorModule.clearFormatting();\n        }\n    };\n    Text.prototype.subscriptAction = function () {\n        if (this.isRetrieving) {\n            return;\n        }\n        if (!this.documentEditor.isReadOnly && this.documentEditor.editorModule) {\n            this.documentEditor.editorModule.toggleSubscript();\n            this.documentEditor.focusIn();\n        }\n    };\n    Text.prototype.superscriptAction = function () {\n        if (this.isRetrieving) {\n            return;\n        }\n        if (!this.documentEditor.isReadOnly && this.documentEditor.editorModule) {\n            this.documentEditor.editorModule.toggleSuperscript();\n            this.documentEditor.focusIn();\n        }\n    };\n    Text.prototype.changeFontColor = function (arg) {\n        var _this = this;\n        if (this.isRetrieving) {\n            return;\n        }\n        if (!this.documentEditor.isReadOnly && this.documentEditor.selectionModule) {\n            this.documentEditor.selectionModule.characterFormat.fontColor = arg.currentValue.hex;\n            setTimeout(function () {\n                _this.documentEditor.focusIn();\n            }, 30);\n        }\n    };\n    Text.prototype.changeFontFamily = function () {\n        var _this = this;\n        if (this.isRetrieving) {\n            return;\n        }\n        if (!this.documentEditor.isReadOnly && this.documentEditor.selectionModule && this.fontFamily.value !== '') {\n            setTimeout(function () {\n                _this.documentEditor.selectionModule.characterFormat.fontFamily =\n                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(_this.fontFamily.value);\n            }, 10);\n            this.documentEditor.focusIn();\n        }\n    };\n    Text.prototype.changeFontSize = function () {\n        var _this = this;\n        if (this.isRetrieving) {\n            return;\n        }\n        if (!this.documentEditor.isReadOnly && this.documentEditor.selectionModule && this.fontSize.value !== '') {\n            setTimeout(function () {\n                _this.documentEditor.selectionModule.characterFormat.fontSize = _this.fontSize.value;\n            }, 10);\n            this.documentEditor.focusIn();\n        }\n    };\n    Text.prototype.onSelectionChange = function () {\n        this.isRetrieving = true;\n        if (this.documentEditor.selectionModule) {\n            //#region character format\n            if (this.documentEditor.selectionModule.characterFormat.fontFamily) {\n                var fontFamily = void 0;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentEditor.selectionModule.characterFormat.renderedFontFamily)\n                    && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.documentEditor.selectionModule.characterFormat.fontFamily)) {\n                    fontFamily = this.documentEditor.selectionModule.characterFormat.renderedFontFamily;\n                }\n                else {\n                    fontFamily = this.documentEditor.selectionModule.characterFormat.fontFamily;\n                }\n                this.fontFamily.value = fontFamily;\n                this.fontFamily.dataBind();\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.fontFamily.getDataByValue(fontFamily))) {\n                    var fontStyleValue = { 'FontName': fontFamily, 'FontValue': fontFamily };\n                    this.fontFamily.addItem(fontStyleValue);\n                }\n            }\n            else {\n                this.fontFamily.value = '';\n            }\n            if (this.documentEditor.selectionModule.characterFormat.fontSize) {\n                var format = this.documentEditor.selectionModule.characterFormat;\n                this.fontSize.value = (format.bidi || format.complexScript) ? (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(format.fontSizeBidi) ? format.fontSizeBidi.toString() : '') : format.fontSize.toString();\n                this.fontSize.dataBind();\n            }\n            else {\n                this.fontSize.value = '';\n            }\n            if (this.documentEditor.selectionModule.characterFormat.bold) {\n                if (!this.bold.classList.contains('e-btn-toggle')) {\n                    this.bold.classList.add('e-btn-toggle');\n                    this.bold.setAttribute('aria-pressed', 'true');\n                }\n            }\n            else {\n                if (this.bold.classList.contains('e-btn-toggle')) {\n                    this.bold.classList.remove('e-btn-toggle');\n                    this.bold.setAttribute('aria-pressed', 'false');\n                }\n            }\n            if (this.documentEditor.selectionModule.characterFormat.italic) {\n                if (!this.italic.classList.contains('e-btn-toggle')) {\n                    this.italic.classList.add('e-btn-toggle');\n                    this.italic.setAttribute('aria-pressed', 'true');\n                }\n            }\n            else {\n                if (this.italic.classList.contains('e-btn-toggle')) {\n                    this.italic.classList.remove('e-btn-toggle');\n                    this.italic.setAttribute('aria-pressed', 'false');\n                }\n            }\n            if (this.documentEditor.selectionModule.characterFormat.underline\n                && this.documentEditor.selectionModule.characterFormat.underline !== 'None') {\n                if (!this.underline.classList.contains('e-btn-toggle')) {\n                    this.underline.classList.add('e-btn-toggle');\n                    this.underline.setAttribute('aria-pressed', 'true');\n                }\n            }\n            else {\n                if (this.underline.classList.contains('e-btn-toggle')) {\n                    this.underline.classList.remove('e-btn-toggle');\n                    this.underline.setAttribute('aria-pressed', 'false');\n                }\n            }\n            if (this.documentEditor.selectionModule.characterFormat.strikethrough\n                && this.documentEditor.selectionModule.characterFormat.strikethrough !== 'None') {\n                if (!this.strikethrough.classList.contains('e-btn-toggle')) {\n                    this.strikethrough.classList.add('e-btn-toggle');\n                    this.strikethrough.setAttribute('aria-pressed', 'true');\n                }\n            }\n            else {\n                if (this.strikethrough.classList.contains('e-btn-toggle')) {\n                    this.strikethrough.classList.remove('e-btn-toggle');\n                    this.strikethrough.setAttribute('aria-pressed', 'false');\n                }\n            }\n            if (this.documentEditor.selectionModule.characterFormat.baselineAlignment\n                && this.documentEditor.selectionModule.characterFormat.baselineAlignment === 'Subscript') {\n                if (!this.subscript.classList.contains('e-btn-toggle')) {\n                    this.subscript.classList.add('e-btn-toggle');\n                    this.subscript.setAttribute('aria-pressed', 'true');\n                }\n            }\n            else {\n                if (this.subscript.classList.contains('e-btn-toggle')) {\n                    this.subscript.classList.remove('e-btn-toggle');\n                    this.subscript.setAttribute('aria-pressed', 'false');\n                }\n            }\n            if (this.documentEditor.selectionModule.characterFormat.baselineAlignment\n                && this.documentEditor.selectionModule.characterFormat.baselineAlignment === 'Superscript') {\n                if (!this.superscript.classList.contains('e-btn-toggle')) {\n                    this.superscript.classList.add('e-btn-toggle');\n                    this.superscript.setAttribute('aria-pressed', 'true');\n                }\n            }\n            else {\n                if (this.superscript.classList.contains('e-btn-toggle')) {\n                    this.superscript.classList.remove('e-btn-toggle');\n                    this.superscript.setAttribute('aria-pressed', 'false');\n                }\n            }\n            if (this.documentEditor.selectionModule.characterFormat.fontColor) {\n                var fontColor = this.documentEditor.selectionModule.characterFormat.fontColor;\n                // \"empty\" is old value used for auto color till v19.2.49. It is maintained for backward compatibility.\n                if (fontColor === 'empty' || fontColor === '#00000000') {\n                    fontColor = '#000000';\n                }\n                this.fontColorInputElement.value = fontColor;\n            }\n            if (this.documentEditor.selectionModule.characterFormat.highlightColor) {\n                this.highlightColorInputElement.style.backgroundColor = this.appliedHighlightColor;\n                this.applyHighlightColorAsBackground(this.documentEditor.selectionModule.characterFormat.highlightColor);\n            }\n            //#endregion\n        }\n    };\n    Text.prototype.removeHTMLElement = function () {\n        var _this = this;\n        this.bold.remove();\n        this.bold = null;\n        this.italic.remove();\n        this.italic = null;\n        this.underline.remove();\n        this.underline = null;\n        this.strikethrough.remove();\n        this.strikethrough = null;\n        this.subscript.remove();\n        this.subscript = null;\n        this.superscript.remove();\n        this.superscript = null;\n        this.clearFormat.remove();\n        this.clearFormat = null;\n        this.fontColor.remove();\n        this.fontColor = null;\n        this.highlightColorInputElement.childNodes.forEach(function (element) {\n            _this.highlightColorInputElement.removeChild(element);\n        });\n        this.highlightColorInputElement.remove();\n        this.highlightColorInputElement = null;\n        this.highlightColorElement.childNodes.forEach(function (element) {\n            _this.highlightColorElement.removeChild(element);\n        });\n        this.highlightColorElement.remove();\n        this.highlightColorElement = null;\n    };\n    Text.prototype.destroy = function () {\n        this.unwireEvents();\n        this.removeHTMLElement();\n        if (this.highlightColor) {\n            this.highlightColor.destroy();\n            this.highlightColor = undefined;\n        }\n        if (this.fontColorInputElement) {\n            this.fontColorInputElement.destroy();\n            this.fontColorInputElement.element.remove();\n            this.fontColorInputElement.element = null;\n            this.fontColorInputElement = undefined;\n        }\n        if (this.fontSize) {\n            this.fontSize.destroy();\n            if (this.fontSize.element) {\n                this.fontSize.element.remove();\n                this.fontSize.element = undefined;\n            }\n            this.fontSize = undefined;\n        }\n        if (this.fontFamily) {\n            this.fontFamily.destroy();\n            if (this.fontFamily.element) {\n                this.fontFamily.element.remove();\n                this.fontFamily.element = undefined;\n            }\n            this.fontFamily = undefined;\n        }\n        if (this.changeCaseDropdown) {\n            this.changeCaseDropdown.destroy();\n            this.changeCaseDropdown = undefined;\n        }\n        if (this.boldBtn) {\n            this.boldBtn.destroy();\n            this.boldBtn = undefined;\n        }\n        if (this.italicBtn) {\n            this.italicBtn.destroy();\n            this.italicBtn = undefined;\n        }\n        if (this.underlineBtn) {\n            this.underlineBtn.destroy();\n            this.underlineBtn = undefined;\n        }\n        if (this.strikethroughBtn) {\n            this.strikethroughBtn.destroy();\n            this.strikethroughBtn = undefined;\n        }\n        if (this.subscriptBtn) {\n            this.subscriptBtn.destroy();\n            this.subscriptBtn = undefined;\n        }\n        if (this.superscriptBtn) {\n            this.superscriptBtn.destroy();\n            this.superscriptBtn = undefined;\n        }\n        if (this.clearFormatBtn) {\n            this.clearFormatBtn.destroy();\n            this.clearFormatBtn = undefined;\n        }\n        this.container = undefined;\n    };\n    return Text;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor-container/properties-pane/text-properties.js?");

/***/ })

}]);