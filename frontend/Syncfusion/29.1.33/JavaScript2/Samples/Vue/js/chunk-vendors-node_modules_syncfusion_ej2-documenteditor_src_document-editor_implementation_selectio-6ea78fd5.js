"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_selectio-6ea78fd5"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/selection/selection-helper.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/selection/selection-helper.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hyperlink: () => (/* binding */ Hyperlink),\n/* harmony export */   ImageSizeInfo: () => (/* binding */ ImageSizeInfo),\n/* harmony export */   SelectionWidgetInfo: () => (/* binding */ SelectionWidgetInfo),\n/* harmony export */   TextPosition: () => (/* binding */ TextPosition)\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n\n\n\n\n/* eslint-disable */\n/**\n * @private\n */\nvar TextPosition = /** @class */ (function () {\n    function TextPosition(owner) {\n        /**\n         * @private\n         */\n        this.location = new _index__WEBPACK_IMPORTED_MODULE_0__.Point(0, 0);\n        /**\n         * @private\n         */\n        this.isUpdateLocation = true;\n        this.owner = owner;\n        this.documentHelper = this.owner.documentHelper;\n    }\n    Object.defineProperty(TextPosition.prototype, \"paragraph\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return this.currentWidget.paragraph;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextPosition.prototype, \"isAtParagraphStart\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return this.offset === this.owner.selectionModule.getStartOffset(this.paragraph);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextPosition.prototype, \"isAtParagraphEnd\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return this.owner.selectionModule.isParagraphLastLine(this.currentWidget)\n                && this.offset === this.owner.selectionModule.getLineLength(this.currentWidget);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextPosition.prototype, \"isCurrentParaBidi\", {\n        /**\n         * @private\n         */\n        get: function () {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.currentWidget.paragraph)) {\n                return this.currentWidget.paragraph.paragraphFormat.bidi;\n            }\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextPosition.prototype, \"selection\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return this.owner.selectionModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextPosition.prototype, \"hierarchicalPosition\", {\n        /**\n         * Gets the hierarchical position of logical text position in the document\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return this.getHierarchicalIndexInternal();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextPosition.prototype, \"viewer\", {\n        get: function () {\n            return this.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return clone of current text position\n     *\n     * @private\n     */\n    TextPosition.prototype.clone = function () {\n        var textPosition = new TextPosition(this.owner);\n        textPosition.currentWidget = this.currentWidget;\n        textPosition.offset = this.offset;\n        textPosition.location = this.location;\n        return textPosition;\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.containsRtlText = function (widget) {\n        for (var i = 0; i < widget.children.length; i++) {\n            if (widget.children[i].isRightToLeft) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set text position for paragraph and inline\n     *\n     * @private\n     */\n    TextPosition.prototype.setPositionForSelection = function (line, element, index, physicalLocation) {\n        //Set the start end position\n        var isParagraphEnd = false;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(element)) {\n            this.currentWidget = line;\n        }\n        else {\n            this.currentWidget = element.line;\n            if (element.nextNode instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && index > element.length) {\n                isParagraphEnd = this.selection.isLastRenderedInline(element, element.length);\n            }\n        }\n        this.location = physicalLocation;\n        if (isParagraphEnd) {\n            this.offset = this.selection.getParagraphLength(this.currentWidget.paragraph) + 1;\n        }\n        else {\n            this.offset = this.currentWidget.getOffset(element, index);\n        }\n    };\n    /**\n     * Set text position\n     *\n     * @private\n     */\n    TextPosition.prototype.setPositionFromLine = function (line, offset, location) {\n        this.currentWidget = line;\n        this.offset = offset;\n        if (location instanceof _index__WEBPACK_IMPORTED_MODULE_0__.Point) {\n            this.location.copy(location);\n        }\n    };\n    /**\n     * Set text position\n     *\n     * @private\n     */\n    TextPosition.prototype.setPosition = function (line, positionAtStart) {\n        this.currentWidget = line;\n        this.offset = positionAtStart ? this.selection.getStartOffset(line.paragraph)\n            : line.paragraph.lastChild.getEndOffset() + 1;\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Set position for text position\n     *\n     * @private\n     */\n    TextPosition.prototype.setPositionInternal = function (textPosition) {\n        this.currentWidget = textPosition.currentWidget;\n        this.offset = textPosition.offset;\n        this.location = textPosition.location;\n    };\n    /**\n     * Set position for current index\n     *\n     * @private\n     */\n    TextPosition.prototype.setPositionForCurrentIndex = function (hierarchicalIndex) {\n        var index = { index: hierarchicalIndex };\n        var paragraph = this.getParagraphWidget(index); //ref hierarchicalIndex\n        this.offset = parseFloat(index.index);\n        this.setPositionParagraph(paragraph, this.offset);\n    };\n    /**\n     * Get Page\n     *\n     */\n    TextPosition.prototype.getPage = function (position) {\n        var page;\n        var index = position.index.indexOf(';');\n        var newValue = '0';\n        if (index >= 0) {\n            newValue = position.index.substring(0, index);\n            position.index = position.index.substring(index).replace(';', '');\n        }\n        index = parseInt(newValue, 10);\n        page = this.documentHelper.pages[index];\n        return page;\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.getParagraphWidget = function (position) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(position.index)) {\n            return undefined;\n        }\n        var page = this.getPage(position);\n        var child = this.getLineWidget(undefined, position, page);\n        return child;\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.getLineWidget = function (widget, position, page) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(position.index)) {\n            return undefined;\n        }\n        var index = position.index.indexOf(';');\n        var value = '0';\n        if (index >= 0) {\n            value = position.index.substring(0, index);\n            position.index = position.index.substring(index).replace(';', '');\n        }\n        if (value === 'H' || value === 'F') {\n            if (value === 'H') {\n                widget = page.headerWidget;\n            }\n            else {\n                widget = page.footerWidget;\n            }\n        }\n        else if (value === 'FN' || value === 'EN') {\n            var index1 = position.index.indexOf(';');\n            var value1 = position.index.substring(0, index1);\n            position.index = position.index.substring(index1).replace(';', '');\n            if (value === 'FN') {\n                widget = page.footnoteWidget.bodyWidgets[value1];\n            }\n            else {\n                widget = page.endnoteWidget.bodyWidgets[value1];\n            }\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(page)) {\n            if (parseInt(value, 10) < page.bodyWidgets.length) {\n                widget = page.bodyWidgets[parseInt(value, 10)];\n            }\n            else {\n                widget = page.bodyWidgets[0];\n            }\n        }\n        index = parseInt(value, 10);\n        if (widget instanceof _index__WEBPACK_IMPORTED_MODULE_0__.BlockContainer) {\n            index = position.index.indexOf(';');\n            value = '0';\n            value = position.index.substring(0, index);\n            position.index = position.index.substring(index).replace(';', '');\n            index = parseInt(value, 10);\n        }\n        if (widget instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TableRowWidget && index >= widget.childWidgets.length) {\n            position.index = '0;0';\n            index = widget.childWidgets.length - 1;\n        }\n        if (index >= 0 && index < widget.childWidgets.length) {\n            var child = widget.childWidgets[index];\n            if (child instanceof _index__WEBPACK_IMPORTED_MODULE_0__.LineWidget) {\n                if (position.index.indexOf(';') > 0) {\n                    position.index = '0';\n                }\n                return child;\n            }\n            if (child instanceof _index__WEBPACK_IMPORTED_MODULE_0__.Widget) {\n                if (position.index.indexOf(';') > 0) {\n                    return this.getLineWidget(child, position);\n                }\n                else {\n                    //If table is shifted to previous text position then return the first paragraph within table.\n                    if (child instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n                        return this.getLineWidget(this.documentHelper.getFirstParagraphInFirstCell(child), position);\n                    }\n                    else if (child instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TableRowWidget && position.index.indexOf(';') === -1) {\n                        return this.documentHelper.getFirstParagraphInFirstCell(child.ownerTable).childWidgets[0];\n                    }\n                    return undefined;\n                }\n            }\n        }\n        else if (widget.nextRenderedWidget instanceof _index__WEBPACK_IMPORTED_MODULE_0__.Widget) {\n            position.index = '0';\n            if (widget.nextRenderedWidget instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n                return this.documentHelper.getFirstParagraphInFirstCell(widget.nextRenderedWidget).firstChild;\n            }\n            return this.getLineWidget(widget.nextRenderedWidget, position);\n        }\n        return undefined;\n    };\n    /**\n     * Update physical location of paragraph\n     *\n     * @private\n     */\n    TextPosition.prototype.updatePhysicalPosition = function (moveNextLine) {\n        if (this.currentWidget && this.owner.isLayoutEnabled && this.isUpdateLocation) {\n            this.location = this.selection.getPhysicalPositionInternal(this.currentWidget, this.offset, moveNextLine);\n        }\n    };\n    /**\n     * Return true if text position are in same paragraph and offset\n     *\n     * @private\n     */\n    TextPosition.prototype.isAtSamePosition = function (textPosition) {\n        return this.currentWidget === textPosition.currentWidget\n            && this.offset === textPosition.offset;\n    };\n    /**\n     * Return true if text position is in same paragraph index\n     * @private\n     */\n    TextPosition.prototype.isInSameParagraphIndex = function (textPosition) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(textPosition)) {\n            throw new Error('textPosition is undefined.');\n        }\n        return this.paragraph.index === textPosition.paragraph.index;\n    };\n    /**\n     * Return true if text position is in same paragraph\n     *\n     * @private\n     */\n    TextPosition.prototype.isInSameParagraph = function (textPosition) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(textPosition)) {\n            throw new Error('textPosition is undefined.');\n        }\n        return this.paragraph === textPosition.paragraph;\n    };\n    /**\n     * Return true if start and end is in same list\n     *\n     * @private\n     */\n    TextPosition.prototype.isInSameListParagraph = function (textPosition) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(textPosition)) {\n            throw new Error('textPosition is undefined.');\n        }\n        return this.paragraph.paragraphFormat.listFormat.listId === textPosition.paragraph.paragraphFormat.listFormat.listId;\n    };\n    /**\n     * Return true is current text position exist before given text position\n     *\n     * @private\n     */\n    TextPosition.prototype.isExistBefore = function (textPosition) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(textPosition)) {\n            throw new Error('textPosition is undefined.');\n        }\n        if (this.currentWidget === textPosition.currentWidget) {\n            return this.offset < textPosition.offset;\n        }\n        var currentParagraph = this.currentWidget.paragraph;\n        var paragraph = textPosition.currentWidget.paragraph;\n        if (currentParagraph === paragraph) {\n            return currentParagraph.childWidgets.indexOf(this.currentWidget) < paragraph.childWidgets.indexOf(textPosition.currentWidget);\n        }\n        if (currentParagraph.containerWidget === paragraph.containerWidget) {\n            if (currentParagraph.isInsideTable) {\n                return currentParagraph.associatedCell.childWidgets.indexOf(currentParagraph) <\n                    paragraph.associatedCell.childWidgets.indexOf(paragraph);\n                //handle after header footer implementation\n                // } else if ((this.currentParagraph).owner instanceof WHeaderFooter) {\n                //     return ((this.currentParagraph).owner as WHeaderFooter).blocks.indexOf((this.currentParagraph)) <\n                //         ((textPosition.currentParagraph).owner as WHeaderFooter).blocks.indexOf((textPosition.currentParagraph));\n            }\n            else {\n                return (currentParagraph.containerWidget.childWidgets.indexOf(currentParagraph)) <\n                    (paragraph.containerWidget.childWidgets.indexOf(paragraph));\n            }\n        }\n        return this.owner.selectionModule.isExistBefore(currentParagraph, paragraph);\n    };\n    /**\n     * Return true is current text position exist after given text position\n     *\n     * @private\n     */\n    TextPosition.prototype.isExistAfter = function (textPosition) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(textPosition)) {\n            throw new Error('textPosition is undefined.');\n        }\n        if (this.currentWidget === textPosition.currentWidget) {\n            return this.offset > textPosition.offset;\n        }\n        if (this.currentWidget.paragraph === textPosition.currentWidget.paragraph) {\n            return this.currentWidget.paragraph.childWidgets.indexOf(this.currentWidget) >\n                textPosition.currentWidget.paragraph.childWidgets.indexOf(textPosition.currentWidget);\n        }\n        var startParagraph = this.currentWidget.paragraph;\n        var endParagraph = textPosition.currentWidget.paragraph;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(startParagraph) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(endParagraph)) {\n            if (startParagraph.containerWidget instanceof _index__WEBPACK_IMPORTED_MODULE_0__.BodyWidget && endParagraph.containerWidget instanceof _index__WEBPACK_IMPORTED_MODULE_0__.BodyWidget &&\n                startParagraph.containerWidget === endParagraph.containerWidget) {\n                if (startParagraph.isInsideTable && endParagraph.isInsideTable) {\n                    return startParagraph.associatedCell.childWidgets.indexOf(startParagraph) >\n                        endParagraph.associatedCell.childWidgets.indexOf(endParagraph);\n                    // } else if ((this.currentParagraph).owner instanceof WHeaderFooter) {\n                    //     return ((this.currentParagraph).owner as WHeaderFooter).blocks.indexOf((this.currentParagraph)) >\n                    //         ((textPosition.currentParagraph).owner as WHeaderFooter).blocks.indexOf((textPosition.currentParagraph));\n                }\n                else {\n                    return (startParagraph.containerWidget.childWidgets.indexOf(startParagraph) >\n                        (endParagraph.containerWidget.childWidgets.indexOf(endParagraph)));\n                }\n            }\n            return this.owner.selectionModule.isExistAfter(startParagraph, endParagraph);\n        }\n        return false;\n    };\n    /**\n     * Return hierarchical index of current text position\n     *\n     * @private\n     */\n    TextPosition.prototype.getHierarchicalIndexInternal = function () {\n        return this.getHierarchicalIndex(this.currentWidget, this.offset.toString());\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.getHierarchicalIndex = function (line, hierarchicalIndex) {\n        var node = line;\n        if (node) {\n            return node.getHierarchicalIndex(hierarchicalIndex);\n        }\n        return hierarchicalIndex;\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.setPositionParagraph = function (line, offsetInLine) {\n        this.currentWidget = line;\n        this.offset = offsetInLine;\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.setPositionForLineWidget = function (lineWidget, offset) {\n        var lineLength = this.selection.getLineLength(lineWidget);\n        var lineIndex = lineWidget.paragraph.childWidgets.indexOf(lineWidget);\n        if (lineWidget.isLastLine()) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(lineWidget.paragraph.bodyWidget.footNoteReference)) {\n                lineLength = lineLength + lineWidget.paragraph.bodyWidget.footNoteReference.text.length;\n            }\n            else {\n                lineLength = lineLength + 1;\n            }\n        }\n        if (offset > lineLength) {\n            var nextLineWidget = void 0;\n            if (lineIndex >= lineWidget.paragraph.childWidgets.length - 1) {\n                var nextBlock = this.selection.getNextRenderedBlock(lineWidget.paragraph);\n                if (nextBlock && nextBlock.index === lineWidget.paragraph.index) {\n                    nextLineWidget = nextBlock.firstChild;\n                }\n            }\n            else {\n                nextLineWidget = lineWidget.paragraph.childWidgets[lineIndex + 1];\n            }\n            this.setPositionForLineWidget(nextLineWidget, offset - lineLength);\n            return;\n        }\n        else if (offset < 0) {\n            var prevLine = lineWidget.paragraph.childWidgets[lineIndex - 1];\n            var currentOffSet = this.selection.getLineLength(prevLine) + offset;\n            this.setPositionForLineWidget(prevLine, currentOffSet);\n            return;\n        }\n        else {\n            this.currentWidget = lineWidget;\n            this.offset = offset;\n        }\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * move to next text position\n     *\n     * @private\n     */\n    TextPosition.prototype.moveNextPosition = function (isNavigate) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(isNavigate)) {\n            isNavigate = true;\n        }\n        var inline = this.selection.getNextStartInline(this.currentWidget, this.offset);\n        if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline.fieldEnd)) {\n            if (isNavigate) {\n                this.moveNextPositionInternal(inline);\n                this.moveNextPosition();\n                return;\n            }\n            else {\n                var line = inline.fieldEnd.line;\n                var fieldEnd = inline.fieldEnd;\n                var fieldEndOffset = line.getOffset(fieldEnd, 1);\n                var fieldEndIndex = this.getHierarchicalIndex(line, fieldEndOffset.toString());\n                if (TextPosition.isForwardSelection(this.selection.end.getHierarchicalIndexInternal(), fieldEndIndex)) {\n                    //If field end is after selection end, extend selection end to field end.\n                    this.selection.end.moveToInline(inline.fieldEnd, 1);\n                    return;\n                }\n                this.moveToInline(inline.fieldEnd, 1);\n            }\n        }\n        var nextOffset = this.selection.getNextValidOffset(this.currentWidget, this.offset);\n        var lineIndex = this.paragraph.childWidgets.indexOf(this.currentWidget);\n        var index = 0;\n        if (nextOffset > this.offset) {\n            this.offset = nextOffset;\n            var info = this.currentWidget.getInline(this.offset, index);\n            inline = info.element;\n            index = info.index;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline) && index === inline.length && (inline.nextNode instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox\n                || inline.nextNode instanceof _index__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox)) {\n                var nextValidInline = this.documentHelper.getNextValidElement(inline.nextNode);\n                //Moves to field end mark or Bookmark end.\n                if (nextValidInline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && nextValidInline.fieldType === 1\n                    || nextValidInline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox && nextValidInline.bookmarkType === 1) {\n                    inline = nextValidInline;\n                    this.currentWidget = inline.line;\n                    this.offset = this.currentWidget.getOffset(inline, this.documentHelper.isFormFillProtectedMode ? 0 : 1);\n                }\n            }\n        }\n        else if (lineIndex + 1 < this.paragraph.childWidgets.length) {\n            var nextLineWidget = this.paragraph.childWidgets[lineIndex + 1];\n            while (nextLineWidget && nextLineWidget.height === 0) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(nextLineWidget.nextLine)) {\n                    var block = this.selection.getNextParagraphBlock(nextLineWidget.paragraph);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(block)) {\n                        this.currentWidget = nextLineWidget;\n                        this.updateOffsetToNextParagraph(index, false);\n                        return;\n                    }\n                }\n                nextLineWidget = nextLineWidget.nextLine;\n            }\n            if (nextLineWidget) {\n                this.currentWidget = nextLineWidget;\n                this.offset = this.selection.getStartLineOffset(this.currentWidget);\n            }\n            var inlineObj = this.currentWidget.getInline(this.offset, index);\n            inline = inlineObj.element;\n            index = inlineObj.index;\n            if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 0) {\n                this.offset++;\n            }\n        }\n        else {\n            this.updateOffsetToNextParagraph(index, false);\n        }\n        //Gets physical position in current page.\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Move text position to previous paragraph inside table\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToPreviousParagraphInTable = function (selection) {\n        var previousParagraph;\n        var currentPara = this.currentWidget.paragraph;\n        if (currentPara.isInsideTable) {\n            previousParagraph = selection.getPreviousSelectionCell(currentPara.associatedCell);\n        }\n        else {\n            previousParagraph = selection.getPreviousParagraphBlock(currentPara);\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(previousParagraph)) {\n            return;\n        }\n        this.currentWidget = previousParagraph.childWidgets[previousParagraph.childWidgets.length - 1];\n        this.offset = this.currentWidget.getEndOffset() + 1;\n    };\n    TextPosition.prototype.nextValidVisibleBlock = function (visibleBlock, isStart) {\n        var currentValidVisibleBlock = visibleBlock;\n        while (visibleBlock && ((visibleBlock.characterFormat.hidden && visibleBlock.height === 0) || (!visibleBlock.isEmpty() && !visibleBlock.characterFormat.hidden && visibleBlock.height === 0 && visibleBlock.firstChild.children[0].characterFormat.hidden))) {\n            visibleBlock = isStart ? this.selection.getNextParagraphBlock(visibleBlock) : this.selection.getPreviousParagraphBlock(visibleBlock);\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(visibleBlock)) {\n            return currentValidVisibleBlock;\n        }\n        return visibleBlock;\n    };\n    TextPosition.prototype.setPositionForValidLine = function (cell, isNext, positionAtStart) {\n        var visibleBlock;\n        if (!isNext) {\n            visibleBlock = this.selection.getLastParagraph(cell);\n            visibleBlock = this.nextValidVisibleBlock(visibleBlock, false);\n            this.setPosition(this.getValidVisibleLine(visibleBlock.childWidgets[visibleBlock.childWidgets.length - 1], isNext), positionAtStart);\n        }\n        else {\n            visibleBlock = this.selection.getFirstParagraph(cell);\n            visibleBlock = this.nextValidVisibleBlock(visibleBlock, true);\n            this.setPosition(this.getValidVisibleLine(visibleBlock.childWidgets[0], isNext), positionAtStart);\n        }\n    };\n    TextPosition.prototype.updateOffsetToNextParagraph = function (indexInInline, isHighlight) {\n        //Moves to owner and get next paragraph.\n        var inline;\n        var positionAtStart = false;\n        var nextParagraph = undefined;\n        var lineIndex = this.paragraph.childWidgets.indexOf(this.currentWidget);\n        if (!isHighlight) {\n            nextParagraph = this.selection.getNextParagraphBlock(this.paragraph);\n            nextParagraph = this.nextValidVisibleBlock(nextParagraph, true);\n        }\n        else if (lineIndex + 1 < this.paragraph.childWidgets.length) {\n            var nextLineWidget = this.paragraph.childWidgets[lineIndex + 1];\n            if (nextLineWidget) {\n                this.currentWidget = nextLineWidget;\n                this.offset = 1;\n            }\n        }\n        else {\n            nextParagraph = this.selection.getNextSelectionBlock(this.paragraph);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(nextParagraph)) {\n                if (nextParagraph.containerWidget instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n                    if (this.selection.start.paragraph.isInsideTable) {\n                        var containerCell = this.selection.getContainerCellOf(this.selection.start.paragraph.associatedCell, nextParagraph.associatedCell);\n                        positionAtStart = !containerCell.ownerTable.contains(nextParagraph.associatedCell);\n                    }\n                    else {\n                        positionAtStart = true;\n                    }\n                }\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(nextParagraph) && nextParagraph.childWidgets.length > 0) {\n            if (!positionAtStart) {\n                this.currentWidget = this.getValidVisibleLine(nextParagraph.firstChild, true);\n                this.offset = isHighlight ? 1 : this.selection.getStartLineOffset(this.currentWidget);\n            }\n            else {\n                this.currentWidget = this.getValidVisibleLine(nextParagraph.lastChild, false);\n                this.offset = this.selection.getLineLength(this.currentWidget) + 1;\n            }\n        }\n        var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n        inline = inlineObj.element;\n        indexInInline = inlineObj.index;\n        if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 0) {\n            this.offset++;\n        }\n    };\n    TextPosition.prototype.getValidVisibleLine = function (visibleLine, isNext) {\n        var currentVisibleLine = visibleLine;\n        if (isNext) {\n            while (visibleLine && visibleLine.height === 0) {\n                visibleLine = visibleLine.nextLine;\n            }\n        }\n        else {\n            while (visibleLine && visibleLine.height === 0) {\n                visibleLine = visibleLine.previousLine;\n            }\n        }\n        if (visibleLine) {\n            return visibleLine;\n        }\n        return currentVisibleLine;\n    };\n    TextPosition.prototype.updateOffsetToPrevPosition = function (index, isHighlight) {\n        var inlineInfo;\n        var inline;\n        var lineIndex = this.paragraph.childWidgets.indexOf(this.currentWidget);\n        var prevOffset = this.selection.getPreviousValidOffset(this.currentWidget, this.offset);\n        var isMoveToVisibleBlock = true;\n        if (this.offset > prevOffset) {\n            this.offset = prevOffset;\n            isMoveToVisibleBlock = false;\n        }\n        else if (lineIndex > 0) {\n            var prevLineWidget = this.paragraph.childWidgets[lineIndex - 1];\n            while (prevLineWidget && prevLineWidget.height === 0) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(prevLineWidget.previousLine)) {\n                    var block = this.selection.getPreviousParagraphBlock(prevLineWidget.paragraph);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(block)) {\n                        this.currentWidget = prevLineWidget;\n                        isMoveToVisibleBlock = true;\n                        break;\n                    }\n                }\n                prevLineWidget = prevLineWidget.previousLine;\n            }\n            if (prevLineWidget) {\n                isMoveToVisibleBlock = false;\n                this.currentWidget = prevLineWidget;\n                var endOffset = this.currentWidget.getEndOffset();\n                this.offset = endOffset > 0 ? endOffset - 1 : endOffset;\n                var length_1 = 0;\n                var visibleElement = this.selection.getElementInfo(this.currentWidget, this.offset).element;\n                while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(visibleElement) && visibleElement.characterFormat.hidden) {\n                    length_1 += visibleElement.length;\n                    visibleElement = visibleElement.previousElement;\n                }\n                this.offset -= length_1;\n            }\n        }\n        if (isMoveToVisibleBlock) {\n            //Moves to owner and get previous paragraph.\n            var previousParagraph = undefined;\n            var positionAtStart = false;\n            if (!isHighlight) {\n                previousParagraph = this.selection.getPreviousParagraphBlock(this.paragraph);\n                previousParagraph = this.nextValidVisibleBlock(previousParagraph, false);\n            }\n            else {\n                previousParagraph = this.selection.getPreviousSelectionBlock(this.paragraph);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(previousParagraph)) {\n                    if (previousParagraph.containerWidget instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TableCellWidget) {\n                        if (this.selection.start.paragraph.isInsideTable) {\n                            var containerCell = this.selection.getContainerCellOf(this.selection.start.paragraph.associatedCell, previousParagraph.associatedCell);\n                            positionAtStart = !containerCell.ownerTable.contains(previousParagraph.associatedCell);\n                        }\n                        else {\n                            positionAtStart = true;\n                        }\n                    }\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(previousParagraph)) {\n                if (!positionAtStart) {\n                    this.currentWidget = this.getValidVisibleLine(previousParagraph.lastChild, false);\n                    // line end with page break and updating offset before page break.\n                    this.offset = (this.currentWidget.isEndsWithPageBreak || this.currentWidget.isEndsWithColumnBreak) ? this.currentWidget.getEndOffset() - 1 : this.currentWidget.getEndOffset();\n                }\n                else {\n                    this.currentWidget = this.getValidVisibleLine(previousParagraph.firstChild, true);\n                    this.offset = this.selection.getStartLineOffset(this.currentWidget);\n                }\n            }\n        }\n        index = 0;\n        inlineInfo = this.currentWidget.getInline(this.offset, index);\n        inline = inlineInfo.element;\n        index = inlineInfo.index;\n        if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 0) {\n            this.offset++;\n        }\n        if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n            //Checks if field character is part of rendered field, otherwise moves to previous rendered content.\n            var previousInline = this.selection.getPreviousValidElement(inline);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(previousInline)) {\n                inline = previousInline;\n                this.currentWidget = inline.line;\n                this.offset = this.currentWidget.getOffset(inline, inline.length);\n                if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 0) {\n                    this.offset--;\n                }\n            }\n        }\n        //Gets physical position in current page.\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Moves the text position to start of the next paragraph.\n     */\n    TextPosition.prototype.moveToNextParagraphStartInternal = function () {\n        var paragraph = this.currentWidget.paragraph;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.selection.getNextParagraphBlock(paragraph))) {\n            this.currentWidget = this.selection.getNextParagraphBlock(paragraph).firstChild;\n            this.offset = this.selection.getStartOffset(paragraph);\n            this.updatePhysicalPosition(true);\n        }\n    };\n    /**\n     * Move to previous position\n     *\n     * @private\n     */\n    TextPosition.prototype.movePreviousPosition = function () {\n        var index = 0;\n        var inlineInfo = this.currentWidget.getInline(this.offset, index);\n        var inline = inlineInfo.element;\n        index = inlineInfo.index;\n        var lineIndex = this.paragraph.childWidgets.indexOf(this.currentWidget);\n        if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 1 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline.fieldBegin)\n            || inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox && inline.bookmarkType === 1) {\n            this.movePreviousPositionInternal(inline);\n        }\n        this.updateOffsetToPrevPosition(index, false);\n    };\n    /**\n     * Move to next position\n     *\n     * @private\n     */\n    TextPosition.prototype.moveNextPositionInternal = function (fieldBegin) {\n        var inline;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(fieldBegin.fieldSeparator)) {\n            inline = fieldBegin.fieldEnd;\n        }\n        else {\n            inline = fieldBegin.fieldSeparator;\n            this.currentWidget = inline.line;\n            if (this.currentWidget === fieldBegin.fieldEnd.line && !this.selection.hasValidInline(this.paragraph, inline, fieldBegin.fieldEnd)) {\n                inline = fieldBegin.fieldEnd;\n            }\n        }\n        this.currentWidget = inline.line;\n        this.offset = this.currentWidget.getOffset(inline, 1);\n    };\n    /**\n     * Move text position backward\n     *\n     * @private\n     */\n    TextPosition.prototype.moveBackward = function () {\n        var indexInInline = 0;\n        var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n        var inline = inlineObj.element;\n        indexInInline = inlineObj.index;\n        if (!this.owner.selectionModule.isEmpty && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline)) {\n            var nextInline = this.selection.getNextRenderedElementBox(inline, indexInInline);\n            if (nextInline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && nextInline.fieldType === 0) {\n                var hierarchicalIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n                var fieldEndOffset = nextInline.fieldEnd.line.getOffset(nextInline.fieldEnd, 1);\n                var fieldEndIndex = this.getHierarchicalIndex(nextInline.fieldEnd.line, fieldEndOffset.toString());\n                if (!TextPosition.isForwardSelection(fieldEndIndex, hierarchicalIndex)) {\n                    //If field end is after selection start, move selection start to field end.\n                    this.owner.selectionModule.start.setPositionParagraph(nextInline.fieldEnd.line, fieldEndOffset);\n                    return;\n                }\n            }\n        }\n        if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 1 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline.fieldBegin)) {\n            var hierarchicalIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n            var fieldEndOffset = inline.line.getOffset(inline, 1);\n            var fieldEndIndex = this.getHierarchicalIndex(inline.line, fieldEndOffset.toString());\n            if (!TextPosition.isForwardSelection(hierarchicalIndex, fieldEndIndex)) {\n                //If field end is after selection start, extend selection end to field begin.\n                var fieldBeginOffset = inline.fieldBegin.line.getOffset(inline.fieldBegin, 0);\n                this.currentWidget = inline.fieldBegin.line;\n                this.offset = fieldBeginOffset;\n                //Updates physical position in current page.\n                this.updatePhysicalPosition(true);\n                return;\n            }\n            this.movePreviousPositionInternal(inline);\n        }\n        this.updateOffsetToPrevPosition(indexInInline, true);\n    };\n    /**\n     * Move text position forward\n     *\n     * @private\n     */\n    TextPosition.prototype.moveForward = function () {\n        var indexInInline = 0;\n        var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n        var inline = inlineObj.element;\n        indexInInline = inlineObj.index;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline)) {\n            if (!this.owner.selectionModule.isEmpty && indexInInline === inline.length && inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox\n                && inline.fieldType === 1) {\n                var hierarchicalIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n                var fieldBeginOffset = inline.fieldBegin.line.getOffset(inline.fieldBegin, 0);\n                var fieldBeginIndex = this.getHierarchicalIndex(inline.fieldBegin.line, fieldBeginOffset.toString());\n                if (!TextPosition.isForwardSelection(hierarchicalIndex, fieldBeginIndex)) {\n                    //If field begin is before selection start, move selection start to field begin.\n                    this.owner.selectionModule.start.setPositionParagraph(inline.fieldBegin.line, fieldBeginOffset);\n                    return;\n                }\n            }\n            inline = this.selection.getNextRenderedElementBox(inline, indexInInline);\n        }\n        if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline.fieldEnd)) {\n            var selectionStartParagraph = this.owner.selectionModule.start.paragraph;\n            var selectionStartIndex = 0;\n            var selectionStartInlineObj = selectionStartParagraph.getInline(this.owner.selectionModule.start.offset, selectionStartIndex);\n            var selectionStartInline = selectionStartInlineObj.element;\n            selectionStartIndex = selectionStartInlineObj.index;\n            var nextRenderInline = this.selection.getNextRenderedElementBox(selectionStartInline, selectionStartIndex);\n            if (nextRenderInline === inline) {\n                this.moveNextPositionInternal(inline);\n            }\n            else {\n                //If selection start is before field begin, extend selection end to field end.\n                inline = inline.fieldEnd;\n                this.currentWidget = inline.line;\n                this.offset = this.currentWidget.getOffset(inline, 1);\n                //Updates physical position in current page.\n                this.updatePhysicalPosition(true);\n                return;\n            }\n        }\n        else if ((inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox)\n            && (inline.fieldType === 0 || inline.fieldType === 1)) {\n            this.currentWidget = inline.line;\n            this.offset = this.currentWidget.getOffset(inline, 1);\n        }\n        indexInInline = 0;\n        var nextOffset = this.selection.getNextValidOffset(this.currentWidget, this.offset);\n        var length = this.selection.getLineLength(this.currentWidget);\n        var isParagraphEnd = this.selection.isParagraphLastLine(this.currentWidget);\n        if (this.offset < nextOffset) {\n            this.offset = nextOffset;\n            var inlineObj_1 = this.currentWidget.getInline(this.offset, indexInInline);\n            inline = inlineObj_1.element;\n            indexInInline = inlineObj_1.index;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline) && indexInInline === inline.length && inline.nextNode instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                var nextValidInline = this.documentHelper.getNextValidElement(inline.nextNode);\n                //Moves to field end mark.\n                if (nextValidInline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && nextValidInline.fieldType === 1) {\n                    inline = nextValidInline;\n                    this.offset = this.currentWidget.getOffset(inline, 1);\n                }\n            }\n        }\n        else if (this.offset === nextOffset && inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 1 &&\n            inline.previousNode instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox) {\n            this.offset = nextOffset;\n        }\n        else if (this.offset === nextOffset && this.offset < length + 1 && isParagraphEnd) {\n            this.offset = length + 1;\n        }\n        else {\n            this.updateOffsetToNextParagraph(indexInInline, true);\n        }\n        //Gets physical position in current page.\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Move to given inline\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToInline = function (inline, index) {\n        this.currentWidget = inline.line;\n        this.offset = this.currentWidget.getOffset(inline, index);\n        //Updates physical position in current page.\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Return true is start element exist before end element\n     *\n     * @private\n     */\n    TextPosition.isForwardSelection = function (start, end) {\n        if (start === end) {\n            return true;\n        }\n        start = start.replace(/S;/g, '');\n        end = end.replace(/S;/g, '');\n        start = start.replace(/C;/g, '');\n        end = end.replace(/C;/g, '');\n        start = start.replace(/H;/g, '');\n        end = end.replace(/H;/g, '');\n        start = start.replace(/F;/g, '');\n        end = end.replace(/F;/g, '');\n        start = start.replace(/FN;/g, '');\n        end = end.replace(/FN;/g, '');\n        start = start.replace(/EN;/g, '');\n        end = end.replace(/EN;/g, '');\n        var selectionStart = start.split(';');\n        var selectionEnd = end.split(';');\n        var length = selectionStart.length;\n        if (length > selectionEnd.length) {\n            length = selectionEnd.length - 1;\n        }\n        for (var i = 0; i < length; i++) {\n            var startOffset = parseFloat(selectionStart[i]);\n            var endOffset = parseFloat(selectionEnd[i]);\n            if (startOffset !== endOffset) {\n                return startOffset < endOffset;\n            }\n        }\n        return false;\n    };\n    /**\n     * Move to previous position offset\n     *\n     * @param fieldEnd\n     * @private\n     */\n    TextPosition.prototype.movePreviousPositionInternal = function (fieldEnd) {\n        var inline;\n        if (fieldEnd instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(fieldEnd.fieldSeparator)) {\n            inline = this.selection.getPreviousValidElement(fieldEnd.fieldBegin);\n        }\n        else {\n            inline = this.selection.getPreviousValidElement(fieldEnd);\n        }\n        this.currentWidget = inline.line;\n        var index = inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox || inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox && inline.bookmarkType === 1 ? 0 : inline.length;\n        this.offset = this.currentWidget.getOffset(inline, index);\n    };\n    /**\n     * Moves the text position to start of the word.\n     *\n     * @param type\n     * @private\n     */\n    TextPosition.prototype.moveToWordStartInternal = function (type) {\n        var endOffset = this.currentWidget.getEndOffset();\n        var currentPara = this.currentWidget.paragraph;\n        var selection = this.selection;\n        if (type === 2 && (this.offset === endOffset || this.offset === endOffset + 1)) {\n            return;\n        }\n        if (this.offset === endOffset + 1) {\n            this.offset = endOffset;\n        }\n        else if (this.offset === selection.getStartOffset(currentPara) && this.currentWidget === currentPara.childWidgets[0]) {\n            var previousParagraph = selection.getPreviousParagraphBlock(currentPara);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(previousParagraph)) {\n                return;\n            }\n            this.currentWidget = previousParagraph.childWidgets[previousParagraph.childWidgets.length - 1];\n            this.offset = this.currentWidget.getEndOffset();\n        }\n        else {\n            if (this.offset === selection.getStartLineOffset(this.currentWidget)) {\n                var lineIndex = currentPara.childWidgets.indexOf(this.currentWidget);\n                if (lineIndex - 1 >= 0) {\n                    this.currentWidget = currentPara.childWidgets[lineIndex - 1];\n                    this.offset = this.currentWidget.getEndOffset();\n                }\n            }\n            var isStarted = false;\n            var endSelection = false;\n            var indexInInline = 0;\n            var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n            var inline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            this.getPreviousWordOffset(inline, selection, indexInInline, type, (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 1), isStarted, endSelection, this);\n        }\n        if (type === 1) {\n            this.calculateOffset();\n        }\n        this.updatePhysicalPosition(true);\n    };\n    TextPosition.prototype.getNextWordOffset = function (inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n            this.getNextWordOffsetSpan(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox) {\n            this.getNextWordOffsetImage(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 0) {\n            this.getNextWordOffsetFieldBegin(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if ((inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 2) || (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox && inline.bookmarkType === 0)) {\n            this.getNextWordOffsetFieldSeparator(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if ((inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 1) || (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox && inline.bookmarkType === 1)) {\n            this.getNextWordOffsetFieldEnd(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox) {\n            this.getNextWordOffsetComment(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ContentControl) {\n            this.getNextWordOffsetContentControl(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n    };\n    TextPosition.prototype.getNextWordOffsetFieldBegin = function (fieldBegin, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        var startOffset = fieldBegin.line.getOffset(fieldBegin, 0);\n        var endOffset = startOffset + fieldBegin.length;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(fieldBegin.fieldSeparator)) {\n            this.getNextWordOffsetFieldEnd(fieldBegin.fieldEnd, 0, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if (type === 0) {\n            this.getNextWordOffsetFieldSeparator(fieldBegin.fieldSeparator, 0, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(fieldBegin.fieldEnd)) {\n            var inline = fieldBegin.fieldSeparator;\n            if (inline.line.paragraph === fieldBegin.fieldEnd.line.paragraph && !this.selection.hasValidInline(inline.line.paragraph, inline, fieldBegin.fieldEnd)) {\n                inline = fieldBegin.fieldEnd;\n            }\n            this.getNextWordOffset(inline, 0, type, !(endPosition.paragraph === fieldBegin.line.paragraph && endPosition.offset === startOffset), endSelection, endPosition, excludeSpace);\n            if (endSelection && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(fieldBegin.fieldSeparator) && (endPosition.paragraph === fieldBegin.line.paragraph) && (endPosition.offset === fieldBegin.fieldSeparator.line.getOffset(fieldBegin.fieldSeparator, fieldBegin.fieldSeparator.length))) {\n                endPosition.setPositionParagraph(fieldBegin.line, startOffset);\n                return;\n            }\n            if (!endSelection) {\n                endPosition.setPositionParagraph(fieldBegin.fieldEnd.line, fieldBegin.fieldEnd.line.getOffset(fieldBegin.fieldEnd, fieldBegin.fieldEnd.length));\n            }\n        }\n    };\n    TextPosition.prototype.getNextWordOffsetImage = function (image, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        if (isInField) {\n            endPosition.setPositionParagraph(image.line, image.line.getOffset(image, indexInInline));\n            endSelection = false;\n            return;\n        }\n        if (indexInInline === 0) {\n            var startOffset = image.line.getOffset(image, 0);\n            endSelection = true;\n            if (endPosition.offset === startOffset) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(image.nextNode)) {\n                    endPosition.setPositionParagraph(image.line, startOffset + image.length);\n                }\n                else {\n                    this.getNextWordOffset(image.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n                }\n            }\n            else {\n                endPosition.setPositionParagraph(image.line, startOffset);\n            }\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(image.nextNode)) {\n            this.getNextWordOffset(image.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n    };\n    TextPosition.prototype.getNextWordOffsetSpan = function (span, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        if (span.text === '\\t' || span.text === '\\v') {\n            if (isInField) {\n                endPosition.setPositionParagraph(span.line, span.line.getOffset(span, indexInInline));\n                endSelection = false;\n                return;\n            }\n            if (indexInInline === 0) {\n                endSelection = true;\n                var startOffset = span.line.getOffset(span, 0);\n                if (endPosition.offset === startOffset) {\n                    endPosition.setPositionParagraph(span.line, startOffset + span.length);\n                }\n                else {\n                    endPosition.setPositionParagraph(span.line, startOffset);\n                }\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(span.nextNode)) {\n                this.getNextWordOffset(span.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n            }\n        }\n        else {\n            var wordEndIndex = 0;\n            if (indexInInline === 0 && endSelection && (_index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.wordSplitCharacters.indexOf(span.text[0]) === -1)) {\n                endPosition.setPositionParagraph(span.line, span.line.getOffset(span, indexInInline));\n                if (isInField) {\n                    return;\n                }\n            }\n            else if (indexInInline < span.length) {\n                var txt = indexInInline > 0 && span.text.length - 1 >= indexInInline ? span.text.slice(indexInInline, span.length) : span.text;\n                wordEndIndex = _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.indexOfAny(txt, _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.wordSplitCharacters);\n                if (wordEndIndex === -1 && span.nextNode instanceof _index__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox &&\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(span.nextNode.nextNode)) {\n                    wordEndIndex = span.length;\n                }\n                if (wordEndIndex !== -1) {\n                    if (isInField) {\n                        endSelection = false;\n                        return;\n                    }\n                    var offset = span.line.getOffset(span, wordEndIndex + indexInInline);\n                    var spaceCharacter = [' ', '　'];\n                    if ((excludeSpace || spaceCharacter.indexOf(txt[wordEndIndex]) === -1) && !endSelection && span.line.paragraph === endPosition.paragraph && offset !== endPosition.offset) {\n                        endSelection = true;\n                        endPosition.setPositionParagraph(span.line, offset);\n                        return;\n                    }\n                    var isSpaceCharacter = false;\n                    if (spaceCharacter.indexOf(txt[wordEndIndex]) !== -1 && spaceCharacter.indexOf(txt[wordEndIndex + 1]) === -1) {\n                        isSpaceCharacter = true;\n                        wordEndIndex++;\n                    }\n                    while (wordEndIndex < txt.length && !isSpaceCharacter) {\n                        if (_index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.wordSplitCharacters.indexOf(txt[wordEndIndex]) === -1) {\n                            break;\n                        }\n                        wordEndIndex++;\n                        if (spaceCharacter.indexOf(txt[wordEndIndex]) !== -1 && spaceCharacter.indexOf(txt[wordEndIndex + 1]) === -1 && _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.wordSplitCharacters.indexOf(txt[wordEndIndex + 1]) !== -1) {\n                            wordEndIndex++;\n                            break;\n                        }\n                    }\n                    endSelection = true;\n                    var nextNodeText = void 0;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(span.nextNode)) {\n                        nextNodeText = span.nextNode.text;\n                    }\n                    if (wordEndIndex < txt.length || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(nextNodeText) && span.line == span.nextNode.line && spaceCharacter.indexOf(txt[txt.length - 1]) !== -1 && spaceCharacter.indexOf(nextNodeText[0]) === -1)) {\n                        endPosition.setPositionParagraph(span.line, span.line.getOffset(span, wordEndIndex + indexInInline));\n                    }\n                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(span.nextNode)) {\n                        this.getNextWordOffset(span.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n                    }\n                    else {\n                        endPosition.setPositionParagraph(span.line, span.line.getOffset(span, wordEndIndex + indexInInline));\n                    }\n                }\n                else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(span.nextNode)) {\n                    this.getNextWordOffset(span.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n                }\n                else {\n                    endPosition.setPositionParagraph(span.line, span.line.getEndOffset());\n                }\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(span.nextNode)) {\n                this.getNextWordOffset(span.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n            }\n        }\n    };\n    TextPosition.prototype.getNextWordOffsetFieldSeparator = function (fieldSeparator, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(fieldSeparator.nextNode)) {\n            this.getNextWordOffset(fieldSeparator.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n    };\n    TextPosition.prototype.getNextWordOffsetComment = function (comment, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(comment.nextNode)) {\n            this.getNextWordOffset(comment.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n    };\n    TextPosition.prototype.getNextWordOffsetContentControl = function (contentControl, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(contentControl.nextNode)) {\n            this.getNextWordOffset(contentControl.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else {\n            endPosition.setPositionParagraph(contentControl.line, contentControl.line.getEndOffset());\n        }\n    };\n    TextPosition.prototype.getNextWordOffsetFieldEnd = function (fieldEnd, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        var startOffset = fieldEnd.line.getOffset(fieldEnd, 0);\n        var endOffset = startOffset + fieldEnd.length;\n        if (endPosition.offset === startOffset) {\n            endPosition.setPositionParagraph(fieldEnd.line, endOffset);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(fieldEnd.nextNode)) {\n                return;\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(fieldEnd.nextNode)) {\n            this.getNextWordOffset(fieldEnd.nextNode, 0, type, false, endSelection, endPosition, excludeSpace);\n            if (endPosition.offset === endOffset) {\n                endPosition.setPositionParagraph(fieldEnd.line, startOffset);\n            }\n        }\n        else {\n            endPosition.setPositionParagraph(fieldEnd.line, startOffset);\n        }\n        endSelection = true;\n    };\n    TextPosition.prototype.getPreviousWordOffset = function (inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n            this.getPreviousWordOffsetSpan(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ImageElementBox) {\n            this.getPreviousWordOffsetImage(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 0) {\n            this.getPreviousWordOffsetFieldBegin(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 2) {\n            this.getPreviousWordOffsetFieldSeparator(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 1) {\n            this.getPreviousWordOffsetFieldEnd(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.BookmarkElementBox) {\n            this.getPreviousWordOffsetBookMark(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox && inline.previousNode) {\n            this.getPreviousWordOffsetSpan(inline.previousNode, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox) {\n            this.getPreviousWordOffsetComment(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ContentControl) {\n            this.getPreviousWordOffsetContentControl(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n    };\n    TextPosition.prototype.getPreviousWordOffsetBookMark = function (bookmark, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        if (bookmark.previousNode) {\n            if (bookmark.previousNode instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                var inline = bookmark.previousNode;\n                if (_index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.lastIndexOfAny(inline.text, _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.wordSplitCharacters) !== inline.text.length - 1) {\n                    this.getPreviousWordOffset(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n                }\n                else {\n                    endPosition.setPositionParagraph(bookmark.line, bookmark.line.getOffset(bookmark, 0));\n                }\n            }\n        }\n        else {\n            endPosition.setPositionParagraph(bookmark.line, selection.getStartLineOffset(bookmark.line));\n        }\n    };\n    TextPosition.prototype.getPreviousWordOffsetFieldEnd = function (fieldEnd, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        var startOffset = fieldEnd.line.getOffset(fieldEnd, 0);\n        var endOffset = startOffset + fieldEnd.length;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(fieldEnd.fieldSeparator)) {\n            this.getPreviousWordOffsetFieldBegin(fieldEnd.fieldBegin, selection, 0, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (type === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(fieldEnd.previousNode)) {\n            var inline = fieldEnd.previousNode;\n            this.getPreviousWordOffset(inline, selection, inline.length, type, (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 1), isStarted, endSelection, endPosition);\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(fieldEnd.fieldBegin) && type !== 0) {\n            var inline = fieldEnd.previousNode;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline) || (inline.line.paragraph === fieldEnd.fieldBegin.line.paragraph && !selection.hasValidInline(inline.line.paragraph, inline, fieldEnd.fieldBegin))) {\n                inline = fieldEnd.fieldBegin;\n            }\n            this.getPreviousWordOffset(inline, selection, inline.length, type, !(endPosition.paragraph === fieldEnd.line.paragraph && endPosition.offset === endOffset), isStarted, endSelection, endPosition);\n            if (endSelection && endPosition.paragraph === fieldEnd.line.paragraph\n                && endPosition.offset === startOffset) {\n                endPosition.setPositionParagraph(fieldEnd.line, endOffset);\n                return;\n            }\n            if (!endSelection) {\n                endPosition.setPositionParagraph(fieldEnd.fieldBegin.line, fieldEnd.fieldBegin.line.getOffset(fieldEnd.fieldBegin, 0));\n            }\n        }\n    };\n    TextPosition.prototype.getPreviousWordOffsetFieldSeparator = function (fieldSeparator, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        this.getPreviousWordOffsetFieldBegin(fieldSeparator.fieldBegin, selection, fieldSeparator.fieldBegin.length, type, isInField, isStarted, endSelection, endPosition);\n    };\n    /* get previous word offset from comment\n    * @private\n    */\n    TextPosition.prototype.getPreviousWordOffsetComment = function (comment, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        if (comment.previousNode) {\n            var inline = comment.previousNode;\n            // According to the current word selection behavior, if there is a word split character at the end of the previous inline element, then set the selection end position to the end position of the previous inline element.\n            if (comment.previousNode instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TextElementBox\n                && _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.lastIndexOfAny(inline.text, _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.wordSplitCharacters) === inline.text.length - 1\n                && selection.isSelectCurrentWord) {\n                endPosition.setPositionParagraph(comment.line, comment.line.getOffset(comment, 1));\n            }\n            else {\n                this.getPreviousWordOffset(comment.previousNode, selection, comment.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n            }\n        }\n        else {\n            endPosition.setPositionParagraph(comment.line, selection.getStartLineOffset(comment.line));\n        }\n    };\n    TextPosition.prototype.getPreviousWordOffsetContentControl = function (contentControl, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        if (contentControl.previousNode) {\n            this.getPreviousWordOffset(contentControl.previousNode, selection, contentControl.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else {\n            endPosition.setPositionParagraph(contentControl.line, selection.getStartLineOffset(contentControl.line));\n        }\n    };\n    TextPosition.prototype.getPreviousWordOffsetFieldBegin = function (fieldBegin, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        var startOffset = fieldBegin.line.getOffset(fieldBegin, 0);\n        var endOffset = startOffset + fieldBegin.length;\n        if (endPosition.offset === endOffset) {\n            endPosition.setPositionParagraph(fieldBegin.line, startOffset);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(fieldBegin.previousNode)) {\n            this.getPreviousWordOffset(fieldBegin.previousNode, selection, fieldBegin.previousNode.length, type, false, isStarted, endSelection, endPosition);\n            if (endPosition.offset === startOffset) {\n                if (type !== 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(fieldBegin.fieldSeparator)) {\n                    endPosition.setPositionParagraph(fieldBegin.line, fieldBegin.fieldSeparator.line.getOffset(fieldBegin.fieldSeparator, fieldBegin.fieldSeparator.length));\n                }\n            }\n        }\n        else {\n            if (fieldBegin.fieldSeparator) {\n                endPosition.setPositionParagraph(fieldBegin.line, fieldBegin.fieldSeparator.line.getOffset(fieldBegin.fieldSeparator, fieldBegin.fieldSeparator.length));\n            }\n            else {\n                endPosition.setPositionParagraph(fieldBegin.line, selection.getStartLineOffset(fieldBegin.line));\n            }\n        }\n    };\n    TextPosition.prototype.getPreviousWordOffsetImage = function (image, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        if (isInField) {\n            endPosition.setPositionParagraph(image.line, image.line.getOffset(image, indexInInline));\n            endSelection = false;\n            return;\n        }\n        if (indexInInline === image.length) {\n            var endOffset = image.line.getOffset(image, image.length);\n            if (endOffset === endPosition.offset) {\n                endPosition.setPositionParagraph(image.line, endOffset - image.length);\n            }\n            else {\n                endPosition.setPositionParagraph(image.line, endOffset);\n            }\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(image.previousNode)) {\n            this.getPreviousWordOffset(image.previousNode, selection, image.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n        }\n    };\n    TextPosition.prototype.getPreviousWordOffsetSpan = function (span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        if (span.text === '\\t' || span.text === '\\v') {\n            if (isInField) {\n                endSelection = false;\n                return;\n            }\n            if (indexInInline === span.length) {\n                endSelection = true;\n                var endOffset = span.line.getOffset(span, span.length);\n                if (endOffset === endPosition.offset) {\n                    endPosition.setPositionParagraph(span.line, endOffset - span.length);\n                }\n                else {\n                    endPosition.setPositionParagraph(span.line, endOffset);\n                }\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(span.previousNode)) {\n                this.getPreviousWordOffset(span.previousNode, selection, span.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n            }\n        }\n        else {\n            var wordStartIndex = 0;\n            if (!isStarted) {\n                while (indexInInline > 0 && span.text[indexInInline - 1] === ' ') {\n                    indexInInline--;\n                }\n                endPosition.setPositionParagraph(span.line, span.line.getOffset(span, indexInInline));\n            }\n            if (indexInInline > 0) {\n                isStarted = true;\n                if (indexInInline === 0 && endSelection && (_index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.wordSplitCharacters.indexOf(span.text[0])) === -1) {\n                    endPosition.setPositionParagraph(span.line, span.line.getOffset(span, indexInInline));\n                    endSelection = true;\n                    return;\n                }\n                var txt = span.text.length > indexInInline ? span.text.slice(0, indexInInline) : span.text;\n                wordStartIndex = _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.lastIndexOfAny(txt, _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.wordSplitCharacters);\n                if (wordStartIndex !== -1) {\n                    if (isInField) {\n                        endSelection = false;\n                        return;\n                    }\n                    while (wordStartIndex > 0 && endSelection && txt[wordStartIndex] !== ' '\n                        && (_index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.wordSplitCharacters.indexOf(txt[wordStartIndex - 1])) !== -1) {\n                        wordStartIndex--;\n                    }\n                    if (txt[wordStartIndex] === ' ' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(span.nextElement) && span.nextElement instanceof _index__WEBPACK_IMPORTED_MODULE_0__.CommentCharacterElementBox && span.nextElement.commentType === 1) {\n                        wordStartIndex++;\n                    }\n                    if (txt[wordStartIndex] === ' ' || txt[wordStartIndex] === '　' || !endSelection) {\n                        wordStartIndex++;\n                    }\n                    endSelection = true;\n                    if (wordStartIndex > 0) {\n                        var offset = span.line.getOffset(span, wordStartIndex);\n                        if (span.line.paragraph === endPosition.paragraph && offset === endPosition.offset) {\n                            this.getPreviousWordOffsetSpan(span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n                        }\n                        else {\n                            endPosition.setPositionParagraph(span.line, offset);\n                        }\n                    }\n                    else if (span.previousNode instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TextElementBox) {\n                        var previousNodeText = span.previousNode.text;\n                        if (_index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.wordSplitCharacters.indexOf(span.text[0]) !== -1 && _index__WEBPACK_IMPORTED_MODULE_0__.HelperMethods.wordSplitCharacters.indexOf(previousNodeText[previousNodeText.length - 1]) === -1) {\n                            var offset = span.line.getOffset(span, wordStartIndex);\n                            endPosition.setPositionParagraph(span.line, offset);\n                            return;\n                        }\n                        this.getPreviousWordOffset(span.previousNode, selection, span.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n                    }\n                    else {\n                        endPosition.setPositionParagraph(span.line, span.line.getOffset(span, 0));\n                    }\n                }\n                else {\n                    this.setPreviousWordOffset(span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n                }\n            }\n            else {\n                this.setPreviousWordOffset(span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n            }\n        }\n    };\n    TextPosition.prototype.setPreviousWordOffset = function (span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        if (span.previousNode instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ElementBox && span.line === span.previousNode.line) {\n            this.getPreviousWordOffset(span.previousNode, selection, span.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else {\n            endPosition.setPositionParagraph(span.line, selection.getStartLineOffset(span.line));\n        }\n    };\n    /**\n     * Validate if text position is in field forward\n     *\n     * @private\n     */\n    TextPosition.prototype.validateForwardFieldSelection = function (currentIndex, selectionEndIndex) {\n        var textPosition = new TextPosition(this.owner);\n        textPosition.setPositionForCurrentIndex(currentIndex);\n        textPosition.isUpdateLocation = false;\n        var isPositionMoved = false;\n        if (this.selection.start.paragraph !== this.selection.end.paragraph\n            || this.selection.start.offset === this.selection.getStartOffset(this.selection.start.paragraph)) {\n            // To select Paragraph mark similar to MS WORD\n            if (this.selection.end.offset === this.selection.end.currentWidget.getEndOffset()\n                && this.selection.isParagraphLastLine(this.selection.end.currentWidget)) {\n                this.selection.end.setPositionParagraph(this.selection.end.currentWidget, this.selection.end.offset + 1);\n            }\n        }\n        while (currentIndex !== selectionEndIndex && TextPosition.isForwardSelection(currentIndex, selectionEndIndex)) {\n            if (!isPositionMoved) {\n                textPosition.moveNextPosition(false);\n                var nextIndex = textPosition.getHierarchicalIndexInternal();\n                //Handled specifically to break infinite looping, if selection ends at last paragraph mark.\n                if (currentIndex === nextIndex) {\n                    break;\n                }\n            }\n            var indexInInline = 0;\n            var inlineObj = textPosition.currentWidget.getInline(textPosition.offset, indexInInline);\n            var inline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline)) {\n                var selectionStartIndex = this.selection.start.getHierarchicalIndexInternal();\n                if (indexInInline === inline.length && inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 1) {\n                    if (inline.line.getOffset(inline, 0) === this.offset) {\n                        return;\n                    }\n                    var lineWidget = inline.fieldBegin.line;\n                    var fieldBeginOffset = lineWidget.getOffset(inline.fieldBegin, 0);\n                    var fieldBeginIndex = this.getHierarchicalIndex(lineWidget, fieldBeginOffset.toString());\n                    if (!TextPosition.isForwardSelection(selectionStartIndex, fieldBeginIndex)) {\n                        this.selection.start.setPositionParagraph(lineWidget, fieldBeginOffset);\n                    }\n                }\n                var nextInline = this.selection.getNextRenderedElementBox(inline, indexInInline);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(nextInline) && nextInline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ElementBox) {\n                    inline = nextInline;\n                }\n            }\n            isPositionMoved = (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline.fieldEnd));\n            if (isPositionMoved) {\n                if (inline.line.getOffset(inline, 0) === this.offset) {\n                    return;\n                }\n                var fieldEnd = inline.fieldEnd;\n                var paragraph = fieldEnd.line.paragraph;\n                var fieldEndOffset = fieldEnd.line.getOffset(fieldEnd, 1);\n                var fieldEndIndex = this.getHierarchicalIndex(fieldEnd.line, fieldEndOffset.toString());\n                if (!TextPosition.isForwardSelection(fieldEndIndex, selectionEndIndex)) {\n                    //If selection end is after field begin, extend selection end to field end.\n                    this.moveToInline(inline.fieldEnd, 1);\n                    return;\n                }\n                textPosition.moveToInline(inline.fieldEnd, 1);\n            }\n            currentIndex = textPosition.getHierarchicalIndexInternal();\n        }\n    };\n    /**\n     * Validate if text position is in field backward\n     *\n     * @private\n     */\n    TextPosition.prototype.validateBackwardFieldSelection = function (currentIndex, selectionEndIndex) {\n        var textPosition = new TextPosition(this.owner);\n        textPosition.setPositionForCurrentIndex(currentIndex);\n        textPosition.isUpdateLocation = false;\n        var isSelectParaMark = false;\n        if ((this.selection.start.paragraph !== this.selection.end.paragraph\n            && this.selection.end.offset !== this.selection.getStartOffset(this.selection.start.paragraph)) ||\n            (this.documentHelper.isSelectionChangedOnMouseMoved && this.selection.isParagraphFirstLine(this.selection.end.currentWidget)\n                && this.selection.end.offset === this.selection.getStartOffset(this.selection.start.paragraph))\n            || ((((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.selection.start.paragraph.previousRenderedWidget)\n                && this.selection.start.paragraph === this.selection.end.paragraph\n                && this.selection.end.offset === this.selection.getStartOffset(this.selection.end.paragraph))\n                || (this.selection.start.paragraph !== this.selection.end.paragraph))\n                && this.selection.start.offset === this.selection.start.currentWidget.getEndOffset() && this.selection.start.currentWidget.isLastLine())) {\n            isSelectParaMark = true;\n        }\n        // To select Paragraph mark similar to MS WORD\n        if (isSelectParaMark && this.selection.start.offset === this.selection.start.currentWidget.getEndOffset()\n            && this.selection.isParagraphLastLine(this.selection.start.currentWidget)) {\n            this.selection.start.setPositionParagraph(this.selection.start.currentWidget, this.selection.start.offset + 1);\n        }\n        var selectionStartIndex = this.selection.start.getHierarchicalIndexInternal();\n        while (currentIndex !== selectionEndIndex && TextPosition.isForwardSelection(selectionEndIndex, currentIndex)) {\n            var indexInInline = 0;\n            var inlineObj = textPosition.currentWidget.getInline(textPosition.offset, indexInInline);\n            var inline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline)) {\n                var nextInline = this.selection.getNextRenderedElementBox(inline, indexInInline);\n                if (nextInline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && nextInline.fieldType === 0) {\n                    var paragraph = nextInline.fieldEnd.line;\n                    var fieldEndOffset = paragraph.getOffset(nextInline.fieldEnd, 1);\n                    var fieldEndIndex = this.getHierarchicalIndex(paragraph, fieldEndOffset.toString());\n                    if (!TextPosition.isForwardSelection(fieldEndIndex, selectionStartIndex)) {\n                        this.selection.start.setPositionParagraph(paragraph, fieldEndOffset);\n                        selectionStartIndex = fieldEndIndex;\n                    }\n                }\n            }\n            if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 1 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline.fieldBegin)) {\n                var line = inline.fieldBegin.line;\n                var fieldBegin = inline.fieldBegin;\n                var fieldBeginOffset = line.getOffset(fieldBegin, 0);\n                var fieldBeginIndex = this.getHierarchicalIndex(line, fieldBeginOffset.toString());\n                if (!TextPosition.isForwardSelection(selectionEndIndex, fieldBeginIndex)) {\n                    //If field begin is before selection end, extend selection end to field begin.\n                    this.moveToInline(inline.fieldBegin, 0);\n                    return;\n                }\n                textPosition.moveToInline(inline.fieldBegin, 0);\n            }\n            else {\n                textPosition.movePreviousPosition();\n            }\n            currentIndex = textPosition.getHierarchicalIndexInternal();\n        }\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.paragraphStartInternal = function (selection, moveToPreviousParagraph) {\n        var offset = selection.getStartLineOffset(this.currentWidget);\n        if (this.offset === offset && moveToPreviousParagraph) {\n            var startParagraph = this.moveToNextParagraphInTableCheck();\n            if (startParagraph) {\n                this.moveToPreviousParagraphInTable(selection);\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(selection.getPreviousParagraphBlock(this.currentWidget.paragraph))) {\n                var paragraphValue = selection.getPreviousParagraphBlock(this.currentWidget.paragraph);\n                this.currentWidget = paragraphValue.childWidgets[0];\n                this.offset = selection.getStartLineOffset(this.currentWidget);\n            }\n        }\n        else {\n            this.currentWidget = this.currentWidget.paragraph.getSplitWidgets()[0].childWidgets[0];\n            this.offset = offset;\n        }\n        this.calculateOffset();\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.calculateOffset = function () {\n        var selectionStartIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n        var selectionEndIndex = this.getHierarchicalIndexInternal();\n        if (selectionStartIndex !== selectionEndIndex) {\n            this.validateBackwardFieldSelection(selectionStartIndex, selectionEndIndex);\n        }\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Moves the text position to start of the paragraph.\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToParagraphStartInternal = function (selection, moveToPreviousParagraph) {\n        var splittedParagraph = this.currentWidget.paragraph;\n        while (splittedParagraph.previousSplitWidget) {\n            splittedParagraph = splittedParagraph.previousSplitWidget;\n        }\n        var startOffset = selection.getStartOffset(splittedParagraph);\n        if (this.offset === startOffset && moveToPreviousParagraph) {\n            var paragraphstart = this.moveToNextParagraphInTableCheck();\n            if (paragraphstart) {\n                this.moveToPreviousParagraphInTable(selection);\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(selection.getPreviousParagraphBlock(this.paragraph))) {\n                this.currentWidget = selection.getPreviousParagraphBlock(this.paragraph).firstChild;\n                this.offset = selection.getStartOffset(this.paragraph);\n            }\n        }\n        else {\n            this.currentWidget = splittedParagraph.firstChild;\n            this.offset = selection.getStartLineOffset(this.currentWidget);\n        }\n        var selectionStartIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n        var selectionEndIndex = this.getHierarchicalIndexInternal();\n        if (selectionStartIndex !== selectionEndIndex) {\n            this.validateBackwardFieldSelection(selectionStartIndex, selectionEndIndex);\n        }\n        this.updatePhysicalPosition(false);\n    };\n    /**\n     * Moves the text position to end of the paragraph.\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToParagraphEndInternal = function (selection, moveToNextParagraph) {\n        var splittedParagraph = this.currentWidget.paragraph;\n        while (splittedParagraph.nextSplitWidget) {\n            splittedParagraph = splittedParagraph.nextSplitWidget;\n        }\n        this.currentWidget = splittedParagraph.childWidgets[splittedParagraph.childWidgets.length - 1];\n        var endOffset = this.currentWidget.getEndOffset() + 1;\n        if (this.offset === endOffset && moveToNextParagraph) {\n            var paragraphEnd = this.moveToNextParagraphInTableCheck();\n            if (paragraphEnd) {\n                this.moveToNextParagraphInTable();\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(selection.getNextParagraphBlock(this.currentWidget.paragraph))) {\n                var endParagraph = selection.getNextParagraphBlock(this.currentWidget.paragraph);\n                this.currentWidget = endParagraph.childWidgets[endParagraph.childWidgets.length - 1];\n                this.offset = this.currentWidget.getEndOffset() + 1;\n            }\n        }\n        else {\n            this.offset = endOffset;\n        }\n        this.calculateOffset();\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.moveUp = function (selection, left) {\n        var paragraph = this.currentWidget.paragraph;\n        //Moves text position to start of line.\n        this.moveToLineStartInternal(selection, true);\n        //Moves previous line starting.\n        this.movePreviousPosition();\n        var prevLine = undefined;\n        var currentParagraph = this.currentWidget.paragraph;\n        if (paragraph.isInsideTable && paragraph !== currentParagraph && paragraph.associatedCell !== currentParagraph.associatedCell\n            && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(currentParagraph.associatedCell) && (paragraph.associatedCell.ownerRow === currentParagraph.associatedCell.ownerRow))) {\n            var ownerRow = currentParagraph.associatedCell.ownerRow;\n            if (ownerRow.previousRenderedWidget instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TableRowWidget) {\n                var cell = selection.getFirstCellInRegion(ownerRow.previousRenderedWidget, currentParagraph.associatedCell, left, true);\n                this.setPositionForValidLine(cell, false, true);\n            }\n            else {\n                var prevBlock = ownerRow.ownerTable.previousRenderedWidget;\n                do {\n                    if (prevBlock instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n                        prevBlock = selection.getLastBlockInLastCell(prevBlock);\n                    }\n                } while (prevBlock instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TableWidget);\n                if (prevBlock instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                    prevBlock = this.nextValidVisibleBlock(prevBlock, false);\n                    this.setPosition(this.getValidVisibleLine(prevBlock.childWidgets[prevBlock.childWidgets.length - 1], false), false);\n                }\n            }\n            prevLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        }\n        else {\n            if (!paragraph.isInsideTable && this.currentWidget.paragraph.isInsideTable) {\n                var cell = selection.getFirstCellInRegion(this.currentWidget.paragraph.associatedCell.ownerRow, this.currentWidget.paragraph.associatedCell, this.owner.selectionModule.upDownSelectionLength, true);\n                this.setPositionForValidLine(cell, false, false);\n            }\n            else if (paragraph.isInsideTable && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.currentWidget.paragraph.associatedCell) && paragraph.associatedCell.ownerRow.previousRenderedWidget !== paragraph.associatedCell.ownerRow.previousSplitWidget &&\n                paragraph.associatedCell.ownerRow.previousRenderedWidget === this.currentWidget.paragraph.associatedCell.ownerRow)) {\n                var cell = selection.getLastCellInRegion(this.currentWidget.paragraph.associatedCell.ownerRow, this.currentWidget.paragraph.associatedCell, this.owner.selectionModule.upDownSelectionLength, true);\n                this.setPositionForValidLine(cell, false, false);\n            }\n            prevLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        }\n        //Moves till the Up/Down selection width.\n        var top = selection.getTop(prevLine);\n        // Here, updating the left position when line widget end with page break\n        // to update cursor before page break\n        if ((this.currentWidget.isEndsWithPageBreak || this.currentWidget.isEndsWithColumnBreak) && this.offset === this.currentWidget.getEndOffset() - 1) {\n            left = this.location.x;\n        }\n        selection.updateTextPositionWidget(prevLine, new _index__WEBPACK_IMPORTED_MODULE_0__.Point(left, top), this, false);\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.moveDown = function (selection, left) {\n        //Moves text position to end of line.\n        var prevParagraph = this.currentWidget.paragraph;\n        var currentLine = this.currentWidget;\n        this.moveToLineEndInternal(selection, true);\n        var length = this.selection.getParagraphLength(this.currentWidget.paragraph);\n        if (this.offset > length) {\n            this.offset = length;\n        }\n        //Moves next line starting.\n        this.moveNextPosition();\n        var nextLine = undefined;\n        if (prevParagraph.isInsideTable && prevParagraph !== this.currentWidget.paragraph && prevParagraph.associatedCell !== this.currentWidget.paragraph.associatedCell && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.currentWidget.paragraph.associatedCell) && prevParagraph.associatedCell.ownerRow === this.currentWidget.paragraph.associatedCell.ownerRow)) {\n            var ownerRow = this.currentWidget.paragraph.associatedCell.ownerRow;\n            if (prevParagraph.isInsideTable && this.currentWidget.paragraph.isInsideTable && prevParagraph.associatedCell.cellFormat.rowSpan > 1 && prevParagraph.associatedCell.cellFormat.rowSpan + prevParagraph.associatedCell.ownerRow.rowIndex === prevParagraph.associatedCell.ownerTable.childWidgets.length) {\n                //If the prevParagraph  owner cell is Verically merged upto the last row, then theposition moved to next column. the position moved to out of the current tabel so owner row is assigned to last row.\n                ownerRow = this.currentWidget.paragraph.associatedCell.ownerTable.childWidgets[this.currentWidget.paragraph.associatedCell.ownerTable.childWidgets.length - 1];\n            }\n            if (ownerRow.nextRenderedWidget instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TableRowWidget) {\n                var cell = this.selection.getLastCellInRegion(ownerRow.nextRenderedWidget, this.currentWidget.paragraph.associatedCell, left, false);\n                this.setPositionForValidLine(cell, true, true);\n            }\n            else {\n                var nextBlock = this.selection.getNextRenderedBlock(ownerRow.ownerTable);\n                do {\n                    if (nextBlock instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TableWidget) {\n                        nextBlock = this.selection.getFirstBlockInFirstCell(nextBlock);\n                    }\n                } while (nextBlock instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TableWidget);\n                if (nextBlock instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ParagraphWidget) {\n                    nextBlock = this.nextValidVisibleBlock(nextBlock, true);\n                    this.setPosition(this.getValidVisibleLine(nextBlock.childWidgets[0], true), true);\n                }\n            }\n            nextLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        }\n        else {\n            if (!prevParagraph.isInsideTable && this.currentWidget.paragraph.isInsideTable) {\n                var cell = this.selection.getLastCellInRegion(this.currentWidget.paragraph.associatedCell.ownerRow, this.currentWidget.paragraph.associatedCell, this.owner.selectionModule.upDownSelectionLength, false);\n                this.setPositionForValidLine(cell, true, true);\n            }\n            else if (prevParagraph.isInsideTable && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.currentWidget.paragraph.associatedCell) && prevParagraph.associatedCell.ownerRow.nextRenderedWidget !== prevParagraph.associatedCell.ownerRow.nextSplitWidget)) {\n                if (prevParagraph.associatedCell.ownerRow.nextRenderedWidget === this.currentWidget.paragraph.associatedCell.ownerRow) {\n                    var cell = selection.getLastCellInRegion(this.currentWidget.paragraph.associatedCell.ownerRow, this.currentWidget.paragraph.associatedCell, this.owner.selectionModule.upDownSelectionLength, true);\n                    this.setPositionForValidLine(cell, true, false);\n                }\n                else if (this.currentWidget.paragraph.isInsideTable && prevParagraph.associatedCell.ownerRow.nextRenderedWidget instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TableRowWidget && prevParagraph.associatedCell.ownerRow !== this.currentWidget.paragraph.associatedCell.ownerRow) {\n                    var cell = this.selection.getLastCellInRegion(prevParagraph.associatedCell.ownerRow.nextRenderedWidget, this.currentWidget.paragraph.associatedCell, left, false);\n                    this.setPositionForValidLine(cell, true, true);\n                }\n            }\n            nextLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        }\n        //Moves till the Up/Down selection width.\n        var top = this.selection.getTop(nextLine);\n        if (nextLine !== currentLine) {\n            this.selection.updateTextPositionWidget(nextLine, new _index__WEBPACK_IMPORTED_MODULE_0__.Point(left, top), this, false);\n        }\n    };\n    /**\n     * Moves the text position to start of the line.\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToLineStartInternal = function (selection, moveToPreviousLine) {\n        if (this.location.x > this.viewer.clientActiveArea.right) {\n            this.offset = this.offset - 1;\n        }\n        var currentLine = selection.getLineWidgetInternal(this.currentWidget, this.offset, moveToPreviousLine);\n        var firstElement = selection.getFirstElementInternal(currentLine);\n        this.documentHelper.moveCaretPosition = 1;\n        var startOffset = selection.getStartOffset(this.currentWidget.paragraph);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(firstElement) && this.offset > startOffset) {\n            var index = 0;\n            var inlineObj = this.currentWidget.getInline(this.offset, index);\n            var inline = inlineObj.element;\n            index = inlineObj.index;\n            if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TextElementBox && inline.text !== '\\v') {\n                this.offset = startOffset;\n            }\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(firstElement)) {\n            var indexInInline = 0;\n            indexInInline += (firstElement instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ContentControl && selection.isHomeEnd) ? firstElement.length : 0;\n            this.currentWidget = firstElement.line;\n            this.offset = this.currentWidget.getOffset(firstElement, indexInInline);\n            indexInInline = 0;\n            var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n            var inline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                //Checks if field character is part of rendered field, otherwise moves to previous rendered content.\n                var prevInline = selection.getPreviousValidElement(inline);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(prevInline)) {\n                    inline = prevInline;\n                    this.currentWidget = inline.line;\n                    this.offset = this.currentWidget.getOffset(inline, inline.length);\n                    if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                        this.offset--;\n                    }\n                }\n            }\n        }\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Check paragraph is inside table\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToNextParagraphInTableCheck = function () {\n        if ((this.selection.start.paragraph.isInsideTable || this.paragraph.isInsideTable)\n            && (this.selection.start.paragraph.associatedCell !== this.paragraph.associatedCell\n                || this.selection.isCellSelected(this.selection.start.paragraph.associatedCell, this.selection.start, this))) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Moves the text position to end of the word.\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToWordEndInternal = function (type, excludeSpace) {\n        // type === 0 -------->CTRL+ARROW Navigation\n        // type === 1 -------->CTRL+SHIFT+ARROW Selection\n        // type === 2 -------->Double-tap Word Selection\n        var incrementValue = 0;\n        var endOffset = this.currentWidget.getEndOffset();\n        if (this.selection.isParagraphFirstLine(this.currentWidget)) {\n            if (this.currentWidget.children[0] instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                incrementValue = 1;\n            }\n            if (this.currentWidget.children[1] instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox) {\n                incrementValue = 2;\n            }\n        }\n        if ((this.offset + incrementValue === endOffset || this.offset === endOffset + 1) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.currentWidget.nextLine)) {\n            if (this.offset === endOffset && type !== 0) {\n                this.setPositionParagraph(this.currentWidget, endOffset + 1);\n            }\n            else {\n                var nextParagraph = this.selection.getNextParagraphBlock(this.currentWidget.paragraph);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(nextParagraph)) {\n                    return;\n                }\n                this.currentWidget = nextParagraph.childWidgets[0];\n                this.offset = this.selection.getStartLineOffset(this.currentWidget);\n                if (type === 1) {\n                    var nextWord = this.moveToNextParagraphInTableCheck();\n                    if (nextWord) {\n                        this.moveToNextParagraphInTable();\n                    }\n                    else {\n                        this.moveToWordEndInternal(type, excludeSpace);\n                    }\n                }\n            }\n        }\n        else {\n            var indexInInline = 0;\n            var endSelection = false;\n            var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n            var inline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            this.getNextWordOffset(inline, indexInInline, type, false, endSelection, this, excludeSpace);\n        }\n        if (type !== 0) {\n            var selectionStartIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n            var selectionEndIndex = this.getHierarchicalIndexInternal();\n            if (selectionStartIndex !== selectionEndIndex) {\n                this.validateForwardFieldSelection(selectionStartIndex, selectionEndIndex);\n            }\n        }\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * move text position to next paragraph inside table\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToNextParagraphInTable = function () {\n        var paragraph = this.currentWidget.paragraph;\n        var nextParagraph = (paragraph.isInsideTable) ? this.selection.getNextSelectionCell(paragraph.associatedCell) :\n            this.selection.getNextParagraphBlock(paragraph);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(nextParagraph)) {\n            return;\n        }\n        this.currentWidget = nextParagraph.childWidgets[nextParagraph.childWidgets.length - 1];\n        this.offset = this.currentWidget.getEndOffset() + 1;\n    };\n    /**\n     * Moves the text position to start of the previous paragraph.\n     *\n     */\n    TextPosition.prototype.moveToPreviousParagraph = function (selection) {\n        var startOffset = selection.getStartOffset(this.currentWidget.paragraph);\n        if (this.offset === startOffset && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(selection.getPreviousParagraphBlock(this.currentWidget.paragraph))) {\n            var previousParagraph = selection.getPreviousParagraphBlock(this.currentWidget.paragraph);\n            this.currentWidget = previousParagraph.childWidgets[0];\n            this.offset = selection.getStartOffset(this.currentWidget.paragraph);\n        }\n        else {\n            this.offset = selection.getStartOffset(this.currentWidget.paragraph);\n        }\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Move to previous line from current position\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToPreviousLine = function (selection, left) {\n        var currentIndex = this.getHierarchicalIndexInternal();\n        var currentLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        //Moves text position to start of line.\n        this.moveToLineStartInternal(selection, true);\n        if (this.currentWidget.paragraph.isInsideTable) {\n            this.moveUpInTable(selection);\n        }\n        else {\n            this.moveBackward();\n        }\n        var prevLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        var lineStart = selection.getLeft(prevLine);\n        var lineWidth = selection.getWidth(prevLine, true);\n        //Moves till the Up/Down selection width.\n        if (lineWidth + lineStart >= left && currentLine !== prevLine) {\n            var top_1 = selection.getTop(prevLine);\n            var point = new _index__WEBPACK_IMPORTED_MODULE_0__.Point(left, top_1);\n            selection.updateTextPositionWidget(prevLine, point, this, true);\n        }\n        //Checks if the current position is between field result, then move to field begin.\n        var selectionEndIndex = this.getHierarchicalIndexInternal();\n        this.validateBackwardFieldSelection(currentIndex, selectionEndIndex);\n    };\n    /**\n     * @param {Selection} selection Specifies the selection\n     * @param {boolean} moveToNextLine Specifies the move to next line\n     * @private\n     */\n    TextPosition.prototype.moveToLineEndInternal = function (selection, moveToNextLine) {\n        if (this.location.x > this.viewer.clientActiveArea.right) {\n            this.offset = this.offset - 1;\n        }\n        var currentLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        var firstElement = selection.getFirstElementInternal(currentLine);\n        var isParaBidi = this.currentWidget.paragraph.paragraphFormat.bidi;\n        this.documentHelper.moveCaretPosition = 2;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(firstElement) && this.offset === selection.getStartLineOffset(this.currentWidget)) {\n            this.offset = selection.getParagraphLength(this.paragraph) + 1;\n            this.updatePhysicalPosition(true);\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(firstElement)) {\n            var lastElement = void 0;\n            // As per Microsoft Behavior, when current para is RTL and if line widget contains rtl text or mixed inlines(rtl, normal),\n            // then need to consider the last element and to update offset to last element\n            if (isParaBidi && this.containsRtlText(currentLine)) {\n                var endOffset = currentLine.getEndOffset();\n                lastElement = currentLine.getInline(endOffset, 0).element;\n            }\n            else {\n                lastElement = currentLine.children[currentLine.children.length - 1];\n                if (lastElement instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ListTextElementBox && currentLine.children.length > 2) {\n                    lastElement = currentLine.children[currentLine.children.length - 3];\n                }\n            }\n            var index = 0;\n            index += lastElement instanceof _index__WEBPACK_IMPORTED_MODULE_0__.TextElementBox ? lastElement.length : (lastElement instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ContentControl && selection.isHomeEnd) ? 0 : 1;\n            this.currentWidget = lastElement.line;\n            if (index === lastElement.length\n                && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(lastElement.nextNode) && selection.isParagraphLastLine(this.currentWidget)) {\n                var length_2 = selection.getLineLength(this.currentWidget);\n                this.offset = moveToNextLine ? length_2 + 1 : length_2;\n            }\n            else {\n                var inline = lastElement;\n                while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline) && inline.length === index && inline.nextNode instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                    var nextInline = this.documentHelper.getNextValidElement(inline.nextNode);\n                    if (inline !== nextInline) {\n                        inline = nextInline;\n                        index = 0;\n                    }\n                    if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox && inline.fieldType === 0\n                        && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline.fieldEnd)) {\n                        var fieldBegin = inline;\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(fieldBegin.fieldSeparator)) {\n                            inline = fieldBegin.fieldEnd;\n                        }\n                        else {\n                            inline = fieldBegin.fieldSeparator;\n                            this.currentWidget = inline.line;\n                            if (this.currentWidget === fieldBegin.fieldEnd.line\n                                && !selection.hasValidInline(this.currentWidget.paragraph, inline, fieldBegin.fieldEnd)) {\n                                inline = fieldBegin.fieldEnd;\n                            }\n                        }\n                        this.currentWidget = inline.line;\n                    }\n                    if (inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.FieldElementBox) {\n                        index = 1;\n                    }\n                }\n                if (index === inline.length && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(inline.nextNode)) {\n                    index++;\n                }\n                if (!moveToNextLine && inline instanceof _index__WEBPACK_IMPORTED_MODULE_0__.ElementBox && inline.text === '\\v') {\n                    index--;\n                }\n                this.offset = this.currentWidget.getOffset(inline, index);\n            }\n            this.updatePhysicalPosition(moveToNextLine);\n        }\n    };\n    /**\n     * Move to next line\n     *\n     * @param {number} left Specified the left\n     * @private\n     * @returns {void}\n     */\n    TextPosition.prototype.moveToNextLine = function (left) {\n        var selection = this.selection;\n        var textPosition = new TextPosition(this.owner);\n        textPosition.setPositionInternal(this);\n        var currentIndex = this.getHierarchicalIndexInternal();\n        var currentLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        //Moves text position to end of line.\n        this.moveToLineEndInternal(selection, true);\n        var isMoveToLineEnd = !textPosition.isAtSamePosition(this);\n        textPosition.setPositionInternal(this);\n        if (this.currentWidget.paragraph.isInsideTable) {\n            this.moveDownInTable(selection);\n        }\n        else {\n            this.moveNextPosition();\n            var isAtLineStart = this.offset === 0 ? true : false;\n            if (!isAtLineStart) {\n                this.moveForward();\n            }\n        }\n        var nextLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        var lineStart = selection.getLeft(nextLine);\n        var firstElement = selection.getFirstElementInternal(nextLine);\n        var firstItemWidth = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(firstElement) ? selection.getWidth(nextLine, true) : selection.getLeftInternal(nextLine, firstElement, 1) - lineStart;\n        //Moves till the Up/Down selection width.\n        if (lineStart < left && (firstItemWidth / 2 < left - lineStart)) {\n            var top_2 = selection.getTop(nextLine);\n            var point = new _index__WEBPACK_IMPORTED_MODULE_0__.Point(left, top_2);\n            selection.updateTextPositionWidget(nextLine, point, this, true);\n            var width = selection.getWidth(nextLine, true);\n            if (width < left - lineStart) {\n                this.moveToLineEndInternal(selection, true);\n            }\n        }\n        else if (isMoveToLineEnd && this.currentWidget.paragraph.isInsideTable\n            && this.currentWidget === this.owner.selectionModule.start.currentWidget) {\n            this.setPositionInternal(textPosition);\n        }\n        else if (!isMoveToLineEnd) {\n            this.moveToLineEndInternal(selection, true);\n        }\n        //Checks if the current position is between field result, then move to field end.\n        var selectionEndIndex = this.getHierarchicalIndexInternal();\n        this.validateForwardFieldSelection(currentIndex, selectionEndIndex);\n    };\n    TextPosition.prototype.moveUpInTable = function (selection) {\n        var isPositionUpdated = false;\n        var end = this.owner.selectionModule.end;\n        var isBackwardSelection = !this.owner.selectionModule.isEmpty;\n        isPositionUpdated = end.paragraph.isInsideTable;\n        if (isPositionUpdated) {\n            var startCell = this.currentWidget.paragraph.associatedCell;\n            var endCell = end.paragraph.associatedCell;\n            var containerCell = selection.getContainerCellOf(endCell, startCell);\n            isPositionUpdated = containerCell.ownerTable.contains(startCell);\n            if (isPositionUpdated) {\n                endCell = selection.getSelectedCell(endCell, containerCell);\n                startCell = selection.getSelectedCell(startCell, containerCell);\n                var isInContainerCell = selection.containsCell(containerCell, this.currentWidget.paragraph.associatedCell);\n                var isContainerCellSelected = selection.isCellSelected(containerCell, this, end);\n                if (!isContainerCellSelected) {\n                    isContainerCellSelected = this.currentWidget.paragraph === selection.getFirstParagraph(containerCell) && this.isAtParagraphStart;\n                }\n                if ((isInContainerCell && isContainerCellSelected\n                    || !isInContainerCell) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(startCell.ownerRow.previousRenderedWidget)) {\n                    //Moves to cell in previous row.\n                    var row = startCell.ownerRow.previousRenderedWidget;\n                    var cell = selection.getFirstCellInRegion(row, containerCell, this.owner.selectionModule.upDownSelectionLength, true);\n                    var previousParagraph = selection.getLastParagraph(cell);\n                    this.setPosition(previousParagraph.childWidgets[0], true);\n                    return;\n                }\n                else if (isInContainerCell && isContainerCellSelected\n                    && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(startCell.ownerRow.previousRenderedWidget) || !isInContainerCell) {\n                    if (isBackwardSelection) {\n                        //Moves to first cell of row.\n                        startCell = startCell.ownerRow.childWidgets[0];\n                        var previousParagraph = selection.getFirstParagraph(startCell);\n                        this.setPosition(previousParagraph.childWidgets[0], true);\n                    }\n                    else {\n                        //Moves to last cell of row.\n                        startCell = startCell.ownerRow.childWidgets[startCell.ownerRow.childWidgets.length - 1];\n                        var previousParagraph = selection.getLastParagraph(startCell);\n                        this.setPosition(previousParagraph.childWidgets[0], false);\n                    }\n                }\n            }\n        }\n        if (!isPositionUpdated) {\n            //Moves to previous row / previous block.\n            var cell = selection.getContainerCell(this.currentWidget.paragraph.associatedCell);\n            if (isBackwardSelection) {\n                //Moves to first cell of row.\n                cell = cell.ownerRow.childWidgets[0];\n                var previousParagraph = selection.getFirstParagraph(cell);\n                this.setPosition(previousParagraph.childWidgets[0], true);\n            }\n            else {\n                //Moves to end of row.\n                cell = cell.ownerRow.childWidgets[cell.ownerRow.childWidgets.length - 1];\n                var previousParagraph = selection.getLastParagraph(cell);\n                this.setPosition(previousParagraph.childWidgets[0], false);\n            }\n        }\n        //Moves to previous row / previous block.\n        this.moveBackward();\n    };\n    TextPosition.prototype.moveDownInTable = function (selection) {\n        var isPositionUpdated = false;\n        var isForwardSelection = this.owner.selectionModule.isEmpty || this.owner.selectionModule.isForward;\n        isPositionUpdated = this.owner.selectionModule.start.paragraph.isInsideTable;\n        if (isPositionUpdated) {\n            var startCell = this.owner.selectionModule.start.paragraph.associatedCell;\n            var endCell = this.currentWidget.paragraph.associatedCell;\n            var containerCell = selection.getContainerCellOf(startCell, endCell);\n            isPositionUpdated = containerCell.ownerTable.contains(endCell);\n            if (isPositionUpdated) {\n                startCell = selection.getSelectedCell(startCell, containerCell);\n                endCell = selection.getSelectedCell(endCell, containerCell);\n                var isInContainerCell = selection.containsCell(containerCell, this.currentWidget.paragraph.associatedCell);\n                var isContainerCellSelected = selection.isCellSelected(containerCell, this.owner.selectionModule.start, this);\n                if ((isInContainerCell && isContainerCellSelected\n                    || !isInContainerCell) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(endCell.ownerRow.nextRenderedWidget)) {\n                    //Moves to cell in next row.\n                    var row = endCell.ownerRow.nextRenderedWidget;\n                    var cell = selection.getLastCellInRegion(row, containerCell, this.owner.selectionModule.upDownSelectionLength, false);\n                    var lastParagraph = selection.getLastParagraph(cell);\n                    this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n                    return;\n                }\n                else if (isInContainerCell && isContainerCellSelected\n                    && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(endCell.ownerRow.nextRenderedWidget) || !isInContainerCell) {\n                    if (isForwardSelection) {\n                        //Moves to last cell of row.\n                        endCell = endCell.ownerRow.childWidgets[endCell.ownerRow.childWidgets.length - 1];\n                        var lastParagraph = selection.getLastParagraph(endCell);\n                        this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n                    }\n                    else {\n                        //Moves to first cell of row.\n                        endCell = endCell.ownerRow.childWidgets[0];\n                        var lastParagraph = selection.getFirstParagraph(endCell);\n                        this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], true);\n                    }\n                }\n            }\n        }\n        if (!isPositionUpdated) {\n            //Moves to next row / next block.\n            var cell = selection.getContainerCell(this.currentWidget.paragraph.associatedCell);\n            if (isForwardSelection) {\n                //Moves to end of row.\n                cell = cell.ownerRow.childWidgets[cell.ownerRow.childWidgets.length - 1];\n                var lastParagraph = selection.getLastParagraph(cell);\n                this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n            }\n            else if (cell.ownerRow.nextRenderedWidget) {\n                //Moves to first cell of row.\n                cell = cell.ownerRow.nextRenderedWidget.childWidgets[0];\n                var lastParagraph = selection.getFirstParagraph(cell);\n                this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], true);\n            }\n        }\n        //Moves to next row / next block.\n        this.moveForward();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    TextPosition.prototype.destroy = function () {\n        this.offset = undefined;\n        this.isUpdateLocation = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.location)) {\n            this.location.destroy();\n        }\n        this.location = undefined;\n        this.currentWidget = undefined;\n        this.owner = undefined;\n        this.documentHelper = undefined;\n    };\n    return TextPosition;\n}());\n\n/**\n * @private\n */\nvar SelectionWidgetInfo = /** @class */ (function () {\n    function SelectionWidgetInfo(left, width) {\n        this.leftIn = 0;\n        this.widthIn = 0;\n        this.color = '';\n        this.leftIn = left;\n        this.widthIn = width;\n    }\n    Object.defineProperty(SelectionWidgetInfo.prototype, \"left\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return this.leftIn;\n        },\n        /**\n         * @private\n         */\n        set: function (value) {\n            this.leftIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SelectionWidgetInfo.prototype, \"width\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return this.widthIn;\n        },\n        /**\n         * @private\n         */\n        set: function (value) {\n            this.widthIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     */\n    SelectionWidgetInfo.prototype.destroy = function () {\n        this.widthIn = undefined;\n        this.leftIn = undefined;\n        this.floatingItems = [];\n        this.floatingItems = undefined;\n    };\n    return SelectionWidgetInfo;\n}());\n\n/**\n * @private\n */\nvar Hyperlink = /** @class */ (function () {\n    function Hyperlink(fieldBeginAdv, selection) {\n        this.linkInternal = '';\n        this.localRef = '';\n        this.opensNewWindow = false;\n        this.isCrossRefField = false;\n        this.screenTipText = '';\n        var fieldCode = selection.getFieldCode(fieldBeginAdv);\n        var lowercase = fieldCode.toLowerCase();\n        if (lowercase.substring(0, 9) === 'hyperlink') {\n            this.parseFieldValues(fieldCode.substring(9).trim(), true);\n        }\n        else if ((lowercase.indexOf('ref ') === 0 && lowercase.match('\\\\h'))) {\n            this.parseFieldValues(fieldCode.substring(4).trim(), false);\n            this.isCrossRefField = true;\n        }\n        else if (lowercase.indexOf('pageref') === 0) {\n            this.parseFieldValues(fieldCode.substring(7).trim(), false);\n        }\n    }\n    Object.defineProperty(Hyperlink.prototype, \"screenTip\", {\n        /**\n        * Gets screentip text.\n        *\n        * @returns string\n        * @private\n        */\n        get: function () {\n            return this.screenTipText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Hyperlink.prototype, \"navigationLink\", {\n        /**\n         * Gets navigation link.\n         *\n         * @returns string\n         * @private\n         */\n        get: function () {\n            return this.linkInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Hyperlink.prototype, \"localReference\", {\n        /**\n         * Gets the local reference if any.\n         *\n         * @returns string\n         * @private\n         */\n        get: function () {\n            return this.localRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Hyperlink.prototype, \"linkType\", {\n        /**\n         * Gets hyper link type.\n         *\n         * @returns HyperLinkType\n         * @private\n         */\n        get: function () {\n            return this.typeInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Hyperlink.prototype, \"isCrossRef\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return this.isCrossRefField;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Hyperlink.prototype.parseFieldValues = function (value, isHyperlink) {\n        var codes = value.split('\\\\o ');\n        if (codes.length === 2) {\n            this.screenTipText = this.parseFieldValue(codes[1], codes[1] === '\\\"' ? '\\\"' : undefined, isHyperlink);\n            this.screenTipText = this.screenTipText.substring(0, this.screenTipText.length - 1);\n            value = codes[0];\n            codes = undefined;\n        }\n        codes = value.split(' ');\n        var isLocalRef = false;\n        var hyperlinkRef = true;\n        if (isHyperlink) {\n            for (var i = 0; i < codes.length; i++) {\n                var code = codes[i];\n                if (code.length < 1) {\n                    continue;\n                }\n                if (code === '\\\\t' || code === '\\\\l') {\n                    isLocalRef = true;\n                }\n                else if (code === '\\\\n') {\n                    this.opensNewWindow = true;\n                }\n                else {\n                    code = this.parseFieldValue(code, code[0] === '\\\"' ? '\\\"' : undefined, isHyperlink);\n                    if (isLocalRef) {\n                        this.localRef = code;\n                        isLocalRef = false;\n                        hyperlinkRef = false;\n                    }\n                    else if (hyperlinkRef) {\n                        this.linkInternal = this.parseFieldValue(value, value[0] === '\\\"' ? '\\\"' : undefined, isHyperlink);\n                    }\n                    else {\n                        this.linkInternal = code;\n                    }\n                }\n            }\n        }\n        else {\n            this.localRef = codes[0];\n        }\n        this.setLinkType();\n    };\n    Hyperlink.prototype.parseFieldValue = function (value, endChar, isHyperlink) {\n        value = isHyperlink ? value.substring(1) : value.substring(0);\n        var endIndex = endChar ? value.indexOf(endChar) : -1;\n        if (endIndex < 0) {\n            endIndex = value.length;\n        }\n        return value.substring(0, endIndex).trim();\n    };\n    Hyperlink.prototype.setLinkType = function () {\n        // If only local reference.\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.linkInternal) || this.linkInternal.length < 1) {\n            this.typeInternal = 'Bookmark';\n            return;\n        }\n        // Validates link.\n        if (this.linkInternal.substring(0, 4) === ('www.')) {\n            this.linkInternal = 'http://' + this.navigationLink;\n        }\n        else if (this.linkInternal[0] === '@') {\n            this.linkInternal = 'mailto:' + this.navigationLink;\n        }\n        // Finds proper link type.\n        if (this.linkInternal.substring(0, 7) === 'http://'\n            || this.linkInternal.substring(0, 8) === 'https://') {\n            this.typeInternal = 'WebPage';\n        }\n        else if (this.linkInternal.substring(0, 7) === 'mailto:') {\n            this.typeInternal = 'Email';\n        }\n        else {\n            this.typeInternal = 'File';\n        }\n    };\n    /**\n     * @private\n     */\n    Hyperlink.prototype.destroy = function () {\n        this.linkInternal = undefined;\n        this.localRef = undefined;\n        this.typeInternal = undefined;\n        this.opensNewWindow = undefined;\n        this.screenTipText = undefined;\n    };\n    return Hyperlink;\n}());\n\n/**\n * @private\n */\nvar ImageSizeInfo = /** @class */ (function () {\n    /**\n     * Constructor for image format class\n     *\n     * @param imageContainer - Specifies for image width and height values.\n     */\n    function ImageSizeInfo(imageContainer) {\n        /**\n         * @private\n         */\n        this.width = 0;\n        /**\n         * @private\n         */\n        this.height = 0;\n        this.width = imageContainer.width;\n        this.height = imageContainer.height;\n        this.alternatetext = imageContainer.alternateText;\n    }\n    /**\n     * Dispose the internal objects which are maintained.\n     *\n     * @private\n     */\n    ImageSizeInfo.prototype.destroy = function () {\n        this.width = undefined;\n        this.height = undefined;\n        this.alternatetext = undefined;\n    };\n    return ImageSizeInfo;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/selection/selection-helper.js?");

/***/ })

}]);