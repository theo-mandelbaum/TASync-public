"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-schedule_src_schedule_event-renderer_timeline-view_js-8c63-d96fb3dc"],{

/***/ "./node_modules/@syncfusion/ej2-schedule/src/schedule/event-renderer/timeline-view.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-schedule/src/schedule/event-renderer/timeline-view.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TimelineEvent: () => (/* binding */ TimelineEvent)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_css_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/css-constant */ \"./node_modules/@syncfusion/ej2-schedule/src/schedule/base/css-constant.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/util */ \"./node_modules/@syncfusion/ej2-schedule/src/schedule/base/util.js\");\n/* harmony import */ var _month__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./month */ \"./node_modules/@syncfusion/ej2-schedule/src/schedule/event-renderer/month.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n\n\n\nvar EVENT_GAP = 2;\nvar BLOCK_INDICATOR_WIDTH = 22;\nvar BLOCK_INDICATOR_HEIGHT = 18;\n/**\n * Timeline view events render\n */\nvar TimelineEvent = /** @class */ (function (_super) {\n    __extends(TimelineEvent, _super);\n    function TimelineEvent(parent, type) {\n        var _this = _super.call(this, parent) || this;\n        _this.startHour = _this.parent.activeView.getStartHour();\n        _this.endHour = _this.parent.activeView.getEndHour();\n        _this.slotCount = _this.parent.activeViewOptions.timeScale.slotCount;\n        _this.interval = _this.parent.activeViewOptions.timeScale.interval;\n        _this.day = 0;\n        _this.rowIndex = 0;\n        _this.cellTops = [];\n        _this.renderType = type;\n        _this.eventContainers = [].slice.call(_this.element.querySelectorAll('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.APPOINTMENT_CONTAINER_CLASS));\n        var tr = [].slice.call(_this.element.querySelectorAll('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.CONTENT_TABLE_CLASS + ' tbody tr'));\n        _this.dayLength = tr.length === 0 ? 0 : tr[0].children.length;\n        _this.content = _this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.SCHEDULE_TABLE_CLASS + '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.CONTENT_TABLE_CLASS);\n        return _this;\n    }\n    TimelineEvent.prototype.getSlotDates = function () {\n        this.slots = [];\n        this.slots.push(this.parent.activeView.renderDates.map(function (date) { return +date; }));\n        if (this.parent.activeViewOptions.headerRows.length > 0 &&\n            this.parent.activeViewOptions.headerRows.slice(-1)[0].option !== 'Hour') {\n            this.renderType = 'day';\n            var workCell = this.content.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.WORK_CELLS_CLASS);\n            this.cellWidth = this.parent.getElementWidth(workCell) / +(workCell.getAttribute('colspan') || 1);\n            this.slotsPerDay = 1;\n        }\n        else {\n            this.slotsPerDay = (this.dayLength / this.dateRender.length);\n        }\n    };\n    TimelineEvent.prototype.getOverlapEvents = function (date, appointments) {\n        var appointmentsList = [];\n        if (this.renderType === 'day') {\n            for (var _i = 0, appointments_1 = appointments; _i < appointments_1.length; _i++) {\n                var app = appointments_1[_i];\n                if ((_base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(app[this.fields.startTime]).getTime() <= _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(new Date(date.getTime())).getTime()) &&\n                    (_base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(app[this.fields.endTime]).getTime() >= _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(new Date(date.getTime())).getTime())) {\n                    appointmentsList.push(app);\n                }\n            }\n        }\n        else {\n            for (var _a = 0, appointments_2 = appointments; _a < appointments_2.length; _a++) {\n                var app = appointments_2[_a];\n                var eventData = app.data;\n                if ((eventData.trimStartTime.getTime() <= date.getTime() &&\n                    eventData.trimEndTime.getTime() > date.getTime()) ||\n                    (eventData.trimStartTime.getTime() === date.getTime() &&\n                        eventData.trimEndTime.getTime() === date.getTime())) {\n                    appointmentsList.push(app);\n                }\n            }\n        }\n        return appointmentsList;\n    };\n    TimelineEvent.prototype.getSortComparerIndex = function (startDate, endDate) {\n        var appIndex = -1;\n        var appointments = this.renderedEvents;\n        if (appointments.length > 0) {\n            var appointmentsList = this.getOverlapSortComparerEvents(startDate, endDate, appointments);\n            var appLevel = appointmentsList.map(function (obj) { return obj.Index; });\n            appIndex = (appLevel.length > 0) ? this.getSmallestMissingNumber(appLevel) : 0;\n        }\n        return (appIndex === -1) ? 0 : appIndex;\n    };\n    TimelineEvent.prototype.getOverlapSortComparerEvents = function (startDate, endDate, appointmentsCollection) {\n        var appointments = [];\n        var _loop_1 = function (app) {\n            if (this_1.renderType === 'day') {\n                var start_1 = _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(startDate).getTime();\n                var end_1 = _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(endDate).getTime();\n                var appStart_1 = _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(app[this_1.fields.startTime]).getTime();\n                var appEnd_1 = _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(app[this_1.fields.endTime]).getTime();\n                var isEndOverlap = function () {\n                    var endTime = (end_1 - (_base_util__WEBPACK_IMPORTED_MODULE_2__.getDateInMs(endDate) <= 0 ? _base_util__WEBPACK_IMPORTED_MODULE_2__.MS_PER_DAY : 0));\n                    endTime = start_1 > endTime ? start_1 : endTime;\n                    return appEnd_1 >= endTime && appStart_1 <= endTime;\n                };\n                if (appStart_1 <= start_1 && appEnd_1 >= start_1 || isEndOverlap() || appStart_1 > start_1 && appEnd_1 < end_1) {\n                    appointments.push(app);\n                }\n            }\n            else {\n                var eventData = app.data;\n                if (((eventData.trimStartTime.getTime() <= startDate.getTime()) && (startDate.getTime() < eventData.trimEndTime.getTime())) ||\n                    ((startDate.getTime() <= eventData.trimStartTime.getTime()) && (eventData.trimStartTime.getTime() < endDate.getTime()))) {\n                    appointments.push(app);\n                }\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, appointmentsCollection_1 = appointmentsCollection; _i < appointmentsCollection_1.length; _i++) {\n            var app = appointmentsCollection_1[_i];\n            _loop_1(app);\n        }\n        return appointments;\n    };\n    TimelineEvent.prototype.renderResourceEvents = function () {\n        this.removeHeightProperty(_base_css_constant__WEBPACK_IMPORTED_MODULE_1__.RESOURCE_COLUMN_TABLE_CLASS);\n        var selector = '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.RESOURCE_COLUMN_TABLE_CLASS + ' tbody tr';\n        this.addCellHeight(selector, this.eventHeight, EVENT_GAP, this.moreIndicatorHeight, 0, false);\n        var resources = this.parent.uiStateValues.isGroupAdaptive ?\n            [this.parent.resourceBase.lastResourceLevel[this.parent.uiStateValues.groupIndex]] :\n            this.parent.resourceBase.renderedResources;\n        if (this.parent.crudModule && this.parent.crudModule.crudObj.isCrudAction) {\n            for (var i = 0, len = this.parent.crudModule.crudObj.sourceEvent.length; i < len; i++) {\n                var source = this.parent.crudModule.crudObj.sourceEvent[parseInt(i.toString(), 10)];\n                this.rowIndex = source.groupIndex;\n                if (!this.parent.uiStateValues.isGroupAdaptive ||\n                    (this.parent.uiStateValues.groupIndex === source.groupIndex && this.parent.uiStateValues.isGroupAdaptive)) {\n                    this.renderEventsHandler(this.parent.activeView.renderDates, this.parent.activeViewOptions.workDays, source);\n                }\n                if (this.parent.crudModule.crudObj.targetEvent[parseInt(i.toString(), 10)] && this.parent.crudModule.crudObj.sourceEvent[parseInt(i.toString(), 10)].groupIndex !==\n                    this.parent.crudModule.crudObj.targetEvent[parseInt(i.toString(), 10)].groupIndex) {\n                    var target = this.parent.crudModule.crudObj.targetEvent[parseInt(i.toString(), 10)];\n                    this.rowIndex = target.groupIndex;\n                    this.renderEventsHandler(this.parent.activeView.renderDates, this.parent.activeViewOptions.workDays, target);\n                }\n            }\n            this.parent.crudModule.crudObj.isCrudAction = false;\n        }\n        else {\n            for (var i = 0; i < resources.length; i++) {\n                this.rowIndex = i;\n                this.renderEventsHandler(this.parent.activeView.renderDates, this.parent.activeViewOptions.workDays, resources[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    TimelineEvent.prototype.renderEvents = function (event, resIndex, appointmentsList) {\n        var startTime = event[this.fields.startTime];\n        var endTime = event[this.fields.endTime];\n        if ((startTime.getTime() < this.parent.minDate.getTime()) || (endTime.getTime() > this.parent.maxDate.getTime())) {\n            return;\n        }\n        var eventData = event.data;\n        startTime = this.getStartTime(event, eventData);\n        endTime = this.getEndTime(event, eventData);\n        var startEndHours = _base_util__WEBPACK_IMPORTED_MODULE_2__.getStartEndHours(event[this.fields.startTime], this.startHour, this.endHour);\n        var eventDates = this.updateEventMinimumDuration(startEndHours, startTime, endTime);\n        startTime = eventDates.startDate;\n        endTime = eventDates.endDate;\n        this.day = this.parent.getIndexOfDate(this.dateRender, _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(new Date(startTime.getTime())));\n        if (this.day < 0) {\n            return;\n        }\n        var cellTd = this.getCellTd();\n        var eventsPerRow = this.parent.rowAutoHeight ? 1 : this.parent.activeViewOptions.maxEventsPerRow;\n        var overlapCount = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.eventSettings.sortComparer)) ? this.getIndex(startTime) : this.getSortComparerIndex(startTime, endTime);\n        event.Index = overlapCount;\n        var appHeight = this.eventHeight;\n        var diffInDays = eventData.count;\n        var eventObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, event, null, true);\n        eventObj[this.fields.startTime] = eventData[this.fields.startTime];\n        eventObj[this.fields.endTime] = eventData[this.fields.endTime];\n        var currentDate = _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(new Date(this.dateRender[this.day].getTime()));\n        var schedule = _base_util__WEBPACK_IMPORTED_MODULE_2__.getStartEndHours(currentDate, this.startHour, this.endHour);\n        var isValidEvent = true;\n        if (this.isDayProcess() || eventObj[this.fields.isAllDay]) {\n            isValidEvent = true;\n        }\n        else {\n            isValidEvent = this.isValidEvent(eventObj, startTime, endTime, schedule);\n        }\n        if (startTime <= endTime && isValidEvent) {\n            var appWidth = this.getEventWidth(startTime, endTime, event[this.fields.isAllDay], diffInDays);\n            appWidth = this.renderType === 'day' ? appWidth - 2 : appWidth;\n            var appLeft = 0;\n            var appRight = 0;\n            var position = this.getPosition(startTime, endTime, event[this.fields.isAllDay], this.day);\n            appWidth = (appWidth <= 0) ? this.cellWidth : appWidth; // appWidth 0 when start and end time as same\n            this.renderedEvents.push((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, event, null, true));\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.cellTops[parseInt(resIndex.toString(), 10)])) {\n                this.cellTops[parseInt(resIndex.toString(), 10)] = this.getRowTop(resIndex);\n            }\n            var top_1 = this.cellTops[parseInt(resIndex.toString(), 10)];\n            var appTop = (top_1 + (this.maxHeight ? 0 : EVENT_GAP)) + (overlapCount * (appHeight + EVENT_GAP));\n            appLeft = (this.parent.enableRtl) ? 0 : position;\n            appRight = (this.parent.enableRtl) ? position : 0;\n            var height = ((overlapCount + 1) * (appHeight + EVENT_GAP)) + this.moreIndicatorHeight;\n            var renderApp = this.parent.activeViewOptions.maxEventsPerRow && !this.parent.rowAutoHeight && !this.parent.eventSettings.enableIndicator\n                ? overlapCount < eventsPerRow : this.maxOrIndicator ? overlapCount < 1 ? true : false : this.cellHeight > height;\n            if (this.parent.rowAutoHeight || renderApp) {\n                var appointmentElement = void 0;\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.inlineValue)) {\n                    appointmentElement = this.createAppointmentElement(event, resIndex);\n                }\n                else {\n                    appointmentElement = this.parent.inlineModule.createInlineAppointmentElement();\n                }\n                this.applyResourceColor(appointmentElement, event, 'backgroundColor', this.groupOrder);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(appointmentElement, {\n                    'width': appWidth + 'px', 'left': appLeft + 'px', 'right': appRight + 'px', 'top': appTop + 'px'\n                });\n                this.wireAppointmentEvents(appointmentElement, event);\n                if (this.parent.rowAutoHeight) {\n                    var conWrap = this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.CONTENT_WRAP_CLASS);\n                    var conWidth = this.parent.getElementWidth(conWrap);\n                    var isWithoutScroll = conWrap.offsetHeight === conWrap.clientHeight &&\n                        conWrap.offsetWidth === conWrap.clientWidth;\n                    this.renderEventElement(event, appointmentElement, cellTd);\n                    var firstChild = this.getFirstChild(resIndex);\n                    this.updateCellHeight(firstChild, height);\n                    if (isWithoutScroll &&\n                        (conWrap.offsetWidth > conWrap.clientWidth || conWidth !== this.parent.getElementWidth(conWrap))) {\n                        this.adjustAppointments(conWidth);\n                    }\n                }\n                else {\n                    this.renderEventElement(event, appointmentElement, cellTd);\n                }\n            }\n            else {\n                for (var i = 0; i < diffInDays; i++) {\n                    var moreIndicator = cellTd.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.MORE_INDICATOR_CLASS);\n                    var appPos = (this.parent.enableRtl) ? appRight : appLeft;\n                    appPos = (Math.floor(appPos / this.cellWidth) * this.cellWidth);\n                    var interval = this.interval / this.slotCount;\n                    var startDate = (this.parent.activeViewOptions.option === 'TimelineMonth' || this.renderType === 'day' || i !== 0) ?\n                        new Date(this.dateRender[this.day + i].getTime()) : new Date(startTime);\n                    var endDate = _base_util__WEBPACK_IMPORTED_MODULE_2__.addDays(this.dateRender[this.day + i], 1);\n                    if (this.parent.activeViewOptions.option === 'TimelineMonth' || this.renderType === 'day') {\n                        var position_1 = this.getPosition(startDate, endDate, event[this.fields.isAllDay], (this.day + i));\n                        this.renderTimelineMoreIndicator(startTime, startDate, endDate, appHeight, interval, resIndex, appointmentsList, top_1, appLeft, appRight, cellTd, moreIndicator, appPos, position_1);\n                    }\n                    else {\n                        var slotCount = (_base_util__WEBPACK_IMPORTED_MODULE_2__.getUniversalTime(endTime) - _base_util__WEBPACK_IMPORTED_MODULE_2__.getUniversalTime(startTime)) / _base_util__WEBPACK_IMPORTED_MODULE_2__.MS_PER_MINUTE *\n                            this.slotCount / this.interval;\n                        for (var k = 0; k < slotCount; k++) {\n                            startDate = (k === 0) ? new Date(startDate.getTime()) : new Date(startDate.getTime() + (60000 * interval));\n                            if (slotCount < 1) {\n                                startDate = this.adjustToNearestTimeSlot(startDate, interval);\n                            }\n                            endDate = new Date(startDate.getTime() + (60000 * interval));\n                            if (slotCount >= 1 && endDate.getTime() > endTime.getTime()) {\n                                break;\n                            }\n                            var position_2 = this.getPosition(startDate, endDate, false, (this.day + i));\n                            if (appPos > position_2) {\n                                break;\n                            }\n                            appPos = position_2;\n                            this.renderTimelineMoreIndicator(startTime, startDate, endDate, appHeight, interval, resIndex, appointmentsList, top_1, appLeft, appRight, cellTd, moreIndicator, appPos, position_2);\n                        }\n                    }\n                }\n            }\n        }\n        this.parent.renderTemplates();\n    };\n    TimelineEvent.prototype.adjustToNearestTimeSlot = function (inputTime, interval) {\n        // Parse the input time\n        var parsedTime = new Date(inputTime);\n        // Get the minutes of the input time in milliseconds\n        var minutesInMilliseconds = parsedTime.getHours() * 60 * 60 * 1000 + parsedTime.getMinutes() * 60 * 1000;\n        // Calculate the adjusted time in milliseconds (nearest time slot)\n        var adjustedMinutesInMilliseconds = Math.floor(minutesInMilliseconds / (interval * 60 * 1000)) * (interval * 60 * 1000);\n        // Create a new Date object with the adjusted time\n        var adjustedTime = new Date(parsedTime.getTime());\n        adjustedTime.setHours(adjustedMinutesInMilliseconds / (60 * 60 * 1000) % 24);\n        adjustedTime.setMinutes((adjustedMinutesInMilliseconds % (60 * 60 * 1000)) / (60 * 1000));\n        // Return the adjusted time in string format\n        return adjustedTime;\n    };\n    TimelineEvent.prototype.renderTimelineMoreIndicator = function (startTime, startDate, endDate, appHeight, interval, resIndex, appointmentsList, top, appLeft, appRight, cellTd, moreIndicator, appPos, position) {\n        appLeft = (this.parent.enableRtl) ? appRight = position : position;\n        appPos = (this.parent.enableRtl) ? appRight : appLeft;\n        appPos = (Math.floor(appPos / this.cellWidth) * this.cellWidth);\n        if ((cellTd && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(moreIndicator)) ||\n            (!this.isAlreadyAvail(appPos, cellTd))) {\n            var startDateTime = (this.parent.activeViewOptions.option === 'TimelineMonth' || this.renderType === 'day') ? new Date(+startTime) : startDate;\n            var slotStartTime = (new Date(startDateTime.setMinutes(Math.floor(startDateTime.getMinutes() / interval) * interval)));\n            var slotEndTime = new Date(slotStartTime.getTime() + (60000 * interval));\n            var groupIndex = void 0;\n            if (this.parent.activeViewOptions.group.resources.length > 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(resIndex)) {\n                groupIndex = resIndex.toString();\n            }\n            var filterEvents = this.getFilterEvents(startDate, endDate, slotStartTime, slotEndTime, groupIndex, appointmentsList);\n            var appArea = this.cellHeight - this.moreIndicatorHeight;\n            appHeight = this.withIndicator ? appArea - EVENT_GAP : appHeight;\n            var renderedAppCount = Math.floor(appArea / (appHeight + EVENT_GAP));\n            var count = this.parent.activeViewOptions.maxEventsPerRow && !this.parent.eventSettings.enableIndicator\n                ? filterEvents.length - this.parent.activeViewOptions.maxEventsPerRow : (filterEvents.length - renderedAppCount) <= 0 ? 1\n                : filterEvents.length - renderedAppCount;\n            var moreIndicatorElement = void 0;\n            if (this.renderType === 'day') {\n                moreIndicatorElement = this.getMoreIndicatorElement(count, startDate, endDate);\n            }\n            else {\n                moreIndicatorElement = this.getMoreIndicatorElement(count, slotStartTime, slotEndTime);\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(groupIndex)) {\n                moreIndicatorElement.setAttribute('data-group-index', groupIndex);\n            }\n            moreIndicatorElement.style.top = top + appArea + 'px';\n            moreIndicatorElement.style.width = this.cellWidth + 'px';\n            moreIndicatorElement.style.left = (Math.floor(appLeft / this.cellWidth) * this.cellWidth) + 'px';\n            moreIndicatorElement.style.right = (Math.floor(appRight / this.cellWidth) * this.cellWidth) + 'px';\n            this.renderElement(cellTd, moreIndicatorElement);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(moreIndicatorElement, 'click', this.moreIndicatorClick, this);\n        }\n    };\n    TimelineEvent.prototype.updateCellHeight = function (cell, height) {\n        var cellHeight = cell.style.height === '' ? this.cellHeight : parseInt(cell.style.height, 10);\n        if (height > cellHeight) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(cell, { 'height': height + 'px' });\n            if (this.parent.activeViewOptions.group.resources.length > 0) {\n                var resourceCell = this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.RESOURCE_COLUMN_TABLE_CLASS + ' ' + 'tbody td[data-group-index=\"' +\n                    cell.getAttribute('data-group-index') + '\"]');\n                if (resourceCell) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(resourceCell, { 'height': height + 'px' });\n                }\n            }\n            var monthHeader = this.parent.element.querySelector('.e-month-header-wrapper table tr:nth-child(' +\n                (cell.parentElement.rowIndex + 1) + ') td');\n            if (monthHeader) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(monthHeader, { 'height': height + 'px' });\n            }\n        }\n    };\n    TimelineEvent.prototype.getFirstChild = function (index) {\n        var query = '.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.CONTENT_TABLE_CLASS + ' tbody td';\n        var groupIndex = '';\n        if (this.parent.activeViewOptions.group.resources.length > 0) {\n            groupIndex = '[data-group-index=\"' + index.toString() + '\"]';\n        }\n        var td = this.parent.element.querySelector(query + groupIndex);\n        return td;\n    };\n    TimelineEvent.prototype.updateBlockElements = function () {\n        var blockElement = [].slice.call(this.element.querySelectorAll('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.BLOCK_APPOINTMENT_CLASS));\n        for (var _i = 0, blockElement_1 = blockElement; _i < blockElement_1.length; _i++) {\n            var element = blockElement_1[_i];\n            var resIndex = parseInt(element.getAttribute('data-group-index'), 10);\n            var firstChild = this.getFirstChild(resIndex);\n            element.style.height = firstChild.offsetHeight + 'px';\n            var width = element.offsetWidth / firstChild.offsetWidth;\n            element.style.width = (firstChild.offsetWidth * width) + 'px';\n        }\n        var blockIndicator = [].slice.call(this.element.querySelectorAll('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.BLOCK_INDICATOR_CLASS));\n        for (var _a = 0, blockIndicator_1 = blockIndicator; _a < blockIndicator_1.length; _a++) {\n            var element = blockIndicator_1[_a];\n            var resIndex = parseInt(element.getAttribute('data-group-index'), 10);\n            element.style.top = this.getRowTop(resIndex) +\n                this.getFirstChild(resIndex).offsetHeight - BLOCK_INDICATOR_HEIGHT + 'px';\n        }\n    };\n    TimelineEvent.prototype.getStartTime = function (event, eventData) {\n        var startTime = event[this.fields.startTime];\n        var schedule = _base_util__WEBPACK_IMPORTED_MODULE_2__.getStartEndHours(startTime, this.startHour, this.endHour);\n        if (this.isDayProcess()) {\n            startTime = event[this.fields.startTime];\n        }\n        else {\n            if (schedule.startHour.getTime() >= eventData[this.fields.startTime]) {\n                startTime = schedule.startHour;\n            }\n            else if (schedule.endHour.getTime() <= eventData[this.fields.startTime]) {\n                startTime = this.getNextDay(schedule.startHour, eventData);\n            }\n            else {\n                startTime = eventData[this.fields.startTime];\n            }\n        }\n        // To overcome the overflow\n        eventData.trimStartTime = (event[this.fields.isAllDay]) ? schedule.startHour : eventData[this.fields.startTime];\n        return startTime;\n    };\n    TimelineEvent.prototype.getNextDay = function (startTime, eventData) {\n        var startDate;\n        for (var i = 1; i <= this.dateRender.length; i++) {\n            startDate = _base_util__WEBPACK_IMPORTED_MODULE_2__.addDays(startTime, i);\n            if (this.parent.getIndexOfDate(this.dateRender, _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(new Date(startTime.getTime()))) !== -1) {\n                eventData.count = eventData.count - 1;\n                return startDate;\n            }\n        }\n        return startDate;\n    };\n    TimelineEvent.prototype.getEndTime = function (event, eventData) {\n        var endTime = event[this.fields.endTime];\n        var schedule = _base_util__WEBPACK_IMPORTED_MODULE_2__.getStartEndHours(endTime, this.startHour, this.endHour);\n        if (this.isDayProcess()) {\n            endTime = eventData[this.fields.endTime];\n        }\n        else {\n            endTime = eventData[this.fields.endTime];\n            if (schedule.endHour.getTime() <= eventData[this.fields.endTime] || event[this.fields.isAllDay]) {\n                endTime = schedule.endHour;\n            }\n            if (schedule.startHour.getTime() >= eventData[this.fields.endTime].getTime() && !event[this.fields.isAllDay]) {\n                endTime = this.getPreviousDay(schedule.startHour, schedule.endHour, eventData);\n            }\n        }\n        // To overcome the overflow\n        eventData.trimEndTime = (event[this.fields.isAllDay]) ? schedule.endHour : eventData[this.fields.endTime];\n        return endTime;\n    };\n    TimelineEvent.prototype.getPreviousDay = function (startTime, endTime, eventData) {\n        for (var i = 1; i <= this.dateRender.length; i++) {\n            var endDate = _base_util__WEBPACK_IMPORTED_MODULE_2__.addDays(endTime, -i);\n            if (this.parent.getIndexOfDate(this.dateRender, _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(new Date(startTime.getTime()))) !== -1) {\n                endDate = _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(new Date(endDate.getTime()));\n                endDate.setHours(endTime.getHours(), endTime.getMinutes(), endTime.getSeconds());\n                var count = eventData.count;\n                var actualEndTime = eventData[this.fields.endTime];\n                eventData.count = actualEndTime.getHours() !== 0 || actualEndTime.getMinutes() !== 0 ? count - 1 : count;\n                return endDate;\n            }\n        }\n        return eventData[this.fields.endTime];\n    };\n    TimelineEvent.prototype.getEventWidth = function (startDate, endDate, isAllDay, count) {\n        if (this.renderType === 'day' || isAllDay) {\n            return (count * this.slotsPerDay) * this.cellWidth;\n        }\n        if (this.isSameDay(startDate, endDate)) {\n            return this.getSameDayEventsWidth(startDate, endDate);\n        }\n        else {\n            return this.getSpannedEventsWidth(startDate, endDate, count);\n        }\n    };\n    TimelineEvent.prototype.getSameDayEventsWidth = function (startDate, endDate) {\n        return ((_base_util__WEBPACK_IMPORTED_MODULE_2__.getUniversalTime(endDate) - _base_util__WEBPACK_IMPORTED_MODULE_2__.getUniversalTime(startDate)) /\n            _base_util__WEBPACK_IMPORTED_MODULE_2__.MS_PER_MINUTE * (this.cellWidth * this.slotCount) / this.getIntervalInMinutes(startDate));\n    };\n    TimelineEvent.prototype.getSpannedEventsWidth = function (startDate, endDate, diffInDays) {\n        var width = (diffInDays * this.slotsPerDay) * this.cellWidth;\n        var endWidth;\n        var start = _base_util__WEBPACK_IMPORTED_MODULE_2__.getStartEndHours(_base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(new Date(startDate.getTime())), this.startHour, this.endHour);\n        var startWidth = this.getSameDayEventsWidth(start.startHour, startDate);\n        if (this.parent.getIndexOfDate(this.dateRender, _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(new Date(endDate.getTime()))) === -1) {\n            endWidth = 0;\n        }\n        else {\n            var _a = _base_util__WEBPACK_IMPORTED_MODULE_2__.getStartEndHours(_base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(new Date(endDate.getTime())), this.startHour, this.endHour), startHour = _a.startHour, endHour = _a.endHour;\n            var interval = this.interval / this.slotCount;\n            var lastSlotEndTime = this.getEndTimeOfLastSlot(startHour, endHour, interval);\n            var adjustedEndDate = endHour < lastSlotEndTime ? endHour : lastSlotEndTime;\n            endWidth = this.getSameDayEventsWidth(endDate, adjustedEndDate);\n            endWidth = ((this.slotsPerDay * this.cellWidth) === endWidth) ? 0 : endWidth;\n        }\n        var spannedWidth = startWidth + endWidth;\n        return (width > spannedWidth) ? width - spannedWidth : width - startWidth;\n    };\n    TimelineEvent.prototype.getEndTimeOfLastSlot = function (startHour, endHour, interval) {\n        var minutesInDay = (endHour.getTime() - startHour.getTime()) / (1000 * 60);\n        var lastSlotEndMinutes = Math.floor(minutesInDay / interval) * interval;\n        var lastSlotEndTime = new Date(startHour);\n        lastSlotEndTime.setMinutes(lastSlotEndMinutes);\n        return lastSlotEndTime;\n    };\n    TimelineEvent.prototype.isSameDay = function (startTime, endTime) {\n        var startDay = this.parent.getIndexOfDate(this.dateRender, _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(new Date(startTime.getTime())));\n        var endDay = this.parent.getIndexOfDate(this.dateRender, _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(new Date(endTime.getTime())));\n        return (startDay === endDay);\n    };\n    TimelineEvent.prototype.getAppointmentLeft = function (schedule, startTime, day) {\n        var slotTd = (this.isSameDay(startTime, schedule.startHour)) ?\n            ((_base_util__WEBPACK_IMPORTED_MODULE_2__.getUniversalTime(startTime) - _base_util__WEBPACK_IMPORTED_MODULE_2__.getUniversalTime(schedule.startHour)) /\n                (_base_util__WEBPACK_IMPORTED_MODULE_2__.MS_PER_MINUTE * this.getIntervalInMinutes(startTime))) * this.slotCount : 0;\n        if (day === 0) {\n            return slotTd;\n        }\n        else {\n            var daySlot = Math.round(((_base_util__WEBPACK_IMPORTED_MODULE_2__.getUniversalTime(schedule.endHour) - _base_util__WEBPACK_IMPORTED_MODULE_2__.getUniversalTime(schedule.startHour)) /\n                this.interval / _base_util__WEBPACK_IMPORTED_MODULE_2__.MS_PER_MINUTE) * this.slotCount);\n            return (daySlot * day) + slotTd;\n        }\n    };\n    TimelineEvent.prototype.getPosition = function (startTime, endTime, isAllDay, day) {\n        if (this.renderType === 'day' || isAllDay) {\n            return (day * this.slotsPerDay) * this.cellWidth;\n        }\n        var currentDate = _base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(new Date(this.dateRender[parseInt(day.toString(), 10)].getTime()));\n        var schedule = _base_util__WEBPACK_IMPORTED_MODULE_2__.getStartEndHours(currentDate, this.startHour, this.endHour);\n        var cellIndex;\n        if (schedule.endHour.getTime() <= endTime.getTime() && schedule.startHour.getTime() >= startTime.getTime()) {\n            cellIndex = this.getAppointmentLeft(schedule, schedule.startHour, day);\n        }\n        else if (schedule.endHour.getTime() <= endTime.getTime()) {\n            cellIndex = this.getAppointmentLeft(schedule, startTime, day);\n        }\n        else if (schedule.startHour.getTime() >= startTime.getTime()) {\n            cellIndex = this.getAppointmentLeft(schedule, schedule.startHour, day);\n        }\n        else {\n            cellIndex = this.getAppointmentLeft(schedule, startTime, day);\n        }\n        return cellIndex * this.cellWidth;\n    };\n    TimelineEvent.prototype.getFilterEvents = function (startDate, endDate, startTime, endTime, gIndex, eventsList) {\n        if (this.renderType === 'day') {\n            return this.getFilteredEvents(startDate, endDate, gIndex, eventsList);\n        }\n        else {\n            return this.getFilteredEvents(startTime, endTime, gIndex, eventsList);\n        }\n    };\n    TimelineEvent.prototype.getIntervalInMinutes = function (startDate) {\n        if (this.slotsPerDay !== 1) {\n            return this.interval;\n        }\n        var hoursRange = _base_util__WEBPACK_IMPORTED_MODULE_2__.getStartEndHours(_base_util__WEBPACK_IMPORTED_MODULE_2__.resetTime(new Date(startDate.getTime())), this.startHour, this.endHour);\n        return (hoursRange.endHour.getTime() - hoursRange.startHour.getTime()) / _base_util__WEBPACK_IMPORTED_MODULE_2__.MS_PER_MINUTE;\n    };\n    TimelineEvent.prototype.isAlreadyAvail = function (appPos, cellTd) {\n        var moreIndicator = [].slice.call(cellTd.querySelectorAll('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.MORE_INDICATOR_CLASS));\n        for (var i = 0; i < moreIndicator.length; i++) {\n            var indicatorPos = void 0;\n            if (moreIndicator) {\n                indicatorPos = (this.parent.enableRtl) ? moreIndicator[parseInt(i.toString(), 10)].style.right : moreIndicator[parseInt(i.toString(), 10)].style.left;\n            }\n            if (parseInt(indicatorPos, 10) === Math.floor(appPos)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    TimelineEvent.prototype.getRowTop = function (resIndex) {\n        if (this.parent.activeViewOptions.group.resources.length > 0 && !this.parent.uiStateValues.isGroupAdaptive) {\n            return this.parent.element.querySelector('.' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.CONTENT_WRAP_CLASS +\n                ' ' + 'tbody td[data-group-index=\"' + resIndex.toString() + '\"]').offsetTop;\n        }\n        return 0;\n    };\n    TimelineEvent.prototype.getCellTd = function () {\n        var wrapIndex = this.parent.uiStateValues.isGroupAdaptive ? 0 : this.rowIndex;\n        return this.eventContainers[parseInt(wrapIndex.toString(), 10)];\n    };\n    TimelineEvent.prototype.renderBlockIndicator = function (cellTd, position, resIndex) {\n        // No need to render block icon for Year, Month and Week header rows\n        if (this.parent.headerRows.length > 0 &&\n            (this.parent.headerRows[this.parent.headerRows.length - 1].option !== 'Hour' ||\n                this.parent.headerRows[this.parent.headerRows.length - 1].option !== 'Date')) {\n            return;\n        }\n        position = (Math.floor(position / this.cellWidth) * this.cellWidth) + this.cellWidth - BLOCK_INDICATOR_WIDTH;\n        if (!this.isAlreadyAvail(position, cellTd)) {\n            var blockIndicator = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-icons ' + _base_css_constant__WEBPACK_IMPORTED_MODULE_1__.BLOCK_INDICATOR_CLASS });\n            if (this.parent.activeViewOptions.group.resources.length > 0) {\n                blockIndicator.setAttribute('data-group-index', resIndex.toString());\n            }\n            if (this.parent.enableRtl) {\n                blockIndicator.style.right = position + 'px';\n            }\n            else {\n                blockIndicator.style.left = position + 'px';\n            }\n            blockIndicator.style.top = this.getRowTop(resIndex) + this.cellHeight - BLOCK_INDICATOR_HEIGHT + 'px';\n            this.renderElement(cellTd, blockIndicator);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    TimelineEvent.prototype.setMaxEventHeight = function (event, cell) {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(event, {\n            'height': (this.cellHeight - (this.maxHeight ? 0 : EVENT_GAP) - (this.maxHeight ? 0 : this.moreIndicatorHeight)) + 'px'\n        });\n    };\n    TimelineEvent.prototype.isDayProcess = function () {\n        if (this.parent.currentView === 'TimelineMonth' || !this.parent.activeViewOptions.timeScale.enable ||\n            (this.parent.activeViewOptions.headerRows.length > 0 &&\n                this.parent.activeViewOptions.headerRows.slice(-1)[0].option !== 'Hour')) {\n            return true;\n        }\n        return false;\n    };\n    TimelineEvent.prototype.destroy = function () {\n        this.renderType = null;\n        this.eventContainers = null;\n        this.dayLength = null;\n        this.content = null;\n        _super.prototype.destroy.call(this);\n        this.parent = null;\n    };\n    return TimelineEvent;\n}(_month__WEBPACK_IMPORTED_MODULE_3__.MonthEvent));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-schedule/src/schedule/event-renderer/timeline-view.js?");

/***/ })

}]);