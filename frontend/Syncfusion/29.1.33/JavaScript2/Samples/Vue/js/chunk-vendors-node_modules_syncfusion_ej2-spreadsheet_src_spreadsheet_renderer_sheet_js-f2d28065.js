"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-spreadsheet_src_spreadsheet_renderer_sheet_js-f2d28065"],{

/***/ "./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/renderer/sheet.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/renderer/sheet.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SheetRender: () => (/* binding */ SheetRender)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _workbook_common_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../workbook/common/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/common/index.js\");\n/* harmony import */ var _workbook_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../workbook/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/index.js\");\n/* harmony import */ var _common_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/common/index.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Sheet module is used to render Sheet\n *\n * @hidden\n */\nvar SheetRender = /** @class */ (function () {\n    function SheetRender(parent) {\n        this.colGroupWidth = 30; //Row header and selectall table colgroup width\n        this.parent = parent;\n        this.col = parent.createElement('col');\n        this.rowRenderer = parent.serviceLocator.getService('row');\n        this.cellRenderer = parent.serviceLocator.getService('cell');\n        this.addEventListener();\n    }\n    SheetRender.prototype.refreshSelectALLContent = function () {\n        var cell;\n        var sheet = this.parent.getActiveSheet();\n        if (sheet.frozenColumns || sheet.frozenRows) {\n            var tHead = this.getSelectAllTable().querySelector('thead');\n            var row = this.rowRenderer.render();\n            tHead.appendChild(row);\n            cell = this.parent.createElement('th', { className: 'e-select-all-cell' });\n            row.appendChild(cell);\n        }\n        else {\n            cell = this.headerPanel.firstElementChild;\n            cell.classList.add('e-select-all-cell');\n        }\n        cell.appendChild(this.parent.createElement('button', {\n            className: 'e-selectall', id: this.parent.element.id + \"_select_all\",\n            attrs: { 'aria-label': this.parent.serviceLocator.getService(_common_index__WEBPACK_IMPORTED_MODULE_3__.locale).getConstant('SelectAll'), 'type': 'button' }\n        }));\n    };\n    SheetRender.prototype.updateLeftColGroup = function (width, rowHdr) {\n        if (width) {\n            this.colGroupWidth = width;\n        }\n        if (!rowHdr) {\n            rowHdr = this.getRowHeaderPanel();\n        }\n        var table = rowHdr.querySelector('table');\n        var sheet = this.parent.getActiveSheet();\n        var frag = document.createDocumentFragment(); // Using a fragment for batch updates\n        var colGrp;\n        if (width) {\n            table.querySelector('colgroup').firstElementChild.style.width = this.colGroupWidth + \"px\";\n        }\n        else {\n            colGrp = this.parent.createElement('colgroup');\n            var col = this.col.cloneNode();\n            col.style.width = this.colGroupWidth + \"px\";\n            frag.appendChild(col);\n            colGrp.appendChild(frag);\n            table.insertBefore(colGrp, table.querySelector('tbody'));\n        }\n        if (sheet.frozenRows || sheet.frozenColumns) {\n            table = this.getSelectAllTable();\n            if (width) {\n                table.querySelector('colgroup').firstElementChild.style.width = this.colGroupWidth + \"px\";\n            }\n            else {\n                table.insertBefore(colGrp.cloneNode(true), table.querySelector('thead'));\n            }\n        }\n        this.setPanelWidth(sheet, rowHdr);\n        this.setPanelHeight(sheet);\n    };\n    SheetRender.prototype.setPanelWidth = function (sheet, rowHdr, isRtlChange) {\n        var scrollSize = this.getScrollSize(true);\n        var width = this.getRowHeaderWidth(sheet);\n        var isRtl = this.parent.enableRtl;\n        var offset = isRtl ? 'right' : 'left';\n        var rtlOffset;\n        var colHeaderPanel = this.getColHeaderPanel();\n        var contentPanel = this.getContentPanel();\n        if (isRtlChange) {\n            rtlOffset = isRtl ? 'left' : 'right';\n            contentPanel.style[\"\" + rtlOffset] = colHeaderPanel.style[\"\" + rtlOffset] = '';\n        }\n        if (sheet.frozenColumns) {\n            var frozenCol = document.getElementById(this.parent.element.id + '_sheet').getElementsByClassName('e-frozen-column')[0];\n            frozenCol.style.height = \"calc(100% - \" + scrollSize + \"px)\";\n            if (isRtlChange) {\n                frozenCol.style[\"\" + rtlOffset] = '';\n            }\n            frozenCol.style[\"\" + offset] = width - (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.getDPRValue)(1) + 'Px';\n            frozenCol.style.display = '';\n        }\n        var widthCalc = \"calc(100% - \" + width + \"px)\";\n        this.setHeaderPanelWidth(this.getSelectAllContent(), width);\n        colHeaderPanel.style.width = widthCalc;\n        colHeaderPanel.style[\"\" + offset] = width + 'px';\n        this.setHeaderPanelWidth(rowHdr, width);\n        contentPanel.style.width = widthCalc;\n        contentPanel.style[\"\" + offset] = width + 'px';\n        var scroll = (this.contentPanel.nextElementSibling ? this.contentPanel.nextElementSibling : null);\n        if (scroll) {\n            if (scrollSize) {\n                scroll.style.height = scrollSize + 1 + 'px';\n            }\n            else {\n                scroll.style.height = '1px';\n                scroll.style.borderTopWidth = '0px';\n            }\n            scroll = scroll.firstElementChild;\n            if (isRtlChange) {\n                scroll.style[\"\" + rtlOffset] = '';\n            }\n            scroll.style[\"\" + offset] = width + 'px';\n            scroll.style.width = widthCalc;\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.userAgent.indexOf('Mac OS') > -1 && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'safari') {\n                scroll.style.height = '7px';\n                scroll.style.top = '-7px';\n            }\n        }\n    };\n    SheetRender.prototype.getScrollSize = function (addOffset) {\n        var scrollSize = parseInt(this.headerPanel.style[this.parent.enableRtl ? 'margin-left' : 'margin-right'], 10);\n        return scrollSize ? scrollSize + (addOffset ? 1 : 0) : 0;\n    };\n    SheetRender.prototype.setHeaderPanelWidth = function (content, width) {\n        var emptyCol = [].slice.call(content.querySelectorAll('col.e-empty'));\n        emptyCol.forEach(function (col) {\n            width += parseInt(col.style.width, 10);\n        });\n        content.style.width = width + 'px';\n    };\n    SheetRender.prototype.setPanelHeight = function (sheet) {\n        var scrollSize = this.getScrollSize(true);\n        var contentPanel = this.contentPanel;\n        var headerPanel = this.headerPanel;\n        if (sheet.frozenRows) {\n            var frozenHeight = this.getColHeaderHeight(sheet);\n            if (!sheet.showHeaders && !sheet.frozenColumns) {\n                headerPanel.style.height = frozenHeight + 'px';\n            }\n            else {\n                headerPanel.style.height = '';\n            }\n            contentPanel.style.height = \"calc(100% - \" + (frozenHeight + scrollSize) + \"px)\";\n            var frozenRow = document.getElementById(this.parent.element.id + '_sheet').getElementsByClassName('e-frozen-row')[0];\n            frozenRow.style.width = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? '100%' : \"calc(100% - \" + scrollSize + \"px)\";\n            frozenRow.style.top = frozenHeight - 1 - (sheet.showHeaders ? 1 : 0) + 'px';\n            frozenRow.style.display = '';\n        }\n        else {\n            contentPanel.style.height = \"calc(100% - \" + ((sheet.showHeaders ? (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.getDPRValue)(31) : 0) + scrollSize) + \"px)\";\n        }\n    };\n    SheetRender.prototype.renderPanel = function () {\n        this.contentPanel = this.parent.createElement('div', { className: 'e-main-panel', attrs: { 'tabindex': '0' } });\n        var sheet = this.parent.getActiveSheet();\n        var id = this.parent.element.id;\n        var frag = document.createDocumentFragment();\n        var rowHeader = this.parent.createElement('div', { className: 'e-row-header', id: id + \"_row_header\" });\n        frag.appendChild(rowHeader);\n        this.initHeaderPanel();\n        if (this.parent.allowScrolling) {\n            this.parent.scrollModule.setPadding();\n        }\n        var sheetEle = document.getElementById(this.parent.element.id + '_sheet');\n        if (sheet.frozenColumns) {\n            sheetEle.classList.add('e-frozen-columns');\n        }\n        if (sheet.frozenRows) {\n            sheetEle.classList.add('e-frozen-rows');\n        }\n        this.updateHideHeaders(sheet, sheetEle);\n        if (!sheet.showGridLines) {\n            sheetEle.classList.add('e-hide-gridlines');\n        }\n        var content = this.parent.createElement('div', { className: 'e-sheet-content', id: id + \"_main_content\" });\n        frag.appendChild(content);\n        if (!this.parent.allowScrolling) {\n            content.style.overflow = 'hidden';\n        }\n        if (sheet.frozenRows) {\n            sheetEle.appendChild(this.parent.createElement('div', { className: 'e-frozen-row', styles: 'display: none' }));\n        }\n        if (sheet.frozenColumns) {\n            sheetEle.appendChild(this.parent.createElement('div', { className: 'e-frozen-column', styles: 'display: none' }));\n        }\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.userAgent.indexOf('Mac OS') > -1 && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'safari') {\n            sheetEle.classList.add('e-mac-safari');\n        }\n        this.contentPanel.appendChild(frag); // Append all created elements to the content panel in a single operation using fragment.\n    };\n    SheetRender.prototype.initHeaderPanel = function () {\n        var id = this.parent.element.id;\n        var frag = document.createDocumentFragment();\n        this.headerPanel = this.parent.createElement('div', { className: 'e-header-panel' });\n        var selectAllContainer = this.parent.createElement('div', { className: 'e-selectall-container', id: id + \"_selectall\" });\n        frag.appendChild(selectAllContainer);\n        var columnHeader = this.parent.createElement('div', { className: 'e-column-header', id: id + \"_col_header\" });\n        frag.appendChild(columnHeader);\n        this.headerPanel.appendChild(frag);\n    };\n    SheetRender.prototype.createHeaderTable = function () {\n        var rowHdrEle = this.contentPanel.querySelector('.e-row-header');\n        var sheet = this.parent.getActiveSheet();\n        if (sheet.frozenRows || sheet.frozenColumns) {\n            this.updateTable(sheet.frozenRows ? ['thead', 'tbody'] : ['thead'], 'selectall', this.headerPanel.querySelector('.e-selectall-container'));\n        }\n        this.updateTable(sheet.frozenRows ? ['thead', 'tbody'] : ['thead'], 'colhdr', this.headerPanel.querySelector('.e-column-header'));\n        this.updateTable(['tbody'], 'rowhdr', rowHdrEle);\n        this.updateLeftColGroup(null, rowHdrEle);\n    };\n    SheetRender.prototype.updateTable = function (tagName, name, appendTo) {\n        var _this = this;\n        var frag = document.createDocumentFragment();\n        var table = this.parent.createElement('table', {\n            className: \"e-table e-\" + name + \"-table\", attrs: { 'role': 'grid' }\n        });\n        tagName.forEach(function (tag) { frag.appendChild(_this.parent.createElement(tag)); });\n        table.appendChild(frag);\n        appendTo.appendChild(table);\n    };\n    /**\n     * It is used to refresh the select all, row header, column header and content of the spreadsheet.\n     *\n     * @param {SheetRenderArgs} args - Specifies the cells, indexes, direction, skipUpdateOnFirst, top, left, initload properties.\n     * @returns {void}\n     */\n    SheetRender.prototype.renderTable = function (args) {\n        var _this = this;\n        var indexes;\n        var row;\n        var hRow;\n        var sheet = this.parent.getActiveSheet();\n        var cell;\n        var cellArgs;\n        var mergeBorderRows = [];\n        var frag = document.createDocumentFragment();\n        frag.appendChild(this.headerPanel);\n        frag.appendChild(this.contentPanel);\n        if (this.parent.allowScrolling) {\n            var scrollPanel = this.parent.createElement('div', { className: 'e-scrollbar' });\n            scrollPanel.appendChild(this.parent.createElement('div', { className: 'e-scroller' }));\n            frag.appendChild(scrollPanel);\n        }\n        this.createHeaderTable();\n        this.updateTable(['tbody'], 'content', this.contentPanel.lastElementChild);\n        var colGrp = this.parent.createElement('colgroup');\n        var col;\n        var cTBody = this.contentPanel.querySelector('.e-sheet-content tbody');\n        this.refreshSelectALLContent();\n        var selectAllColGrp = this.getSelectAllContent().querySelector('colgroup');\n        var rowHdrColGrp = this.getRowHeaderPanel().querySelector('colgroup');\n        var selectAllHdrRow = this.getSelectAllContent().querySelector('thead .e-header-row');\n        var rHdrTBody = this.contentPanel.querySelector('.e-row-header tbody');\n        var selectAllTBody = this.getSelectAllContent().querySelector('tbody');\n        var cHdrTHead = this.headerPanel.querySelector('.e-column-header thead');\n        var cHdrTBody = this.headerPanel.querySelector('.e-column-header tbody');\n        var cHdrRow = this.rowRenderer.render();\n        cHdrTHead.appendChild(cHdrRow);\n        this.getColHeaderTable().insertBefore(colGrp, cHdrTHead);\n        var frozenRow = this.parent.frozenRowCount(sheet);\n        var frozenCol = this.parent.frozenColCount(sheet);\n        var lastFrozenCol = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, frozenCol - 1, false, 'columns');\n        this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.beforeContentLoaded, { top: args.top, left: args.left });\n        var colCount = sheet.colCount.toString();\n        var rowCount = sheet.colCount.toString();\n        var layout = args.top && args.left ? 'RowColumn' : (args.top ? 'Row' : (args.left ? 'Column' : ''));\n        this.parent.getColHeaderTable().setAttribute('aria-colcount', colCount);\n        this.parent.getRowHeaderTable().setAttribute('aria-rowcount', rowCount);\n        var emptyRow;\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.parent.getContentTable(), { 'aria-rowcount': rowCount, 'aria-colcount': colCount });\n        args.cells.forEach(function (value, key) {\n            indexes = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.getRangeIndexes)(key);\n            if (indexes[1] === args.indexes[1] || !row) {\n                if (indexes[1] === args.indexes[1]) {\n                    hRow = _this.rowRenderer.render(indexes[0], true);\n                }\n                if (frozenCol && frozenRow && indexes[1] < frozenCol && indexes[0] < frozenRow) {\n                    emptyRow = selectAllTBody.querySelector('.e-empty');\n                    if (emptyRow) {\n                        selectAllTBody.insertBefore(hRow, emptyRow);\n                    }\n                    else {\n                        selectAllTBody.appendChild(hRow);\n                    }\n                    row = hRow;\n                }\n                else if (frozenCol && indexes[1] < frozenCol) {\n                    rHdrTBody.appendChild(hRow);\n                    row = hRow;\n                }\n                else {\n                    row = _this.rowRenderer.render(indexes[0]);\n                    if (frozenRow && indexes[0] < frozenRow) {\n                        emptyRow = cHdrTBody.querySelector('.e-empty');\n                        if (emptyRow) {\n                            cHdrTBody.insertBefore(row, emptyRow);\n                        }\n                        else {\n                            cHdrTBody.appendChild(row);\n                        }\n                    }\n                    else {\n                        cTBody.appendChild(row);\n                    }\n                    if (indexes[1] === args.indexes[1]) {\n                        if (frozenRow && indexes[0] < frozenRow) {\n                            selectAllTBody.appendChild(hRow);\n                        }\n                        else {\n                            rHdrTBody.appendChild(hRow);\n                        }\n                    }\n                }\n                if (indexes[1] === args.indexes[1]) {\n                    _this.cellRenderer.renderRowHeader(indexes[0], hRow);\n                }\n            }\n            cellArgs = { colIdx: indexes[1], rowIdx: indexes[0], cell: value, mergeBorderRows: mergeBorderRows,\n                address: key, lastCell: indexes[1] === args.indexes[3], isHeightCheckNeeded: true, row: row, hRow: hRow,\n                pRow: row.previousSibling, pHRow: hRow.previousSibling, isRefreshing: args.isRefreshing,\n                first: layout ? (layout.includes('Row') ? (indexes[0] === args.indexes[0] ? 'Row' : (layout.includes('Column') ? (indexes[1] === args.indexes[1] ? 'Column' : '') : '')) : (indexes[1] === args.indexes[1] ? 'Column' : '')) : '' };\n            cell = _this.cellRenderer.render(cellArgs);\n            var notFirstRow = _this.parent.scrollSettings.enableVirtualization && _this.parent.viewport.topIndex !==\n                (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, 0, true);\n            var notFirstCol = _this.parent.scrollSettings.enableVirtualization && _this.parent.viewport.leftIndex !==\n                (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, 0, true, 'columns');\n            if (notFirstRow) {\n                _this.checkRowMerge(indexes, args.indexes, cell, value, sheet);\n            }\n            if (notFirstCol) {\n                _this.checkColMerge(indexes, args.indexes, cell, value, sheet);\n            }\n            if (frozenCol && indexes[1] === lastFrozenCol) {\n                row = null;\n            }\n            if (indexes[0] === args.indexes[0]) {\n                if (frozenCol && indexes[1] < frozenCol) {\n                    col = _this.updateCol(sheet, indexes[1], selectAllColGrp);\n                    var empty = rowHdrColGrp.querySelector('.e-empty');\n                    if (empty) {\n                        rowHdrColGrp.insertBefore(col.cloneNode(true), empty);\n                    }\n                    else {\n                        rowHdrColGrp.appendChild(col.cloneNode(true));\n                    }\n                    _this.cellRenderer.renderColHeader(indexes[1], selectAllHdrRow);\n                }\n                else {\n                    _this.updateCol(sheet, indexes[1], colGrp);\n                    _this.cellRenderer.renderColHeader(indexes[1], cHdrRow);\n                }\n            }\n        });\n        if (this.parent.isReact) {\n            this.parent['renderReactTemplates']();\n        }\n        (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.updateMergeBorder)(this.parent, mergeBorderRows);\n        cTBody.parentElement.insertBefore(colGrp.cloneNode(true), cTBody);\n        (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.getUpdateUsingRaf)(function () {\n            if (!_this.parent) {\n                return;\n            }\n            var content = _this.parent.getMainContent();\n            var sheetContent = document.getElementById(_this.parent.element.id + '_sheet');\n            if (sheetContent.childElementCount && sheetContent.querySelector('.e-header-panel') !== _this.headerPanel) {\n                var sheetChild = sheetContent.children;\n                for (var i = 0; i < sheetChild.length; i++) {\n                    if (!sheetChild[i].classList.contains('e-frozen-row') &&\n                        !sheetChild[i].classList.contains('e-frozen-column') &&\n                        !sheetChild[i].classList.contains('e-ss-overlay')) {\n                        sheetContent.removeChild(sheetChild[i]);\n                    }\n                }\n            }\n            sheetContent.appendChild(frag);\n            sheetContent.style.backgroundColor = '';\n            if (sheet.conditionalFormats && sheet.conditionalFormats.length) {\n                _this.parent.notify(_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.applyCF, { indexes: args.indexes });\n            }\n            _this.checkRowHeightChanged(args, sheet);\n            if (args.top) {\n                content.parentElement.scrollTop = args.top;\n            }\n            if (args.left) {\n                content.scrollLeft = args.left;\n                _this.parent.getColumnHeaderContent().scrollLeft = args.left;\n            }\n            _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.contentLoaded, args);\n            _this.checkTableWidth(sheet);\n            _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.editOperation, { action: 'renderEditor', initLoad: args.initLoad && !_this.parent.isOpen });\n            if (!args.initLoad && !_this.parent.isOpen) {\n                _this.parent.hideSpinner();\n            }\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.setAriaOptions)(content, { busy: false });\n            _this.parent.trigger(_common_index__WEBPACK_IMPORTED_MODULE_3__.dataBound, {});\n            if (_this.parent.isEdit) {\n                _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.initiateEdit, null);\n            }\n            if (args.openOptions && args.openOptions.eventArgs && args.openOptions.eventArgs.triggerEvent) {\n                _this.parent.trigger('openComplete', { response: args.openOptions });\n            }\n            if (args.initLoad) {\n                var triggerEvent = true;\n                if (_this.parent.scrollSettings.enableVirtualization) {\n                    for (var i = 0; i < sheet.ranges.length; i++) {\n                        if (sheet.ranges[i].info.count - 1 > _this.parent.viewport.bottomIndex) {\n                            triggerEvent = false;\n                            break;\n                        }\n                    }\n                }\n                if (triggerEvent) {\n                    if (_this.parent.isReact) {\n                        setTimeout(function () {\n                            if (!_this.parent) {\n                                return;\n                            }\n                            _this.triggerCreatedEvent();\n                        });\n                    }\n                    else {\n                        _this.triggerCreatedEvent();\n                    }\n                }\n                else if (!_this.parent.isOpen) {\n                    _this.parent.hideSpinner();\n                }\n            }\n        });\n    };\n    SheetRender.prototype.triggerCreatedEvent = function () {\n        if (!this.parent.isOpen) {\n            this.parent.hideSpinner();\n        }\n        if (this.parent.createdHandler) {\n            if (this.parent.createdHandler.observers) {\n                this.parent['created'].observers =\n                    this.parent.createdHandler.observers;\n                if (this.parent.isAngular &&\n                    this.parent.createdHandler.currentObservers) {\n                    this.parent['created'].currentObservers =\n                        this.parent.createdHandler.currentObservers;\n                }\n            }\n            else {\n                this.parent.setProperties({ created: this.parent.createdHandler }, true);\n            }\n            this.parent.createdHandler = undefined;\n            this.parent.trigger(_common_index__WEBPACK_IMPORTED_MODULE_3__.created, null);\n            if (this.parent) {\n                this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.clearUndoRedoCollection, null);\n            }\n        }\n        if (this.parent) {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.spreadsheetCreated, null);\n        }\n    };\n    /**\n     * This method is used to check whether row height increased above the viewport after import\n     *\n     * @param {Object} args - Specify the args.\n     * @param {number} args.top - Specify the top value.\n     * @param {number} args.left - Specify the left value.\n     * @param {SheetModel} sheet - Specify the sheet.\n     * @returns {void} - This method is used to check whether row height increased above the viewport after import\n     */\n    SheetRender.prototype.checkRowHeightChanged = function (args, sheet) {\n        var eventArgs = { top: args.top, left: args.left, sheet: sheet };\n        this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.getUpdatedScrollPosition, eventArgs);\n        if (args.top !== eventArgs.top) {\n            if (this.parent.scrollModule && this.parent.scrollModule.offset.top.idx && (eventArgs.top - args.top) <\n                (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowHeight)(sheet, this.parent.scrollModule.offset.top.idx)) {\n                this.parent.scrollModule.offset.top.size = eventArgs.top;\n            }\n            args.top = eventArgs.top;\n        }\n        if (args.left !== eventArgs.left) {\n            if (this.parent.scrollModule && this.parent.scrollModule.offset.left.idx && (eventArgs.left - args.left) <\n                (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnWidth)(sheet, this.parent.scrollModule.offset.left.idx)) {\n                this.parent.scrollModule.offset.left.size = eventArgs.left;\n            }\n            args.left = eventArgs.left;\n        }\n    };\n    SheetRender.prototype.checkTableWidth = function (sheet) {\n        if (this.parent.scrollSettings.isFinite && !this.parent.scrollSettings.enableVirtualization && sheet.colCount - 1 ===\n            this.parent.viewport.rightIndex) {\n            var cellsWidth = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, this.parent.viewport.leftIndex + this.parent.frozenColCount(sheet), this.parent.viewport.rightIndex);\n            var rowHdrWidth = this.getRowHeaderWidth(sheet);\n            var scrollSize = this.getScrollSize();\n            if (cellsWidth < this.contentPanel.getBoundingClientRect().width - rowHdrWidth - scrollSize) {\n                this.getContentPanel().style.width = cellsWidth + 'px';\n                this.getColHeaderPanel().style.width = cellsWidth + 'px';\n            }\n            else if (!this.getContentPanel().style.width.includes('calc')) {\n                this.getContentPanel().style.width = \"calc(100% - \" + rowHdrWidth + \"px)\";\n                this.getColHeaderPanel().style.width = \"calc(100% - \" + rowHdrWidth + \"px)\";\n            }\n        }\n    };\n    SheetRender.prototype.clearCFResult = function (sheet) {\n        if (sheet.conditionalFormats && sheet.conditionalFormats.length) {\n            sheet.conditionalFormats.forEach(function (cfRule) {\n                delete cfRule.result;\n            });\n        }\n    };\n    SheetRender.prototype.refreshColumnContent = function (args) {\n        var _this = this;\n        var row;\n        var count = 0;\n        var sheet = this.parent.getActiveSheet();\n        var cellArgs;\n        var mergeBorderRows = [];\n        var frag = document.createDocumentFragment();\n        var hFrag = document.createDocumentFragment();\n        var tBody = this.parent.element.querySelector('.e-sheet-content tbody');\n        var hTBody = this.parent.element.querySelector('.e-column-header tbody');\n        var colGrp = this.parent.element.querySelector('.e-sheet-content colgroup');\n        colGrp = colGrp.cloneNode();\n        frag.appendChild(colGrp);\n        tBody = frag.appendChild(tBody.cloneNode(true));\n        var hColGrp = colGrp.cloneNode();\n        hFrag.appendChild(hColGrp);\n        var tHead = this.parent.element.querySelector('.e-column-header thead');\n        tHead = hFrag.appendChild(tHead.cloneNode(true));\n        var hRow = tHead.querySelector('tr');\n        hRow.innerText = '';\n        var frozenRow = this.parent.frozenRowCount(sheet);\n        var frozenCol = this.parent.frozenColCount(sheet);\n        if (frozenRow) {\n            hTBody = hFrag.appendChild(hTBody.cloneNode(true));\n        }\n        var lastFrozenRow = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, frozenRow - 1, false);\n        var notFirstRow = this.parent.scrollSettings.enableVirtualization && this.parent.viewport.topIndex !==\n            (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, 0, true);\n        this.clearCFResult(sheet);\n        args.cells.forEach(function (value, key) {\n            var indexes = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.getRangeIndexes)(key);\n            if (indexes[0] === args.indexes[0]) {\n                var col = _this.updateCol(sheet, indexes[1], hColGrp);\n                colGrp.appendChild(col.cloneNode());\n                _this.cellRenderer.renderColHeader(indexes[1], hRow);\n            }\n            if (indexes[1] - frozenCol === args.indexes[1]) {\n                row = (indexes[0] < frozenRow) ? hTBody.children[count] : tBody.children[count];\n                if (row) {\n                    row.innerText = '';\n                    count++;\n                }\n                else {\n                    return;\n                }\n            }\n            if (!row) {\n                return;\n            }\n            cellArgs = {\n                colIdx: indexes[1], rowIdx: indexes[0], cell: value, address: key, row: row, pRow: row.previousSibling,\n                first: !args.skipUpdateOnFirst && indexes[1] === args.indexes[1] ? 'Column' :\n                    (notFirstRow && indexes[0] === args.indexes[0] ? 'Row' : ''), isRefreshing: true, mergeBorderRows: mergeBorderRows\n            };\n            var cell = _this.cellRenderer.render(cellArgs);\n            _this.checkColMerge(indexes, args.indexes, cell, value, sheet);\n            if (frozenRow && indexes[0] === lastFrozenRow) {\n                count = 0;\n            } // Reset count for frozen row\n        });\n        var appendColumns = function () {\n            var table = _this.getColHeaderTable();\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.removeAllChildren)(table);\n            table.appendChild(hFrag);\n            table = _this.getContentTable();\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.removeAllChildren)(table);\n            table.appendChild(frag);\n            _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.virtualContentLoaded, { refresh: 'Column', prevRowColCnt: args.prevRowColCnt });\n            (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.updateMergeBorder)(_this.parent, mergeBorderRows);\n            if (sheet.conditionalFormats && sheet.conditionalFormats.length) {\n                _this.parent.notify(_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.applyCF, { indexes: args.indexes, isRender: true });\n            }\n            if (_this.parent.isEdit) {\n                _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.forRefSelRender, {});\n            }\n            if (_this.parent.allowChart) {\n                _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.chartRangeSelection, null);\n            }\n            if (!_this.parent.isOpen) {\n                _this.parent.hideSpinner();\n            }\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.setAriaOptions)(_this.parent.getMainContent(), { busy: false });\n        };\n        if (args.insertDelete) {\n            appendColumns();\n        }\n        else {\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.getUpdateUsingRaf)(function () { return appendColumns(); });\n        }\n    };\n    SheetRender.prototype.refreshRowContent = function (args) {\n        var _this = this;\n        var row;\n        var hdrRow;\n        var colGroupWidth = this.colGroupWidth;\n        var sheet = this.parent.getActiveSheet();\n        var cell;\n        var cellArgs;\n        var mergeBorderRows = [];\n        var frag = document.createDocumentFragment();\n        var hFrag = document.createDocumentFragment();\n        var tBody = this.parent.createElement('tbody');\n        var hTBody = tBody.cloneNode();\n        hFrag.appendChild(hTBody);\n        frag.appendChild(tBody);\n        var frozenCol = this.parent.frozenColCount(sheet);\n        var lastFrozenCol = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, frozenCol - 1, false, 'columns');\n        var notFirstCol = this.parent.scrollSettings.enableVirtualization && this.parent.viewport.leftIndex !==\n            (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, 0, true, 'columns');\n        this.clearCFResult(sheet);\n        args.cells.forEach(function (value, key) {\n            var indexes = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.getRangeIndexes)(key);\n            if (indexes[1] === args.indexes[1] || !row) {\n                if (indexes[1] === args.indexes[1]) {\n                    hdrRow = _this.rowRenderer.render(indexes[0], true);\n                }\n                if (frozenCol && indexes[1] < frozenCol) {\n                    hTBody.appendChild(hdrRow);\n                    row = hdrRow;\n                }\n                else {\n                    if (indexes[1] === args.indexes[1]) {\n                        hTBody.appendChild(hdrRow);\n                    }\n                    row = _this.rowRenderer.render(indexes[0]);\n                    tBody.appendChild(row);\n                }\n                if (indexes[1] === args.indexes[1]) {\n                    _this.cellRenderer.renderRowHeader(indexes[0], hdrRow);\n                    colGroupWidth = (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.getColGroupWidth)(indexes[0] + 1);\n                }\n            }\n            if (frozenCol) {\n                hdrRow = hTBody.lastElementChild || hdrRow;\n            }\n            cellArgs = {\n                rowIdx: indexes[0], colIdx: indexes[1], cell: value, address: key, lastCell: indexes[1] === args.indexes[3], row: row, hRow: hdrRow, pRow: row.previousSibling,\n                pHRow: hdrRow.previousSibling, isHeightCheckNeeded: true, first: !args.skipUpdateOnFirst && indexes[0] === args.indexes[0] ?\n                    'Row' : (notFirstCol && indexes[1] === args.indexes[1] ? 'Column' : ''), isRefreshing: true, mergeBorderRows: mergeBorderRows\n            };\n            cell = _this.cellRenderer.render(cellArgs);\n            _this.checkRowMerge(indexes, args.indexes, cell, value, sheet);\n            if (frozenCol && indexes[1] === lastFrozenCol) {\n                row = null;\n            }\n        });\n        if (this.colGroupWidth !== colGroupWidth) {\n            this.updateLeftColGroup(colGroupWidth);\n        }\n        var rowHeaderTbody = this.contentPanel.querySelector('.e-row-header tbody');\n        if (rowHeaderTbody) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(rowHeaderTbody);\n            this.getRowHeaderTable().appendChild(hFrag);\n        }\n        var sheetContentTbody = this.contentPanel.querySelector('.e-sheet-content tbody');\n        if (sheetContentTbody) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(sheetContentTbody);\n            this.getContentTable().appendChild(frag);\n        }\n        this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.virtualContentLoaded, { refresh: 'Row', prevRowColCnt: args.prevRowColCnt });\n        (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.updateMergeBorder)(this.parent, mergeBorderRows);\n        if (sheet.conditionalFormats && sheet.conditionalFormats.length) {\n            this.parent.notify(_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.applyCF, { indexes: args.indexes, isRender: true });\n        }\n        if (this.parent.allowChart) {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.chartRangeSelection, {});\n        }\n        if (this.parent.isEdit) {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.forRefSelRender, null);\n        }\n        if (!this.parent.isOpen) {\n            this.parent.hideSpinner();\n        }\n        (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.setAriaOptions)(this.parent.getMainContent(), { busy: false });\n    };\n    SheetRender.prototype.updateCol = function (sheet, idx, appendTo) {\n        var col = this.col.cloneNode();\n        col.style.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnWidth)(sheet, idx, null, true));\n        if (appendTo) {\n            var empty = appendTo.querySelector('.e-empty');\n            return empty ? appendTo.insertBefore(col, empty) : appendTo.appendChild(col);\n        }\n        else {\n            return col;\n        }\n    };\n    SheetRender.prototype.updateColContent = function (args) {\n        var _this = this;\n        (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.getUpdateUsingRaf)(function () {\n            var row;\n            var refChild;\n            var rowCount = 0;\n            var cell;\n            var col;\n            var skipRender;\n            var cellArgs;\n            var sheet = _this.parent.getActiveSheet();\n            var mergeBorderRows = [];\n            var hRow = _this.parent.element.querySelector('.e-column-header .e-header-row');\n            var colGrp = _this.parent.element.querySelector('.e-sheet-content colgroup');\n            var hColGrp = _this.parent.element.querySelector('.e-column-header colgroup');\n            var hRefChild = hRow.firstElementChild;\n            var colRefChild = colGrp.firstElementChild;\n            var hColRefChild = hColGrp.firstElementChild;\n            var tBody = _this.parent.element.querySelector('.e-sheet-content tbody');\n            var hTBody = _this.parent.element.querySelector('.e-column-header tbody');\n            var frozenRow = _this.parent.frozenRowCount(sheet);\n            var frozenCol = _this.parent.frozenColCount(sheet);\n            var lastFrozenRow = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, frozenRow - 1, false);\n            var firstRow = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, args.indexes[0], true);\n            _this.clearCFResult(sheet);\n            args.cells.forEach(function (value, key) {\n                if (skipRender) {\n                    return;\n                }\n                var indexes = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.getRangeIndexes)(key);\n                if (args.direction === 'first' && indexes[1] === args.indexes[1]) {\n                    _this.checkColMerge([indexes[0], _this.parent.viewport.leftIndex + frozenCol], args.indexes, ((indexes[0] < frozenRow ? hTBody : tBody).rows[rowCount] ||\n                        { cells: [] }).cells[(args.indexes[3] - args.indexes[1]) + 1], (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(indexes[0], _this.parent.viewport.leftIndex + frozenCol, sheet) || {}, sheet);\n                }\n                if (indexes[0] === firstRow) {\n                    if (args.direction === 'last') {\n                        col = _this.col.cloneNode();\n                        col.style.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnWidth)(sheet, indexes[1], null, true));\n                        colGrp.insertBefore(col, colRefChild);\n                        hColGrp.insertBefore(col.cloneNode(), hColRefChild);\n                        _this.cellRenderer.renderColHeader(indexes[1], hRow, hRefChild);\n                    }\n                    else {\n                        col = _this.updateCol(sheet, indexes[1], colGrp);\n                        hColGrp.appendChild(col.cloneNode());\n                        _this.cellRenderer.renderColHeader(indexes[1], hRow);\n                    }\n                    if (_this.parent.scrollSettings.enableVirtualization && args.direction) {\n                        /* eslint-disable */\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(colGrp[args.direction + 'ElementChild']);\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(hColGrp[args.direction + 'ElementChild']);\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(hRow[args.direction + 'ElementChild']);\n                        /* eslint-enable */\n                    }\n                }\n                if (indexes[1] === args.indexes[1]) {\n                    if (indexes[0] < frozenRow) {\n                        row = hTBody.children[rowCount];\n                    }\n                    else {\n                        row = tBody.children[rowCount];\n                        if (!row) {\n                            skipRender = true;\n                            return;\n                        }\n                    }\n                    rowCount++;\n                    refChild = row.firstElementChild;\n                }\n                cellArgs = {\n                    colIdx: indexes[1], rowIdx: indexes[0], cell: value, address: key, row: row, pRow: row.previousSibling,\n                    lastCell: indexes[1] === args.indexes[3], isHeightCheckNeeded: args.direction === 'first', first: args.direction ===\n                        'last' && !args.skipUpdateOnFirst && indexes[1] === args.indexes[1] ? 'Column' : '', checkNextBorder: args.direction\n                        === 'last' && indexes[3] === args.indexes[3] ? 'Column' : '', isRefreshing: args.direction === 'first',\n                    mergeBorderRows: mergeBorderRows\n                };\n                if (args.direction === 'last') {\n                    cellArgs.refChild = refChild;\n                    cell = _this.cellRenderer.render(cellArgs);\n                    _this.checkColMerge(indexes, args.indexes, cell, value, sheet, ((indexes[0] < frozenRow ? hTBody : tBody).rows[rowCount - 1] ||\n                        { cells: [] }).cells[1]);\n                }\n                else {\n                    cell = _this.cellRenderer.render(cellArgs);\n                }\n                if (_this.parent.scrollSettings.enableVirtualization && args.direction) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(row[args.direction + 'ElementChild']);\n                }\n                if (frozenRow && indexes[0] === lastFrozenRow) {\n                    rowCount = 0;\n                }\n            });\n            _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.virtualContentLoaded, { refresh: 'Column', prevRowColCnt: args.prevRowColCnt });\n            (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.updateMergeBorder)(_this.parent, mergeBorderRows);\n            if (sheet.conditionalFormats && sheet.conditionalFormats.length) {\n                _this.parent.notify(_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.applyCF, { indexes: args.indexes, isRender: true });\n            }\n            if (_this.parent.allowChart) {\n                _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.chartRangeSelection, null);\n            }\n            if (_this.parent.isEdit) {\n                _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.forRefSelRender, {});\n            }\n            if (!_this.parent.isOpen) {\n                _this.parent.hideSpinner();\n            }\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.setAriaOptions)(_this.parent.getMainContent(), { busy: false });\n        });\n    };\n    SheetRender.prototype.updateRowContent = function (args) {\n        var _this = this;\n        var mainContent = this.parent.getMainContent();\n        if (args.direction === '' && !mainContent.children.length) {\n            return;\n        }\n        var row;\n        var hRow;\n        var cell;\n        var firstRow;\n        var cellArgs;\n        var mergeBorderRows = [];\n        var count = 0;\n        var colGroupWidth = this.colGroupWidth;\n        var sheet = this.parent.getActiveSheet();\n        var tBody = mainContent.querySelector('tbody');\n        var rTBody = this.parent.getRowHeaderContent().querySelector('tbody');\n        var rFrag = document.createDocumentFragment();\n        var frag = document.createDocumentFragment();\n        this.parent.showSpinner();\n        var frozenCol = this.parent.frozenColCount(sheet);\n        var frozenRow = this.parent.frozenRowCount(sheet);\n        var firstCol = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, args.indexes[1], true, 'columns');\n        var lastFrozenCol = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, frozenCol - 1, false, 'columns');\n        this.clearCFResult(sheet);\n        args.cells.forEach(function (value, cKey) {\n            var indexes = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.getRangeIndexes)(cKey);\n            var pHRow;\n            var pRow;\n            if (args.direction === 'first' && indexes[0] === args.indexes[0]) {\n                pHRow = rTBody.rows[rTBody.rows.length - 1];\n                pRow = tBody.rows[tBody.rows.length - 1];\n                if (firstRow === undefined) {\n                    firstRow = (indexes[1] < frozenCol ? rTBody : tBody).rows[(args.indexes[2] - args.indexes[0]) + 1] || null;\n                }\n                _this.checkRowMerge([_this.parent.viewport.topIndex + frozenRow, indexes[1]], args.indexes, (firstRow || { cells: [] }).cells[indexes[1] < frozenCol ? count + 1 : count], (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(_this.parent.viewport.topIndex + frozenRow, indexes[1], sheet) || {}, sheet);\n            }\n            if (indexes[1] === firstCol || !row) {\n                if (indexes[1] === firstCol) {\n                    hRow = _this.rowRenderer.render(indexes[0], true);\n                }\n                if (frozenCol && indexes[1] < frozenCol) {\n                    rFrag.appendChild(hRow);\n                    row = hRow;\n                }\n                else {\n                    row = _this.rowRenderer.render(indexes[0]);\n                    frag.appendChild(row);\n                    if (indexes[1] === firstCol) {\n                        rFrag.appendChild(hRow);\n                    }\n                    if (_this.parent.scrollSettings.enableVirtualization && args.direction) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(tBody[args.direction + 'ElementChild']);\n                    }\n                }\n                if (indexes[1] === firstCol) {\n                    _this.cellRenderer.renderRowHeader(indexes[0], hRow);\n                    colGroupWidth = (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.getColGroupWidth)(indexes[0] + 1);\n                    if (_this.parent.scrollSettings.enableVirtualization && args.direction) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(rTBody[args.direction + 'ElementChild']);\n                    }\n                }\n            }\n            if (frozenCol) {\n                hRow = rFrag.lastElementChild || hRow;\n            }\n            cellArgs = {\n                colIdx: indexes[1], rowIdx: indexes[2], cell: value, address: cKey, row: row,\n                lastCell: indexes[1] === args.indexes[3], pHRow: hRow.previousSibling || pHRow, checkNextBorder: args.direction === 'last' &&\n                    indexes[2] === args.indexes[2] ? 'Row' : '', pRow: row.previousSibling || pRow, isHeightCheckNeeded: args.direction === 'first'\n                    || args.direction === '', hRow: hRow, first: args.direction === 'last' && !args.skipUpdateOnFirst && indexes[0] ===\n                    args.indexes[0] ? 'Row' : '', isRefreshing: args.direction === 'first', mergeBorderRows: mergeBorderRows\n            };\n            cell = _this.cellRenderer.render(cellArgs);\n            if (args.direction === 'last' && tBody.rows.length) {\n                _this.checkRowMerge(indexes, args.indexes, cell, value, sheet, (indexes[1] < frozenCol ? rTBody : tBody).rows[0].cells[indexes[1] < frozenCol ? count + 1 : count]);\n            }\n            count++;\n            if (frozenCol && indexes[1] === lastFrozenCol) {\n                row = null;\n                firstRow = undefined;\n                count = 0;\n            }\n        });\n        if (this.colGroupWidth !== colGroupWidth) {\n            this.updateLeftColGroup(colGroupWidth);\n        }\n        if (args.direction === 'last') {\n            rTBody.insertBefore(rFrag, rTBody.firstElementChild);\n            tBody.insertBefore(frag, tBody.firstElementChild);\n        }\n        else {\n            rTBody.appendChild(rFrag);\n            tBody.appendChild(frag);\n        }\n        if (this.parent.scrollSettings.enableVirtualization) {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.virtualContentLoaded, { refresh: 'Row', prevRowColCnt: args.prevRowColCnt });\n        }\n        (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.updateMergeBorder)(this.parent, mergeBorderRows);\n        if (sheet.conditionalFormats && sheet.conditionalFormats.length) {\n            this.parent.notify(_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.applyCF, { indexes: args.indexes, isRender: true });\n        }\n        if (this.parent.isEdit) {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.forRefSelRender, null);\n        }\n        if (this.parent.allowChart) {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.chartRangeSelection, {});\n        }\n        if (!this.parent.isOpen) {\n            this.parent.hideSpinner();\n        }\n        (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.setAriaOptions)(this.parent.getMainContent(), { busy: false });\n    };\n    SheetRender.prototype.checkRowMerge = function (indexes, range, cell, model, sheet, firstcell) {\n        if (this.parent.scrollSettings.enableVirtualization && cell &&\n            (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(model.rowSpan) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(model.colSpan))) {\n            var frozenRow = this.parent.frozenRowCount(sheet);\n            var viewportTopIdx = this.parent.viewport.topIndex + frozenRow;\n            if (indexes[0] === viewportTopIdx) {\n                if (model.rowSpan < 0) {\n                    var args = { td: cell, rowIdx: indexes[0], colIdx: indexes[1], isRow: true,\n                        isFreezePane: true\n                    };\n                    this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.checkMerge, args);\n                    if (args.insideFreezePane) {\n                        return;\n                    }\n                    if (viewportTopIdx >= range[2]) {\n                        this.refreshPrevMerge(range[2] + 1, indexes[1]);\n                    }\n                }\n                if (firstcell) {\n                    this.refreshFirstCell(indexes[0] + (range[2] - range[0]) + 1, indexes[1], sheet, firstcell);\n                }\n            }\n            else if (model.rowSpan > 1) {\n                var prevTopIdx = range[2] + 1;\n                if (indexes[0] + model.rowSpan - 1 >= prevTopIdx && indexes[0] < prevTopIdx) {\n                    this.refreshPrevMerge(prevTopIdx, indexes[1], viewportTopIdx);\n                }\n            }\n        }\n    };\n    SheetRender.prototype.refreshPrevMerge = function (prevTopIdx, colIndex, currTopIdx) {\n        var td = this.parent.getCell(prevTopIdx, colIndex, this.parent.getRow(currTopIdx ?\n            currTopIdx : 0, null, colIndex));\n        if (td) {\n            this.cellRenderer.refresh(prevTopIdx, colIndex, null, td);\n        }\n    };\n    SheetRender.prototype.refreshFirstCell = function (rowIdx, colIdex, sheet, firstcell) {\n        var cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getCell)(rowIdx, colIdex, sheet, false, true);\n        if (cell.rowSpan < 0 || cell.colSpan < 0) {\n            this.cellRenderer.refresh(rowIdx, colIdex, null, firstcell);\n        }\n    };\n    SheetRender.prototype.checkColMerge = function (indexes, range, cell, model, sheet, firstcell) {\n        if (this.parent.scrollSettings.enableVirtualization && cell && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(model.rowSpan) ||\n            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(model.colSpan))) {\n            var frozenCol = this.parent.frozenColCount(sheet);\n            var viewportLeftIdx = this.parent.viewport.leftIndex + frozenCol;\n            if (indexes[1] === viewportLeftIdx) {\n                if (model.colSpan < 0) {\n                    var e = {\n                        td: cell,\n                        colIdx: indexes[1], rowIdx: indexes[0], isFreezePane: true\n                    };\n                    this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_3__.checkMerge, e);\n                    if (e.insideFreezePane) {\n                        return;\n                    }\n                    if (viewportLeftIdx >= range[3]) {\n                        var td = this.parent.getCell(indexes[0], indexes[3] + 1, this.parent.getRow(indexes[0], null, indexes[3] + 1));\n                        if (td) {\n                            this.cellRenderer.refresh(indexes[0], range[3] + 1, null, td);\n                        }\n                    }\n                }\n                if (firstcell) {\n                    this.refreshFirstCell(indexes[0], indexes[1] + (range[3] - range[1]) + 1, sheet, firstcell);\n                }\n            }\n            else if (model.colSpan > 1) {\n                if (indexes[1] + model.colSpan - 1 >= range[3] + 1 && indexes[1] < range[3] + 1) {\n                    var td = this.parent.getCell(indexes[0], indexes[3] + 1, this.parent.getRow(indexes[0], null, indexes[3] + 1));\n                    if (td) {\n                        this.cellRenderer.refresh(indexes[0], range[3] + 1, null, td);\n                    }\n                }\n            }\n        }\n    };\n    SheetRender.prototype.toggleGridlines = function () {\n        var sheetElem = document.getElementById(this.parent.element.id + '_sheet');\n        if (this.parent.getActiveSheet().showGridLines) {\n            sheetElem.classList.remove('e-hide-gridlines');\n        }\n        else {\n            sheetElem.classList.add('e-hide-gridlines');\n        }\n    };\n    /**\n     * Used to toggle row and column headers.\n     *\n     * @returns {void}\n     */\n    SheetRender.prototype.showHideHeaders = function () {\n        var _this = this;\n        var sheet = this.parent.getActiveSheet();\n        (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.getUpdateUsingRaf)(function () {\n            if (sheet.showHeaders) {\n                var content = _this.getContentPanel();\n                _this.setPanelWidth(sheet, _this.getRowHeaderPanel());\n                _this.setPanelHeight(sheet);\n                document.getElementById(_this.parent.element.id + '_sheet').classList.remove('e-hide-headers');\n                _this.getColHeaderPanel().scrollLeft = content.scrollLeft;\n                _this.parent.selectRange(sheet.selectedRange);\n            }\n            else {\n                _this.updateHideHeaders(sheet, document.getElementById(_this.parent.element.id + '_sheet'));\n                _this.setPanelHeight(sheet);\n                if (_this.parent.frozenColCount(sheet) || _this.parent.frozenRowCount(sheet)) {\n                    _this.setPanelWidth(sheet, _this.getRowHeaderPanel());\n                    _this.parent.selectRange(sheet.selectedRange);\n                }\n                else {\n                    _this.getContentPanel().style.width = '';\n                    _this.getContentPanel().style[_this.parent.enableRtl ? 'right' : 'left'] = '';\n                }\n                _this.getScrollElement().style.left = _this.getRowHeaderWidth(sheet) + 'px';\n            }\n        });\n    };\n    SheetRender.prototype.updateHideHeaders = function (sheet, ele) {\n        if (!sheet.showHeaders) {\n            ele.classList.add('e-hide-headers');\n        }\n    };\n    SheetRender.prototype.rowHeightChanged = function (args) {\n        if (args.threshold || args.isHideShow) {\n            var sheet = this.parent.getActiveSheet();\n            if (args.rowIdx < this.parent.frozenRowCount(sheet)) {\n                this.setPanelHeight(sheet);\n            }\n        }\n    };\n    SheetRender.prototype.colWidthChanged = function (args) {\n        if (args.threshold || args.isHideShow) {\n            var sheet = this.parent.getActiveSheet();\n            if (args.colIdx < this.parent.frozenColCount(sheet)) {\n                this.setPanelWidth(sheet, this.getRowHeaderPanel());\n            }\n            this.checkTableWidth(sheet);\n        }\n    };\n    SheetRender.prototype.getRowHeaderWidth = function (sheet, skipFreezeCheck, addScaling) {\n        var width = 0;\n        var scaleX = addScaling ? this.parent.viewport.scaleX : 1;\n        if (!skipFreezeCheck && sheet.frozenColumns) {\n            var leftIdx = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellIndexes)(sheet.topLeftCell)[1];\n            width = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, leftIdx, leftIdx + sheet.frozenColumns - 1, true) / scaleX;\n        }\n        width += (sheet.showHeaders ? (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.getDPRValue)(this.colGroupWidth) / scaleX : 0);\n        return width;\n    };\n    SheetRender.prototype.getColHeaderHeight = function (sheet, skipHeader) {\n        var topIndex = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_1__.getCellIndexes)(sheet.topLeftCell)[0];\n        return (sheet.showHeaders && !skipHeader ? (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.getDPRValue)(31) : 0) +\n            (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowsHeight)(sheet, topIndex, topIndex + sheet.frozenRows - 1, true);\n    };\n    /**\n     * Get the select all table element of spreadsheet\n     *\n     * @returns {HTMLElement} - Select all content element.\n     */\n    SheetRender.prototype.getSelectAllContent = function () {\n        return this.headerPanel.getElementsByClassName('e-selectall-container')[0];\n    };\n    /**\n     * Get the horizontal scroll element of spreadsheet\n     *\n     * @returns {HTMLElement} - Select all content element.\n     */\n    SheetRender.prototype.getScrollElement = function () {\n        var elem;\n        if (this.contentPanel) {\n            elem = (this.contentPanel.parentElement || this.contentPanel.nextElementSibling);\n        }\n        return elem && elem.querySelector('.e-scroller');\n    };\n    /**\n     * Get the select all table element of spreadsheet\n     *\n     * @returns {HTMLTableElement} - Select all table element.\n     */\n    SheetRender.prototype.getSelectAllTable = function () {\n        return this.headerPanel.getElementsByClassName('e-selectall-table')[0];\n    };\n    /**\n     * Get the column header element of spreadsheet\n     *\n     * @returns {HTMLTableElement} - Column header table element.\n     */\n    SheetRender.prototype.getColHeaderTable = function () {\n        return this.headerPanel.getElementsByClassName('e-colhdr-table')[0];\n    };\n    /**\n     * Get the row header table element of spreadsheet\n     *\n     * @returns {HTMLTableElement} - Row header table element.\n     */\n    SheetRender.prototype.getRowHeaderTable = function () {\n        return this.contentPanel.getElementsByClassName('e-rowhdr-table')[0];\n    };\n    /**\n     * Get the main content table element of spreadsheet\n     *\n     * @returns {Element} - Content table element.\n     */\n    SheetRender.prototype.getContentTable = function () {\n        return this.contentPanel.getElementsByClassName('e-content-table')[0];\n    };\n    /**\n     * Get the row header div element of spreadsheet\n     *\n     * @returns {HTMLElement} - Row header panel element.\n     */\n    SheetRender.prototype.getRowHeaderPanel = function () {\n        return this.contentPanel.getElementsByClassName('e-row-header')[0];\n    };\n    /**\n     * Get the column header div element of spreadsheet\n     *\n     * @returns {HTMLElement} - Column header panel element.\n     */\n    SheetRender.prototype.getColHeaderPanel = function () {\n        return this.headerPanel.getElementsByClassName('e-column-header')[0];\n    };\n    /**\n     * Get the main content div element of spreadsheet\n     *\n     * @returns {HTMLElement} - Content panel element.\n     */\n    SheetRender.prototype.getContentPanel = function () {\n        return this.contentPanel.getElementsByClassName('e-sheet-content')[0];\n    };\n    SheetRender.prototype.addEventListener = function () {\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_3__.created, this.triggerCreatedEvent, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_3__.rowHeightChanged, this.rowHeightChanged, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_3__.colWidthChanged, this.colWidthChanged, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_3__.spreadsheetDestroyed, this.removeEventListener, this);\n    };\n    /**\n     * Clears the internal properties of Sheet module.\n     *\n     * @returns {void}\n     */\n    SheetRender.prototype.destroy = function () {\n        if (this.headerPanel) {\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.removeAllChildren)(this.headerPanel);\n            this.headerPanel.remove();\n        }\n        this.headerPanel = null;\n        if (this.contentPanel) {\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.removeAllChildren)(this.contentPanel);\n            this.contentPanel.remove();\n        }\n        this.contentPanel = null;\n        if (this.col) {\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_3__.removeAllChildren)(this.col);\n            this.col.remove();\n        }\n        this.col = null;\n        this.rowRenderer = null;\n        this.cellRenderer = null;\n        this.colGroupWidth = null;\n        this.parent = null;\n    };\n    SheetRender.prototype.removeEventListener = function () {\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_3__.created, this.triggerCreatedEvent);\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_3__.rowHeightChanged, this.rowHeightChanged);\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_3__.colWidthChanged, this.colWidthChanged);\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_3__.spreadsheetDestroyed, this.removeEventListener);\n    };\n    return SheetRender;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/renderer/sheet.js?");

/***/ })

}]);