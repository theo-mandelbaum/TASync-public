"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-pdfviewer_src_pdfviewer_base_context-menu_js-e123239a"],{

/***/ "./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/base/context-menu.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/base/context-menu.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContextMenu: () => (/* binding */ ContextMenu)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/base/types.js\");\n\n\n\n/**\n * ContextMenu module is used to handle the context menus used in the control.\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    /**\n     * Initialize the constructor of ontextmenu\n     *\n     * @param { PdfViewer } pdfViewer - Specified PdfViewer class.\n     * @param { PdfViewerBase } pdfViewerBase - The pdfViewerBase.\n     */\n    function ContextMenu(pdfViewer, pdfViewerBase) {\n        this.copyContextMenu = [];\n        this.contextMenuList = [];\n        this.customMenuItems = [];\n        this.filteredCustomItemsIds = [];\n        this.defaultContextMenuItems = [];\n        this.pdfViewer = pdfViewer;\n        this.pdfViewerBase = pdfViewerBase;\n        this.defaultCutId = this.pdfViewer.element.id + '_contextmenu_cut';\n        this.defaultCopyId = this.pdfViewer.element.id + '_contextmenu_copy';\n        this.defaultPasteId = this.pdfViewer.element.id + '_contextmenu_paste';\n        this.defaultDeleteId = this.pdfViewer.element.id + '_contextmenu_delete';\n        this.defaultCommentId = this.pdfViewer.element.id + '_contextmenu_comment';\n        this.defaultUnderlineId = this.pdfViewer.element.id + '_contextmenu_underline';\n        this.defaultHighlightId = this.pdfViewer.element.id + '_contextmenu_highlight';\n        this.defaultStrikethroughId = this.pdfViewer.element.id + '_contextmenu_strikethrough';\n        this.defaultScaleratioId = this.pdfViewer.element.id + '_contextmenu_scaleratio';\n        this.defaultPropertiesId = this.pdfViewer.element.id + '_contextmenu_properties';\n        this.copyContextMenu = [\n            { text: this.pdfViewer.localeObj.getConstant('Cut'), iconCss: 'e-pv-cut-icon', id: this.defaultCutId },\n            { text: this.pdfViewer.localeObj.getConstant('Copy'), iconCss: 'e-pv-copy-icon', id: this.defaultCopyId },\n            { text: this.pdfViewer.localeObj.getConstant('Highlight context'), iconCss: 'e-pv-highlight-icon', id: this.defaultHighlightId },\n            { text: this.pdfViewer.localeObj.getConstant('Underline context'), iconCss: 'e-pv-underline-icon', id: this.defaultUnderlineId },\n            { text: this.pdfViewer.localeObj.getConstant('Strikethrough context'), iconCss: 'e-pv-strikethrough-icon', id: this.defaultStrikethroughId },\n            { text: this.pdfViewer.localeObj.getConstant('Paste'), iconCss: 'e-pv-paste-icon', id: this.defaultPasteId },\n            { text: this.pdfViewer.localeObj.getConstant('Delete Context'), iconCss: 'e-pv-delete-icon', id: this.defaultDeleteId },\n            { text: this.pdfViewer.localeObj.getConstant('Scale Ratio'), iconCss: 'e-pv-scale-ratio-icon', id: this.defaultScaleratioId },\n            { separator: true, id: this.pdfViewer.element.id + '_context_menu_comment_separator' },\n            { text: this.pdfViewer.localeObj.getConstant('Comment'), iconCss: 'e-pv-comment-icon', id: this.defaultCommentId },\n            { separator: true, id: this.pdfViewer.element.id + '_context_menu_separator' },\n            { text: this.pdfViewer.localeObj.getConstant('Properties'), iconCss: 'e-pv-property-icon', id: this.defaultPropertiesId }\n        ];\n        this.defaultLength = this.copyContextMenu.length;\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n    ContextMenu.prototype.createContextMenu = function () {\n        this.contextMenuElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('ul', { id: this.pdfViewer.element.id + '_context_menu', className: 'e-pv-context-menu' });\n        this.pdfViewer.element.appendChild(this.contextMenuElement);\n        this.contextMenuObj = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.ContextMenu({\n            target: '#' + this.pdfViewerBase.viewerContainer.id, items: this.copyContextMenu,\n            beforeOpen: this.contextMenuOnBeforeOpen.bind(this), select: this.onMenuItemSelect.bind(this),\n            created: this.contextMenuOnCreated.bind(this)\n        });\n        if (this.pdfViewer.enableRtl) {\n            this.contextMenuObj.enableRtl = true;\n        }\n        this.contextMenuObj.appendTo(this.contextMenuElement);\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !this.pdfViewer.enableDesktopMode) {\n            this.contextMenuObj.animationSettings.effect = 'ZoomIn';\n        }\n        else {\n            this.contextMenuObj.animationSettings.effect = 'SlideDown';\n        }\n    };\n    ContextMenu.prototype.contextMenuOnCreated = function (args) {\n        var items = [this.defaultHighlightId, this.defaultUnderlineId,\n            this.defaultStrikethroughId];\n        if (this.pdfViewer.annotationModule) {\n            if (!this.pdfViewer.annotationModule.textMarkupAnnotationModule) {\n                this.contextMenuObj.enableItems(items, false, true);\n            }\n        }\n        else {\n            this.contextMenuObj.enableItems(items, false, true);\n        }\n    };\n    ContextMenu.prototype.setTarget = function (args) {\n        var target = null;\n        if (args.event && args.event.target) {\n            target = args.event.target;\n            this.currentTarget = target;\n        }\n        return target;\n    };\n    ContextMenu.prototype.contextMenuOnBeforeOpen = function (args) {\n        var _this = this;\n        var _a;\n        if (this.pdfViewerBase.preventContextmenu) {\n            args.cancel = true;\n        }\n        if (this.copyContextMenu.length === this.defaultLength) {\n            (_a = this.customMenuItems).push.apply(_a, this.pdfViewer.customContextMenuItems);\n            this.addCustomContextMenuItems();\n        }\n        else if (this.copyContextMenu.length !== this.defaultLength && this.copyShowCustomContextMenuBottom !==\n            this.pdfViewer.showCustomContextMenuBottom) {\n            this.customMenuItems.forEach(function (menuItem) {\n                var index = _this.copyContextMenu.findIndex(function (item) { return item.id === menuItem.id; });\n                if (index !== -1) {\n                    _this.copyContextMenu.splice(index, 1);\n                }\n            });\n            this.addCustomContextMenuItems();\n        }\n        var target = this.setTarget(args);\n        var currentAnnotSettings = this.pdfViewer.selectedItems.annotations.length !== 0 ?\n            this.pdfViewer.selectedItems.annotations[0].annotationSettings : null;\n        if (this.pdfViewer.annotationModule && this.pdfViewer.annotationModule.freeTextAnnotationModule && this.pdfViewer.annotationModule.freeTextAnnotationModule.isInuptBoxInFocus && target && target.className === 'free-text-input' && target.tagName === 'TEXTAREA') {\n            this.pdfViewerBase.isFreeTextContextMenu = true;\n        }\n        this.defaultContextMenuItems = [this.pdfViewer.localeObj.getConstant('Cut'), this.pdfViewer.localeObj.getConstant('Copy'), this.pdfViewer.localeObj.getConstant('Highlight context'),\n            this.pdfViewer.localeObj.getConstant('Underline context'), this.pdfViewer.localeObj.getConstant('Strikethrough context'), this.pdfViewer.localeObj.getConstant('Paste'),\n            this.pdfViewer.localeObj.getConstant('Delete Context'), this.pdfViewer.localeObj.getConstant('Scale Ratio'), this.pdfViewer.localeObj.getConstant('Comment'), this.pdfViewer.localeObj.getConstant('Properties')\n        ];\n        var customItems = this.customMenuItems.length > 0 ?\n            this.contextMenuObj.items.slice(this.pdfViewer.showCustomContextMenuBottom ? -this.customMenuItems.length : 0, this.pdfViewer.showCustomContextMenuBottom ?\n                this.contextMenuObj.items.length : this.customMenuItems.length).map(function (item) { return item.text; }) : [];\n        this.contextMenuObj.showItems(this.pdfViewer.showCustomContextMenuBottom ?\n            this.defaultContextMenuItems.concat(customItems) : customItems.concat(this.defaultContextMenuItems));\n        this.pdfViewerBase.getElement('_context_menu_separator').classList.remove('e-menu-hide');\n        this.pdfViewerBase.getElement('_context_menu_comment_separator').classList.remove('e-menu-hide');\n        this.contextMenuObj.enableItems([this.defaultCutId, this.defaultCopyId, this.defaultPasteId, this.defaultDeleteId], true, true);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(customItems) && this.customMenuItems.length !== 0) {\n            var commonIds = [];\n            if (args.items.length < this.defaultLength) {\n                commonIds = args.items.map(function (item) { return item.id; });\n            }\n            else {\n                commonIds = this.customMenuItems.map(function (item) { return item.id; });\n            }\n            this.filteredCustomItemsIds = commonIds.filter(function (id) { return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(id); });\n            this.pdfViewer.firecustomContextMenuBeforeOpen(this.filteredCustomItemsIds);\n        }\n        if (this.pdfViewer.annotationModule) {\n            this.pdfViewer.annotationModule.checkContextMenuDeleteItem(this.contextMenuObj);\n        }\n        if (this.pdfViewer.textSelectionModule || this.pdfViewerBase.isShapeBasedAnnotationsEnabled()) {\n            if (args.event || this.pdfViewerBase.isTouchDesignerMode) {\n                var isClickWithinSelectionBounds = this.pdfViewerBase.isClickWithinSelectionBounds(args.event);\n                if (this.pdfViewerBase.isFreeTextContextMenu) {\n                    this.contextMenuObj.hideItems([this.defaultHighlightId, this.defaultUnderlineId, this.defaultStrikethroughId,\n                        this.defaultPropertiesId, this.defaultCommentId,\n                        this.defaultScaleratioId, this.defaultDeleteId], true);\n                    this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n                    this.pdfViewerBase.getElement('_context_menu_comment_separator').classList.add('e-menu-hide');\n                    if (this.pdfViewer.annotation.freeTextAnnotationModule &&\n                        this.pdfViewer.annotation.freeTextAnnotationModule.isTextSelected) {\n                        this.contextMenuObj.enableItems([this.defaultCopyId], true, true);\n                        this.contextMenuObj.enableItems([this.defaultCutId], true, true);\n                    }\n                    else {\n                        this.contextMenuObj.enableItems([this.defaultCopyId], false, true);\n                        this.contextMenuObj.enableItems([this.defaultCutId], false, true);\n                        window.getSelection().removeAllRanges();\n                    }\n                    if (this.pdfViewer.annotation.freeTextAnnotationModule && this.pdfViewer.annotation.freeTextAnnotationModule.selectedText !== '') {\n                        this.contextMenuObj.enableItems([this.defaultPasteId], true, true);\n                    }\n                    else {\n                        this.contextMenuObj.enableItems([this.defaultPasteId], false, true);\n                    }\n                }\n                else if ((isClickWithinSelectionBounds && this.pdfViewer.textSelectionModule) || (this.pdfViewer.textSelectionModule && this.pdfViewer.textSelectionModule.selectionRangeArray.length > 0 && this.pdfViewer.contextMenuSettings.contextMenuAction === 'MouseUp')) {\n                    if ((!args.event.target.classList.contains('e-pv-maintaincontent') && args.event.target.classList.contains('e-pv-text') || args.event.target.classList.contains('e-pv-text-layer'))) {\n                        if (this.pdfViewerBase.checkIsNormalText()) {\n                            args.cancel = true;\n                        }\n                    }\n                    else if ((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isIE || _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'edge') && args.event.target.classList.contains('e-pv-page-container')) {\n                        args.cancel = true;\n                    }\n                    this.contextMenuObj.hideItems([this.defaultCutId, this.defaultPasteId, this.defaultDeleteId,\n                        this.defaultScaleratioId, this.defaultCommentId, this.defaultPropertiesId], true);\n                    this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n                    this.pdfViewerBase.getElement('_context_menu_comment_separator').classList.add('e-menu-hide');\n                }\n                else if (this.pdfViewer.selectedItems.annotations.length !== 0 && (this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'HandWrittenSignature' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'SignatureText' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'SignatureImage' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Path')) {\n                    this.onOpeningForShape(false, true);\n                }\n                else if (this.pdfViewer.selectedItems.annotations.length !== 0 && this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType !== 'Path' && !currentAnnotSettings.isLock) {\n                    this.onOpeningForShape(true);\n                }\n                else if (this.pdfViewer.selectedItems.annotations.length !== 0 && this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType !== 'Path' && currentAnnotSettings.isLock) {\n                    this.hideDefaultContextMenu();\n                }\n                else if (this.pdfViewer.selectedItems.formFields.length !== 0 &&\n                    this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType && this.pdfViewer.designerMode) {\n                    this.onOpeningForShape(true);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.toolbar) &&\n                        !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pdfViewer.toolbar.formDesignerToolbarModule)) {\n                        this.pdfViewer.toolbar.formDesignerToolbarModule.showHideDeleteIcon(true);\n                    }\n                }\n                else {\n                    var target_1 = this.pdfViewerBase.designerModetarget;\n                    var annotationModule = this.pdfViewer.annotationModule;\n                    if (args.event && args.event.target) {\n                        target_1 = args.event.target;\n                    }\n                    if (this.pdfViewer.annotation && this.pdfViewer.annotation.isShapeCopied && ((target_1).classList.contains('e-pv-text-layer') ||\n                        (target_1).classList.contains('e-pv-text') || (target_1).classList.contains('e-pv-viewer-container')) && !this.pdfViewer.annotationModule.textMarkupAnnotationModule.currentTextMarkupAnnotation) {\n                        this.onOpeningForShape(false);\n                    }\n                    else if (this.pdfViewer.formDesigner && this.pdfViewer.formDesigner.isShapeCopied && ((target_1).classList.contains('e-pv-text-layer') ||\n                        (target_1).classList.contains('e-pv-text'))) {\n                        this.onOpeningForShape(false);\n                    }\n                    else if (this.pdfViewerBase.isCalibrateAnnotationModule() &&\n                        this.pdfViewer.annotationModule.measureAnnotationModule.currentAnnotationMode && !currentAnnotSettings) {\n                        this.contextMenuObj.hideItems([this.defaultHighlightId, this.defaultUnderlineId,\n                            this.defaultStrikethroughId, this.defaultPropertiesId], true);\n                        this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n                        this.pdfViewerBase.getElement('_context_menu_comment_separator').classList.remove('e-menu-hide');\n                        this.contextMenuObj.enableItems([this.defaultCutId, this.defaultCopyId, this.defaultPasteId,\n                            this.defaultDeleteId, this.defaultCommentId], false, true);\n                    }\n                    else if (annotationModule && annotationModule.textMarkupAnnotationModule &&\n                        annotationModule.textMarkupAnnotationModule.currentTextMarkupAnnotation &&\n                        !annotationModule.textMarkupAnnotationModule.currentTextMarkupAnnotation.annotationSettings.isLock) {\n                        this.contextMenuObj.hideItems([this.defaultHighlightId, this.defaultUnderlineId, this.defaultStrikethroughId,\n                            this.defaultPropertiesId, this.defaultCutId,\n                            this.defaultCopyId, this.defaultPasteId, this.defaultScaleratioId], true);\n                        this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n                        this.pdfViewerBase.getElement('_context_menu_comment_separator').classList.remove('e-menu-hide');\n                        this.contextMenuObj.showItems([this.defaultDeleteId, this.defaultCommentId], true);\n                    }\n                    else if (args.items && args.items.length > 0 && this.pdfViewer.textSelectionModule &&\n                        this.pdfViewer.textSelectionModule.isTextSelection && isClickWithinSelectionBounds) {\n                        this.contextMenuObj.hideItems([this.defaultCutId, this.defaultPasteId, this.defaultDeleteId,\n                            this.defaultScaleratioId, this.defaultCommentId, this.defaultPropertiesId], true);\n                        this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n                        this.pdfViewerBase.getElement('_context_menu_comment_separator').classList.add('e-menu-hide');\n                    }\n                    else {\n                        args.cancel = true;\n                    }\n                }\n            }\n            else if (this.pdfViewer.textSelectionModule && (this.pdfViewer.contextMenuOption === 'MouseUp')) {\n                this.contextMenuObj.hideItems([this.defaultCutId, this.defaultPasteId, this.defaultDeleteId,\n                    this.defaultScaleratioId, this.defaultCommentId, this.defaultPropertiesId], true);\n                this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n                this.pdfViewerBase.getElement('_context_menu_comment_separator').classList.add('e-menu-hide');\n            }\n            else {\n                this.hideContextItems();\n            }\n            this.enableCommentPanelItem();\n        }\n        else {\n            args.cancel = true;\n        }\n        if (this.pdfViewer.contextMenuOption === 'None') {\n            args.cancel = true;\n        }\n        else {\n            this.contextMenuItems(args);\n        }\n        if (this.pdfViewer.annotationModule && this.pdfViewer.annotationModule.restrictContextMenu()) {\n            args.cancel = true;\n        }\n        if (this.pdfViewer.disableDefaultContextMenu === true) {\n            this.hideDefaultContextMenu();\n        }\n        this.pdfViewerBase.isTouchDesignerMode = false;\n    };\n    ContextMenu.prototype.contextMenuItems = function (args) {\n        if (this.pdfViewer.contextMenuSettings.contextMenuItems.length) {\n            var hideMenuItems = [];\n            var contextMenuList = this.contextMenuCollection();\n            var ul = this.contextMenuObj.getRootElement();\n            for (var j = 0; j < this.pdfViewer.contextMenuSettings.contextMenuItems.length; j++) {\n                for (var i = 0; i < this.contextMenuList.length; i++) {\n                    var menuItem = this.contextMenuList[parseInt(i.toString(), 10)].text;\n                    switch (menuItem) {\n                        case 'Highlight':\n                            menuItem = 'Highlight context';\n                            break;\n                        case 'Underline':\n                            menuItem = 'Underline context';\n                            break;\n                        case 'Strikethrough':\n                            menuItem = 'Strikethrough context';\n                            break;\n                        case 'Delete':\n                            menuItem = 'Delete Context';\n                            break;\n                        case 'Scale Ratio':\n                            menuItem = 'Scale Ratio';\n                            break;\n                        case 'Comment':\n                            this.pdfViewerBase.getElement('_context_menu_comment_separator').classList.add('e-menu-hide');\n                            break;\n                        case 'Properties':\n                            this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n                            break;\n                    }\n                    var menuName = this.contextMenuList[parseInt(i.toString(), 10)].text;\n                    if (j === 0 && menuName !== _types__WEBPACK_IMPORTED_MODULE_2__.ContextMenuItem[this.pdfViewer.contextMenuSettings.\n                        contextMenuItems[parseInt(j.toString(), 10)]]) {\n                        hideMenuItems.push(menuName);\n                    }\n                    if (j > 0 && menuName === _types__WEBPACK_IMPORTED_MODULE_2__.ContextMenuItem[this.pdfViewer.contextMenuSettings.\n                        contextMenuItems[parseInt(j.toString(), 10)]]) {\n                        for (var k = 0; k < hideMenuItems.length; k++) {\n                            if (hideMenuItems[parseInt(k.toString(), 10)] === menuName) {\n                                if (this.pdfViewer.disableContextMenuItems && this.pdfViewer.disableContextMenuItems.length > 0) {\n                                    var isDisabled = false;\n                                    for (var l = 0; l < this.pdfViewer.disableContextMenuItems.length; l++) {\n                                        if (hideMenuItems[parseInt(k.toString(), 10)] ===\n                                            _types__WEBPACK_IMPORTED_MODULE_2__.ContextMenuItem[this.pdfViewer.disableContextMenuItems[parseInt(l.toString(), 10)]]) {\n                                            isDisabled = true;\n                                        }\n                                    }\n                                    if (!isDisabled) {\n                                        hideMenuItems.splice(k, 1);\n                                    }\n                                }\n                                else {\n                                    hideMenuItems.splice(k, 1);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            var hideLocaleItem = this.processLocaleContent(hideMenuItems);\n            this.contextMenuObj.hideItems(hideLocaleItem);\n            if (this.getEnabledItemCount(ul) === 0) {\n                args.cancel = true;\n            }\n        }\n    };\n    ContextMenu.prototype.processLocaleContent = function (hideMenuItems) {\n        var contextMenuLocaleContent = [];\n        if (hideMenuItems.length > 0) {\n            for (var i = 0; i < hideMenuItems.length; i++) {\n                var menuItem = hideMenuItems[parseInt(i.toString(), 10)];\n                switch (menuItem) {\n                    case 'Highlight':\n                        menuItem = 'Highlight context';\n                        break;\n                    case 'Underline':\n                        menuItem = 'Underline context';\n                        break;\n                    case 'Strikethrough':\n                        menuItem = 'Strikethrough context';\n                        break;\n                    case 'Delete':\n                        menuItem = 'Delete Context';\n                        break;\n                    case 'ScaleRatio':\n                        menuItem = 'Scale Ratio';\n                        break;\n                }\n                contextMenuLocaleContent.push(this.pdfViewer.localeObj.getConstant(menuItem));\n            }\n        }\n        return contextMenuLocaleContent;\n    };\n    ContextMenu.prototype.contextMenuCollection = function () {\n        return this.contextMenuList = [{ text: 'Cut' }, { text: 'Copy' }, { text: 'Highlight' }, { text: 'Underline' }, { text: 'Strikethrough' },\n            { text: 'Paste' }, { text: 'Delete' }, { text: 'ScaleRatio' }, { text: 'Comment' }, { text: 'Properties' }];\n    };\n    ContextMenu.prototype.getEnabledItemCount = function (ul) {\n        var enabledItemCount = this.copyContextMenu.length;\n        var liCollection = ul.children;\n        for (var i = 0; i < liCollection.length; i++) {\n            var li = liCollection[parseInt(i.toString(), 10)];\n            if (li.classList.contains('e-menu-hide') || li.classList.contains('e-disabled')) {\n                enabledItemCount = enabledItemCount - 1;\n            }\n        }\n        return enabledItemCount;\n    };\n    ContextMenu.prototype.hideContextItems = function () {\n        if (this.pdfViewer.selectedItems.annotations.length === 0) {\n            this.contextMenuObj.hideItems([this.defaultCutId, this.defaultPasteId, this.defaultDeleteId,\n                this.defaultScaleratioId, this.defaultPropertiesId], true);\n            this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n        }\n    };\n    ContextMenu.prototype.enableCommentPanelItem = function () {\n        if (this.pdfViewer.enableCommentPanel) {\n            this.contextMenuObj.enableItems([this.defaultCommentId], true, true);\n        }\n        else {\n            this.contextMenuObj.enableItems([this.defaultCommentId], false, true);\n        }\n        if (this.pdfViewer.selectedItems.formFields.length !== 0) {\n            this.contextMenuObj.enableItems([this.defaultCommentId], false, true);\n        }\n    };\n    ContextMenu.prototype.onOpeningForShape = function (isProp, isSignature) {\n        if (this.pdfViewer.annotation && this.pdfViewer.annotation.isShapeCopied) {\n            this.contextMenuObj.enableItems([this.defaultPasteId], true, true);\n        }\n        else if (this.pdfViewer.formDesigner && this.pdfViewer.formDesigner.isShapeCopied) {\n            this.contextMenuObj.enableItems([this.defaultPasteId], true, true);\n        }\n        else {\n            this.contextMenuObj.enableItems([this.defaultPasteId], false, true);\n        }\n        this.contextMenuObj.hideItems([this.defaultHighlightId, this.defaultUnderlineId, this.defaultStrikethroughId,\n            this.defaultScaleratioId], true);\n        if (isProp) {\n            if (this.pdfViewer.selectedItems.annotations.length !== 0 && (this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Line' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'LineWidthArrowHead' ||\n                this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Distance')) {\n                this.contextMenuObj.showItems([this.defaultPropertiesId], true);\n            }\n            else if (this.pdfViewer.selectedItems.formFields.length !== 0 &&\n                this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType) {\n                this.contextMenuObj.hideItems([this.defaultCommentId], true);\n                this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n                this.contextMenuObj.showItems([this.defaultPropertiesId], true);\n            }\n            else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isSignature) && this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Image' && !this.pdfViewer.selectedItems.annotations[0].id.startsWith('stamp')) {\n                this.contextMenuObj.hideItems([this.defaultPropertiesId, this.defaultCommentId, this.defaultCutId,\n                    this.defaultCopyId, this.defaultPasteId], true);\n                this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n                this.pdfViewerBase.getElement('_context_menu_comment_separator').classList.add('e-menu-hide');\n            }\n            else {\n                this.contextMenuObj.hideItems([this.defaultPropertiesId], true);\n                this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n            }\n        }\n        else if (isSignature) {\n            if ((this.pdfViewer.selectedItems.annotations[0].annotName === 'SignatureField' || this.pdfViewer.selectedItems.annotations[0].annotName === 'InitialField' || this.pdfViewer.selectedItems.annotations[0].annotName === 'SignatureText')) {\n                this.contextMenuObj.hideItems([this.defaultPropertiesId, this.defaultCommentId, this.defaultCutId,\n                    this.defaultCopyId, this.defaultPasteId], true);\n                this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n                this.pdfViewerBase.getElement('_context_menu_comment_separator').classList.add('e-menu-hide');\n            }\n            else {\n                this.contextMenuObj.hideItems([this.defaultPropertiesId, this.defaultCommentId], true);\n                this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n                this.pdfViewerBase.getElement('_context_menu_comment_separator').classList.add('e-menu-hide');\n            }\n        }\n        else {\n            this.contextMenuObj.hideItems([this.defaultCutId, this.defaultCopyId, this.defaultDeleteId,\n                this.defaultPropertiesId, this.defaultCommentId], true);\n            this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n            this.pdfViewerBase.getElement('_context_menu_comment_separator').classList.add('e-menu-hide');\n        }\n    };\n    ContextMenu.prototype.OnItemSelected = function (selectedMenu) {\n        this.pdfViewerBase.OnItemSelected(selectedMenu);\n    };\n    ContextMenu.prototype.onMenuItemSelect = function (args) {\n        var foundItem = this.filteredCustomItemsIds.find(function (item) { return item === args.item.id; });\n        var matchingItemId = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(foundItem) ? undefined : foundItem.toString();\n        if (matchingItemId) {\n            this.pdfViewer.firecustomContextMenuSelect(matchingItemId);\n        }\n        else {\n            this.pdfViewerBase.OnItemSelected(args.item.text);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        if (this.contextMenuObj) {\n            this.previousAction = '';\n            this.contextMenuObj.destroy();\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    ContextMenu.prototype.close = function () {\n        this.contextMenuObj.close();\n    };\n    /**\n     * open the context menu.\n     *\n     * @param {number} top - The top.\n     * @param {number} left - The left.\n     * @param {HTMLElement} target - The target.\n     * @returns {void}\n     */\n    ContextMenu.prototype.open = function (top, left, target) {\n        this.contextMenuObj.open(top, left, target);\n    };\n    ContextMenu.prototype.addCustomContextMenuItems = function () {\n        var idSet = new Set();\n        this.customMenuItems = this.customMenuItems.reverse().filter(function (item) { return !idSet.has(item.id) && idSet.add(item.id); }).reverse();\n        var length = this.customMenuItems.length;\n        if (length > 0) {\n            if (this.pdfViewer.showCustomContextMenuBottom === true) {\n                for (var i = 0; i < length; i++) {\n                    this.copyContextMenu.push(this.customMenuItems[parseInt(i.toString(), 10)]);\n                }\n            }\n            else {\n                for (var i = length - 1; i >= 0; i--) {\n                    this.copyContextMenu.unshift(this.customMenuItems[parseInt(i.toString(), 10)]);\n                }\n            }\n            this.contextMenuObj.items = this.copyContextMenu;\n            this.contextMenuObj.dataBind();\n        }\n        this.copyShowCustomContextMenuBottom = this.pdfViewer.showCustomContextMenuBottom;\n    };\n    ContextMenu.prototype.hideDefaultContextMenu = function () {\n        this.contextMenuObj.hideItems(this.defaultContextMenuItems);\n        this.pdfViewerBase.getElement('_context_menu_separator').classList.add('e-menu-hide');\n        this.pdfViewerBase.getElement('_context_menu_comment_separator').classList.add('e-menu-hide');\n    };\n    return ContextMenu;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/base/context-menu.js?");

/***/ })

}]);