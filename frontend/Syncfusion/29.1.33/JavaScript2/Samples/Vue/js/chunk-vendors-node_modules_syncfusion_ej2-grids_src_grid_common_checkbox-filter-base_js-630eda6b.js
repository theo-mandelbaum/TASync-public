"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-grids_src_grid_common_checkbox-filter-base_js-630eda6b"],{

/***/ "./node_modules/@syncfusion/ej2-grids/src/grid/common/checkbox-filter-base.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-grids/src/grid/common/checkbox-filter-base.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CheckBoxFilterBase: () => (/* binding */ CheckBoxFilterBase)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/util */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"./node_modules/@syncfusion/ej2-data/index.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../base/constant */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _services_value_formatter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/value-formatter */ \"./node_modules/@syncfusion/ej2-grids/src/grid/services/value-formatter.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\");\n/* tslint:disable-next-line:max-line-length */\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @hidden\n * `CheckBoxFilterBase` module is used to handle filtering action.\n */\nvar CheckBoxFilterBase = /** @class */ (function () {\n    /**\n     * Constructor for checkbox filtering module\n     *\n     * @param {IXLFilter} parent - specifies the IXLFilter\n     * @hidden\n     */\n    function CheckBoxFilterBase(parent) {\n        this.searchInputArgs = null;\n        this.isExecuteLocal = false;\n        this.queryFilteredColumn = [];\n        this.existingPredicate = {};\n        this.foreignKeyQuery = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Query();\n        /** @hidden */\n        this.filterState = true;\n        this.values = {};\n        this.renderEmpty = false;\n        this.isCheckboxFilterTemplate = false;\n        this.infiniteRenderMod = false;\n        // for infinite scroll ui\n        this.infiniteInitialLoad = false;\n        this.infiniteSearchValChange = false;\n        this.infinitePermenantLocalData = [];\n        this.infiniteQueryExecutionPending = false;\n        this.infiniteSkipCnt = 0;\n        this.infiniteScrollAppendDiff = 0;\n        this.prevInfiniteScrollDirection = '';\n        this.infiniteLoadedElem = [];\n        this.infiniteDataCount = 0;\n        this.infiniteLocalSelectAll = true;\n        this.localInfiniteSelectAllClicked = false;\n        this.localInfiniteSelectionInteracted = false;\n        this.infiniteManualSelectMaintainPred = [];\n        this.parent = parent;\n        this.id = this.parent.element.id;\n        this.valueFormatter = new _services_value_formatter__WEBPACK_IMPORTED_MODULE_5__.ValueFormatter(this.parent.locale);\n        this.cBoxTrue = (0,_syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__.createCheckBox)(this.parent.createElement, false, { checked: true, label: ' ' });\n        this.cBoxFalse = (0,_syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__.createCheckBox)(this.parent.createElement, false, { checked: false, label: ' ' });\n        this.cBoxTrue.insertBefore(this.parent.createElement('input', {\n            className: 'e-chk-hidden', attrs: { type: 'checkbox' }\n        }), this.cBoxTrue.firstChild);\n        this.cBoxFalse.insertBefore(this.parent.createElement('input', {\n            className: 'e-chk-hidden', attrs: { 'type': 'checkbox' }\n        }), this.cBoxFalse.firstChild);\n        this.cBoxFalse.querySelector('.e-frame').classList.add('e-uncheck');\n        if (this.parent.enableRtl) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.cBoxTrue, this.cBoxFalse], ['e-rtl']);\n        }\n        if (this.parent.cssClass) {\n            if (this.parent.cssClass.indexOf(' ') !== -1) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.cBoxTrue, this.cBoxFalse], this.parent.cssClass.split(' '));\n            }\n            else {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.cBoxTrue, this.cBoxFalse], [this.parent.cssClass]);\n            }\n        }\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    CheckBoxFilterBase.prototype.destroy = function () {\n        this.closeDialog();\n    };\n    CheckBoxFilterBase.prototype.wireEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.dlg, 'click', this.clickHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.dlg, 'keyup', this.keyupHandler, this);\n        this.searchHandler = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.debounce)(this.searchBoxKeyUp, 200);\n        var elem = this.dialogObj.element.querySelector('.e-searchinput');\n        if (elem) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(elem, 'keyup', this.searchHandler, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(elem, 'input', this.searchHandler, this);\n        }\n    };\n    CheckBoxFilterBase.prototype.unWireEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.dlg, 'click', this.clickHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.dlg, 'keyup', this.keyupHandler);\n        var elem = this.dialogObj.element.querySelector('.e-searchinput');\n        if (elem) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(elem, 'keyup', this.searchHandler);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(elem, 'input', this.searchHandler);\n        }\n    };\n    CheckBoxFilterBase.prototype.foreignKeyFilter = function (args, fColl, mPredicate) {\n        var _this = this;\n        var fPredicate = {};\n        var filterCollection = [];\n        var query = this.foreignKeyQuery.clone();\n        this.options.column.dataSource.\n            executeQuery(query.where(mPredicate)).then(function (e) {\n            _this.options.column.columnData = e.result;\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.generateQuery, { predicate: fPredicate, column: _this.options.column });\n            args.ejpredicate = fPredicate.predicate.predicates;\n            var fpred = fPredicate.predicate.predicates;\n            for (var i = 0; i < fpred.length; i++) {\n                filterCollection.push({\n                    field: fpred[parseInt(i.toString(), 10)].field,\n                    predicate: 'or',\n                    matchCase: fpred[parseInt(i.toString(), 10)].ignoreCase,\n                    ignoreAccent: fpred[parseInt(i.toString(), 10)].ignoreAccent,\n                    operator: fpred[parseInt(i.toString(), 10)].operator,\n                    value: fpred[parseInt(i.toString(), 10)].value,\n                    type: _this.options.type\n                });\n            }\n            args.filterCollection = filterCollection.length ? filterCollection :\n                fColl.filter(function (col) { return col.field = _this.options.field; });\n            _this.options.handler(args);\n        });\n    };\n    CheckBoxFilterBase.prototype.searchBoxClick = function (e) {\n        var target = e.target;\n        if (target.classList.contains('e-searchclear')) {\n            this.sInput.value = target.classList.contains('e-chkcancel-icon') ? '' : this.sInput.value;\n            if (this.isCheckboxFilterTemplate) {\n                this.parent.notify('refreshCheckbox', { event: e });\n            }\n            else {\n                this.refreshCheckboxes();\n            }\n            this.updateSearchIcon();\n            this.sInput.focus();\n        }\n    };\n    CheckBoxFilterBase.prototype.searchBoxKeyUp = function (e) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.sInput)) {\n            return;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e) || (e.key !== 'ArrowUp' && e.key !== 'ArrowDown' && e.key !== 'Tab' && !(e.key === 'Tab' && e.shiftKey))) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n                this.parent.showMaskRow(undefined, this.dialogObj.element);\n            }\n            if (this.isCheckboxFilterTemplate) {\n                this.parent.notify('refreshCheckbox', { event: e });\n            }\n            else {\n                this.refreshCheckboxes();\n            }\n            this.updateSearchIcon();\n        }\n    };\n    CheckBoxFilterBase.prototype.updateSearchIcon = function () {\n        if (this.sInput.value.length) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.sIcon, ['e-chkcancel-icon'], ['e-search-icon']);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.body.querySelector('.e-chkcancel-icon'))) {\n                document.body.querySelector('.e-chkcancel-icon').setAttribute('title', this.localeObj.getConstant('Clear'));\n            }\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.sIcon, ['e-search-icon'], ['e-chkcancel-icon']);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.body.querySelector('.e-searchclear.e-search-icon'))) {\n                document.body.querySelector('.e-searchclear.e-search-icon').setAttribute('title', this.localeObj.getConstant('Search'));\n            }\n        }\n    };\n    /**\n     * Gets the localized label by locale keyword.\n     *\n     * @param {string} key - Defines localization key\n     * @returns {string} - returns localization label\n     */\n    CheckBoxFilterBase.prototype.getLocalizedLabel = function (key) {\n        return this.localeObj.getConstant(key);\n    };\n    CheckBoxFilterBase.prototype.updateDataSource = function () {\n        var dataSource = this.options.dataSource;\n        var str = 'object';\n        if (!(dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager)) {\n            for (var i = 0; i < dataSource.length; i++) {\n                // eslint-disable-next-line valid-typeof\n                if (typeof dataSource !== str) {\n                    var obj = {};\n                    obj[this.options.field] = dataSource[parseInt(i.toString(), 10)];\n                    dataSource[parseInt(i.toString(), 10)] = obj;\n                }\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.updateModel = function (options) {\n        this.options = options;\n        this.existingPredicate = options.actualPredicate || {};\n        this.options.dataSource = options.dataSource;\n        this.options.dataManager = options.dataManager ? options.dataManager : options.dataSource;\n        this.updateDataSource();\n        this.options.type = options.type;\n        this.options.format = options.format || '';\n        this.options.ignoreAccent = options.ignoreAccent || false;\n        this.options.filteredColumns = options.filteredColumns || this.parent.filterSettings.columns;\n        this.options.query = options.query || new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Query();\n        this.options.allowCaseSensitive = options.allowCaseSensitive || false;\n        this.options.uid = options.column.uid;\n        this.options.disableHtmlEncode = options.column.disableHtmlEncode || false;\n        this.values = {};\n        this.localeObj = options.localeObj;\n        this.isFiltered = options.filteredColumns.length;\n        this.infiniteRenderMod = this.parent.filterSettings && this.parent.filterSettings.enableInfiniteScrolling ? true : false;\n        this.infiniteUnloadParentExistPred = this.infiniteRenderMod && this.existingPredicate[this.options.column.field] ? this.existingPredicate[this.options.column.field].slice() : [];\n    };\n    CheckBoxFilterBase.prototype.getAndSetChkElem = function (options) {\n        this.dlg = this.parent.createElement('div', {\n            id: this.id + this.options.type + '_excelDlg',\n            attrs: { uid: this.options.column.uid },\n            className: 'e-checkboxfilter e-filter-popup'\n        });\n        this.sBox = this.parent.createElement('div', { className: 'e-searchcontainer' });\n        if (!options.hideSearchbox) {\n            this.sInput = this.parent.createElement('input', {\n                id: this.id + '_SearchBox',\n                className: 'e-searchinput'\n            });\n            this.sIcon = this.parent.createElement('span', {\n                className: 'e-searchclear e-search-icon e-icons e-input-group-icon', attrs: {\n                    type: 'text', title: this.getLocalizedLabel('Search')\n                }\n            });\n            this.searchBox = this.parent.createElement('span', { className: 'e-searchbox e-fields' });\n            this.searchBox.appendChild(this.sInput);\n            this.sBox.appendChild(this.searchBox);\n            this.searchInputArgs = {\n                element: this.sInput, floatLabelType: 'Never', properties: {\n                    placeholder: this.getLocalizedLabel('Search'),\n                    cssClass: this.parent.cssClass\n                }\n            };\n            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_7__.Input.createInput(this.searchInputArgs, this.parent.createElement);\n            this.searchBox.querySelector('.e-input-group').appendChild(this.sIcon);\n        }\n        this.spinner = this.parent.createElement('div', { className: 'e-spinner' }); //for spinner\n        this.cBox = this.parent.createElement('div', {\n            id: this.id + this.options.type + '_CheckBoxList',\n            className: 'e-checkboxlist e-fields'\n        });\n        this.spinner.appendChild(this.cBox);\n        this.sBox.appendChild(this.spinner);\n        return this.sBox;\n    };\n    CheckBoxFilterBase.prototype.showDialog = function (options) {\n        var args = {\n            requestType: _base_constant__WEBPACK_IMPORTED_MODULE_4__.filterBeforeOpen,\n            columnName: this.options.field, columnType: this.options.type, cancel: false\n        };\n        var filterModel = 'filterModel';\n        args[\"\" + filterModel] = this;\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.cBoxFltrBegin, args);\n        if (args.cancel) {\n            options.cancel = args.cancel;\n            return;\n        }\n        this.dialogObj = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.Dialog({\n            visible: false, content: this.sBox,\n            close: this.closeDialog.bind(this),\n            enableRtl: this.parent.enableRtl,\n            width: (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(options.target, 'e-bigger')))\n                || this.parent.element.classList.contains('e-device') ? 260 : 255,\n            target: this.parent.element, animationSettings: { effect: 'None' },\n            buttons: [{\n                    click: this.btnClick.bind(this),\n                    buttonModel: {\n                        content: this.getLocalizedLabel(this.isExcel ? 'OKButton' : 'FilterButton'),\n                        cssClass: this.parent.cssClass ? 'e-primary' + ' ' + this.parent.cssClass : 'e-primary',\n                        isPrimary: true\n                    }\n                },\n                {\n                    click: this.btnClick.bind(this),\n                    buttonModel: { cssClass: this.parent.cssClass ? 'e-flat' + ' ' + this.parent.cssClass : 'e-flat',\n                        content: this.getLocalizedLabel(this.isExcel ? 'CancelButton' : 'ClearButton') }\n                }],\n            created: this.dialogCreated.bind(this),\n            open: this.dialogOpen.bind(this),\n            cssClass: this.parent.cssClass ? this.parent.cssClass : ''\n        });\n        var isStringTemplate = 'isStringTemplate';\n        this.dialogObj[\"\" + isStringTemplate] = true;\n        this.renderResponsiveFilter(options);\n        var dialogLabel = this.parent.filterSettings && this.parent.filterSettings.type === 'CheckBox' ?\n            this.getLocalizedLabel('CheckBoxFilterDialogARIA') : this.getLocalizedLabel('ExcelFilterDialogARIA');\n        this.dlg.setAttribute('aria-label', dialogLabel);\n        if (options.isResponsiveFilter) {\n            var responsiveCnt = document.querySelector('.e-responsive-dialog > .e-dlg-content > .e-mainfilterdiv');\n            responsiveCnt.appendChild(this.dlg);\n        }\n        else {\n            this.parent.element.appendChild(this.dlg);\n        }\n        this.dialogObj.appendTo(this.dlg);\n        this.dialogObj.element.style.maxHeight = options.isResponsiveFilter ? 'none' : this.options.height + 'px';\n        this.dialogObj.show();\n        if (this.parent && this.parent.filterSettings && (this.parent.filterSettings.type === 'CheckBox'\n            || (this.options.column && this.options.column.filter && this.options.column.filter.type === 'CheckBox')) &&\n            this.parent.getContent().firstElementChild.offsetHeight < this.dialogObj.element.offsetHeight &&\n            !(0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(this.parent.element, 'e-gantt-dialog')) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.resetDialogAppend)(this.parent, this.dialogObj);\n        }\n        var content = this.dialogObj.element.querySelector('.e-dlg-content');\n        content.appendChild(this.sBox);\n        this.wireEvents();\n        if (!this.parent.enableAdaptiveUI) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer'\n                && !this.infiniteRenderMod) {\n                this.parent.showMaskRow(undefined, this.dialogObj.element);\n            }\n            if (this.infiniteRenderMod && this.parent.filterSettings && this.parent.filterSettings.loadingIndicator === 'Shimmer') {\n                this.showMask();\n            }\n        }\n        else {\n            if (this.infiniteRenderMod && this.parent.filterSettings && this.parent.filterSettings.loadingIndicator === 'Shimmer') {\n                this.getAllData();\n                return;\n            }\n            if (this.infiniteRenderMod) {\n                this.cBox.style.marginTop = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getListHeight)(this.cBox) + 'px';\n            }\n        }\n        if (!(this.infiniteRenderMod && this.parent.filterSettings && this.parent.filterSettings.loadingIndicator === 'Shimmer')) {\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.createSpinner)({ target: this.spinner, cssClass: this.parent.cssClass ? this.parent.cssClass : null }, this.parent.createElement);\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.showSpinner)(this.spinner);\n        }\n        this.getAllData();\n    };\n    CheckBoxFilterBase.prototype.renderResponsiveFilter = function (options) {\n        if (options.isResponsiveFilter) {\n            this.dialogObj.buttons = [{}];\n            this.dialogObj.position = { X: '', Y: '' };\n            this.dialogObj.target = document.querySelector('.e-resfilter > .e-dlg-content > .e-mainfilterdiv');\n            this.dialogObj.width = '100%';\n        }\n    };\n    CheckBoxFilterBase.prototype.dialogCreated = function (e) {\n        if (this.options.isResponsiveFilter) {\n            this.dialogObj.element.style.left = '0px';\n        }\n        else {\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getFilterMenuPostion)(this.options.target, this.dialogObj);\n            }\n            else {\n                this.dialogObj.position = { X: 'center', Y: 'center' };\n            }\n        }\n        if (this.options.column.showColumnMenu) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.filterDialogCreated, e);\n        }\n    };\n    CheckBoxFilterBase.prototype.openDialog = function (options) {\n        this.updateModel(options);\n        this.getAndSetChkElem(options);\n        this.showDialog(options);\n    };\n    CheckBoxFilterBase.prototype.closeDialog = function () {\n        if (this.infiniteRenderMod && this.infinitePermenantLocalData.length && !this.options.isRemote) {\n            this.options.dataSource.dataSource.json = this.infinitePermenantLocalData;\n        }\n        if (this.dialogObj && !this.dialogObj.isDestroyed) {\n            this.isBlanks = false;\n            var filterTemplateCol = this.options.columns.filter(function (col) { return col.getFilterItemTemplate(); });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var registeredTemplate = this.parent.registeredTemplate;\n            if (filterTemplateCol.length && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(registeredTemplate) && registeredTemplate.filterItemTemplate) {\n                this.parent.destroyTemplate(['filterItemTemplate']);\n            }\n            if ((this.parent.isReact || this.parent.isVue) && this.parent.destroyTemplate !== undefined) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.clearReactVueTemplates)(this.parent, ['filterItemTemplate']);\n            }\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.filterMenuClose, { field: this.options.field });\n            this.unWireEvents();\n            if (this.searchInputArgs && this.searchInputArgs.element && this.searchInputArgs.element.parentElement) {\n                _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_7__.Input.destroy(this.searchInputArgs);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.searchInputArgs.element);\n            }\n            this.searchInputArgs = null;\n            this.sInput = null;\n            if (this.parent.isReact && this.options.column.filter && typeof (this.options.column.filter.itemTemplate) !== 'string'\n                && (this.options.column.filter.type === 'CheckBox' || this.options.column.filter.type === 'Excel')) {\n                this.dialogObj.element.querySelector('.e-dlg-content').innerHTML = '';\n            }\n            this.dialogObj.destroy();\n            if (this.dialogObj['dlgClosedBy'] === 'escape') {\n                this.parent.isColumnMenuFilterClosing = true;\n            }\n            if (this.dlg && this.dlg.parentElement) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.dlg);\n            }\n            this.dlg = null;\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.filterDialogClose, {});\n        }\n    };\n    /**\n     * @param {Column} col - Defines column details\n     * @returns {void}\n     * @hidden\n     */\n    CheckBoxFilterBase.prototype.clearFilter = function (col) {\n        // eslint-disable-next-line max-len\n        var args = { instance: this, handler: this.clearFilter, cancel: false };\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.fltrPrevent, args);\n        if (args.cancel) {\n            return;\n        }\n        this.options.handler({ action: 'clear-filter', field: col ? col.field : this.options.field });\n    };\n    CheckBoxFilterBase.prototype.btnClick = function (e) {\n        if (this.filterState) {\n            if ((e.target.tagName.toLowerCase() === 'input' && e.target.classList.contains('e-searchinput')) ||\n                e.keyCode === 13) {\n                if (!this.isCheckboxFilterTemplate) {\n                    this.fltrBtnHandler();\n                }\n            }\n            else {\n                var text = e.target.firstChild.textContent.toLowerCase();\n                if (this.getLocalizedLabel(this.isExcel ? 'OKButton' : 'FilterButton').toLowerCase() === text) {\n                    if (!this.isCheckboxFilterTemplate) {\n                        this.fltrBtnHandler();\n                    }\n                }\n                else if (this.getLocalizedLabel('ClearButton').toLowerCase() === text) {\n                    this.clearFilter();\n                }\n            }\n            this.closeDialog();\n        }\n        else if (e.target && e.target.firstChild &&\n            e.target.firstChild.textContent.toLowerCase() === this.getLocalizedLabel('CancelButton').toLowerCase()) {\n            this.closeDialog();\n        }\n        else if (!(e.target.tagName.toLowerCase() === 'input')) {\n            this.clearFilter();\n            this.closeDialog();\n        }\n        if (this.options.column.showColumnMenu) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.afterFilterColumnMenuClose, {});\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.focusModule)) {\n            this.parent.focusModule.filterfocus();\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    CheckBoxFilterBase.prototype.fltrBtnHandler = function () {\n        var _this = this;\n        if (this.infiniteRenderMod) {\n            this.cBox.innerHTML = '';\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.appendChildren)(this.cBox, this.infiniteLoadedElem.slice());\n        }\n        var checked = [].slice.call(this.cBox.querySelectorAll('.e-check:not(.e-selectall):not(.e-add-current)'));\n        var check = checked;\n        var optr = 'equal';\n        var ddlValue = this.dialogObj.element.querySelector('.e-dropdownlist');\n        if (ddlValue) {\n            this.options.operator = optr = ddlValue.ej2_instances[0].value;\n        }\n        this.isMenuNotEqual = this.options.operator === 'notequal';\n        var searchInput;\n        if (!this.options.hideSearchbox) {\n            searchInput = this.searchBox.querySelector('.e-searchinput');\n        }\n        var caseSen = this.options.allowCaseSensitive;\n        var defaults = {\n            field: this.options.field, predicate: this.isMenuNotEqual ? 'and' : 'or', uid: this.options.uid,\n            operator: optr, type: this.options.type, matchCase: caseSen, ignoreAccent: this.options.ignoreAccent\n        };\n        var isNotEqual = this.itemsCnt !== checked.length && this.itemsCnt - checked.length < checked.length;\n        if (isNotEqual && searchInput && searchInput.value === '') {\n            optr = this.isMenuNotEqual ? 'equal' : 'notequal';\n            checked = [].slice.call(this.cBox.querySelectorAll('.e-uncheck:not(.e-selectall)'));\n            defaults.predicate = this.isMenuNotEqual ? 'or' : 'and';\n            defaults.operator = optr;\n        }\n        var val;\n        var length;\n        var coll = [];\n        if ((checked.length !== this.itemsCnt || (searchInput && searchInput.value && searchInput.value !== ''))\n            || this.infiniteRenderMod) {\n            if (!this.infiniteRenderMod) {\n                coll = this.complexQueryPredicate(checked, defaults, isNotEqual);\n            }\n            else if (this.infiniteRenderMod &&\n                (!this.infiniteSearchPred || (this.infiniteSearchPred && !this.infiniteSearchPred.isComplex))) {\n                this.infiniteFltrBtnHandler(coll);\n            }\n            else {\n                if (this.infiniteSearchPred.isComplex) {\n                    coll = this.complexQueryPredicate(checked, defaults, isNotEqual);\n                }\n            }\n            if ((this.options.type === 'date' || this.options.type === 'datetime') && check.length) {\n                length = check.length - 1;\n                val = this.values[(0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(check[parseInt(length.toString(), 10)], 'e-ftrchk').getAttribute('uid')];\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(val) && isNotEqual) {\n                    coll.push({\n                        field: defaults.field, matchCase: defaults.matchCase, operator: 'equal',\n                        predicate: 'or', value: null\n                    });\n                }\n            }\n            var addCurrSelection = this.infiniteRenderMod ? this.sBox.querySelector('.e-add-current') :\n                this.cBox.querySelector('.e-add-current');\n            if (addCurrSelection && addCurrSelection.classList.contains('e-check')) {\n                var existingPredicate_1 = this.existingPredicate[this.options.field];\n                if (existingPredicate_1) {\n                    var _loop_1 = function (j) {\n                        if (!coll.some(function (data) {\n                            return data\n                                .value === existingPredicate_1[parseInt(j.toString(), 10)].value;\n                        })) {\n                            coll.push(existingPredicate_1[parseInt(j.toString(), 10)]);\n                        }\n                    };\n                    for (var j = 0; j < existingPredicate_1.length; j++) {\n                        _loop_1(j);\n                    }\n                }\n                else {\n                    return;\n                }\n            }\n            if (!this.infiniteRenderMod) {\n                this.initiateFilter(coll);\n            }\n            else if (coll.length) {\n                this.initiateFilter(coll);\n            }\n            else if (this.sBox.querySelector('.e-selectall').classList.contains('e-check') && !coll.length) {\n                var isClearFilter = this.options.filteredColumns.some(function (value) {\n                    return _this.options.field === value.field;\n                });\n                if (isClearFilter) {\n                    this.clearFilter();\n                }\n            }\n        }\n        else {\n            var isClearFilter = this.options.filteredColumns.some(function (value) {\n                return _this.options.field === value.field;\n            });\n            if (isClearFilter) {\n                this.clearFilter();\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.complexQueryPredicate = function (checkBoxChecked, defaults, isNotEqual) {\n        var value;\n        var fObj;\n        var coll = [];\n        for (var i = 0; i < checkBoxChecked.length; i++) {\n            value = this.values[(0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(checkBoxChecked[parseInt(i.toString(), 10)], 'e-ftrchk').getAttribute('uid')];\n            fObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, { value: value }, defaults);\n            if (value && !value.toString().length) {\n                fObj.operator = isNotEqual ? 'notequal' : 'equal';\n            }\n            if (value === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value)) {\n                coll = coll.concat(CheckBoxFilterBase.generateNullValuePredicates(defaults));\n            }\n            else {\n                coll.push(fObj);\n            }\n            this.notifyFilterPrevEvent(fObj);\n        }\n        return coll;\n    };\n    CheckBoxFilterBase.prototype.infiniteFltrBtnHandler = function (coll) {\n        var value;\n        if (this.infiniteManualSelectMaintainPred.length) {\n            for (var i = 0; i < this.infiniteManualSelectMaintainPred.length; i++) {\n                var pred = this.infiniteManualSelectMaintainPred[i];\n                value = pred.value + '';\n                if (value === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value)) {\n                    var dummyDefaults = { predicate: pred.predicate, field: pred.field, type: pred.type, uid: pred.uid, operator: pred.operator,\n                        matchCase: pred.matchCase, ignoreAccent: pred.ignoreAccent };\n                    coll.push.apply(coll, CheckBoxFilterBase.generateNullValuePredicates(dummyDefaults));\n                }\n                else {\n                    coll.push(this.infiniteManualSelectMaintainPred[i]);\n                }\n                this.notifyFilterPrevEvent(this.infiniteManualSelectMaintainPred[i]);\n            }\n        }\n        if (!this.localInfiniteSelectAllClicked && this.sInput.value === '' && !(!this.options.parentCurrentViewDataCount && coll.length)) {\n            for (var i = 0; i < this.infiniteUnloadParentExistPred.length; i++) {\n                coll.unshift(this.infiniteUnloadParentExistPred[i]);\n                this.notifyFilterPrevEvent(this.existingPredicate[this.options.field][i]);\n            }\n        }\n        if (this.sInput.value !== '' && (!this.localInfiniteSelectAllClicked || this.infiniteLocalSelectAll)) {\n            this.infiniteSearchPred['predicate'] = 'or';\n            coll.unshift(this.infiniteSearchPred);\n            this.notifyFilterPrevEvent(this.infiniteSearchPred);\n        }\n    };\n    CheckBoxFilterBase.prototype.notifyFilterPrevEvent = function (predicate) {\n        var args = {\n            instance: this, handler: this.fltrBtnHandler, arg1: predicate.field, arg2: predicate.predicate, arg3: predicate.operator,\n            arg4: predicate.matchCase, arg5: predicate.ignoreAccent, arg6: predicate.value, cancel: false\n        };\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.fltrPrevent, args);\n        if (args.cancel) {\n            return;\n        }\n    };\n    // eslint-disable-next-line\n    /** @hidden */\n    CheckBoxFilterBase.generateNullValuePredicates = function (defaults) {\n        var coll = [];\n        if (defaults.type === 'string') {\n            coll.push({\n                field: defaults.field, ignoreAccent: defaults.ignoreAccent, matchCase: defaults.matchCase,\n                operator: defaults.operator, predicate: defaults.predicate, value: ''\n            });\n        }\n        coll.push({\n            field: defaults.field,\n            matchCase: defaults.matchCase, operator: defaults.operator, predicate: defaults.predicate, value: null\n        });\n        coll.push({\n            field: defaults.field, matchCase: defaults.matchCase, operator: defaults.operator,\n            predicate: defaults.predicate, value: undefined\n        });\n        return coll;\n    };\n    // eslint-disable-next-line\n    /** @hidden */\n    CheckBoxFilterBase.prototype.initiateFilter = function (fColl) {\n        var firstVal = fColl[0];\n        var predicate;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(firstVal)) {\n            predicate = firstVal.ejpredicate ? firstVal.ejpredicate :\n                new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Predicate(firstVal.field, firstVal.operator, firstVal.value, !firstVal.matchCase, firstVal.ignoreAccent);\n            for (var j = 1; j < fColl.length; j++) {\n                predicate = fColl[parseInt(j.toString(), 10)].ejpredicate !== undefined ?\n                    predicate[fColl[parseInt(j.toString(), 10)].predicate](fColl[parseInt(j.toString(), 10)].ejpredicate) :\n                    predicate[fColl[parseInt(j.toString(), 10)].predicate](fColl[parseInt(j.toString(), 10)].field, fColl[parseInt(j.toString(), 10)].operator, fColl[parseInt(j.toString(), 10)].value, !fColl[parseInt(j.toString(), 10)].matchCase, fColl[parseInt(j.toString(), 10)].ignoreAccent);\n            }\n            var args = {\n                action: 'filtering', filterCollection: fColl, field: this.options.field,\n                ejpredicate: _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Predicate.or(predicate)\n            };\n            this.options.handler(args);\n        }\n    };\n    CheckBoxFilterBase.prototype.isForeignColumn = function (col) {\n        return col.isForeignColumn ? col.isForeignColumn() : false;\n    };\n    CheckBoxFilterBase.prototype.refreshCheckboxes = function () {\n        var _this = this;\n        var val = this.sInput.value;\n        var column = this.options.column;\n        var query = this.isForeignColumn(column) ? this.foreignKeyQuery.clone() : this.options.query.clone();\n        var foreignQuery = this.options.query.clone();\n        var pred = query.queries.filter(function (e) { return e && e.fn === 'onWhere'; })[0];\n        query.queries = [];\n        foreignQuery.queries = [];\n        var parsed = (this.options.type !== 'string' && parseFloat(val)) ? parseFloat(val) : val;\n        var operator = this.options.isRemote ?\n            (this.options.type === 'string' ? 'contains' : 'equal') : (this.options.type ? 'contains' : 'equal');\n        var matchCase = true;\n        var ignoreAccent = this.options.ignoreAccent;\n        var field = this.isForeignColumn(column) ? column.foreignKeyValue : column.field;\n        parsed = (parsed === '' || parsed === undefined) ? undefined : parsed;\n        var coll = [];\n        var defaults = {\n            field: field, predicate: 'or', uid: this.options.uid,\n            operator: 'equal', type: this.options.type, matchCase: matchCase, ignoreAccent: ignoreAccent\n        };\n        var predicte;\n        var moduleName = this.options.dataManager.adaptor.getModuleName;\n        if (this.options.type === 'boolean') {\n            if (parsed !== undefined &&\n                this.getLocalizedLabel('FilterTrue').toLowerCase().indexOf(parsed.toLowerCase()) !== -1) {\n                parsed = 'true';\n            }\n            else if (parsed !== undefined &&\n                this.getLocalizedLabel('FilterFalse').toLowerCase().indexOf(parsed.toLowerCase()) !== -1) {\n                parsed = 'false';\n            }\n            if (parsed !== undefined &&\n                this.getLocalizedLabel('FilterTrue').toLowerCase().indexOf(parsed.toLowerCase()) !== -1 && moduleName) {\n                // eslint-disable-next-line no-constant-condition\n                parsed = (moduleName() === 'ODataAdaptor' || 'ODataV4Adaptor') ? true : 0;\n            }\n            else if (parsed !== undefined &&\n                this.getLocalizedLabel('FilterFalse').toLowerCase().indexOf(parsed.toLowerCase()) !== -1 && moduleName) {\n                // eslint-disable-next-line no-constant-condition\n                parsed = (moduleName() === 'ODataAdaptor' || 'ODataV4Adaptor') ? false : 0;\n            }\n            operator = 'equal';\n        }\n        if ((this.options.type === 'date' || this.options.type === 'datetime' || this.options.type === 'dateonly') && this.options.format) {\n            var intl = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization();\n            var format = typeof (this.options.format) === 'string' ? this.options.format :\n                this.options.format.format;\n            if (format) {\n                parsed = intl.parseDate(val, { format: format }) || new Date(val);\n            }\n            else {\n                parsed = new Date(val);\n            }\n            if (this.options.type === 'dateonly') {\n                parsed = parsed.getFullYear() + '-' + (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.padZero)(parsed.getMonth() + 1) + '-' + (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.padZero)(parsed.getDate());\n            }\n        }\n        this.infiniteSearchValChange = true;\n        this.infiniteLoadedElem = [];\n        this.infiniteLocalSelectAll = true;\n        this.localInfiniteSelectAllClicked = false;\n        this.localInfiniteSelectionInteracted = false;\n        this.infiniteSkipCnt = 0;\n        this.infiniteDataCount = 0;\n        this.infiniteManualSelectMaintainPred = [];\n        if (this.sInput.value === '') {\n            this.infiniteUnloadParentExistPred = this.infiniteRenderMod && this.existingPredicate[this.options.column.field] ? this.existingPredicate[this.options.column.field].slice() : [];\n        }\n        else {\n            this.infiniteUnloadParentExistPred = [];\n        }\n        this.addDistinct(query);\n        var args = {\n            requestType: _base_constant__WEBPACK_IMPORTED_MODULE_4__.filterSearchBegin,\n            filterModel: this, columnName: field, column: column,\n            operator: operator, matchCase: matchCase, ignoreAccent: ignoreAccent, filterChoiceCount: null,\n            query: query, value: parsed\n        };\n        if (this.infiniteRenderMod && this.parent.filterSettings.itemsCount) {\n            args.filterChoiceCount = this.parent.filterSettings.itemsCount;\n        }\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_4__.actionBegin, args, function (filterargs) {\n            // eslint-disable-next-line no-self-assign\n            filterargs.operator = filterargs.operator;\n            predicte = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Predicate(field, filterargs.operator, args.value, filterargs.matchCase, filterargs.ignoreAccent);\n            if (_this.options.type === 'date' || _this.options.type === 'datetime' || _this.options.type === 'dateonly') {\n                operator = 'equal';\n                var filterObj = {\n                    field: field, operator: operator, value: parsed, matchCase: matchCase,\n                    ignoreAccent: ignoreAccent\n                };\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parsed)) {\n                    predicte = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getDatePredicate)(filterObj, _this.options.type);\n                }\n            }\n            if (val && typeof val === 'string' && _this.isBlanks &&\n                _this.getLocalizedLabel('Blanks').toLowerCase().indexOf(val.toLowerCase()) >= 0) {\n                coll = coll.concat(CheckBoxFilterBase.generateNullValuePredicates(defaults));\n                var emptyValPredicte = CheckBoxFilterBase.generatePredicate(coll);\n                emptyValPredicte.predicates.push(predicte);\n                predicte = emptyValPredicte;\n                query.where(emptyValPredicte);\n            }\n            else if (val.length) {\n                predicte = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pred) ? predicte.and(pred.e) : predicte;\n                query.where(predicte);\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pred)) {\n                predicte = pred.e;\n                query.where(pred.e);\n            }\n            _this.infiniteSearchPred = predicte;\n            filterargs.filterChoiceCount = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(filterargs.filterChoiceCount) ? filterargs.filterChoiceCount : 1000;\n            if (_this.infiniteRenderMod && _this.parent.filterSettings.itemsCount !== filterargs.filterChoiceCount) {\n                _this.parent.filterSettings.itemsCount = args.filterChoiceCount;\n            }\n            var fPredicate = {};\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.showSpinner)(_this.spinner);\n            _this.renderEmpty = false;\n            if (_this.isForeignColumn(column) && val.length) {\n                var colData = ('result' in column.dataSource) ? new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager(column.dataSource.result) :\n                    column.dataSource;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                colData.executeQuery(query).then(function (e) {\n                    var columnData = _this.options.column.columnData;\n                    _this.options.column.columnData = e.result;\n                    _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.generateQuery, { predicate: fPredicate, column: column });\n                    if (fPredicate.predicate.predicates.length) {\n                        foreignQuery.where(fPredicate.predicate);\n                    }\n                    else {\n                        _this.renderEmpty = true;\n                    }\n                    _this.options.column.columnData = columnData;\n                    if (_this.infiniteRenderMod) {\n                        _this.infiniteInitialLoad = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.fullData) ? true : false;\n                        _this.makeInfiniteScrollRequest(foreignQuery);\n                        foreignQuery.requiresCount();\n                    }\n                    else {\n                        foreignQuery.take(filterargs.filterChoiceCount);\n                    }\n                    _this.search(filterargs, foreignQuery);\n                });\n            }\n            else {\n                if (_this.infiniteRenderMod && _this.parent.filterSettings.itemsCount) {\n                    _this.infiniteInitialLoad = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.fullData) ? true : false;\n                    _this.makeInfiniteScrollRequest(query);\n                    query.requiresCount();\n                }\n                else {\n                    query.take(filterargs.filterChoiceCount);\n                }\n                _this.search(filterargs, query);\n            }\n        });\n    };\n    CheckBoxFilterBase.prototype.search = function (args, query) {\n        if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n            this.filterEvent(args, query);\n        }\n        else {\n            this.processSearch(query);\n        }\n    };\n    CheckBoxFilterBase.prototype.getPredicateFromCols = function (columns, isExecuteLocal) {\n        var predicates = CheckBoxFilterBase.getPredicate(columns, isExecuteLocal);\n        var predicateList = [];\n        var fPredicate = {};\n        var isGrid = this.parent.getForeignKeyColumns !== undefined;\n        var foreignColumn = isGrid ? this.parent.getForeignKeyColumns() : [];\n        for (var _i = 0, _a = Object.keys(predicates); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            var col = void 0;\n            if (isGrid && !this.parent.getColumnByField(prop)) {\n                col = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getColumnByForeignKeyValue)(prop, foreignColumn);\n            }\n            if (col) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.generateQuery, { predicate: fPredicate, column: col });\n                if (fPredicate.predicate.predicates.length) {\n                    predicateList.push(_syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Predicate.or(fPredicate.predicate.predicates));\n                }\n            }\n            else {\n                predicateList.push(predicates[\"\" + prop]);\n            }\n        }\n        return predicateList.length && _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Predicate.and(predicateList);\n    };\n    CheckBoxFilterBase.prototype.getQuery = function () {\n        return this.parent.getQuery ? this.parent.getQuery().clone() : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Query();\n    };\n    CheckBoxFilterBase.prototype.getAllData = function () {\n        var _this = this;\n        this.customQuery = false;\n        var query = this.getQuery();\n        var moduleName = this.options.dataManager.adaptor.getModuleName;\n        if (!(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.getDataModule) && moduleName && moduleName() === 'ODataV4Adaptor')) {\n            query.requiresCount(); //consider take query\n        }\n        this.addDistinct(query);\n        var args = {\n            requestType: _base_constant__WEBPACK_IMPORTED_MODULE_4__.filterChoiceRequest, query: query, filterChoiceCount: null\n        };\n        var filterModel = 'filterModel';\n        args[\"\" + filterModel] = this;\n        if (this.infiniteRenderMod && this.parent.filterSettings.itemsCount) {\n            args.filterChoiceCount = this.parent.filterSettings.itemsCount;\n        }\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_4__.actionBegin, args, function (args) {\n            args.filterChoiceCount = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.filterChoiceCount) ? args.filterChoiceCount : 1000;\n            if (_this.infiniteRenderMod && _this.parent.filterSettings.itemsCount !== args.filterChoiceCount) {\n                _this.parent.filterSettings.itemsCount = args.filterChoiceCount;\n            }\n            if (!_this.infiniteRenderMod) {\n                query.take(args.filterChoiceCount);\n            }\n            if (!args.query.distincts.length || _this.infiniteRenderMod) {\n                _this.customQuery = true;\n                _this.queryGenerate(query);\n            }\n            if (_this.infiniteRenderMod) {\n                _this.infiniteInitialLoad = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.fullData) ? true : false;\n                _this.makeInfiniteScrollRequest(query);\n            }\n            if (_this.parent.dataSource && 'result' in _this.parent.dataSource) {\n                _this.filterEvent(args, query);\n            }\n            else {\n                _this.processDataOperation(query, true);\n            }\n        });\n    };\n    CheckBoxFilterBase.prototype.addDistinct = function (query) {\n        var _this = this;\n        var filteredColumn = _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataUtil.distinct(this.options.filteredColumns, 'field');\n        if (filteredColumn.indexOf(this.options.column.field) <= -1) {\n            filteredColumn = filteredColumn.concat(this.options.column.field);\n        }\n        var moduleName = this.options.dataManager.adaptor.getModuleName;\n        if (moduleName && moduleName() === 'ODataV4Adaptor' && this.parent &&\n            this.parent.query instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Query) {\n            var gridQuery = this.parent.query;\n            for (var i = 0; i < gridQuery.queries.length; i++) {\n                var queryOptions = gridQuery.queries[parseInt(i.toString(), 10)];\n                if (queryOptions.fn === 'onWhere') {\n                    this.getPredicateFields(queryOptions.e);\n                    this.queryFilteredColumn.map(function (field) {\n                        if (filteredColumn.indexOf(field) === -1) {\n                            filteredColumn.push(field);\n                        }\n                    });\n                    this.queryFilteredColumn = [];\n                }\n            }\n        }\n        if (!this.infiniteRenderMod) {\n            query.distinct(filteredColumn);\n        }\n        if (this.infiniteRenderMod && !this.options.isRemote && this.sInput.value === '') {\n            this.options.dataSource = this.options.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager ?\n                this.options.dataSource : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager(this.options.dataSource);\n            this.infinitePermenantLocalData = this.options.dataSource.dataSource.json.slice();\n            var query1 = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Query();\n            this.queryGenerate(query1);\n            var result = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager(this.options.dataSource.dataSource).executeLocal(query1);\n            this.options.dataSource.dataSource.json = _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataUtil.distinct(result, this.options.column.field, true);\n            if (this.isForeignColumn(this.options.column)) {\n                this.options.column.dataSource = this.options.column.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager ?\n                    this.options.column.dataSource : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager(this.options.column.dataSource);\n                this.options.dataSource.dataSource.json = this.options.dataSource.dataSource.json.map(function (item, i) {\n                    return Object.assign({}, item, _this.options.column.dataSource.dataSource.json[i]);\n                });\n            }\n        }\n        else if (this.infiniteRenderMod && this.options.isRemote) {\n            query.select(this.options.column.field);\n            query.sortBy(this.options.column.field, 'ascending');\n            var moduleName_1 = this.options.dataManager.adaptor.getModuleName;\n            if (moduleName_1 && moduleName_1() && (moduleName_1() === 'ODataV4Adaptor' || moduleName_1() === 'WebApiAdaptor'\n                || moduleName_1() === 'CustomDataAdaptor' || moduleName_1() === 'GraphQLAdaptor' || moduleName_1() === 'ODataAdaptor')) {\n                query.distinct(filteredColumn);\n            }\n        }\n        return query;\n    };\n    CheckBoxFilterBase.prototype.getPredicateFields = function (query) {\n        var _this = this;\n        if (query.isComplex && query.predicates) {\n            query.predicates.forEach(function (predicate) {\n                if (Array.isArray(predicate)) {\n                    predicate.forEach(function (p) { return _this.getPredicateFields(p); });\n                }\n                else {\n                    _this.getPredicateFields(predicate);\n                }\n            });\n        }\n        else {\n            if (query.field && !query.isComplex) {\n                if (this.queryFilteredColumn.indexOf(query.field) <= -1) {\n                    this.queryFilteredColumn = this.queryFilteredColumn.concat(_syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataUtil.distinct([query.field], 'field'));\n                }\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.filterEvent = function (args, query) {\n        var _this = this;\n        var defObj = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.eventPromise)(args, query);\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_4__.dataStateChange, defObj.state);\n        this.addInfiniteScrollEvent(query);\n        var def = defObj.deffered;\n        def.promise.then(function (e) {\n            _this.infiniteDataCount = _this.infiniteRenderMod && !_this.infiniteDataCount ? e['count'] : _this.infiniteDataCount;\n            var dataResult = _this.infiniteRenderMod ? e['result'] : e;\n            _this.dataSuccess(dataResult);\n        });\n    };\n    CheckBoxFilterBase.prototype.addInfiniteScrollEvent = function (query) {\n        if (this.infiniteRenderMod) {\n            this.infiniteQuery = query.clone();\n            if (this.infiniteInitialLoad) {\n                this.cBox.classList.add('e-checkbox-infinitescroll');\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.cBox, 'scroll', this.infiniteScrollHandler, this);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.cBox, 'mouseup', this.infiniteScrollMouseKeyUpHandler, this);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.cBox, 'mousedown', this.infiniteScrollMouseKeyDownHandler, this);\n            }\n            else if (this.infiniteSearchValChange) {\n                this.cBox.innerHTML = '';\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.infiniteScrollMouseKeyDownHandler = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.cBox, 'scroll', this.infiniteScrollHandler);\n    };\n    CheckBoxFilterBase.prototype.infiniteScrollMouseKeyUpHandler = function (e) {\n        var _this = this;\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.cBox, 'scroll', this.infiniteScrollHandler, this);\n        var target = this.cBox;\n        if (target.children.length > 1 && (target.scrollTop >= target.scrollHeight - target.offsetHeight || target.scrollTop <= 0)) {\n            this.infiniteScrollHandler();\n        }\n        _base_util__WEBPACK_IMPORTED_MODULE_1__.Global.timer = setTimeout(function () { _this.clickHandler(e); _base_util__WEBPACK_IMPORTED_MODULE_1__.Global.timer = null; }, 0);\n    };\n    CheckBoxFilterBase.prototype.getShimmerTemplate = function () {\n        return '<span class=\"e-mask e-skeleton e-skeleton-text e-shimmer-wave\"></span>';\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    CheckBoxFilterBase.prototype.showMask = function () {\n        var maskRowCount = 5;\n        var maskItemHeight;\n        var maskList = this.parent.createElement('div', { id: this.id + this.options.type + '_CheckBoxMaskList',\n            className: 'e-checkboxlist e-fields e-infinite-list e-masklist' });\n        maskList.style.zIndex = '10';\n        var wrapperElem = this.cBox;\n        this.removeMask();\n        if (wrapperElem) {\n            var computedStyle = getComputedStyle(wrapperElem);\n            var liHeight = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getListHeight)(wrapperElem);\n            var height = wrapperElem.children.length ? parseInt(computedStyle.height, 10) :\n                Math.floor(parseInt(computedStyle.height.split('px')[0], 10)) - 5;\n            if (this.parent.enableAdaptiveUI && this.infiniteRenderMod) {\n                maskList.style.height = (height - liHeight) + 'px';\n                this.dlg.querySelector('.e-dlg-content').style.overflow = 'hidden';\n            }\n            var backgroundColor = this.isExcel && !wrapperElem.children.length && !this.dlg.classList.contains('e-excelfilter') ?\n                '' : getComputedStyle(this.dlg.querySelector('.e-dlg-content')).backgroundColor;\n            maskList.style.cssText = 'width: ' + computedStyle.width + '; min-height: ' + computedStyle.minHeight + '; height: ' +\n                height + 'px; margin: ' + computedStyle.margin + '; border-style: ' + computedStyle.borderStyle + '; border-width: '\n                + computedStyle.borderWidth + '; border-color: ' + computedStyle.borderColor + '; position: absolute; background-color: ' +\n                backgroundColor + ';';\n            maskRowCount = Math.floor(height / liHeight);\n            maskRowCount = wrapperElem.children.length > maskRowCount ? wrapperElem.children.length : maskRowCount;\n            maskItemHeight = liHeight + 'px';\n        }\n        var maskTemplate = '<div class=\"e-ftrchk e-mask-ftrchk\">'\n            + '<div class=\"e-checkbox-wrapper\"><input class=\"e-chk-hidden\">'\n            + this.getShimmerTemplate() + this.getShimmerTemplate() + '</div></div>';\n        maskList.innerHTML = '';\n        if (!wrapperElem.children.length) {\n            this.spinner.insertAdjacentHTML('beforebegin', maskTemplate);\n            this.spinner.parentElement.querySelector('.e-ftrchk.e-mask-ftrchk').style.cssText =\n                'width: 100%; height: ' + maskItemHeight + ';';\n            this.spinner.parentElement.querySelector('.e-checkbox-wrapper').style.width = '100%';\n            var maskSpan = [].slice.call(this.spinner.parentElement\n                .querySelectorAll('.e-mask:not(.e-mask-checkbox-filter-intent):not(.e-mask-checkbox-filter-span-intent)'));\n            maskSpan[0].classList.add('e-mask-checkbox-filter-intent');\n            maskSpan[1].classList.add('e-mask-checkbox-filter-span-intent');\n        }\n        this.spinner.insertBefore(maskList, this.cBox);\n        for (var i = 0; maskRowCount && i < maskRowCount; i++) {\n            maskList.innerHTML += maskTemplate;\n            maskList.lastElementChild.style.cssText =\n                'width: 100%; height: ' + maskItemHeight + ';';\n            maskList.lastElementChild.querySelector('.e-checkbox-wrapper').style.width = '100%';\n            var maskSpan = [].slice.call(maskList\n                .querySelectorAll('.e-mask:not(.e-mask-checkbox-filter-intent):not(.e-mask-checkbox-filter-span-intent)'));\n            maskSpan[0].classList.add('e-mask-checkbox-filter-intent');\n            maskSpan[1].classList.add('e-mask-checkbox-filter-span-intent');\n        }\n        if (this.cBox) {\n            maskList.scrollTop = this.cBox.scrollTop;\n        }\n    };\n    CheckBoxFilterBase.prototype.removeMask = function () {\n        var maskLists = this.dialogObj.element.querySelectorAll('.e-mask-ftrchk');\n        if (maskLists.length) {\n            for (var i = 0; i < maskLists.length; i++) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(maskLists[i]);\n            }\n        }\n        var maskParent = this.dialogObj.element.querySelector('.e-checkboxlist.e-masklist');\n        if (maskParent) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.dialogObj.element.querySelector('.e-checkboxlist.e-masklist'));\n        }\n    };\n    CheckBoxFilterBase.prototype.infiniteScrollHandler = function () {\n        var target = this.cBox;\n        if (target.scrollTop >= target.scrollHeight - target.offsetHeight && !this.infiniteQueryExecutionPending\n            && this.infiniteLoadedElem.length <= (this.infiniteSkipCnt + this.parent.filterSettings.itemsCount)\n            && this.cBox.children.length === this.parent.filterSettings.itemsCount * 3\n            && (!this.infiniteDataCount || this.infiniteDataCount > (this.infiniteSkipCnt + this.parent.filterSettings.itemsCount))) {\n            this.makeInfiniteScrollRequest();\n            this.prevInfiniteScrollDirection = 'down';\n        }\n        else if (target.scrollTop >= target.scrollHeight - target.offsetHeight && !this.infiniteQueryExecutionPending\n            && this.infiniteLoadedElem.length > (this.infiniteSkipCnt + this.parent.filterSettings.itemsCount)\n            && this.cBox.children.length === this.parent.filterSettings.itemsCount * 3) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.infiniteRemoveElements)(([].slice.call(this.cBox.children)).splice(0, this.parent.filterSettings.itemsCount));\n            this.infiniteSkipCnt += this.prevInfiniteScrollDirection === 'down' ? this.parent.filterSettings.itemsCount :\n                (this.parent.filterSettings.itemsCount * 3);\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.appendChildren)(this.cBox, this.infiniteLoadedElem.slice(this.infiniteSkipCnt, this.parent.filterSettings.itemsCount +\n                this.infiniteSkipCnt));\n            this.prevInfiniteScrollDirection = 'down';\n        }\n        else if (target.scrollTop === 0 && !this.infiniteInitialLoad && !this.infiniteSearchValChange && this.infiniteSkipCnt\n            && this.infiniteLoadedElem.length && this.infiniteLoadedElem.length > this.parent.filterSettings.itemsCount * 3\n            && this.cBox.children.length === this.parent.filterSettings.itemsCount * 3) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.infiniteRemoveElements)(([].slice.call(this.cBox.children)).splice((this.parent.filterSettings\n                .itemsCount * 2), this.parent.filterSettings.itemsCount));\n            this.infiniteSkipCnt -= this.prevInfiniteScrollDirection === 'up' ? this.parent.filterSettings.itemsCount :\n                (this.parent.filterSettings.itemsCount * 3);\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.infiniteAppendElements)([].slice.call(this.infiniteLoadedElem.slice(this.infiniteSkipCnt, this.infiniteSkipCnt +\n                this.parent.filterSettings.itemsCount)), this.cBox);\n            this.cBox.scrollTop = this.infiniteScrollAppendDiff;\n            this.prevInfiniteScrollDirection = 'up';\n        }\n        else if (target.scrollTop === 0 && !this.infiniteInitialLoad && !this.infiniteSearchValChange && this.infiniteSkipCnt\n            && this.infiniteLoadedElem.length && this.cBox.children.length < this.parent.filterSettings.itemsCount * 3) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.infiniteRemoveElements)(([].slice.call(this.cBox.children)).splice((this.parent.filterSettings\n                .itemsCount * 2), this.infiniteDataCount % this.parent.filterSettings.itemsCount));\n            this.infiniteSkipCnt = (Math.floor(this.infiniteDataCount / this.parent.filterSettings.itemsCount) - 3) *\n                this.parent.filterSettings.itemsCount;\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.infiniteAppendElements)([].slice.call(this.infiniteLoadedElem.slice(this.infiniteSkipCnt, this.infiniteSkipCnt +\n                this.parent.filterSettings.itemsCount)), this.cBox);\n            this.cBox.scrollTop = this.infiniteScrollAppendDiff;\n            this.prevInfiniteScrollDirection = 'up';\n        }\n    };\n    CheckBoxFilterBase.prototype.makeInfiniteScrollRequest = function (query) {\n        var _this = this;\n        if (!this.infiniteInitialLoad && this.parent.filterSettings && this.parent.filterSettings.loadingIndicator === 'Shimmer') {\n            setTimeout(function () {\n                if (_this.infiniteQueryExecutionPending) {\n                    _this.showMask();\n                }\n            }, 500);\n        }\n        else if (!this.infiniteInitialLoad) {\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.createSpinner)({ target: this.spinner, cssClass: this.parent.cssClass ? this.parent.cssClass : null }, this.parent\n                .createElement);\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.showSpinner)(this.spinner);\n        }\n        var fName = 'fn';\n        if (this.infiniteQuery && this.infiniteQuery.queries && this.infiniteQuery.queries.length) {\n            for (var i = 0; i < this.infiniteQuery.queries.length; i++) {\n                if (this.infiniteQuery.queries[i][\"\" + fName] === 'onTake'\n                    || this.infiniteQuery.queries[i][\"\" + fName] === 'onSkip') {\n                    this.infiniteQuery.queries.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n        var existQuery = query ? true : false;\n        query = query ? query : this.infiniteQuery;\n        if (this.infiniteInitialLoad || this.infiniteSearchValChange) {\n            this.infiniteSkipCnt = 0;\n        }\n        else {\n            this.infiniteSkipCnt += this.parent.filterSettings.itemsCount;\n        }\n        query.skip(this.infiniteSkipCnt);\n        if (this.infiniteInitialLoad || this.infiniteSearchValChange) {\n            query.take(this.parent.filterSettings.itemsCount * 3);\n            this.infiniteSkipCnt += this.parent.filterSettings.itemsCount * 2;\n        }\n        else {\n            query.take(this.parent.filterSettings.itemsCount);\n        }\n        if (!existQuery) {\n            if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n                var args = {\n                    requestType: _base_constant__WEBPACK_IMPORTED_MODULE_4__.filterChoiceRequest, query: query, filterChoiceCount: null, filterModel: this\n                };\n                if (this.infiniteRenderMod && this.parent.filterSettings.itemsCount) {\n                    args.filterChoiceCount = this.parent.filterSettings.itemsCount;\n                }\n                this.filterEvent(args, query);\n            }\n            else {\n                this.processDataOperation(query);\n                this.infiniteQueryExecutionPending = true;\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.processDataOperation = function (query, isInitial) {\n        var _this = this;\n        this.options.dataSource = this.options.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager ?\n            this.options.dataSource : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager(this.options.dataSource);\n        var allPromise = [];\n        var runArray = [];\n        if (this.isForeignColumn(this.options.column) && isInitial) {\n            var colData = ('result' in this.options.column.dataSource) ?\n                new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager(this.options.column.dataSource.result) :\n                this.options.column.dataSource;\n            this.foreignKeyQuery.params = query.params;\n            allPromise.push(colData.executeQuery(this.foreignKeyQuery));\n            runArray.push(function (data) { return _this.foreignKeyData = data; });\n        }\n        this.addInfiniteScrollEvent(query);\n        if (this.infiniteRenderMod && this.infiniteInitialLoad && !this.options.isRemote) {\n            var field = this.isForeignColumn(this.options.column) ? this.options.foreignKeyValue :\n                this.options.column.field;\n            this.options.dataSource.executeQuery(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Query().sortBy(field, _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataUtil.fnAscending)).then(function (e) {\n                _this.options.dataSource.dataSource.json = e.result;\n                _this.executeQueryOperations(query, allPromise, runArray);\n            });\n        }\n        else {\n            this.executeQueryOperations(query, allPromise, runArray);\n        }\n    };\n    CheckBoxFilterBase.prototype.executeQueryOperations = function (query, allPromise, runArray) {\n        var _this = this;\n        allPromise.push(this.options.dataSource.executeQuery(query));\n        runArray.push(this.dataSuccess.bind(this));\n        var i = 0;\n        Promise.all(allPromise).then(function (e) {\n            _this.infiniteQueryExecutionPending = _this.infiniteRenderMod ? false : _this.infiniteQueryExecutionPending;\n            for (var j = 0; j < e.length; j++) {\n                _this.infiniteDataCount = _this.infiniteRenderMod && !_this.infiniteDataCount ? e[j].count : _this.infiniteDataCount;\n                runArray[i++](e[parseInt(j.toString(), 10)].result);\n            }\n        }).catch(function () {\n            if (_this.infiniteRenderMod && _this.parent.filterSettings && _this.parent.filterSettings.loadingIndicator === 'Shimmer') {\n                _this.parent.showMaskRow(undefined, _this.dialogObj.element);\n            }\n        });\n    };\n    CheckBoxFilterBase.prototype.dataSuccess = function (e) {\n        if (!this.infiniteInitialLoad && this.infiniteDataCount && ((this.infiniteSkipCnt >= this.infiniteDataCount\n            && !this.infiniteSearchValChange) || (e.length === 0))) {\n            return;\n        }\n        this.fullData = e;\n        var args1 = { dataSource: this.fullData, executeQuery: true, field: this.options.field };\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.beforeCheckboxRenderer, args1);\n        if (args1.executeQuery) {\n            var query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Query();\n            if (!this.customQuery) {\n                this.isExecuteLocal = true;\n                this.queryGenerate(query);\n                this.isExecuteLocal = false;\n            }\n            // query.select(this.options.field);\n            var result = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager(args1.dataSource).executeLocal(query);\n            var col = this.options.column;\n            this.filteredData = CheckBoxFilterBase.getDistinct(result, this.options.field, col, this.foreignKeyData, this).records || [];\n        }\n        var data = args1.executeQuery ? this.filteredData : args1.dataSource;\n        this.processDataSource(null, true, data, args1);\n        if ((this.infiniteRenderMod && this.infiniteInitialLoad) || !this.infiniteRenderMod) {\n            if (this.sInput) {\n                this.sInput.focus();\n            }\n            else if (this.dlg.querySelector('.e-chk-hidden') && this.dlg.querySelector('.e-ftrchk')) {\n                this.dlg.querySelector('.e-chk-hidden').focus();\n                this.dlg.querySelector('.e-ftrchk').classList.add('e-chkfocus');\n            }\n        }\n        if (this.infiniteInitialLoad || this.infiniteSearchValChange) {\n            this.infiniteInitialLoad = false;\n            this.infiniteSearchValChange = false;\n        }\n        var args = {\n            requestType: _base_constant__WEBPACK_IMPORTED_MODULE_4__.filterAfterOpen,\n            columnName: this.options.field, columnType: this.options.type\n        };\n        var filterModel = 'filterModel';\n        args[\"\" + filterModel] = this;\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.cBoxFltrComplete, args);\n        if (this.isCheckboxFilterTemplate) {\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.hideSpinner)(this.spinner);\n        }\n    };\n    CheckBoxFilterBase.prototype.queryGenerate = function (query) {\n        if (this.parent.searchSettings && this.parent.searchSettings.key.length) {\n            var moduleName = this.options.dataManager.adaptor.getModuleName;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.getDataModule) && moduleName && moduleName() === 'ODataV4Adaptor') {\n                this.parent.getDataModule().searchQuery(query);\n            }\n            else {\n                var searchSettings = this.parent.searchSettings;\n                var fields = searchSettings.fields.length ? searchSettings.fields\n                    : this.options.columns.map(function (f) { return f.field; });\n                query.search(searchSettings.key, fields, searchSettings.operator, searchSettings.ignoreCase, searchSettings.ignoreAccent);\n            }\n        }\n        if ((this.options.filteredColumns.length)) {\n            var cols = [];\n            for (var i = 0; i < this.options.filteredColumns.length; i++) {\n                var filterColumn = this.options.filteredColumns[parseInt(i.toString(), 10)];\n                if (this.options.uid) {\n                    filterColumn.uid = filterColumn.uid || this.parent.getColumnByField(filterColumn.field).uid;\n                    if (filterColumn.uid !== this.options.uid) {\n                        cols.push(this.options.filteredColumns[parseInt(i.toString(), 10)]);\n                    }\n                }\n                else {\n                    if (filterColumn.field !== this.options.field) {\n                        cols.push(this.options.filteredColumns[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            var predicate = this.getPredicateFromCols(cols, this.isExecuteLocal);\n            if (predicate) {\n                query.where(predicate);\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.processDataSource = function (query, isInitial, dataSource, args) {\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.showSpinner)(this.spinner);\n        // query = query ? query : this.options.query.clone();\n        // query.requiresCount();\n        // let result: Object = new DataManager(dataSource as JSON[]).executeLocal(query);\n        // let res: { result: Object[] } = result as { result: Object[] };\n        this.isExecuteLocal = true;\n        this.updateResult();\n        this.isExecuteLocal = false;\n        var args1 = { dataSource: this.fullData, isCheckboxFilterTemplate: false, column: this.options.column,\n            element: this.cBox, type: this.options.type, format: this.options.type, btnObj: this.options.isResponsiveFilter ? null :\n                this.dialogObj.btnObj[0], searchBox: this.searchBox };\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.beforeCheckboxfilterRenderer, args1);\n        this.isCheckboxFilterTemplate = args1.isCheckboxFilterTemplate;\n        if (!this.isCheckboxFilterTemplate) {\n            this.createFilterItems(dataSource, isInitial, args);\n        }\n        else if (this.infiniteRenderMod && this.parent.filterSettings && this.parent.filterSettings.loadingIndicator === 'Shimmer') {\n            this.removeMask();\n        }\n    };\n    CheckBoxFilterBase.prototype.processSearch = function (query) {\n        this.processDataOperation(query);\n    };\n    CheckBoxFilterBase.prototype.updateResult = function () {\n        this.result = {};\n        var predicate = this.infiniteRenderMod && this.existingPredicate[this.options.field] ?\n            this.getPredicateFromCols(this.existingPredicate[this.options.field], this.isExecuteLocal) :\n            this.getPredicateFromCols(this.options.filteredColumns, this.isExecuteLocal);\n        var query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Query();\n        if (predicate) {\n            query.where(predicate);\n        }\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.beforeCheckboxRendererQuery, { query: query });\n        var result = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager(this.fullData).executeLocal(query);\n        for (var _i = 0, result_1 = result; _i < result_1.length; _i++) {\n            var res = result_1[_i];\n            this.result[(0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getObject)(this.options.field, res)] = true;\n        }\n    };\n    CheckBoxFilterBase.prototype.clickHandler = function (e) {\n        var _a;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_base_util__WEBPACK_IMPORTED_MODULE_1__.Global.timer)) {\n            clearTimeout(_base_util__WEBPACK_IMPORTED_MODULE_1__.Global.timer);\n        }\n        var target = e.target;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer'\n            && (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(target, 'e-mask-ftrchk')) {\n            return;\n        }\n        var elem = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(target, 'e-checkbox-wrapper');\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(target, 'e-searchbox')) {\n            this.searchBoxClick(e);\n        }\n        if (elem && !this.isCheckboxFilterTemplate) {\n            var selectAll = elem.querySelector('.e-selectall');\n            if (selectAll) {\n                this.updateAllCBoxes(!selectAll.classList.contains('e-check'));\n            }\n            else {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.toogleCheckbox)(elem.parentElement);\n                if (this.infiniteRenderMod && !elem.parentElement.querySelector('.e-add-current')) {\n                    this.localInfiniteSelectionInteracted = true;\n                    var caseSen = this.options.allowCaseSensitive;\n                    var span = elem.parentElement.querySelector('.e-frame');\n                    var input = span.previousSibling;\n                    var optr = input.checked ? 'equal' : 'notequal';\n                    var pred = input.checked ? 'or' : 'and';\n                    var defaults = { field: this.options.field, predicate: pred, uid: this.options.uid,\n                        operator: optr, type: this.options.type, matchCase: caseSen, ignoreAccent: this.options.ignoreAccent\n                    };\n                    var value = this.values[(0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(input, 'e-ftrchk').getAttribute('uid')];\n                    this.updateInfiniteManualSelectPred(defaults, value);\n                    if (this.infiniteRenderMod && !this.options.isRemote && this.options.parentTotalDataCount\n                        && this.infiniteUnloadParentExistPred.length) {\n                        var predicate = this.getPredicateFromCols((_a = this.options.filteredColumns).concat.apply(_a, this.infiniteManualSelectMaintainPred), true);\n                        var query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Query();\n                        if (predicate) {\n                            query.where(predicate);\n                        }\n                        var result = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager(this.infinitePermenantLocalData).executeLocal(query);\n                        if (this.options.parentTotalDataCount !== result.length) {\n                            this.options.parentTotalDataCount = result.length;\n                        }\n                        if (!this.options.parentTotalDataCount && this.infiniteUnloadParentExistPred.length) {\n                            this.infiniteUnloadParentExistPred = [];\n                        }\n                    }\n                    if (this.infiniteUnloadParentExistPred.length && (this.options.parentTotalDataCount === this.infiniteDataCount\n                        || !this.options.parentTotalDataCount)) {\n                        this.infiniteUnloadParentExistPred = [];\n                    }\n                }\n            }\n            this.updateIndeterminatenBtn();\n            elem.querySelector('.e-chk-hidden').focus();\n        }\n        this.setFocus((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(elem, 'e-ftrchk'));\n    };\n    CheckBoxFilterBase.prototype.updateInfiniteManualSelectPred = function (defaults, value) {\n        for (var i = 0; i < this.infiniteManualSelectMaintainPred.length; i++) {\n            var predmdl = this.infiniteManualSelectMaintainPred[i];\n            if (predmdl.value + '' === value + '' && (predmdl.operator === 'equal' || predmdl.operator === 'notequal')) {\n                this.infiniteManualSelectMaintainPred.splice(i, 1);\n                break;\n            }\n        }\n        if ((defaults.predicate === 'or' && (!this.localInfiniteSelectAllClicked || !this.infiniteLocalSelectAll))\n            || (defaults.predicate === 'and' && (!this.localInfiniteSelectAllClicked || this.infiniteLocalSelectAll))) {\n            this.infiniteManualSelectMaintainPred.push((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, { value: value }, defaults));\n            if (defaults.predicate === 'or') {\n                this.options.parentTotalDataCount++;\n            }\n            else {\n                this.options.parentTotalDataCount--;\n            }\n        }\n    };\n    /**\n     * Method to set the next target element on keyboard navigation using arrow keys.\n     *\n     * @param {KeyboardEventArgs} e - Defines the Keyboard event argument\n     * @param {HTMLElement[]} focusableElements - Defines the Focusable elements\n     * @returns {void}\n     */\n    CheckBoxFilterBase.prototype.focusNextOrPrev = function (e, focusableElements) {\n        var nextIndex = (e.key === 'ArrowUp') ? focusableElements.indexOf(document.activeElement) - 1\n            : focusableElements.indexOf(document.activeElement) + 1;\n        var nextElement = focusableElements[((nextIndex + focusableElements.length) % focusableElements.length)];\n        // Set focus on the next / previous element\n        if (nextElement) {\n            nextElement.focus();\n            var target = nextElement.classList.contains('e-chk-hidden') ? (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(nextElement, 'e-ftrchk') : nextElement;\n            this.setFocus(target);\n        }\n    };\n    CheckBoxFilterBase.prototype.keyupHandler = function (e) {\n        if (e.key === 'Tab' || ((e.key === 'ArrowUp' || e.key === 'ArrowDown') && !e.altKey)) {\n            this.setFocus((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(e.target, 'e-ftrchk'));\n        }\n        if ((e.key === 'ArrowUp' || e.key === 'ArrowDown') && !e.altKey && this.parent.filterSettings\n            && this.parent.filterSettings.type === 'CheckBox') {\n            e.preventDefault();\n            var focusableElements = Array.from(this.dlg.querySelectorAll('input, button, [tabindex]:not([tabindex=\"-1\"])'));\n            this.focusNextOrPrev(e, focusableElements);\n        }\n    };\n    CheckBoxFilterBase.prototype.setFocus = function (elem) {\n        var prevElem = this.dlg.querySelector('.e-chkfocus');\n        if (prevElem) {\n            prevElem.classList.remove('e-chkfocus');\n        }\n        if (elem && elem !== prevElem) {\n            elem.classList.add('e-chkfocus');\n        }\n    };\n    CheckBoxFilterBase.prototype.updateAllCBoxes = function (checked) {\n        if (this.infiniteRenderMod) {\n            this.localInfiniteSelectAllClicked = true;\n            this.infiniteLocalSelectAll = checked;\n            this.infiniteUnloadParentExistPred = [];\n            this.infiniteManualSelectMaintainPred = [];\n        }\n        var cBoxes = this.infiniteRenderMod ?\n            this.infiniteLoadedElem.map(function (arr) {\n                return arr.querySelector('.e-frame');\n            }) : [].slice.call(this.cBox.querySelectorAll('.e-frame:not(.e-add-current)'));\n        for (var _i = 0, cBoxes_1 = cBoxes; _i < cBoxes_1.length; _i++) {\n            var cBox = cBoxes_1[_i];\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.removeAddCboxClasses)(cBox, checked);\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.setChecked)(cBox.previousSibling, checked);\n        }\n    };\n    CheckBoxFilterBase.prototype.dialogOpen = function () {\n        if (this.parent.element.classList.contains('e-device')) {\n            this.dialogObj.element.querySelector('.e-input-group').classList.remove('e-input-focus');\n            if (!this.options.isResponsiveFilter) {\n                this.dialogObj.element.querySelector('.e-btn').focus();\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.createCheckbox = function (value, checked, data) {\n        var elem = checked ? this.cBoxTrue.cloneNode(true) :\n            this.cBoxFalse.cloneNode(true);\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.setChecked)(elem.querySelector('input'), checked);\n        var label = elem.querySelector('.e-label');\n        var dummyData = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.extendObjWithFn)({}, data, { column: this.options.column, parent: this.parent });\n        var innerText = this.options.disableHtmlEncode ? 'textContent' : 'innerHTML';\n        label[\"\" + innerText] = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value) && value.toString().length ?\n            this.parent.enableHtmlSanitizer ? _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(value) : value : this.getLocalizedLabel('Blanks');\n        var checkboxUid = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getUid)('cbox');\n        label.setAttribute('id', checkboxUid + 'cboxLabel');\n        elem.querySelector('input').setAttribute('aria-labelledby', label.id);\n        if (label.innerHTML === this.getLocalizedLabel('Blanks')) {\n            this.isBlanks = true;\n        }\n        if (typeof value === 'boolean') {\n            label.innerHTML = value === true ? this.getLocalizedLabel('FilterTrue') : this.getLocalizedLabel('FilterFalse');\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([label], ['e-checkboxfiltertext']);\n        if (this.options.template && data[this.options.column.field] !== this.getLocalizedLabel('SelectAll')\n            && data[this.options.column.field] !== this.getLocalizedLabel('AddCurrentSelection')) {\n            label.innerHTML = '';\n            var isReactCompiler = this.parent.isReact && this.options.column.filter\n                && typeof (this.options.column.filter.itemTemplate) !== 'string' &&\n                !(this.options.column.filter.itemTemplate.prototype && this.options.column.filter.itemTemplate.prototype.CSPTemplate);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var isReactChild = this.parent.parentDetails && this.parent.parentDetails.parentInstObj &&\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this.parent.parentDetails.parentInstObj.isReact;\n            if (isReactCompiler || isReactChild) {\n                this.options.template(dummyData, this.parent, 'filterItemTemplate', null, null, null, label);\n                this.parent.renderTemplates();\n            }\n            else {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.appendChildren)(label, this.options.template(dummyData, this.parent, 'filterItemTemplate', null, null, null, null, this.parent.root));\n            }\n        }\n        return elem;\n    };\n    CheckBoxFilterBase.prototype.updateIndeterminatenBtn = function () {\n        var cnt = this.infiniteRenderMod ? this.infiniteLoadedElem.length : this.cBox.children.length - 1;\n        var className = [];\n        var disabled = false;\n        var elem = this.infiniteRenderMod ? this.sBox.querySelector('.e-selectall') : this.cBox.querySelector('.e-selectall');\n        var selected = this.infiniteRenderMod ? this.infiniteLoadedElem.filter(function (arr) { return arr.querySelector('.e-check'); }).length :\n            this.cBox.querySelectorAll('.e-check:not(.e-selectall):not(.e-add-current)').length;\n        if (this.cBox.querySelector('.e-add-current')) {\n            cnt -= 1;\n        }\n        var btn;\n        if (!this.options.isResponsiveFilter) {\n            btn = this.dialogObj.btnObj[0];\n            btn.disabled = false;\n        }\n        var input = elem.previousSibling;\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.setChecked)(input, false);\n        input.indeterminate = false;\n        if (this.infiniteRenderMod && this.sInput.value === '' && !this.options.parentCurrentViewDataCount && !this.localInfiniteSelectionInteracted\n            && (!this.localInfiniteSelectAllClicked || (!this.infiniteLocalSelectAll && !selected)) && (cnt !== selected || cnt === selected)) {\n            selected = 0;\n        }\n        else if (this.infiniteRenderMod && this.infiniteLoadedElem.length < this.infiniteDataCount\n            && this.infiniteUnloadParentExistPred.length && (!selected || cnt === selected) && this.infiniteLocalSelectAll) {\n            if (!selected) {\n                selected += this.infiniteUnloadParentExistPred.length;\n            }\n            else {\n                cnt += this.infiniteUnloadParentExistPred.length;\n            }\n        }\n        if (cnt === selected) {\n            if (this.infiniteRenderMod) {\n                this.infiniteLocalSelectAll = true;\n                this.localInfiniteSelectAllClicked = true;\n                this.infiniteManualSelectMaintainPred = [];\n            }\n            className = ['e-check'];\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.setChecked)(input, true);\n        }\n        else if (selected) {\n            className = ['e-stop'];\n            input.indeterminate = true;\n        }\n        else {\n            if (this.infiniteRenderMod) {\n                this.infiniteLocalSelectAll = false;\n                this.localInfiniteSelectAllClicked = true;\n                this.infiniteManualSelectMaintainPred = [];\n            }\n            className = ['e-uncheck'];\n            disabled = true;\n            if (btn) {\n                btn.disabled = true;\n            }\n        }\n        if (btn) {\n            this.filterState = !btn.disabled;\n            btn.dataBind();\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([elem], ['e-check', 'e-stop', 'e-uncheck']);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([elem], className);\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.refreshCustomFilterOkBtn, { disabled: disabled });\n    };\n    CheckBoxFilterBase.prototype.createFilterItems = function (data, isInitial, args1) {\n        var _a, _b, _c;\n        var cBoxes = this.parent.createElement('div');\n        var btn;\n        var disabled = false;\n        if (!this.options.isResponsiveFilter) {\n            btn = this.dialogObj.btnObj[0];\n        }\n        var nullCounter = -1;\n        var key = 'ejValue';\n        if (!args1.executeQuery) {\n            key = args1.field;\n        }\n        for (var i = 0; i < data.length; i++) {\n            var val = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(key, data[parseInt(i.toString(), 10)]);\n            if (val === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(val)) {\n                nullCounter = nullCounter + 1;\n            }\n        }\n        if (!this.infiniteRenderMod) {\n            this.itemsCnt = nullCounter !== -1 ? data.length - nullCounter : data.length;\n        }\n        if (this.infiniteRenderMod && this.parent.filterSettings && this.parent.filterSettings.loadingIndicator === 'Shimmer') {\n            this.removeMask();\n        }\n        if (data.length && !this.renderEmpty) {\n            var selectAllValue = this.getLocalizedLabel('SelectAll');\n            var innerDiv = this.cBox.querySelector('.e-checkfltrnmdiv');\n            if (innerDiv) {\n                innerDiv.classList.remove('e-checkfltrnmdiv');\n            }\n            var checkBox = this.createCheckbox(selectAllValue, false, (_a = {}, _a[this.options.field] = selectAllValue, _a));\n            if (this.parent.cssClass) {\n                if (this.parent.cssClass.indexOf(' ') !== -1) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([checkBox], this.parent.cssClass.split(' '));\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([checkBox], [this.parent.cssClass]);\n                }\n            }\n            if (this.infiniteInitialLoad || !this.infiniteRenderMod) {\n                var selectAll = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.createCboxWithWrap)((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getUid)('cbox'), checkBox, 'e-ftrchk');\n                selectAll.querySelector('.e-frame').classList.add('e-selectall');\n                if (this.infiniteRenderMod) {\n                    selectAll.classList.add('e-infinitescroll');\n                    if (this.parent.enableAdaptiveUI) {\n                        this.spinner.style.height = (this.spinner.offsetHeight - (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getListHeight)(this.cBox)) + 'px';\n                    }\n                    this.sBox.insertBefore(selectAll, this.spinner);\n                }\n                else {\n                    cBoxes.appendChild(selectAll);\n                }\n            }\n            else if (this.sBox.querySelector('.e-ftrchk .e-selectall')) {\n                this.sBox.querySelector('.e-ftrchk .e-selectall').previousSibling.disabled = false;\n                this.sBox.querySelector('.e-ftrchk .e-selectall').parentElement.classList.remove('e-checkbox-disabled');\n            }\n            var predicate = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Predicate('field', 'equal', this.options.field);\n            if (this.options.foreignKeyValue) {\n                predicate = predicate.or('field', 'equal', this.options.foreignKeyValue);\n            }\n            var isColFiltered = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager(this.options.filteredColumns).executeLocal(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Query().where(predicate)).length;\n            if (this.sInput && this.sInput.value) {\n                var predicateCheckBox = this.createCheckbox(this.getLocalizedLabel('AddCurrentSelection'), false, (_b = {},\n                    _b[this.options.field] = this.getLocalizedLabel('AddCurrentSelection'),\n                    _b));\n                if (this.parent.cssClass) {\n                    if (this.parent.cssClass.indexOf(' ') !== -1) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([predicateCheckBox], this.parent.cssClass.split(' '));\n                    }\n                    else {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([predicateCheckBox], [this.parent.cssClass]);\n                    }\n                }\n                if ((this.infiniteRenderMod && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.sBox.children[2])\n                    && this.sBox.children[2].innerText !== this.getLocalizedLabel('AddCurrentSelection'))) || !this.infiniteRenderMod) {\n                    var predicateElement = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.createCboxWithWrap)((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getUid)('cbox'), predicateCheckBox, 'e-ftrchk');\n                    predicateElement.querySelector('.e-frame').classList.add('e-add-current');\n                    if (this.infiniteRenderMod) {\n                        predicateElement.classList.add('e-infinitescroll');\n                        this.sBox.insertBefore(predicateElement, this.spinner);\n                        var checkBoxListElem = this.spinner.querySelector('.e-checkboxlist');\n                        var reduceHeight = Math.ceil(predicateElement.getBoundingClientRect().height);\n                        checkBoxListElem.style.height = (parseInt(getComputedStyle(checkBoxListElem).height.split('px')[0], 10) - reduceHeight)\n                            + 'px';\n                        checkBoxListElem.style.minHeight = checkBoxListElem.style.height;\n                    }\n                    else {\n                        cBoxes.appendChild(predicateElement);\n                    }\n                }\n                else if (this.sBox.querySelector('.e-ftrchk .e-add-current')) {\n                    this.sBox.querySelector('.e-ftrchk .e-add-current').previousSibling.disabled = false;\n                    this.sBox.querySelector('.e-ftrchk .e-add-current').parentElement.classList.remove('e-checkbox-disabled');\n                }\n            }\n            else if (this.infiniteRenderMod && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.sBox.children[2])\n                && this.sBox.children[2].innerText === this.getLocalizedLabel('AddCurrentSelection')) {\n                var checkBoxListElem = this.spinner.querySelector('.e-checkboxlist');\n                var increaseHeight = Math.ceil(this.sBox.children[2].getBoundingClientRect().height);\n                checkBoxListElem.style.height = (parseInt(getComputedStyle(checkBoxListElem).height.split('px')[0], 10) + increaseHeight)\n                    + 'px';\n                checkBoxListElem.style.minHeight = checkBoxListElem.style.height;\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.sBox.children[2]);\n            }\n            var isRndere = void 0;\n            for (var i = 0; i < data.length; i++) {\n                var uid = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getUid)('cbox');\n                this.values[\"\" + uid] = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(key, data[parseInt(i.toString(), 10)]);\n                var value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(this.options.field, data[parseInt(i.toString(), 10)]);\n                if (this.options.formatFn) {\n                    value = this.valueFormatter.toView(value, this.options.formatFn);\n                }\n                var args_1 = { value: value, column: this.options.column, data: data[parseInt(i.toString(), 10)] };\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.filterCboxValue, args_1);\n                value = args_1.value;\n                if ((value === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value))) {\n                    if (isRndere) {\n                        continue;\n                    }\n                    isRndere = true;\n                }\n                if (this.infiniteRenderMod) {\n                    this.updateInfiniteUnLoadedCheckboxExistPred(value, this.infiniteUnloadParentExistPred);\n                }\n                var checkbox = this.localInfiniteSelectAllClicked ?\n                    this.createCheckbox(value, this.infiniteLocalSelectAll, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('dataObj', data[i])) :\n                    this.createCheckbox(value, this.getCheckedState(isColFiltered, this.values[\"\" + uid]), (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('dataObj', data[i]));\n                cBoxes.appendChild((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.createCboxWithWrap)(uid, checkbox, 'e-ftrchk'));\n                if (this.infiniteRenderMod) {\n                    cBoxes.lastChild.style.height = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getListHeight)(this.cBox) + 'px';\n                }\n            }\n            var scrollTop = this.cBox.scrollTop;\n            if (!this.infiniteRenderMod || this.infiniteSearchValChange) {\n                this.cBox.innerHTML = '';\n            }\n            else if (this.infiniteRenderMod && this.cBox.children.length) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.infiniteRemoveElements)(([].slice.call(this.cBox.children)).splice(0, this.parent.filterSettings.itemsCount));\n            }\n            if (this.infiniteRenderMod) {\n                (_c = this.infiniteLoadedElem).push.apply(_c, [].slice.call(cBoxes.children));\n                this.itemsCnt = nullCounter !== -1 ? this.infiniteLoadedElem.length - nullCounter : this.infiniteLoadedElem.length;\n            }\n            if (this.infiniteUnloadParentExistPred.length && (this.infiniteLoadedElem.length >= this.infiniteDataCount\n                || !this.options.parentCurrentViewDataCount || (this.options.parentTotalDataCount === this.infiniteDataCount\n                && this.options.parentCurrentViewDataCount))) {\n                this.infiniteUnloadParentExistPred = [];\n            }\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.appendChildren)(this.cBox, [].slice.call(cBoxes.children));\n            if (this.infiniteRenderMod && !this.infiniteScrollAppendDiff) {\n                this.infiniteScrollAppendDiff = Math.round(scrollTop - this.cBox.scrollTop);\n            }\n            this.updateIndeterminatenBtn();\n            if (!this.infiniteRenderMod) {\n                if (btn) {\n                    btn.disabled = false;\n                }\n                disabled = false;\n            }\n            else {\n                if (btn && btn.disabled) {\n                    disabled = true;\n                }\n                else {\n                    disabled = false;\n                }\n            }\n        }\n        else {\n            cBoxes.appendChild(this.parent.createElement('span', { innerHTML: this.getLocalizedLabel('NoResult') }));\n            this.cBox.innerHTML = '';\n            if (this.infiniteRenderMod) {\n                var selectAll = this.sBox.querySelector('.e-ftrchk .e-selectall');\n                if (selectAll) {\n                    var selectAllParent = selectAll.parentElement.parentElement;\n                    if (selectAll.classList.contains('e-check')) {\n                        (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.toogleCheckbox)(selectAllParent);\n                    }\n                    else if (selectAll.classList.contains('e-stop')) {\n                        (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.toogleCheckbox)(selectAllParent);\n                        selectAll.classList.remove('e-stop');\n                        (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.toogleCheckbox)(selectAllParent);\n                    }\n                    selectAll.previousSibling.disabled = true;\n                    selectAll.parentElement.classList.add('e-checkbox-disabled');\n                }\n                var addCurrSelection = this.sBox.querySelector('.e-ftrchk .e-add-current');\n                if (addCurrSelection) {\n                    var addCurrSelectionParent = addCurrSelection.parentElement.parentElement;\n                    if (addCurrSelection.classList.contains('e-check')) {\n                        (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.toogleCheckbox)(addCurrSelectionParent);\n                    }\n                    addCurrSelection.previousSibling.disabled = true;\n                    addCurrSelection.parentElement.classList.add('e-checkbox-disabled');\n                }\n            }\n            this.cBox.appendChild(this.parent.createElement('div', { className: 'e-checkfltrnmdiv' }));\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.appendChildren)(this.cBox.children[0], [].slice.call(cBoxes.children));\n            if (btn) {\n                btn.disabled = true;\n            }\n            disabled = true;\n            this.filterState = !disabled;\n        }\n        if (btn && data.length) {\n            this.filterState = !btn.disabled;\n            btn.dataBind();\n        }\n        var args = { requestType: _base_constant__WEBPACK_IMPORTED_MODULE_4__.filterChoiceRequest, dataSource: this.renderEmpty ? [] : data };\n        var filterModel = 'filterModel';\n        args[\"\" + filterModel] = this;\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.cBoxFltrComplete, args);\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.refreshCustomFilterOkBtn, { disabled: disabled });\n        if (this.infiniteRenderMod && this.infiniteInitialLoad) {\n            this.cBox.style.marginTop = '0px';\n        }\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.hideSpinner)(this.spinner);\n    };\n    CheckBoxFilterBase.prototype.updateInfiniteUnLoadedCheckboxExistPred = function (value, updatePredArr) {\n        for (var j = 0; j < updatePredArr.length; j++) {\n            var pred = updatePredArr[j];\n            var predValue = pred.value instanceof Date ?\n                this.valueFormatter.toView(pred.value, this.options.formatFn) : pred.value;\n            var column = this.options.column;\n            if (column.isForeignColumn()) {\n                var foreignDataObj = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getForeignData)(column, {}, predValue, this.foreignKeyData)[0];\n                value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(column.foreignKeyField, foreignDataObj);\n            }\n            if (value === predValue && (pred.operator === 'equal' || pred.operator === 'notequal')) {\n                this.infiniteManualSelectMaintainPred.push(updatePredArr[j]);\n                updatePredArr.splice(j, 1);\n                j--;\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.getCheckedState = function (isColFiltered, value) {\n        if (!this.isFiltered || !isColFiltered) {\n            return true;\n        }\n        else {\n            var checkState = this.sInput && this.sInput.value ? true : this.result[\"\" + value];\n            if (this.infiniteRenderMod) {\n                return checkState;\n            }\n            else {\n                return this.options.operator === 'notequal' ? !checkState : checkState;\n            }\n        }\n    };\n    CheckBoxFilterBase.getDistinct = function (json, field, column, foreignKeyData, checkboxFilter) {\n        var len = json.length;\n        var result = [];\n        var value;\n        var ejValue = 'ejValue';\n        var lookup = {};\n        var isForeignKey = column && column.isForeignColumn ? column.isForeignColumn() : false;\n        while (len--) {\n            value = json[parseInt(len.toString(), 10)];\n            if (column && column.type === 'dateonly' && typeof value[\"\" + field] === 'string' && value[\"\" + field]) {\n                var arr = value[\"\" + field].split(/[^0-9.]/);\n                value[\"\" + field] = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10));\n            }\n            value = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getObject)(field, value); //local remote diff, check with mdu\n            var currentFilterValue = (typeof value === 'string') && !((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(checkboxFilter)) &&\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                !((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(checkboxFilter.parent)) && !((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(checkboxFilter.parent.filterSettings)) &&\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                !((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(checkboxFilter.parent.filterSettings.enableCaseSensitivity)) ? value.toLowerCase() : value;\n            if (!(currentFilterValue in lookup)) {\n                var obj = {};\n                obj[\"\" + ejValue] = value;\n                lookup[\"\" + currentFilterValue] = true;\n                if (isForeignKey) {\n                    var foreignDataObj = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getForeignData)(column, {}, value, foreignKeyData)[0];\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)(_base_constant__WEBPACK_IMPORTED_MODULE_4__.foreignKeyData, foreignDataObj, json[parseInt(len.toString(), 10)]);\n                    value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(column.foreignKeyValue, foreignDataObj);\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)(field, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value) ? null : value, obj);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)('dataObj', json[parseInt(len.toString(), 10)], obj);\n                result.push(obj);\n            }\n        }\n        return _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataUtil.group(_syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataUtil.sort(result, field, _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataUtil.fnAscending), 'ejValue');\n    };\n    CheckBoxFilterBase.getPredicate = function (columns, isExecuteLocal) {\n        var cols = _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataUtil.distinct(columns, 'field', true) || [];\n        var collection = [];\n        var pred = {};\n        for (var i = 0; i < cols.length; i++) {\n            collection = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager(columns).executeLocal(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Query().where('field', 'equal', cols[parseInt(i.toString(), 10)].field));\n            if (collection.length !== 0) {\n                pred[cols[parseInt(i.toString(), 10)].field] = CheckBoxFilterBase.generatePredicate(collection, isExecuteLocal);\n            }\n        }\n        return pred;\n    };\n    CheckBoxFilterBase.generatePredicate = function (cols, isExecuteLocal) {\n        var len = cols ? cols.length : 0;\n        var predicate;\n        var operate = 'or';\n        var first = CheckBoxFilterBase.updateDateFilter(cols[0]);\n        first.ignoreAccent = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(first.ignoreAccent) ? first.ignoreAccent : false;\n        if (first.type === 'date' || first.type === 'datetime' || first.type === 'dateonly') {\n            predicate = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getDatePredicate)(first, first.type, isExecuteLocal);\n        }\n        else {\n            predicate = first.ejpredicate ? first.ejpredicate :\n                new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Predicate(first.field, first.operator, first.value, !CheckBoxFilterBase.getCaseValue(first), first.ignoreAccent);\n        }\n        for (var p = 1; p < len; p++) {\n            cols[parseInt(p.toString(), 10)] = CheckBoxFilterBase.updateDateFilter(cols[parseInt(p.toString(), 10)]);\n            if (len > 2 && p > 1 && ((cols[p].predicate === 'or' && cols[p - 1].predicate === 'or')\n                || (cols[p].predicate === 'and' && cols[p - 1].predicate === 'and'))) {\n                if (cols[p].type === 'date' || cols[p].type === 'datetime' || cols[p].type === 'dateonly') {\n                    predicate.predicates.push((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getDatePredicate)(cols[parseInt(p.toString(), 10)], cols[p].type, isExecuteLocal));\n                }\n                else {\n                    predicate.predicates.push(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Predicate(cols[p].field, cols[parseInt(p.toString(), 10)].operator, cols[parseInt(p.toString(), 10)].value, !CheckBoxFilterBase.getCaseValue(cols[parseInt(p.toString(), 10)]), cols[parseInt(p.toString(), 10)].ignoreAccent));\n                }\n            }\n            else {\n                if (cols[p].type === 'date' || cols[p].type === 'datetime' || cols[p].type === 'dateonly') {\n                    if (cols[parseInt(p.toString(), 10)].predicate === 'and' && cols[parseInt(p.toString(), 10)].operator === 'equal') {\n                        predicate = predicate[\"\" + operate]((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getDatePredicate)(cols[parseInt(p.toString(), 10)], cols[parseInt(p.toString(), 10)].type, isExecuteLocal), cols[parseInt(p.toString(), 10)].type, cols[parseInt(p.toString(), 10)].ignoreAccent);\n                    }\n                    else {\n                        predicate = predicate[(cols[parseInt(p.toString(), 10)].predicate)]((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getDatePredicate)(cols[parseInt(p.toString(), 10)], cols[parseInt(p.toString(), 10)].type, isExecuteLocal), cols[parseInt(p.toString(), 10)].type, cols[parseInt(p.toString(), 10)].ignoreAccent);\n                    }\n                }\n                else {\n                    predicate = cols[parseInt(p.toString(), 10)].ejpredicate ?\n                        predicate[cols[parseInt(p.toString(), 10)]\n                            .predicate](cols[parseInt(p.toString(), 10)].ejpredicate) :\n                        predicate[(cols[parseInt(p.toString(), 10)].predicate)](cols[parseInt(p.toString(), 10)].field, cols[parseInt(p.toString(), 10)].operator, cols[parseInt(p.toString(), 10)].value, !CheckBoxFilterBase.getCaseValue(cols[parseInt(p.toString(), 10)]), cols[parseInt(p.toString(), 10)].ignoreAccent);\n                }\n            }\n        }\n        return predicate || null;\n    };\n    CheckBoxFilterBase.getCaseValue = function (filter) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(filter.matchCase)) {\n            if (filter.type === 'string' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(filter.type) && typeof (filter.value) === 'string') {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            return filter.matchCase;\n        }\n    };\n    CheckBoxFilterBase.updateDateFilter = function (filter) {\n        if ((filter.type === 'date' || filter.type === 'datetime' || filter.type === 'dateonly' || filter.value instanceof Date)) {\n            filter.type = filter.type || 'date';\n        }\n        return filter;\n    };\n    return CheckBoxFilterBase;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-grids/src/grid/common/checkbox-filter-base.js?");

/***/ })

}]);