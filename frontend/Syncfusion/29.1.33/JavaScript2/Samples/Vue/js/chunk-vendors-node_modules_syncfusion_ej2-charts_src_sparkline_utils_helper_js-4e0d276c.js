"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-charts_src_sparkline_utils_helper_js-4e0d276c"],{

/***/ "./node_modules/@syncfusion/ej2-charts/src/sparkline/utils/helper.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-charts/src/sparkline/utils/helper.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CircleOption: () => (/* binding */ CircleOption),\n/* harmony export */   PathOption: () => (/* binding */ PathOption),\n/* harmony export */   Rect: () => (/* binding */ Rect),\n/* harmony export */   RectOption: () => (/* binding */ RectOption),\n/* harmony export */   Size: () => (/* binding */ Size),\n/* harmony export */   TextOption: () => (/* binding */ TextOption),\n/* harmony export */   appendShape: () => (/* binding */ appendShape),\n/* harmony export */   calculateRoundedRectPath: () => (/* binding */ calculateRoundedRectPath),\n/* harmony export */   calculateSize: () => (/* binding */ calculateSize),\n/* harmony export */   createSvg: () => (/* binding */ createSvg),\n/* harmony export */   drawCircle: () => (/* binding */ drawCircle),\n/* harmony export */   drawPath: () => (/* binding */ drawPath),\n/* harmony export */   drawRectangle: () => (/* binding */ drawRectangle),\n/* harmony export */   getIdElement: () => (/* binding */ getIdElement),\n/* harmony export */   getSeriesColor: () => (/* binding */ getSeriesColor),\n/* harmony export */   getThemeColor: () => (/* binding */ getThemeColor),\n/* harmony export */   measureText: () => (/* binding */ measureText),\n/* harmony export */   removeElement: () => (/* binding */ removeElement),\n/* harmony export */   renderTextElement: () => (/* binding */ renderTextElement),\n/* harmony export */   stringToNumber: () => (/* binding */ stringToNumber),\n/* harmony export */   withInBounds: () => (/* binding */ withInBounds)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-svg-base */ \"./node_modules/@syncfusion/ej2-svg-base/index.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n/**\n * Sparkline control helper file\n */\n/**\n * sparkline internal use of `Size` type\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\n\n/**\n * Gets the series color.\n *\n * @private\n * @param {SparklineTheme} theme - The theme for the sparkline.\n * @returns {string[]} - The series color from the theme.\n */\nfunction getSeriesColor(theme) {\n    var palette;\n    switch (theme) {\n        case 'Fabric':\n            palette = ['#4472c4', '#ed7d31', '#ffc000', '#70ad47', '#5b9bd5',\n                '#c1c1c1', '#6f6fe2', '#e269ae', '#9e480e', '#997300'];\n            break;\n        case 'Bootstrap4':\n            palette = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6',\n                '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\n            break;\n        case 'Bootstrap':\n            palette = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6',\n                '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\n            break;\n        case 'HighContrastLight':\n        case 'HighContrast':\n            palette = ['#79ECE4', '#E98272', '#DFE6B6', '#C6E773', '#BA98FF',\n                '#FA83C3', '#00C27A', '#43ACEF', '#D681EF', '#D8BC6E'];\n            break;\n        case 'MaterialDark':\n            palette = ['#9ECB08', '#56AEFF', '#C57AFF', '#61EAA9', '#EBBB3E',\n                '#F45C5C', '#8A77FF', '#63C7FF', '#FF84B0', '#F7C928'];\n            break;\n        case 'FabricDark':\n            palette = ['#4472c4', '#ed7d31', '#ffc000', '#70ad47', '#5b9bd5',\n                '#c1c1c1', '#6f6fe2', '#e269ae', '#9e480e', '#997300'];\n            break;\n        case 'BootstrapDark':\n            palette = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6',\n                '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\n            break;\n        case 'Tailwind3':\n            palette = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384',\n                '#F39C12', '#EF291F', '#91C822'];\n            break;\n        case 'Tailwind3Dark':\n            palette = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384',\n                '#F39C12', '#EF291F', '#91C822'];\n            break;\n        case 'Tailwind':\n            palette = ['#5A61F6', '#65A30D', '#334155', '#14B8A6', '#8B5CF6',\n                '#0369A1', '#F97316', '#9333EA', '#F59E0B', '#15803D'];\n            break;\n        case 'TailwindDark':\n            palette = ['#8B5CF6', '#22D3EE', '#F87171', '#4ADE80', '#E879F9',\n                '#FCD34D', '#F97316', '#2DD4BF', '#F472B6', '#10B981'];\n            break;\n        case 'Bootstrap5Dark':\n        case 'Bootstrap5':\n            palette = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545', '#FFC107', '#198754', '#0DCAF0'];\n            break;\n        case 'FluentDark':\n            palette = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266',\n                '#1BD565', '#EE993D', '#5887FF', '#EC548D', '#7D39C0'];\n            break;\n        case 'Fluent':\n            palette = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266',\n                '#1BD565', '#EE993D', '#5887FF', '#EC548D', '#7D39C0'];\n            break;\n        case 'Fluent2':\n            palette = ['#6200EE', '#09AF74', '#0076E5', '#CB3587', '#E7910F',\n                '#0364DE', '#66CD15', '#F3A93C', '#107C10', '#C19C00'];\n            break;\n        case 'Fluent2Dark':\n            palette = ['#9BB449', '#2A72D5', '#43B786', '#3F579A', '#584EC6',\n                '#E85F9C', '#6E7A89', '#EA6266', '#0B6A0B', '#C19C00'];\n            break;\n        case 'Fluent2HighContrast':\n            palette = ['#9BB449', '#2A72D5', '#43B786', '#3F579A', '#584EC6',\n                '#E85F9C', '#6E7A89', '#EA6266', '#0B6A0B', '#C19C00'];\n            break;\n        case 'Material3':\n            palette = ['#6355C7', '#00AEE0', '#FFB400', '#F7523F', '#963C70',\n                '#FD7400', '#4BE0BC', '#2196F5', '#DE3D8A', '#162F88'];\n            break;\n        case 'Material3Dark':\n            palette = ['#4EAAFF', '#FA4EAB', '#FFF500', '#17EA58', '#38FFE7',\n                '#FF9E45', '#B3F32F', '#B93CE4', '#FC5664', '#9B55FF'];\n            break;\n        default:\n            palette = ['#00bdae', '#404041', '#357cd2', '#e56590', '#f8b883',\n                '#70ad47', '#dd8abd', '#7f84e8', '#7bb4eb', '#ea7a57'];\n            break;\n    }\n    return palette;\n}\n/**\n * To find the default colors based on theme.\n *\n * @private\n * @param {SparklineTheme} theme - The theme for the sparkline.\n * @returns {IThemes} - The theme colors.\n */\nfunction getThemeColor(theme) {\n    var themeColors;\n    switch (theme) {\n        case 'BootstrapDark':\n        case 'FabricDark':\n        case 'MaterialDark':\n        case 'HighContrast':\n            themeColors = {\n                axisLineColor: '#ffffff',\n                dataLabelColor: theme === 'BootstrapDark' ? '#676767' : theme === 'FabricDark' ? '#A19F9D' : theme === 'MaterialDark' ? 'rgba(255, 255, 255, 0.6)' : '#969696',\n                rangeBandColor: '#ffffff',\n                tooltipFill: theme === 'BootstrapDark' ? '#F0F0F0' : theme === 'FabricDark' ? '#A19F9D' : theme === 'MaterialDark' ? '#F4F4F4' : '#FFFFFF',\n                background: '#000000',\n                tooltipFontColor: theme === 'BootstrapDark' ? '#1A1A1A' : theme === 'FabricDark' ? '#DADADA' : theme === 'MaterialDark' ? 'rgba(18, 18, 18, 1)' : '#000000',\n                trackerLineColor: '#ffffff',\n                labelFontFamily: theme === 'BootstrapDark' ? 'Helvetica' : theme === 'FabricDark' ? 'Segoe UI' : theme === 'MaterialDark' ? 'Roboto' : 'Segoe UI',\n                tooltipFontFamily: theme === 'BootstrapDark' ? 'Helvetica' : theme === 'FabricDark' ? 'Segoe UI' : theme === 'MaterialDark' ? 'Roboto' : 'Segoe UI',\n                dataLabelFont: {\n                    fontFamily: theme === 'BootstrapDark' ? 'Helvetica' : theme === 'FabricDark' ? 'Segoe UI' : theme === 'MaterialDark' ? 'Roboto' : 'Segoe UI', color: theme === 'BootstrapDark' ? '#676767' : theme === 'FabricDark' ? '#A19F9D' : theme === 'MaterialDark' ? 'rgba(255, 255, 255, 0.6)' : '#969696', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '400',\n                tabColor: theme === 'BootstrapDark' ? '#0070F0' : theme === 'MaterialDark' ? '#00B0FF' : theme === 'FabricDark' ? '#0074CC' : '#FFD939'\n            };\n            break;\n        case 'Bootstrap4':\n            themeColors = {\n                axisLineColor: '#6C757D',\n                dataLabelColor: '#495057',\n                rangeBandColor: '#212529',\n                tooltipFill: '#212529',\n                background: '#FFFFFF',\n                tooltipFontColor: '#F9FAFB',\n                trackerLineColor: '#212529',\n                fontFamily: 'Helvetica',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                labelFontFamily: 'Helvetica',\n                tooltipFontFamily: 'Helvetica',\n                dataLabelFont: {\n                    fontFamily: 'Helvetica', color: '#495057', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '400',\n                tabColor: '#007BFF'\n            };\n            break;\n        case 'Tailwind3':\n            themeColors = {\n                axisLineColor: '#4B5563',\n                dataLabelColor: '#111827',\n                rangeBandColor: '#1F2937',\n                background: '#FFFFFF',\n                tooltipFill: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                trackerLineColor: '#1F2937',\n                fontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                labelFontFamily: 'Inter',\n                tooltipFontFamily: 'Inter',\n                dataLabelFont: {\n                    fontFamily: 'Inter', color: '#6B7280', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '500',\n                tabColor: '#4F46E5'\n            };\n            break;\n        case 'Tailwind3Dark':\n            themeColors = {\n                axisLineColor: '#D1D5DB',\n                dataLabelColor: '#FFFFFF',\n                rangeBandColor: '#6B7280',\n                background: 'transparent',\n                tooltipFill: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                trackerLineColor: '#6B7280',\n                fontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                labelFontFamily: 'Inter',\n                tooltipFontFamily: 'Inter',\n                dataLabelFont: {\n                    fontFamily: 'Inter', color: '#FFFFFF', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '500',\n                tabColor: '#22D3EE'\n            };\n            break;\n        case 'Tailwind':\n            themeColors = {\n                axisLineColor: '#4B5563',\n                dataLabelColor: '#6B7280',\n                rangeBandColor: '#212529',\n                background: '#FFFFFF',\n                tooltipFill: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                trackerLineColor: '#1F2937',\n                fontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                labelFontFamily: 'Inter',\n                tooltipFontFamily: 'Inter',\n                dataLabelFont: {\n                    fontFamily: 'Inter', color: '#6B7280', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '400',\n                tabColor: '#4F46E5'\n            };\n            break;\n        case 'TailwindDark':\n            themeColors = {\n                axisLineColor: '#D1D5DB',\n                dataLabelColor: '#9CA3AF',\n                rangeBandColor: '#F9FAFB',\n                background: 'transparent',\n                tooltipFill: '#E9ECEF',\n                tooltipFontColor: '#1F2937',\n                trackerLineColor: '#9CA3AF',\n                fontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                labelFontFamily: 'Inter',\n                tooltipFontFamily: 'Inter',\n                dataLabelFont: {\n                    fontFamily: 'Inter', color: '#9CA3AF', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '400',\n                tabColor: '#22D3EE'\n            };\n            break;\n        case 'Bootstrap5':\n            themeColors = {\n                axisLineColor: '#343A40',\n                dataLabelColor: '#212529BF',\n                rangeBandColor: '#343A40',\n                background: 'rgba(255, 255, 255, 0.0)',\n                tooltipFill: '#000000E5',\n                tooltipFontColor: '#FFFFFF',\n                trackerLineColor: '#343A40',\n                fontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                labelFontFamily: 'Segoe UI',\n                tooltipFontFamily: 'Segoe UI',\n                dataLabelFont: {\n                    fontFamily: 'Segoe UI', color: '#495057', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '400',\n                tabColor: '#0D6EFD'\n            };\n            break;\n        case 'Bootstrap5Dark':\n            themeColors = {\n                axisLineColor: '#ADB5BD',\n                dataLabelColor: '#DEE2E6BF',\n                rangeBandColor: '#ADB5BD',\n                background: 'rgba(255, 255, 255, 0.0)',\n                tooltipFill: '#FFFFFFE5',\n                tooltipFontColor: '#212529',\n                trackerLineColor: '#ADB5BD',\n                fontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                labelFontFamily: 'Segoe UI',\n                tooltipFontFamily: 'Segoe UI',\n                dataLabelFont: {\n                    fontFamily: 'Segoe UI', color: '#E9ECEF', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '400',\n                tabColor: '#0D6EFD'\n            };\n            break;\n        case 'Fluent':\n            themeColors = {\n                axisLineColor: '#D2D0CE;',\n                dataLabelColor: '#3B3A39',\n                rangeBandColor: '#A19F9D',\n                background: 'rgba(255, 255, 255, 0.0001)',\n                tooltipFill: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                trackerLineColor: '#A19F9D',\n                fontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                labelFontFamily: 'Segoe UI',\n                tooltipFontFamily: 'Segoe UI',\n                dataLabelFont: {\n                    fontFamily: 'Segoe UI', color: '#3B3A39', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '400',\n                tabColor: '#0078D4'\n            };\n            break;\n        case 'FluentDark':\n            themeColors = {\n                axisLineColor: '#3B3A39;',\n                dataLabelColor: '#D2D0CE',\n                rangeBandColor: '#797775',\n                background: 'transparent',\n                tooltipFill: '#323130',\n                tooltipFontColor: '#F3F2F1',\n                trackerLineColor: '#797775',\n                fontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                labelFontFamily: 'Segoe UI',\n                tooltipFontFamily: 'Segoe UI',\n                dataLabelFont: {\n                    fontFamily: 'Segoe UI', color: '#D2D0CE', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '400',\n                tabColor: '#0078D4'\n            };\n            break;\n        case 'Fluent2':\n            themeColors = {\n                axisLineColor: '#D2D0CE',\n                dataLabelColor: '#424242',\n                rangeBandColor: '#A19F9D',\n                background: 'transparent',\n                tooltipFill: '#FFFFFF',\n                tooltipFontColor: '#242424',\n                trackerLineColor: '#D2D0CE',\n                fontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                labelFontFamily: 'Segoe UI',\n                tooltipFontFamily: 'Segoe UI',\n                dataLabelFont: {\n                    fontFamily: 'Segoe UI', color: '#242424', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '400',\n                tabColor: '#0078D4'\n            };\n            break;\n        case 'Fluent2Dark':\n            themeColors = {\n                axisLineColor: '#8A8886',\n                dataLabelColor: '#D6D6D6',\n                rangeBandColor: '#8A8886',\n                background: 'transparent',\n                tooltipFill: '#292929',\n                tooltipFontColor: '#FFFFFF',\n                trackerLineColor: '#3B3A39',\n                fontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                labelFontFamily: 'Segoe UI',\n                tooltipFontFamily: 'Segoe UI',\n                dataLabelFont: {\n                    fontFamily: 'Segoe UI', color: '#D6D6D6', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '400',\n                tabColor: '#0078D4'\n            };\n            break;\n        case 'Fluent2HighContrast':\n            themeColors = {\n                axisLineColor: '#8A8886',\n                dataLabelColor: '#FFFFFF',\n                rangeBandColor: '#8A8886',\n                background: 'transparent',\n                tooltipFill: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                trackerLineColor: '#3B3A39',\n                fontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                labelFontFamily: 'Segoe UI',\n                tooltipFontFamily: 'Segoe UI',\n                dataLabelFont: {\n                    fontFamily: 'Segoe UI', color: '#FFFFFF', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '400',\n                tabColor: '#0078D4'\n            };\n            break;\n        case 'Material3':\n            themeColors = {\n                axisLineColor: '#C4C7C5',\n                dataLabelColor: '#49454E',\n                rangeBandColor: 'rgba(73, 69, 78, 0.3)',\n                background: 'rgba(255, 255, 255, 0.0001)',\n                tooltipFill: '#313033',\n                tooltipFontColor: '#F4EFF4',\n                trackerLineColor: '#49454E',\n                fontFamily: 'Roboto',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                labelFontFamily: 'Roboto',\n                tooltipFontFamily: 'Roboto',\n                dataLabelFont: {\n                    fontFamily: 'Roboto', color: '#49454E', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '400',\n                tabColor: '#49454E'\n            };\n            break;\n        case 'Material3Dark':\n            themeColors = {\n                axisLineColor: '#49454F',\n                dataLabelColor: '#CAC4D0',\n                rangeBandColor: 'rgba(202, 196, 208, 0.3)',\n                background: 'transparent',\n                tooltipFill: '#E6E1E5',\n                tooltipFontColor: '#313033',\n                trackerLineColor: '#CAC4D0',\n                fontFamily: 'Roboto',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                labelFontFamily: 'Roboto',\n                tooltipFontFamily: 'Roboto',\n                dataLabelFont: {\n                    fontFamily: 'Roboto', color: '#CAC4D0', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '400',\n                tabColor: '#CAC4D0'\n            };\n            break;\n        default: {\n            themeColors = {\n                axisLineColor: '#000000',\n                dataLabelColor: theme === 'Bootstrap' ? '#676767' : theme === 'Fabric' ? '#666666' : 'rgba(97, 97, 97, 1)',\n                rangeBandColor: '#000000',\n                background: '#FFFFFF',\n                tooltipFill: theme === 'Bootstrap' ? '#212529' : theme === 'Fabric' ? '#FFFFFF' : '#000816',\n                tooltipFontColor: theme === 'Bootstrap' ? '#F9FAFB' : theme === 'Fabric' ? '#333333' : 'rgba(249, 250, 251, 1)',\n                trackerLineColor: '#000000',\n                labelFontFamily: theme === 'Bootstrap' ? 'Helvetica' : theme === 'Fabric' ? 'Segoe UI' : 'Roboto',\n                tooltipFontFamily: theme === 'Bootstrap' ? 'Helvetica' : theme === 'Fabric' ? 'Segoe UI' : 'Roboto',\n                dataLabelFont: {\n                    fontFamily: theme === 'Bootstrap' ? 'Helvetica' : theme === 'Fabric' ? 'Segoe UI' : 'Roboto', color: theme === 'Bootstrap' ? '#676767' : theme === 'Fabric' ? '#666666' : 'rgba(97, 97, 97, 1)', size: '12px', fontWeight: '400', fontStyle: 'Medium'\n                },\n                tooltipFontWeight: '400',\n                tabColor: theme === 'Material' ? '#ff4081' : theme === 'Fabric' ? '#0078D6' : '#317AB9'\n            };\n            break;\n        }\n    }\n    return themeColors;\n}\n/**\n * To find number from string.\n *\n * @private\n * @param {string} value - The string containing the number.\n * @param {number} containerSize - The container size for the number.\n * @returns {number} - The extracted number from the string.\n */\nfunction stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Method to calculate the width and height of the sparkline.\n *\n * @param {Sparkline} sparkline - The Sparkline instance.\n * @returns {void}\n */\nfunction calculateSize(sparkline) {\n    var containerWidth = !sparkline.element.clientWidth ? (!sparkline.element.parentElement ? 100 :\n        (!sparkline.element.parentElement.clientWidth ? window.innerWidth : sparkline.element.parentElement.clientWidth)) :\n        sparkline.element.clientWidth;\n    var containerHeight = !sparkline.element.clientHeight ? (!sparkline.element.parentElement ? 50 :\n        sparkline.element.parentElement.clientHeight) : sparkline.element.clientHeight;\n    sparkline.availableSize = new Size(stringToNumber(sparkline.width, containerWidth) || containerWidth, stringToNumber(sparkline.height, containerHeight) || containerHeight || (sparkline.isDevice ?\n        Math.min(window.innerWidth, window.innerHeight) : containerHeight));\n}\n/**\n * Method to create svg for sparkline.\n *\n * @param {Sparkline} sparkline - The Sparkline instance.\n * @returns {void}\n */\nfunction createSvg(sparkline) {\n    sparkline.renderer = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__.SvgRenderer(sparkline.element.id);\n    calculateSize(sparkline);\n    sparkline.svgObject = sparkline.renderer.createSvg({\n        id: sparkline.element.id + '_svg',\n        width: sparkline.availableSize.width,\n        height: sparkline.availableSize.height\n    });\n}\n/**\n * Internal use of type rect.\n *\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\n\n/**\n * Internal use of path options.\n *\n * @private\n */\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this['stroke-width'] = width;\n        this.stroke = color;\n        this.d = d;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return PathOption;\n}());\n\n/**\n * Internal use of rectangle options.\n *\n * @private\n */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect, tl, tr, bl, br) {\n        if (tl === void 0) { tl = 0; }\n        if (tr === void 0) { tr = 0; }\n        if (bl === void 0) { bl = 0; }\n        if (br === void 0) { br = 0; }\n        var _this = _super.call(this, id, fill, border.width, border.color, opacity) || this;\n        _this.rect = rect;\n        _this.topLeft = tl;\n        _this.topRight = tr;\n        _this.bottomLeft = bl;\n        _this.bottomRight = br;\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\n\n/**\n * Internal use of circle options.\n *\n * @private\n */\nvar CircleOption = /** @class */ (function (_super) {\n    __extends(CircleOption, _super);\n    function CircleOption(id, fill, border, opacity, cx, cy, r, dashArray) {\n        var _this = _super.call(this, id, fill, border.width, border.color, opacity) || this;\n        _this.cy = cy;\n        _this.cx = cx;\n        _this.r = r;\n        _this['stroke-dasharray'] = dashArray;\n        return _this;\n    }\n    return CircleOption;\n}(PathOption));\n\n/**\n * Internal use of append shape element.\n *\n * @private\n * @param {Element} shape - The shape element to be appended.\n * @param {Element} element - The parent element to which the shape will be appended.\n * @returns {Element} - The appended shape element.\n */\nfunction appendShape(shape, element) {\n    if (element) {\n        element.appendChild(shape);\n    }\n    return shape;\n}\n/**\n * Internal rendering of Circle.\n *\n * @private\n * @param {Sparkline} sparkline - The Sparkline instance.\n * @param {CircleOption} options - The options for rendering the circle.\n * @param {Element} element - The parent element to which the circle will be appended.\n * @returns {Element} - The rendered circle element.\n */\nfunction drawCircle(sparkline, options, element) {\n    return appendShape(sparkline.renderer.drawCircle(options), element);\n}\n/**\n * To get rounded rect path direction.\n *\n * @param {Rect} r - The rect dimensions.\n * @param {number} topLeft - The radius of the top-left corner.\n * @param {number} topRight - The radius of the top-right corner.\n * @param {number} bottomLeft - The radius of the bottom-left corner.\n * @param {number} bottomRight - The radius of the bottom-right corner.\n * @returns {string} - The SVG path string for the rounded rect path.\n */\nfunction calculateRoundedRectPath(r, topLeft, topRight, bottomLeft, bottomRight) {\n    return 'M' + ' ' + r.x + ' ' + (topLeft + r.y) +\n        ' Q ' + r.x + ' ' + r.y + ' ' + (r.x + topLeft) + ' ' +\n        r.y + ' ' + 'L' + ' ' + (r.x + r.width - topRight) + ' ' + r.y +\n        ' Q ' + (r.x + r.width) + ' ' + r.y + ' ' +\n        (r.x + r.width) + ' ' + (r.y + topRight) + ' ' + 'L ' +\n        (r.x + r.width) + ' ' + (r.y + r.height - bottomRight)\n        + ' Q ' + (r.x + r.width) + ' ' + (r.y + r.height) + ' ' + (r.x + r.width - bottomRight) + ' ' +\n        (r.y + r.height) + ' ' + 'L ' + (r.x + bottomLeft) + ' ' + (r.y + r.height) + ' Q ' + r.x + ' ' +\n        (r.y + r.height) + ' ' + r.x + ' ' + (r.y + r.height - bottomLeft) + ' ' + 'L' + ' ' + r.x + ' ' +\n        (topLeft + r.y) + ' ' + 'Z';\n}\n/**\n * Internal rendering of Rectangle.\n *\n * @private\n * @param {Sparkline} sparkline - The Sparkline instance.\n * @param {RectOption} options - The options for rendering the rectangle.\n * @param {Element} element - The parent element to which the rectangle will be appended.\n * @returns {Element} - The rendered rectangle element.\n */\nfunction drawRectangle(sparkline, options, element) {\n    options.d = calculateRoundedRectPath(options.rect, options.topLeft, options.topRight, options.bottomLeft, options.bottomRight);\n    return appendShape(sparkline.renderer.drawPath(options), element);\n}\n/**\n * Internal rendering of Path.\n *\n * @private\n * @param {Sparkline} sparkline - The Sparkline instance.\n * @param {PathOption} options - The options for rendering the path.\n * @param {Element} element - The parent element to which the path will be appended.\n * @returns {Element} - The rendered path.\n */\nfunction drawPath(sparkline, options, element) {\n    return appendShape(sparkline.renderer.drawPath(options), element);\n}\n/**\n * Function to measure the height and width of the text.\n *\n * @private\n * @param {string} text - The text to measure.\n * @param {SparklineFontModel} font - The font settings for the text.\n * @param {FontModel} themeStyle - The theme style applied to the text.\n * @returns {Size} - The size of the text.\n */\nfunction measureText(text, font, themeStyle) {\n    var htmlObject = document.getElementById('sparklinesmeasuretext');\n    if (htmlObject === null) {\n        htmlObject = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('text', { id: 'sparklinesmeasuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    htmlObject.innerText = text;\n    htmlObject.style.fontStyle = font.fontStyle || themeStyle.fontStyle;\n    htmlObject.style.fontFamily = font.fontFamily || themeStyle.fontFamily;\n    htmlObject.style.visibility = 'hidden';\n    htmlObject.style.top = '-100';\n    htmlObject.style.left = '0';\n    htmlObject.style.position = 'absolute';\n    htmlObject.style.fontSize = font.size || themeStyle.size;\n    htmlObject.style.fontWeight = font.fontWeight || themeStyle.fontWeight;\n    htmlObject.style.whiteSpace = 'nowrap';\n    // For Bootstrap line height issue\n    htmlObject.style.lineHeight = 'normal';\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Internal use of text options\n *\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, baseLine, transform) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.x = x;\n        this.y = y;\n        this.anchor = anchor;\n        this.text = text;\n        this.transform = transform;\n        this.baseLine = baseLine;\n    }\n    return TextOption;\n}());\n\n/**\n * Internal rendering of text.\n *\n * @private\n * @param {TextOption} options - The options for rendering the text.\n * @param {SparklineFontModel} font - The font settings for the text.\n * @param {string} color - The color of the text.\n * @param {HTMLElement | Element} parent - The parent element to which the text will be appended.\n * @param {FontModel} themeStyle - The theme style applied to the text.\n * @returns {Element} - The rendered text element.\n */\nfunction renderTextElement(options, font, color, parent, themeStyle) {\n    var textOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'fill': color,\n        'font-family': font.fontFamily || themeStyle.fontFamily,\n        'font-weight': font.fontWeight || themeStyle.fontWeight,\n        'font-size': font.size || themeStyle.size,\n        'font-style': font.fontStyle || themeStyle.fontStyle,\n        'text-anchor': options.anchor,\n        'dominant-baseline': options.baseLine\n    };\n    var renderer = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__.SvgRenderer('');\n    var htmlObject = renderer.createText(textOptions, options.text);\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * To remove element by id.\n *\n * @param {string} id - The id of the element to remove.\n * @returns {void}\n */\nfunction removeElement(id) {\n    var element = document.getElementById(id);\n    return element ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(element) : null;\n}\n/**\n * To find the element by id.\n *\n * @param {string} id - The id of the element to find.\n * @returns {Element} - The element with the specified id, if found.\n */\nfunction getIdElement(id) {\n    return document.getElementById(id);\n}\n/**\n * To find point within the bounds.\n *\n * @param {number} x - The x-coordinate of the point.\n * @param {number} y - The y-coordinate of the point.\n * @param {Rect} bounds - The bounding rectangle to check against.\n * @returns {boolean} - True if the point is within the bounds, false otherwise.\n */\nfunction withInBounds(x, y, bounds) {\n    return (x >= bounds.x && x <= bounds.x + bounds.width && y >= bounds.y && y <= bounds.y + bounds.height);\n}\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-charts/src/sparkline/utils/helper.js?");

/***/ })

}]);