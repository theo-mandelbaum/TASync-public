"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_utility_-f7f4aefd"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/utility/dom-util.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/utility/dom-util.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RulerHelper: () => (/* binding */ RulerHelper)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _ruler_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ruler/index */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/ruler/index.js\");\n/* harmony import */ var _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../editor/editor-helper */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor/editor-helper.js\");\n/* harmony import */ var _format_paragraph_format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../format/paragraph-format */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/format/paragraph-format.js\");\n/* harmony import */ var _size__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./size */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/utility/size.js\");\n\n//import { DocumentEditorRulerModel } from '../ruler-settings-model';\n\n\n\n\n/* eslint-disable */\n/**\n * defines the helper methods for the ruler\n * @private\n */\nvar RulerHelper = /** @class */ (function () {\n    function RulerHelper() {\n        this.resizerEnabled = false;\n        this.isDraggingRender = false;\n        this.isDraggingIndents1 = false;\n        this.isDraggingIndents2 = false;\n        this.isDraggingIndents3 = false;\n        this.isDraggingIndents4 = false;\n        this.isDraggingForTab = false;\n        this.currentTabStop = undefined;\n        this.tabIndex = 0;\n        this.isLeftRulerMargin = undefined;\n        this.isLeftMultiColumn = false;\n        this.isRightMultiColumn = false;\n        //Event handler\n        this.onmarkIndicatorClickHandler = this.onMarkIndicatorClick.bind(this);\n        this.onHorizontalRulerMouseMoveHandler = this.onHorizontalRulerMouseMoved.bind(this);\n        this.onHRulerMouseEnterHandler = this.onHRulerMouseEnter.bind(this);\n        this.onHRulerMouseLeaveHandler = this.onHRulerMouseLeave.bind(this);\n        this.onHRulerMouseDownHandler = this.onHRulerMouseDown.bind(this);\n        this.onHRulerMouseUpHandler = this.onHRulerMouseUp.bind(this);\n        this.onRulerDblClickHandler = this.onRulerDblClick.bind(this);\n        this.onDoubleClickHandler = this.onDoubleClick.bind(this);\n        this.onRulerMouseUpHandler = this.onRularMouseUp.bind(this);\n        this.onVMouseMoveHandler = this.onVMouseMove.bind(this);\n        this.onVMouseDownHandler = this.onVMouseDown.bind(this);\n        this.onVMouseUpHandler = this.onVMouseUp.bind(this);\n        this.onDocumentIntentTrueChangeHandler = this.onDocumentIntentTrue.bind(this);\n        this.onDocumentIntentFalseChangeHandler = this.onDocumentIntentFalse.bind(this);\n        this.onFirstLineIndentMouseDownHandler = this.onFirstLineIndentMouseDown.bind(this);\n        this.onIndentMouseMoveHandler = this.onIndentMouseMove.bind(this);\n        this.onIndentMouseUpHandler = this.onIndentMouseUp.bind(this);\n        this.onHangIndentMouseDownHandler = this.onHangIndentMouseDown.bind(this);\n        this.onHangIndentMouseMoveHandler = this.onHangIndentMouseMove.bind(this);\n        this.onHangIndentMouseUpHandler = this.onHangIndentMouseUp.bind(this);\n        this.onLeftIndentMouseDownHandler = this.onLeftIndentMouseDown.bind(this);\n        this.onLeftIndentMouseMoveHandler = this.onLeftIndentMouseMove.bind(this);\n        this.onLeftIndentMouseUpHandler = this.onLeftIndentMouseUp.bind(this);\n        this.onRightIndentMouseDownHandler = this.onRightIndentMouseDown.bind(this);\n        this.onRightIndentMouseMoveHandler = this.onRightIndentMouseMove.bind(this);\n        this.onRightIndentMouseUpHandler = this.onRightIndentMouseUp.bind(this);\n        this.onTabStopMouseDownHandler = this.onTabStopMouseDown.bind(this);\n        this.onTabStopMouseUpHandler = this.onTabStopMouseUp.bind(this);\n        this.onTabStopMouseMoveHandler = this.onTabStopMouseMove.bind(this);\n        this.onRenderTabStopMouseUpHandler = this.onRenderTabStopMouseUp.bind(this);\n        this.onTabStopDblClickHandler = this.onTabStopDblClick.bind(this);\n        this.isTopRulerMargin = false;\n    }\n    //Event handler methods\n    RulerHelper.prototype.onMarkIndicatorClick = function () {\n        var divElements = document.querySelector('.e-de-ruler-markIndicator');\n        for (var i = 0; i < divElements.childNodes.length; i++) {\n            var currentDiv = divElements.childNodes[parseInt(i.toString(), 10)];\n            if (currentDiv.style.display === 'block') {\n                currentDiv.style.display = 'none';\n                var nextIndex = (i + 1) % divElements.childNodes.length;\n                divElements.childNodes[parseInt(nextIndex.toString(), 10)].style.display = 'block';\n                break;\n            }\n        }\n    };\n    // private onHorizontalRulerMouseMove(e: MouseEvent): void {\n    //     if (this.documentEditor.isDestroyed || !this.documentEditor.documentEditorSettings.showRuler) {\n    //         return;\n    //     }\n    //     const divRect: DOMRect = this.hRuler.getBoundingClientRect() as DOMRect;\n    //     const leftMargin: number = this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin\n    //         * this.documentEditor.zoomFactor;\n    //     const rightMargin: number = (HelperMethods.convertPixelToPoint(divRect.width) -\n    //         this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.rightMargin * this.documentEditor.zoomFactor);\n    //     let pixelValue: number = Math.round(e.clientX - divRect.left);\n    //     let mouseXRelativeToDiv: number = HelperMethods.convertPixelToPoint(pixelValue);\n    //     if (!this.isDragging) {\n    //         if (this.documentEditor.isOnIndent) {\n    //             this.hRuler.style.cursor = 'default';\n    //             if (this.hRuler.hasAttribute('title')) {\n    //                 this.hRuler.removeAttribute('title');\n    //             }\n    //             this.resizerEnabled = false;\n    //         } else if (((leftMargin - 3) <= mouseXRelativeToDiv) && ((leftMargin + 3) >= mouseXRelativeToDiv)) {\n    //             if (this.documentEditor.layoutType === 'Pages') {\n    //                 this.hRuler.style.cursor = 'e-resize';\n    //                 this.hRuler.setAttribute('title', this.locale.getConstant('Left Margin'));\n    //                 this.resizerEnabled = true;\n    //                 this.isLeftRulerMargin = true;\n    //             }\n    //         } else if ((((rightMargin - 3) <= mouseXRelativeToDiv) && ((rightMargin + 3) >= mouseXRelativeToDiv))) {\n    //             if (this.documentEditor.layoutType === 'Pages') {\n    //                 this.hRuler.style.cursor = 'e-resize';\n    //                 this.hRuler.setAttribute('title', this.locale.getConstant('Right Margin'));\n    //                 this.resizerEnabled = true;\n    //                 this.isLeftRulerMargin = false;\n    //             }\n    //         } else if (this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.columns.length > 0) {\n    //             const columns: WColumnFormat[] = this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.columns;\n    //             if (this.documentEditor.layoutType === 'Pages') {\n    //                 for (let i: number = 1; i <= columns.length; i++) {\n    //                     const rulerMarginDiv: HTMLElement = document.getElementById(this.documentEditor.element.id + '_hRuler_Margin' + i);\n    //                     const maginLeft: number = rulerMarginDiv.getBoundingClientRect().left;\n    //                     const width: number = rulerMarginDiv.getBoundingClientRect().width;\n    //                     if (((maginLeft - 3) <= e.clientX) && ((maginLeft + 3) >= e.clientX)) {\n    //                         this.hRuler.style.cursor = 'e-resize';\n    //                         this.multiColumnElement = rulerMarginDiv;\n    //                         this.hRuler.setAttribute('title', this.locale.getConstant('Left Margin'));\n    //                         this.isLeftMultiColumn = true;\n    //                         this.resizerEnabled = true;\n    //                         break;\n    //                     } else if (((maginLeft + width - 3) <= e.clientX) && ((maginLeft + width + 3) >= e.clientX)) {\n    //                         this.hRuler.style.cursor = 'e-resize';\n    //                         this.multiColumnElement = rulerMarginDiv;\n    //                         this.hRuler.setAttribute('title', this.locale.getConstant('Right Margin'));\n    //                         this.isRightMultiColumn = true;\n    //                         this.resizerEnabled = true;\n    //                         break;\n    //                     } else {\n    //                         this.hRuler.style.cursor = 'default';\n    //                         if (this.hRuler.hasAttribute('title')) {\n    //                             this.hRuler.removeAttribute('title');\n    //                         }\n    //                         this.isLeftMultiColumn = false;\n    //                         this.isRightMultiColumn = false;\n    //                         this.resizerEnabled = false;\n    //                     }\n    //                 }\n    //             }\n    //         }\n    //         else {\n    //             this.hRuler.style.cursor = 'default';\n    //             if (this.hRuler.hasAttribute('title')) {\n    //                 this.hRuler.removeAttribute('title');\n    //             }\n    //             this.resizerEnabled = false;\n    //         }\n    //     }\n    //     if (this.isDragging) {\n    //         const rulerZeroPoint: number = HelperMethods.convertPointToPixel(\n    //             1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin) * this.documentEditor.zoomFactor;\n    //         const pageWidth: number = this.documentEditor.selectionModule.sectionFormat.pageWidth;\n    //         const rightMarginValue: number = this.documentEditor.selectionModule.sectionFormat.rightMargin;\n    //         let rightIndentValue: number = this.documentEditor.selectionModule.paragraphFormat.rightIndent;\n    //         rightIndentValue = rightIndentValue > 0 ? rightIndentValue : 0;\n    //         const minimumValue: number = 42;\n    //         let firstLineIndent: number = this.documentEditor.selectionModule.paragraphFormat.firstLineIndent;\n    //         const leftMarginValue: number = this.documentEditor.selectionModule.sectionFormat.leftMargin;\n    //         firstLineIndent = firstLineIndent >= 0 ? firstLineIndent : 0;\n    //         const leftIndent: number = this.documentEditor.selectionModule.paragraphFormat.leftIndent;\n    //         if (this.isLeftRulerMargin) {\n    //             const leftMaxLimit: number = rulerZeroPoint + (\n    //                 HelperMethods.convertPointToPixel(pageWidth - rightMarginValue -\n    //                     rightIndentValue - minimumValue - firstLineIndent - leftIndent) * this.documentEditor.zoomFactor);\n    //             const leftMinLimit: number = rulerZeroPoint;\n    //             if (pixelValue + rulerZeroPoint > leftMaxLimit) {\n    //                 pixelValue = leftMaxLimit - rulerZeroPoint;\n    //                 mouseXRelativeToDiv = HelperMethods.convertPixelToPoint(pixelValue);\n    //             } else if (pixelValue + rulerZeroPoint < leftMinLimit) {\n    //                 pixelValue = leftMinLimit - rulerZeroPoint;\n    //                 mouseXRelativeToDiv = HelperMethods.convertPixelToPoint(pixelValue);\n    //             }\n    //         } else {\n    //             const rightMinLimit: number = rulerZeroPoint + (HelperMethods.convertPointToPixel(\n    //                 leftMarginValue + leftIndent + firstLineIndent + minimumValue + rightIndentValue) * this.documentEditor.zoomFactor);\n    //             const rightMaxLimit: number = rulerZeroPoint + (HelperMethods.convertPointToPixel(\n    //                 pageWidth) * this.documentEditor.zoomFactor);\n    //             if (pixelValue + rulerZeroPoint > rightMaxLimit) {\n    //                 pixelValue = rightMaxLimit - rulerZeroPoint;\n    //                 mouseXRelativeToDiv = HelperMethods.convertPixelToPoint(pixelValue);\n    //             } else if (pixelValue + rulerZeroPoint < rightMinLimit) {\n    //                 pixelValue = rightMinLimit - rulerZeroPoint;\n    //                 mouseXRelativeToDiv = HelperMethods.convertPixelToPoint(pixelValue);\n    //             }\n    //         }\n    //         this.finalmouseXRelativeToDiv = mouseXRelativeToDiv;\n    //         const currentRightMargin: number = (HelperMethods.convertPixelToPoint(divRect.width)\n    //             - (this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.rightMargin * this.documentEditor.zoomFactor));\n    //         if (this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.numberOfColumns <= 1) {\n    //             this.resizeRulerMargins(this.isLeftRulerMargin, this.initialValue,\n    //                 this.currentScrollLeft, currentRightMargin, this.hRuler, mouseXRelativeToDiv, true, this.documentEditor);\n    //         }\n    //         const rightIndent: HTMLElement = document.getElementById(this.documentEditor.element.id + '_rightIndent');\n    //         if (this.isLeftRulerMargin) {\n    //             const difference: number = mouseXRelativeToDiv - this.initialValue;\n    //             rightIndent.style.left = (this.initialRightMargin - HelperMethods.convertPointToPixel(difference)) + 'px';\n    //         } else {\n    //             const difference: number = mouseXRelativeToDiv - this.initialValue;\n    //             rightIndent.style.left = (this.initialRightMargin + HelperMethods.convertPointToPixel(difference)) + 'px';\n    //         }\n    //         const startValue: number = this.documentEditor.documentHelper.currentPage.boundingRectangle.x;\n    //         const indicatorLineValue: number = startValue + pixelValue;\n    //         const lineSvg: HTMLElement = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n    //         lineSvg.style.left = indicatorLineValue + 'px';\n    //     }\n    // }\n    RulerHelper.prototype.onHRulerMouseEnter = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentTabStopElement)) {\n            this.currentTabStopElement.style.display = 'block';\n        }\n    };\n    RulerHelper.prototype.onHRulerMouseLeave = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentTabStopElement)) {\n            this.currentTabStopElement.style.display = 'none';\n            //this.currentTabStopElement = undefined;\n        }\n    };\n    RulerHelper.prototype.onRulerDblClick = function () {\n        this.documentEditor.showDialog('PageSetup');\n    };\n    RulerHelper.prototype.onHRulerMouseDown = function (e) {\n        if (this.resizerEnabled && !this.documentEditor.isTableMarkerDragging) {\n            this.isDraggingRender = true;\n            if (this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.columns.length > 0) {\n                if (this.isLeftMultiColumn) {\n                    this.columnInitialValue = this.multiColumnElement.getBoundingClientRect().left;\n                }\n                else if (this.isRightMultiColumn) {\n                    this.columnInitialValue = this.multiColumnElement.getBoundingClientRect().left\n                        + this.multiColumnElement.getBoundingClientRect().width;\n                }\n            }\n            var divRect_1 = this.hRuler.getBoundingClientRect();\n            this.renderInitialValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(Math.round(e.clientX - divRect_1.left));\n            this.currentScrollLeft = this.hRuler.scrollLeft;\n            var rightIndent = document.getElementById(this.documentEditor.element.id + '_rightIndent');\n            this.initialRightMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(rightIndent.style.left);\n            var pixelValue = Math.round(e.clientX - divRect_1.left);\n            var startValue = this.documentEditor.documentHelper.currentPage.boundingRectangle.x;\n            var indicatorLineValue = startValue + pixelValue;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n            lineSvg.style.left = indicatorLineValue + 'px';\n            lineSvg.style.display = 'block';\n        }\n        var divRect = this.hRuler.getBoundingClientRect();\n        if (divRect.y + (divRect.height / 2) <= e.clientY) {\n            this.mouseDownTabValue = e.clientX - this.hRuler.getBoundingClientRect().left;\n            if (this.documentEditor.layoutType === 'Pages') {\n                this.mouseDownTabValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(this.mouseDownTabValue - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin) *\n                    this.documentEditor.zoomFactor);\n                if (this.position.paragraph.paragraphFormat.bidi) {\n                    var paraWidth = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.position.paragraph['absoluteXPosition']) ? parseFloat(this.position.paragraph['absoluteXPosition']['width'].toString()) : this.position.paragraph.width;\n                    paraWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(paraWidth * this.documentEditor.zoomFactor);\n                    this.mouseDownTabValue = paraWidth - this.mouseDownTabValue;\n                }\n            }\n            else if (this.documentEditor.layoutType === 'Continuous') {\n                if (this.position.paragraph.paragraphFormat.bidi) {\n                    this.mouseDownTabValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint((this.mouseDownTabValue) - 20);\n                    var paraWidth = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.position.paragraph['absoluteXPosition']) ? parseFloat(this.position.paragraph['absoluteXPosition']['width'].toString()) : this.position.paragraph.width;\n                    paraWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(paraWidth * this.documentEditor.zoomFactor);\n                    this.mouseDownTabValue = paraWidth - this.mouseDownTabValue;\n                }\n                else {\n                    this.mouseDownTabValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint((this.mouseDownTabValue) - 20);\n                }\n            }\n        }\n    };\n    RulerHelper.prototype.onHRulerMouseUp = function (e) {\n        var container = document.getElementById(this.documentEditor.element.id + '_markIndicator');\n        var divRect = this.hRuler.getBoundingClientRect();\n        if (divRect.y + (divRect.height / 2) <= e.clientY) {\n            this.mouseUpTabValue = e.clientX - this.hRuler.getBoundingClientRect().left;\n            if (this.documentEditor.layoutType === 'Pages') {\n                this.mouseUpTabValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(this.mouseUpTabValue -\n                    _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin)\n                        * this.documentEditor.zoomFactor);\n                if (this.position.paragraph.paragraphFormat.bidi) {\n                    var paraWidth = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.position.paragraph['absoluteXPosition']) ? parseFloat(this.position.paragraph['absoluteXPosition']['width'].toString()) : this.position.paragraph.width;\n                    paraWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(paraWidth * this.documentEditor.zoomFactor);\n                    this.mouseUpTabValue = paraWidth - this.mouseUpTabValue;\n                }\n            }\n            else if (this.documentEditor.layoutType === 'Continuous') {\n                if (this.position.paragraph.paragraphFormat.bidi) {\n                    this.mouseUpTabValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint((this.mouseUpTabValue) - 20);\n                    var paraWidth = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.position.paragraph['absoluteXPosition']) ? parseFloat(this.position.paragraph['absoluteXPosition']['width'].toString()) : this.position.paragraph.width;\n                    paraWidth = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(paraWidth * this.documentEditor.zoomFactor);\n                    this.mouseUpTabValue = paraWidth - this.mouseUpTabValue;\n                }\n                else {\n                    this.mouseUpTabValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint((this.mouseUpTabValue) - 20);\n                }\n            }\n            var rightIndent = document.getElementById(this.documentEditor.element.id + '_rightIndent');\n            var rightIndentValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(rightIndent.style.left);\n            var maxValue = rightIndentValue;\n            if (this.mouseUpTabValue > 0 && this.mouseUpTabValue < maxValue && this.mouseDownTabValue === this.mouseUpTabValue) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(container)) {\n                    var visibleElement = container.querySelector('.e-de-ruler-marker[style*=\"display: block;\"]');\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(visibleElement)) {\n                        this.mouseUpTabValue /= this.documentEditor.zoomFactor;\n                        var dataNameValue = visibleElement.getAttribute('data-name');\n                        if (dataNameValue === 'LeftTab' || dataNameValue === 'CenterTab'\n                            || dataNameValue === 'RightTab' || dataNameValue === 'DecimalTab' || dataNameValue === 'BarTab') {\n                            var tabStop = new _format_paragraph_format__WEBPACK_IMPORTED_MODULE_3__.WTabStop();\n                            tabStop.position = this.mouseUpTabValue;\n                            tabStop.tabJustification = this.getTabJustification(dataNameValue);\n                            tabStop.deletePosition = 0;\n                            tabStop.tabLeader = 'None';\n                            this.documentEditor.editorModule.onApplyParagraphFormat('tabStop', [tabStop], false, false);\n                        }\n                        else if (dataNameValue === 'FirstLineIndent' || dataNameValue === 'HangingIndent') {\n                            var property = 'firstLineIndent';\n                            if (dataNameValue === 'HangingIndent') {\n                                var initialValue = this.documentEditor.selectionModule.paragraphFormat.firstLineIndent;\n                                var differenceValue = this.mouseUpTabValue + initialValue;\n                                var currentValue = this.documentEditor.selectionModule.start.paragraph.paragraphFormat.firstLineIndent;\n                                this.documentEditor.editorModule.onApplyParagraphFormat('firstLineIndent', currentValue - differenceValue, false, false);\n                                var leftIndentCurrentValue = this.documentEditor.selectionModule.start.paragraph.paragraphFormat.leftIndent + currentValue;\n                                currentValue = currentValue - differenceValue;\n                                this.documentEditor.editorModule.onApplyParagraphFormat('leftIndent', leftIndentCurrentValue - currentValue, false, false, true);\n                            }\n                            else {\n                                this.documentEditor.editorModule.onApplyParagraphFormat(property, this.mouseDownTabValue, false, false);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    RulerHelper.prototype.onRularMouseUp = function (e) {\n        if (this.isDraggingRender && !this.documentEditor.isTableMarkerDragging) {\n            var divRect = this.hRuler.getBoundingClientRect();\n            var mouseXRelativeToDiv = this.finalmouseXRelativeToDiv; // HelperMethods.convertPixelToPoint(Math.round(e.clientX - divRect.left));\n            // const currentLeftMargin = documentEditor.hRuler.startMargin * documentEditor.zoomFactor;\n            // const currentScrollLeft = hRuler.scrollLeft;\n            // const currentRightMargin = (HelperMethods.convertPixelToPoint(divRect.width) - (documentEditor.selection.end.paragraph.bodyWidget.sectionFormat.rightMargin * documentEditor.zoomFactor));\n            // resizeRulerMargins(isLeftRulerMargin, currentLeftMargin, currentScrollLeft, currentRightMargin, hRuler, mouseXRelativeToDiv, true, documentEditor);\n            // if (hRuler) {\n            //     rulerObj.scrollLeft = rulerObj.scrollLeft - HelperMethods.convertPointToPixel((documentEditor.hRuler.leftMargin < mouseXRelativeToDiv) ? (mouseXRelativeToDiv - documentEditor.hRuler.leftMargin) : (documentEditor.hRuler.leftMargin - mouseXRelativeToDiv));\n            // }\n            // updateRuler(documentEditor, documentEditor.hRuler, true);\n            if (this.isLeftMultiColumn || this.isRightMultiColumn) {\n                var finalvalue = 0;\n                finalvalue = e.clientX - this.columnInitialValue;\n                var secFormat = this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.cloneFormat();\n                var pageWidth = this.documentEditor.selectionModule.sectionFormat.pageWidth\n                    - this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin -\n                    this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.rightMargin;\n                var columnSpace = this.isLeftMultiColumn ? (secFormat.columns[0].space +\n                    ((_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(finalvalue))))\n                    : (secFormat.columns[0].space - ((_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(finalvalue))));\n                for (var i = 0; i < secFormat.columns.length; i++) {\n                    var col = secFormat.columns[parseInt(i.toString(), 10)];\n                    if (columnSpace >= 0 && col.width >= 36) {\n                        var widthCal = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel((pageWidth - (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(columnSpace) * (secFormat.numberOfColumns - 1))) / (secFormat.numberOfColumns));\n                        col.width = widthCal;\n                        if (i < secFormat.columns.length - 1) {\n                            col.space = columnSpace;\n                        }\n                    }\n                    else {\n                        col[0].space = col[1].space;\n                    }\n                }\n                this.documentEditor.editorModule.onApplySectionFormat(undefined, secFormat);\n                this.isLeftMultiColumn = false;\n                this.isRightMultiColumn = false;\n            }\n            else if (this.isLeftRulerMargin) {\n                this.documentEditor.hRuler.startMargin = (mouseXRelativeToDiv / this.documentEditor.zoomFactor);\n                this.documentEditor.selectionModule.sectionFormat.leftMargin = mouseXRelativeToDiv / this.documentEditor.zoomFactor;\n            }\n            else {\n                var rightMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(this.rulerGeometry.width) - (mouseXRelativeToDiv / this.documentEditor.zoomFactor);\n                // documentEditor.hRuler.endMargin = rightMargin;\n                this.documentEditor.selectionModule.sectionFormat.rightMargin = rightMargin;\n            }\n            this.resizerEnabled = false;\n            this.isDraggingRender = false;\n            this.isLeftRulerMargin = undefined;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n            lineSvg.style.display = 'none';\n        }\n    };\n    RulerHelper.prototype.onVMouseMove = function (e) {\n        if (this.documentEditor.isDestroyed || !this.documentEditor.documentEditorSettings.showRuler) {\n            return;\n        }\n        var divRect = this.vRuler.getBoundingClientRect();\n        var topMargin = this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.topMargin\n            * this.documentEditor.zoomFactor;\n        var bottomMargin = (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(divRect.height) - this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.bottomMargin\n            * this.documentEditor.zoomFactor);\n        var mouseXRelativeToDiv = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(Math.round(e.clientY - divRect.top));\n        var pixelValue = Math.round(e.clientY - divRect.top);\n        if (!this.isDraggingRender) {\n            if (((topMargin - 3) <= mouseXRelativeToDiv) && ((topMargin + 3) >= mouseXRelativeToDiv)) {\n                this.vRuler.style.cursor = 'n-resize';\n                this.vRuler.setAttribute('title', this.locale.getConstant('Top Margin'));\n                this.resizerEnabled = true;\n                this.isTopRulerMargin = true;\n            }\n            else if ((((bottomMargin - 3) <= mouseXRelativeToDiv) && ((bottomMargin + 3) >= mouseXRelativeToDiv))) {\n                this.vRuler.style.cursor = 'n-resize';\n                this.vRuler.setAttribute('title', this.locale.getConstant('Bottom Margin'));\n                this.resizerEnabled = true;\n                this.isTopRulerMargin = false;\n            }\n            else {\n                this.vRuler.style.cursor = 'default';\n                if (this.vRuler.hasAttribute('title')) {\n                    this.vRuler.removeAttribute('title');\n                }\n                this.resizerEnabled = false;\n            }\n        }\n        if (this.isDraggingRender) {\n            var mouseXRelativeToDiv_1 = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(Math.round(e.clientY - divRect.top));\n            var rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.topMargin)\n                * this.documentEditor.zoomFactor;\n            var pageHeight = this.documentEditor.selectionModule.sectionFormat.pageHeight;\n            var minimumValue = 12;\n            var bottomMarginValue = this.documentEditor.selectionModule.sectionFormat.bottomMargin;\n            var topMarginValue = this.documentEditor.selectionModule.sectionFormat.topMargin;\n            if (this.isTopRulerMargin) {\n                var topMinLimit = rulerZeroPoint;\n                var topMaxLimit = rulerZeroPoint + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(pageHeight - bottomMarginValue - minimumValue) * this.documentEditor.zoomFactor);\n                if (pixelValue + rulerZeroPoint > topMaxLimit) {\n                    pixelValue = topMaxLimit - rulerZeroPoint;\n                    mouseXRelativeToDiv_1 = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(pixelValue);\n                }\n                else if (pixelValue + rulerZeroPoint < topMinLimit) {\n                    pixelValue = topMinLimit - rulerZeroPoint;\n                    mouseXRelativeToDiv_1 = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(pixelValue);\n                }\n            }\n            else {\n                var bottomMinLimit = rulerZeroPoint + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(topMarginValue + minimumValue) * this.documentEditor.zoomFactor);\n                var bottomMaxLimit = rulerZeroPoint + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(pageHeight) * this.documentEditor.zoomFactor);\n                if (pixelValue + rulerZeroPoint > bottomMaxLimit) {\n                    pixelValue = bottomMaxLimit - rulerZeroPoint;\n                    mouseXRelativeToDiv_1 = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(pixelValue);\n                }\n                else if (pixelValue + rulerZeroPoint < bottomMinLimit) {\n                    pixelValue = bottomMinLimit - rulerZeroPoint;\n                    mouseXRelativeToDiv_1 = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(pixelValue);\n                }\n            }\n            var currentBottomMargin = (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(divRect.height) -\n                (this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.bottomMargin * this.documentEditor.zoomFactor));\n            this.resizeVRulerMargins(this.isTopRulerMargin, this.initialYValue, this.currentScrollTop, currentBottomMargin, this.vRuler, mouseXRelativeToDiv_1, this.documentEditor);\n            var startValue = this.documentEditor.documentHelper.currentPage.boundingRectangle.y * this.documentEditor.zoomFactor;\n            var indicatorLineValue = startValue + pixelValue; // + 15;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_vRuler_indicator_svg');\n            lineSvg.style.top = indicatorLineValue + 'px';\n        }\n    };\n    RulerHelper.prototype.onVMouseDown = function (e) {\n        if (this.resizerEnabled) {\n            this.isDraggingRender = true;\n            var divRect = this.vRuler.getBoundingClientRect();\n            this.initialYValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(Math.round(e.clientY - divRect.top));\n            this.currentScrollTop = this.vRuler.scrollTop;\n            var pixelValue = Math.round(e.clientY - divRect.top);\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_vRuler_indicator_svg');\n            var startValue = this.documentEditor.documentHelper.currentPage.boundingRectangle.y * this.documentEditor.zoomFactor;\n            var indicatorLineValue = (startValue + pixelValue); // + 15;\n            lineSvg.style.top = indicatorLineValue + 'px';\n            lineSvg.style.display = 'block';\n        }\n    };\n    RulerHelper.prototype.onVMouseUp = function (e) {\n        if (this.isDraggingRender) {\n            var divRect = this.vRuler.getBoundingClientRect();\n            var mouseXRelativeToDiv = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(Math.round(e.clientY - divRect.top));\n            // const currentTopMargin = documentEditor.hRuler.startMargin * documentEditor.zoomFactor;\n            // const currentScrollTop = vRuler.scrollTop;\n            // const currentBottomMargin = (HelperMethods.convertPixelToPoint(divRect.height) - (documentEditor.selection.end.paragraph.bodyWidget.sectionFormat.bottomMargin * documentEditor.zoomFactor));\n            // resizeVRulerMargins(isTopRulerMargin, currentTopMargin, currentScrollTop, currentBottomMargin, vRuler, mouseXRelativeToDiv, documentEditor);\n            // if (hRuler) {\n            //     rulerObj.scrollLeft = rulerObj.scrollLeft - HelperMethods.convertPointToPixel((documentEditor.hRuler.leftMargin < mouseXRelativeToDiv) ? (mouseXRelativeToDiv - documentEditor.hRuler.leftMargin) : (documentEditor.hRuler.leftMargin - mouseXRelativeToDiv));\n            // }\n            // updateRuler(documentEditor, documentEditor.hRuler, true);\n            if (this.isTopRulerMargin) {\n                this.documentEditor.vRuler.startMargin = (mouseXRelativeToDiv / this.documentEditor.zoomFactor);\n                this.documentEditor.selectionModule.sectionFormat.topMargin = mouseXRelativeToDiv / this.documentEditor.zoomFactor;\n            }\n            else {\n                var bottomtMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(this.rulerGeometry.height) - (mouseXRelativeToDiv / this.documentEditor.zoomFactor);\n                this.documentEditor.vRuler.endMargin = bottomtMargin;\n                this.documentEditor.selectionModule.sectionFormat.bottomMargin = bottomtMargin;\n            }\n            this.resizerEnabled = false;\n            this.isDraggingRender = false;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_vRuler_indicator_svg');\n            lineSvg.style.display = 'none';\n            this.isTopRulerMargin = undefined;\n        }\n    };\n    RulerHelper.prototype.onDocumentIntentTrue = function () {\n        this.documentEditor.isOnIndent = true;\n    };\n    RulerHelper.prototype.onDocumentIntentFalse = function () {\n        this.documentEditor.isOnIndent = false;\n    };\n    RulerHelper.prototype.onDoubleClick = function (event) {\n        this.documentEditor.showDialog('Paragraph');\n        event.stopPropagation();\n    };\n    RulerHelper.prototype.onFirstLineIndentMouseDown = function (e) {\n        this.isDraggingIndents1 = true;\n        this.firstLineOffset = e.clientX - this.firstLineIndent.getBoundingClientRect().left;\n        this.indentInitialValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.firstLineIndent.style.left);\n        var rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin) * this.documentEditor.zoomFactor;\n        if (this.documentEditor.selectionModule.paragraphFormat.bidi) {\n            rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                (this.documentEditor.selectionModule.sectionFormat.pageWidth -\n                    this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                    this.documentEditor.selectionModule.sectionFormat.rightMargin)) * this.documentEditor.zoomFactor;\n        }\n        if (this.documentEditor.layoutType === 'Continuous') {\n            rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) - 20;\n            if (this.documentEditor.selectionModule.paragraphFormat.bidi) {\n                rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) -\n                    20 - (this.documentEditor.viewer.clientArea.width * this.documentEditor.zoomFactor);\n            }\n        }\n        var value = rulerZeroPoint + e.clientX - this.firstLineOffset - this.hRuler.getBoundingClientRect().left;\n        var startValue = this.documentEditor.documentHelper.currentPage.boundingRectangle.x;\n        startValue = this.documentEditor.layoutType === 'Continuous' ? 0 : startValue;\n        var indicatorLineValue = startValue + (value - rulerZeroPoint) + 6;\n        var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n        lineSvg.style.left = indicatorLineValue + 'px';\n        lineSvg.style.display = 'block';\n        e.stopPropagation();\n    };\n    RulerHelper.prototype.onIndentMouseMove = function (e) {\n        if (this.isDraggingIndents1) {\n            var rulerZeroPoint = void 0;\n            var maxValue = void 0;\n            var minValue = void 0;\n            var rightIndent = document.getElementById(this.documentEditor.element.id + '_rightIndent');\n            var rightIndentValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(rightIndent.style.left);\n            if (this.documentEditor.layoutType === 'Pages') {\n                if (this.documentEditor.selectionModule.paragraphFormat.bidi) {\n                    rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                        (this.documentEditor.selectionModule.sectionFormat.pageWidth -\n                            this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                            this.documentEditor.selectionModule.sectionFormat.rightMargin)) * this.documentEditor.zoomFactor;\n                    maxValue = rulerZeroPoint - 6 + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(this.documentEditor.selectionModule.sectionFormat.pageWidth) * this.documentEditor.zoomFactor);\n                    minValue = rightIndentValue + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(42) * this.documentEditor.zoomFactor;\n                }\n                else {\n                    rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin)\n                        * this.documentEditor.zoomFactor;\n                    minValue = rulerZeroPoint - 6;\n                    maxValue = rightIndentValue - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(42) * this.documentEditor.zoomFactor;\n                }\n            }\n            else if (this.documentEditor.layoutType === 'Continuous') {\n                if (this.position.paragraph.paragraphFormat.bidi) {\n                    rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) -\n                        20 - (this.documentEditor.viewer.clientArea.width * this.documentEditor.zoomFactor);\n                    maxValue = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) - 20 + 40 - 6;\n                    minValue = rightIndentValue + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(42) * this.documentEditor.zoomFactor);\n                }\n                else {\n                    rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) - 20;\n                    minValue = rulerZeroPoint - 6;\n                    maxValue = rightIndentValue - (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(42) * this.documentEditor.zoomFactor);\n                }\n            }\n            var value = rulerZeroPoint + e.clientX - this.firstLineOffset - this.hRuler.getBoundingClientRect().left;\n            if (value < minValue) {\n                value = minValue;\n            }\n            else if (value > maxValue) {\n                value = maxValue;\n            }\n            this.firstLineIndent.style.left = value + 'px';\n            var startValue = this.documentEditor.documentHelper.currentPage.boundingRectangle.x;\n            startValue = this.documentEditor.layoutType === 'Continuous' ? 0 : startValue;\n            var indicatorLineValue = startValue + (value - rulerZeroPoint) + 6;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n            lineSvg.style.left = indicatorLineValue + 'px';\n        }\n    };\n    RulerHelper.prototype.onIndentMouseUp = function (e) {\n        if (this.isDraggingIndents1) {\n            this.isDraggingIndents1 = false;\n            var finalValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.firstLineIndent.style.left);\n            if (parseInt(this.firstLineIndent.style.left.replace('px', ''), 10) < 0) {\n                finalValue *= -1;\n            }\n            if (this.documentEditor.selectionModule.paragraphFormat.bidi) {\n                this.documentEditor.editorModule.applyRulerMarkerValues('firstLineIndent', finalValue, this.indentInitialValue);\n            }\n            else {\n                this.documentEditor.editorModule.applyRulerMarkerValues('firstLineIndent', this.indentInitialValue, finalValue);\n            }\n            this.indentInitialValue = finalValue;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n            lineSvg.style.display = 'none';\n        }\n    };\n    RulerHelper.prototype.onHangIndentMouseDown = function (e) {\n        this.isDraggingIndents2 = true;\n        this.hangingLineOffset = e.clientX - this.hangingIndent.getBoundingClientRect().left;\n        this.hangingIndentInitialValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.hangingIndent.style.left);\n        var rightIndent = document.getElementById(this.documentEditor.element.id + '_rightIndent');\n        var rightPosition = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(rightIndent.style.left);\n        var rulerZeroPoint;\n        if (this.documentEditor.layoutType === 'Pages') {\n            if (this.documentEditor.selectionModule.paragraphFormat.bidi) {\n                rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                    (this.documentEditor.selectionModule.sectionFormat.pageWidth -\n                        this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                        this.documentEditor.selectionModule.sectionFormat.rightMargin)) * this.documentEditor.zoomFactor;\n                this.minLimit1 = rightPosition + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(42) * this.documentEditor.zoomFactor);\n                this.maxLimit1 = rulerZeroPoint - 6 + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(this.documentEditor.selectionModule.sectionFormat.pageWidth) * this.documentEditor.zoomFactor);\n            }\n            else {\n                rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin) * this.documentEditor.zoomFactor;\n                this.minLimit1 = rulerZeroPoint - 6;\n                this.maxLimit1 = (rightPosition - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(42) * this.documentEditor.zoomFactor);\n            }\n        }\n        else if (this.documentEditor.layoutType === 'Continuous') {\n            if (this.position.paragraph.paragraphFormat.bidi) {\n                rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) -\n                    20 - (this.documentEditor.viewer.clientArea.width * this.documentEditor.zoomFactor);\n                this.maxLimit1 = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) - 20 + 40 - 6;\n                this.minLimit1 = rightPosition + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(42) * this.documentEditor.zoomFactor);\n            }\n            else {\n                rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) - 20;\n                this.minLimit1 = rulerZeroPoint - 6;\n                this.maxLimit1 = (rightPosition - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(42) * this.documentEditor.zoomFactor);\n            }\n        }\n        this.leftIndent1 = document.getElementById(this.documentEditor.element.id + '_leftIndent');\n        var value = rulerZeroPoint + e.clientX - this.hangingLineOffset - this.hRuler.getBoundingClientRect().left;\n        var startValue = this.documentEditor.documentHelper.currentPage.boundingRectangle.x;\n        startValue = this.documentEditor.layoutType === 'Continuous' ? 0 : startValue;\n        var indicatorLineValue = startValue + (value - rulerZeroPoint) + 6;\n        var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n        lineSvg.style.left = indicatorLineValue + 'px';\n        lineSvg.style.display = 'block';\n        e.stopPropagation();\n    };\n    RulerHelper.prototype.onHangIndentMouseMove = function (e) {\n        if (this.isDraggingIndents2) {\n            var rulerZeroPoint = void 0;\n            if (this.documentEditor.layoutType === 'Pages') {\n                if (this.documentEditor.selectionModule.paragraphFormat.bidi) {\n                    rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                        (this.documentEditor.selectionModule.sectionFormat.pageWidth -\n                            this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                            this.documentEditor.selectionModule.sectionFormat.rightMargin)) * this.documentEditor.zoomFactor;\n                }\n                else {\n                    rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin) * this.documentEditor.zoomFactor;\n                }\n            }\n            else if (this.documentEditor.layoutType === 'Continuous') {\n                if (this.position.paragraph.paragraphFormat.bidi) {\n                    rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) -\n                        20 - (this.documentEditor.viewer.clientArea.width * this.documentEditor.zoomFactor);\n                }\n                else {\n                    rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) - 20;\n                }\n            }\n            var value = rulerZeroPoint + e.clientX - this.hangingLineOffset - this.hRuler.getBoundingClientRect().left;\n            if ((value) > this.maxLimit1) {\n                value = this.maxLimit1;\n            }\n            else if (value < this.minLimit1) {\n                value = this.minLimit1;\n            }\n            this.leftIndent1.style.left = value + 'px';\n            this.hangingIndent.style.left = value + 'px';\n            var startValue = this.documentEditor.documentHelper.currentPage.boundingRectangle.x;\n            startValue = this.documentEditor.layoutType === 'Continuous' ? 0 : startValue;\n            var indicatorLineValue = startValue + (value - rulerZeroPoint) + 6;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n            lineSvg.style.left = indicatorLineValue + 'px';\n        }\n    };\n    RulerHelper.prototype.onHangIndentMouseUp = function (e) {\n        if (this.isDraggingIndents2) {\n            this.isDraggingIndents2 = false;\n            var finalValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.hangingIndent.style.left);\n            if (parseInt(this.hangingIndent.style.left.replace('px', ''), 10) < 0) {\n                finalValue *= -1;\n            }\n            if (this.documentEditor.selectionModule.paragraphFormat.bidi) {\n                this.documentEditor.editorModule.applyRulerMarkerValues('hangingIndent', finalValue, this.hangingIndentInitialValue);\n            }\n            else {\n                this.documentEditor.editorModule.applyRulerMarkerValues('hangingIndent', this.hangingIndentInitialValue, finalValue);\n            }\n            this.hangingIndentInitialValue = finalValue;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n            lineSvg.style.display = 'none';\n        }\n    };\n    RulerHelper.prototype.onLeftIndentMouseDown = function (e) {\n        var rulerZeroPoint;\n        this.isDraggingIndents3 = true;\n        this.leftLineOffset = e.clientX - this.leftIndent.getBoundingClientRect().left;\n        this.indentInitialValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.leftIndent.style.left);\n        this.firstIndentInitialValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.firstLineIndent.style.left);\n        this.diff = this.firstIndentInitialValue - this.indentInitialValue;\n        this.firstLineIndent = document.getElementById(this.documentEditor.element.id + '_firstLineIndent');\n        var rightIndent = document.getElementById(this.documentEditor.element.id + '_rightIndent');\n        var rightPosition = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(rightIndent.style.left);\n        if (this.documentEditor.layoutType === 'Pages') {\n            if (this.documentEditor.selectionModule.paragraphFormat.bidi) {\n                rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                    (this.documentEditor.selectionModule.sectionFormat.pageWidth -\n                        this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                        this.documentEditor.selectionModule.sectionFormat.rightMargin)) * this.documentEditor.zoomFactor;\n                this.minLimit2 = (rightPosition + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(42) * this.documentEditor.zoomFactor);\n                this.maxLimit2 = rulerZeroPoint - 6 + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(this.documentEditor.selectionModule.sectionFormat.pageWidth) * this.documentEditor.zoomFactor);\n                this.isHangingIndent = (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.hangingIndent.style.left) - rightPosition)\n                    <= (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.firstLineIndent.style.left) - rightPosition);\n            }\n            else {\n                rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin) * this.documentEditor.zoomFactor;\n                this.minLimit2 = rulerZeroPoint - 6;\n                this.maxLimit2 = (rightPosition - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(42) * this.documentEditor.zoomFactor);\n                this.isHangingIndent = (rightPosition - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.hangingIndent.style.left))\n                    <= (rightPosition - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.firstLineIndent.style.left));\n            }\n        }\n        else if (this.documentEditor.layoutType === 'Continuous') {\n            if (this.position.paragraph.paragraphFormat.bidi) {\n                rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) -\n                    20 - (this.documentEditor.viewer.clientArea.width * this.documentEditor.zoomFactor);\n                this.maxLimit2 = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) - 20 + 40 - 6;\n                this.minLimit2 = rightPosition + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(42) * this.documentEditor.zoomFactor);\n                this.isHangingIndent = (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.hangingIndent.style.left) - rightPosition)\n                    <= (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.firstLineIndent.style.left) - rightPosition);\n            }\n            else {\n                rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) - 20;\n                this.minLimit2 = rulerZeroPoint - 6;\n                this.maxLimit2 = (rightPosition - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(42) * this.documentEditor.zoomFactor);\n                this.isHangingIndent = (rightPosition - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.hangingIndent.style.left))\n                    <= (rightPosition - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.firstLineIndent.style.left));\n            }\n        }\n        var value = rulerZeroPoint + e.clientX - this.leftLineOffset - this.hRuler.getBoundingClientRect().left;\n        var startValue = this.documentEditor.documentHelper.currentPage.boundingRectangle.x;\n        startValue = this.documentEditor.layoutType === 'Continuous' ? 0 : startValue;\n        var indicatorLineValue = startValue + (value - rulerZeroPoint) + 6;\n        var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n        lineSvg.style.left = indicatorLineValue + 'px';\n        lineSvg.style.display = 'block';\n        e.stopPropagation();\n    };\n    RulerHelper.prototype.onLeftIndentMouseMove = function (e) {\n        if (this.isDraggingIndents3) {\n            var rulerZeroPoint = void 0;\n            var value = void 0;\n            if (this.documentEditor.selectionModule.paragraphFormat.bidi) {\n                if (this.documentEditor.layoutType === 'Pages') {\n                    rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                        (this.documentEditor.selectionModule.sectionFormat.pageWidth -\n                            this.documentEditor.selectionModule.sectionFormat.leftMargin\n                            - this.documentEditor.selectionModule.sectionFormat.rightMargin)) * this.documentEditor.zoomFactor;\n                }\n                else if (this.documentEditor.layoutType === 'Continuous') {\n                    rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) -\n                        20 - (this.documentEditor.viewer.clientArea.width * this.documentEditor.zoomFactor);\n                }\n                value = rulerZeroPoint + e.clientX - this.leftLineOffset - this.hRuler.getBoundingClientRect().left;\n                if (this.isHangingIndent) {\n                    if ((value + this.diff) > this.maxLimit2) {\n                        value = this.maxLimit2 - this.diff;\n                    }\n                }\n                else {\n                    if ((value) > this.maxLimit2) {\n                        value = this.maxLimit2;\n                    }\n                }\n                if (this.isHangingIndent) {\n                    if (value < this.minLimit2) {\n                        value = this.minLimit2;\n                    }\n                }\n                else {\n                    if ((value + this.diff) < this.minLimit2) {\n                        value = this.minLimit2 - this.diff;\n                    }\n                }\n            }\n            else {\n                if (this.documentEditor.layoutType === 'Pages') {\n                    rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin) * this.documentEditor.zoomFactor;\n                }\n                else if (this.documentEditor.layoutType === 'Continuous') {\n                    rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) - 20;\n                }\n                value = rulerZeroPoint + e.clientX - this.leftLineOffset - this.hRuler.getBoundingClientRect().left;\n                if (this.isHangingIndent) {\n                    if ((value) > this.maxLimit2) {\n                        value = this.maxLimit2;\n                    }\n                }\n                else {\n                    if ((value + this.diff) > this.maxLimit2) {\n                        value = this.maxLimit2 - this.diff;\n                    }\n                }\n                if (this.isHangingIndent) {\n                    if ((value + this.diff) < this.minLimit2) {\n                        value = this.minLimit2 - this.diff;\n                    }\n                }\n                else {\n                    if (value < this.minLimit2) {\n                        value = this.minLimit2;\n                    }\n                }\n            }\n            this.hangingIndent.style.left = value + 'px';\n            this.leftIndent.style.left = value + 'px';\n            this.firstLineIndent.style.left = (this.firstIndentInitialValue + (value - this.indentInitialValue)) + 'px';\n            var startValue = this.documentEditor.documentHelper.currentPage.boundingRectangle.x;\n            startValue = this.documentEditor.layoutType === 'Continuous' ? 0 : startValue;\n            var indicatorLineValue = startValue + (value - rulerZeroPoint) + 6;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n            lineSvg.style.left = indicatorLineValue + 'px';\n        }\n    };\n    RulerHelper.prototype.onLeftIndentMouseUp = function (e) {\n        if (this.isDraggingIndents3) {\n            this.isDraggingIndents3 = false;\n            var finalValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.leftIndent.style.left);\n            if (parseInt(this.leftIndent.style.left.replace('px', ''), 10) < 0) {\n                finalValue *= -1;\n            }\n            if (this.documentEditor.selectionModule.paragraphFormat.bidi) {\n                this.documentEditor.editorModule.applyRulerMarkerValues('leftIndent', finalValue, this.indentInitialValue);\n            }\n            else {\n                this.documentEditor.editorModule.applyRulerMarkerValues('leftIndent', this.indentInitialValue, finalValue);\n            }\n            this.indentInitialValue = finalValue;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n            lineSvg.style.display = 'none';\n        }\n    };\n    RulerHelper.prototype.onRightIndentMouseDown = function (e) {\n        this.isDraggingIndents4 = true;\n        this.rightLineOffset = e.clientX - this.rightIndent.getBoundingClientRect().left;\n        this.indentInitialValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.rightIndent.style.left);\n        var rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin) * this.documentEditor.zoomFactor;\n        if (this.documentEditor.selectionModule.paragraphFormat.bidi) {\n            rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                (this.documentEditor.selectionModule.sectionFormat.pageWidth - this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                    this.documentEditor.selectionModule.sectionFormat.rightMargin)) * this.documentEditor.zoomFactor;\n        }\n        if (this.documentEditor.layoutType === 'Continuous') {\n            rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) - 20;\n            if (this.documentEditor.selectionModule.paragraphFormat.bidi) {\n                rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) -\n                    20 - (this.documentEditor.viewer.clientArea.width * this.documentEditor.zoomFactor);\n            }\n        }\n        var value = rulerZeroPoint + e.clientX - this.rightLineOffset - this.hRuler.getBoundingClientRect().left;\n        var startValue = this.documentEditor.documentHelper.currentPage.boundingRectangle.x;\n        startValue = this.documentEditor.layoutType === 'Continuous' ? 0 : startValue;\n        var indicatorLineValue = startValue + (value - rulerZeroPoint) + 6;\n        var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n        lineSvg.style.left = indicatorLineValue + 'px';\n        lineSvg.style.display = 'block';\n        e.stopPropagation();\n    };\n    RulerHelper.prototype.onRightIndentMouseMove = function (e) {\n        if (this.isDraggingIndents4) {\n            var rulerZeroPoint = void 0;\n            var value = void 0;\n            var leftIndent = document.getElementById(this.documentEditor.element.id + '_leftIndent');\n            var firstLineIndent = document.getElementById(this.documentEditor.element.id + '_firstLineIndent');\n            var maxValue = void 0;\n            var minValue = void 0;\n            if (this.documentEditor.selectionModule.paragraphFormat.bidi) {\n                if (this.documentEditor.layoutType === 'Pages') {\n                    rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                        (this.documentEditor.selectionModule.sectionFormat.pageWidth -\n                            this.documentEditor.selectionModule.sectionFormat.leftMargin -\n                            this.documentEditor.selectionModule.sectionFormat.rightMargin)) * this.documentEditor.zoomFactor;\n                }\n                else if (this.documentEditor.layoutType === 'Continuous') {\n                    rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor)\n                        - 20 - (this.documentEditor.viewer.clientArea.width * this.documentEditor.zoomFactor);\n                }\n                value = rulerZeroPoint + e.clientX - this.rightLineOffset - this.hRuler.getBoundingClientRect().left;\n                var nearestElement = (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(leftIndent.style.left) - value) <= (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(firstLineIndent.style.left) - value) ? leftIndent : firstLineIndent;\n                var indentValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(nearestElement.style.left);\n                maxValue = indentValue - (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(42) * this.documentEditor.zoomFactor);\n                minValue = rulerZeroPoint - 6;\n            }\n            else {\n                if (this.documentEditor.layoutType === 'Pages') {\n                    rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin) * this.documentEditor.zoomFactor;\n                }\n                else if (this.documentEditor.layoutType === 'Continuous') {\n                    rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) - 20;\n                }\n                value = rulerZeroPoint + e.clientX - this.rightLineOffset - this.hRuler.getBoundingClientRect().left;\n                var nearestElement = (value - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(leftIndent.style.left))\n                    <= (value - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(firstLineIndent.style.left)) ? leftIndent : firstLineIndent;\n                var indentValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(nearestElement.style.left);\n                maxValue = rulerZeroPoint + (this.documentEditor.documentHelper.currentPage.boundingRectangle.width\n                    * this.documentEditor.zoomFactor) - 6;\n                minValue = indentValue + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(42) * this.documentEditor.zoomFactor);\n            }\n            if (value < minValue) {\n                value = minValue;\n            }\n            else if (value > maxValue) {\n                value = maxValue;\n            }\n            this.rightIndent.style.left = value + 'px';\n            var startValue = this.documentEditor.documentHelper.currentPage.boundingRectangle.x;\n            startValue = this.documentEditor.layoutType === 'Continuous' ? 0 : startValue;\n            var indicatorLineValue = startValue + (value - rulerZeroPoint) + 6;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n            lineSvg.style.left = indicatorLineValue + 'px';\n        }\n    };\n    RulerHelper.prototype.onRightIndentMouseUp = function (e) {\n        if (this.isDraggingIndents4) {\n            this.isDraggingIndents4 = false;\n            var finalValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.rightIndent.style.left);\n            if (this.documentEditor.selectionModule.paragraphFormat.bidi) {\n                this.documentEditor.editorModule.applyRulerMarkerValues('rightIndent', this.indentInitialValue, finalValue);\n            }\n            else {\n                this.documentEditor.editorModule.applyRulerMarkerValues('rightIndent', finalValue, this.indentInitialValue);\n            }\n            this.indentInitialValue = finalValue;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n            lineSvg.style.display = 'none';\n        }\n    };\n    RulerHelper.prototype.onTabStopMouseDown = function (e) {\n        e.stopPropagation();\n        this.isDraggingForTab = true;\n        this.tabStopOffset = e.clientX - this.tabStopElement.getBoundingClientRect().left;\n        this.tabInitialValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.tabStopElement.style.left);\n        this.tabIndex = parseInt(this.tabStopElement.id.split('_')[this.tabStopElement.id.split('_').length - 1], 10);\n        this.currentTabStop = this.currrentParagraph.paragraphFormat.tabs[parseInt(this.tabIndex.toString(), 10)];\n        this.currentTabStopElement = this.tabStopElement;\n        var rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin)\n            * this.documentEditor.zoomFactor;\n        if (this.documentEditor.layoutType === 'Continuous') {\n            rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) - 20;\n            if (this.position.paragraph.paragraphFormat.bidi) {\n                rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor)\n                    - 20 - (this.documentEditor.viewer.clientArea.width * this.documentEditor.zoomFactor);\n            }\n        }\n        var value = rulerZeroPoint + e.clientX - this.tabStopOffset - this.hRuler.getBoundingClientRect().left;\n        var startValue = this.documentEditor.documentHelper.currentPage.boundingRectangle.x;\n        startValue = this.documentEditor.layoutType === 'Continuous' ? 0 : startValue;\n        var indicatorLineValue = startValue + (value - rulerZeroPoint);\n        var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n        lineSvg.style.left = indicatorLineValue + 'px';\n        lineSvg.style.display = 'block';\n    };\n    RulerHelper.prototype.onTabStopMouseUp = function (e) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentTabStopElement)) {\n            this.currentTabStopElement = undefined;\n        }\n    };\n    RulerHelper.prototype.onTabStopMouseMove = function (e) {\n        if (this.isDraggingForTab) {\n            var rulerZeroPoint = void 0;\n            if (this.documentEditor.layoutType === 'Continuous') {\n                rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) - 20;\n                if (this.position.paragraph.paragraphFormat.bidi) {\n                    rulerZeroPoint = (this.documentEditor.hRuler.zeroPosition * this.documentEditor.zoomFactor) -\n                        20 - (this.documentEditor.viewer.clientArea.width * this.documentEditor.zoomFactor);\n                }\n            }\n            else if (this.documentEditor.layoutType === 'Pages') {\n                rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin)\n                    * this.documentEditor.zoomFactor;\n                if (this.position.paragraph.bidi) {\n                    rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 + this.documentEditor.selectionModule.sectionFormat.rightMargin\n                        - this.documentEditor.selectionModule.sectionFormat.pageWidth) * this.documentEditor.zoomFactor;\n                }\n            }\n            var value = rulerZeroPoint + e.clientX - this.tabStopOffset - this.hRuler.getBoundingClientRect().left;\n            var minValue = rulerZeroPoint;\n            var rightIndent = document.getElementById(this.documentEditor.element.id + '_rightIndent');\n            var rightIndentValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(rightIndent.style.left);\n            var maxValue = rightIndentValue;\n            var leftIndent = document.getElementById(this.documentEditor.element.id + '_leftIndent');\n            var leftIndentValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(leftIndent.style.left);\n            minValue = leftIndentValue;\n            if (this.position.paragraph.paragraphFormat.bidi) {\n                minValue = rightIndentValue;\n                maxValue = leftIndentValue;\n            }\n            if (this.justification === 'CenterTab' || this.justification === 'DecimalTab') {\n                maxValue += 4;\n            }\n            else if (this.justification === 'RightTab') {\n                maxValue += 5.5;\n            }\n            else {\n                maxValue += 1.5;\n            }\n            if (value < minValue) {\n                value = minValue;\n            }\n            else if (value > maxValue) {\n                value = maxValue;\n            }\n            this.tabStopElement.style.left = value + 'px';\n            var startValue = this.documentEditor.documentHelper.currentPage.boundingRectangle.x;\n            startValue = this.documentEditor.layoutType === 'Continuous' ? 0 : startValue;\n            var indicatorLineValue = startValue + (value - rulerZeroPoint) + 6;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n            lineSvg.style.left = indicatorLineValue + 'px';\n        }\n    };\n    RulerHelper.prototype.onRenderTabStopMouseUp = function (e) {\n        if (this.isDraggingForTab && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentTabStop)) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentTabStopElement) && this.currentTabStopElement.style.display === 'none') {\n                this.documentEditor.editorModule.removeTabStops([this.currrentParagraph], [this.currentTabStop]);\n                this.currentTabStopElement.parentNode.removeChild(this.currentTabStopElement);\n            }\n            else {\n                var finalValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.tabStopElement.style.left);\n                this.tabInitialValue = finalValue;\n                this.documentEditor.editorModule.removeTabStops([this.currrentParagraph], [this.currentTabStop]);\n                finalValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(finalValue / this.documentEditor.zoomFactor) - 1584;\n                finalValue = this.currrentParagraph.paragraphFormat.bidi ? finalValue * -1 : finalValue;\n                this.currentTabStop.position = finalValue;\n                this.documentEditor.editorModule.updateTabStopCollection(this.currrentParagraph, [this.currentTabStop]);\n            }\n            this.updateTabStopMarkers(this.documentEditor);\n            this.isDraggingForTab = false;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n            lineSvg.style.display = 'none';\n            this.currentTabStopElement = undefined;\n        }\n    };\n    RulerHelper.prototype.onTabStopDblClick = function (event) {\n        this.documentEditor.showTabDialog();\n        event.stopPropagation();\n    };\n    /**\n     * @private\n     */\n    RulerHelper.prototype.hideTabStopSwitch = function (show) {\n        if (this.tabStopStwitch) {\n            this.showHideElement(show, this.tabStopStwitch);\n        }\n    };\n    /**\n     * @private\n     */\n    RulerHelper.prototype.hideRulerBottom = function (show) {\n        if (this.hRulerBottom) {\n            this.showHideElement(show, this.hRulerBottom);\n        }\n        if (this.vRulerBottom) {\n            this.showHideElement(show, this.vRulerBottom);\n        }\n    };\n    RulerHelper.prototype.showHideElement = function (show, element) {\n        if (show) {\n            element.style.display = 'block';\n        }\n        else {\n            element.style.display = 'none';\n        }\n    };\n    /* eslint-enable */\n    /**\n     * createHtmlElement method \\\n     *\n     * @returns {SVGSVGElement} createHtmlElement method .\\\n     * @param { string } elementType - provide the diagramId  value.\n     * @param { Object } attribute - provide the diagramId  value.\n     * @private\n     */\n    RulerHelper.prototype.createHtmlElement = function (elementType, attribute) {\n        var element = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)(elementType, attribute);\n        this.setAttributeHtml(element, attribute);\n        return element;\n    };\n    /**\n     * createSvgElement method \\\n     *\n     * @returns {SVGSVGElement} createSvgElement method .\\\n     * @param { string } elementType - provide the elementType  value.\n     * @param { Object } attribute - provide the attribute  value.\n     * @private\n     */\n    RulerHelper.prototype.createSvgElement = function (elementType, attribute) {\n        var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n        this.setAttributeSvg(element, attribute);\n        return element;\n    };\n    /**\n     * applyStyleAgainstCsp method   \\\n     *\n     * @returns {void} applyStyleAgainstCsp method .\\\n     * @param { SVGElement } svg - provide the svg  value.\n     * @param { string } attributes - provide the boolean  value.\n     * @private\n     */\n    RulerHelper.prototype.applyStyleAgainstCsp = function (svg, attributes) {\n        var keys = attributes.split(';');\n        for (var i = 0; i < keys.length; i++) {\n            var attribute = keys[parseInt(i.toString(), 10)].split(':');\n            if (attribute.length === 2) {\n                svg.style[attribute[0].trim()] = attribute[1].trim();\n            }\n        }\n    };\n    /**\n     * setAttributeSvg method.\n     *\n     * @returns {void} setAttributeSvg method .\\\n     * @param { SVGElement } svg - provide the svg  value.\n     * @param { Object } attributes - provide the boolean  value.\n     * @private\n     */\n    RulerHelper.prototype.setAttributeSvg = function (svg, attributes) {\n        var keys = Object.keys(attributes);\n        for (var i = 0; i < keys.length; i++) {\n            // Added below condition to check whether svg is undefined or not\n            if (svg && keys[parseInt(i.toString(), 10)] !== 'style') {\n                svg.setAttribute(keys[parseInt(i.toString(), 10)], attributes[keys[parseInt(i.toString(), 10)]]);\n            }\n            else {\n                this.applyStyleAgainstCsp(svg, attributes[keys[parseInt(i.toString(), 10)]]);\n            }\n        }\n    };\n    /**\n     * setAttributeHtml method   \\\n     *\n     * @returns {void} setAttributeHtml method .\\\n     * @param { HTMLElement } element - provide the svg  value.\n     * @param { Object } attributes - provide the boolean  value.\n     * @private\n     */\n    RulerHelper.prototype.setAttributeHtml = function (element, attributes) {\n        var keys = Object.keys(attributes);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[parseInt(i.toString(), 10)] !== 'style') {\n                element.setAttribute(keys[parseInt(i.toString(), 10)], attributes[keys[parseInt(i.toString(), 10)]]);\n            }\n            else {\n                this.applyStyleAgainstCsp(element, attributes[keys[parseInt(i.toString(), 10)]]);\n            }\n        }\n    };\n    /**\n     * renderOverlapElement method \\\n     *\n     * @returns {void} renderOverlapElement method .\\\n     * @param { DocumentEditor} documentEditor - provide the content  value.\n     * @private\n     */\n    RulerHelper.prototype.renderOverlapElement = function (documentEditor) {\n        var rulerSize = this.getRulerSize(documentEditor);\n        var attributes = {\n            'id': documentEditor.element.id + '_overlapRuler',\n            style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;margin-left:0;margin-top:0;diplay:none',\n            class: 'e-ruler-overlap'\n        };\n        this.overlap = this.createHtmlElement('div', attributes);\n        var element = document.getElementById(documentEditor.element.id + '_viewerContainer');\n        element.insertBefore(this.overlap, element.firstChild);\n        return this.overlap;\n    };\n    RulerHelper.prototype.renderRulerMarkerIndicatorElement = function (documentEditor) {\n        if (!documentEditor.enableSelection) {\n            return;\n        }\n        var rulerSize = this.getRulerSize(documentEditor);\n        var attributes = {\n            'id': documentEditor.element.id + '_markIndicator',\n            style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;margin-left:0;margin-top:0;z-index:5;border:1px solid #ccc;display:' + (documentEditor.layoutType === 'Pages' ? 'block;' : 'none;'),\n            class: 'e-de-ruler-markIndicator'\n        };\n        this.markIndicator = this.createHtmlElement('div', attributes);\n        this.tabStopStwitch = this.markIndicator;\n        var element = document.getElementById(documentEditor.element.id + '_viewerContainer');\n        element.insertBefore(this.markIndicator, element.firstChild);\n        var ownerId = documentEditor.element.id;\n        this.firstLineIndentRuler = document.getElementById(ownerId + '_firstLineIndent').cloneNode(true);\n        this.hangingIndentRuler = document.getElementById(ownerId + '_hangingIndent').cloneNode(true);\n        this.firstLineIndentRuler.style.left = '1px';\n        this.firstLineIndentRuler.style.top = rulerSize.height / 2 - 3 + 'px';\n        this.firstLineIndentRuler.style.display = 'none';\n        this.firstLineIndentRuler.classList.add('e-de-ruler-marker');\n        this.firstLineIndentRuler.setAttribute('id', ownerId + '_firstLineIndent_-1');\n        this.hangingIndentRuler.style.left = '1px';\n        this.hangingIndentRuler.style.top = rulerSize.height / 2 - 3 + 'px';\n        this.hangingIndentRuler.style.display = 'none';\n        this.hangingIndentRuler.classList.add('e-de-ruler-marker');\n        this.hangingIndentRuler.setAttribute('id', ownerId + '_hangingIndent_-1');\n        this.markIndicator.appendChild(this.hangingIndentRuler);\n        this.markIndicator.appendChild(this.firstLineIndentRuler);\n        var justification = ['Left', 'Center', 'Right', 'Decimal', 'Bar'];\n        var locale = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', documentEditor.defaultLocale);\n        locale.setLocale(documentEditor.locale);\n        for (var i = 0; i < 5; i++) {\n            this.renderTab(documentEditor, rulerSize, undefined, justification[parseInt(i.toString(), 10)], -1, locale);\n            var element_1 = document.getElementById(documentEditor.element.id + '_' + justification[parseInt(i.toString(), 10)] + 'Tab_-1');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element_1)) {\n                element_1.classList.remove('e-de-ruler-tab');\n                element_1.classList.add('e-de-ruler-marker');\n                element_1.style.display = i === 0 ? 'block' : 'none';\n                element_1.style.position = 'absolute';\n                element_1.style.margin = '4px 3px';\n                this.markIndicator.appendChild(element_1);\n            }\n        }\n        this.markIndicator.addEventListener('click', this.onmarkIndicatorClickHandler);\n    };\n    /**\n     * renderRuler method \\\n     *\n     * @returns {void} renderRuler method .\\\n     * @param { DocumentEditor} documentEditor - provide the content  value.\n     * @param { boolean} isHorizontal - provide the content  value.\n     * @private\n     */\n    RulerHelper.prototype.renderRuler = function (documentEditor, isHorizontal) {\n        this.documentEditor = documentEditor;\n        if (!documentEditor.enableSelection) {\n            return;\n        }\n        this.rulerDiv = document.getElementById(documentEditor.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n        var rulerSize = this.getRulerSize(documentEditor);\n        this.rulerGeometry = this.getRulerGeometry(documentEditor);\n        var height = isHorizontal ? documentEditor.selectionModule.end.paragraph.bodyWidget.page.boundingRectangle.x\n            : (documentEditor.selectionModule.getPageTop(documentEditor.selectionModule.end.paragraph.bodyWidget.page));\n        var margin = isHorizontal ? ('margin-left:' + height + 'px;') : ('margin-top:' + height + 'px;');\n        if (documentEditor.selectionModule.isForward) {\n            this.position = documentEditor.selectionModule.start;\n        }\n        else {\n            this.position = documentEditor.selectionModule.end;\n        }\n        // const margin: string = isHorizontal ? ('margin-left:' + (pixelsToPoints(documentEditor.selection.end.paragraph.bodyWidget.page.boundingRectangle.x)) + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n        if (!this.rulerDiv) {\n            var style_1 = 'height:' + (isHorizontal ? rulerSize.height : this.rulerGeometry.height) + 'px;overflow:hidden;width:' +\n                (isHorizontal ? this.rulerGeometry.width : rulerSize.width) + 'px;position:absolute;font-size:9px;text-align: left;z-index: 4;user-select:none;' + margin;\n            var attributes_1 = {\n                'id': documentEditor.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n                style: style_1, class: (isHorizontal ? 'e-de-hRuler' : 'e-de-vRuler')\n            };\n            this.rulerDiv = this.createHtmlElement('div', attributes_1);\n        }\n        this.rulerDiv.addEventListener('dblclick', this.onRulerDblClickHandler);\n        var pageElement = document.getElementById(documentEditor.element.id + '_pageContainer');\n        var style = 'height:' + (isHorizontal ? rulerSize.height : pageElement.getBoundingClientRect().height) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? pageElement.getBoundingClientRect().width : rulerSize.width) + 'px;position:absolute;z-index: 3;';\n        var attributes = {\n            'id': documentEditor.element.id + (isHorizontal ? '_hRulerBottom' : '_vRulerBottom'),\n            style: style, class: (isHorizontal ? 'e-de-hRuler' : 'e-de-vRuler')\n        };\n        this.rulerOverlap = this.createHtmlElement('div', attributes);\n        // isHorizontal ? (this.hRulerBottom = overlap) : (this.vRulerBottom = overlap);\n        if (isHorizontal) {\n            this.hRulerBottom = this.rulerOverlap;\n        }\n        else {\n            this.vRulerBottom = this.rulerOverlap;\n        }\n        var parentElement = document.getElementById(documentEditor.element.id + '_viewerContainer');\n        parentElement.insertBefore(this.rulerOverlap, parentElement.firstChild);\n        var element = isHorizontal ? document.getElementById(documentEditor.element.id + '_hRulerBottom') : document.getElementById(documentEditor.element.id + '_vRulerBottom');\n        element.insertBefore(this.rulerDiv, element.firstChild);\n        this.renderRulerMargins(documentEditor, isHorizontal, this.rulerDiv);\n        //const documentEditorRuler: DocumentEditorRulerModel = isHorizontal ? documentEditor.documentEditorSettings.rulerSettings.horizontalRuler : documentEditor.documentEditorSettings.rulerSettings.verticalRuler;\n        var ruler = new _ruler_index__WEBPACK_IMPORTED_MODULE_1__.Ruler(this.rulerDiv, this);\n        ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n        this.updateMargin(ruler, documentEditor, isHorizontal);\n        // ruler.pageWidth = documentEditor.selection.end.paragraph.bodyWidget.page.boundingRectangle.width;\n        // ruler.pageHeight = documentEditor.selection.end.paragraph.bodyWidget.page.boundingRectangle.height;\n        // ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + documentEditorRuler.segmentWidth;\n        ruler.length = ruler.zeroPosition * 2;\n        ruler.appendTo();\n        // eslint-disable-next-line\n        isHorizontal ? documentEditor.hRuler = ruler : documentEditor.vRuler = ruler;\n        this.updateRulerPosition(documentEditor, isHorizontal);\n        var rulerObj = document.getElementById(documentEditor.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n        // eslint-disable-next-line\n        isHorizontal ? documentEditor.hRuler.element = rulerObj : documentEditor.vRuler.element = rulerObj;\n        if (rulerObj) {\n            // Set the scrollLeft property to the desired value (e.g., 100 pixels)\n            if (isHorizontal) {\n                rulerObj.scrollLeft = ruler.zeroPosition -\n                    _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin);\n            }\n            else {\n                rulerObj.scrollTop = ruler.zeroPosition -\n                    _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.topMargin);\n            }\n        }\n        this.locale = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', documentEditor.defaultLocale);\n        if (isHorizontal) {\n            this.renderIndents(documentEditor, isHorizontal, rulerSize, this.rulerGeometry, this.locale);\n        }\n        this.hRuler = document.getElementById(documentEditor.element.id + '_hRuler');\n        if (isHorizontal) {\n            document.addEventListener('mousemove', this.onHorizontalRulerMouseMoveHandler);\n            this.hRuler.addEventListener('mouseenter', this.onHRulerMouseEnterHandler);\n            this.hRuler.addEventListener('mouseleave', this.onHRulerMouseLeaveHandler);\n            this.hRuler.addEventListener('mousedown', this.onHRulerMouseDownHandler);\n            this.hRuler.addEventListener('mouseup', this.onHRulerMouseUpHandler);\n            document.addEventListener('mouseup', this.onRulerMouseUpHandler);\n        }\n        //Vertical Ruler Resizing\n        this.vRuler = document.getElementById(documentEditor.element.id + '_vRuler');\n        this.isTopRulerMargin = false;\n        if (!isHorizontal) {\n            document.addEventListener('mousemove', this.onVMouseMoveHandler);\n            this.vRuler.addEventListener('mousedown', this.onVMouseDownHandler);\n            document.addEventListener('mouseup', this.onVMouseUpHandler);\n        }\n    };\n    RulerHelper.prototype.onHorizontalRulerMouseMoved = function (e) {\n        if (this.documentEditor.isDestroyed || !this.documentEditor.documentEditorSettings.showRuler) {\n            return;\n        }\n        var divRect = this.hRuler.getBoundingClientRect();\n        var leftMargin = this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin\n            * this.documentEditor.zoomFactor;\n        var rightMargin = (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(divRect.width) -\n            this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.rightMargin * this.documentEditor.zoomFactor);\n        var pixelValue = Math.round(e.clientX - divRect.left);\n        var mouseXRelativeToDiv = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(pixelValue);\n        if (!this.isDraggingRender) {\n            if (this.documentEditor.isOnIndent) {\n                this.hRuler.style.cursor = 'default';\n                if (this.hRuler.hasAttribute('title')) {\n                    this.hRuler.removeAttribute('title');\n                }\n                this.resizerEnabled = false;\n            }\n            else if (((leftMargin - 3) <= mouseXRelativeToDiv) && ((leftMargin + 3) >= mouseXRelativeToDiv)) {\n                if (this.documentEditor.layoutType === 'Pages') {\n                    this.hRuler.style.cursor = 'e-resize';\n                    this.hRuler.setAttribute('title', this.locale.getConstant('Left Margin'));\n                    this.resizerEnabled = true;\n                    this.isLeftRulerMargin = true;\n                }\n            }\n            else if ((((rightMargin - 3) <= mouseXRelativeToDiv) && ((rightMargin + 3) >= mouseXRelativeToDiv))) {\n                if (this.documentEditor.layoutType === 'Pages') {\n                    this.hRuler.style.cursor = 'e-resize';\n                    this.hRuler.setAttribute('title', this.locale.getConstant('Right Margin'));\n                    this.resizerEnabled = true;\n                    this.isLeftRulerMargin = false;\n                }\n            }\n            else if (this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.columns.length > 0) {\n                var columns = this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.columns;\n                if (this.documentEditor.layoutType === 'Pages') {\n                    for (var i = 1; i <= columns.length; i++) {\n                        var rulerMarginDiv = document.getElementById(this.documentEditor.element.id + '_hRuler_Margin' + i);\n                        var maginLeft = rulerMarginDiv.getBoundingClientRect().left;\n                        var width = rulerMarginDiv.getBoundingClientRect().width;\n                        if (((maginLeft - 3) <= e.clientX) && ((maginLeft + 3) >= e.clientX)) {\n                            this.hRuler.style.cursor = 'e-resize';\n                            this.multiColumnElement = rulerMarginDiv;\n                            this.hRuler.setAttribute('title', this.locale.getConstant('Left Margin'));\n                            this.isLeftMultiColumn = true;\n                            this.resizerEnabled = true;\n                            break;\n                        }\n                        else if (((maginLeft + width - 3) <= e.clientX) && ((maginLeft + width + 3) >= e.clientX)) {\n                            this.hRuler.style.cursor = 'e-resize';\n                            this.multiColumnElement = rulerMarginDiv;\n                            this.hRuler.setAttribute('title', this.locale.getConstant('Right Margin'));\n                            this.isRightMultiColumn = true;\n                            this.resizerEnabled = true;\n                            break;\n                        }\n                        else {\n                            this.hRuler.style.cursor = 'default';\n                            if (this.hRuler.hasAttribute('title')) {\n                                this.hRuler.removeAttribute('title');\n                            }\n                            this.isLeftMultiColumn = false;\n                            this.isRightMultiColumn = false;\n                            this.resizerEnabled = false;\n                        }\n                    }\n                }\n            }\n            else {\n                this.hRuler.style.cursor = 'default';\n                if (this.hRuler.hasAttribute('title')) {\n                    this.hRuler.removeAttribute('title');\n                }\n                this.resizerEnabled = false;\n            }\n        }\n        if (this.isDraggingRender) {\n            var rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - this.documentEditor.selectionModule.sectionFormat.leftMargin) * this.documentEditor.zoomFactor;\n            var pageWidth = this.documentEditor.selectionModule.sectionFormat.pageWidth;\n            var rightMarginValue = this.documentEditor.selectionModule.sectionFormat.rightMargin;\n            var rightIndentValue = this.documentEditor.selectionModule.paragraphFormat.rightIndent;\n            rightIndentValue = rightIndentValue > 0 ? rightIndentValue : 0;\n            var minimumValue = 42;\n            var firstLineIndent = this.documentEditor.selectionModule.paragraphFormat.firstLineIndent;\n            var leftMarginValue = this.documentEditor.selectionModule.sectionFormat.leftMargin;\n            firstLineIndent = firstLineIndent >= 0 ? firstLineIndent : 0;\n            var leftIndent = this.documentEditor.selectionModule.paragraphFormat.leftIndent;\n            if (this.isLeftRulerMargin) {\n                var leftMaxLimit = rulerZeroPoint + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(pageWidth - rightMarginValue -\n                    rightIndentValue - minimumValue - firstLineIndent - leftIndent) * this.documentEditor.zoomFactor);\n                var leftMinLimit = rulerZeroPoint;\n                if (pixelValue + rulerZeroPoint > leftMaxLimit) {\n                    pixelValue = leftMaxLimit - rulerZeroPoint;\n                    mouseXRelativeToDiv = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(pixelValue);\n                }\n                else if (pixelValue + rulerZeroPoint < leftMinLimit) {\n                    pixelValue = leftMinLimit - rulerZeroPoint;\n                    mouseXRelativeToDiv = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(pixelValue);\n                }\n            }\n            else {\n                var rightMinLimit = rulerZeroPoint + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(leftMarginValue + leftIndent + firstLineIndent + minimumValue + rightIndentValue) * this.documentEditor.zoomFactor);\n                var rightMaxLimit = rulerZeroPoint + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(pageWidth) * this.documentEditor.zoomFactor);\n                if (pixelValue + rulerZeroPoint > rightMaxLimit) {\n                    pixelValue = rightMaxLimit - rulerZeroPoint;\n                    mouseXRelativeToDiv = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(pixelValue);\n                }\n                else if (pixelValue + rulerZeroPoint < rightMinLimit) {\n                    pixelValue = rightMinLimit - rulerZeroPoint;\n                    mouseXRelativeToDiv = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(pixelValue);\n                }\n            }\n            this.finalmouseXRelativeToDiv = mouseXRelativeToDiv;\n            var currentRightMargin = (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(divRect.width)\n                - (this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.rightMargin\n                    * this.documentEditor.zoomFactor));\n            if (this.documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.numberOfColumns <= 1) {\n                /* eslint-disable-next-line max-len */\n                this.resizeRulerMargins(this.isLeftRulerMargin, this.renderInitialValue, this.currentScrollLeft, currentRightMargin, this.hRuler, mouseXRelativeToDiv, true, this.documentEditor);\n            }\n            var rightIndent = document.getElementById(this.documentEditor.element.id + '_rightIndent');\n            if (this.isLeftRulerMargin) {\n                var difference = mouseXRelativeToDiv - this.renderInitialValue;\n                rightIndent.style.left = (this.initialRightMargin - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(difference)) + 'px';\n            }\n            else {\n                var difference = mouseXRelativeToDiv - this.renderInitialValue;\n                rightIndent.style.left = (this.initialRightMargin + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(difference)) + 'px';\n            }\n            var startValue = this.documentEditor.documentHelper.currentPage.boundingRectangle.x;\n            var indicatorLineValue = startValue + pixelValue;\n            var lineSvg = document.getElementById(this.documentEditor.element.id + '_hRuler_indicator_svg');\n            lineSvg.style.left = indicatorLineValue + 'px';\n        }\n    };\n    RulerHelper.prototype.updateRulerPosition = function (documentEditor, isHorizontal) {\n        var rulerObj = document.getElementById(documentEditor.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n        // eslint-disable-next-line\n        isHorizontal ? documentEditor.hRuler.element = rulerObj : documentEditor.vRuler.element = rulerObj;\n        if (rulerObj) {\n            // Set the scrollLeft property to the desired value (e.g., 100 pixels)\n            rulerObj.scrollLeft = 2112 - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin);\n        }\n    };\n    RulerHelper.prototype.updateIndicatorLines = function (documentEditor) {\n        var hRulerSvg = document.getElementById(documentEditor.element.id + '_hRuler_indicator_svg');\n        var hRulerLine = document.getElementById(documentEditor.element.id + '_hRuler_indicator');\n        var vRulerSvg = document.getElementById(documentEditor.element.id + '_vRuler_indicator_svg');\n        var vRulerLine = document.getElementById(documentEditor.element.id + '_vRuler_indicator');\n        var pageContainer = document.getElementById(documentEditor.element.id + '_pageContainer');\n        var pageData = pageContainer.getBoundingClientRect();\n        var pageHeight = pageData.height;\n        var pageWidth = pageData.width;\n        hRulerSvg.style.height = pageHeight + 'px';\n        hRulerLine.setAttribute('y2', \"\" + pageHeight);\n        vRulerSvg.style.width = pageWidth + 'px';\n        vRulerLine.setAttribute('x2', \"\" + pageWidth);\n    };\n    RulerHelper.prototype.createIndicatorLines = function (documentEditor) {\n        if (!documentEditor.enableSelection) {\n            return;\n        }\n        var viewerContainer = document.getElementById(documentEditor.element.id + '_viewerContainer');\n        var pageContainer = document.getElementById(documentEditor.element.id + '_pageContainer');\n        // let container = document.getElementById(documentEditor.element.id);\n        var data = viewerContainer.getBoundingClientRect();\n        var pageData = pageContainer.getBoundingClientRect();\n        var pageHeight = pageData.height;\n        var pageWidth = pageData.width;\n        this.hRuler = document.getElementById(documentEditor.element.id + '_hRuler');\n        var hSvgAttr = {\n            id: documentEditor.element.id + '_hRuler_indicator_svg',\n            width: 0.5 + 'px',\n            height: pageHeight + 'px',\n            style: 'position:absolute;z-index:1;display:none;'\n        };\n        this.hSvg = this.createSvgElement('svg', hSvgAttr);\n        var verticalLineAttr = { 'x1': 0, 'y1': this.hRuler.getBoundingClientRect().height + 5, 'x2': 0, 'y2': pageHeight, 'stroke-width': 0.5, 'stroke': 'black' };\n        this.vLine = this.createSvgElement('line', verticalLineAttr);\n        this.vLine.setAttribute('id', documentEditor.element.id + '_hRuler_indicator');\n        this.hSvg.appendChild(this.vLine);\n        viewerContainer.insertBefore(this.hSvg, viewerContainer.firstChild);\n        var vRuler = document.getElementById(documentEditor.element.id + '_vRuler');\n        var vSvgAttr = {\n            id: documentEditor.element.id + '_vRuler_indicator_svg',\n            width: pageWidth + 'px',\n            height: 0.5 + 'px',\n            style: 'position:absolute;z-index:1;display:none;'\n        };\n        this.vSvg = this.createSvgElement('svg', vSvgAttr);\n        var horizontalLineAttr = { 'x1': vRuler.getBoundingClientRect().width + 5, 'y1': 0, 'x2': pageWidth, 'y2': 0, 'stroke-width': 0.5, 'stroke': 'black' };\n        this.hLine = this.createSvgElement('line', horizontalLineAttr);\n        this.hLine.setAttribute('id', documentEditor.element.id + '_vRuler_indicator');\n        this.vSvg.appendChild(this.hLine);\n        viewerContainer.insertBefore(this.vSvg, viewerContainer.firstChild);\n    };\n    RulerHelper.prototype.updateIndentMarkers = function (documentEditor) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(documentEditor) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(documentEditor.element)\n            || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(documentEditor.element.id) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(documentEditor.hRuler)\n            || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(documentEditor.hRuler.zeroPosition)) {\n            return;\n        }\n        var indent = undefined;\n        var ownerId = documentEditor.element.id;\n        var rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - documentEditor.selectionModule.sectionFormat.leftMargin);\n        var currentIndentValue;\n        var finalValue;\n        var currentMargin;\n        var pixelValue;\n        // if (documentEditor.selection.end.paragraph.isInsideTable) {\n        //     currentIndentValue = documentEditor.selection.paragraphFormat.leftIndent;\n        //     currentMargin = documentEditor.selection.sectionFormat.leftMargin;\n        //     finalValue = HelperMethods.convertPointToPixel(currentIndentValue) + currentCell.x;\n        //     pixelValue = (((rulerZeroPoint + ((finalValue))) * documentEditor.zoomFactor)) + 'px';\n        //     indent = document.getElementById(ownerId + '_leftIndent');\n        //     if (!isNullOrUndefined(indent)) {\n        //         indent.style.left = pixelValue;\n        //     }\n        //     indent = document.getElementById(ownerId + '_hangingIndent');\n        //     if (!isNullOrUndefined(indent)) {\n        //         indent.style.left = pixelValue;\n        //     }\n        //     indent = document.getElementById(ownerId + '_firstLineIndent');\n        //     currentIndentValue = documentEditor.selection.paragraphFormat.firstLineIndent;\n        //     currentMargin = documentEditor.selection.paragraphFormat.leftIndent;\n        //     finalValue = HelperMethods.convertPointToPixel(currentIndentValue + currentMargin) + currentCell.x;\n        //     pixelValue = (((rulerZeroPoint + ((finalValue))) * documentEditor.zoomFactor)) + 'px';\n        //     if (!isNullOrUndefined(indent)) {\n        //         indent.style.left = pixelValue;\n        //     }\n        //     indent = document.getElementById(ownerId + '_rightIndent');\n        //     currentIndentValue = documentEditor.selection.paragraphFormat.rightIndent;\n        //     currentMargin = documentEditor.selection.sectionFormat.rightMargin;\n        //     finalValue = (currentCell.x + currentCell.width) - HelperMethods.convertPointToPixel(currentIndentValue);\n        //     pixelValue = ((rulerZeroPoint + finalValue - 2) * documentEditor.zoomFactor) + 'px';\n        //     if (!isNullOrUndefined(indent)) {\n        //         indent.style.left = pixelValue;\n        //     }\n        // }\n        // else {\n        //     indent = document.getElementById(ownerId + '_leftIndent');\n        //     currentIndentValue = documentEditor.selection.paragraphFormat.leftIndent;\n        //     currentMargin = documentEditor.selection.sectionFormat.leftMargin;\n        //     finalValue = currentMargin + currentIndentValue;\n        //     pixelValue = (((rulerZeroPoint + (HelperMethods.convertPointToPixel(finalValue))) * documentEditor.zoomFactor) - 6) + 'px';\n        //     if (!isNullOrUndefined(indent)) {\n        //         indent.style.left = pixelValue;\n        //     }\n        //     indent = document.getElementById(ownerId + '_hangingIndent');\n        //     if (!isNullOrUndefined(indent)) {\n        //         indent.style.left = pixelValue;\n        //     }\n        //     indent = document.getElementById(ownerId + '_firstLineIndent');\n        //     currentIndentValue = documentEditor.selection.paragraphFormat.firstLineIndent;\n        //     let leftIndent = documentEditor.selection.paragraphFormat.leftIndent;\n        //     let leftMargin = documentEditor.selection.sectionFormat.leftMargin;\n        //     if (currentIndentValue < 0 && leftIndent < 0) {\n        //         currentIndentValue = currentIndentValue < 0 ? 0 : currentIndentValue;\n        //     }\n        //     finalValue = leftMargin + leftIndent + currentIndentValue;\n        //     pixelValue = (((rulerZeroPoint + HelperMethods.convertPointToPixel(finalValue)) * documentEditor.zoomFactor) - 6) + 'px';\n        //     if (!isNullOrUndefined(indent)) {\n        //         indent.style.left = pixelValue;\n        //     }\n        //     indent = document.getElementById(ownerId + '_rightIndent');\n        //     currentIndentValue = documentEditor.selection.paragraphFormat.rightIndent;\n        //     currentMargin = documentEditor.selection.sectionFormat.rightMargin;\n        //     finalValue = documentEditor.selection.sectionFormat.pageWidth - (currentIndentValue + currentMargin);\n        //     pixelValue = (((rulerZeroPoint + HelperMethods.convertPointToPixel(finalValue)) * documentEditor.zoomFactor) - 6) + 'px';\n        //     if (!isNullOrUndefined(indent)) {\n        //         indent.style.left = pixelValue;\n        //     }\n        // }\n        var rulerGeometry = this.getRulerGeometry(documentEditor);\n        if (this.position.paragraph.paragraphFormat.bidi || (this.position.paragraph.isInsideTable\n            && this.position.paragraph.associatedCell.ownerTable.tableFormat.bidi)) {\n            var rulerMarginDivWidth = ((rulerGeometry.width / documentEditor.zoomFactor) -\n                (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel((this.position.paragraph.bodyWidget.sectionFormat.rightMargin)\n                    + (this.position.paragraph.bodyWidget.sectionFormat.leftMargin))));\n            rulerZeroPoint -= rulerMarginDivWidth;\n        }\n        var paraStart = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.position.paragraph['absoluteXPosition']) ? parseFloat(this.position.paragraph['absoluteXPosition']['x'].toString()) : this.position.paragraph.x;\n        var paraWidth = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.position.paragraph['absoluteXPosition']) ? parseFloat(this.position.paragraph['absoluteXPosition']['width'].toString()) : this.position.paragraph.width;\n        var finalValueTemp;\n        if (this.position.paragraph.paragraphFormat.bidi) {\n            rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - documentEditor.selectionModule.sectionFormat.leftMargin -\n                (documentEditor.selectionModule.sectionFormat.pageWidth -\n                    documentEditor.selectionModule.sectionFormat.leftMargin -\n                    documentEditor.selectionModule.sectionFormat.rightMargin));\n        }\n        var leftIndent = document.getElementById(documentEditor.element.id + '_leftIndent');\n        var rightIndent = document.getElementById(documentEditor.element.id + '_rightIndent');\n        if (this.position.paragraph.paragraphFormat.bidi) {\n            leftIndent.setAttribute('title', this.locale.getConstant('Right Indent'));\n            rightIndent.setAttribute('title', this.locale.getConstant('Left Indent'));\n            finalValueTemp = rulerZeroPoint + paraStart + paraWidth;\n        }\n        else {\n            leftIndent.setAttribute('title', this.locale.getConstant('Left Indent'));\n            rightIndent.setAttribute('title', this.locale.getConstant('Right Indent'));\n            finalValueTemp = rulerZeroPoint + paraStart;\n        }\n        var firstLineIndent = this.position.paragraph.paragraphFormat.firstLineIndent;\n        indent = document.getElementById(ownerId + '_leftIndent');\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(indent)) {\n            if (documentEditor.layoutType === 'Pages') {\n                indent.style.left = ((finalValueTemp * documentEditor.zoomFactor) - 6) + 'px';\n            }\n            else if (documentEditor.layoutType === 'Continuous') {\n                if (this.position.paragraph.paragraphFormat.bidi) {\n                    rulerZeroPoint = (documentEditor.hRuler.zeroPosition * documentEditor.zoomFactor) -\n                        20 - documentEditor.viewer.clientArea.width;\n                    finalValueTemp = rulerZeroPoint + paraStart + paraWidth;\n                    indent.style.left = finalValueTemp + 'px';\n                }\n                else {\n                    rulerZeroPoint = (documentEditor.hRuler.zeroPosition * documentEditor.zoomFactor) - 20;\n                    finalValueTemp = rulerZeroPoint + (paraStart * documentEditor.zoomFactor);\n                    indent.style.left = finalValueTemp + 'px';\n                }\n            }\n        }\n        indent = document.getElementById(ownerId + '_hangingIndent');\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(indent)) {\n            if (documentEditor.layoutType === 'Pages') {\n                indent.style.left = ((finalValueTemp * documentEditor.zoomFactor) - 6) + 'px';\n            }\n            else if (documentEditor.layoutType === 'Continuous') {\n                if (this.position.paragraph.paragraphFormat.bidi) {\n                    rulerZeroPoint = (documentEditor.hRuler.zeroPosition * documentEditor.zoomFactor) -\n                        20 - documentEditor.viewer.clientArea.width;\n                    finalValueTemp = rulerZeroPoint + paraStart + paraWidth;\n                    indent.style.left = finalValueTemp + 'px';\n                }\n                else {\n                    rulerZeroPoint = (documentEditor.hRuler.zeroPosition * documentEditor.zoomFactor) - 20;\n                    finalValueTemp = rulerZeroPoint + (paraStart * documentEditor.zoomFactor);\n                    indent.style.left = finalValueTemp + 'px';\n                }\n            }\n        }\n        indent = document.getElementById(ownerId + '_firstLineIndent');\n        if (documentEditor.layoutType === 'Pages') {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(indent)) {\n                if (this.position.paragraph.paragraphFormat.bidi) {\n                    indent.style.left = (((finalValueTemp - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(firstLineIndent)) * documentEditor.zoomFactor) - 6) + 'px';\n                }\n                else {\n                    indent.style.left = (((finalValueTemp + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(firstLineIndent)) * documentEditor.zoomFactor) - 6) + 'px';\n                }\n            }\n        }\n        else if (documentEditor.layoutType === 'Continuous') {\n            if (this.position.paragraph.paragraphFormat.bidi) {\n                rulerZeroPoint = (documentEditor.hRuler.zeroPosition * documentEditor.zoomFactor) -\n                    20 - documentEditor.viewer.clientArea.width;\n                finalValueTemp = rulerZeroPoint + paraStart + paraWidth - (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(firstLineIndent) * documentEditor.zoomFactor);\n            }\n            else {\n                rulerZeroPoint = (documentEditor.hRuler.zeroPosition * documentEditor.zoomFactor) - 20;\n                finalValueTemp = rulerZeroPoint + ((paraStart + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(firstLineIndent)) * documentEditor.zoomFactor);\n            }\n            indent.style.left = finalValueTemp + 'px';\n        }\n        indent = document.getElementById(ownerId + '_rightIndent');\n        if (documentEditor.layoutType === 'Pages') {\n            if (this.position.paragraph.paragraphFormat.bidi) {\n                finalValueTemp = rulerZeroPoint + paraStart;\n            }\n            else {\n                finalValueTemp = rulerZeroPoint + paraStart + paraWidth;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(indent)) {\n                indent.style.left = ((finalValueTemp * documentEditor.zoomFactor) - 6) + 'px';\n            }\n        }\n        else if (documentEditor.layoutType === 'Continuous') {\n            if (this.position.paragraph.paragraphFormat.bidi) {\n                rulerZeroPoint = (documentEditor.hRuler.zeroPosition * documentEditor.zoomFactor) -\n                    20 - (documentEditor.viewer.clientArea.width * documentEditor.zoomFactor);\n                finalValueTemp = rulerZeroPoint + paraStart;\n                indent.style.left = finalValueTemp + 'px';\n            }\n            else {\n                rulerZeroPoint = (documentEditor.hRuler.zeroPosition * documentEditor.zoomFactor) - 20;\n                finalValueTemp = rulerZeroPoint + ((paraStart + paraWidth) * documentEditor.zoomFactor);\n                indent.style.left = finalValueTemp + 'px';\n            }\n        }\n    };\n    RulerHelper.prototype.updateTabStopMarkers = function (documentEditor) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(documentEditor) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(documentEditor.element)\n            || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(documentEditor.element.id) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(documentEditor.hRuler)\n            || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(documentEditor.hRuler.zeroPosition)) {\n            return;\n        }\n        var locale = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', documentEditor.defaultLocale);\n        locale.setLocale(documentEditor.locale);\n        var ownerId = documentEditor.element.id;\n        this.markIndicator = document.getElementById(ownerId + '_markIndicator');\n        this.markIndicator.style.display = documentEditor.layoutType === 'Pages' ? 'block' : 'none';\n        var paragarph = this.position.paragraph;\n        var tabs = paragarph.paragraphFormat.tabs;\n        var zoomFactor = documentEditor.zoomFactor;\n        var rulerSize = this.getRulerSize(documentEditor);\n        var RenderedTabElement = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertNodeListToArray(document.querySelectorAll('.e-de-ruler-tab'));\n        for (var i = 0; i < tabs.length; i++) {\n            var tabStop = tabs[parseInt(i.toString(), 10)];\n            var justification = tabStop.tabJustification;\n            // const position: number = tabStop.position;\n            var id = documentEditor.element.id + '_' + justification + 'Tab_' + i.toString();\n            var tabMarker = document.getElementById(id);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tabMarker)) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(RenderedTabElement) && RenderedTabElement.length > 0) {\n                    RenderedTabElement.splice(RenderedTabElement.indexOf(tabMarker), 1);\n                }\n                var value = this.position.paragraph.paragraphFormat.bidi ?\n                    (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - tabStop.position))\n                    : (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 + tabStop.position));\n                if (justification === 'Center' || justification === 'Decimal') {\n                    tabMarker.style.left = ((value * zoomFactor) - 4) + 'px';\n                }\n                else if (justification === 'Right') {\n                    tabMarker.style.left = ((value * zoomFactor) - 5.5) + 'px';\n                }\n                else {\n                    tabMarker.style.left = ((value * zoomFactor) - 1.5) + 'px';\n                }\n            }\n            else {\n                if (justification !== 'List' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(justification)) {\n                    this.renderTab(documentEditor, rulerSize, tabStop, justification, i, locale);\n                }\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(RenderedTabElement)) {\n            for (var i = 0; i < RenderedTabElement.length; i++) {\n                var elementToRemove = RenderedTabElement[parseInt(i.toString(), 10)];\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(elementToRemove)) {\n                    elementToRemove.parentNode.removeChild(elementToRemove);\n                }\n            }\n        }\n    };\n    RulerHelper.prototype.renderRulerMargins = function (documentEditor, isHorizontal, rulerContainer) {\n        var rulerSize = this.getRulerSize(documentEditor);\n        var rulerGeometry = this.getRulerGeometry(documentEditor);\n        var height = isHorizontal ? documentEditor.selectionModule.end.paragraph.bodyWidget.page.boundingRectangle.x\n            : (documentEditor.selectionModule.end.paragraph.bodyWidget.page.boundingRectangle.y + rulerSize.height);\n        // const margin: string = isHorizontal ? ('margin-left:' + height + 'px;') : ('margin-top:' + height + 'px;');\n        //const leftMarginValue = 2112 - (HelperMethods.convertPointToPixel(documentEditor.selection.end.paragraph.bodyWidget.sectionFormat.leftMargin));\n        var leftMarginValue = 2112 * documentEditor.zoomFactor;\n        var rulerMargin = isHorizontal ? ('margin-left:' + leftMarginValue + 'px;') : ('margin-top:' + leftMarginValue + 'px;');\n        var rulerHeight = (isHorizontal ? rulerSize.height : (rulerGeometry.height -\n            (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.topMargin\n                + documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.bottomMargin) * documentEditor.zoomFactor)));\n        // const rulerHeight =  (isHorizontal ? rulerSize.height : rulerGeometry.height);\n        if (isHorizontal) {\n            for (var i = 1; i <= 13; i++) {\n                this.rulerMarginDiv = document.getElementById(documentEditor.element.id + '_hRuler_Margin' + i);\n                if (!this.rulerMarginDiv) {\n                    var rulerstyle = 'height:' + rulerHeight + 'px;overflow:hidden;width:' +\n                        (rulerGeometry.width - (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.rightMargin + documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin) * documentEditor.zoomFactor)) + 'px;position:absolute;' + 'font-size:9px;text-align: left;z-index: -1;display: block' + rulerMargin;\n                    var rulerattributes = {\n                        'id': documentEditor.element.id + '_hRuler_Margin' + i,\n                        style: rulerstyle,\n                        class: 'e-de-ruler-margin'\n                    };\n                    this.rulerMarginDiv = this.createHtmlElement('div', rulerattributes);\n                }\n                rulerContainer.appendChild(this.rulerMarginDiv);\n            }\n        }\n        else {\n            if (!this.verticalRulerMarginDiv) {\n                this.verticalRulerMarginDiv = document.getElementById(documentEditor.element.id + '_vRuler_Margin');\n                var rulerstyle = 'height:' + rulerHeight + 'px;overflow:hidden;width:' +\n                    rulerSize.width + 'px;position:absolute;' + 'font-size:9px;text-align: left;z-index: -1;' + rulerMargin;\n                var rulerattributes = {\n                    'id': documentEditor.element.id + '_vRuler_Margin',\n                    style: rulerstyle,\n                    class: 'e-de-ruler-margin'\n                };\n                this.verticalRulerMarginDiv = this.createHtmlElement('div', rulerattributes);\n            }\n            rulerContainer.appendChild(this.verticalRulerMarginDiv);\n        }\n    };\n    RulerHelper.prototype.updateRulerMargins = function (documentEditor) {\n        var rulerGeometry = this.getRulerGeometry(documentEditor);\n        var leftMarginValue = (documentEditor.hRuler.zeroPosition) * documentEditor.zoomFactor;\n        this.updateHorizontalRulerMargin(documentEditor);\n        var verticalRulerMarginDiv = document.getElementById(documentEditor.element.id + '_vRuler_Margin');\n        var rulerMarginDivHeight = rulerGeometry.height - (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel((documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.bottomMargin\n            * documentEditor.zoomFactor) + (documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.topMargin\n            * documentEditor.zoomFactor)));\n        verticalRulerMarginDiv.style.marginTop = leftMarginValue + 'px';\n        verticalRulerMarginDiv.style.height = rulerMarginDivHeight + 'px';\n    };\n    RulerHelper.prototype.updateHorizontalRulerMargin = function (documentEditor) {\n        var columns = documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.columns;\n        var leftMarginValue = (documentEditor.hRuler.zeroPosition) * documentEditor.zoomFactor;\n        var skipLoop = false;\n        var paraBidi = this.position.paragraph.paragraphFormat.bidi;\n        var tableBidi = false;\n        var currnLefttMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin - 72);\n        var currentRightMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.rightMargin - 72);\n        if (this.position.paragraph.isInsideTable) {\n            tableBidi = this.position.paragraph.associatedCell.ownerTable.tableFormat.bidi;\n        }\n        var rulerMarginDivWidth = (this.getRulerGeometry(documentEditor).width -\n            (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel((documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.rightMargin\n                * documentEditor.zoomFactor) + (documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin\n                * documentEditor.zoomFactor))));\n        if (paraBidi || tableBidi) {\n            leftMarginValue = (documentEditor.hRuler.zeroPosition * documentEditor.zoomFactor) - rulerMarginDivWidth;\n        }\n        for (var i = 0; i < 13; i++) {\n            var horizontalRulerMarginDiv = document.getElementById(documentEditor.element.id + '_hRuler_Margin' + (i + 1));\n            if (horizontalRulerMarginDiv) {\n                if ((columns.length === 0 && !skipLoop) || (documentEditor.layoutType === 'Continuous' && !skipLoop)) {\n                    if (paraBidi || tableBidi) {\n                        var startValue = (documentEditor.hRuler.zeroPosition * documentEditor.zoomFactor) - rulerMarginDivWidth;\n                        horizontalRulerMarginDiv.style.marginLeft = startValue + 'px';\n                    }\n                    else {\n                        horizontalRulerMarginDiv.style.marginLeft = leftMarginValue + 'px';\n                    }\n                    horizontalRulerMarginDiv.style.display = 'block';\n                    if (documentEditor.layoutType === 'Continuous') {\n                        var paraWidth = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.position.paragraph['absoluteXPosition']) ? parseFloat(this.position.paragraph['absoluteXPosition']['width'].toString()) : this.position.paragraph.width;\n                        horizontalRulerMarginDiv.style.width = (paraWidth * documentEditor.zoomFactor) + 'px';\n                    }\n                    else {\n                        horizontalRulerMarginDiv.style.width = rulerMarginDivWidth + 'px';\n                    }\n                    skipLoop = true;\n                }\n                else if ((columns.length >= i + 1) && documentEditor.layoutType === 'Pages') {\n                    if (paraBidi || tableBidi) {\n                        horizontalRulerMarginDiv.style.marginLeft = leftMarginValue + 'px';\n                        leftMarginValue -= ((currnLefttMargin + currentRightMargin) / (columns.length)) * documentEditor.zoomFactor;\n                        leftMarginValue = leftMarginValue + (columns[parseInt(i.toString(), 10)].width +\n                            columns[parseInt(i.toString(), 10)].space) * documentEditor.zoomFactor;\n                    }\n                    else {\n                        horizontalRulerMarginDiv.style.marginLeft = leftMarginValue + 'px';\n                        leftMarginValue -= ((currnLefttMargin + currentRightMargin) / (columns.length)) * documentEditor.zoomFactor;\n                        leftMarginValue = leftMarginValue + (columns[parseInt(i.toString(), 10)].width +\n                            columns[parseInt(i.toString(), 10)].space) * documentEditor.zoomFactor;\n                    }\n                    horizontalRulerMarginDiv.style.display = 'block';\n                    horizontalRulerMarginDiv.style.width = (columns[parseInt(i.toString(), 10)].width - ((currnLefttMargin + currentRightMargin) / columns.length)) * documentEditor.zoomFactor + 'px';\n                }\n                else {\n                    horizontalRulerMarginDiv.style.display = 'none';\n                }\n            }\n        }\n    };\n    RulerHelper.prototype.resizeVRulerMargins = function (isRulerTopMargin, currentTopMargin, currentScrollTop, currentBottomMargin, ruler, mousePosition, documentEditor) {\n        var rulerMarginDiv = document.getElementById(documentEditor.element.id + '_vRuler_Margin');\n        var rulerGeometry = this.getRulerGeometry(documentEditor);\n        if (isRulerTopMargin) {\n            rulerMarginDiv.style.height = (rulerGeometry.height - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel((documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.bottomMargin * documentEditor.zoomFactor) + mousePosition)).toString() + 'px';\n            if (currentTopMargin < mousePosition) {\n                ruler.scrollTop = currentScrollTop - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(mousePosition - currentTopMargin);\n            }\n            else {\n                ruler.scrollTop = currentScrollTop + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(currentTopMargin - mousePosition);\n            }\n        }\n        else {\n            var bottomMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(rulerGeometry.height) - mousePosition;\n            rulerMarginDiv.style.height = (rulerGeometry.height - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel((documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.topMargin * documentEditor.zoomFactor) + (bottomMargin))).toString() + 'px';\n            if (currentBottomMargin < mousePosition) {\n                //  ruler.scrollLeft = currentScrollLeft - HelperMethods.convertPointToPixel(mousePosition - currentRightMargin);\n            }\n            else {\n                //  ruler.scrollLeft = currentScrollLeft + HelperMethods.convertPointToPixel(currentRightMargin - mousePosition);\n            }\n        }\n    };\n    RulerHelper.prototype.resizeRulerMargins = function (isRulerLeftMargin, currentLeftMargin, currentScrollLeft, currentRightMargin, ruler, mousePosition, isHorizontal, documentEditor) {\n        var rulerMarginDiv = document.getElementById(documentEditor.element.id + (isHorizontal ? '_hRuler_Margin1' : '_vRuler_Margin'));\n        var rulerGeometry = this.getRulerGeometry(documentEditor);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isRulerLeftMargin) && isRulerLeftMargin) {\n            rulerMarginDiv.style.width = (rulerGeometry.width - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel((documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.rightMargin * documentEditor.zoomFactor) + mousePosition)).toString() + 'px';\n            if (currentLeftMargin < mousePosition) {\n                ruler.scrollLeft = currentScrollLeft - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(mousePosition - currentLeftMargin);\n            }\n            else {\n                ruler.scrollLeft = currentScrollLeft + _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(currentLeftMargin - mousePosition);\n            }\n        }\n        else {\n            var rightMargin = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(rulerGeometry.width) - mousePosition;\n            rulerMarginDiv.style.width = (rulerGeometry.width - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel((documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin * documentEditor.zoomFactor) + (rightMargin))).toString() + 'px';\n            if (currentRightMargin < mousePosition) {\n                //  ruler.scrollLeft = currentScrollLeft - HelperMethods.convertPointToPixel(mousePosition - currentRightMargin);\n            }\n            else {\n                //  ruler.scrollLeft = currentScrollLeft + HelperMethods.convertPointToPixel(currentRightMargin - mousePosition);\n            }\n        }\n    };\n    RulerHelper.prototype.getRulerOrigin = function () {\n        var range = 1584;\n        var pixelValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584);\n        //console.log('PixelValue: ', pixelValue);\n        //console.log('PointsValue: ', range);\n    };\n    RulerHelper.prototype.renderIndents = function (documentEditor, isHorizontal, rulerSize, rulerGeometry, locale) {\n        this.hRuler = document.getElementById(documentEditor.element.id + '_hRuler');\n        this.firstLineIndent = document.getElementById(documentEditor.element.id + '_firstLineIndent');\n        if (!this.firstLineIndent) {\n            var margin = ('left:' + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin) - 6) * documentEditor.zoomFactor + 'px;');\n            var style = 'height:' + ((rulerSize.height - 3) / 2) + 'px;overflow:hidden;width:12px;position:absolute;font-size:11px;text-align: left;z-index: 5;' + margin;\n            var attributes = {\n                'id': documentEditor.element.id + '_firstLineIndent',\n                style: style,\n                'data-name': 'FirstLineIndent',\n                class: 'e-de-ruler-indent'\n            };\n            this.firstLineIndent = this.createHtmlElement('div', attributes);\n            this.firstLineIndent.setAttribute('title', locale.getConstant('First Line Indent'));\n            // let svg: SVGElement;\n            // Create an SVG element\n            var attr = {\n                'id': documentEditor.element.id + '_firstLineIndent_svg',\n                width: rulerSize.width + 'px',\n                height: ((rulerSize.height - 3) / 2) + 'px',\n                style: 'position:inherit;left:0px'\n            };\n            this.firstLineIndentSvg = this.createSvgElement('svg', attr);\n            this.firstLineIndentSvg.setAttribute('fill', 'none');\n            var pathattr = {\n                style: 'position:inherit;left:0px'\n            };\n            // Create a path element inside the SVG\n            this.firstLineIndentPath = this.createSvgElement('path', pathattr);\n            this.firstLineIndentPath.setAttribute('class', 'e-de-ruler-indent-svg');\n            this.firstLineIndentPath.setAttribute('d', 'M 0.5 0.5 H 11.5 V 2.7128 L 6 5.4211 L 0.5 2.7128 V 0.5 Z');\n            this.firstLineIndentPath.setAttribute('fill', 'white');\n            this.firstLineIndentPath.setAttribute('stroke', '#A1A1A1');\n            // Append the path element to the SVG element\n            this.firstLineIndentSvg.appendChild(this.firstLineIndentPath);\n            this.firstLineIndent.appendChild(this.firstLineIndentSvg);\n            this.hRuler.append(this.firstLineIndent);\n            this.firstLineIndent.addEventListener('dblclick', this.onDoubleClickHandler);\n            //Draggable for first line Indent.\n            this.isDraggingIndents1 = false;\n            this.indentInitialValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.firstLineIndent.style.left); // for mouse up event\n            var indentsInitialValue2 = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.firstLineIndent.style.left); // for mouse move event\n            this.firstLineIndent.addEventListener('mouseenter', this.onDocumentIntentTrueChangeHandler);\n            this.firstLineIndent.addEventListener('mouseleave', this.onDocumentIntentFalseChangeHandler);\n            this.firstLineIndent.addEventListener('mousedown', this.onFirstLineIndentMouseDownHandler);\n            document.addEventListener('mousemove', this.onIndentMouseMoveHandler);\n            document.addEventListener('mouseup', this.onIndentMouseUpHandler);\n        }\n        //Rendering HangingIndent\n        this.hangingIndent = document.getElementById(documentEditor.element.id + '_hangingIndent');\n        if (!this.hangingIndent) {\n            var margin = ('left:' + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin) - 6) + 'px;');\n            var style = 'height:' + (rulerSize.height / 2) + 'px;top:' + (((rulerSize.height - 3) / 2) + 1) + 'px;overflow:hidden;width:12px;position:absolute;font-size:11px;text-align: left;z-index: 5;' + margin;\n            var attributes = {\n                'id': documentEditor.element.id + '_hangingIndent',\n                style: style,\n                'data-name': 'HangingIndent',\n                class: 'e-de-ruler-indent'\n            };\n            this.hangingIndent = this.createHtmlElement('div', attributes);\n            this.hangingIndent.setAttribute('title', locale.getConstant('Hanging Indent'));\n            // let hangingIndentSvg: SVGElement;\n            // Create an SVG element\n            var attr = {\n                'id': documentEditor.element.id + '_hangingIndent_svg',\n                width: rulerSize.width + 'px',\n                height: ((rulerSize.height - 3) / 2) + 'px',\n                style: 'position:inherit;left:0px'\n            };\n            this.hangingIndentSvg = this.createSvgElement('svg', attr);\n            this.hangingIndentSvg.setAttribute('fill', 'none');\n            var pathattr = {\n                style: 'position:inherit;left:0px'\n            };\n            // Create a path element inside the SVG\n            this.hangingIndentPath = this.createSvgElement('path', pathattr);\n            this.hangingIndentPath.setAttribute('class', 'e-de-ruler-indent-svg');\n            this.hangingIndentPath.setAttribute('d', 'M 0.5 5.3211 H 11.5 V 3.1083 L 6 0.4 L 0.5 3.1083 V 5.3211 Z');\n            this.hangingIndentPath.setAttribute('fill', 'white');\n            this.hangingIndentPath.setAttribute('stroke', '#A1A1A1');\n            // Append the path element to the SVG element\n            this.hangingIndentSvg.appendChild(this.hangingIndentPath);\n            this.hangingIndent.appendChild(this.hangingIndentSvg);\n            this.hRuler.append(this.hangingIndent);\n            this.hangingIndent.addEventListener('dblclick', this.onDoubleClickHandler);\n            this.hangingIndentInitialValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.hangingIndent.style.left); // for mouse up event\n            var initialValue2 = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.hangingIndent.style.left); // for mouse move event\n            this.hangingIndent.addEventListener('mouseenter', this.onDocumentIntentTrueChangeHandler);\n            this.hangingIndent.addEventListener('mouseleave', this.onDocumentIntentFalseChangeHandler);\n            this.hangingIndent.addEventListener('mousedown', this.onHangIndentMouseDownHandler);\n            document.addEventListener('mousemove', this.onHangIndentMouseMoveHandler);\n            document.addEventListener('mouseup', this.onHangIndentMouseUpHandler);\n        }\n        //Rendering LeftIndent\n        this.leftIndent = document.getElementById(documentEditor.element.id + '_leftIndent');\n        if (!this.leftIndent) {\n            var margin = ('left:' + (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin) - 6) + 'px;');\n            var style = 'height:4px;top:11px;overflow:hidden;width:12px;position:absolute;font-size:11px;text-align: left;z-index: 5;' + margin;\n            var attributes = {\n                'id': documentEditor.element.id + '_leftIndent',\n                style: style,\n                class: 'e-de-ruler-indent'\n            };\n            this.leftIndent = this.createHtmlElement('div', attributes);\n            this.leftIndent.setAttribute('title', locale.getConstant('Left Indent'));\n            // let leftIndentSvg: SVGElement;\n            // Create an SVG element\n            var attr = {\n                'id': documentEditor.element.id + '_leftIndent_svg',\n                width: rulerSize.width + 'px',\n                height: '4px',\n                style: 'position:inherit;left:0px'\n            };\n            this.leftIndentSvg = this.createSvgElement('svg', attr);\n            this.leftIndentSvg.setAttribute('fill', 'none');\n            var pathattr = {\n                style: 'position:inherit;left:0px'\n            };\n            // Create a path element inside the SVG\n            this.leftIndentPath = this.createSvgElement('path', pathattr);\n            this.leftIndentPath.setAttribute('class', 'e-de-ruler-indent-svg');\n            this.leftIndentPath.setAttribute('d', 'M 0.5 3.5 H 11.5 V 0.5 H 0.5 V 3.5 Z');\n            this.leftIndentPath.setAttribute('fill', 'white');\n            this.leftIndentPath.setAttribute('stroke', '#A1A1A1');\n            // Append the path element to the SVG element\n            this.leftIndentSvg.appendChild(this.leftIndentPath);\n            this.leftIndent.appendChild(this.leftIndentSvg);\n            this.hRuler.append(this.leftIndent);\n            this.leftIndent.addEventListener('dblclick', this.onDoubleClickHandler);\n            this.indentInitialValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.leftIndent.style.left); // for mouse down event\n            var initialValue2 = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.leftIndent.style.left); // for mouse move event\n            this.leftIndent.addEventListener('mouseenter', this.onDocumentIntentTrueChangeHandler);\n            this.leftIndent.addEventListener('mouseleave', this.onDocumentIntentFalseChangeHandler);\n            this.leftIndent.addEventListener('mousedown', this.onLeftIndentMouseDownHandler);\n            document.addEventListener('mousemove', this.onLeftIndentMouseMoveHandler);\n            document.addEventListener('mouseup', this.onLeftIndentMouseUpHandler);\n        }\n        //Rendering RightIndent\n        this.rightIndent = document.getElementById(documentEditor.element.id + '_rightIndent');\n        if (!this.rightIndent) {\n            var margin = ('left:' + (documentEditor.selectionModule.end.paragraph.bodyWidget.page.boundingRectangle.width - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.rightMargin) - 6) + 'px;');\n            var style = 'height:7px;top:8px;overflow:hidden;width:12px;position:absolute;font-size:11px;text-align: left;z-index: 4;' + margin;\n            var attributes = {\n                'id': documentEditor.element.id + '_rightIndent',\n                style: style,\n                class: 'e-de-ruler-indent'\n            };\n            this.rightIndent = this.createHtmlElement('div', attributes);\n            this.rightIndent.setAttribute('title', locale.getConstant('Right Indent'));\n            // let rightIndentSvg: SVGElement;\n            // Create an SVG element\n            var attr = {\n                'id': documentEditor.element.id + '_rightIndent_svg',\n                width: rulerSize.width + 'px',\n                height: '7px',\n                style: 'position:inherit;left:0px'\n            };\n            this.rightIndentSvg = this.createSvgElement('svg', attr);\n            this.rightIndentSvg.setAttribute('fill', 'none');\n            var pathattr = {\n                style: 'position:inherit;left:0px'\n            };\n            // Create a path element inside the SVG\n            this.rightIndentPath = this.createSvgElement('path', pathattr);\n            this.rightIndentPath.setAttribute('class', 'e-de-ruler-indent-svg');\n            this.rightIndentPath.setAttribute('d', 'M 0.5 6.5 H 11.5 V 4.2872 L 6 1.5789 L 0.5 4.2872 V 6.5 Z');\n            this.rightIndentPath.setAttribute('fill', 'white');\n            this.rightIndentPath.setAttribute('stroke', '#A1A1A1');\n            // Append the path element to the SVG element\n            this.rightIndentSvg.appendChild(this.rightIndentPath);\n            this.rightIndent.appendChild(this.rightIndentSvg);\n            this.hRuler.append(this.rightIndent);\n            this.rightIndent.addEventListener('dblclick', this.onDoubleClickHandler);\n            //Draggable for left line Indent.\n            this.indentInitialValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.rightIndent.style.left); // for mouse down event\n            var initialValue2 = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.rightIndent.style.left); // for mouse move event\n            this.rightIndent.addEventListener('mouseenter', this.onDocumentIntentTrueChangeHandler);\n            this.rightIndent.addEventListener('mouseleave', this.onDocumentIntentFalseChangeHandler);\n            this.rightIndent.addEventListener('mousedown', this.onRightIndentMouseDownHandler);\n            document.addEventListener('mousemove', this.onRightIndentMouseMoveHandler);\n            document.addEventListener('mouseup', this.onRightIndentMouseUpHandler);\n        }\n        this.updateIndentMarkers(documentEditor);\n    };\n    /**\n     * updateRuler method\n     *\n     * @returns {void} updateRuler method.\n     * @param {DocumentEditor} documentEditor - provide the documentEditor  value.\n     * @param {boolean} rerenderRuler - provide the rerenderRuler  value.\n     * @private\n     */\n    RulerHelper.prototype.updateRuler = function (documentEditor, rerenderRuler) {\n        /* eslint-disable-next-line max-len */\n        if (documentEditor.isDestroyed || documentEditor.rulerHelper && documentEditor.documentEditorSettings && !documentEditor.documentEditorSettings.showRuler ||\n            documentEditor.isReadOnlyMode) {\n            return;\n        }\n        // const hOffset: number = - documentEditor.scroller.horizontalOffset;\n        // const vOffset: number = - documentEditor.scroller.verticalOffset;\n        var hOffset = 0;\n        // const vOffset: number = - documentEditor.scroller.verticalOffset;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(documentEditor.hRuler) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(documentEditor.vRuler)) {\n            return;\n        }\n        if (documentEditor.selectionModule.isForward) {\n            this.position = documentEditor.selectionModule.start;\n        }\n        else {\n            this.position = documentEditor.selectionModule.end;\n        }\n        this.updateRulerDimension(documentEditor, documentEditor.hRuler, hOffset, rerenderRuler);\n        this.updateRulerDimension(documentEditor, documentEditor.vRuler, hOffset, rerenderRuler);\n        this.updateRulerMargins(documentEditor);\n        this.updateIndentMarkers(documentEditor);\n        this.updateTabStopMarkers(documentEditor);\n        if (this.position.paragraph.isInsideTable) {\n            this.updateTableMarkers(documentEditor, documentEditor.hRuler);\n        }\n        else {\n            this.removeTableMarkers(documentEditor, documentEditor.hRuler);\n        }\n        this.updateIndicatorLines(documentEditor);\n    };\n    RulerHelper.prototype.removeTableMarkers = function (documentEditor, ruler) {\n        var renderedTableMarkers = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertNodeListToArray(document.querySelectorAll('.e-de-ruler-table-marker'));\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(renderedTableMarkers)) {\n            for (var i = 0; i < renderedTableMarkers.length; i++) {\n                var elementToRemove = renderedTableMarkers[parseInt(i.toString(), 10)];\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(elementToRemove)) {\n                    elementToRemove.parentNode.removeChild(elementToRemove);\n                }\n            }\n        }\n    };\n    RulerHelper.prototype.updateTableMarkers = function (documentEditor, ruler) {\n        var renderedTableMarkers = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertNodeListToArray(document.querySelectorAll('.e-de-ruler-table-marker'));\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(renderedTableMarkers)) {\n            // const tablewidget: TableWidget =\n            // ((documentEditor.selection.end.paragraph.containerWidget as TableCellWidget).ownerTable as TableWidget);\n            // const tableColumns = ((documentEditor.selection.end.paragraph.containerWidget as TableCellWidget).ownerTable\n            //  as TableWidget).tableHolder.columns.length;\n            // const tableXPos: number = undefined;\n            // this.hRuler = document.getElementById(documentEditor.element.id + '_hRuler');\n            this.renderTableMarkers(documentEditor, ruler);\n        }\n        else if (this.position.paragraph.isInsideTable) {\n            this.renderTableMarkers(documentEditor, ruler);\n        }\n    };\n    RulerHelper.prototype.renderTableMarkers = function (documentEditor, ruler) {\n        var _this = this;\n        this.removeTableMarkers(documentEditor, documentEditor.hRuler);\n        var intialPosition;\n        var tablewidget = this.position.paragraph.containerWidget.ownerTable;\n        var tableRowWidget = this.position.paragraph.associatedCell.ownerRow.clone();\n        var cellWidgets = tableRowWidget.childWidgets;\n        var value = this.position.paragraph.associatedCell.ownerTable.tableFormat.bidi ? cellWidgets.length : 0;\n        if (this.position.paragraph.associatedCell.ownerTable.tableFormat.bidi) {\n            cellWidgets.reverse();\n        }\n        var tableXPos;\n        this.hRuler = document.getElementById(documentEditor.element.id + '_hRuler');\n        var _loop_1 = function (i) {\n            var tableMarker = document.getElementById(documentEditor.element.id + '_tableMarker_' + value);\n            //if (!tableMarker) {\n            var margin = void 0;\n            if (i === 0) {\n                tableXPos = (cellWidgets[parseInt(i.toString(), 10)].x\n                    - cellWidgets[parseInt(i.toString(), 10)].margin.left)\n                    * documentEditor.zoomFactor + this_1.hRuler.scrollLeft;\n                margin = ('left:' + (tableXPos - 4) + 'px;');\n            }\n            else {\n                tableXPos = tableXPos + ((cellWidgets[i - 1].width\n                    + cellWidgets[i - 1].margin.left\n                    + cellWidgets[i - 1].margin.right) * documentEditor.zoomFactor);\n                margin = 'left:' + (tableXPos - 4) + 'px;';\n            }\n            var style = 'height:' + (ruler.thickness) + 'px;overflow:hidden;width:10px;position:absolute;font-size:11px;text-align: left;z-index: 4;' + margin;\n            var attributes = {\n                'id': documentEditor.element.id + '_tableMarker_' + value,\n                'class': 'e-de-ruler-table-marker',\n                style: style\n            };\n            tableMarker = this_1.createHtmlElement('div', attributes);\n            var locale = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('documenteditor', documentEditor.defaultLocale);\n            tableMarker.setAttribute('title', locale.getConstant('Move Table Column'));\n            // Create an SVG element\n            var attr = {\n                'id': documentEditor.element.id + '_tableMarker_svg' + i,\n                width: 9 + 'px',\n                height: 11 + 'px',\n                style: 'position:inherit;left:0px;top:3px;'\n            };\n            var svg = this_1.createSvgElement('svg', attr);\n            svg.setAttribute('fill', 'none');\n            var pathattr = {\n                style: 'position:inherit;left:0px;'\n            };\n            // Create a path element inside the SVG\n            var pathElement = this_1.createSvgElement('path', pathattr);\n            pathElement.setAttribute('class', 'e-de-ruler-table-svg');\n            pathElement.setAttribute('d', 'M1 1V0H2V1H3V0H4V1H5V0H6V1H7V2H6V3H7V4H6V5H7V6H6V7H7V8H0V7H1V6H0V5H1V4H0V3H1V2H0V1H1ZM2 2V3H3V2H2ZM4 2V3H5V2H4ZM5 4H4V5H5V4ZM5 6H4V7H5V6ZM3 7V6H2V7H3ZM2 5H3V4H2V5Z');\n            pathElement.setAttribute('fill', '#A1A1A1');\n            // Append the path element to the SVG element\n            svg.appendChild(pathElement);\n            tableMarker.appendChild(svg);\n            this_1.hRuler.append(tableMarker);\n            // }\n            if (this_1.position.paragraph.associatedCell.ownerTable.tableFormat.bidi) {\n                value--;\n            }\n            else {\n                value++;\n            }\n            tableMarker.addEventListener('dblclick', function (event) {\n                documentEditor.showDialog('TableProperties');\n                event.stopPropagation();\n            });\n            var tableMarkerOffset;\n            tableMarker.addEventListener('mousedown', function (e) {\n                tableMarkerOffset = e.clientX - tableMarker.getBoundingClientRect().left;\n                documentEditor.startXPosition = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(e.clientX);\n                documentEditor.isTableMarkerDragging = true;\n                var cursorPoint = new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.Point(e.clientX, e.clientY);\n                var touchPoint = documentEditor.viewer.findFocusedPage(cursorPoint, true, true);\n                var currentMarkerPostion;\n                if (e.currentTarget instanceof HTMLElement) {\n                    var parts = e.currentTarget.id.split('_');\n                    var value_1 = parts[parts.length - 1];\n                    currentMarkerPostion = parseInt(value_1, 10);\n                }\n                var tableWidget = documentEditor.selectionModule.end.paragraph.containerWidget.ownerTable;\n                documentEditor.editorModule.tableResize.currentResizingTable = tableWidget;\n                documentEditor.editorModule.tableResize.resizeNode = 0;\n                documentEditor.editorModule.tableResize.resizerPosition = currentMarkerPostion;\n                documentEditor.editorModule.tableResize.startingPoint.x = touchPoint.x;\n                documentEditor.editorModule.tableResize.startingPoint.y = touchPoint.y;\n                documentEditor.editorHistoryModule.initResizingHistory(touchPoint, documentEditor.editorModule.tableResize);\n                var rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - documentEditor.selectionModule.sectionFormat.leftMargin) * documentEditor.zoomFactor;\n                var value = rulerZeroPoint + e.clientX - tableMarkerOffset - _this.hRuler.getBoundingClientRect().left;\n                var startValue = documentEditor.documentHelper.currentPage.boundingRectangle.x;\n                var indicatorLineValue = startValue + (value - rulerZeroPoint) + 6;\n                var lineSvg = document.getElementById(documentEditor.element.id + '_hRuler_indicator_svg');\n                lineSvg.style.left = (indicatorLineValue - 6) + 'px';\n                lineSvg.style.display = 'block';\n            });\n            document.addEventListener('mousemove', function (e) {\n                if (documentEditor.isDestroyed || !documentEditor.documentEditorSettings.showRuler) {\n                    return;\n                }\n                if (documentEditor.isTableMarkerDragging) {\n                    _this.hRuler = document.getElementById(documentEditor.element.id + '_hRuler');\n                    var rulerZeroPoint = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - documentEditor.selectionModule.sectionFormat.leftMargin) * documentEditor.zoomFactor;\n                    if (documentEditor.selectionModule.end.paragraph.associatedCell.ownerTable.tableFormat.bidi) {\n                        var rulerGeometry = _this.getRulerGeometry(documentEditor);\n                        var rulerMarginDivWidth = (rulerGeometry.width - (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel((documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.rightMargin * documentEditor.zoomFactor)\n                            + (documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin\n                                * documentEditor.zoomFactor))));\n                        rulerZeroPoint -= rulerMarginDivWidth;\n                    }\n                    var value_2 = rulerZeroPoint + e.clientX - tableMarkerOffset - _this.hRuler.getBoundingClientRect().left;\n                    tableMarker.style.left = value_2 + 'px';\n                    var startValue = documentEditor.documentHelper.currentPage.boundingRectangle.x;\n                    var indicatorLineValue = startValue + (value_2 - rulerZeroPoint) + 6;\n                    var lineSvg = document.getElementById(documentEditor.element.id + '_hRuler_indicator_svg');\n                    lineSvg.style.left = (indicatorLineValue - 6) + 'px';\n                }\n            });\n            document.addEventListener('mouseup', function (e) {\n                if (documentEditor.isDestroyed || !documentEditor.documentEditorSettings.showRuler) {\n                    return;\n                }\n                if (documentEditor.isTableMarkerDragging) {\n                    var cursorPoint = new _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.Point(e.clientX, e.clientY);\n                    var dragValue = _this.position.paragraph.associatedCell.ownerTable.tableFormat.bidi ?\n                        (documentEditor.startXPosition - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(e.clientX))\n                        : (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(e.clientX) - documentEditor.startXPosition);\n                    documentEditor.editorModule.tableResize.handleResizing(cursorPoint, true, (dragValue / documentEditor.zoomFactor));\n                    documentEditor.editorModule.tableResize.updateResizingHistory(documentEditor.viewer.findFocusedPage(cursorPoint, true, true));\n                    documentEditor.isTableMarkerDragging = false;\n                    var lineSvg = document.getElementById(documentEditor.element.id + '_hRuler_indicator_svg');\n                    lineSvg.style.display = 'none';\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i <= cellWidgets.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * updateRulerDimension method \\\n     *\n     * @returns {void} updateRulerDimension method .\\\n     * @param {DocumentEditor} documentEditor - provide the documentEditor  value.\n     * @param {Ruler} ruler - provide the content  value.\n     * @param {number} offset - provide the content  value.\n     * @param {boolean} rerenderRuler - provide the rerenderRuler  value.\n     * @private\n     */\n    RulerHelper.prototype.updateRulerDimension = function (documentEditor, ruler, offset, rerenderRuler) {\n        var isHorizontal = ruler.orientation === 'Horizontal' ? true : false;\n        var rulerSize = this.getRulerSize(documentEditor);\n        var rulerGeometry = this.getRulerGeometry(documentEditor);\n        //const documentEditorRuler: DocumentEditorRulerModel = isHorizontal ? documentEditor.documentEditorSettings.rulerSettings.horizontalRuler : documentEditor.documentEditorSettings.rulerSettings.verticalRuler;\n        this.updateRulerDiv(documentEditor, rulerGeometry, isHorizontal, ruler);\n        this.updateRulerSpace(documentEditor, rulerGeometry, isHorizontal, ruler);\n        this.updateMargin(ruler, documentEditor, isHorizontal);\n        // ruler.pageWidth = documentEditor.selection.end.paragraph.bodyWidget.page.boundingRectangle.width * documentEditor.zoomFactor;\n        // ruler.pageHeight = documentEditor.selection.end.paragraph.bodyWidget.page.boundingRectangle.height * documentEditor.zoomFactor;\n        ruler.length = documentEditor.zoomFactor < 1 ?\n            ((ruler.zeroPosition * 2) / documentEditor.zoomFactor)\n            : ((ruler.zeroPosition * 2) * documentEditor.zoomFactor);\n        var rulerObj = ruler.element;\n        if (isHorizontal) {\n            rulerObj.style.marginLeft = (documentEditor.layoutType === 'Pages' ? documentEditor.selectionModule.end.paragraph.bodyWidget.page.boundingRectangle.x : 0) + 'px';\n        }\n        else {\n            rulerObj.parentElement.style.display = documentEditor.layoutType === 'Pages' ? 'block' : 'none';\n            rulerObj.style.marginTop = documentEditor.selectionModule.getPageTop(documentEditor.selectionModule.end.paragraph.bodyWidget.page) + 'px';\n        }\n        if (rerenderRuler) {\n            ruler.offset = offset;\n            ruler.scale = documentEditor.zoomFactor;\n            // if (documentEditor.layoutType === 'Pages') {\n            ruler.length = documentEditor.zoomFactor < 1 ?\n                ((ruler.zeroPosition * 2) / documentEditor.zoomFactor)\n                : ((ruler.zeroPosition * 2) * documentEditor.zoomFactor);\n            // } else if (documentEditor.layoutType === 'Continuous') {\n            //     ruler.length = (ruler.zeroPosition * 2) / documentEditor.zoomFactor;\n            // }\n            ruler.updateRuler();\n        }\n        if (isHorizontal) {\n            if (documentEditor.layoutType === 'Pages') {\n                var paraBidi = this.position.paragraph.paragraphFormat.bidi;\n                var tableBidi = false;\n                if (this.position.paragraph.isInsideTable) {\n                    tableBidi = this.position.paragraph.associatedCell.ownerTable.tableFormat.bidi;\n                }\n                if (paraBidi || tableBidi) {\n                    var rulerMarginDivWidth = (rulerGeometry.width - (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel((documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.rightMargin * documentEditor.zoomFactor))));\n                    rulerObj.scrollLeft = (documentEditor.hRuler.zeroPosition * documentEditor.zoomFactor) - rulerMarginDivWidth;\n                }\n                else {\n                    rulerObj.scrollLeft = (ruler.zeroPosition - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin)) * documentEditor.zoomFactor;\n                }\n            }\n            else {\n                var paraBidi = this.position.paragraph.paragraphFormat.bidi;\n                var tableBidi = false;\n                if (this.position.paragraph.isInsideTable) {\n                    tableBidi = this.position.paragraph.associatedCell.ownerTable.tableFormat.bidi;\n                }\n                if (paraBidi || tableBidi) {\n                    // const rulerMarginDivWidth = (rulerGeometry.width - 40);\n                    rulerObj.scrollLeft = ((ruler.zeroPosition - documentEditor.viewer.clientActiveArea.width)\n                        * documentEditor.zoomFactor) - 20;\n                }\n                else {\n                    // 20 is set approximately to the web layout.\n                    rulerObj.scrollLeft = (ruler.zeroPosition * documentEditor.zoomFactor) - 20;\n                }\n            }\n        }\n        else {\n            rulerObj.scrollTop = (ruler.zeroPosition - _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.topMargin)) * documentEditor.zoomFactor;\n        }\n    };\n    /**\n     * updateRulerSpace method \\\n     *\n     * @returns {void} updateRulerDiv method .\\\n     * @param {DocumentEditor} documentEditor - provide the documentEditor  value.\n     * @param {Size} rulerGeometry - provide the content  value.\n     * @param {boolean} isHorizontal - provide the content  value.\n     * @param {Ruler} ruler - provide the ruler  value.\n     * @private\n     */\n    RulerHelper.prototype.updateRulerSpace = function (documentEditor, rulerGeometry, isHorizontal, ruler) {\n        this.rulerSpaceDiv = document.getElementById(documentEditor.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n        if (this.rulerSpaceDiv && documentEditor && rulerGeometry) {\n            this.rulerSpaceDiv.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n            this.rulerSpaceDiv.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n        }\n    };\n    /**\n     * updateRulerDiv method \\\n     *\n     * @returns {void} updateRulerDiv method .\\\n     * @param {DocumentEditor} documentEditor - provide the documentEditor  value.\n     * @param {Size} rulerGeometry - provide the content  value.\n     * @param {boolean} isHorizontal - provide the content  value.\n     * @param {Ruler} ruler - provide the ruler  value.\n     * @private\n     */\n    RulerHelper.prototype.updateRulerDiv = function (documentEditor, rulerGeometry, isHorizontal, ruler) {\n        // parent div\n        this.parentRulerDiv = document.getElementById(documentEditor.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n        if (this.parentRulerDiv && documentEditor && rulerGeometry) {\n            this.parentRulerDiv.style.width = (isHorizontal ? documentEditor.layoutType === 'Continuous' ? rulerGeometry.width / documentEditor.zoomFactor : rulerGeometry.width : ruler.thickness) + 'px';\n            this.parentRulerDiv.style.height = (isHorizontal ? ruler.thickness : rulerGeometry.height) + 'px';\n            this.parentRulerDiv = document.getElementById(documentEditor.element.id + '_overlapRuler');\n            if (this.parentRulerDiv) {\n                // eslint-disable-next-line\n                isHorizontal ? (this.parentRulerDiv.style.height === ruler.thickness + 'px') : (this.parentRulerDiv.style.width === ruler.thickness + 'px');\n            }\n        }\n        if (isHorizontal) {\n            if (this.hRulerBottom) {\n                var pageElement = document.getElementById(documentEditor.element.id + '_pageContainer');\n                this.hRulerBottom.style.width = pageElement.getBoundingClientRect().width + 'px';\n            }\n        }\n        // let vRulerDiv: HTMLElement = document.getElementById(documentEditor.element.id + '_vRuler');\n        // if (vRulerDiv) {\n        //     vRulerDiv.style.width = ruler.thickness + 'px';\n        //     vRulerDiv.style.height =  rulerGeometry.height + 'px';\n        // }\n    };\n    /**\n     * getRulerGeometry method \\\n     *\n     * @returns {void} getRulerGeometry method .\\\n     * @param { DocumentEditor} documentEditor - provide the documentEditor  value.\n     * @private\n     */\n    RulerHelper.prototype.getRulerGeometry = function (documentEditor) {\n        var rulerSize = this.getRulerSize(documentEditor);\n        var height = (documentEditor.selectionModule.end.paragraph.bodyWidget.page.boundingRectangle.height\n            * documentEditor.zoomFactor);\n        var width = (documentEditor.selectionModule.end.paragraph.bodyWidget.page.boundingRectangle.width\n            * documentEditor.zoomFactor);\n        return new _size__WEBPACK_IMPORTED_MODULE_4__.Size(width, height);\n    };\n    RulerHelper.prototype.getVerticalHeight = function (documentEditor) {\n        var pageheight = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPixelToPoint(documentEditor.selectionModule.end.paragraph.bodyWidget.page.boundingRectangle.height);\n        var containerHeight = documentEditor.element.getBoundingClientRect().height;\n        if (pageheight < containerHeight) {\n            return pageheight;\n        }\n        else {\n            return containerHeight - documentEditor.documentHelper.pages[0].boundingRectangle.y;\n        }\n    };\n    RulerHelper.prototype.renderTab = function (documentEditor, rulerSize, tabStop, tabJustification, i, locale) {\n        this.hRuler = document.getElementById(documentEditor.element.id + '_hRuler');\n        var zoomFactor = documentEditor.documentHelper.zoomFactor;\n        var value;\n        switch (tabJustification) {\n            case 'Left': {\n                this.leftTab = document.getElementById(documentEditor.element.id + '_LeftTab' + '_' + i);\n                if (!this.leftTab) {\n                    var style = '';\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tabStop)) {\n                        value = this.position.paragraph.paragraphFormat.bidi ?\n                            (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - tabStop.position))\n                            : (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 + tabStop.position));\n                        var margin = ('left:' + ((value - 1.5) * zoomFactor) + 'px;');\n                        style = 'height:9px;overflow:hidden;top:7px;width:12px;position:absolute;font-size:11px;text-align: left;z-index: 4;' + margin;\n                    }\n                    var attributes = {\n                        'id': documentEditor.element.id + '_LeftTab' + '_' + i,\n                        'class': 'e-de-ruler-tab e-de-ruler-tab-left',\n                        style: style,\n                        'data-name': 'LeftTab'\n                    };\n                    this.leftTab = this.createHtmlElement('div', attributes);\n                    this.leftTab.setAttribute('title', locale.getConstant('Left Tab'));\n                    // let svg: SVGElement;\n                    // Create an SVG element\n                    var attr = {\n                        'id': documentEditor.element.id + '_leftTab_svg',\n                        width: rulerSize.width / 2 + 'px',\n                        height: rulerSize.height / 2 + 'px',\n                        style: 'position:inherit;left:0px'\n                    };\n                    var svg = this.createSvgElement('svg', attr);\n                    svg.setAttribute('fill', 'none');\n                    var pathattr = {\n                        style: 'position:inherit;left:0px'\n                    };\n                    // Create a path element inside the SVG\n                    var pathElement = this.createSvgElement('path', pathattr);\n                    pathElement.setAttribute('class', 'e-de-ruler-tab-svg');\n                    pathElement.setAttribute('d', 'M3 5H7V7H1V1H3V5Z');\n                    pathElement.setAttribute('fill', '#605E5C');\n                    pathElement.setAttribute('stroke', '#A1A1A1');\n                    // Append the path element to the SVG element\n                    svg.appendChild(pathElement);\n                    this.leftTab.appendChild(svg);\n                    this.hRuler.append(this.leftTab);\n                }\n                break;\n            }\n            case 'Center': {\n                this.centerTab = document.getElementById(documentEditor.element.id + '_CenterTab' + '_' + i);\n                if (!this.centerTab) {\n                    var style = '';\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tabStop)) {\n                        value = this.position.paragraph.paragraphFormat.bidi ?\n                            (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - tabStop.position))\n                            : (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 + tabStop.position));\n                        var margin = ('left:' + ((value - 4) * zoomFactor) + 'px;');\n                        style = 'height:9px;overflow:hidden;top:7px;width:12px;position:absolute;font-size:11px;text-align: left;z-index: 4;' + margin;\n                    }\n                    var attributes = {\n                        'id': documentEditor.element.id + '_CenterTab' + '_' + i,\n                        'class': 'e-de-ruler-tab e-de-ruler-tab-center',\n                        style: style,\n                        'data-name': 'CenterTab'\n                    };\n                    this.centerTab = this.createHtmlElement('div', attributes);\n                    this.centerTab.setAttribute('title', locale.getConstant('Center Tab'));\n                    // let svg: SVGElement;\n                    // Create an SVG element\n                    var attr = {\n                        'id': documentEditor.element.id + '_centerTab_svg',\n                        width: rulerSize.width / 2 + 'px',\n                        height: rulerSize.height / 2 + 'px',\n                        style: 'position:inherit;left:0px'\n                    };\n                    var svg = this.createSvgElement('svg', attr);\n                    svg.setAttribute('fill', 'none');\n                    var pathattr = {\n                        style: 'position:inherit;left:0px'\n                    };\n                    // Create a path element inside the SVG\n                    var pathElement = this.createSvgElement('path', pathattr);\n                    pathElement.setAttribute('class', 'e-de-ruler-tab-svg');\n                    pathElement.setAttribute('d', 'M5 5H8V7H0V5H3V1H5V5Z');\n                    pathElement.setAttribute('fill', '#605E5C');\n                    pathElement.setAttribute('stroke', '#A1A1A1');\n                    // Append the path element to the SVG element\n                    svg.appendChild(pathElement);\n                    this.centerTab.appendChild(svg);\n                    this.hRuler.append(this.centerTab);\n                }\n                break;\n            }\n            case 'Right': {\n                this.rightTab = document.getElementById(documentEditor.element.id + '_RightTab' + '_' + i);\n                if (!this.rightTab) {\n                    var style = '';\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tabStop)) {\n                        value = this.position.paragraph.paragraphFormat.bidi ?\n                            (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - tabStop.position))\n                            : (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 + tabStop.position));\n                        var margin = ('left:' + ((value - 5.5) * zoomFactor) + 'px;');\n                        style = 'height:9px;overflow:hidden;top:7px;width:12px;position:absolute;font-size:11px;text-align: left;z-index: 4;' + margin;\n                    }\n                    var attributes = {\n                        'id': documentEditor.element.id + '_RightTab' + '_' + i,\n                        'class': 'e-de-ruler-tab e-de-ruler-tab-right',\n                        style: style,\n                        'data-name': 'RightTab'\n                    };\n                    this.rightTab = this.createHtmlElement('div', attributes);\n                    this.rightTab.setAttribute('title', locale.getConstant('Right Tab'));\n                    // let svg: SVGElement;\n                    // Create an SVG element\n                    var attr = {\n                        'id': documentEditor.element.id + '_rightTab_svg',\n                        width: rulerSize.width / 2 + 'px',\n                        height: rulerSize.height / 2 + 'px',\n                        style: 'position:inherit;left:0px'\n                    };\n                    var svg = this.createSvgElement('svg', attr);\n                    svg.setAttribute('fill', 'none');\n                    var pathattr = {\n                        style: 'position:inherit;left:0px'\n                    };\n                    // Create a path element inside the SVG\n                    var pathElement = this.createSvgElement('path', pathattr);\n                    pathElement.setAttribute('class', 'e-de-ruler-tab-svg');\n                    pathElement.setAttribute('d', 'M5 5V1H7V7H1V5H5Z');\n                    pathElement.setAttribute('fill', '#605E5C');\n                    pathElement.setAttribute('stroke', '#A1A1A1');\n                    // Append the path element to the SVG element\n                    svg.appendChild(pathElement);\n                    this.rightTab.appendChild(svg);\n                    this.hRuler.append(this.rightTab);\n                }\n                break;\n            }\n            case 'Decimal': {\n                this.decimalTab = document.getElementById(documentEditor.element.id + '_DecimalTab' + '_' + i);\n                if (!this.decimalTab) {\n                    var style = '';\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tabStop)) {\n                        value = this.position.paragraph.paragraphFormat.bidi ?\n                            (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - tabStop.position))\n                            : (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 + tabStop.position));\n                        var margin = ('left:' + ((value * zoomFactor) - 4) + 'px;');\n                        style = 'height:9px;overflow:hidden;top:7px;width:12px;position:absolute;font-size:11px;text-align: left;z-index: 4;' + margin;\n                    }\n                    var attributes = {\n                        'id': documentEditor.element.id + '_DecimalTab' + '_' + i,\n                        'class': 'e-de-ruler-tab e-de-ruler-tab-decimal',\n                        style: style,\n                        'data-name': 'DecimalTab'\n                    };\n                    this.decimalTab = this.createHtmlElement('div', attributes);\n                    this.decimalTab.setAttribute('title', locale.getConstant('Decimal Tab'));\n                    // const svg: SVGElement;\n                    // Create an SVG element\n                    var attr = {\n                        'id': documentEditor.element.id + '_decimalTab_svg',\n                        width: rulerSize.width / 2 + 'px',\n                        height: rulerSize.height / 2 + 'px',\n                        style: 'position:inherit;left:0px'\n                    };\n                    var svg = this.createSvgElement('svg', attr);\n                    svg.setAttribute('fill', 'none');\n                    var pathattr = {\n                        style: 'position:inherit;left:0px'\n                    };\n                    // Create a path element inside the SVG\n                    var pathElement = this.createSvgElement('path', pathattr);\n                    pathElement.setAttribute('class', 'e-de-ruler-tab-svg');\n                    pathElement.setAttribute('d', 'M6 0H4V6H0V8H4H6H10V6H6V0Z');\n                    pathElement.setAttribute('fill', '#605E5C');\n                    pathElement.setAttribute('clip-rule', 'evenodd');\n                    pathElement.setAttribute('fill-rule', 'evenodd');\n                    pathElement.setAttribute('stroke', '#A1A1A1');\n                    // Append the path element to the SVG element\n                    svg.appendChild(pathElement);\n                    this.decimalTab.appendChild(svg);\n                    this.hRuler.append(this.decimalTab);\n                }\n                break;\n            }\n            case 'Bar': {\n                this.barTab = document.getElementById(documentEditor.element.id + '_BarTab' + '_' + i);\n                if (!this.barTab) {\n                    var style = '';\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tabStop)) {\n                        value = this.position.paragraph.paragraphFormat.bidi ?\n                            (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 - tabStop.position))\n                            : (_editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.convertPointToPixel(1584 + tabStop.position));\n                        var margin = ('left:' + ((value - 1.5) * zoomFactor) + 'px;');\n                        style = 'height:9px;overflow:hidden;top:7px;width:12px;position:absolute;font-size:11px;text-align: left;z-index: 4;' + margin;\n                    }\n                    var attributes = {\n                        'id': documentEditor.element.id + '_BarTab' + '_' + i,\n                        'class': 'e-de-ruler-tab e-de-ruler-tab-bar',\n                        style: style,\n                        'data-name': 'BarTab'\n                    };\n                    this.barTab = this.createHtmlElement('div', attributes);\n                    this.barTab.setAttribute('title', locale.getConstant('Bar Tab'));\n                    // const svg: SVGElement;\n                    // Create an SVG element\n                    var attr = {\n                        'id': documentEditor.element.id + '_barTab_svg',\n                        width: rulerSize.width / 2 + 'px',\n                        height: rulerSize.height / 2 + 'px',\n                        style: 'position:inherit;left:0px'\n                    };\n                    var svg = this.createSvgElement('svg', attr);\n                    svg.setAttribute('fill', 'none');\n                    var rectAttr = {\n                        style: 'position:inherit;left:0px'\n                    };\n                    var rect = this.createSvgElement('rect', rectAttr);\n                    rect.setAttribute('width', '2');\n                    rect.setAttribute('height', '8');\n                    rect.setAttribute('fill', '#605E5C');\n                    rect.setAttribute('stroke', '#A1A1A1');\n                    // Append the path element to the SVG element\n                    svg.appendChild(rect);\n                    this.barTab.appendChild(svg);\n                    this.hRuler.append(this.barTab);\n                }\n                break;\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tabStop)) {\n            this.tabStopElement = document.getElementById(documentEditor.element.id + '_' + tabJustification + 'Tab' + '_' + i);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tabStop)) {\n                this.tabStopElement.addEventListener('dblclick', this.onTabStopDblClickHandler);\n            }\n            this.tabInitialValue = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.tabStopElement.style.left); // for mouse up event\n            var initialValue2 = _editor_editor_helper__WEBPACK_IMPORTED_MODULE_2__.HelperMethods.getNumberFromString(this.tabStopElement.style.left); // for mouse move event\n            this.justification = this.tabStopElement.getAttribute('data-name');\n            this.currrentParagraph = this.position.paragraph;\n            this.tabStopElement.addEventListener('mousedown', this.onTabStopMouseDownHandler);\n            this.tabStopElement.addEventListener('mouseup', this.onTabStopMouseUpHandler);\n            document.addEventListener('mousemove', this.onTabStopMouseMoveHandler);\n            document.addEventListener('mouseup', this.onRenderTabStopMouseUpHandler);\n        }\n    };\n    RulerHelper.prototype.updateMargin = function (ruler, documentEditor, isHorizontal) {\n        if (isHorizontal) {\n            ruler.startMargin = documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.leftMargin;\n            ruler.endMargin = documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.rightMargin;\n        }\n        else {\n            ruler.startMargin = documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.topMargin;\n            ruler.endMargin = documentEditor.selectionModule.end.paragraph.bodyWidget.sectionFormat.bottomMargin;\n        }\n    };\n    RulerHelper.prototype.getTabJustification = function (dataNameValue) {\n        switch (dataNameValue) {\n            case 'LeftTab':\n                return 'Left';\n            case 'CenterTab':\n                return 'Center';\n            case 'RightTab':\n                return 'Right';\n            case 'DecimalTab':\n                return 'Decimal';\n            case 'BarTab':\n                return 'Bar';\n        }\n        return 'Left';\n    };\n    /**\n     * getRulerSize method \\\n     *\n     * @returns {void} getRulerSize method .\\\n     * @param { DocumentEditor} documentEditor - provide the documentEditor  value.\n     * @private\n     */\n    RulerHelper.prototype.getRulerSize = function (documentEditor) {\n        var top = 0;\n        var left = 0;\n        //if (diagram.rulerSettings.showRulers) {\n        // top = documentEditor.documentEditorSettings.rulerSettings.horizontalRuler.thickness;\n        // left = documentEditor.documentEditorSettings.rulerSettings.verticalRuler.thickness;\n        top = 15;\n        left = 15;\n        //}\n        return new _size__WEBPACK_IMPORTED_MODULE_4__.Size(left, top);\n    };\n    RulerHelper.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeHTMLElements();\n        this.removeSvgElements();\n    };\n    RulerHelper.prototype.removeHTMLElements = function () {\n        var _this = this;\n        if (this.tabStopStwitch) {\n            this.tabStopStwitch.remove();\n            this.tabStopStwitch = null;\n        }\n        if (this.hRulerBottom) {\n            this.hRulerBottom.remove();\n            this.hRulerBottom = null;\n        }\n        if (this.vRulerBottom) {\n            this.vRulerBottom.remove();\n            this.vRulerBottom = null;\n        }\n        if (this.overlap) {\n            this.overlap.remove();\n            this.overlap = null;\n        }\n        if (this.markIndicator) {\n            this.markIndicator.remove();\n            this.markIndicator = null;\n        }\n        if (this.rulerDiv) {\n            this.rulerDiv.remove();\n            this.rulerDiv = null;\n        }\n        if (this.rulerOverlap) {\n            this.rulerOverlap.remove();\n            this.rulerOverlap = null;\n        }\n        if (this.rulerMarginDiv) {\n            this.rulerMarginDiv.remove();\n            this.rulerMarginDiv = null;\n        }\n        if (this.verticalRulerMarginDiv) {\n            this.verticalRulerMarginDiv.remove();\n            this.verticalRulerMarginDiv = null;\n        }\n        if (this.firstLineIndent) {\n            this.firstLineIndent.remove();\n            this.firstLineIndent = null;\n        }\n        if (this.hangingIndent) {\n            this.hangingIndent.remove();\n            this.hangingIndent = null;\n        }\n        if (this.leftIndent) {\n            this.leftIndent.remove();\n            this.leftIndent = null;\n        }\n        if (this.rightIndent) {\n            this.rightIndent.remove();\n            this.rightIndent = null;\n        }\n        if (this.parentRulerDiv) {\n            this.parentRulerDiv.remove();\n            this.parentRulerDiv = null;\n        }\n        if (this.rulerSpaceDiv) {\n            this.rulerSpaceDiv.remove();\n            this.rulerSpaceDiv = null;\n        }\n        if (this.firstLineIndentRuler) {\n            this.firstLineIndentRuler.remove();\n            this.firstLineIndentRuler = null;\n        }\n        if (this.hangingIndentRuler) {\n            this.hangingIndentRuler.remove();\n            this.hangingIndentRuler = null;\n        }\n        if (this.leftTab) {\n            this.leftTab.childNodes.forEach(function (element) {\n                _this.leftTab.removeChild(element);\n                element = null;\n            });\n            this.leftTab.innerHTML = '';\n            this.leftTab.remove();\n            this.leftTab = null;\n        }\n        if (this.rightTab) {\n            this.rightTab.childNodes.forEach(function (element) {\n                _this.rightTab.removeChild(element);\n                element = null;\n            });\n            this.rightTab.innerHTML = '';\n            this.rightTab.remove();\n            this.rightTab = null;\n        }\n        if (this.centerTab) {\n            this.centerTab.childNodes.forEach(function (element) {\n                _this.centerTab.removeChild(element);\n                element = null;\n            });\n            this.centerTab.innerHTML = '';\n            this.centerTab.remove();\n            this.centerTab = null;\n        }\n        if (this.decimalTab) {\n            this.decimalTab.childNodes.forEach(function (element) {\n                _this.decimalTab.removeChild(element);\n                element = null;\n            });\n            this.decimalTab.innerHTML = '';\n            this.decimalTab.remove();\n            this.decimalTab = null;\n        }\n        if (this.barTab) {\n            this.barTab.childNodes.forEach(function (element) {\n                _this.barTab.removeChild(element);\n                element = null;\n            });\n            this.barTab.innerHTML = '';\n            this.barTab.remove();\n            this.barTab = null;\n        }\n        if (this.vRuler) {\n            this.vRuler.childNodes.forEach(function (element) {\n                _this.vRuler.removeChild(element);\n                element = null;\n            });\n            this.vRuler.innerHTML = '';\n            this.vRuler.remove();\n            this.vRuler = null;\n        }\n        if (this.hRuler) {\n            this.hRuler.childNodes.forEach(function (element) {\n                _this.hRuler.removeChild(element);\n                element = null;\n            });\n            this.hRuler.innerHTML = '';\n            this.hRuler.remove();\n            this.hRuler = null;\n        }\n    };\n    RulerHelper.prototype.removeSvgElements = function () {\n        if (this.hSvg) {\n            this.hSvg.remove();\n            this.hSvg = null;\n        }\n        if (this.vLine) {\n            this.vLine.remove();\n            this.vLine = null;\n        }\n        if (this.vSvg) {\n            this.vSvg.remove();\n            this.vSvg = null;\n        }\n        if (this.hLine) {\n            this.hLine.remove();\n            this.hLine = null;\n        }\n        if (this.firstLineIndentSvg) {\n            this.firstLineIndentSvg.remove();\n            this.firstLineIndentSvg = null;\n        }\n        if (this.firstLineIndentPath) {\n            this.firstLineIndentPath.remove();\n            this.firstLineIndentPath = null;\n        }\n        if (this.hangingIndentSvg) {\n            this.hangingIndentSvg.remove();\n            this.hangingIndentSvg = null;\n        }\n        if (this.hangingIndentPath) {\n            this.hangingIndentPath.remove();\n            this.hangingIndentPath = null;\n        }\n        if (this.rightIndentSvg) {\n            this.rightIndentSvg.remove();\n            this.rightIndentSvg = null;\n        }\n        if (this.rightIndentPath) {\n            this.rightIndentPath.remove();\n            this.rightIndentPath = null;\n        }\n        if (this.leftIndentSvg) {\n            this.leftIndentSvg.remove();\n            this.leftIndentSvg = null;\n        }\n        if (this.leftIndentPath) {\n            this.leftIndentPath.remove();\n            this.leftIndentPath = null;\n        }\n    };\n    RulerHelper.prototype.unWireEvents = function () {\n        if (this.markIndicator) {\n            this.markIndicator.removeEventListener('click', this.onmarkIndicatorClickHandler);\n        }\n        if (this.rulerDiv) {\n            this.rulerDiv.removeEventListener('dblclick', this.onRulerDblClickHandler);\n        }\n        if (this.hRuler) {\n            this.hRuler.removeEventListener('mouseenter', this.onHRulerMouseEnterHandler);\n            this.hRuler.removeEventListener('mouseleave', this.onHRulerMouseLeaveHandler);\n            this.hRuler.removeEventListener('mousedown', this.onHRulerMouseDownHandler);\n            this.hRuler.removeEventListener('mouseup', this.onHRulerMouseUpHandler);\n        }\n        if (this.vRuler) {\n            this.vRuler.removeEventListener('mousedown', this.onVMouseDownHandler);\n        }\n        if (this.firstLineIndent) {\n            this.firstLineIndent.removeEventListener('dblclick', this.onDoubleClickHandler);\n            this.firstLineIndent.removeEventListener('mouseenter', this.onDocumentIntentTrueChangeHandler);\n            this.firstLineIndent.removeEventListener('mouseleave', this.onDocumentIntentFalseChangeHandler);\n            this.firstLineIndent.removeEventListener('mousedown', this.onFirstLineIndentMouseDownHandler);\n        }\n        document.removeEventListener('mousemove', this.onHorizontalRulerMouseMoveHandler);\n        document.removeEventListener('mouseup', this.onRulerMouseUpHandler);\n        document.removeEventListener('mousemove', this.onVMouseMoveHandler);\n        document.removeEventListener('mouseup', this.onVMouseUpHandler);\n        document.removeEventListener('mousemove', this.onIndentMouseMoveHandler);\n        document.removeEventListener('mouseup', this.onIndentMouseUpHandler);\n        if (this.leftIndent) {\n            this.leftIndent.removeEventListener('dblclick', this.onDoubleClickHandler);\n            this.leftIndent.removeEventListener('mouseenter', this.onDocumentIntentTrueChangeHandler);\n            this.leftIndent.removeEventListener('mouseleave', this.onDocumentIntentFalseChangeHandler);\n            this.leftIndent.removeEventListener('mousedown', this.onLeftIndentMouseDownHandler);\n        }\n        document.removeEventListener('mousemove', this.onLeftIndentMouseMoveHandler);\n        document.removeEventListener('mouseup', this.onLeftIndentMouseUpHandler);\n        if (this.hangingIndent) {\n            this.hangingIndent.removeEventListener('dblclick', this.onDoubleClickHandler);\n            this.hangingIndent.removeEventListener('mouseenter', this.onDocumentIntentTrueChangeHandler);\n            this.hangingIndent.removeEventListener('mouseleave', this.onDocumentIntentFalseChangeHandler);\n            this.hangingIndent.removeEventListener('mousedown', this.onHangIndentMouseDownHandler);\n        }\n        document.removeEventListener('mousemove', this.onHangIndentMouseMoveHandler);\n        document.removeEventListener('mouseup', this.onHangIndentMouseUpHandler);\n        if (this.rightIndent) {\n            this.rightIndent.removeEventListener('dblclick', this.onDoubleClickHandler);\n            this.rightIndent.removeEventListener('mouseenter', this.onDocumentIntentTrueChangeHandler);\n            this.rightIndent.removeEventListener('mouseleave', this.onDocumentIntentFalseChangeHandler);\n            this.rightIndent.removeEventListener('mousedown', this.onRightIndentMouseDownHandler);\n        }\n        document.removeEventListener('mousemove', this.onRightIndentMouseMoveHandler);\n        document.removeEventListener('mouseup', this.onRightIndentMouseUpHandler);\n        if (this.tabStopElement) {\n            this.tabStopElement.removeEventListener('dblclick', this.onTabStopDblClickHandler);\n            this.tabStopElement.removeEventListener('mousedown', this.onTabStopMouseDownHandler);\n            this.tabStopElement.removeEventListener('mouseup', this.onTabStopMouseUpHandler);\n        }\n        document.removeEventListener('mousemove', this.onTabStopMouseMoveHandler);\n        document.removeEventListener('mouseup', this.onRenderTabStopMouseUpHandler);\n        //Set the handler to undefined\n        this.onmarkIndicatorClickHandler = undefined;\n        // this.onHorizontalRulerMousemoveHandler = undefined;\n        // this.onHRulerMouseEnterHandler = undefined;\n        // this.onHRulerMouseLeaveHandler = undefined;\n        // this.onHRulerMouseDownHandler = undefined;\n        // this.onHRulerMouseUpHandler = undefined;\n    };\n    return RulerHelper;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/utility/dom-util.js?");

/***/ })

}]);