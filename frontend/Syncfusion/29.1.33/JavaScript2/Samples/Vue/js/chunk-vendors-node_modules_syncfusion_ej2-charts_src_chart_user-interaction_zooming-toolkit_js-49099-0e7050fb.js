"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-charts_src_chart_user-interaction_zooming-toolkit_js-49099-0e7050fb"],{

/***/ "./node_modules/@syncfusion/ej2-charts/src/chart/user-interaction/zooming-toolkit.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-charts/src/chart/user-interaction/zooming-toolkit.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toolkit: () => (/* binding */ Toolkit)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _common_utils_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils/helper */ \"./node_modules/@syncfusion/ej2-charts/src/common/utils/helper.js\");\n/* harmony import */ var _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-svg-base */ \"./node_modules/@syncfusion/ej2-svg-base/index.js\");\n/* harmony import */ var _zooming__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./zooming */ \"./node_modules/@syncfusion/ej2-charts/src/chart/user-interaction/zooming.js\");\n/* harmony import */ var _common_model_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/model/constants */ \"./node_modules/@syncfusion/ej2-charts/src/common/model/constants.js\");\n\n\n\n\n\n\n\n/**\n * The `Toolkit` class provides functionalities for zooming and panning in charts.\n *\n * @private\n */\nvar Toolkit = /** @class */ (function () {\n    /**\n     * Constructor for the chart touch module.\n     *\n     * @param {Chart} chart - Specifies the chart instance.\n     */\n    function Toolkit(chart) {\n        this.iconRectOverFill = 'transparent';\n        this.iconRectSelectionFill = 'transparent';\n        /** @private */\n        this.zoomCompleteEvtCollection = [];\n        /** @private */\n        this.isZoomed = false;\n        this.chart = chart;\n        this.elementId = chart.element.id;\n        this.chart.svgRenderer = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.SvgRenderer(this.elementId);\n    }\n    /**\n     * Creates a pan button.\n     *\n     * @param {Element} childElement - Specifies the child element.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @returns {void}\n     */\n    Toolkit.prototype.createPanButton = function (childElement, parentElement) {\n        var render = this.chart.svgRenderer;\n        var fillColor = this.chart.zoomModule.isPanning ? this.chart.themeStyle.toolkitSelectionColor :\n            this.chart.themeStyle.toolkitFill;\n        var direction = 'M5,3h2.3L7.275,5.875h1.4L8.65,3H11L8,0L5,3z M3,11V8.7l2.875,0.025v-1.4L3,7.35V5L0,8L3,';\n        direction += '11z M11,13H8.7l0.025-2.875h-1.4L7.35,13H5l3,3L11,13z M13,5v2.3l-2.875-0.025v1.4L13,8.65V11l3-3L13,5z';\n        //This is for setting low opacity to PAN Button\n        this.elementOpacity = !this.chart.zoomModule.isZoomed && this.chart.zoomSettings.showToolbar ? '0.2' : '1';\n        childElement.setAttribute('opacity', this.chart.theme === 'Fluent2HighContrast' ? '1' : this.elementOpacity);\n        childElement.id = this.elementId + '_Zooming_Pan';\n        childElement.setAttribute('role', this.chart.zoomSettings.accessibility.accessibilityRole ? this.chart.zoomSettings.accessibility.accessibilityRole : 'button');\n        childElement.setAttribute('tabindex', this.chart.zoomSettings.accessibility.focusable ? String(this.chart.zoomSettings.accessibility.tabIndex) : '-1');\n        childElement.setAttribute('aria-label', this.chart.zoomSettings.accessibility.accessibilityDescription ? this.chart.zoomSettings.accessibility.accessibilityDescription : this.chart.getLocalizedLabel('Pan'));\n        this.panElements = childElement;\n        childElement.appendChild(render.drawRectangle(new _common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.RectOption(this.elementId + '_Zooming_Pan_1', 'transparent', {}, 1, this.chart.themeStyle.toolkitIconRect, this.chart.theme.indexOf('Fluent2') > -1 || this.chart.theme.indexOf('Bootstrap5') > -1 ? 4 : 0, this.chart.theme.indexOf('Fluent2') > -1 || this.chart.theme.indexOf('Bootstrap5') > -1 ? 4 : 0)));\n        childElement.appendChild(render.drawPath(new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.PathOption(this.elementId + '_Zooming_Pan_2', this.chart.theme === 'Fluent2HighContrast' && this.elementOpacity === '0.2' ? '#3FF23F' : fillColor, null, null, 1, null, direction)));\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.pan);\n    };\n    /**\n     * Creates a zoom button.\n     *\n     * @param {Element} childElement - The child element to create.\n     * @param {Element} parentElement - The parent element to append the child element.\n     * @returns {void}\n     */\n    Toolkit.prototype.createZoomButton = function (childElement, parentElement) {\n        var render = this.chart.svgRenderer;\n        //This is for selecting initial fill color to ZOOM button\n        var fillColor = this.chart.zoomModule.isPanning || (!this.chart.zoomModule.isZoomed &&\n            this.chart.zoomSettings.showToolbar) ? this.chart.themeStyle.toolkitFill : this.chart.themeStyle.toolkitSelectionColor;\n        this.elementOpacity = !this.chart.zoomModule.isPanning && !this.chart.zoomModule.isZoomed && this.chart.zoomSettings.showToolbar ? '0.2' : '1';\n        var rectColor = this.chart.zoomModule.isPanning ? 'transparent' : this.chart.themeStyle.toolkitIconRectSelectionFill;\n        var direction = 'M0.001,14.629L1.372,16l4.571-4.571v-0.685l0.228-0.274c1.051,0.868,2.423,1.417,3.885,1.417c3.291,0,';\n        direction += '5.943-2.651,5.943-5.943S13.395,0,10.103,0S4.16,2.651,4.16,5.943c0,1.508,0.503,2.834,1.417,3.885l-0.274,0.228H4.571';\n        direction = direction + 'L0.001,14.629L0.001,14.629z M5.943,5.943c0-2.285,1.828-4.114,4.114-4.114s4.114,1.828,4.114,';\n        childElement.id = this.elementId + '_Zooming_Zoom';\n        childElement.setAttribute('role', this.chart.zoomSettings.accessibility.accessibilityRole ? this.chart.zoomSettings.accessibility.accessibilityRole : 'button');\n        childElement.setAttribute('tabindex', this.chart.zoomSettings.accessibility.focusable ? String(this.chart.zoomSettings.accessibility.tabIndex) : '-1');\n        childElement.setAttribute('aria-label', this.chart.zoomSettings.accessibility.accessibilityDescription ? this.chart.zoomSettings.accessibility.accessibilityDescription : this.chart.getLocalizedLabel('Zoom'));\n        childElement.setAttribute('opacity', this.elementOpacity);\n        this.zoomElements = childElement;\n        this.selectedID = this.chart.zoomModule.isPanning ? this.chart.element.id + '_Zooming_Pan_1' : this.elementId + '_Zooming_Zoom_1';\n        childElement.appendChild(render.drawRectangle(new _common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.RectOption(this.elementId + '_Zooming_Zoom_1', rectColor, {}, 1, this.chart.themeStyle.toolkitIconRect, this.chart.theme.indexOf('Fluent2') > -1 || this.chart.theme.indexOf('Bootstrap5') > -1 ? 4 : 0, this.chart.theme.indexOf('Fluent2') > -1 || this.chart.theme.indexOf('Bootstrap5') > -1 ? 4 : 0)));\n        childElement.appendChild(render.drawPath(new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.PathOption(this.elementId + '_Zooming_Zoom_3', fillColor, null, null, 1, null, direction + '4.114s-1.828,4.114-4.114,4.114S5.943,8.229,5.943,5.943z')));\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.zoom);\n    };\n    /**\n     * Creates a zoom in button.\n     *\n     * @param {Element} childElement - The child element to create.\n     * @param {Element} parentElement - The parent element to append the child element.\n     * @param {Chart} chart - The chart instance.\n     * @returns {void}\n     */\n    Toolkit.prototype.createZoomInButton = function (childElement, parentElement, chart) {\n        var render = this.chart.svgRenderer;\n        var fillColor = this.chart.themeStyle.toolkitFill;\n        var direction = 'M10.103,0C6.812,0,4.16,2.651,4.16,5.943c0,1.509,0.503,2.834,1.417,3.885l-0.274,0.229H4.571L0,';\n        direction += '14.628l0,0L1.372,16l4.571-4.572v-0.685l0.228-0.275c1.052,0.868,2.423,1.417,3.885,1.417c3.291,0,5.943-2.651,';\n        direction += '5.943-5.943C16,2.651,13.395,0,10.103,0z M10.058,10.058c-2.286,0-4.114-1.828-4.114-4.114c0-2.286,1.828-4.114,';\n        childElement.id = this.elementId + '_Zooming_ZoomIn';\n        childElement.setAttribute('role', this.chart.zoomSettings.accessibility.accessibilityRole ? this.chart.zoomSettings.accessibility.accessibilityRole : 'button');\n        childElement.setAttribute('tabindex', this.chart.zoomSettings.accessibility.focusable ? String(this.chart.zoomSettings.accessibility.tabIndex) : '-1');\n        childElement.setAttribute('aria-label', this.chart.zoomSettings.accessibility.accessibilityDescription ? this.chart.zoomSettings.accessibility.accessibilityDescription : this.chart.getLocalizedLabel('ZoomIn'));\n        var polygonDirection = '12.749,5.466 10.749,5.466 10.749,3.466 9.749,3.466 9.749,5.466 7.749,5.466 7.749,6.466';\n        childElement.appendChild(render.drawRectangle(new _common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.RectOption(this.elementId + '_Zooming_ZoomIn_1', 'transparent', {}, 1, this.chart.themeStyle.toolkitIconRect, this.chart.theme.indexOf('Fluent2') > -1 ? 4 : this.chart.theme.indexOf('Bootstrap5') > -1 ? 2 : 0, this.chart.theme.indexOf('Fluent2') > -1 ? 4 : this.chart.theme.indexOf('Bootstrap5') > -1 ? 2 : 0)));\n        childElement.appendChild(render.drawPath(new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.PathOption(this.elementId + '_Zooming_ZoomIn_2', fillColor, null, null, 1, null, direction + '4.114-4.114c2.286,0,4.114,1.828,4.114,4.114C14.172,8.229,12.344,10.058,10.058,10.058z')));\n        childElement.appendChild(render.drawPolygon(new _common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.PolygonOption(this.elementId + '_Zooming_ZoomIn_3', polygonDirection + ' 9.749,6.466 9.749,8.466 10.749,8.466 10.749,6.466 12.749,6.466', fillColor)));\n        this.zoomInElements = childElement;\n        //This is for low opacity to ZOOM IN button\n        this.elementOpacity = chart.zoomModule.isPanning || (!chart.zoomModule.isZoomed && !chart.zoomSettings.showToolbar && !this.enableZoomButton) ? '0.2' : '1';\n        childElement.setAttribute('opacity', this.elementOpacity);\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.zoomIn);\n    };\n    /**\n     * Creates a zoom out button.\n     *\n     * @param {Element} childElement - The child element to create.\n     * @param {Element} parentElement - The parent element to append the child element.\n     * @param {Chart} chart - The chart instance.\n     * @returns {void}\n     */\n    Toolkit.prototype.createZoomOutButton = function (childElement, parentElement, chart) {\n        var render = this.chart.svgRenderer;\n        var fillColor = this.chart.themeStyle.toolkitFill;\n        var direction = 'M0,14.622L1.378,16l4.533-4.533v-0.711l0.266-0.266c1.022,0.889,2.4,1.422,3.866,';\n        direction += '1.422c3.289,0,5.955-2.666,5.955-5.955S13.333,0,10.044,0S4.089,2.667,4.134,5.911c0,1.466,0.533,2.844,';\n        direction += '1.422,3.866l-0.266,0.266H4.578L0,14.622L0,14.622z M5.911,5.911c0-2.311,1.822-4.133,4.133-4.133s4.133,1.822,4.133,';\n        childElement.id = this.elementId + '_Zooming_ZoomOut';\n        childElement.setAttribute('role', this.chart.zoomSettings.accessibility.accessibilityRole ? this.chart.zoomSettings.accessibility.accessibilityRole : 'button');\n        childElement.setAttribute('tabindex', this.chart.zoomSettings.accessibility.focusable ? String(this.chart.zoomSettings.accessibility.tabIndex) : '-1');\n        childElement.setAttribute('aria-label', this.chart.zoomSettings.accessibility.accessibilityDescription ? this.chart.zoomSettings.accessibility.accessibilityDescription : this.chart.getLocalizedLabel('ZoomOut'));\n        childElement.appendChild(render.drawRectangle(new _common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.RectOption(this.elementId + '_Zooming_ZoomOut_1', 'transparent', {}, 1, this.chart.themeStyle.toolkitIconRect, this.chart.theme.indexOf('Fluent2') > -1 || this.chart.theme.indexOf('Bootstrap5') > -1 ? 4 : 0, this.chart.theme.indexOf('Fluent2') > -1 || this.chart.theme.indexOf('Bootstrap5') > -1 ? 4 : 0)));\n        childElement.appendChild(render.drawPath(new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.PathOption(this.elementId + '_Zooming_ZoomOut_2', (chart.theme === 'Fluent2HighContrast' && !chart.zoomModule.isZoomed) || (chart.theme === 'Fluent2HighContrast' && chart.zoomModule.isPanning) ? '#3FF23F' : fillColor, null, null, 1, null, direction + '4.133s-1.866,4.133-4.133,4.133S5.911,8.222,5.911,5.911z M12.567,6.466h-5v-1h5V6.466z')));\n        this.zoomOutElements = childElement;\n        //This is for low opacity of ZOOM OUT button\n        this.elementOpacity = chart.zoomModule.isPanning || (!chart.zoomModule.isZoomed && chart.zoomSettings.showToolbar && !this.enableZoomButton) ? '0.2' : '1';\n        childElement.setAttribute('opacity', chart.theme === 'Fluent2HighContrast' ? '1' : this.elementOpacity);\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.zoomOut);\n    };\n    /**\n     * Creates a reset button.\n     *\n     * @param {Element} childElement - The child element to create.\n     * @param {Element} parentElement - The parent element to append the child element.\n     * @param {Chart} chart - The chart instance.\n     * @param {boolean} isDevice - Specifies whether the device is mobile or not.\n     * @returns {void}\n     */\n    Toolkit.prototype.createResetButton = function (childElement, parentElement, chart, isDevice) {\n        var render = this.chart.svgRenderer;\n        var fillColor = this.chart.themeStyle.toolkitFill;\n        var size;\n        var direction = 'M12.364,8h-2.182l2.909,3.25L16,8h-2.182c0-3.575-2.618-6.5-5.818-6.5c-1.128,0-2.218,0.366-3.091,';\n        direction += '1.016l1.055,1.178C6.581,3.328,7.272,3.125,8,3.125C10.4,3.125,12.363,5.319,12.364,8L12.364,8z M11.091,';\n        direction += '13.484l-1.055-1.178C9.419,12.672,8.728,12.875,8,12.875c-2.4,0-4.364-2.194-4.364-4.875h2.182L2.909,4.75L0,8h2.182c0,';\n        childElement.id = this.elementId + '_Zooming_Reset';\n        childElement.setAttribute('role', this.chart.zoomSettings.accessibility.accessibilityRole ? this.chart.zoomSettings.accessibility.accessibilityRole : 'button');\n        childElement.setAttribute('tabindex', this.chart.zoomSettings.accessibility.focusable ? String(this.chart.zoomSettings.accessibility.tabIndex) : '-1');\n        childElement.setAttribute('aria-label', this.chart.zoomSettings.accessibility.accessibilityDescription ? this.chart.zoomSettings.accessibility.accessibilityDescription : this.chart.getLocalizedLabel('Reset'));\n        //This is for low opacity to RESET button\n        this.elementOpacity = !chart.zoomModule.isZoomed && chart.zoomSettings.showToolbar ? '0.2' : '1';\n        childElement.setAttribute('opacity', chart.theme === 'Fluent2HighContrast' ? '1' : this.elementOpacity);\n        if (!isDevice) {\n            childElement.appendChild(render.drawRectangle(new _common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.RectOption(this.elementId + '_Zooming_Reset_1', 'transparent', {}, 1, this.chart.themeStyle.toolkitIconRect, this.chart.theme.indexOf('Fluent2') > -1 || this.chart.theme.indexOf('Bootstrap5') > -1 ? 4 : 0, this.chart.theme.indexOf('Fluent2') > -1 || this.chart.theme.indexOf('Bootstrap5') > -1 ? 4 : 0)));\n            childElement.appendChild(render.drawPath(new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.PathOption(this.elementId + '_Zooming_Reset_2', chart.theme === 'Fluent2HighContrast' && this.elementOpacity === '0.2' ? '#3FF23F' : fillColor, null, null, 1, null, direction + '3.575,2.618,6.5,5.818,6.5C9.128,14.5,10.219,14.134,11.091,13.484L11.091,13.484z')));\n        }\n        else {\n            size = (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.measureText)(this.chart.getLocalizedLabel('ResetZoom'), { size: '12px' }, { size: '12px', fontStyle: 'Normal', fontWeight: '400', fontFamily: 'Segoe UI' });\n            childElement.appendChild(render.drawRectangle(new _common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.RectOption(this.elementId + '_Zooming_Reset_1', 'transparent', {}, 1, new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.Rect(0, 0, size.width, size.height))));\n            (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.textElement)(chart.renderer, new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.TextOption(this.elementId + '_Zooming_Reset_2', 0 + size.width / 2, 0 + size.height * 3 / 4, 'middle', this.chart.getLocalizedLabel('ResetZoom'), 'rotate(0,' + (0) + ',' + (0) + ')', 'auto'), { size: '12px' }, this.chart.theme === 'Material3Dark' || this.chart.theme === 'Fluent2Dark' || this.chart.theme === 'Fluent2HighContrast' ? 'White' : 'black', childElement, null, null, null, null, null, null, null, null, chart.enableCanvas, null, { size: '12px', fontStyle: 'Normal', fontWeight: '400', fontFamily: 'Segoe UI' });\n        }\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.reset);\n    };\n    /**\n     * Wires events to the specified element.\n     *\n     * @param {Element} element - The element to wire the events to.\n     * @param {Function} process - The function to be executed when the event occurs.\n     * @returns {void}\n     */\n    Toolkit.prototype.wireEvents = function (element, process) {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(element, 'mousedown touchstart', process, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(element, 'mouseover', this.showTooltip, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(element, 'mouseout', this.removeTooltip, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.chart.element, 'mousemove', this.mouseMoveHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.chart.zoomModule.toolkitElements, 'mousedown', this.mouseDownHandler, this);\n        window.addEventListener('mouseup', this.mouseUpHandler.bind(this), true);\n    };\n    /**\n     * Handles the mouse move event on the chart.\n     *\n     * @param {PointerEvent | TouchEvent} e - The mouse move event or touch event.\n     * @returns {void}\n     * @private\n     */\n    Toolkit.prototype.mouseMoveHandler = function (e) {\n        if (this.chart.zoomSettings.toolbarPosition.draggable) {\n            if (this.isDragging) {\n                this.performDragAndDrop(e);\n            }\n            else {\n                this.chart.zoomModule.toolkitElements.setAttribute('cursor', e.target.id.indexOf('Zooming_Rect') > -1 ? 'grab' : 'none');\n            }\n        }\n    };\n    /**\n     * Handles the mouse down event on the toolkit.\n     *\n     * @param {PointerEvent} e - The mouse down event.\n     * @returns {void}\n     * @private\n     */\n    Toolkit.prototype.mouseDownHandler = function (e) {\n        if (this.chart.zoomSettings.toolbarPosition.draggable && !this.isDragging && e.target.\n            id.indexOf('Zooming_Rect') > -1) {\n            this.isDragging = true;\n            this.chart.zoomModule.toolkitElements.setAttribute('cursor', 'grabbing');\n        }\n    };\n    /**\n     * Handles the mouse up event on the window.\n     *\n     * @param {PointerEvent} e - The mouse up event.\n     * @returns {void}\n     * @private\n     */\n    Toolkit.prototype.mouseUpHandler = function (e) {\n        if (this.isDragging) {\n            this.isDragging = false;\n            this.chart.zoomModule.toolkitElements.setAttribute('cursor', e.target.id.indexOf('Zooming_Rect') > -1 ? 'grab' : 'none');\n        }\n    };\n    /**\n     * Handles the drag-and-drop functionality for the toolkit.\n     *\n     * @param {PointerEvent | TouchEvent} e - The event triggered by the pointer or touch action.\n     * @returns {void}\n     * @private\n     */\n    Toolkit.prototype.performDragAndDrop = function (e) {\n        var elementWidth = this.chart.zoomModule.toolkitElements.getBoundingClientRect().width;\n        var elementHeight = this.chart.zoomModule.toolkitElements.getBoundingClientRect().height;\n        // Padding to apply when the toolkit is positioned at the chart area border\n        var toolkitShadowPadding = 2;\n        var x = e.type.indexOf('touch') > -1 ? e.changedTouches[0].clientX : this.chart.mouseX;\n        var y = e.type.indexOf('touch') > -1 ? e.changedTouches[0].clientY : this.chart.mouseY;\n        var transX = Math.max(this.chart.border.width + toolkitShadowPadding, Math.min(x - elementWidth / 2, this.chart.availableSize.width - elementWidth - this.chart.border.width - toolkitShadowPadding));\n        var transY = Math.max(this.chart.border.width + toolkitShadowPadding, Math.min(y - elementHeight / 2, this.chart.availableSize.height - elementHeight - this.chart.border.width - toolkitShadowPadding));\n        if (x < this.chart.availableSize.width && y < this.chart.availableSize.height) {\n            this.chart.zoomModule.toolkitElements.setAttribute('transform', 'translate(' + transX + ',' + transY + ')');\n            this.dragHorizontalRatio = transX / this.chart.availableSize.width;\n            this.dragVerticalRatio = transY / this.chart.availableSize.height;\n        }\n    };\n    /**\n     * Displays the tooltip on mouse event.\n     *\n     * @param {MouseEvent} event - The mouse event.\n     * @returns {void}\n     */\n    Toolkit.prototype.showTooltip = function (event) {\n        var text = event.currentTarget.id.split('_Zooming_')[1];\n        var left = (event.pageX - ((0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.measureText)(text, { size: '10px' }, { size: '10px', fontStyle: 'Normal', fontWeight: '400', fontFamily: 'Segoe UI' }).width + 5));\n        var rect = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(event.currentTarget.id + '_1');\n        var icon2 = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(event.currentTarget.id + '_2');\n        var icon3 = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(event.currentTarget.id + '_3');\n        if (event.currentTarget.getAttribute('opacity') === '1') {\n            event.currentTarget.setAttribute('cursor', 'pointer');\n        }\n        else {\n            event.currentTarget.setAttribute('cursor', 'auto');\n        }\n        if (rect) {\n            this.hoveredID = rect.id;\n            rect.setAttribute('fill', this.chart.theme === 'Fluent2HighContrast' && event.currentTarget.childNodes[1].getAttribute('fill') === '#3FF23F' ? 'transparent' : this.chart.themeStyle.toolkitIconRectOverFill);\n        }\n        if (icon2) {\n            icon2.setAttribute('fill', this.chart.theme === 'Fluent2HighContrast' && event.currentTarget.childNodes[1].getAttribute('fill') === '#3FF23F' ? '#3FF23F' : this.chart.themeStyle.toolkitSelectionColor);\n        }\n        if (icon3) {\n            icon3.setAttribute('fill', this.chart.theme === 'Fluent2HighContrast' && event.currentTarget.childNodes[1].getAttribute('fill') === '#3FF23F' ? '#3FF23F' : this.chart.themeStyle.toolkitSelectionColor);\n        }\n        if (!this.chart.isTouch && !this.isDragging) {\n            (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.createTooltip)('EJ2_Chart_ZoomTip', this.chart.getLocalizedLabel(text), (event.pageY + 10), left, '10px');\n        }\n    };\n    /**\n     * Removes the tooltip.\n     *\n     * @returns {void}\n     */\n    Toolkit.prototype.removeTooltip = function () {\n        if (this.hoveredID && (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.hoveredID)) {\n            var rectColor = this.chart.zoomModule.isPanning ? (this.hoveredID.indexOf('_Pan_') > -1) ? this.chart.themeStyle.toolkitIconRectSelectionFill : 'transparent' : (this.hoveredID.indexOf('_Zoom_') > -1) && (this.elementOpacity !== '0.2' && this.chart.theme !== 'Fluent2HighContrast') ? this.chart.themeStyle.toolkitIconRectSelectionFill : 'transparent';\n            (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.hoveredID).setAttribute('fill', rectColor);\n        }\n        var icon2 = this.hoveredID ? (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.hoveredID.replace('_1', '_2')) : null;\n        var icon3 = this.hoveredID ? (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.hoveredID.replace('_1', '_3')) : null;\n        if (icon2) {\n            var iconColor = this.chart.zoomModule.isPanning ? (this.hoveredID.indexOf('_Pan_') > -1) ? this.chart.themeStyle.toolkitSelectionColor : this.elementOpacity === '0.2' && this.chart.theme === 'Fluent2HighContrast' && (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.hoveredID).nextElementSibling.getAttribute('fill') === '#3FF23F' ? '#3FF23F' : this.elementOpacity === '1' && this.chart.theme === 'Tailwind3' ? '#212529' : this.chart.themeStyle.toolkitFill : (this.hoveredID.indexOf('_Zoom_') > -1) ? this.chart.themeStyle.toolkitSelectionColor : this.chart.theme === 'Fluent2HighContrast' && (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.hoveredID).nextElementSibling.getAttribute('fill') === '#3FF23F' ? '#3FF23F' : (this.chart.theme === 'Tailwind3Dark' && this.chart.zoomModule.isDevice) ? 'black' : this.chart.themeStyle.toolkitFill;\n            icon2.setAttribute('fill', iconColor);\n        }\n        if (icon3) {\n            //This is used for change color while hover on ZOOM button\n            var iconColor = this.chart.zoomModule.isPanning || (!this.chart.isZoomed && this.chart.zoomSettings.showToolbar) ? this.chart.theme === 'Fluent2HighContrast' && (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.hoveredID).nextElementSibling.getAttribute('fill') === '#3FF23F' && this.elementOpacity === '1' ? '#3FF23F' : this.elementOpacity === '1' && this.chart.theme === 'Tailwind3' ? '#212529' : this.chart.themeStyle.toolkitFill : (this.hoveredID.indexOf('_Zoom_') > -1) ? this.chart.themeStyle.toolkitSelectionColor : this.chart.theme === 'Fluent2HighContrast' && (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.hoveredID).nextElementSibling.getAttribute('fill') === '#3FF23F' ? '#3FF23F' : this.chart.themeStyle.toolkitFill;\n            icon3.setAttribute('fill', iconColor);\n        }\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.removeElement)('EJ2_Chart_ZoomTip');\n    };\n    // Toolkit events function calculation here.\n    /**\n     * Resets the chart.\n     *\n     * @param {PointerEvent | TouchEvent | KeyboardEvent} event - The event object.\n     * @returns {boolean} - Returns false.\n     */\n    Toolkit.prototype.reset = function (event) {\n        var _this = this;\n        if (!this.chart.zoomModule.isZoomed) {\n            return false;\n        }\n        var chart = this.chart;\n        this.enableZoomButton = false;\n        chart.redraw = chart.enableCanvas ? chart.redraw : chart.zoomSettings.enableAnimation;\n        if (!chart.zoomModule.isDevice) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(chart.zoomModule.toolkitElements);\n        }\n        else if (event.type === 'touchstart') {\n            event.stopPropagation();\n        }\n        var argsData;\n        this.removeTooltip();\n        chart.svgObject.setAttribute('cursor', 'auto');\n        var zoomedAxisCollection = [];\n        this.zoomCompleteEvtCollection = [];\n        for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            argsData = {\n                cancel: false, name: _common_model_constants__WEBPACK_IMPORTED_MODULE_4__.zoomComplete, axis: axis, previousZoomFactor: axis.zoomFactor,\n                previousZoomPosition: axis.zoomPosition, currentZoomFactor: 1, currentZoomPosition: 0,\n                previousVisibleRange: axis.visibleRange, currentVisibleRange: null\n            };\n            axis.zoomFactor = 1;\n            axis.zoomPosition = 0;\n            if (axis.zoomingScrollBar) {\n                axis.zoomingScrollBar.isScrollUI = false;\n            }\n            if (!argsData.cancel) {\n                axis.zoomFactor = argsData.currentZoomFactor;\n                axis.zoomPosition = argsData.currentZoomPosition;\n                this.zoomCompleteEvtCollection.push(argsData);\n            }\n            zoomedAxisCollection.push({\n                zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\n                axisRange: axis.visibleRange\n            });\n            if (chart.zoomModule.isDevice && !this.chart.isBlazor) {\n                chart.trigger(_common_model_constants__WEBPACK_IMPORTED_MODULE_4__.zoomComplete, argsData);\n            }\n        }\n        var zoomingEventArgs = { cancel: false, axisCollection: zoomedAxisCollection, name: _common_model_constants__WEBPACK_IMPORTED_MODULE_4__.onZooming };\n        if (!zoomingEventArgs.cancel && this.chart.isBlazor) {\n            this.chart.trigger(_common_model_constants__WEBPACK_IMPORTED_MODULE_4__.onZooming, zoomingEventArgs, function () {\n                _this.setDefferedZoom(chart);\n            });\n            return false;\n        }\n        else {\n            return (this.setDefferedZoom(chart));\n        }\n    };\n    Toolkit.prototype.setDefferedZoom = function (chart) {\n        chart.disableTrackTooltip = false;\n        var chartDuration = chart.duration;\n        chart.duration = 600;\n        chart.zoomModule.isZoomed = chart.zoomModule.isPanning = chart.isChartDrag = chart.delayRedraw = false;\n        chart.zoomModule.touchMoveList = chart.zoomModule.touchStartList = [];\n        chart.zoomModule.pinchTarget = null;\n        chart.zoomRedraw = chart.zoomSettings.enableAnimation;\n        if (chart.redraw) {\n            var zoomToolBar = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(chart.element.id + '_Zooming_KitCollection');\n            if (zoomToolBar) {\n                zoomToolBar.remove();\n            }\n            if (chart.tooltipModule) {\n                if ((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(chart.element.id + '_tooltip')) {\n                    (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(chart.element.id + '_tooltip').remove();\n                }\n                for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n                    var series = _a[_i];\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(series) && (series.marker.visible || chart.tooltip.shared || series.type === 'Scatter' || series.type === 'Bubble')) {\n                        chart.markerRender.removeHighlightedMarker(series, null, true);\n                    }\n                }\n            }\n        }\n        else {\n            chart.removeSvg();\n        }\n        chart.refreshAxis();\n        chart.refreshBound();\n        this.elementOpacity = '1';\n        chart.duration = chartDuration;\n        chart.redraw = false;\n        return false;\n    };\n    Toolkit.prototype.zoomIn = function () {\n        this.zoomInOutCalculation(1, this.chart, this.chart.axisCollections, this.chart.zoomSettings.mode);\n        return false;\n    };\n    Toolkit.prototype.zoomOut = function () {\n        this.enableZoomButton = false;\n        this.zoomInOutCalculation(-1, this.chart, this.chart.axisCollections, this.chart.zoomSettings.mode);\n        return false;\n    };\n    Toolkit.prototype.zoom = function () {\n        this.chart.zoomModule.isPanning = false;\n        // const zoomModule: Zoom = this.chart.zoomModule;\n        this.elementOpacity = '1';\n        this.chart.svgObject.setAttribute('cursor', 'auto');\n        if (this.zoomInElements) {\n            this.zoomInElements.setAttribute('opacity', this.elementOpacity);\n        }\n        this.elementOpacity = (!this.chart.zoomModule.isZoomed && this.chart.zoomSettings.showToolbar) ? '0.2' : '1';\n        if (this.zoomOutElements) {\n            this.zoomOutElements.setAttribute('opacity', this.elementOpacity);\n        }\n        this.applySelection(this.zoomElements.childNodes, this.chart.themeStyle.toolkitSelectionColor);\n        if (this.chart.theme === 'Fluent2HighContrast') {\n            if (this.zoomInElements) {\n                this.applySelection(this.zoomInElements.childNodes, this.chart.themeStyle.toolkitFill);\n            }\n            if (this.zoomOutElements) {\n                this.applySelection(this.zoomOutElements.childNodes, this.chart.themeStyle.toolkitFill);\n            }\n        }\n        if (this.panElements) {\n            this.applySelection(this.panElements.childNodes, this.chart.theme === 'Tailwind3Dark' ? '#FFFFFF' : '#737373');\n        }\n        if ((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.selectedID)) {\n            (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.selectedID).setAttribute('fill', 'transparent');\n        }\n        this.selectedID = this.chart.element.id + '_Zooming_Zoom_1';\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.selectedID).setAttribute('fill', this.chart.themeStyle.toolkitIconRectSelectionFill);\n        return false;\n    };\n    /**\n     * Enables panning for the chart.\n     *\n     * @returns {boolean} - Returns false.\n     */\n    Toolkit.prototype.pan = function () {\n        if (!this.chart.zoomModule.isZoomed) {\n            return false;\n        }\n        var element;\n        this.chart.zoomModule.isPanning = true;\n        this.chart.svgObject.setAttribute('cursor', 'pointer');\n        this.elementOpacity = '0.2';\n        element = this.zoomInElements ? this.zoomInElements.setAttribute('opacity', this.elementOpacity) : null;\n        element = this.zoomOutElements ? this.zoomOutElements.setAttribute('opacity', this.elementOpacity) : null;\n        if (this.chart.theme === 'Fluent2HighContrast') {\n            var zoomOut = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.chart.element.id + '_Zooming_ZoomOut');\n            if (zoomOut) {\n                zoomOut.setAttribute('opacity', '1');\n            }\n            var zoomIn = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.chart.element.id + '_Zooming_ZoomIn');\n            if (zoomIn) {\n                zoomIn.setAttribute('opacity', '1');\n            }\n            var zoomOut2 = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.chart.element.id + '_Zooming_ZoomOut_2');\n            if (zoomOut2) {\n                zoomOut2.setAttribute('fill', '#3FF23F');\n            }\n            var zoomIn2 = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.chart.element.id + '_Zooming_ZoomIn_2');\n            if (zoomIn2) {\n                (zoomIn2.setAttribute('fill', '#3FF23F'));\n            }\n            var zoomIn3 = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.chart.element.id + '_Zooming_ZoomIn_3');\n            if (zoomIn3) {\n                zoomIn3.setAttribute('fill', '#3FF23F');\n            }\n        }\n        element = this.panElements ? this.applySelection(this.panElements.childNodes, this.chart.themeStyle.toolkitSelectionColor) : null;\n        element = this.zoomElements ? this.applySelection(this.zoomElements.childNodes, this.chart.theme === 'Tailwind3Dark' ? '#FFFFFF' : '#737373') : null;\n        if ((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.selectedID)) {\n            (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.selectedID).setAttribute('fill', 'transparent');\n        }\n        this.selectedID = this.chart.element.id + '_Zooming_Pan_1';\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.selectedID).setAttribute('fill', this.chart.themeStyle.toolkitIconRectSelectionFill);\n        return false;\n    };\n    Toolkit.prototype.zoomInOutCalculation = function (scale, chart, axes, mode) {\n        var _this = this;\n        this.isZoomed = true;\n        if (chart.zoomSettings.showToolbar) {\n            this.elementOpacity = this.zoomInElements.getAttribute('opacity');\n        }\n        if (!chart.zoomModule.isPanning && this.elementOpacity !== '0.2') {\n            if ((chart.zoomSettings.showToolbar && !chart.isZoomed)) {\n                chart.zoomModule.isZoomed = true;\n            }\n            var zoomFactor = void 0;\n            var zoomPosition = void 0;\n            var cumulative = void 0;\n            chart.disableTrackTooltip = true;\n            chart.delayRedraw = true;\n            var argsData = void 0;\n            this.zoomCompleteEvtCollection = [];\n            var zoomedAxisCollection = [];\n            for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n                var axis = _a[_i];\n                argsData = {\n                    cancel: false, name: _common_model_constants__WEBPACK_IMPORTED_MODULE_4__.zoomComplete, axis: axis, previousZoomFactor: axis.zoomFactor,\n                    previousZoomPosition: axis.zoomPosition, currentZoomFactor: axis.zoomFactor, currentZoomPosition: axis.zoomPosition,\n                    previousVisibleRange: axis.visibleRange, currentVisibleRange: null\n                };\n                if ((axis.orientation === 'Horizontal' && mode !== 'Y') ||\n                    (axis.orientation === 'Vertical' && mode !== 'X')) {\n                    cumulative = Math.max(Math.max(1 / (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.minMax)(axis.zoomFactor, 0, 1), 1) + (0.25 * scale), 1);\n                    zoomFactor = (cumulative === 1) ? 1 : (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.minMax)(1 / cumulative, 0, 1);\n                    zoomPosition = (cumulative === 1) ? 0 : axis.zoomPosition + ((axis.zoomFactor - zoomFactor) * 0.5);\n                    if (axis.zoomPosition !== zoomPosition || axis.zoomFactor !== zoomFactor) {\n                        zoomFactor = (zoomPosition + zoomFactor) > 1 ? (1 - zoomPosition) : zoomFactor;\n                    }\n                    argsData.currentZoomFactor = zoomFactor;\n                    argsData.currentZoomPosition = zoomPosition;\n                    if (!argsData.cancel) {\n                        axis.zoomFactor = argsData.currentZoomFactor;\n                        axis.zoomPosition = argsData.currentZoomPosition;\n                        this.zoomCompleteEvtCollection.push(argsData);\n                    }\n                    zoomedAxisCollection.push({\n                        zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\n                        axisRange: axis.visibleRange\n                    });\n                }\n            }\n            var zoomingEventArgs_1 = { cancel: false, axisCollection: zoomedAxisCollection, name: _common_model_constants__WEBPACK_IMPORTED_MODULE_4__.onZooming };\n            this.chart.trigger(_common_model_constants__WEBPACK_IMPORTED_MODULE_4__.onZooming, zoomingEventArgs_1, function () {\n                if (zoomingEventArgs_1.cancel) {\n                    var zoom = new _zooming__WEBPACK_IMPORTED_MODULE_3__.Zoom(chart);\n                    zoom.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n                }\n            });\n        }\n    };\n    Toolkit.prototype.applySelection = function (elements, color) {\n        for (var i = 1, length_1 = elements.length; i < length_1; i++) {\n            elements[i].setAttribute('fill', color);\n        }\n    };\n    return Toolkit;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-charts/src/chart/user-interaction/zooming-toolkit.js?");

/***/ })

}]);