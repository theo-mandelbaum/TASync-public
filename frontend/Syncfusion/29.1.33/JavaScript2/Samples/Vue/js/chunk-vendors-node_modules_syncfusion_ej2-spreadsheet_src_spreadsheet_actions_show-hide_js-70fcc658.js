"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-spreadsheet_src_spreadsheet_actions_show-hide_js-70fcc658"],{

/***/ "./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/actions/show-hide.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/actions/show-hide.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ShowHide: () => (/* binding */ ShowHide)\n/* harmony export */ });\n/* harmony import */ var _common_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/common/index.js\");\n/* harmony import */ var _workbook_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../workbook/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n\n\n\n\n\n\n\n\n/**\n * The `ShowHide` module is used to perform hide/show the rows and columns.\n *\n * @hidden\n */\nvar ShowHide = /** @class */ (function () {\n    /**\n     * Constructor for the Spreadsheet show hide module.\n     *\n     * @param {Spreadsheet} parent - Specify the spreadsheet instance.\n     * @private\n     */\n    function ShowHide(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    ShowHide.prototype.hideShow = function (args) {\n        var _this = this;\n        var sheetIndex = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(args.sheetIndex) ? this.parent.activeSheetIndex : args.sheetIndex;\n        var sheet = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getSheet)(this.parent, sheetIndex);\n        if (args.startIndex > args.endIndex) {\n            var temp = args.startIndex;\n            args.startIndex = args.endIndex;\n            args.endIndex = temp;\n        }\n        if (args.actionUpdate !== undefined) {\n            var range = args.isCol ? [0, args.startIndex, sheet.rowCount - 1, args.endIndex] :\n                [args.startIndex, 0, args.endIndex, sheet.colCount - 1];\n            if ((0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isReadOnlyCells)(this.parent, range)) {\n                if (args.actionUpdate) {\n                    this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_0__.readonlyAlert, null);\n                }\n                return;\n            }\n        }\n        var actionArgs;\n        if (args.actionUpdate) {\n            args.sheetIndex = sheetIndex;\n            actionArgs = { eventArgs: args, action: 'hideShow' };\n            this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_1__.beginAction, actionArgs);\n            if (args.cancel) {\n                return;\n            }\n            delete args.cancel;\n        }\n        if (args.hide) {\n            args.hiddenIndexes = [];\n        }\n        var performHideShow = function (updateViewport) {\n            if (args.isCol) {\n                _this.hideCol(args);\n                if (updateViewport) {\n                    _this.parent.sheetModule.colWidthChanged({ colIdx: args.startIndex, isHideShow: true });\n                }\n            }\n            else {\n                _this.hideRow(args);\n                if (updateViewport) {\n                    _this.parent.sheetModule.rowHeightChanged({ rowIdx: args.startIndex, isHideShow: true });\n                }\n            }\n        };\n        var freezePane = args.isCol ? this.parent.frozenColCount(sheet) : this.parent.frozenRowCount(sheet);\n        if (freezePane && args.startIndex < freezePane) {\n            var endIndex = void 0;\n            args.freezePane = true;\n            if (args.endIndex >= freezePane) {\n                endIndex = args.endIndex;\n                args.endIndex = freezePane - 1;\n            }\n            performHideShow(true);\n            delete args.freezePane;\n            if (endIndex !== undefined) {\n                var startIndex = args.startIndex;\n                args.endIndex = endIndex;\n                args.startIndex = freezePane;\n                performHideShow(!this.parent.scrollSettings.enableVirtualization);\n                args.startIndex = startIndex;\n            }\n        }\n        else {\n            performHideShow(!this.parent.scrollSettings.enableVirtualization);\n        }\n        if (args.actionUpdate) {\n            this.updateIndexOnlyForHiddenColumnsAndRows(args, sheet);\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_0__.completeAction, actionArgs);\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_0__.focus)(this.parent.element);\n        }\n    };\n    ShowHide.prototype.updateIndexOnlyForHiddenColumnsAndRows = function (args, sheet) {\n        var startIndex = args.startIndex;\n        var endIndex = args.endIndex;\n        var model;\n        for (var sIdx = args.startIndex; sIdx <= endIndex; sIdx++) {\n            model = args.isCol ? (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getColumn)(sheet, sIdx) : (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getRow)(sheet, sIdx) || {};\n            if (model.hidden === false) {\n                args.startIndex = sIdx;\n                break;\n            }\n        }\n        for (var eIdx = args.endIndex; eIdx >= startIndex; eIdx--) {\n            model = args.isCol ? (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getColumn)(sheet, eIdx) : (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getRow)(sheet, eIdx) || {};\n            if (model.hidden === false) {\n                args.endIndex = eIdx;\n                break;\n            }\n        }\n    };\n    ShowHide.prototype.hideRow = function (eventArgs) {\n        var _this = this;\n        var sheetIndex = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(eventArgs.sheetIndex) ? this.parent.activeSheetIndex : eventArgs.sheetIndex;\n        var sheet = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getSheet)(this.parent, sheetIndex);\n        var cell;\n        var count = 0;\n        var idx;\n        var nextIdx;\n        var merge;\n        var model;\n        var args = Object.assign({}, eventArgs);\n        var isFinite = this.parent.scrollSettings.isFinite && !args.freezePane;\n        var height;\n        if (isFinite) {\n            if (args.startIndex >= sheet.rowCount) {\n                return;\n            }\n            if (args.endIndex >= sheet.rowCount) {\n                args.endIndex = sheet.rowCount - 1;\n            }\n            height = 0;\n        }\n        var frozenRow = this.parent.frozenRowCount(sheet);\n        if (args.hide) {\n            var content = void 0;\n            var rowHdr_1;\n            var row = void 0;\n            var prevChartIndexes = [];\n            var currentChartIndexes = [];\n            var updateBtmIdx = isFinite && args.endIndex === (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, sheet.rowCount - 1, false);\n            for (var i = args.startIndex; i <= args.endIndex; i++) {\n                if ((0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isHiddenRow)(sheet, i)) {\n                    if (args.isFiltering && !(0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isFilterHidden)(sheet, i)) {\n                        (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.setRow)(sheet, i, { isFiltered: true });\n                    }\n                    continue;\n                }\n                if (idx === undefined) {\n                    if (args.freezePane) {\n                        rowHdr_1 = this.parent.sheetModule.getSelectAllTable();\n                        content = this.parent.getColHeaderTable();\n                    }\n                    else {\n                        rowHdr_1 = this.parent.getRowHeaderTable();\n                        content = this.parent.getContentTable();\n                    }\n                    idx = this.parent.getViewportIndex(i);\n                    count = 0;\n                }\n                model = { hidden: true };\n                if (args.isFiltering) {\n                    model.isFiltered = true;\n                }\n                if (!args.isFiltering) {\n                    prevChartIndexes = (0,_common_index__WEBPACK_IMPORTED_MODULE_0__.getChartsIndexes)(this.parent);\n                }\n                (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.setRow)(sheet, i, model);\n                if (!args.isFiltering) {\n                    currentChartIndexes = (0,_common_index__WEBPACK_IMPORTED_MODULE_0__.getChartsIndexes)(this.parent);\n                }\n                if (sheetIndex !== this.parent.activeSheetIndex) {\n                    continue;\n                }\n                if (isFinite) {\n                    height += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getRowHeight)(sheet, i, true, true);\n                }\n                this.refreshChart(i, 'rows');\n                if (!args.isFiltering) {\n                    this.refreshChartCellModel(prevChartIndexes, currentChartIndexes);\n                }\n                row = content && content.rows[idx];\n                if (row) {\n                    if (!merge) {\n                        for (var j = 0; j <= sheet.usedRange.colIndex; j++) {\n                            cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getCell)(i, j, sheet) || {};\n                            if ((cell.colSpan || cell.rowSpan) && (args.startIndex >= this.parent.viewport.topIndex ||\n                                this.parent.scrollSettings.enableVirtualization)) {\n                                merge = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (merge) {\n                        continue;\n                    }\n                    if (rowHdr_1.rows[idx]) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.detach)(rowHdr_1.rows[idx]);\n                    }\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.detach)(row);\n                    count++;\n                    row = content.rows[idx];\n                    if (row && i === args.endIndex) {\n                        var cell_1 = void 0;\n                        nextIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, i + 1, true);\n                        var first = nextIdx !== (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, 0, true) && nextIdx ===\n                            (this.parent.viewport.topIndex >= args.startIndex ? args.endIndex + 1 : this.parent.viewport.topIndex) ? 'Row' : '';\n                        for (var j = this.parent.viewport.leftIndex; j <= this.parent.viewport.rightIndex; j++) {\n                            var borderTop = this.parent.getCellStyleValue(['borderTop'], [nextIdx, j]).borderTop;\n                            if (borderTop !== '') {\n                                cell_1 = row.cells[j];\n                                this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_1__.applyCellFormat, {\n                                    onActionUpdate: false, rowIdx: nextIdx, colIdx: j,\n                                    style: { borderTop: borderTop }, row: row, pRow: row.previousElementSibling,\n                                    first: first, td: cell_1\n                                });\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (i <= this.parent.viewport.bottomIndex) {\n                        count++;\n                    }\n                    else {\n                        count--;\n                    }\n                }\n            }\n            if (args.refreshUI) {\n                return;\n            }\n            if (merge && (args.startIndex >= this.parent.viewport.topIndex || !this.parent.scrollSettings.enableVirtualization)) {\n                if (args.isFiltering) {\n                    eventArgs.refreshUI = true;\n                }\n                else {\n                    this.parent.selectRange(sheet.selectedRange);\n                    if (sheet.frozenRows || sheet.frozenColumns) {\n                        this.parent.renderModule.refreshSheet(false, false, true);\n                        eventArgs.refreshUI = true;\n                    }\n                    else {\n                        this.parent.renderModule.refreshUI({ rowIndex: this.parent.viewport.topIndex, colIndex: this.parent.viewport.leftIndex, refresh: 'Row' });\n                    }\n                }\n                return;\n            }\n            if (!count) {\n                return;\n            }\n            this.parent.selectRange(sheet.selectedRange);\n            var updateHideClass = function () {\n                if (sheet.showHeaders) {\n                    var firstIdx = args.freezePane ? 1 : 0;\n                    if (idx === firstIdx) {\n                        if (rowHdr_1.rows[firstIdx]) {\n                            rowHdr_1.rows[firstIdx].classList.add('e-hide-end');\n                        }\n                    }\n                    else {\n                        if (rowHdr_1 && rowHdr_1.rows[idx - 1]) {\n                            rowHdr_1.rows[idx - 1].classList.add('e-hide-start');\n                        }\n                        if (rowHdr_1 && rowHdr_1.rows[idx]) {\n                            rowHdr_1.rows[idx].classList.add('e-hide-end');\n                        }\n                    }\n                }\n            };\n            if (!args.freezePane && this.parent.scrollSettings.enableVirtualization) {\n                var startIndex = args.startIndex;\n                var endIndex = args.startIndex;\n                if (args.startIndex < (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getCellIndexes)(sheet.paneTopLeftCell)[0] || count > this.parent.viewport.rowCount) {\n                    if (args.isFiltering) {\n                        eventArgs.refreshUI = true;\n                        return;\n                    }\n                    this.parent.updateTopLeftCell((0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, args.startIndex - 1 < frozenRow ? frozenRow : args.startIndex - 1, true) - frozenRow, null, 'col');\n                    this.parent.renderModule.refreshSheet(false, false, true);\n                }\n                else {\n                    startIndex = this.parent.viewport.bottomIndex + 1;\n                    endIndex = startIndex + count - 1;\n                    var indexes = this.parent.skipHidden(startIndex, endIndex, 'rows', false);\n                    startIndex = indexes[0];\n                    endIndex = indexes[1];\n                    if (isFinite) {\n                        if (startIndex >= sheet.rowCount) {\n                            if (this.parent.viewport.topIndex + frozenRow === (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, frozenRow, true)) {\n                                updateHideClass();\n                                this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_0__.updateTranslate, { isHide: true, height: height });\n                                if (updateBtmIdx) {\n                                    this.parent.viewport.bottomIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, sheet.rowCount - 1, false);\n                                }\n                            }\n                            else {\n                                this.parent.renderModule.refreshSheet(false, false, true);\n                            }\n                            return;\n                        }\n                        else if (endIndex >= sheet.rowCount) {\n                            this.parent.renderModule.refreshSheet(false, false, true);\n                            return;\n                        }\n                        else {\n                            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_0__.updateTranslate, { isHide: true, height: height });\n                        }\n                    }\n                    this.parent.viewport.bottomIndex = endIndex;\n                    var colIndex = void 0;\n                    var frozenCol = this.parent.frozenColCount(sheet);\n                    var frozenIdxes = [];\n                    if (frozenCol) {\n                        frozenIdxes.push(frozenRow);\n                        frozenIdxes.push(this.parent.viewport.leftIndex + frozenCol);\n                        colIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getCellIndexes)(sheet.topLeftCell)[1];\n                    }\n                    else {\n                        colIndex = this.parent.viewport.leftIndex;\n                    }\n                    this.parent.renderModule.refreshUI({ colIndex: colIndex, rowIndex: startIndex, direction: '', refresh: 'RowPart', frozenIndexes: frozenIdxes }, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(startIndex, colIndex) + \":\" + (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(endIndex, this.parent.viewport.rightIndex));\n                }\n            }\n            updateHideClass();\n        }\n        else {\n            var hFrag = void 0;\n            var frag = void 0;\n            var hRow = void 0;\n            var row = void 0;\n            var newStartRow = void 0;\n            var rowRenderer = void 0;\n            var content = void 0;\n            var rowHdr = void 0;\n            var startRow = void 0;\n            var endRow = args.startIndex - 1;\n            var mergeCollection = [];\n            var skipDetach = args.freezePane;\n            var direction = 'lastElementChild';\n            var detachedHeight = 0;\n            var viewportTopIdx = this.parent.viewport.topIndex + frozenRow;\n            if (isFinite) {\n                var lastIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, sheet.rowCount - 1, false);\n                if (this.parent.viewport.bottomIndex === lastIdx) {\n                    if (viewportTopIdx === (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, frozenRow, true)) {\n                        skipDetach = true;\n                    }\n                    else {\n                        var topLeftCell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getRangeIndexes)(sheet.paneTopLeftCell)[0];\n                        var count_1 = (((sheet.rowCount - 1) - topLeftCell) + 1) -\n                            this.parent.hiddenCount(topLeftCell, sheet.rowCount - 1);\n                        if (count_1 < this.parent.viewport.rowCount + Math.round(this.parent.getThreshold('row') / 2)) {\n                            direction = 'firstElementChild';\n                        }\n                    }\n                }\n            }\n            var prevChartIndexes = (0,_common_index__WEBPACK_IMPORTED_MODULE_0__.getChartsIndexes)(this.parent);\n            for (var i = args.startIndex, len = args.endIndex; i <= len; i++) {\n                if (!(args.isFiltering ? (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isHiddenRow)(sheet, i) : (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isHiddenRow)(sheet, i) && !(0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isFilterHidden)(sheet, i))) {\n                    if (args.startIndex === args.endIndex) {\n                        return;\n                    }\n                    if (idx === undefined) {\n                        endRow++;\n                    }\n                    else {\n                        newStartRow = i;\n                    }\n                    continue;\n                }\n                if (newStartRow !== undefined) {\n                    len = i;\n                    continue;\n                }\n                model = { hidden: false };\n                if (args.isFiltering) {\n                    model.isFiltered = false;\n                }\n                if (!skipDetach && i > this.parent.viewport.bottomIndex) {\n                    (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.setRow)(sheet, i, model);\n                    if (startRow === undefined) {\n                        return;\n                    }\n                    continue;\n                }\n                if (startRow === undefined) {\n                    startRow = i;\n                }\n                (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.setRow)(sheet, i, model);\n                if (sheetIndex !== this.parent.activeSheetIndex) {\n                    continue;\n                }\n                if (isFinite) {\n                    height += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getRowHeight)(sheet, i, true, true);\n                }\n                this.refreshChart(i, 'rows');\n                if (idx === undefined) {\n                    hFrag = document.createDocumentFragment();\n                    frag = document.createDocumentFragment();\n                    rowRenderer = this.parent.serviceLocator.getService('row');\n                    if (args.freezePane) {\n                        rowHdr = this.parent.sheetModule.getSelectAllTable();\n                        content = this.parent.getColHeaderTable();\n                    }\n                    else {\n                        rowHdr = this.parent.getRowHeaderTable();\n                        content = this.parent.getContentTable();\n                        if (i < this.parent.viewport.topIndex + frozenRow) {\n                            this.parent.viewport.topIndex = i - frozenRow;\n                        }\n                    }\n                    idx = this.parent.getViewportIndex(i);\n                }\n                endRow++;\n                hRow = rowRenderer.refresh(i, null, null, true, true);\n                hFrag.appendChild(hRow);\n                if (rowHdr && rowHdr.rows.length && !skipDetach) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.detach)(rowHdr.tBodies[0][\"\" + direction]);\n                }\n                row = frag.appendChild(rowRenderer.refresh(i, row, hRow));\n                if (content && content.rows.length && !skipDetach) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.detach)(content.tBodies[0][\"\" + direction]);\n                    if (direction === 'firstElementChild') {\n                        if (idx !== undefined && idx - 1 > -1) {\n                            idx -= 1;\n                        }\n                        detachedHeight += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getRowHeight)(sheet, this.parent.viewport.topIndex, true);\n                        this.parent.viewport.topIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, this.parent.viewport.topIndex + 1, true);\n                    }\n                }\n                for (var j = this.parent.viewport.leftIndex; j <= this.parent.viewport.rightIndex; j++) {\n                    cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getCell)(i, j, sheet) || {};\n                    if (cell.rowSpan !== undefined || cell.colSpan !== undefined) {\n                        var mergeArgs = {\n                            range: [i, j, i, j], isAction: false, merge: true,\n                            type: 'All', skipChecking: true\n                        };\n                        this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_1__.activeCellMergedRange, mergeArgs);\n                        if (!mergeCollection.length || mergeArgs.range[1] !== mergeCollection[mergeCollection.length - 1].range[1] ||\n                            mergeArgs.range[0] !== mergeCollection[mergeCollection.length - 1].range[0]) {\n                            mergeCollection.push(mergeArgs);\n                        }\n                    }\n                }\n            }\n            var currentChartIndexes = (0,_common_index__WEBPACK_IMPORTED_MODULE_0__.getChartsIndexes)(this.parent);\n            this.refreshChartCellModel(prevChartIndexes, currentChartIndexes);\n            if (idx === undefined) {\n                return;\n            }\n            var refreshUI = void 0;\n            if (!args.freezePane) {\n                if (args.isFiltering && args.startIndex < (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getCellIndexes)(sheet.paneTopLeftCell)[0]) {\n                    eventArgs.refreshUI = true;\n                    if (newStartRow === undefined || newStartRow === args.endIndex) {\n                        return;\n                    }\n                }\n                var prevBottomIdx = this.parent.viewport.bottomIndex;\n                this.parent.viewport.bottomIndex = this.parent.viewport.topIndex + frozenRow + this.parent.viewport.rowCount +\n                    (this.parent.getThreshold('row') * 2);\n                var endHiddenCount = this.parent.hiddenCount(args.endIndex + 1, this.parent.viewport.bottomIndex);\n                count = this.parent.hiddenCount(this.parent.viewport.topIndex + frozenRow, args.startIndex) + endHiddenCount;\n                this.parent.viewport.bottomIndex += count;\n                if (isFinite && this.parent.viewport.bottomIndex >= sheet.rowCount) {\n                    this.parent.viewport.bottomIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, sheet.rowCount - 1, false);\n                }\n                if (!args.isFiltering && startRow >= viewportTopIdx && startRow <= prevBottomIdx && startRow >\n                    (this.parent.viewport.bottomIndex - endHiddenCount - Math.abs(endRow - startRow))) {\n                    refreshUI = true;\n                }\n            }\n            args.insertIdx = eventArgs.insertIdx = idx;\n            args.row = eventArgs.row = frag.querySelector('.e-row');\n            args.mergeCollection = eventArgs.mergeCollection = mergeCollection;\n            if (sheet.showHeaders) {\n                eventArgs.hdrRow = args.hdrRow = hFrag.querySelector('.e-row');\n                if (idx !== 0 && !(0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isHiddenRow)(sheet, endRow - 1) && rowHdr.rows[idx - 1]) {\n                    rowHdr.rows[idx - 1].classList.remove('e-hide-start');\n                }\n                if (args.startIndex !== 0 && (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isHiddenRow)(sheet, args.startIndex - 1)) {\n                    args.hdrRow.classList.add('e-hide-end');\n                }\n                if ((0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isHiddenRow)(sheet, endRow + 1)) {\n                    hFrag.lastElementChild.classList.add('e-hide-start');\n                }\n                else {\n                    if (rowHdr.rows[idx]) {\n                        rowHdr.rows[idx].classList.remove('e-hide-end');\n                    }\n                }\n            }\n            if (row && content && content.rows[idx]) {\n                nextIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, endRow + 1, true);\n                for (var i = this.parent.viewport.leftIndex; i <= this.parent.viewport.rightIndex; i++) {\n                    var borderTop = this.parent.getCellStyleValue(['borderTop'], [nextIdx, i]).borderTop;\n                    if (borderTop !== '') {\n                        this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_1__.applyCellFormat, {\n                            onActionUpdate: false, rowIdx: nextIdx, colIdx: i, style: { borderTop: borderTop }, pRow: row,\n                            td: content.rows[idx].cells[i], first: ''\n                        });\n                        var prevIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, startRow - 1, false);\n                        if (prevIdx > -1) {\n                            if (content.rows[idx - 1] && !this.parent.getCellStyleValue(['borderBottom'], [prevIdx, i]).borderBottom &&\n                                !this.parent.getCellStyleValue(['borderTop'], [startRow, i]).borderTop) {\n                                content.rows[idx - 1].cells[i].style.borderBottom = '';\n                            }\n                        }\n                        else {\n                            content.rows[idx].cells[i].style.borderTop = '';\n                        }\n                    }\n                }\n            }\n            if (args.skipAppend) {\n                return;\n            }\n            if (isFinite) {\n                this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_0__.updateTranslate, { height: height, size: detachedHeight });\n            }\n            if (refreshUI || (Math.abs(endRow - startRow) > this.parent.viewport.rowCount + (this.parent.getThreshold('row') * 2))) {\n                this.parent.renderModule.refreshSheet(false, false, true);\n            }\n            else {\n                if (rowHdr) {\n                    if (rowHdr.tBodies[0].rows.length) {\n                        rowHdr.tBodies[0].insertBefore(hFrag, rowHdr.rows[idx]);\n                    }\n                    else {\n                        rowHdr.tBodies[0].appendChild(hFrag);\n                    }\n                }\n                if (content && content.tBodies[0]) {\n                    if (content.tBodies[0].rows.length) {\n                        content.tBodies[0].insertBefore(frag, content.rows[idx]);\n                    }\n                    else {\n                        content.tBodies[0].appendChild(frag);\n                    }\n                }\n                this.parent.selectRange(sheet.selectedRange);\n                if (args.autoFit && sheet.showHeaders) {\n                    this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_0__.autoFit, { startIndex: args.startIndex, endIndex: args.endIndex, isRow: true });\n                }\n                mergeCollection.forEach(function (mergeArgs) { _this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_1__.setMerge, mergeArgs); });\n                if (newStartRow !== undefined && newStartRow !== args.endIndex) {\n                    args.startIndex = newStartRow;\n                    this.hideRow(args);\n                }\n            }\n        }\n    };\n    ShowHide.prototype.hideCol = function (args) {\n        var _this = this;\n        var sheetIndex = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(args.sheetIndex) ? this.parent.activeSheetIndex : args.sheetIndex;\n        var sheet = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getSheet)(this.parent, sheetIndex);\n        var hiddenIndex = [];\n        var beforeViewportIdx = [];\n        var paneTopLeftIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getCellIndexes)(sheet.paneTopLeftCell);\n        var frozenCol = this.parent.frozenColCount(sheet);\n        var frozenRow = this.parent.frozenRowCount(sheet);\n        var viewportLeftIdx = this.parent.viewport.leftIndex + frozenCol;\n        var scrollable;\n        var skipColCount = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, sheet.colCount - 1, false, 'columns');\n        for (var i = args.startIndex; i <= args.endIndex; i++) {\n            if (args.hide) {\n                if ((0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isHiddenCol)(sheet, i)) {\n                    continue;\n                }\n            }\n            else {\n                if (!(0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isHiddenCol)(sheet, i) || (args.hiddenIndexes && args.hiddenIndexes.indexOf(i) === -1)) {\n                    continue;\n                }\n            }\n            var prevChartIndexes = (0,_common_index__WEBPACK_IMPORTED_MODULE_0__.getChartsIndexes)(this.parent);\n            (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.setColumn)(sheet, i, { hidden: args.hide });\n            var currentChartIndexes = (0,_common_index__WEBPACK_IMPORTED_MODULE_0__.getChartsIndexes)(this.parent);\n            this.refreshChart(i, 'columns');\n            this.refreshChartCellModel(prevChartIndexes, currentChartIndexes);\n            if (this.parent.scrollSettings.enableVirtualization && !args.freezePane && (i < viewportLeftIdx ||\n                (i > this.parent.viewport.rightIndex && (!this.parent.scrollSettings.isFinite ||\n                    !(skipColCount === this.parent.viewport.rightIndex && i >= skipColCount && i < sheet.colCount))))) {\n                if (i < viewportLeftIdx) {\n                    beforeViewportIdx.push(i);\n                }\n                continue;\n            }\n            hiddenIndex.push(i);\n            if (args.hide) {\n                args.hiddenIndexes.push(i);\n                if (i <= paneTopLeftIdx[1]) {\n                    scrollable = true;\n                }\n            }\n        }\n        if (!beforeViewportIdx.length && !hiddenIndex.length) {\n            return;\n        }\n        if (sheetIndex !== this.parent.activeSheetIndex) {\n            return;\n        }\n        var topLeftIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getCellIndexes)(sheet.topLeftCell);\n        var table;\n        var hTable;\n        var getRowIndexes = function () {\n            var idx;\n            if (_this.parent.scrollSettings.enableVirtualization) {\n                idx = [frozenRow ? topLeftIdx[0] : _this.parent.viewport.topIndex, _this.parent.viewport.bottomIndex];\n            }\n            else {\n                idx = [0, sheet.rowCount - 1];\n            }\n            if (args.freezePane) {\n                table = _this.parent.getRowHeaderTable();\n                hTable = _this.parent.sheetModule.getSelectAllTable();\n            }\n            else {\n                table = _this.parent.getContentTable();\n                hTable = _this.parent.getColHeaderTable();\n            }\n            return idx;\n        };\n        if (args.hide) {\n            if (!hiddenIndex.length) {\n                return;\n            }\n            if (hiddenIndex.length <= this.parent.getThreshold('col') || !this.parent.scrollSettings.enableVirtualization ||\n                args.freezePane) {\n                this.removeCell(sheet, hiddenIndex, getRowIndexes(), table, hTable);\n            }\n            if (!args.freezePane && this.parent.scrollSettings.enableVirtualization) {\n                if (scrollable) {\n                    this.parent.updateTopLeftCell(null, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, hiddenIndex[0] - 1 < frozenCol ? frozenCol : hiddenIndex[0] - 1, true, 'columns') -\n                        frozenCol, 'row');\n                    this.parent.renderModule.refreshSheet(false, false, true);\n                    return;\n                }\n                var fIndexes = [];\n                var viewportRowIdx = this.parent.viewport.topIndex;\n                var rowIdx = frozenRow ? topLeftIdx[0] : viewportRowIdx;\n                if (frozenRow) {\n                    fIndexes = [frozenRow + viewportRowIdx, frozenCol];\n                }\n                if (this.parent.scrollSettings.isFinite) {\n                    var colCount = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, sheet.colCount - 1, false, 'columns');\n                    var startIdx = this.parent.viewport.leftIndex + frozenCol;\n                    var endIndex = this.parent.viewport.rightIndex;\n                    if (endIndex + hiddenIndex.length >= colCount) {\n                        var index = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, startIdx - ((endIndex + hiddenIndex.length) - colCount), false, 'columns');\n                        if (index >= frozenCol) {\n                            this.parent.viewport.leftIndex = index;\n                            this.parent.viewport.leftIndex -= this.parent.hiddenCount(endIndex, colCount);\n                        }\n                        this.parent.viewport.rightIndex = colCount;\n                        if (startIdx !== (this.parent.viewport.leftIndex + frozenCol) || endIndex !== this.parent.viewport.rightIndex) {\n                            this.parent.renderModule.refreshUI({ colIndex: this.parent.viewport.leftIndex, refresh: 'Column', frozenIndexes: fIndexes, rowIndex: rowIdx,\n                                skipUpdateOnFirst: this.parent.viewport.leftIndex + frozenCol === (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, frozenCol, true, 'columns') });\n                            if (frozenRow) {\n                                this.parent.viewport.topIndex = viewportRowIdx;\n                            }\n                        }\n                        else {\n                            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_0__.updateTableWidth, { refresh: 'Column', isUpdate: true });\n                        }\n                        this.parent.selectRange(sheet.selectedRange);\n                        return;\n                    }\n                }\n                if (hiddenIndex.length <= this.parent.getThreshold('col')) {\n                    var indexes = this.parent.skipHidden(this.parent.viewport.rightIndex + 1, this.parent.viewport.rightIndex + hiddenIndex.length, 'columns');\n                    this.parent.viewport.rightIndex = indexes[1];\n                    this.parent.renderModule.refreshUI({ rowIndex: rowIdx, colIndex: indexes[0], direction: '', refresh: 'ColumnPart', frozenIndexes: fIndexes }, \"\" + (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getRangeAddress)([rowIdx, indexes[0], this.parent.viewport.bottomIndex, indexes[1]]));\n                }\n                else {\n                    this.parent.renderModule.refreshUI({\n                        skipUpdateOnFirst: this.parent.viewport.leftIndex + frozenCol === (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, frozenCol, true, 'columns'), rowIndex: rowIdx, colIndex: this.parent.viewport.leftIndex,\n                        refresh: 'Column', frozenIndexes: fIndexes\n                    });\n                    if (frozenRow) {\n                        this.parent.viewport.topIndex = viewportRowIdx;\n                    }\n                }\n            }\n            this.parent.selectRange(sheet.selectedRange);\n        }\n        else {\n            if (beforeViewportIdx.length && this.parent.scrollSettings.enableVirtualization) {\n                beforeViewportIdx.sort(function (i, j) { return i - j; });\n                var leftIdx = beforeViewportIdx[0] - 1 < frozenCol ? frozenCol : beforeViewportIdx[0] - 1;\n                this.parent.updateTopLeftCell(null, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, leftIdx, true, 'columns') - frozenCol, 'row');\n                this.parent.renderModule.refreshSheet(false, false, true);\n                if (args.autoFit) {\n                    args.autoFit = false;\n                }\n                return;\n            }\n            if ((!this.parent.scrollSettings.isFinite || this.parent.viewport.rightIndex < skipColCount) &&\n                (hiddenIndex.length <= this.parent.getThreshold('col') || !this.parent.scrollSettings.enableVirtualization\n                    || args.freezePane)) {\n                this.appendCell(sheet, hiddenIndex, getRowIndexes(), table, hTable, args.freezePane);\n                if (this.parent.scrollSettings.enableVirtualization && !args.freezePane) {\n                    this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_0__.virtualContentLoaded, { refresh: 'Column', prevRowColCnt: { rowCount: sheet.rowCount, colCount: sheet.colCount } });\n                }\n                this.parent.selectRange(sheet.selectedRange);\n            }\n            else {\n                this.parent.renderModule.refreshSheet(false, false, true);\n            }\n        }\n    };\n    ShowHide.prototype.removeCell = function (sheet, indexes, rowIdxs, table, hTable) {\n        var _this = this;\n        var startIdx = rowIdxs[0];\n        var endIdx = rowIdxs[1];\n        var rowIdx = 0;\n        var len = indexes.length - 1;\n        var frozenRow = this.parent.frozenRowCount(sheet);\n        var colgrp = table.getElementsByTagName('colgroup')[0];\n        var cellIdx = this.parent.getViewportIndex(indexes[0], true) + 1;\n        var lastFreezeRow = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, frozenRow - 1, false);\n        var hRow;\n        var row;\n        var hColgrp;\n        var cell;\n        var nextIdx;\n        if (sheet.showHeaders) {\n            hColgrp = hTable.getElementsByTagName('colgroup')[0];\n            hRow = hTable.rows[0];\n        }\n        while (startIdx <= endIdx) {\n            if ((0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isHiddenRow)(sheet, startIdx)) {\n                startIdx++;\n                continue;\n            }\n            row = frozenRow && startIdx < frozenRow ? hTable.rows[rowIdx + 1] : table.rows[rowIdx];\n            indexes.forEach(function (idx, index) {\n                if (rowIdx === 0 && startIdx >= frozenRow) {\n                    if (sheet.showHeaders) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.detach)(hColgrp.children[cellIdx]);\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.detach)(hRow.cells[cellIdx]);\n                    }\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.detach)(colgrp.children[cellIdx]);\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.detach)(row.cells[cellIdx]);\n                if (index === 0) {\n                    cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getCell)(startIdx, idx, sheet, false, true);\n                    if ((cell.colSpan !== undefined && (cell.rowSpan === undefined || cell.colSpan > 1)) || (cell.rowSpan < 0 &&\n                        startIdx - 1 > -1 && (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isHiddenRow)(sheet, startIdx - 1) && Math.abs(cell.rowSpan) ===\n                        _this.parent.hiddenCount(startIdx + cell.rowSpan, startIdx, 'rows', sheet))) {\n                        _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_0__.hiddenMerge, { rowIdx: startIdx, colIdx: idx, model: 'col', start: indexes[0], end: indexes[len] });\n                    }\n                }\n                if (index === len) {\n                    nextIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, idx + 1, true, 'columns');\n                    var borderLeft = _this.parent.getCellStyleValue(['borderLeft'], [rowIdx, nextIdx]).borderLeft;\n                    if (borderLeft !== '') {\n                        _this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_1__.applyCellFormat, {\n                            onActionUpdate: false, rowIdx: rowIdx, colIdx: nextIdx,\n                            style: { borderLeft: borderLeft }, row: row, first: ''\n                        });\n                    }\n                    cell = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getCell)(startIdx, idx, sheet) || {};\n                    if ((cell.colSpan !== undefined && (cell.rowSpan === undefined || cell.colSpan > 1)) || (cell.rowSpan < 0 &&\n                        startIdx - 1 > -1 && (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isHiddenRow)(sheet, startIdx - 1) && Math.abs(cell.rowSpan) ===\n                        _this.parent.hiddenCount(startIdx + cell.rowSpan, startIdx, 'rows', sheet))) {\n                        _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_0__.hiddenMerge, {\n                            rowIdx: startIdx, colIdx: idx, model: 'col',\n                            start: indexes[0], end: indexes[len], isEnd: true\n                        });\n                    }\n                }\n            });\n            if (frozenRow && startIdx === lastFreezeRow) {\n                rowIdx = 0;\n                startIdx = this.parent.viewport.topIndex + frozenRow;\n            }\n            else {\n                rowIdx++;\n                startIdx++;\n            }\n        }\n        if (cellIdx - 1 > -1 && sheet.showHeaders && hRow.cells[cellIdx - 1]) {\n            hRow.cells[cellIdx - 1].classList.add('e-hide-start');\n        }\n        if (sheet.showHeaders && hRow.cells[cellIdx]) {\n            hRow.cells[cellIdx].classList.add('e-hide-end');\n        }\n    };\n    ShowHide.prototype.appendCell = function (sheet, indexes, rowIdxs, table, hTable, skip) {\n        var _this = this;\n        var startIdx = rowIdxs[0];\n        var endIdx = rowIdxs[1];\n        var rowIdx = 0;\n        var len = indexes.length - 1;\n        var hRow;\n        var row;\n        var hColgrp;\n        var prevIdx;\n        var frozenRow = this.parent.frozenRowCount(sheet);\n        var colgrp = table.getElementsByTagName('colgroup')[0];\n        if (sheet.showHeaders) {\n            hColgrp = hTable.getElementsByTagName('colgroup')[0];\n            hRow = hTable.rows[0];\n        }\n        var cellRenderer = this.parent.serviceLocator.getService('cell');\n        indexes.sort(function (i, j) { return i - j; });\n        var mergeCollection = [];\n        var cellIdx = [];\n        var cell;\n        var refCell;\n        var cellModel;\n        var firstFrozenRow = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, frozenRow - 1, false);\n        var cellArgs;\n        while (startIdx <= endIdx) {\n            if ((0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isHiddenRow)(sheet, startIdx)) {\n                startIdx++;\n                continue;\n            }\n            row = frozenRow && startIdx < frozenRow ? hTable.rows[rowIdx + 1] : table.rows[rowIdx];\n            indexes.forEach(function (idx, index) {\n                if (rowIdx === 0) {\n                    cellIdx[index] = _this.parent.getViewportIndex(idx, true);\n                    if (sheet.showHeaders) {\n                        refCell = hRow.cells[cellIdx[index]];\n                        if (refCell) {\n                            if (index === 0 && indexes[index] && !(0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isHiddenCol)(sheet, indexes[index] - 1) &&\n                                refCell.previousSibling) {\n                                refCell.previousElementSibling.classList.remove('e-hide-start');\n                            }\n                            if (index === len) {\n                                refCell.classList.remove('e-hide-end');\n                            }\n                        }\n                    }\n                    if (startIdx >= frozenRow) {\n                        if (colgrp.children[cellIdx[index]]) {\n                            colgrp.insertBefore(_this.parent.sheetModule.updateCol(sheet, idx), colgrp.children[cellIdx[index]]);\n                            if (sheet.showHeaders) {\n                                cellRenderer.renderColHeader(idx, hRow, refCell);\n                            }\n                        }\n                        else {\n                            colgrp.appendChild(_this.parent.sheetModule.updateCol(sheet, idx));\n                            if (sheet.showHeaders) {\n                                cellRenderer.renderColHeader(idx, hRow);\n                            }\n                        }\n                        if (!skip) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.detach)(colgrp.lastChild);\n                            if (sheet.showHeaders) {\n                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.detach)(hRow.lastChild);\n                            }\n                        }\n                        if (sheet.showHeaders && index === len) {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.detach)(hColgrp);\n                            hTable.insertBefore(colgrp.cloneNode(true), hTable.tHead);\n                        }\n                    }\n                }\n                if (!skip) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.detach)(row.lastChild);\n                }\n                refCell = row.cells[cellIdx[index]];\n                cellArgs = {\n                    rowIdx: startIdx, colIdx: idx, cell: (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getCell)(startIdx, idx, sheet), row: row,\n                    address: (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getCellAddress)(startIdx, idx), lastCell: idx === len, isHeightCheckNeeded: true,\n                    first: idx !== (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, 0, true, 'columns') && idx === _this.parent.viewport.leftIndex ? 'Column' : '',\n                    checkNextBorder: index === len ? 'Column' : '', checkCF: true\n                };\n                if (refCell) {\n                    cellArgs.refChild = refCell;\n                }\n                cell = cellRenderer.render(cellArgs);\n                if (index === 0 && cell.previousSibling) {\n                    var borderLeft = _this.parent.getCellStyleValue(['borderLeft'], [rowIdx, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, indexes[indexes.length - 1] + 1, true, 'columns')]).borderLeft;\n                    if (borderLeft !== '') {\n                        prevIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, indexes[0] - 1, false, 'columns');\n                        if (prevIdx > -1 && !_this.parent.getCellStyleValue(['borderRight'], [rowIdx, prevIdx]).borderRight &&\n                            !_this.parent.getCellStyleValue(['borderLeft'], [rowIdx, indexes[0]]).borderLeft) {\n                            cell.previousSibling.style.borderRight = '';\n                        }\n                    }\n                }\n                cellModel = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.getCell)(startIdx, idx, sheet) || {};\n                if ((cellModel.colSpan !== undefined && (cellModel.rowSpan === undefined || cellModel.colSpan > 1)) ||\n                    (cellModel.rowSpan < 0 && startIdx - 1 > -1 && (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.isHiddenRow)(sheet, startIdx - 1) &&\n                        Math.abs(cellModel.rowSpan) === _this.parent.hiddenCount(startIdx + cellModel.rowSpan, startIdx, 'rows', sheet))) {\n                    var mergeArgs = {\n                        range: [startIdx, idx, startIdx, idx], isAction: false, merge: true,\n                        type: 'All', skipChecking: true\n                    };\n                    _this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_1__.activeCellMergedRange, mergeArgs);\n                    if (!mergeCollection.length || mergeArgs.range[1] !== mergeCollection[mergeCollection.length - 1].range[1] ||\n                        mergeArgs.range[0] !== mergeCollection[mergeCollection.length - 1].range[0]) {\n                        mergeCollection.push(mergeArgs);\n                    }\n                }\n            });\n            if (frozenRow && startIdx === firstFrozenRow) {\n                startIdx = this.parent.viewport.topIndex + frozenRow;\n                rowIdx = 0;\n            }\n            else {\n                startIdx++;\n                rowIdx++;\n            }\n        }\n        mergeCollection.forEach(function (mergeArgs) { _this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_1__.setMerge, mergeArgs); });\n        this.parent.viewport.rightIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_1__.skipHiddenIdx)(sheet, this.parent.viewport.rightIndex - indexes.length, false, 'columns');\n    };\n    ShowHide.prototype.refreshChart = function (index, showHide) {\n        this.parent.notify(_workbook_index__WEBPACK_IMPORTED_MODULE_1__.refreshChart, { rIdx: index, showHide: showHide });\n    };\n    ShowHide.prototype.refreshChartCellModel = function (prevChartIndexes, currentChartIndexes) {\n        this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_0__.refreshChartCellModel, { prevChartIndexes: prevChartIndexes, currentChartIndexes: currentChartIndexes });\n    };\n    ShowHide.prototype.addEventListener = function () {\n        this.parent.on(_workbook_index__WEBPACK_IMPORTED_MODULE_1__.hideShow, this.hideShow, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_0__.spreadsheetDestroyed, this.destroy, this);\n    };\n    ShowHide.prototype.destroy = function () {\n        this.removeEventListener();\n        this.parent = null;\n    };\n    ShowHide.prototype.removeEventListener = function () {\n        this.parent.off(_workbook_index__WEBPACK_IMPORTED_MODULE_1__.hideShow, this.hideShow);\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_0__.spreadsheetDestroyed, this.destroy);\n    };\n    return ShowHide;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/actions/show-hide.js?");

/***/ })

}]);