"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_dialogs_-f852f5c7"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/list-dialog.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/list-dialog.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ListDialog: () => (/* binding */ ListDialog)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _format_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../format/index */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/format/index.js\");\n/* harmony import */ var _list_abstract_list__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../list/abstract-list */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/list/abstract-list.js\");\n/* harmony import */ var _list_level_override__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../list/level-override */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/list/level-override.js\");\n/* harmony import */ var _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\");\n/* harmony import */ var _list_view_model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./list-view-model */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/list-view-model.js\");\n\n\n\n\n\n\n\n\n\n/**\n * The List dialog is used to create or modify lists.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar ListDialog = /** @class */ (function () {\n    /**\n     * @param {DocumentHelper} documentHelper - Specifies the document helper.\n     * @private\n     */\n    function ListDialog(documentHelper) {\n        var _this = this;\n        /**\n         * @private\n         */\n        this.dialog = undefined;\n        this.target = undefined;\n        /**\n         * @private\n         */\n        this.documentHelper = undefined;\n        this.viewModel = undefined;\n        this.startAt = undefined;\n        this.textIndent = undefined;\n        this.alignedAt = undefined;\n        this.listLevelElement = undefined;\n        this.followNumberWith = undefined;\n        this.numberStyle = undefined;\n        this.numberFormat = undefined;\n        this.restartBy = undefined;\n        this.startedValueChangedClickHandler = this.onStartedValueChangedClick.bind(this);\n        this.textIndentChangedClickHandler = this.onTextIndentChangedClick.bind(this);\n        this.alignedAtValueChangedClickHandler = this.onAlignedAtValueChangedClick.bind(this);\n        this.numberFormatChangedClickHandler = this.onNumberFormatChangedClick.bind(this);\n        /**\n         * @private\n         */\n        this.isListCharacterFormat = false;\n        /**\n         * @private\n         * @param {ChangeEventArgs} args - Specifies the change event args.\n         * @returns {void}\n         */\n        this.onTextIndentChanged = function (args) {\n            if (!args.isInteracted) {\n                return;\n            }\n            _this.viewModel.listLevel.paragraphFormat.leftIndent = args.value;\n        };\n        /**\n         * @private\n         * @param {ChangeEventArgs} args - Specifies the change event args.\n         * @returns {void}\n         */\n        this.onStartValueChanged = function (args) {\n            if (!args.isInteracted) {\n                return;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(_this.viewModel) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(_this.viewModel.listLevel)) {\n                _this.viewModel.listLevel.startAt = args.value;\n            }\n        };\n        /**\n         * @private\n         * @param {ChangeEventArgs} args - Specifies the change event args.\n         * @returns {void}\n         */\n        this.onListLevelValueChanged = function (args) {\n            _this.viewModel.levelNumber = parseInt(args.value.slice(args.value.length - 1), 10) - 1;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(_this.listLevel)) {\n                return;\n            }\n            _this.updateDialogValues();\n            _this.updateRestartLevelBox();\n        };\n        /**\n         * @private\n         * @param {any} args - Specifies the change event args.\n         * @returns {void}\n         */\n        this.onNumberFormatChanged = function (args) {\n            _this.viewModel.listLevel.numberFormat = args.target.value;\n        };\n        /**\n         * @private\n         * @param {ChangeEventArgs} args - Specifies the change event args.\n         * @returns {void}\n         */\n        this.onAlignedAtValueChanged = function (args) {\n            if (!args.isInteracted) {\n                return;\n            }\n            _this.viewModel.listLevel.paragraphFormat.firstLineIndent =\n                _this.alignedAt.value - _this.viewModel.listLevel.paragraphFormat.leftIndent;\n        };\n        /**\n         * @private\n         * @param {ChangeEventArgs} args - Specifies the change event args.\n         * @returns {void}\n         */\n        this.onFollowCharacterValueChanged = function (args) {\n            if (args.isInteracted) {\n                _this.viewModel.followCharacter = args.value;\n            }\n        };\n        /**\n         * @private\n         * @param {ChangeEventArgs} args - Specifies the change event args.\n         * @returns {void}\n         */\n        this.onLevelPatternValueChanged = function (args) {\n            if (!args.isInteracted) {\n                return;\n            }\n            _this.viewModel.listLevelPattern = args.value;\n            var numberFormat = '%' + (_this.levelNumber + 1).toString();\n            var numberFormatTextBox = document.getElementById(_this.documentHelper.owner.containerId + '_numberFormat');\n            if (_this.listLevel.listLevelPattern === 'Bullet') {\n                _this.listLevel.numberFormat = String.fromCharCode(61623);\n                numberFormatTextBox.value = _this.listLevel.numberFormat;\n            }\n            else {\n                if (_this.listLevel.listLevelPattern === 'None') {\n                    _this.listLevel.numberFormat = '';\n                }\n                if (!_this.listLevel.numberFormat.match(numberFormat) && _this.listLevel.listLevelPattern !== 'None') {\n                    _this.listLevel.numberFormat = numberFormat + '.';\n                }\n                numberFormatTextBox.value = _this.listLevel.numberFormat;\n            }\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.loadListDialog = function () {\n            _this.documentHelper.updateFocus();\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(_this.documentHelper.owner)) {\n                return;\n            }\n            _this.viewModel = new _list_view_model__WEBPACK_IMPORTED_MODULE_7__.ListViewModel();\n            _this.viewModel.dialog = _this;\n            if (_this.documentHelper.selection.paragraphFormat.listLevelNumber > 0) {\n                _this.viewModel.levelNumber = _this.documentHelper.selection.paragraphFormat.listLevelNumber;\n            }\n            _this.viewModel.list = _this.documentHelper.selection.paragraphFormat.getList();\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(_this.listLevel)) {\n                return;\n            }\n            _this.updateDialogValues();\n            if (_this.documentHelper.selection.caret.style.display !== 'none') {\n                _this.documentHelper.selection.caret.style.display = 'none';\n            }\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.showFontDialog = function () {\n            _this.documentHelper.owner.fontDialogModule.showFontDialog(_this.listLevel.characterFormat, true);\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.onApplyList = function () {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(_this.owner)) {\n                _this.documentHelper.selection.paragraphFormat.setList(_this.list, true);\n            }\n            _this.documentHelper.dialog2.hide();\n            _this.documentHelper.updateFocus();\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.onCancelButtonClick = function () {\n            _this.disposeBindingForListUI();\n            _this.documentHelper.dialog2.hide();\n            _this.documentHelper.updateFocus();\n            _this.isListCharacterFormat = false;\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.closeListDialog = function () {\n            _this.disposeBindingForListUI();\n            _this.documentHelper.updateFocus();\n            _this.isListCharacterFormat = false;\n        };\n        this.documentHelper = documentHelper;\n        this.viewModel = new _list_view_model__WEBPACK_IMPORTED_MODULE_7__.ListViewModel();\n    }\n    Object.defineProperty(ListDialog.prototype, \"listLevel\", {\n        /**\n         * @private\n         * @returns {WListLevel} Returns list level\n         */\n        get: function () {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.viewModel)) {\n                return this.viewModel.listLevel;\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ListDialog.prototype, \"list\", {\n        /**\n         * @private\n         * @returns {WList} Returns list\n         */\n        get: function () {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.viewModel)) {\n                return this.viewModel.list;\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ListDialog.prototype, \"levelNumber\", {\n        /**\n         * @private\n         * @returns {number} Returns level number\n         */\n        get: function () {\n            if (this.listLevel.ownerBase instanceof _list_level_override__WEBPACK_IMPORTED_MODULE_4__.WLevelOverride) {\n                return this.listLevel.ownerBase.levelNumber;\n                /* eslint-disable-next-line max-len */\n            }\n            else if (this.listLevel.ownerBase instanceof _list_abstract_list__WEBPACK_IMPORTED_MODULE_3__.WAbstractList && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.listLevel.ownerBase.levels)) {\n                return this.listLevel.ownerBase.levels.indexOf(this.listLevel);\n            }\n            else {\n                return -1;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ListDialog.prototype, \"owner\", {\n        get: function () {\n            return this.documentHelper.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * @returns {string} Returns module name\n     */\n    ListDialog.prototype.getModuleName = function () {\n        return 'ListDialog';\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    ListDialog.prototype.showListDialog = function () {\n        var locale = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.L10n('documenteditor', this.documentHelper.owner.defaultLocale);\n        locale.setLocale(this.documentHelper.owner.locale);\n        var bindEvent = false;\n        if (!this.target) {\n            this.initListDialog(locale, this.documentHelper.owner.enableRtl);\n            bindEvent = true;\n        }\n        this.isListCharacterFormat = true;\n        this.documentHelper.dialog2.header = locale.getConstant('Define new Multilevel list');\n        this.documentHelper.dialog2.height = 'auto';\n        this.documentHelper.dialog2.width = 'auto';\n        this.documentHelper.dialog2.content = this.target;\n        var buttonClass;\n        var isRtl = this.documentHelper.owner.enableRtl;\n        if (isRtl) {\n            buttonClass = 'e-flat e-list-dlg-font e-de-dlg-target.e-de-rtl e-font-rtl';\n        }\n        else {\n            buttonClass = 'e-flat e-list-dlg-font e-font';\n        }\n        this.documentHelper.dialog2.buttons = [{\n                click: this.showFontDialog,\n                buttonModel: { content: locale.getConstant('Font'), cssClass: buttonClass }\n            }, {\n                click: this.onApplyList,\n                buttonModel: { content: locale.getConstant('Ok'), cssClass: 'e-flat e-list-dlg', isPrimary: true }\n            },\n            {\n                click: this.onCancelButtonClick,\n                buttonModel: { content: locale.getConstant('Cancel'), cssClass: 'e-flat e-list-dlg' }\n            }];\n        var dialogElement = this.documentHelper.dialog2.element;\n        this.documentHelper.dialog2.dataBind();\n        if (bindEvent) {\n            this.wireAndBindEvent(locale, isRtl);\n        }\n        this.documentHelper.dialog2.beforeOpen = this.loadListDialog;\n        this.documentHelper.dialog2.close = this.closeListDialog;\n        this.documentHelper.dialog2.position = { X: 'center', Y: 'top' };\n        this.documentHelper.dialog2.show();\n    };\n    /**\n     * Shows the table properties dialog\n     *\n     * @private\n     * @param {L10n} locale - Specifies the locale value\n     * @param {boolean} isRtl - Specifies the is rtl\n     * @returns {void}\n     */\n    ListDialog.prototype.initListDialog = function (locale, isRtl) {\n        var containerId = this.documentHelper.owner.containerId;\n        var id = containerId + '_insert_list';\n        this.target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: id, className: 'e-de-list-dlg' });\n        this.listLevelDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { innerHTML: '<label id=\"' + containerId + '_listLevellabel\" style=\"display:block;\" class=e-de-list-ddl-header-list-level>' + locale.getConstant('List level') + '</label><label id=\"' + containerId + '_modifyLabel\" style=\"display:block;\" class=e-de-list-ddl-subheader>' + locale.getConstant('Choose level to modify') + '</label><select style=\"height:20px;width:43%\" id=\"' + containerId + '_listLevel\"><option>' + locale.getConstant('Level') + ' 1' + '</option><option>' + locale.getConstant('Level') + ' 2' + '</option><option>' + locale.getConstant('Level') + ' 3' + '</option><option>' + locale.getConstant('Level') + ' 4' + '</option><option>' + locale.getConstant('Level') + ' 5' + '</option><option>' + locale.getConstant('Level') + ' 6' + '</option><option>' + locale.getConstant('Level') + ' 7' + '</option><option>' + locale.getConstant('Level') + ' 8' + '</option><option>' + locale.getConstant('Level') + ' 9' + '</option></select>' });\n        this.target.appendChild(this.listLevelDiv);\n        this.div = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div');\n        var divStyle;\n        if (isRtl) {\n            divStyle = '<div style=\"float:right;display:block;width:241px;\">';\n        }\n        else {\n            divStyle = '<div style=\"float:left;display:block;\">';\n        }\n        this.numberStyleDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { innerHTML: divStyle + '<label id=\"' + containerId + '_numberFormatLabel\" style=\"display:block;\" class=e-de-list-ddl-header>' + locale.getConstant('Number format') + '</label><label id=\"' + containerId + '_numberStyleLabel\" style=\"display:block;\" class=e-de-list-ddl-subheader>' + locale.getConstant('Number style for this level') + '</label><select style=\"height:20px;width:100%\" id=\"' + containerId + '_numberStyle\"><option>' + locale.getConstant('Arabic') + '</option><option>' + locale.getConstant('UpRoman') + '</option><option>' + locale.getConstant('LowRoman') + '</option><option>' + locale.getConstant('UpLetter') + '</option><option>' + locale.getConstant('LowLetter') + '</option><option>' + locale.getConstant('Number') + '</option><option>' + locale.getConstant('Leading zero') + '</option><option>' + locale.getConstant('Bullet') + '</option><option>' + locale.getConstant('Ordinal') + '</option><option>' + locale.getConstant('Ordinal Text') + '</option><option>' + locale.getConstant('Special') + '</option><option>' + locale.getConstant('For East') + '</option></select><label id=\"' + containerId + '_startAtLabel\" style=\"display:block;\" class=e-de-list-ddl-subheaderbottom>' + locale.getConstant('Start at') + '</label><input type=\"text\" id=\"' + containerId + '_startAt\">' });\n        this.div.appendChild(this.numberStyleDiv);\n        this.numberFormatDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'e-de-list-dlg-subdiv', innerHTML: '<div><div><label id=\"' + containerId + '_formatLabel\" style=\"display:inline-block;width:86%\" class=e-de-list-ddl-subheader>' + locale.getConstant('Enter formatting for number') + '</label><button type=\"button\" id=\"' + containerId + '_list_info\" class=\"e-control e-btn e-primary e-de-list-format-info\">i</button></div><input style=width:180px; type=\"text\" id=\"' + containerId + '_numberFormat\" aria-label=\"numberFormat\" class=e-input></div><label id=\"' + containerId + '_restartLabel\" style=\"display:block;\" class=e-de-list-ddl-subheaderbottom>' + locale.getConstant('Restart list after') + '</label><select style=\"height:20px;width:100%\" id=\"' + containerId + '_restartBy\"><option>' + locale.getConstant('No Restart') + '</option></select></div>' });\n        this.div.appendChild(this.numberFormatDiv);\n        this.target.appendChild(this.div);\n        var indentsDivLabelStyle;\n        if (isRtl) {\n            indentsDivLabelStyle = 'display:block;position:relative; ';\n        }\n        else {\n            indentsDivLabelStyle = 'display:block; ';\n        }\n        this.indentsDiv = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { innerHTML: divStyle + '<label id=\"' + containerId + '_IndentsLabel\" style=' + indentsDivLabelStyle + 'class=e-de-list-ddl-header>' + locale.getConstant('Position') + '</label><label id=\"' + containerId + '_textIndentLabel\" style=' + indentsDivLabelStyle + 'class=e-de-list-ddl-subheader>' + locale.getConstant('Text indent at') + '</label><input type=\"text\" id=\"' + containerId + '_textIndent\"><label id=\"' + containerId + '_followCharacterLabel\" style=' + indentsDivLabelStyle + 'class=e-de-list-ddl-subheaderbottom>' + locale.getConstant('Follow number with') + '</label><select style=\"height:20px;width:100%\" id=\"' + containerId + '_followCharacter\"><option>' + locale.getConstant('Tab character') + '</option><option>' + locale.getConstant('Space') + '</option><option>' + locale.getConstant('Nothing') + '</option></select></div><div id=\"e-de-list-dlg-div\" class=\"e-de-list-dlg-div\"><label id=\"' + containerId + '_alignedAtLabel\" style=\"display:block;\" class=e-de-list-ddl-subheader>' + locale.getConstant('Aligned at') + '</label><input type=\"text\" id=\"' + containerId + '_alignedAt\"></div>' });\n        this.target.appendChild(this.indentsDiv);\n    };\n    ListDialog.prototype.wireAndBindEvent = function (locale, isRtl) {\n        var containerId = this.documentHelper.owner.containerId;\n        if (isRtl) {\n            document.getElementById('e-de-list-dlg-div').classList.add('e-de-rtl');\n            this.numberFormatDiv.classList.add('e-de-rtl');\n        }\n        this.startAtTextBox = document.getElementById(containerId + '_startAt');\n        this.startAtTextBox.setAttribute('aria-label', 'startAt');\n        this.textIndentAtTextBox = document.getElementById(containerId + '_textIndent');\n        this.textIndentAtTextBox.setAttribute('aria-label', 'textIndent');\n        this.alignedAtTextBox = document.getElementById(containerId + '_alignedAt');\n        this.alignedAtTextBox.setAttribute('aria-label', 'alignedAt');\n        this.startAt = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_0__.NumericTextBox({\n            format: '#',\n            decimals: 0,\n            min: 0,\n            max: 50,\n            width: '180px',\n            enablePersistence: false\n        });\n        this.startAt.addEventListener('change', this.startedValueChangedClickHandler);\n        this.startAt.appendTo(this.startAtTextBox);\n        this.textIndent = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_0__.NumericTextBox({\n            format: '#',\n            decimals: 0,\n            min: 0,\n            max: 1584,\n            width: '180px',\n            step: 4,\n            enablePersistence: false\n        });\n        this.textIndent.addEventListener('change', this.textIndentChangedClickHandler);\n        this.textIndent.appendTo(this.textIndentAtTextBox);\n        this.alignedAt = new _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_0__.NumericTextBox({\n            format: '#',\n            max: 1584,\n            step: 6,\n            width: '180px',\n            enablePersistence: false\n        });\n        this.alignedAt.addEventListener('change', this.alignedAtValueChangedClickHandler);\n        this.alignedAt.appendTo(this.alignedAtTextBox);\n        this.listLevel1 = document.getElementById(containerId + '_listLevel');\n        this.listLevelElement = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_5__.DropDownList({ popupHeight: '150px', width: '180px', enableRtl: isRtl, change: this.onListLevelValueChanged });\n        this.listLevelElement.appendTo(this.listLevel1);\n        this.followCharacterElement = document.getElementById(containerId + '_followCharacter');\n        this.followNumberWith = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_5__.DropDownList({ popupHeight: '150px', width: '180px', enableRtl: isRtl, change: this.onFollowCharacterValueChanged });\n        this.followNumberWith.appendTo(this.followCharacterElement);\n        this.numberStyleEle = document.getElementById(containerId + '_numberStyle');\n        this.numberStyle = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_5__.DropDownList({ popupHeight: '150px', width: '180px', enableRtl: isRtl, change: this.onLevelPatternValueChanged });\n        this.numberStyle.appendTo(this.numberStyleEle);\n        this.numberFormat = document.getElementById(containerId + '_numberFormat');\n        this.numberFormat.addEventListener('change', this.numberFormatChangedClickHandler);\n        this.restartElement = document.getElementById(containerId + '_restartBy');\n        this.restartBy = new _syncfusion_ej2_dropdowns__WEBPACK_IMPORTED_MODULE_5__.DropDownList({ popupHeight: '150px', width: '180px', enableRtl: isRtl });\n        this.restartBy.appendTo(this.restartElement);\n        this.button = document.getElementById(containerId + '_list_info');\n        this.formatInfoToolTip = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_6__.Tooltip({ width: 200 });\n        this.formatInfoToolTip.content = locale.getConstant('Number format tooltip information');\n        this.formatInfoToolTip.position = 'RightTop';\n        this.formatInfoToolTip.appendTo(this.button);\n    };\n    ListDialog.prototype.onTextIndentChangedClick = function (args) {\n        this.onTextIndentChanged(args);\n    };\n    ListDialog.prototype.onStartedValueChangedClick = function (args) {\n        this.onStartValueChanged(args);\n    };\n    ListDialog.prototype.onNumberFormatChangedClick = function (args) {\n        this.onNumberFormatChanged(args);\n    };\n    ListDialog.prototype.onAlignedAtValueChangedClick = function (args) {\n        this.onAlignedAtValueChanged(args);\n    };\n    ListDialog.prototype.updateRestartLevelBox = function () {\n        var containerId = this.documentHelper.owner.containerId;\n        var listLevel = document.getElementById(containerId + '_listLevel');\n        var restartBy = document.getElementById(containerId + '_restartBy');\n        for (var i = 0; i < restartBy.options.length; i) {\n            restartBy.options.remove(i);\n        }\n        if (listLevel.selectedIndex === 0) {\n            var option = document.createElement('option');\n            option.value = 'No Restart';\n            option.innerHTML = 'No Restart';\n            restartBy.appendChild(option);\n        }\n        else {\n            for (var i = listLevel.selectedIndex; i > 0; i--) {\n                var option_1 = document.createElement('option');\n                option_1.value = 'Level ' + i;\n                option_1.innerHTML = 'Level ' + i;\n                restartBy.appendChild(option_1);\n            }\n            var option = document.createElement('option');\n            option.value = 'No Restart';\n            option.innerHTML = 'No Restart';\n            restartBy.appendChild(option);\n        }\n        restartBy.selectedIndex = 0;\n    };\n    ListDialog.prototype.listPatternConverter = function (listLevelPattern) {\n        switch (listLevelPattern) {\n            case 'Arabic': return 0;\n            case 'UpRoman': return 1;\n            case 'LowRoman': return 2;\n            case 'UpLetter': return 3;\n            case 'LowLetter': return 4;\n            case 'Number': return 5;\n            case 'LeadingZero': return 6;\n            case 'Bullet': return 7;\n            case 'Ordinal': return 8;\n            case 'OrdinalText': return 9;\n            case 'Special': return 10;\n            case 'FarEast': return 11;\n            default: return 12;\n        }\n    };\n    ListDialog.prototype.followCharacterConverter = function (followCharacter) {\n        switch (followCharacter) {\n            case 'Tab':\n                return 0;\n            case 'Space':\n                return 1;\n            default:\n                return 2;\n        }\n    };\n    ListDialog.prototype.calculateAlignedAt = function () {\n        if (this.viewModel.listLevel.paragraphFormat.firstLineIndent < 0) {\n            return this.viewModel.listLevel.paragraphFormat.leftIndent + this.viewModel.listLevel.paragraphFormat.firstLineIndent;\n        }\n        else {\n            return this.viewModel.listLevel.paragraphFormat.firstLineIndent;\n        }\n    };\n    ListDialog.prototype.updateDialogValues = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.listLevel.characterFormat)) {\n            this.listLevel.characterFormat = new _format_index__WEBPACK_IMPORTED_MODULE_2__.WCharacterFormat(this.viewModel.listLevel);\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.listLevel.paragraphFormat)) {\n            this.listLevel.paragraphFormat = new _format_index__WEBPACK_IMPORTED_MODULE_2__.WParagraphFormat(this.viewModel.listLevel);\n        }\n        //const restartByTextBox: HTMLSelectElement = document.getElementById(this.documentHelper.owner.containerId + '_restartBy') as HTMLSelectElement;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.viewModel) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.viewModel.listLevel)) {\n            this.startAt.value = this.viewModel.listLevel.startAt;\n            this.textIndent.value = this.viewModel.listLevel.paragraphFormat.leftIndent;\n            this.alignedAt.value = this.calculateAlignedAt();\n            this.followNumberWith.index = this.followCharacterConverter(this.viewModel.followCharacter);\n            this.numberFormat.value = this.viewModel.listLevel.numberFormat;\n            this.numberFormat.style.fontFamily = this.viewModel.listLevel.characterFormat.fontFamily;\n            this.numberStyle.index = this.listPatternConverter(this.viewModel.listLevelPattern);\n            this.listLevelElement.index = this.viewModel.levelNumber;\n            //this.viewModel.levelNumber = this.viewModel.levelNumber;\n        }\n    };\n    /**\n     * @param {WCharacterFormat} format - Specifies the character format.\n     * @private\n     * @returns {void}\n     */\n    ListDialog.prototype.updateCharacterFormat = function (format) {\n        this.listLevel.characterFormat.copyFormat(format);\n    };\n    ListDialog.prototype.disposeBindingForListUI = function () {\n        this.followNumberWith.index = -1;\n        this.numberFormat.value = ' ';\n        this.numberStyle.index = -1;\n        this.listLevelElement.index = -1;\n        this.restartBy.index = -1;\n        this.viewModel.destroy();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    ListDialog.prototype.destroy = function () {\n        if (this.alignedAt) {\n            this.alignedAt.destroy();\n        }\n        this.alignedAt = undefined;\n        this.dialog = undefined;\n        if (this.followNumberWith) {\n            this.followNumberWith.destroy();\n        }\n        this.followNumberWith = undefined;\n        if (this.listLevelElement) {\n            this.listLevelElement.destroy();\n        }\n        this.listLevelElement = undefined;\n        if (this.textIndent) {\n            this.textIndent.destroy();\n        }\n        this.textIndent = undefined;\n        if (this.startAt) {\n            this.startAt.destroy();\n        }\n        this.startAt = undefined;\n        if (this.numberStyle) {\n            this.numberStyle.destroy();\n        }\n        this.numberStyle = undefined;\n        this.numberFormat = undefined;\n        if (this.restartBy) {\n            this.restartBy.destroy();\n        }\n        this.restartBy = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.target)) {\n            if (this.target.parentElement) {\n                this.target.parentElement.removeChild(this.target);\n            }\n            for (var l = 0; l < this.target.childNodes.length; l++) {\n                this.target.removeChild(this.target.childNodes[parseInt(l.toString(), 10)]);\n                l--;\n            }\n            this.target = undefined;\n        }\n        this.removeEvents();\n        this.removeElements();\n        this.documentHelper = undefined;\n        this.viewModel = undefined;\n    };\n    ListDialog.prototype.removeEvents = function () {\n        if (this.startAt) {\n            this.startAt.removeEventListener('change', this.startedValueChangedClickHandler);\n        }\n        if (this.textIndent) {\n            this.textIndent.removeEventListener('change', this.textIndentChangedClickHandler);\n        }\n        if (this.alignedAt) {\n            this.alignedAt.removeEventListener('change', this.alignedAtValueChangedClickHandler);\n        }\n        if (this.numberFormat) {\n            this.numberFormat.removeEventListener('change', this.numberFormatChangedClickHandler);\n        }\n    };\n    ListDialog.prototype.removeElements = function () {\n        if (this.listLevelDiv) {\n            this.listLevelDiv.remove();\n            this.listLevelDiv = undefined;\n        }\n        if (this.div) {\n            this.div.remove();\n            this.div = undefined;\n        }\n        if (this.numberStyleDiv) {\n            this.numberStyleDiv.remove();\n            this.numberStyleDiv = undefined;\n        }\n        if (this.indentsDiv) {\n            this.indentsDiv.remove();\n            this.indentsDiv = undefined;\n        }\n        if (this.numberFormatDiv) {\n            this.numberFormatDiv.remove();\n            this.numberFormatDiv = undefined;\n        }\n        if (this.startAtTextBox) {\n            this.startAtTextBox.remove();\n            this.startAtTextBox = undefined;\n        }\n        if (this.textIndentAtTextBox) {\n            this.textIndentAtTextBox.remove();\n            this.textIndentAtTextBox = undefined;\n        }\n        if (this.alignedAtTextBox) {\n            this.alignedAtTextBox.remove();\n            this.alignedAtTextBox = undefined;\n        }\n        if (this.listLevel1) {\n            this.listLevel1.remove();\n            this.listLevel1 = undefined;\n        }\n        if (this.followCharacterElement) {\n            this.followCharacterElement.remove();\n            this.followCharacterElement = undefined;\n        }\n        if (this.numberStyleEle) {\n            this.numberStyleEle.remove();\n            this.numberStyleEle = undefined;\n        }\n        if (this.restartElement) {\n            this.restartElement.remove();\n            this.restartElement = undefined;\n        }\n        if (this.button) {\n            this.button.remove();\n            this.button = undefined;\n        }\n        if (this.formatInfoToolTip) {\n            this.formatInfoToolTip.destroy();\n            this.formatInfoToolTip = undefined;\n        }\n        if (this.startAtTextBox) {\n            this.startAtTextBox.remove();\n            this.startAtTextBox = undefined;\n        }\n    };\n    return ListDialog;\n}());\n\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/list-dialog.js?");

/***/ })

}]);