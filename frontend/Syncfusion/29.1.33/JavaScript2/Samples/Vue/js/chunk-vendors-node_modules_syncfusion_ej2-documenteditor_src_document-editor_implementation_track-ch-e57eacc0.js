"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_track-ch-e57eacc0"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/track-changes/track-changes.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/track-changes/track-changes.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Revision: () => (/* binding */ Revision),\n/* harmony export */   RevisionCollection: () => (/* binding */ RevisionCollection)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _viewer_page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../viewer/page */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/viewer/page.js\");\n/* harmony import */ var _format_character_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../format/character-format */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/format/character-format.js\");\n/* harmony import */ var _format_row_format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../format/row-format */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/format/row-format.js\");\n/* harmony import */ var _base_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../base/index */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/index.js\");\n\n\n\n\n\n/**\n * The revision class which holds the information related to changes made in the document\n */\nvar Revision = /** @class */ (function () {\n    function Revision(documentHelper, author, date) {\n        /**\n         * Gets or sets the author name who made the change\n         *\n         * @private\n         */\n        this.author = null;\n        /**\n         * Indicates when the track changes made\n         *\n         * @private\n         */\n        this.date = null;\n        /**\n         * Holds the reference of the items which are under this revision.\n         *\n         * @private\n         */\n        this.range = [];\n        /**\n         * @private\n         */\n        this.revisionID = '';\n        /**\n         * Used to update cursor position by ensuring items were removed or not\n         */\n        this.isContentRemoved = false;\n        this.isTableRevision = false;\n        /**\n         * Indicates whether to skip unlinking ranges for table elements.\n         */\n        this.canSkipTableItems = false;\n        this.skipUnLinkElement = false;\n        this.author = author;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.author)) {\n            this.author = \"Unknown\";\n        }\n        this.date = date;\n        this.owner = documentHelper;\n    }\n    Revision.prototype.handleAcceptReject = function (isFromAccept, reLayoutTable) {\n        this.owner.selectionModule.selectRevision(this);\n        var selection = this.owner.selectionModule;\n        var startPos = selection.start;\n        var endPos = selection.end;\n        if (!selection.start.isExistBefore(selection.end)) {\n            startPos = selection.end;\n            endPos = selection.start;\n        }\n        var blockInfo = selection.getParagraphInfo(startPos);\n        var removeChanges = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isFromAccept)) && ((this.revisionType === 'MoveFrom' || this.revisionType === 'Deletion') && isFromAccept) || ((this.revisionType === 'Insertion' || this.revisionType === 'MoveTo') && !isFromAccept);\n        var comments;\n        if (removeChanges) {\n            var commentInfo = this.owner.editorModule.getSelectedComments();\n            if (commentInfo.commentEndInfo.length > 0 || commentInfo.commentStartInfo.length > 0) {\n                comments = this.owner.editorModule.checkAndRemoveComments(false, true);\n            }\n            else {\n                removeChanges = false;\n            }\n        }\n        this.owner.editorModule.initHistory(isFromAccept ? 'Accept Change' : 'Reject Change');\n        var fieldBegin = selection.getHyperlinkField();\n        if (isFromAccept && this.revisionType === 'Deletion' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(fieldBegin)\n            && this.range.indexOf(fieldBegin) !== -1 && this.range.indexOf(fieldBegin.fieldEnd) !== -1 && this.range.indexOf(fieldBegin.fieldSeparator) === this.range.indexOf(fieldBegin.fieldEnd) - 1) {\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.isHyperlinkField = true;\n        }\n        this.owner.editorHistoryModule.currentBaseHistoryInfo.markerData.push(this.owner.editorModule.getMarkerData(undefined, undefined, this));\n        if (this.revisionType === 'Deletion') {\n            blockInfo = selection.getParagraphInfo(this.owner.selectionModule.start);\n            selection.editPosition = this.owner.selectionModule.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        }\n        else {\n            selection.editPosition = this.owner.selectionModule.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        }\n        this.owner.editorModule.updateInsertPosition();\n        this.isContentRemoved = false;\n        this.canSkipTableItems = false;\n        this.skipUnLinkElement = false;\n        // Implement to accept/reject the revision\n        if (this.revisionType === 'Insertion' || this.revisionType === 'Deletion' || this.revisionType === 'MoveFrom' || this.revisionType === 'MoveTo') {\n            this.owner.isShiftingEnabled = true;\n            var rangeIndex = 0;\n            while (this.range.length > 0) {\n                if (this.range[rangeIndex] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_1__.ElementBox || this.range[rangeIndex] instanceof _format_character_format__WEBPACK_IMPORTED_MODULE_2__.WCharacterFormat || this.range[rangeIndex] instanceof _format_row_format__WEBPACK_IMPORTED_MODULE_3__.WRowFormat) {\n                    if (this.range[rangeIndex] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_1__.BookmarkElementBox && isFromAccept && this.revisionType === 'Deletion') {\n                        var inline = this.range[rangeIndex];\n                        if (this.owner.documentHelper.bookmarks.containsKey(inline.name)) {\n                            this.owner.documentHelper.bookmarks.remove(inline.name);\n                        }\n                    }\n                    var moveToNextItem = this.unlinkRangeItem(this.range[rangeIndex], this, isFromAccept, startPos, endPos);\n                    if (moveToNextItem) {\n                        rangeIndex++;\n                    }\n                    else {\n                        rangeIndex = 0;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        this.isTableRevision = false;\n        if (this.isContentRemoved) {\n            var textPosition = selection.getTextPosBasedOnLogicalIndex(selection.editPosition);\n            this.owner.selectionModule.selectContent(textPosition, true);\n            this.owner.editorModule.updateEndPosition();\n        }\n        else {\n            selection.selectRange(startPos, endPos);\n            this.owner.editorModule.updateHistoryPosition(endPos, false);\n        }\n        if (this.owner.editorHistoryModule && this.owner.editorHistoryModule.currentBaseHistoryInfo\n            && this.owner.editorHistoryModule.currentBaseHistoryInfo.action !== 'BackSpace') {\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.removedNodes.reverse();\n        }\n        if (this.owner.editorHistoryModule) {\n            if (this.owner.trackChangesPane.isTrackingPageBreak) {\n                this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'TrackingPageBreak';\n                this.owner.trackChangesPane.isTrackingPageBreak = false;\n            }\n            var editorHistory = this.owner.editorHistoryModule;\n            if (editorHistory.currentHistoryInfo && (editorHistory.currentHistoryInfo.action === 'Accept All' || editorHistory.currentHistoryInfo.action === 'Reject All')) {\n                if (this.owner.documentHelper.blockToShift) {\n                    this.owner.documentHelper.layout.shiftLayoutedItems(false);\n                }\n            }\n            editorHistory.updateHistory();\n            if (removeChanges && this.owner.editorHistory && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.owner.editorHistory.currentHistoryInfo)) {\n                for (var k = 0; k < comments.length; k++) {\n                    this.owner.editorModule.initInsertInline(comments[k], false);\n                }\n                this.owner.editorHistory.currentHistoryInfo.endPosition = this.owner.selection.startOffset;\n                this.owner.editorHistory.updateComplexHistory();\n            }\n        }\n        if (reLayoutTable && this.owner.selectionModule.start.paragraph.isInsideTable) {\n            var table = this.owner.selectionModule.start.paragraph.containerWidget.ownerTable;\n            this.owner.documentHelper.layout.reLayoutTable(table);\n        }\n        this.owner.editorModule.reLayout(this.owner.selectionModule);\n        if (blockInfo.paragraph.isInHeaderFooter) {\n            this.owner.editorModule.updateHeaderFooterWidget();\n        }\n    };\n    Revision.prototype.handleGroupAcceptReject = function (isAccept) {\n        if (this.owner.trackChangesPane.tableRevisions.containsKey(this)) {\n            this.owner.editorModule.initComplexHistory(isAccept ? 'Accept All' : 'Reject All');\n            var groupingAcceptReject = this.owner.trackChangesPane.tableRevisions.get(this);\n            for (var i = groupingAcceptReject.length - 1; i >= 0; i--) {\n                if (isAccept) {\n                    groupingAcceptReject[i].handleAcceptReject(true);\n                }\n                else {\n                    groupingAcceptReject[i].handleAcceptReject(false);\n                }\n            }\n            if (this.owner.editorHistoryModule) {\n                this.owner.editorHistoryModule.updateComplexHistory();\n            }\n            if (this.owner.selectionModule.start.paragraph.isInsideTable) {\n                var table = this.owner.selectionModule.start.paragraph.containerWidget.ownerTable;\n                this.owner.documentHelper.layout.reLayoutTable(table);\n            }\n        }\n    };\n    /**\n     * Method which accepts the selected revision, revision marks will be removed and changes will be included in the viewer.\n     *\n     * @returns {void}\n     */\n    Revision.prototype.accept = function () {\n        var eventArgs = { author: this.author, cancel: false, revisionType: this.revisionType, actionType: 'Accept', source: this };\n        this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_4__.revisionActionEvent, eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        if (!this.owner.documentHelper.isTrackedOnlyMode) {\n            if (!this.owner.revisions.skipGroupAcceptReject && this.range[0] instanceof _format_row_format__WEBPACK_IMPORTED_MODULE_3__.WRowFormat\n                && this.owner.trackChangesPane.tableRevisions.containsKey(this)) {\n                this.handleGroupAcceptReject(true);\n            }\n            else {\n                this.handleAcceptReject(true, true);\n            }\n        }\n    };\n    /**\n     * Method which rejects the selected revision, revision marks will be removed leaving the original content.\n     */\n    Revision.prototype.reject = function () {\n        var eventArgs = { author: this.author, cancel: false, revisionType: this.revisionType, actionType: 'Reject', source: this };\n        this.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_4__.revisionActionEvent, eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        if (!this.owner.documentHelper.isTrackedOnlyMode) {\n            if (!this.owner.revisions.skipGroupAcceptReject && this.range[0] instanceof _format_row_format__WEBPACK_IMPORTED_MODULE_3__.WRowFormat\n                && this.owner.trackChangesPane.tableRevisions.containsKey(this)) {\n                this.handleGroupAcceptReject(false);\n            }\n            else {\n                this.handleAcceptReject(false, true);\n            }\n        }\n    };\n    /**\n     * Select the current revision.\n     */\n    Revision.prototype.select = function () {\n        this.owner.selectionModule.selectRevision(this);\n    };\n    /**\n     * Unlinks revision and its assosiated range\n     * @private\n     * @param item\n     * @param revision\n     * @param isFromAccept\n     */\n    /* eslint-disable  */\n    Revision.prototype.unlinkRangeItem = function (item, revision, isFromAccept, start, end) {\n        if (this.isTableRevision) {\n            this.removeRangeRevisionForItem(item);\n            if (revision.range.length === 0) {\n                this.owner.revisions.remove(revision);\n            }\n            return false;\n        }\n        var removeChanges = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isFromAccept)) && ((revision.revisionType === 'MoveFrom' || revision.revisionType === 'Deletion') && isFromAccept) || ((revision.revisionType === 'Insertion' || revision.revisionType === 'MoveTo') && !isFromAccept);\n        if (this.owner.selectionModule.isTOC()) {\n            if (removeChanges) {\n                this.owner.editorModule.deleteSelectedContents(this.owner.selectionModule, true);\n                if (revision.range.length === 0) {\n                    this.owner.revisions.remove(revision);\n                }\n                this.isContentRemoved = true;\n                this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'BackSpace';\n            }\n            else {\n                while (this.range.length > 0) {\n                    var currentElement = this.range[0];\n                    this.removeRangeRevisionForItem(currentElement);\n                    if (revision.range.length === 0) {\n                        this.owner.revisions.remove(revision);\n                    }\n                }\n                this.owner.editorModule.addRemovedNodes(this.revisionID);\n                this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'AcceptTOC';\n            }\n            return false;\n        }\n        if (item instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_1__.ElementBox && !this.canSkipTableItems) {\n            if (removeChanges) {\n                if (!this.skipeElementRemoval(item)) {\n                    this.owner.editorModule.addRemovedNodes(item.clone());\n                }\n                else {\n                    this.skipUnLinkElement = true;\n                    return true;\n                }\n            }\n            else {\n                // Bug 873011: Handled the hyperlink formatting preservation when rejecting the RemoveHyperlink action.\n                var fieldBegin = this.owner.selectionModule.getHyperlinkField();\n                if (!isFromAccept && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(fieldBegin) && fieldBegin == item && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(fieldBegin.fieldEnd)) {\n                    this.owner.editorModule.initComplexHistory('ClearRevisions');\n                    this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'ClearRevisions';\n                    this.updateRevisionID();\n                    this.removeRevisionFromPara(start, end);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.owner.editorHistoryModule)) {\n                        this.owner.editorHistoryModule.currentBaseHistoryInfo.isHyperlinkField = true;\n                        var endInfo = this.owner.selectionModule.getParagraphInfo(end);\n                        var endIndex = this.owner.selectionModule.getHierarchicalIndex(endInfo.paragraph, endInfo.offset.toString());\n                        this.owner.editorHistoryModule.currentBaseHistoryInfo.endPosition = endIndex;\n                        this.owner.editorHistoryModule.currentBaseHistoryInfo.selectionEnd = endIndex;\n                        this.owner.editorHistoryModule.updateHistory();\n                    }\n                    if (this.owner.enableTrackChanges) {\n                        this.owner.enableTrackChanges = false;\n                        this.owner.editorModule.updateHyperlinkFormat(this.owner.selectionModule);\n                        this.owner.enableTrackChanges = true;\n                    }\n                    else {\n                        this.owner.editorModule.updateHyperlinkFormat(this.owner.selectionModule);\n                    }\n                    if (this.owner.editorHistoryModule && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.owner.editorHistoryModule.currentHistoryInfo)) {\n                        this.owner.editorHistoryModule.updateComplexHistory();\n                    }\n                }\n                else {\n                    this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'ClearRevisions';\n                    this.updateRevisionID();\n                    this.removeRevisionFromPara(start, end);\n                }\n                // Set false to this because we retrived the revision based on above action (after this iteration we have changed the action basded the below property)\n                this.owner.trackChangesPane.isTrackingPageBreak = false;\n            }\n        }\n        else if (!this.canSkipTableItems && (item instanceof _format_character_format__WEBPACK_IMPORTED_MODULE_2__.WCharacterFormat) && (!removeChanges)) {\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'ClearRevisions';\n            this.updateRevisionID();\n            this.removeRevisionFromPara(start, end);\n        }\n        else if (item instanceof _format_row_format__WEBPACK_IMPORTED_MODULE_3__.WRowFormat && !removeChanges) {\n            this.isTableRevision = true;\n            var tableWidget = item.ownerBase.ownerTable;\n            var currentRow = item.ownerBase;\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'RemoveRowTrack';\n            this.owner.editorModule.cloneTableToHistoryInfo(tableWidget.combineWidget(this.owner.viewer));\n        }\n        removeChanges = removeChanges && !this.canSkipTableItems;\n        if (item instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_1__.ElementBox && removeChanges) {\n            var currentPara = item.line.paragraph;\n            this.removeRevisionItemsFromRange(item);\n            if (item instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_1__.FootnoteElementBox) {\n                if (item.footnoteType === 'Footnote') {\n                    this.owner.editorModule.removeFootnote(item);\n                }\n                else {\n                    this.owner.editorModule.removeEndnote(item);\n                }\n            }\n            else if (item instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_1__.ShapeElementBox) {\n                this.owner.editorModule.removeDeletedShapeRevision(item);\n            }\n            this.removeItem(item);\n            this.isContentRemoved = true;\n            var skipRelayout = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentPara) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentPara.bodyWidget) && currentPara.bodyWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_1__.HeaderFooterWidget && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentPara.bodyWidget.page) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentPara.bodyWidget.page) && currentPara.bodyWidget.page.index === -1));\n            if (!skipRelayout) {\n                this.owner.documentHelper.layout.reLayoutParagraph(currentPara, 0, 0);\n            }\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentPara.childWidgets)) {\n                var textPosition = this.owner.selectionModule.getTextPosBasedOnLogicalIndex(this.owner.selectionModule.editPosition);\n                this.owner.selectionModule.selectContent(textPosition, true);\n            }\n        }\n        else if (item instanceof _format_character_format__WEBPACK_IMPORTED_MODULE_2__.WCharacterFormat && removeChanges) {\n            this.isContentRemoved = true;\n            this.skipUnLinkElement = false;\n            this.removeRevisionItemsFromRange(item);\n            if (revision.range.length === 1) {\n                this.owner.editorModule.deleteSelectedContents(this.owner.selectionModule, true);\n            }\n            else {\n                this.owner.editorModule.deleteSelectedContents(this.owner.selectionModule, true);\n                this.removeRevisionFromPara(start, end);\n                var rangeIndex = revision.range.indexOf(item);\n                revision.range.splice(rangeIndex, 1);\n                this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n                while (this.range.length > 0) {\n                    this.removeRangeRevisionForItem(this.range[0]);\n                }\n            }\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'BackSpace';\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.isAcceptOrReject = isFromAccept ? 'Accept' : 'Reject';\n        }\n        else if (item instanceof _format_row_format__WEBPACK_IMPORTED_MODULE_3__.WRowFormat && removeChanges) {\n            var tableWidget = item.ownerBase.ownerTable;\n            tableWidget = tableWidget.combineWidget(this.owner.viewer);\n            var currentRow = item.ownerBase;\n            this.removeRevisionItemsFromRange(item);\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'DeleteCells';\n            this.owner.editorModule.cloneTableToHistoryInfo(tableWidget);\n            this.owner.editorModule.removeDeletedCellRevision(currentRow);\n            this.isContentRemoved = true;\n            tableWidget.removeChild(tableWidget.childWidgets.indexOf(currentRow));\n            this.canSkipTableItems = true;\n            // Before destroying the table row widget, delete the field element from the row.\n            this.owner.editorModule.removeFieldInBlock(currentRow);\n            // Before destroying the table row widget, delete the bookmark element from the row.\n            this.owner.editorModule.removeFieldInBlock(currentRow, true);\n            // Before destroying the table row widget, delete the content control element from the row.\n            this.owner.editorModule.removeFieldInBlock(currentRow, undefined, true);\n            //currentRow.destroy();\n            if (tableWidget.childWidgets.length === 0) {\n                this.owner.selectionModule.editPosition = this.owner.selectionModule.getHierarchicalIndex(tableWidget, '0');\n                this.owner.editorModule.removeBlock(tableWidget);\n                //tableWidget.destroy();\n            }\n            else {\n                this.owner.editorModule.updateTable(tableWidget, true);\n            }\n        }\n        // if the range is of row format, we will remove the row and for history preservation we use whole table to be cloned, hence skipping this part\n        if (!(item instanceof _format_row_format__WEBPACK_IMPORTED_MODULE_3__.WRowFormat) || !removeChanges) {\n            if (!this.skipUnLinkElement) {\n                this.removeRangeRevisionForItem(item);\n                if (removeChanges && item instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_1__.BookmarkElementBox) {\n                    this.owner.editorModule.removedBookmarkElements.push(item);\n                }\n                if (item instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_1__.BookmarkElementBox) {\n                    if (this.owner.documentHelper.bookmarks.containsKey(item.name)) {\n                        if (this.owner.enableCollaborativeEditing && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.owner.editorHistory.currentBaseHistoryInfo)) {\n                            this.owner.editorHistory.currentBaseHistoryInfo.markerData.push({ bookmarkName: item.name });\n                        }\n                        this.owner.documentHelper.bookmarks.remove(item.name);\n                    }\n                }\n            }\n        }\n        if (revision.range.length === 0) {\n            this.owner.revisions.remove(revision);\n        }\n        return false;\n    };\n    Revision.prototype.removeRevisionFromPara = function (start, end) {\n        var blockInfo = this.owner.selectionModule.getParagraphInfo(start);\n        var endBlockInfo = this.owner.selectionModule.getParagraphInfo(end);\n        var para = blockInfo.paragraph;\n        while (para instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_1__.ParagraphWidget) {\n            if (para.characterFormat.revisions.length > 0) {\n                for (var i = 0; i < para.characterFormat.revisions.length; i++) {\n                    if (para.characterFormat.revisions[i].range.length === 0) {\n                        var revisionIndex = para.characterFormat.revisions.indexOf(para.characterFormat.revisions[i]);\n                        para.characterFormat.revisions.splice(revisionIndex, 1);\n                        i--;\n                    }\n                }\n            }\n            if (endBlockInfo.paragraph === para) {\n                para = undefined;\n            }\n            else {\n                para = para.nextWidget;\n            }\n        }\n    };\n    Revision.prototype.updateRevisionID = function () {\n        this.owner.editorModule.addRemovedNodes(this.revisionID);\n        while (this.range.length > 0) {\n            this.removeRangeRevisionForItem(this.range[0], true);\n        }\n        this.owner.trackChangesPane.updateCurrentTrackChanges(this);\n    };\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Revision.prototype.removeRevisionItemsFromRange = function (item) {\n        if (item.revisions.length > 0) {\n            for (var revisionIndex = 0; revisionIndex < item.revisions.length; revisionIndex++) {\n                var currentRevision = item.revisions[revisionIndex];\n                if (this.revisionID !== currentRevision.revisionID) {\n                    var rangeIndex = currentRevision.range.indexOf(item);\n                    item.revisions[revisionIndex].range.splice(rangeIndex, 1);\n                    this.owner.trackChangesPane.updateCurrentTrackChanges(item.revisions[revisionIndex]);\n                }\n                if (currentRevision.range.length === 0) {\n                    this.owner.revisions.remove(currentRevision);\n                }\n            }\n        }\n    };\n    /**\n     * Method to clear linked ranges in revision\n     *\n     * @private\n     * @param {any} item - Specifies the item\n     * @returns {void}\n     */\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Revision.prototype.removeRangeRevisionForItem = function (item, skipUpdate) {\n        var revisionIndex = item.revisions.indexOf(this);\n        if (revisionIndex >= 0) {\n            item.revisions.splice(revisionIndex, 1);\n            var rangeIndex = this.range.indexOf(item);\n            this.range.splice(rangeIndex, 1);\n            if (!skipUpdate) {\n                this.owner.trackChangesPane.updateCurrentTrackChanges(this);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {Element} element - Specifies the element.\n     * @returns {boolean} Resturs skip element removal\n     */\n    Revision.prototype.skipeElementRemoval = function (element) {\n        var elementPara = element.paragraph;\n        if (elementPara.characterFormat.revisions.length > 0) {\n            for (var i = 0; i < elementPara.characterFormat.revisions.length; i++) {\n                var currentRevision = elementPara.characterFormat.revisions[i];\n                var rangeIndex = currentRevision.range.indexOf(element);\n                if (rangeIndex >= 0 && currentRevision.revisionID === this.revisionID) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Revision.prototype.removeRevisionFromRow = function (row) {\n        this.owner.editorModule.unlinkRangeFromRevision(row.rowFormat);\n        //this.owner.editor.addRemovedRevisionInfo(row.rowFormat, undefined);\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cellWidget = row.childWidgets[i];\n            this.owner.editorModule.removeRevisionForCell(cellWidget, false);\n        }\n    };\n    Revision.prototype.removeItem = function (element) {\n        var paraWidget = element.line.paragraph;\n        this.owner.editorModule.unLinkFieldCharacter(element);\n        var elementIndex = element.line.children.indexOf(element);\n        var previousNode = element.previousNode;\n        element.line.children.splice(elementIndex, 1);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(previousNode)) {\n            this.owner.editorModule.combineElementRevisionToPrevNxt(previousNode);\n        }\n        var paraFloatingElementIndex = element.line.paragraph.floatingElements.indexOf(element);\n        element.line.paragraph.floatingElements.splice(paraFloatingElementIndex, 1);\n        var blockFloatingElementIndex = element.line.paragraph.bodyWidget.floatingElements.indexOf(element);\n        if (blockFloatingElementIndex > -1) {\n            element.line.paragraph.bodyWidget.floatingElements.splice(blockFloatingElementIndex, 1);\n        }\n        this.owner.editorModule.removeEmptyLine(paraWidget);\n    };\n    Revision.prototype.canSkipCloning = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.owner) && this.owner.editorHistoryModule && this.owner.editorHistoryModule.currentBaseHistoryInfo) {\n            var baseHistoryInfo = this.owner.editorHistoryModule.currentBaseHistoryInfo;\n            if (baseHistoryInfo.action === 'DeleteCells') {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     *\n     */\n    Revision.prototype.destroy = function () {\n        this.author = undefined;\n        this.revisionType = undefined;\n        this.revisionID = undefined;\n        this.date = undefined;\n        this.range = [];\n        this.range = undefined;\n        this.owner = undefined;\n    };\n    /**\n     * @private\n     * @returns {Revision} - Returns revision\n     */\n    Revision.prototype.clone = function () {\n        if (this.canSkipCloning()) {\n            return this;\n        }\n        var revision = new Revision(undefined, this.author, this.date);\n        revision.revisionID = this.revisionID;\n        revision.revisionType = this.revisionType;\n        return revision;\n    };\n    /**\n     * Method to clone the revisions for the element\n     *\n     * @param {Revision[]} revisions - revision array.\n     * @returns {string[]} - returns clones revisions.\n     */\n    Revision.cloneRevisions = function (revisions) {\n        var clonedRevisions = [];\n        for (var i = 0; i < revisions.length; i++) {\n            clonedRevisions.push(revisions[i].revisionID);\n        }\n        return clonedRevisions;\n    };\n    return Revision;\n}());\n\n/**\n * Represents the revision collections in the document.\n */\nvar RevisionCollection = /** @class */ (function () {\n    function RevisionCollection(owner) {\n        /**\n         * @private\n         */\n        this.changes = [];\n        /**\n         * @private\n         */\n        this.skipGroupAcceptReject = false;\n        this.owner = owner;\n    }\n    /**\n     * @private\n     */\n    RevisionCollection.prototype.get = function (index) {\n        if (index >= this.changes.length || index < 0) {\n            throw new ReferenceError('Provided index is not within the range');\n        }\n        return this.changes[index];\n    };\n    Object.defineProperty(RevisionCollection.prototype, \"length\", {\n        get: function () {\n            return this.changes.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RevisionCollection.prototype.remove = function (revision) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(revision) || this.changes.indexOf(revision) < 0) {\n            return;\n        }\n        this.changes.splice(this.changes.indexOf(revision), 1);\n        if (this.owner.trackChangesPane.revisions.indexOf(revision) !== -1) {\n            var index = this.owner.trackChangesPane.revisions.indexOf(revision);\n            var removeChild = !(this.owner.trackChangesPane.tableRevisions.containsKey(revision) && (this.owner.trackChangesPane.tableRevisions.get(revision))[(this.owner.trackChangesPane.tableRevisions.get(revision)).length - 1] !== revision);\n            var changesSingleView = this.owner.trackChangesPane.changes.get(revision);\n            if (removeChild) {\n                this.owner.trackChangesPane.changesInfoDiv.removeChild(changesSingleView.outerSingleDiv);\n            }\n            this.owner.trackChangesPane.revisions.splice(index, 1);\n            this.owner.trackChangesPane.changes.remove(revision);\n            if (this.owner.trackChangesPane.renderedChanges.containsKey(revision)) {\n                this.owner.trackChangesPane.renderedChanges.remove(revision);\n            }\n            if (this.owner.trackChangesPane.tableRevisions.containsKey(revision)) {\n                this.owner.trackChangesPane.tableRevisions.remove(revision);\n            }\n        }\n    };\n    /**\n     * Method which accepts all the revision in the revision collection\n     *\n     * @returns {void}\n     */\n    RevisionCollection.prototype.acceptAll = function () {\n        if (!this.owner.isReadOnly && !this.owner.documentHelper.isTrackedOnlyMode) {\n            this.handleRevisionCollection(true);\n        }\n    };\n    /**\n     * Method which rejects all the revision in the revision collection\n     *\n     * @returns {void}\n     */\n    RevisionCollection.prototype.rejectAll = function () {\n        if (!this.owner.isReadOnly && !this.owner.documentHelper.isTrackedOnlyMode) {\n            this.handleRevisionCollection(false);\n        }\n    };\n    /**\n     * @private\n     * @param {boolean} isfromAcceptAll - Specifies the is accept all.\n     * @param {Revision[]} changes - Specifies the revisions.\n     * @returns {void}\n     */\n    RevisionCollection.prototype.handleRevisionCollection = function (isfromAcceptAll, changes) {\n        this.skipGroupAcceptReject = true;\n        var selection = this.owner.selectionModule;\n        var startPos = selection.start;\n        var endPos = selection.end;\n        var revisionCollec = changes ? changes : this.changes;\n        if (revisionCollec.length <= 0) {\n            return;\n        }\n        if (!selection.start.isExistBefore(selection.end)) {\n            startPos = selection.end;\n            endPos = selection.start;\n        }\n        startPos = startPos.clone();\n        endPos = endPos.clone();\n        if (isfromAcceptAll) {\n            this.owner.editorModule.initComplexHistory('Accept All');\n        }\n        else {\n            this.owner.editorModule.initComplexHistory('Reject All');\n        }\n        while (revisionCollec.length > 0) {\n            if (isfromAcceptAll) {\n                revisionCollec[0].accept();\n            }\n            else {\n                revisionCollec[0].reject();\n            }\n            if (changes) {\n                revisionCollec.splice(0, 1);\n            }\n            if (this.owner.enableHeaderAndFooter) {\n                this.owner.editorModule.updateHeaderFooterWidget();\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(selection.editPosition)) {\n            var textPosition = selection.getTextPosBasedOnLogicalIndex(selection.editPosition);\n            this.owner.selectionModule.selectContent(textPosition, true);\n        }\n        if (this.owner.editorHistoryModule) {\n            this.owner.editorHistoryModule.updateComplexHistory();\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(selection.editPosition)) {\n                this.owner.editorHistoryModule.undoStack.pop();\n            }\n        }\n        this.owner.editorModule.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n        this.owner.editorModule.reLayout(this.owner.selectionModule, false);\n        this.owner.editorModule.isSkipOperationsBuild = false;\n        this.skipGroupAcceptReject = false;\n    };\n    RevisionCollection.prototype.clear = function () {\n        this.changes = [];\n    };\n    /**\n     * Disposes the internal objects which are maintained.\n     * @private\n     */\n    RevisionCollection.prototype.destroy = function () {\n        if (this.changes) {\n            for (var i = 0; i < this.changes.length; i++) {\n                var revision = this.changes[i];\n                revision.destroy();\n            }\n            this.changes = [];\n        }\n        this.changes = undefined;\n        this.owner = undefined;\n    };\n    return RevisionCollection;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/track-changes/track-changes.js?");

/***/ })

}]);