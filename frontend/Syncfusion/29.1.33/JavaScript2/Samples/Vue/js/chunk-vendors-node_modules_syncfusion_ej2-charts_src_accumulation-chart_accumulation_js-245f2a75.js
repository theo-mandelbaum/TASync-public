"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-charts_src_accumulation-chart_accumulation_js-245f2a75"],{

/***/ "./node_modules/@syncfusion/ej2-charts/src/accumulation-chart/accumulation.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-charts/src/accumulation-chart/accumulation.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccumulationChart: () => (/* binding */ AccumulationChart)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _common_model_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/model/base */ \"./node_modules/@syncfusion/ej2-charts/src/common/model/base.js\");\n/* harmony import */ var _model_acc_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./model/acc-base */ \"./node_modules/@syncfusion/ej2-charts/src/accumulation-chart/model/acc-base.js\");\n/* harmony import */ var _common_model_theme__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/model/theme */ \"./node_modules/@syncfusion/ej2-charts/src/common/model/theme.js\");\n/* harmony import */ var _common_model_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/model/constants */ \"./node_modules/@syncfusion/ej2-charts/src/common/model/constants.js\");\n/* harmony import */ var _common_legend_legend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/legend/legend */ \"./node_modules/@syncfusion/ej2-charts/src/common/legend/legend.js\");\n/* harmony import */ var _common_utils_helper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/utils/helper */ \"./node_modules/@syncfusion/ej2-charts/src/common/utils/helper.js\");\n/* harmony import */ var _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @syncfusion/ej2-svg-base */ \"./node_modules/@syncfusion/ej2-svg-base/index.js\");\n/* harmony import */ var _common_model_data__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/model/data */ \"./node_modules/@syncfusion/ej2-charts/src/common/model/data.js\");\n/* harmony import */ var _renderer_accumulation_base__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./renderer/accumulation-base */ \"./node_modules/@syncfusion/ej2-charts/src/accumulation-chart/renderer/accumulation-base.js\");\n/* harmony import */ var _renderer_pie_series__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./renderer/pie-series */ \"./node_modules/@syncfusion/ej2-charts/src/accumulation-chart/renderer/pie-series.js\");\n/* harmony import */ var _common_utils_print__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../common/utils/print */ \"./node_modules/@syncfusion/ej2-charts/src/common/utils/print.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * AccumulationChart file\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Represents the AccumulationChart control.\n * ```html\n * <div id=\"accumulation\"/>\n * <script>\n *   var accObj = new AccumulationChart({});\n *   accObj.appendTo(\"#accumulation\");\n * </script>\n * ```\n *\n * @public\n */\nvar AccumulationChart = /** @class */ (function (_super) {\n    __extends(AccumulationChart, _super);\n    /**\n     * Constructor for creating the AccumulationChart widget.\n     *\n     * @private\n     * @param {AccumulationChartModel} options - Specifies the accumulation chart model.\n     * @param {string | HTMLElement} element - Specifies the element for the accumulation chart.\n     */\n    function AccumulationChart(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.animateselected = false;\n        /** @private */\n        _this.explodeDistance = 0;\n        /** @private */\n        _this.currentLegendIndex = 0;\n        /** @private */\n        _this.currentPointIndex = 0;\n        /** @private */\n        _this.previousTargetId = '';\n        /** @private */\n        _this.isLegendClicked = false;\n        _this.chartid = 57724;\n        return _this;\n    }\n    /**\n     * Animate the series bounds on data change.\n     *\n     * @private\n     * @param {number} duration - The duration of the animation.\n     * @returns {void}\n     */\n    AccumulationChart.prototype.animate = function (duration) {\n        this.duration = (duration === 0 && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.animationMode === 'Enable') ? 700 : duration;\n        this.animateselected = true;\n        this.animateSeries = false;\n        var temIndex = 0;\n        var tempcolor = [];\n        var tempindex = [];\n        var tempindex1 = [];\n        var currentSeries = this.visibleSeries[0];\n        var datasource = [];\n        datasource = currentSeries.dataSource;\n        currentSeries.sumOfPoints = 0;\n        if (currentSeries.points.length < Object.keys(currentSeries.dataSource).length) {\n            this.refresh();\n        }\n        else if (currentSeries.points.length > Object.keys(currentSeries.dataSource).length) {\n            var currentSeries_1 = this.visibleSeries[0];\n            currentSeries_1.points = currentSeries_1.points.filter(function (entry1) {\n                entry1.visible = false;\n                tempindex.push(entry1.index);\n                tempcolor.push(entry1.color);\n                return (datasource).some(function (entry2) {\n                    var accPoint = entry2;\n                    if (entry1.x === accPoint.x) {\n                        entry1.visible = true;\n                        tempindex1.push(entry1.index);\n                        entry1.index = temIndex;\n                        temIndex++;\n                    }\n                    return entry1.x === accPoint.x;\n                });\n            });\n            var missing = tempindex.filter(function (item) { return tempindex1.indexOf(item) < 0; });\n            var interval = tempindex.length - missing.length;\n            for (var i = (tempindex.length - 1); i >= interval; i--) {\n                (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.removeElement)('container_Series_0_Point_' + tempindex[i]);\n            }\n            for (var i = 0; i < currentSeries_1.points.length; i++) {\n                currentSeries_1.points[i].y = currentSeries_1.dataSource[i].y;\n                currentSeries_1.points[i].color = tempcolor[i];\n                currentSeries_1.sumOfPoints += currentSeries_1.dataSource[i].y;\n            }\n            this.redraw = this.enableAnimation;\n            this.animateSeries = false;\n            this.calculateBounds();\n            this.renderElements();\n        }\n        else {\n            for (var i = 0; i < currentSeries.points.length; i++) {\n                currentSeries.points[i].y = currentSeries.dataSource[i][currentSeries.yName];\n                currentSeries.points[i].color = currentSeries.dataSource[i][currentSeries.pointColorMapping] != null\n                    ? currentSeries.dataSource[i][currentSeries.pointColorMapping] : currentSeries.points[i].color;\n                currentSeries.sumOfPoints += currentSeries.dataSource[i][currentSeries.yName];\n            }\n            this.redraw = this.enableAnimation;\n            this.animateSeries = false;\n            this.removeSvg();\n            this.refreshPoints(currentSeries.points);\n            this.renderElements();\n        }\n    };\n    Object.defineProperty(AccumulationChart.prototype, \"type\", {\n        /**\n         * Gets the type of accumulation chart.\n         *\n         * @returns {AccumulationType} - The type of accumulation chart.\n         * @private\n         * */\n        get: function () {\n            if (this.series && this.series.length) {\n                return this.series[0].type;\n            }\n            return 'Pie';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // accumulation chart methods.\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.preRender = function () {\n        var blazor = 'Blazor';\n        this.isBlazor = window[blazor];\n        this.allowServerDataBinding = false;\n        this.unWireEvents();\n        this.setCulture();\n        this.animateSeries = true;\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-accumulationchart').length;\n            this.element.id = 'acc_chart_' + this.chartid + '_' + collection;\n        }\n        this.wireEvents();\n        this.element.setAttribute('dir', this.enableRtl ? 'rtl' : 'ltr');\n        this.element.style.outline = 'none';\n    };\n    /**\n     * Themeing for chart goes here.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.setTheme = function () {\n        /** Set theme for accumulation chart */\n        this.themeStyle = (0,_common_model_theme__WEBPACK_IMPORTED_MODULE_3__.getThemeColor)(this.theme, false, this);\n    };\n    /**\n     * To render the accumulation chart elements.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.render = function () {\n        var _this = this;\n        if (this.element.className.indexOf('e-accumulationchart') === -1) {\n            this.element.classList.add('e-accumulationchart');\n        }\n        this.element.setAttribute('role', this.accessibility.accessibilityRole ? this.accessibility.accessibilityRole : 'region');\n        this.element.setAttribute('tabindex', this.accessibility.focusable ? String(this.accessibility.tabIndex) : '-1');\n        this.element.setAttribute('aria-label', this.accessibility.accessibilityDescription ? this.accessibility.accessibilityDescription : this.title + '. Syncfusion interactive chart.');\n        this.element.setAttribute('class', this.element.getAttribute('class') + ' e-accumulationchart-focused');\n        var loadEventData = {\n            chart: this.isBlazor ? {} : this,\n            accumulation: this.isBlazor ? {} : this,\n            theme: this.theme, name: _common_model_constants__WEBPACK_IMPORTED_MODULE_4__.load, cancel: false\n        };\n        this.trigger(_common_model_constants__WEBPACK_IMPORTED_MODULE_4__.load, loadEventData, function () {\n            _this.theme = _this.isBlazor ? loadEventData.theme : _this.theme;\n            _this.setTheme();\n            _this.accBaseModule = new _renderer_accumulation_base__WEBPACK_IMPORTED_MODULE_9__.AccumulationBase(_this);\n            _this.pieSeriesModule = new _renderer_pie_series__WEBPACK_IMPORTED_MODULE_10__.PieSeries(_this);\n            _this.calculateVisibleSeries();\n            _this.processData();\n            _this.renderComplete();\n            _this.allowServerDataBinding = true;\n        });\n    };\n    /**\n     * Method to unbind events for accumulation chart.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.unWireEvents = function () {\n        /** Find the Events type */\n        var isIE11Pointer = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer;\n        var start = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent;\n        var move = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent;\n        var stop = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        /** UnBind the Event handler */\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, move, this.accumulationMouseMove);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, stop, this.accumulationMouseEnd);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, start, this.accumulationMouseStart);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'click', this.accumulationOnMouseClick);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'dblclick', this.accumulationOnDoubleClick);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'contextmenu', this.accumulationRightClick);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, cancel, this.accumulationMouseLeave);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keydown', this.accumulationChartKeyDown);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document.body, 'keydown', this.documentKeyHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keyup', this.accumulationChartKeyUp);\n        window.removeEventListener((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.accumulationResizeBound);\n    };\n    /**\n     * Method to bind events for the accumulation chart.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.wireEvents = function () {\n        /**\n         * To fix react timeout destroy issue.\n         */\n        if (!this.element) {\n            return;\n        }\n        /** Find the Events type */\n        var isIE11Pointer = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer;\n        var start = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent;\n        var stop = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent;\n        var move = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        /** Bind the Event handler */\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, move, this.accumulationMouseMove, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, stop, this.accumulationMouseEnd, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, start, this.accumulationMouseStart, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'click', this.accumulationOnMouseClick, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'dblclick', this.accumulationOnDoubleClick, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'contextmenu', this.accumulationRightClick, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, cancel, this.accumulationMouseLeave, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keydown', this.accumulationChartKeyDown, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document.body, 'keydown', this.documentKeyHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keyup', this.accumulationChartKeyUp, this);\n        this.accumulationResizeBound = this.accumulationResize.bind(this);\n        window.addEventListener((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.accumulationResizeBound);\n        new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Touch(this.element); // To avoid geasture blocking for browser\n        /** Apply the style for chart */\n        this.setStyle(this.element);\n    };\n    /**\n     * Method to set mouse x, y from events.\n     *\n     * @param {PointerEvent} e - The pointer event containing mouse coordinates.\n     * @returns {void}\n     */\n    AccumulationChart.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRectElement = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(this.element.id + '_svg');\n        if (svgRectElement && this.element) {\n            var svgRect = svgRectElement.getBoundingClientRect();\n            var rect = this.element.getBoundingClientRect();\n            if (e.type.indexOf('touch') > -1) {\n                this.isTouch = true;\n                var touchArg = e;\n                pageY = touchArg.changedTouches[0].clientY;\n                pageX = touchArg.changedTouches[0].clientX;\n            }\n            else {\n                this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n                pageX = e.clientX;\n                pageY = e.clientY;\n            }\n            this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n            this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n        }\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - The pointer event containing mouse coordinates.\n     * @returns {boolean} - Mouse end of accumulation chart.\n     * @private\n     */\n    AccumulationChart.prototype.accumulationMouseEnd = function (e) {\n        this.setMouseXY(e);\n        this.trigger(_common_model_constants__WEBPACK_IMPORTED_MODULE_4__.chartMouseUp, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        if (this.isTouch) {\n            this.titleTooltip(e, this.mouseX, this.mouseY, this.isTouch);\n            if (this.accumulationDataLabelModule && this.visibleSeries[0].dataLabel.visible) {\n                this.accumulationDataLabelModule.move(e, this.mouseX, this.mouseY, this.isTouch);\n            }\n            if (this.accumulationLegendModule && this.legendSettings.visible) {\n                this.accumulationLegendModule.move(e);\n            }\n        }\n        if (this.centerLabel.hoverTextFormat) {\n            this.updateCenterLabel(e);\n        }\n        this.notify(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent, e);\n        return false;\n    };\n    /*public removeSvgOffset(x: number, y: number): ChartLocation {\n        let rect: ClientRect = this.element.getBoundingClientRect();\n        let svgRect: ClientRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        return { x: (x - rect.left) - Math.max(svgRect.left - rect.left, 0), y: (y - rect.top) - Math.max(svgRect.top - rect.top, 0)};\n    }*/\n    /**\n     * Handles the mouse start.\n     *\n     * @param {PointerEvent} e - The pointer event containing mouse coordinates.\n     * @returns {boolean} - Mouse start of accumulation chart.\n     * @private\n     */\n    AccumulationChart.prototype.accumulationMouseStart = function (e) {\n        this.setMouseXY(e);\n        this.trigger(_common_model_constants__WEBPACK_IMPORTED_MODULE_4__.chartMouseDown, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        return false;\n    };\n    /**\n     * Handles the accumulation chart resize.\n     *\n     * @returns {boolean} - Resize method of accumulation chart.\n     * @private\n     */\n    AccumulationChart.prototype.accumulationResize = function () {\n        var _this = this;\n        this.animateSeries = false;\n        var args = {\n            accumulation: this.isBlazor ? {} : this,\n            previousSize: new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.Size(this.availableSize.width, this.availableSize.height),\n            name: _common_model_constants__WEBPACK_IMPORTED_MODULE_4__.resized,\n            currentSize: new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.Size(0, 0),\n            chart: this.isBlazor ? {} : this\n        };\n        var beforeResizeArgs = { name: 'beforeResize', cancelResizedEvent: false };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.trigger(_common_model_constants__WEBPACK_IMPORTED_MODULE_4__.beforeResize, beforeResizeArgs);\n        if (!beforeResizeArgs.cancelResizedEvent) {\n            this.resizeTo = +setTimeout(function () {\n                if (_this.isDestroyed) {\n                    clearTimeout(_this.resizeTo);\n                    return;\n                }\n                (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.calculateSize)(_this);\n                args.currentSize = _this.availableSize;\n                _this.trigger(_common_model_constants__WEBPACK_IMPORTED_MODULE_4__.resized, args);\n                _this.refreshSeries();\n                _this.refreshChart();\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Handles the print method for accumulation chart control.\n     *\n     * @param {string[] | string | Element} id - The id of the accumulation chart to be printed on the page.\n     * @returns {void}\n     */\n    AccumulationChart.prototype.print = function (id) {\n        // To handle the print funtion in IE and Edge browsers\n        var clippath = document.getElementById(this.element.id + '_Series_0').style.clipPath;\n        document.getElementById(this.element.id + '_Series_0').style.clipPath = '';\n        var exportChart = new _common_utils_print__WEBPACK_IMPORTED_MODULE_11__.PrintUtils(this);\n        exportChart.print(id);\n        document.getElementById(this.element.id + '_Series_0').style.clipPath = clippath;\n    };\n    /**\n     * Export method for the chart.\n     *\n     * @param {ExportType} type - The type of export.\n     * @param {string} fileName - The name of the file for export.\n     * @returns {void}\n     */\n    AccumulationChart.prototype.export = function (type, fileName) {\n        if (this.exportModule) {\n            this.exportModule.export(type, fileName);\n            if (this.afterExport) {\n                this.exportModule.getDataUrl(this);\n            }\n        }\n    };\n    /**\n     * Applying styles for accumulation chart element.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @returns {void}\n     */\n    AccumulationChart.prototype.setStyle = function (element) {\n        element.style.touchAction = 'element';\n        element.style.msTouchAction = 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n        element.style.display = 'block';\n        element.style.height = (element.style.height || (this.height && this.height.indexOf('%') === -1)) ? element.style.height : 'inherit';\n        var tabColor = '';\n        switch (this.theme) {\n            case 'HighContrastLight':\n            case 'HighContrast':\n                tabColor = '#969696';\n                break;\n            case 'MaterialDark':\n            case 'FabricDark':\n            case 'Bootstrap':\n            case 'Bootstrap4':\n                tabColor = '#66afe9';\n                break;\n            case 'Tailwind':\n            case 'TailwindDark':\n                tabColor = '#4f46e5';\n                break;\n            case 'Bootstrap5':\n            case 'Bootstrap5Dark':\n                tabColor = '#0d6efd';\n                break;\n            case 'Fluent':\n            case 'FluentDark':\n                tabColor = '#9e9e9e';\n                break;\n            case 'Fluent2':\n            case 'Fluent2Dark':\n            case 'Fluent2HighContrast':\n                tabColor = '#0078D4';\n                break;\n            default:\n                tabColor = '#9e9e9e';\n                break;\n        }\n    };\n    /**\n     * Method to set the annotation content dynamically for accumulation.\n     *\n     * @param {number} annotationIndex - The index of the annotation.\n     * @param {string} content - The content to set for the annotation.\n     * @returns {void}\n     */\n    AccumulationChart.prototype.setAnnotationValue = function (annotationIndex, content) {\n        var annotation = this.annotations[annotationIndex];\n        var element;\n        var parentNode = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(this.element.id + '_Annotation_Collections');\n        if (content) {\n            annotation.content = content;\n            if (parentNode) {\n                element = this.createElement('div');\n                (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.removeElement)(this.element.id + '_Annotation_' + annotationIndex);\n                this.annotationModule.processAnnotation(annotation, annotationIndex, element);\n                parentNode.appendChild(element.children[0]);\n            }\n            else {\n                this.annotationModule.renderAnnotations((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(this.element.id + '_Secondary_Element'));\n            }\n        }\n    };\n    /**\n     * Handles the mouse move on accumulation chart.\n     *\n     * @param {PointerEvent} e - The pointer event containing mouse coordinates.\n     * @returns {boolean} - Mouse move of accumulation chart.\n     * @private\n     */\n    AccumulationChart.prototype.accumulationMouseMove = function (e) {\n        if (!(0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(this.element.id + '_svg')) {\n            return false;\n        }\n        this.setMouseXY(e);\n        this.trigger(_common_model_constants__WEBPACK_IMPORTED_MODULE_4__.chartMouseMove, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        if (this.pointMove) {\n            this.triggerPointEvent(_common_model_constants__WEBPACK_IMPORTED_MODULE_4__.pointMove, e.target, e);\n        }\n        if (this.accumulationLegendModule && this.legendSettings.visible) {\n            this.accumulationLegendModule.move(e);\n        }\n        if (this.accumulationDataLabelModule && this.visibleSeries[0] && this.visibleSeries[0].dataLabel.visible) {\n            this.accumulationDataLabelModule.move(e, this.mouseX, this.mouseY);\n        }\n        if (this.centerLabel.hoverTextFormat) {\n            this.updateCenterLabel(e);\n        }\n        if (!this.isTouch) {\n            this.titleTooltip(e, this.mouseX, this.mouseY);\n        }\n        if (this.enableBorderOnMouseMove && this.type === 'Pie' && this.pieSeriesModule &&\n            (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.withInBounds)(this.mouseX, this.mouseY, this.initialClipRect)) {\n            this.pieSeriesModule.findSeries(e, this.series[0].borderRadius);\n        }\n        this.notify(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent, e);\n        return false;\n    };\n    AccumulationChart.prototype.titleTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        var id = (targetId === (this.element.id + '_title') || targetId === (this.element.id + '_subTitle') ||\n            targetId === (this.element.id + '_chart_legend_title'));\n        if ((event.target.textContent.indexOf('...') > -1) && id) {\n            var title = (targetId === (this.element.id + '_title')) ?\n                this.title : (targetId === (this.element.id + '_subTitle')) ? this.subTitle : this.legendSettings.title;\n            (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.showTooltip)(title, x, y, this.element.offsetWidth, this.element.id + '_EJ2_Title_Tooltip', (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(this.element.id + '_Secondary_Element'), isTouch);\n        }\n        else {\n            (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.removeElement)(this.element.id + '_EJ2_Title_Tooltip');\n        }\n    };\n    /**\n     * Handles the keyboard onkeydown on chart.\n     *\n     * @param {KeyboardEvent} e - The keyboard event.\n     * @returns {boolean} - false\n     * @private\n     */\n    AccumulationChart.prototype.accumulationChartKeyDown = function (e) {\n        var actionKey = '';\n        if (this.tooltip.enable && ((e.code === 'Tab' && this.previousTargetId.indexOf('Series') > -1) || e.code === 'Escape')) {\n            actionKey = 'ESC';\n        }\n        if (e.code.indexOf('Arrow') > -1) {\n            e.preventDefault();\n        }\n        if (e.ctrlKey && (e.key === 'p')) {\n            e.preventDefault();\n            actionKey = 'CtrlP';\n        }\n        if (actionKey !== '') {\n            this.chartKeyboardNavigations(e, e.target.id, actionKey);\n        }\n        if (e.code === 'Tab') {\n            this.removeNavigationStyle();\n        }\n        return false;\n    };\n    /**\n     * Handles the keyboard onkeydown on chart.\n     *\n     * @param {KeyboardEvent} e - The keyboard event.\n     * @returns {boolean} - false\n     * @private\n     */\n    AccumulationChart.prototype.accumulationChartKeyUp = function (e) {\n        var actionKey = '';\n        var targetId = e.target['id'];\n        var legendElement = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(this.element.id + '_chart_legend_translate_g');\n        var pagingElement = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(this.element.id + '_chart_legend_pageup');\n        if (legendElement) {\n            var firstChild = legendElement.firstElementChild;\n            var className = firstChild.getAttribute('class');\n            if (className && className.indexOf('e-accumulationchart-focused') === -1) {\n                className = className + ' e-accumulationchart-focused';\n            }\n            else if (!className) {\n                className = 'e-accumulationchart-focused';\n            }\n            firstChild.setAttribute('class', className);\n        }\n        if (pagingElement) {\n            pagingElement.setAttribute('class', 'e-accumulationchart-focused');\n        }\n        this.removeNavigationStyle();\n        if (e.code === 'Tab') {\n            if (this.previousTargetId !== '') {\n                if (this.previousTargetId.indexOf('_Point_') > -1 && targetId.indexOf('_Point_') === -1) {\n                    var groupElement = document.getElementById(this.previousTargetId).parentElement;\n                    this.setTabIndex(groupElement.children[this.currentPointIndex], groupElement.firstElementChild);\n                    this.currentPointIndex = 0;\n                }\n                else if (this.previousTargetId.indexOf('_chart_legend_page') > -1 && targetId.indexOf('_chart_legend_page') === -1 &&\n                    targetId.indexOf('_chart_legend_g_') === -1) {\n                    this.setTabIndex(e.target, pagingElement);\n                }\n                else if (this.previousTargetId.indexOf('_chart_legend_g_') > -1 && targetId.indexOf('chart_legend_g_') === -1 && legendElement) {\n                    this.setTabIndex(legendElement.children[this.currentLegendIndex], legendElement.firstElementChild);\n                }\n            }\n            this.previousTargetId = targetId;\n            if (targetId.indexOf('_chart_legend_g_') > -1 && this.highlightMode !== 'None') {\n                targetId = e.target['lastElementChild'].id;\n                actionKey = 'Tab';\n            }\n            else if (targetId.indexOf('_Point_') > -1 && (this.highlightMode !== 'None' || this.tooltip.enable)) {\n                actionKey = 'Tab';\n            }\n        }\n        else if (e.code.indexOf('Arrow') > -1) {\n            e.preventDefault();\n            if (targetId.indexOf('_chart_legend_page') > -1) {\n                e.target.removeAttribute('tabindex');\n                this.previousTargetId = targetId = this.element.id + '_chart_legend_page' + (e.code === 'ArrowRight' ? 'up' : 'down');\n                this.focusTarget((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(targetId));\n            }\n            else if ((targetId.indexOf('_chart_legend_') > -1) && legendElement) {\n                e.target.removeAttribute('tabindex');\n                this.currentLegendIndex += (e.code === 'ArrowUp' || e.code === 'ArrowRight') ? +1 : -1;\n                this.currentLegendIndex = this.getActualIndex(this.currentLegendIndex, legendElement.children.length);\n                var currentLegend = legendElement.children[this.currentLegendIndex];\n                this.focusTarget(currentLegend);\n                this.removeNavigationStyle();\n                this.setNavigationStyle(currentLegend.id);\n                this.previousTargetId = targetId = currentLegend.lastElementChild.id;\n                actionKey = this.highlightMode !== 'None' ? 'ArrowMove' : '';\n            }\n            else if (targetId.indexOf('_Point_') > -1) {\n                e.target.setAttribute('tabindex', '-1');\n                this.currentPointIndex += (e.code === 'ArrowUp' || e.code === 'ArrowRight') ? +1 : -1;\n                var totalLength = 0;\n                for (var i = 0; i < e.target['parentElement'].children.length; i++) {\n                    totalLength = e.target['parentElement'].children[i].id.indexOf('_Point_') > -1 ? totalLength + 1 : totalLength;\n                }\n                this.currentPointIndex = this.getActualIndex(this.currentPointIndex, totalLength);\n                targetId = this.element.id + '_Series_0_Point_' + this.currentPointIndex;\n                this.focusTarget((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(targetId));\n                this.removeNavigationStyle();\n                this.setNavigationStyle(targetId);\n                actionKey = this.tooltip.enable ? 'ArrowMove' : '';\n            }\n        }\n        else if ((e.code === 'Enter' || e.code === 'Space') && ((targetId.indexOf('_chart_legend_') > -1) ||\n            (targetId.indexOf('_Point_') > -1))) {\n            targetId = (targetId.indexOf('_chart_legend_g') > -1) ? e.target['lastElementChild'].id : targetId;\n            actionKey = 'Enter';\n        }\n        if (actionKey !== '') {\n            this.chartKeyboardNavigations(e, targetId, actionKey);\n        }\n        if (e.code === 'Tab') {\n            this.setNavigationStyle(targetId);\n        }\n        return false;\n    };\n    AccumulationChart.prototype.setTabIndex = function (previousElement, currentElement) {\n        if (previousElement) {\n            previousElement.removeAttribute('tabindex');\n        }\n        if (currentElement) {\n            currentElement.setAttribute('tabindex', '0');\n        }\n    };\n    AccumulationChart.prototype.getActualIndex = function (index, totalLength) {\n        return index > totalLength - 1 ? 0 : (index < 0 ? totalLength - 1 : index);\n    };\n    AccumulationChart.prototype.focusTarget = function (element) {\n        var className = element.getAttribute('class');\n        element.setAttribute('tabindex', '0');\n        if (className && className.indexOf('e-accumulationchart-focused') === -1) {\n            className = className + ' e-accumulationchart-focused';\n        }\n        else if (!className) {\n            className = 'e-accumulationchart-focused';\n        }\n        element.setAttribute('tabindex', '0');\n        element.setAttribute('class', className);\n        element.focus();\n        return element.id;\n    };\n    /**\n     * Handles the document onkey.\n     *\n     * @param {KeyboardEvent} e - The keyboard event.\n     * @returns {void}\n     * @private\n     */\n    AccumulationChart.prototype.documentKeyHandler = function (e) {\n        // 74 - J\n        if (e.altKey && e.keyCode === 74 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element)) {\n            this.element.focus();\n        }\n    };\n    /**\n     * Handles to set style for key event on the document.\n     *\n     * @param {target} target - element which currently focused.\n     * @returns {void}\n     * @private\n     */\n    AccumulationChart.prototype.setNavigationStyle = function (target) {\n        var currentElement = document.getElementById(target);\n        if (currentElement) {\n            currentElement.style.setProperty('outline', this.focusBorderWidth + \"px solid \" + (this.focusBorderColor || this.themeStyle.tabColor));\n            currentElement.style.setProperty('margin', this.focusBorderMargin + \"px\");\n        }\n    };\n    /**\n     * Handles to remove style for key event on the document.\n     *\n     * @returns {void}\n     * @private\n     */\n    AccumulationChart.prototype.removeNavigationStyle = function () {\n        var currentElement = document.querySelectorAll(\"path[id*=_Series_0_Point_], [id*=\" + this.element.id + \"], [id*=_ChartBorder], text[id*=_title],g[id*=_chart_legend]\");\n        if (currentElement) {\n            currentElement.forEach(function (element) {\n                if (element instanceof HTMLElement || element instanceof SVGElement) {\n                    element.style.setProperty('outline', 'none');\n                    element.style.setProperty('margin', '');\n                }\n            });\n        }\n    };\n    AccumulationChart.prototype.chartKeyboardNavigations = function (e, targetId, actionKey) {\n        this.isLegendClicked = false;\n        switch (actionKey) {\n            case 'Tab':\n            case 'ArrowMove':\n                if (this.accumulationHighlightModule) {\n                    //  this.accumulationHighlightModule.removeHighlightElements();\n                }\n                if (targetId.indexOf('_Point_') > -1) {\n                    var seriesIndex = +(targetId.split('_Series_')[1].split('_Point_')[0]);\n                    var pointIndex = +(targetId.split('_Series_')[1].replace('_Symbol', '').split('_Point_')[1]);\n                    var pointRegion = this.visibleSeries[seriesIndex].points[pointIndex].symbolLocation;\n                    this.mouseX = pointRegion.x + this.initialClipRect.x;\n                    this.mouseY = pointRegion.y + this.initialClipRect.y;\n                    if (this.accumulationHighlightModule) {\n                        var targetElement = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(targetId);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(targetElement)) {\n                            if (targetElement.id.indexOf('text') > 1) {\n                                targetElement = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(targetElement.id.replace('text', 'shape'));\n                            }\n                            if ((targetElement).hasAttribute('class') && (targetElement).getAttribute('class').indexOf('highlight') > -1) {\n                                return;\n                            }\n                            this.accumulationHighlightModule.calculateSelectedElements(this, targetElement, 'mousemove');\n                            return;\n                        }\n                    }\n                    if (this.accumulationTooltipModule) {\n                        var series = this.visibleSeries[seriesIndex];\n                        var data = void 0;\n                        if (series.enableTooltip) {\n                            data = new _common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.AccPointData(series.points[pointIndex], series);\n                        }\n                        this.accumulationTooltipModule.renderSeriesTooltip(this, data);\n                    }\n                }\n                if (this.accumulationHighlightModule && this.highlightMode !== 'None') {\n                    targetId = targetId.indexOf('_chart_legend_g_') > -1 ? document.getElementById(targetId).firstChild['id'] : targetId;\n                    var legendID = this.element.id + '_chart_legend';\n                    var legendItemsId = [legendID + '_text_', legendID + '_shape_marker_',\n                        legendID + '_shape_'];\n                    for (var i = 0; i < legendItemsId.length; i++) {\n                        var id = legendItemsId[i];\n                        if (targetId.indexOf(id) > -1) {\n                            document.getElementById(targetId).setAttribute('class', '');\n                            this.accumulationHighlightModule.legendSelection(this, 0, parseInt(targetId.split(id)[1], 10), (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(targetId), 'mousemove');\n                            break;\n                        }\n                    }\n                }\n                break;\n            case 'Enter':\n            case 'Space':\n                if (targetId.indexOf('_chart_legend_') > -1 && this.accumulationLegendModule) {\n                    this.isLegendClicked = true;\n                    this.accumulationLegendModule.click(e);\n                    this.focusChild(document.getElementById(targetId).parentElement);\n                    this.setNavigationStyle(document.getElementById(targetId).parentElement.id);\n                }\n                else {\n                    if (this.accumulationSelectionModule) {\n                        this.accumulationSelectionModule.calculateSelectedElements(this, document.getElementById(targetId), 'click');\n                    }\n                    this.setNavigationStyle(targetId);\n                }\n                break;\n            case 'CtrlP':\n                this.print();\n                break;\n            case 'ESC':\n                if (this.accumulationTooltipModule) {\n                    this.accumulationTooltipModule.removeTooltip(1);\n                }\n                break;\n        }\n    };\n    AccumulationChart.prototype.focusChild = function (element) {\n        element.setAttribute('tabindex', '0');\n        var className = element.getAttribute('class');\n        element.setAttribute('tabindex', '0');\n        if (className && className.indexOf('e-accumulationchart-focused') === -1) {\n            className = 'e-accumulationchart-focused ' + className;\n        }\n        else if (!className) {\n            className = 'e-accumulationchart-focused';\n        }\n        element.setAttribute('class', className);\n        element.focus();\n        return element.id;\n    };\n    /**\n     * Handles the mouse double click on accumulation chart.\n     *\n     * @param {PointerEvent} e - The pointer event.\n     * @returns {boolean} - Mouse double click of accumulation chart.\n     * @private\n     */\n    AccumulationChart.prototype.accumulationOnDoubleClick = function (e) {\n        this.trigger(_common_model_constants__WEBPACK_IMPORTED_MODULE_4__.chartDoubleClick, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        return false;\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - The pointer event.\n     * @returns {boolean} - Mouse click of accumulation chart.\n     * @private\n     */\n    AccumulationChart.prototype.accumulationOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.accumulationLegendModule && this.legendSettings.visible) {\n            this.accumulationLegendModule.click(e);\n        }\n        if (this.selectionMode !== 'None' && this.accumulationSelectionModule) {\n            this.accumulationSelectionModule.calculateSelectedElements(this, e.target, e.type);\n        }\n        if (this.visibleSeries[0].explode) {\n            this.accBaseModule.processExplode(e);\n        }\n        if (this.enableBorderOnMouseMove && this.pieSeriesModule && this.type === 'Pie') {\n            this.pieSeriesModule.findSeries(e, this.series[0].borderRadius);\n        }\n        this.trigger(_common_model_constants__WEBPACK_IMPORTED_MODULE_4__.chartMouseClick, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        if (this.pointClick) {\n            this.triggerPointEvent(_common_model_constants__WEBPACK_IMPORTED_MODULE_4__.pointClick, e.target, e);\n        }\n        this.removeNavigationStyle();\n        return false;\n    };\n    AccumulationChart.prototype.triggerPointEvent = function (event, element, e) {\n        var evt = e;\n        var indexes = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.indexFinder)(element.id, true);\n        if (indexes.series >= 0 && indexes.point >= 0) {\n            this.trigger(event, {\n                series: this.isBlazor ? {} : this.series[indexes.series],\n                point: this.series[indexes.series].points[indexes.point],\n                seriesIndex: indexes.series, pointIndex: indexes.point,\n                x: this.mouseX, y: this.mouseY, pageX: evt.pageX, pageY: evt.pageY\n            });\n        }\n    };\n    /**\n     * Handles the mouse right click on accumulation chart.\n     *\n     * @param {MouseEvent | PointerEvent} event - The mouse event or pointer event.\n     * @returns {boolean} - Right click of accumulation chart.\n     * @private\n     */\n    AccumulationChart.prototype.accumulationRightClick = function (event) {\n        if (event.buttons === 2 && event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the mouse leave on accumulation chart.\n     *\n     * @param {PointerEvent} e - The pointer event.\n     * @returns {boolean} - Mouse leave of accumulation chart.\n     * @private\n     */\n    AccumulationChart.prototype.accumulationMouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.trigger(_common_model_constants__WEBPACK_IMPORTED_MODULE_4__.chartMouseLeave, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        this.notify(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer ? 'pointerleave' : 'mouseleave', e);\n        var borderElement = document.getElementById(this.element.id + 'PointHover_Border');\n        if (borderElement) {\n            this.pieSeriesModule.removeBorder(borderElement, 1000);\n            borderElement = null;\n        }\n        return false;\n    };\n    /**\n     * Method to set culture for chart.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.setCulture = function () {\n        this.intl = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization();\n    };\n    /**\n     * Method to create SVG element for accumulation chart.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.createPieSvg = function () {\n        this.removeSvg();\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.createSvg)(this);\n    };\n    /**\n     * To Remove the SVG from accumulation chart.\n     *\n     * @returns {boolean} - Remove svg.\n     * @private\n     */\n    AccumulationChart.prototype.removeSvg = function () {\n        if (this.redraw) {\n            return null;\n        }\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.blazorTemplatesReset)(this);\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.removeElement)(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.svgObject);\n            }\n        }\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.removeElement)('EJ2_legend_tooltip');\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.removeElement)('EJ2_datalabel_tooltip');\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.removeElement)(this.element.id + 'PointHover_Border');\n    };\n    /**\n     * Method to create the secondary element for tooltip, datalabel and annotaitons.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.createSecondaryElement = function () {\n        var element = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.redrawElement)(this.redraw, this.element.id + '_Secondary_Element') ||\n            this.createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: relative'\n            });\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.appendChildElement)(false, this.element, element, this.redraw);\n    };\n    /**\n     * Method to find visible series based on series types.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.calculateVisibleSeries = function () {\n        this.visibleSeries = [];\n        for (var i = 0, length_1 = this.series.length; i < length_1; i++) {\n            this.series[i].index = i;\n            if (this.series[i].type === this.type && this.visibleSeries.length === 0) {\n                this.visibleSeries.push(this.series[i]);\n                break;\n            }\n        }\n    };\n    /**\n     * To find points from dataSource.\n     *\n     * @param {boolean} render - Indicates whether to render the points (default: true).\n     * @returns {void}\n     */\n    AccumulationChart.prototype.processData = function (render) {\n        if (render === void 0) { render = true; }\n        this.seriesCounts = 0;\n        for (var _i = 0, _a = this.visibleSeries; _i < _a.length; _i++) {\n            var series = _a[_i];\n            series.dataModule = new _common_model_data__WEBPACK_IMPORTED_MODULE_8__.Data(series.dataSource || this.dataSource, series.query);\n            series.refreshDataManager(this, render);\n        }\n    };\n    /**\n     * To refresh the accumulation chart.\n     *\n     * @private\n     * @returns {void}\n     */\n    AccumulationChart.prototype.refreshChart = function () {\n        this.doGrouppingProcess();\n        this.createPieSvg();\n        this.calculateBounds();\n        this.renderElements();\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.removeElement)('chartmeasuretext');\n    };\n    /**\n     * Method to find groupped points.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.doGrouppingProcess = function () {\n        var series = this.visibleSeries[0];\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(series.resultData) && ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(series.lastGroupTo) &&\n            series.lastGroupTo !== series.groupTo))) {\n            series.getPoints(series.resultData, this);\n        }\n    };\n    /**\n     * Method to calculate bounds for accumulation chart.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.calculateBounds = function () {\n        this.initialClipRect = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height);\n        this.titleCollection = [];\n        this.subTitleCollection = [];\n        var titleHeight = 0;\n        var subTitleHeight = 0;\n        var maxWidth = 0;\n        var titleWidth = 0;\n        if (this.title) {\n            this.titleCollection = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getTitle)(this.title, this.titleStyle, this.initialClipRect.width, this.enableRtl, this.themeStyle.chartTitleFont);\n        }\n        titleHeight = this.title ? (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.measureText)(this.title, this.titleStyle, this.themeStyle.chartTitleFont).height * this.titleCollection.length : titleHeight;\n        if (this.subTitle) {\n            for (var _i = 0, _a = this.titleCollection; _i < _a.length; _i++) {\n                var titleText = _a[_i];\n                titleWidth = (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.measureText)(titleText, this.titleStyle, this.themeStyle.chartSubTitleFont).width;\n                maxWidth = titleWidth > maxWidth ? titleWidth : maxWidth;\n            }\n            this.subTitleCollection = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getTitle)(this.subTitle, this.subTitleStyle, this.initialClipRect.width, this.enableRtl, this.themeStyle.chartSubTitleFont);\n            subTitleHeight = ((0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.measureText)(this.subTitle, this.subTitleStyle, this.themeStyle.chartSubTitleFont).height * this.subTitleCollection.length);\n        }\n        var left = this.margin.left + this.border.width;\n        var width = this.availableSize.width - left - this.margin.right - this.border.width;\n        var top = this.margin.top + this.border.width;\n        var height = this.availableSize.height - top - this.border.width - this.margin.bottom;\n        var marginTotal = subTitleHeight + titleHeight;\n        switch (this.titleStyle.position) {\n            case 'Top':\n                left = 0;\n                top = subTitleHeight + titleHeight;\n                width = this.margin.right + this.margin.left;\n                height = this.margin.bottom + this.margin.top;\n                break;\n            case 'Bottom':\n                height -= (marginTotal + this.margin.bottom * 2);\n                break;\n            case 'Left':\n                left += marginTotal;\n                width -= marginTotal;\n                break;\n            case 'Right':\n                width -= marginTotal;\n                break;\n        }\n        if (this.titleStyle.position !== 'Top') {\n            this.initialClipRect = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.Rect(left, top, width, height);\n        }\n        else {\n            this.initialClipRect = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.subtractRect)(this.initialClipRect, new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.Rect(left, top, width, height));\n        }\n        this.calculateLegendBounds();\n    };\n    /**\n     * Method to calculate legend bounds for accumulation chart.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.calculateLegendBounds = function () {\n        if (!this.accumulationLegendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        this.accumulationLegendModule.getLegendOptions(this, this.visibleSeries);\n        this.accumulationLegendModule.calculateLegendBounds(this.initialClipRect, this.availableSize, null);\n    };\n    /**\n     * To render elements for accumulation chart.\n     *\n     * @private\n     * @returns {void}\n     */\n    AccumulationChart.prototype.renderElements = function () {\n        this.renderBorder();\n        this.createSecondaryElement();\n        this.renderSeries();\n        this.renderTitle();\n        this.renderCenterLabel(true);\n        this.renderLegend();\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.appendChildElement)(false, this.element, this.svgObject, this.redraw);\n        this.processSelection();\n        this.processExplode();\n        this.renderAnnotation();\n        this.setSecondaryElementPosition();\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.updateBlazorTemplate)(this.element.id + '_DataLabel', 'Template', this.series[0].dataLabel);\n        this.trigger('loaded', { accumulation: this.isBlazor ? {} : this, chart: this.isBlazor ? {} : this });\n        this.animateSeries = false;\n    };\n    /**\n     * To set the left and top position for data label template for center aligned chart.\n     *\n     * @private\n     * @returns {void}\n     */\n    AccumulationChart.prototype.setSecondaryElementPosition = function () {\n        var tooltipParent = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(this.element.id + '_Secondary_Element');\n        if (!tooltipParent) {\n            return;\n        }\n        var rect = this.element.getBoundingClientRect();\n        var svgRect = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(this.element.id + '_svg').getBoundingClientRect();\n        tooltipParent.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n        tooltipParent.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n    };\n    /**\n     * To render the annotaitions for accumulation series.\n     *\n     * @private\n     * @returns {void}\n     */\n    AccumulationChart.prototype.renderAnnotation = function () {\n        if (this.annotationModule) {\n            this.annotationModule.renderAnnotations((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(this.element.id + '_Secondary_Element'));\n        }\n    };\n    /**\n     * Method to process the explode in accumulation chart.\n     *\n     * @private\n     * @returns {void}\n     */\n    AccumulationChart.prototype.processExplode = function () {\n        if (this.redraw) {\n            return null;\n        }\n        if (!this.visibleSeries[0].explode) {\n            return null;\n        }\n        this.accBaseModule.invokeExplode();\n    };\n    /**\n     * Method to render series for accumulation chart.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.renderSeries = function () {\n        if (!this.redraw) {\n            this.svgObject.appendChild(this.renderer.createGroup({ id: this.element.id + '_SeriesCollection' }));\n        }\n        for (var _i = 0, _a = this.visibleSeries; _i < _a.length; _i++) {\n            var series = _a[_i];\n            if (series.visible && this[((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.firstToLowerCase)(series.type) + 'SeriesModule')]) {\n                this[((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.firstToLowerCase)(series.type) + 'SeriesModule')].initProperties(this, series);\n                series.renderSeries(this, this.redraw);\n            }\n        }\n    };\n    /**\n     * Method to render border for accumulation chart.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.renderBorder = function () {\n        var padding = this.border.width;\n        var rect = new _common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.RectOption(this.element.id + '_border', this.background || this.themeStyle.background, this.border, 1, new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.Rect(padding / 2, padding / 2, this.availableSize.width - padding, this.availableSize.height - padding), 0, 0, '', this.border.dashArray);\n        var htmlObject = this.renderer.drawRectangle(rect);\n        htmlObject.setAttribute('aria-hidden', 'true');\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.appendChildElement)(false, this.svgObject, htmlObject, this.redraw);\n        // to draw back ground image for accumulation chart\n        var backGroundImage = this.backgroundImage;\n        if (backGroundImage) {\n            var image = new _common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.ImageOption(this.availableSize.height - padding, this.availableSize.width - padding, backGroundImage, 0, 0, this.element.id + '_background', 'visible', 'none');\n            (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.appendChildElement)(false, this.svgObject, this.renderer.drawImage(image), this.redraw);\n        }\n    };\n    /**\n     * Method to render legend for accumulation chart.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.renderLegend = function () {\n        if (!this.accumulationLegendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.accumulationLegendModule.legendCollections.length) {\n            if (this.visibleSeries[0].type === 'Pie') {\n                this.accumulationLegendModule.getSmartLegendLocation(this.visibleSeries[0].labelBound, this.accumulationLegendModule.legendBounds, this.margin);\n            }\n            this.accumulationLegendModule.renderLegend(this, this.legendSettings, this.accumulationLegendModule.legendBounds, this.redraw);\n        }\n    };\n    /**\n     * To process the selection in accumulation chart.\n     *\n     * @private\n     * @returns {void}\n     */\n    AccumulationChart.prototype.processSelection = function () {\n        var selectedDataIndexes = [];\n        if (this.accumulationSelectionModule && this.selectionMode !== 'None') {\n            selectedDataIndexes = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], this.accumulationSelectionModule.selectedDataIndexes, null, true);\n            this.accumulationSelectionModule.invokeSelection(this);\n        }\n        if (this.accumulationHighlightModule && this.highlightMode !== 'None') {\n            this.accumulationHighlightModule.invokeHighlight(this);\n        }\n        if (selectedDataIndexes.length > 0) {\n            this.accumulationSelectionModule.selectedDataIndexes = selectedDataIndexes;\n            this.accumulationSelectionModule.redrawSelection(this);\n        }\n    };\n    /**\n     * To render title for accumulation chart.\n     *\n     * @returns {void}\n     */\n    AccumulationChart.prototype.renderTitle = function () {\n        var margin = this.margin;\n        if (!this.title) {\n            return null;\n        }\n        var textAnchor = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getTextAnchor)(this.titleStyle.textAlignment, this.enableRtl);\n        var titleSize = (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.measureText)(this.title, this.titleStyle, this.themeStyle.chartTitleFont);\n        var padding = 20;\n        var titleHeight = this.margin.top + (titleSize.height * 3 / 4);\n        var legendHeight = this.accumulationLegendModule === undefined ? 0 : this.legendSettings.position === 'Top' ?\n            this.accumulationLegendModule.legendBounds.height : 0;\n        var explode = this.explodeDistance === 0 ? 0 : this.explodeDistance;\n        var expodeValue = legendHeight !== 0 ? 0 : explode / 2;\n        var rect = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.Rect(margin.left, 0, this.availableSize.width - margin.left - margin.right, 0);\n        var positionY = this.margin.top + ((titleSize.height) * 3 / 4);\n        var positionX = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.titlePositionX)(rect, this.titleStyle || this.themeStyle.chartTitleFont);\n        var rotation;\n        var alignment = this.titleStyle.textAlignment;\n        var subtitleSize = (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.measureText)(this.subTitle, this.subTitleStyle, this.themeStyle.chartSubTitleFont);\n        switch (this.titleStyle.position) {\n            case 'Top':\n                positionX = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.titlePositionX)(rect, this.titleStyle);\n                positionY = titleHeight;\n                break;\n            case 'Bottom':\n                positionX += textAnchor === 'start' ? this.border.width :\n                    textAnchor === 'end' ? this.border.width : 0;\n                positionY = this.availableSize.height - this.margin.bottom - subtitleSize.height - (titleSize.height / 2);\n                break;\n            case 'Left':\n                positionX = this.margin.left + ((titleSize.height) * 3 / 4);\n                positionY = alignment === 'Near' ? margin.bottom + this.border.width :\n                    alignment === 'Far' ? this.availableSize.height - margin.bottom - this.border.width : this.availableSize.height / 2;\n                textAnchor = alignment === 'Near' ? 'end' : alignment === 'Far' ? 'start' : 'middle';\n                textAnchor = this.enableRtl ? (textAnchor === 'end' ? 'start' : textAnchor === 'start' ? 'end' : textAnchor) : textAnchor;\n                rotation = 'rotate(' + -90 + ',' + positionX + ',' + positionY + ')';\n                break;\n            case 'Right':\n                positionX = this.availableSize.width - this.margin.right - ((titleSize.height) * 3 / 4);\n                positionY = alignment === 'Near' ? margin.bottom + this.border.width :\n                    alignment === 'Far' ? this.availableSize.height - margin.bottom - this.border.width : this.availableSize.height / 2;\n                textAnchor = alignment === 'Near' ? 'start' : alignment === 'Far' ? 'end' : 'middle';\n                textAnchor = this.enableRtl ? (textAnchor === 'end' ? 'start' : textAnchor === 'start' ? 'end' : textAnchor) : textAnchor;\n                rotation = 'rotate(' + 90 + ',' + positionX + ',' + positionY + ')';\n                break;\n            case 'Custom':\n                positionX = this.titleStyle.x;\n                positionY = this.titleStyle.y;\n                textAnchor = 'middle';\n                break;\n        }\n        var options = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.TextOption(this.element.id + '_title', positionX, positionY, textAnchor, this.titleCollection, rotation, 'auto');\n        var space = (this.series[0].type === 'Pie' && this.visibleSeries[0].dataLabel.position === 'Outside' && this.visibleSeries[0].dataLabel.connectorStyle.length) ? (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.stringToNumber)(this.visibleSeries[0].dataLabel.connectorStyle.length, this.accBaseModule.radius) : 0;\n        if (!this.subTitle && (this.series[0].type !== 'Funnel' && this.series[0].type !== 'Pyramid')) {\n            options.y = parseInt(this.series[0].radius, 10) >= 80 ? options.y :\n                (this.accBaseModule.center.y - this.accBaseModule.radius - padding\n                    - titleHeight - legendHeight - expodeValue - space);\n            if (this.series[0].type === 'Pie' && (parseInt(this.series[0].radius, 10) < 80 || isNaN(parseInt(this.series[0].radius, 10)))) {\n                options.y = options.y < (this.initialClipRect.y - legendHeight) ? (this.initialClipRect.y - legendHeight) : options.y;\n            }\n        }\n        var element = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.textElement)(this.renderer, options, this.titleStyle, this.titleStyle.color || this.themeStyle.chartTitleFont.color, this.svgObject, false, this.redraw, null, null, null, null, null, null, null, null, this.themeStyle.chartTitleFont);\n        if (element) {\n            element.setAttribute('tabindex', '0');\n            element.style.outline = 'none';\n            element.parentNode.insertBefore(element, this.svgObject.children && this.svgObject.children[1]);\n        }\n        if (this.subTitle) {\n            this.renderSubTitle(options);\n        }\n    };\n    /**\n     * To update center label on mouse move.\n     *\n     * @param {Event} event - The mouse move event.\n     * @returns {void}\n     */\n    AccumulationChart.prototype.updateCenterLabel = function (event) {\n        var data = this.getPieData(event);\n        this.format = (data.point == null) ? '' : this.parseFormat(data.point, this.visibleSeries[0], this.centerLabel.hoverTextFormat);\n        this.renderCenterLabel();\n    };\n    /**\n     * Function to get pie data on mouse move.\n     *\n     * @param {PointerEvent | TouchEvent} e - The event object containing mouse or touch coordinates.\n     * @returns {AccPointData} - The data of the pie.\n     */\n    AccumulationChart.prototype.getPieData = function (e) {\n        var dataIndex = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.indexFinder)(e.target.id, true);\n        if (!isNaN(dataIndex.series)) {\n            return new _common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.AccPointData(this.visibleSeries[0].points[dataIndex.point], this.visibleSeries[0]);\n        }\n        return new _common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.AccPointData(null, null);\n    };\n    /**\n     * Function to get format of pie data on mouse move.\n     *\n     * @param {AccPoints} point - The point data.\n     * @param {AccumulationSeries} series - The series to which the point belongs.\n     * @param {string} format - The format string for the data.\n     * @returns {string} - The formatted data.\n     */\n    AccumulationChart.prototype.parseFormat = function (point, series, format) {\n        var value;\n        var textValue;\n        var regExp = RegExp;\n        for (var _i = 0, _a = Object.keys(point); _i < _a.length; _i++) {\n            var dataValue = _a[_i];\n            value = new regExp('${point' + '.' + dataValue + '}', 'gm');\n            format = format.replace(value.source, point[dataValue]);\n        }\n        for (var _b = 0, _c = Object.keys(Object.getPrototypeOf(series)); _b < _c.length; _b++) {\n            var dataValue = _c[_b];\n            value = new regExp('${series' + '.' + dataValue + '}', 'gm');\n            textValue = series[dataValue];\n            format = format.replace(value.source, textValue);\n        }\n        return format;\n    };\n    /**\n     * To render center label for accumulation chart.\n     *\n     * @param {boolean} isanimate - Specifies whether to animate the rendering.\n     * @param {boolean} pointAnimation - Specifies whether point animation is enabled.\n     * @private\n     * @returns {void}\n     */\n    AccumulationChart.prototype.renderCenterLabel = function (isanimate, pointAnimation) {\n        var _this = this;\n        if (!this.centerLabel.text || this.type !== 'Pie') {\n            return null;\n        }\n        var initialPositions = [];\n        if (pointAnimation) {\n            var tspanElements_1 = ((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getElement)(this.element.id + '_centerLabel')).querySelectorAll('tspan');\n            tspanElements_1.forEach(function (tspan) {\n                initialPositions.push({\n                    x: tspan.getAttribute('x'),\n                    y: tspan.getAttribute('y')\n                });\n            });\n        }\n        var series = this.series[0];\n        var ypos;\n        var getAnchor = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getTextAnchor)(this.centerLabel.textStyle.textAlignment, this.enableRtl);\n        var padding = 10;\n        // To get side of square inside the circle , which is considered as maxwidth , d*sqrt(0.5)\n        var maxwidth = this.pieSeriesModule.innerRadius ? ((2 * this.pieSeriesModule.innerRadius) * (0.7071067)) :\n            ((2 * this.pieSeriesModule.radius) * (0.7071067));\n        var labelCollection = (this.format || this.centerLabel.text).split('<br>');\n        var centerLabelSize = (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.measureText)(labelCollection[0], this.centerLabel.textStyle, this.themeStyle.chartTitleFont);\n        var collectionLength = labelCollection.length;\n        for (var i = 0; i < collectionLength; i++) {\n            var labelSize = (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.measureText)(labelCollection[i], this.centerLabel.textStyle, this.themeStyle.chartTitleFont);\n            if (labelSize.width > maxwidth) {\n                labelCollection.splice.apply(labelCollection, [i, 1].concat(((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.textWrap)(labelCollection[i], maxwidth, this.centerLabel.textStyle, this.enableRtl, null, null, this.themeStyle.chartTitleFont))));\n            }\n        }\n        if (centerLabelSize.height * (labelCollection.length) > maxwidth) {\n            ypos = this.accBaseModule.center.y + ((centerLabelSize.height + padding) / 2) - (maxwidth / 2);\n        }\n        else if ((series.startAngle && series.endAngle) && (Math.abs(series.endAngle - series.startAngle) === 180)) {\n            ypos = this.accBaseModule.center.y - (centerLabelSize.height * labelCollection.length / 2) +\n                ((centerLabelSize.height + padding) / 2) - this.pieSeriesModule.innerRadius / 2 +\n                (this.pieSeriesModule.innerRadius ? padding : 0);\n            if ((centerLabelSize.height * (labelCollection.length) + this.pieSeriesModule.innerRadius / 2 + padding > maxwidth)) {\n                ypos = this.accBaseModule.center.y + ((centerLabelSize.height + padding) / 2) - (maxwidth / 2);\n            }\n        }\n        else {\n            ypos = labelCollection.length > 1 ? (this.accBaseModule.center.y - (centerLabelSize.height * labelCollection.length / 2) +\n                ((centerLabelSize.height + padding) / 2)) : (this.accBaseModule.center.y + (centerLabelSize.height) / 4);\n        }\n        var options = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.TextOption(this.element.id + '_centerLabel', (((this.series[0].animation.enable && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.animationMode !== 'Disable') || _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.animationMode === 'Enable') && isanimate) ? this.pieSeriesModule.center.x - 1 : this.pieSeriesModule.center.x, ypos, getAnchor, '', '', 'auto');\n        var element = (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.textElement)(this.renderer, options, this.centerLabel.textStyle, this.centerLabel.textStyle.color ||\n            this.themeStyle.chartTitleFont.color, this.svgObject, false, this.redraw, null, null, null, null, null, null, null, null, this.themeStyle.chartTitleFont);\n        var tspanElements = [];\n        for (var i = 0; i < labelCollection.length; i++) {\n            var tspanOption = { x: options.x, y: options.y + (i * centerLabelSize.height), fill: '' };\n            var tspanElement = this.renderer.createTSpan(tspanOption, '');\n            tspanElement.style.fontFamily = 'inherit';\n            tspanElement.style.fontStyle = 'inherit';\n            tspanElement.style.fontSize = 'inherit';\n            tspanElement.style.fontWeight = (labelCollection[i].indexOf('<b>') > -1 || labelCollection[i].indexOf('</b>') > -1) ? 'bold' : 'inherit';\n            tspanElement.textContent = labelCollection[i].replace(/<\\/?b>/g, '');\n            element.appendChild(tspanElement);\n            tspanElements.push(tspanElement);\n        }\n        if (pointAnimation) {\n            tspanElements.forEach(function (tspanElement, index) {\n                _this.animateTspan(tspanElement, Number(initialPositions[index].x), Number(initialPositions[index].y), Number(tspanElement.getAttribute('x')), Number(tspanElement.getAttribute('y')), _this.duration);\n            });\n        }\n        if (isanimate && ((this.series[0].animation.enable && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.animationMode !== 'Disable') || _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.animationMode === 'Enable') && this.animateSeries) {\n            this.centerLabelDelay(element);\n        }\n    };\n    /**\n     * Animates the x and y attributes of a tspan element.\n     *\n     * @param {HTMLElement} element - The tspan element to animate.\n     * @param {number} startx - The initial x coordinate of the tspan.\n     * @param {number} starty - The initial y coordinate of the tspan.\n     * @param {number} endx - The final x coordinate of the tspan.\n     * @param {number} endy - The final y coordinate of the tspan.\n     * @param {number} duration - The duration of the animation in milliseconds.\n     *\n     * @private\n     * @returns {void}\n     */\n    AccumulationChart.prototype.animateTspan = function (element, startx, starty, endx, endy, duration) {\n        new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation({}).animate(element, {\n            duration: duration,\n            progress: function (args) {\n                element.style.animation = '';\n                var progress = args.timeStamp / args.duration;\n                var currentX = startx + (endx - startx) * progress;\n                var currentY = starty + (endy - starty) * progress;\n                element.setAttribute('x', currentX.toString());\n                element.setAttribute('y', currentY.toString());\n            },\n            end: function () {\n                element.setAttribute('x', endx.toString());\n                element.setAttribute('y', endy.toString());\n            }\n        });\n    };\n    /**\n     * Function to delay Center label at initial stage of accumulation chart.\n     *\n     * @param {Element} element - The element to delay.\n     * @returns {void}\n     */\n    AccumulationChart.prototype.centerLabelDelay = function (element) {\n        element.style.visibility = 'hidden';\n        var animation = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation({});\n        animation.animate(element, {\n            delay: this.duration ? this.duration : this.series[0].animation.duration,\n            progress: function (args) {\n                args.element.style.visibility = 'visible';\n            }\n        });\n    };\n    AccumulationChart.prototype.renderSubTitle = function (options) {\n        var maxWidth = 0;\n        var titleWidth = 0;\n        var padding = 10;\n        var alignment = this.titleStyle.textAlignment;\n        var subTitleElementSize = (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.measureText)(this.subTitle, this.subTitleStyle, this.themeStyle.chartSubTitleFont);\n        for (var _i = 0, _a = this.titleCollection; _i < _a.length; _i++) {\n            var titleText = _a[_i];\n            titleWidth = (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.measureText)(titleText, this.titleStyle, this.themeStyle.chartSubTitleFont).width;\n            maxWidth = titleWidth > maxWidth ? titleWidth : maxWidth;\n        }\n        var rect = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.Rect(alignment === 'Center' ? (options.x - maxWidth / 2) : alignment === 'Far' ? options.x - maxWidth : options.x, 0, maxWidth, 0);\n        if (this.titleStyle.position === 'Left') {\n            rect.x = alignment === 'Center' ? (options.x - maxWidth * 0.5) : alignment === 'Far' ? this.margin.left + ((subTitleElementSize.height) * 3 / 4) : (options.x - maxWidth);\n        }\n        var subTitleOption = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_7__.TextOption(this.element.id + '_subTitle', (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.titlePositionX)(rect, this.subTitleStyle), options.y * options.text.length + ((subTitleElementSize.height) * 3 / 4) + padding, (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.getTextAnchor)(this.subTitleStyle.textAlignment, this.enableRtl), this.subTitleCollection, options.transform, 'auto');\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.textElement)(this.renderer, subTitleOption, this.subTitleStyle, this.subTitleStyle.color || this.themeStyle.chartSubTitleFont.color, this.svgObject, false, this.redraw, null, null, null, null, null, null, null, null, this.themeStyle.chartSubTitleFont);\n    };\n    /**\n     * To get the series parent element.\n     *\n     * @private\n     * @returns {Element} - The parent element of the series.\n     */\n    AccumulationChart.prototype.getSeriesElement = function () {\n        return this.svgObject.getElementsByTagName('g')[0];\n    };\n    /**\n     * To refresh the all visible series points.\n     *\n     * @private\n     * @returns {void}\n     */\n    AccumulationChart.prototype.refreshSeries = function () {\n        for (var _i = 0, _a = this.visibleSeries; _i < _a.length; _i++) {\n            var series = _a[_i];\n            this.refreshPoints(series.points);\n        }\n    };\n    /**\n     * To refresh points label region and visible.\n     *\n     * @private\n     * @param {AccPoints[]} points - The array of points to refresh.\n     * @returns {void}\n     */\n    AccumulationChart.prototype.refreshPoints = function (points) {\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var point = points_1[_i];\n            point.labelPosition = null;\n            point.labelRegion = null;\n            point.labelVisible = true;\n        }\n    };\n    /**\n     * To get Module name.\n     *\n     * @private\n     * @returns {string} - Returns the module name.\n     */\n    AccumulationChart.prototype.getModuleName = function () {\n        return 'accumulationchart';\n    };\n    /**\n     * To destroy the accumulation charts.\n     *\n     * @private\n     * @returns {void}\n     */\n    AccumulationChart.prototype.destroy = function () {\n        /**\n         * To fix react timeout destroy issue.\n         */\n        if (this.element) {\n            this.unWireEvents();\n            _super.prototype.destroy.call(this);\n            this.element.classList.remove('e-accumulationchart');\n            this.element.classList.remove('e-accumulationchart-focused');\n            var element = document.getElementById(this.element.id + 'Keyboard_accumulationchart_focus');\n            if (element) {\n                element.remove();\n            }\n            (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_6__.removeElement)('chartmeasuretext');\n            this.removeSvg();\n            var highlightElement = document.getElementById(this.element.id + '_ej2_chart_highlight');\n            if (highlightElement) {\n                highlightElement.remove();\n            }\n            var selectionElement = document.getElementById(this.element.id + '_ej2_chart_selection');\n            if (selectionElement) {\n                selectionElement.remove();\n            }\n            this.svgObject = null;\n        }\n    };\n    /**\n     * To provide the array of modules needed for control rendering.\n     *\n     * @returns {ModuleDeclaration[]} - required modules.\n     * @private\n     */\n    AccumulationChart.prototype.requiredModules = function () {\n        var modules = [];\n        var enableAnnotation = false;\n        modules.push({\n            member: this.type + 'Series',\n            args: [this]\n        });\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'AccumulationLegend',\n                args: [this]\n            });\n        }\n        if (this.findDatalabelVisibility()) {\n            modules.push({\n                member: 'AccumulationDataLabel',\n                args: [this]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'AccumulationTooltip',\n                args: [this]\n            });\n        }\n        if (this.selectionMode !== 'None') {\n            modules.push({\n                member: 'AccumulationSelection',\n                args: [this]\n            });\n        }\n        if (this.highlightMode !== 'None') {\n            modules.push({\n                member: 'AccumulationHighlight',\n                args: [this]\n            });\n        }\n        if (this.enableExport || this.allowExport) {\n            modules.push({\n                member: 'Export',\n                args: [this]\n            });\n        }\n        enableAnnotation = this.annotations.some(function (value) {\n            return (value.content !== null);\n        });\n        if (enableAnnotation) {\n            modules.push({\n                member: 'Annotation',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * To find datalabel visibility in series.\n     *\n     * @returns {boolean} - false\n     */\n    AccumulationChart.prototype.findDatalabelVisibility = function () {\n        for (var _i = 0, _a = this.series; _i < _a.length; _i++) {\n            var series = _a[_i];\n            if (series.dataLabel.visible) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get visible series for accumulation chart by index.\n     *\n     * @param {AccumulationSeries[]} visibleSeries - The array of visible series in the accumulation chart.\n     * @param {number} index - The index of the series to retrieve.\n     * @returns {AccumulationSeries} - The visible series at the specified index.\n     */\n    AccumulationChart.prototype.changeVisibleSeries = function (visibleSeries, index) {\n        for (var _i = 0, visibleSeries_1 = visibleSeries; _i < visibleSeries_1.length; _i++) {\n            var series = visibleSeries_1[_i];\n            if (index === series.index) {\n                return series;\n            }\n        }\n        return null;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @private\n     * @returns {string} - The persisted data containing the properties.\n     */\n    AccumulationChart.prototype.getPersistData = function () {\n        return '';\n    };\n    /**\n     * Method to sanitize any potentially untrusted strings and scripts before rendering them.\n     *\n     * @param {string} value - Specifies the html value to sanitize\n     * @returns {string} Returns the sanitized html string\n     * @private\n     */\n    AccumulationChart.prototype.sanitize = function (value) {\n        if (this.enableHtmlSanitizer) {\n            return _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(value);\n        }\n        return value;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @private\n     * @param {AccumulationChartModel} newProp - The new AccumulationChartModel.\n     * @param {AccumulationChartModel} oldProp - The old AccumulationChartModel.\n     * @returns {void}\n     */\n    AccumulationChart.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var update = {\n            refreshElements: false, refreshBounds: false\n        };\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'theme':\n                    this.animateSeries = true;\n                    break;\n                case 'title':\n                case 'subTitle':\n                case 'height':\n                case 'width':\n                case 'margin':\n                    update.refreshBounds = true;\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && (newProp.titleStyle.size || newProp.titleStyle.textOverflow)) {\n                        update.refreshBounds = true;\n                    }\n                    else {\n                        update.refreshElements = true;\n                    }\n                    break;\n                case 'subTitleStyle':\n                    if (newProp.subTitleStyle && (newProp.subTitleStyle.size || newProp.subTitleStyle.textOverflow)) {\n                        update.refreshBounds = true;\n                    }\n                    else {\n                        update.refreshElements = true;\n                    }\n                    break;\n                case 'legendSettings':\n                    update.refreshBounds = true;\n                    update.refreshElements = true;\n                    break;\n                case 'dataSource':\n                    this.processData(false);\n                    update.refreshBounds = true;\n                    break;\n                case 'series':\n                    if (!this.animateselected) {\n                        var len = this.series.length;\n                        var seriesRefresh = false;\n                        var series = void 0;\n                        var blazorProp = void 0;\n                        for (var i = 0; i < len; i++) {\n                            series = newProp.series[i];\n                            if ((series.startAngle || series.endAngle || series.explodeOffset || series.neckHeight ||\n                                series.neckWidth || series.radius || series.innerRadius || series.groupMode ||\n                                series.emptyPointSettings) && this.isBlazor) {\n                                blazorProp = true;\n                            }\n                            if (newProp.series[i] && (newProp.series[i].dataSource || newProp.series[i].yName\n                                || newProp.series[i].xName || series.type ||\n                                newProp.series[i].dataLabel || series.radius || series.innerRadius ||\n                                series.startAngle || series.endAngle || series.gapRatio || series.neckWidth || series.explode ||\n                                series.neckWidth || series.pyramidMode || series.explodeOffset || series.funnelMode || blazorProp)) {\n                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(this.changeVisibleSeries(this.visibleSeries, i), series, null, true);\n                                seriesRefresh = true;\n                            }\n                            if (newProp.series[i] && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.series[i].explodeIndex) &&\n                                newProp.series[i].explodeIndex >= 0\n                                && newProp.series[i].explodeIndex !== oldProp.series[i].explodeIndex) {\n                                this.accBaseModule.explodePoints(newProp.series[i].explodeIndex, this);\n                                this.accBaseModule.deExplodeAll(newProp.series[i].explodeIndex, this.enableAnimation ? 300 : 0);\n                            }\n                            else if (newProp.series[i].explodeIndex < 0) {\n                                this.accBaseModule.deExplodeAll(newProp.series[i].explodeIndex, this.enableAnimation ? 300 : 0);\n                            }\n                            if (!this.pieSeriesModule) {\n                                this.pieSeriesModule = new _renderer_pie_series__WEBPACK_IMPORTED_MODULE_10__.PieSeries(this);\n                            }\n                        }\n                        if (seriesRefresh) {\n                            this.calculateVisibleSeries();\n                            this.processData(false);\n                            update.refreshBounds = true;\n                        }\n                    }\n                    this.animateselected = false;\n                    this.redraw = false;\n                    break;\n                case 'enableRtl':\n                case 'locale':\n                case 'currencyCode':\n                    _super.prototype.refresh.call(this);\n                    break;\n                case 'background':\n                case 'border':\n                case 'annotations':\n                case 'enableSmartLabels':\n                    update.refreshElements = true;\n                    break;\n                case 'isMultiSelect':\n                case 'selectedDataIndexes':\n                case 'selectionMode':\n                    if (this.accumulationSelectionModule) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.accumulationSelectionModule.selectedDataIndexes)) {\n                            this.accumulationSelectionModule.invokeSelection(this);\n                        }\n                        else {\n                            this.accumulationSelectionModule.selectedDataIndexes = this.selectedDataIndexes;\n                            this.accumulationSelectionModule.redrawSelection(this);\n                        }\n                    }\n                    break;\n                case 'tooltip':\n                    if (this.accumulationTooltipModule) { // To check the tooltip enable is true.\n                        this.accumulationTooltipModule.previousPoints = [];\n                        if (this.tooltip.template) {\n                            this.accumulationTooltipModule.template = this.tooltip.template;\n                        }\n                    }\n                    break;\n                case 'center':\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.center.x)) {\n                        this.center.x = newProp.center.x;\n                        update.refreshElements = true;\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.center.y)) {\n                        this.center.y = newProp.center.y;\n                        update.refreshElements = true;\n                    }\n                    break;\n            }\n        }\n        if (!update.refreshBounds && update.refreshElements) {\n            this.createPieSvg();\n            this.renderElements();\n        }\n        else if (update.refreshBounds) {\n            this.refreshSeries();\n            this.createPieSvg();\n            this.calculateBounds();\n            this.renderElements();\n        }\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], AccumulationChart.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], AccumulationChart.prototype, \"height\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], AccumulationChart.prototype, \"title\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], AccumulationChart.prototype, \"backgroundImage\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_acc_base__WEBPACK_IMPORTED_MODULE_2__.PieCenter)\n    ], AccumulationChart.prototype, \"center\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], AccumulationChart.prototype, \"dataSource\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ fontFamily: null, size: null, fontStyle: null, fontWeight: null, color: null }, _common_model_base__WEBPACK_IMPORTED_MODULE_1__.TitleStyleSettings)\n    ], AccumulationChart.prototype, \"titleStyle\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], AccumulationChart.prototype, \"subTitle\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ fontFamily: null, size: null, fontStyle: null, fontWeight: null, color: null }, _common_model_base__WEBPACK_IMPORTED_MODULE_1__.TitleStyleSettings)\n    ], AccumulationChart.prototype, \"subTitleStyle\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _common_legend_legend__WEBPACK_IMPORTED_MODULE_5__.LegendSettings)\n    ], AccumulationChart.prototype, \"legendSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _common_model_base__WEBPACK_IMPORTED_MODULE_1__.TooltipSettings)\n    ], AccumulationChart.prototype, \"tooltip\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _common_model_base__WEBPACK_IMPORTED_MODULE_1__.CenterLabel)\n    ], AccumulationChart.prototype, \"centerLabel\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('None')\n    ], AccumulationChart.prototype, \"selectionMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], AccumulationChart.prototype, \"highlightColor\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('None')\n    ], AccumulationChart.prototype, \"highlightMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('None')\n    ], AccumulationChart.prototype, \"selectionPattern\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('None')\n    ], AccumulationChart.prototype, \"highlightPattern\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], AccumulationChart.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], AccumulationChart.prototype, \"enableBorderOnMouseMove\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], AccumulationChart.prototype, \"isMultiSelect\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], AccumulationChart.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([], _common_model_base__WEBPACK_IMPORTED_MODULE_1__.Indexes)\n    ], AccumulationChart.prototype, \"selectedDataIndexes\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _common_model_base__WEBPACK_IMPORTED_MODULE_1__.Margin)\n    ], AccumulationChart.prototype, \"margin\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], AccumulationChart.prototype, \"enableSmartLabels\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ color: '#DDDDDD', width: 0 }, _common_model_base__WEBPACK_IMPORTED_MODULE_1__.Border)\n    ], AccumulationChart.prototype, \"border\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], AccumulationChart.prototype, \"background\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([{}], _model_acc_base__WEBPACK_IMPORTED_MODULE_2__.AccumulationSeries)\n    ], AccumulationChart.prototype, \"series\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([{}], _model_acc_base__WEBPACK_IMPORTED_MODULE_2__.AccumulationAnnotationSettings)\n    ], AccumulationChart.prototype, \"annotations\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Material')\n    ], AccumulationChart.prototype, \"theme\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], AccumulationChart.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], AccumulationChart.prototype, \"enableExport\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], AccumulationChart.prototype, \"allowExport\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _common_model_base__WEBPACK_IMPORTED_MODULE_1__.Accessibility)\n    ], AccumulationChart.prototype, \"accessibility\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], AccumulationChart.prototype, \"focusBorderColor\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1.5)\n    ], AccumulationChart.prototype, \"focusBorderWidth\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], AccumulationChart.prototype, \"focusBorderMargin\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"loaded\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"legendClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"load\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"seriesRender\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"legendRender\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"textRender\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"pointRender\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"annotationRender\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"beforePrint\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"chartMouseMove\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"chartMouseClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"chartDoubleClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"pointClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"pointMove\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"animationComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"chartMouseDown\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"chartMouseLeave\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"chartMouseUp\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"beforeResize\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"resized\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"beforeExport\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"afterExport\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], AccumulationChart.prototype, \"selectionComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('USD')\n    ], AccumulationChart.prototype, \"currencyCode\", void 0);\n    AccumulationChart = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], AccumulationChart);\n    return AccumulationChart;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-charts/src/accumulation-chart/accumulation.js?");

/***/ })

}]);