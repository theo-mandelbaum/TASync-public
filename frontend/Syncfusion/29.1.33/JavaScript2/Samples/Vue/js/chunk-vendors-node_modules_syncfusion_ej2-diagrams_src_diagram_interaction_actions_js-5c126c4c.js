"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-diagrams_src_diagram_interaction_actions_js-5c126c4c"],{

/***/ "./node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/actions.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/actions.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contains: () => (/* binding */ contains),\n/* harmony export */   findPortToolToActivate: () => (/* binding */ findPortToolToActivate),\n/* harmony export */   findToolToActivate: () => (/* binding */ findToolToActivate),\n/* harmony export */   getCursor: () => (/* binding */ getCursor),\n/* harmony export */   hasSelection: () => (/* binding */ hasSelection),\n/* harmony export */   hasSingleConnection: () => (/* binding */ hasSingleConnection),\n/* harmony export */   isSelected: () => (/* binding */ isSelected)\n/* harmony export */ });\n/* harmony import */ var _objects_connector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../objects/connector */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/connector.js\");\n/* harmony import */ var _objects_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../objects/node */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/node.js\");\n/* harmony import */ var _primitives_rect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../primitives/rect */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/primitives/rect.js\");\n/* harmony import */ var _primitives_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../primitives/matrix */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/primitives/matrix.js\");\n/* harmony import */ var _utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utility/diagram-util */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/diagram-util.js\");\n/* harmony import */ var _utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utility/constraints-util */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/constraints-util.js\");\n/* harmony import */ var _primitives_point__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../primitives/point */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/primitives/point.js\");\n/* harmony import */ var _core_elements_text_element__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/elements/text-element */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/core/elements/text-element.js\");\n/* harmony import */ var _enum_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../enum/enum */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/enum/enum.js\");\n/* harmony import */ var _objects_port__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../objects/port */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/port.js\");\n/* harmony import */ var _objects_annotation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../objects/annotation */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/annotation.js\");\n/* harmony import */ var _interaction_container_interaction__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../interaction/container-interaction */ \"./node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/container-interaction.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/* tslint:disable */\n/**\n * findToolToActivate method\\\n *\n * @returns {Actions}    findToolToActivate method .\\\n * @param {Object} obj - provide the options value.\n * @param {DiagramElement} wrapper - provide the options value.\n * @param {PointModel} position - provide the options value.\n * @param {Diagram} diagram - provide the options value.\n * @param {ITouches[] | TouchList} touchStart - provide the options value.\n * @param {ITouches[] | TouchList} touchMove - provide the options value.\n * @param {NodeModel | PointPortModel | ShapeAnnotationModel | PathAnnotationModel} target - provide the options value.\n * @private\n */\nfunction findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    //let conn: Connector = diagram.selectedItems.connectors[0] as Connector;\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[\"\" + eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~_enum_enum__WEBPACK_IMPORTED_MODULE_8__.DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if (((0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canDrawOnce)(diagram) || (0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canContinuousDraw)(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && (0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canShowCorner)(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = (0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.getUserHandlePosition)(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new _primitives_rect__WEBPACK_IMPORTED_MODULE_2__.Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = (diagram.selectedItems.handleSize / 2) / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = (diagram.selectedItems.handleSize / 2) / diagram.scrollSettings.currentZoom;\n            if ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canShowCorner)(handle.constraints, 'ResizeAll')) {\n                if (((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canShowCorner)(handle.constraints, 'ConnectorSourceThumb'))\n                    && (0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canDragSourceEnd)(conn) && contains(position, conn.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if (((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canShowCorner)(handle.constraints, 'ConnectorTargetThumb'))\n                    && (0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canDragTargetEnd)(conn) && contains(position, conn.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn, handle, position, diagram);\n                if (action !== 'OrthoThumb') {\n                    if (((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canShowCorner)(handle.constraints, 'ConnectorSourceThumb'))\n                        && (0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canDragSourceEnd)(conn)) {\n                        if (action) {\n                            return action;\n                        }\n                    }\n                    if (((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canShowCorner)(handle.constraints, 'ConnectorTargetThumb'))\n                        && (0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canDragTargetEnd)(conn)) {\n                        if (action) {\n                            return action;\n                        }\n                    }\n                }\n                else {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = (diagram.selectedItems.handleSize / 2) / diagram.scroller.currentZoom;\n            var tenRotate = 10 / diagram.scroller.currentZoom;\n            var matrix = (0,_primitives_matrix__WEBPACK_IMPORTED_MODULE_3__.identityMatrix)();\n            (0,_primitives_matrix__WEBPACK_IMPORTED_MODULE_3__.rotateMatrix)(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = (0,_primitives_matrix__WEBPACK_IMPORTED_MODULE_3__.transformPointByMatrix)(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && ((0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canRotate)(diagram.selectedItems.annotation))) ? true : false;\n            if ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canShowCorner)(handle.constraints, 'Rotate') && contains(position, rotateThumb, tenRotate) &&\n                (diagram.selectedItems.thumbsConstraints & _enum_enum__WEBPACK_IMPORTED_MODULE_8__.ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if ((0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canZoomPan)(diagram) && !obj) {\n        return 'Pan';\n    }\n    //826364 - Drawing Tool is not activated on hovering the ports while both ZoomPan and single select constraints enabled\n    if ((target instanceof _objects_port__WEBPACK_IMPORTED_MODULE_9__.PointPort || target instanceof _objects_port__WEBPACK_IMPORTED_MODULE_9__.PathPort)\n        && (!(0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canZoomPan)(diagram) || ((0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canSingleSelect)(diagram) || (0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canMultiSelect)(diagram)))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof _objects_annotation__WEBPACK_IMPORTED_MODULE_10__.ShapeAnnotation || target instanceof _objects_annotation__WEBPACK_IMPORTED_MODULE_10__.PathAnnotation) && (!(0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canZoomPan)(diagram) && ((0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canSelect)(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && (0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canMove)(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof _objects_node__WEBPACK_IMPORTED_MODULE_1__.Node || obj instanceof _objects_connector__WEBPACK_IMPORTED_MODULE_0__.Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (wrapper && wrapper.id) {\n                var userid = void 0;\n                for (var i = 0; i < obj.fixedUserHandles.length; i++) {\n                    userid = obj.fixedUserHandles[parseInt(i.toString(), 10)].id;\n                    if (wrapper.id && (wrapper.id.indexOf(userid) > -1)) {\n                        return 'FixedUserHandle';\n                    }\n                }\n            }\n            if (wrapper instanceof _core_elements_text_element__WEBPACK_IMPORTED_MODULE_7__.TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if ((0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canMove)(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof _objects_connector__WEBPACK_IMPORTED_MODULE_0__.Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof _objects_connector__WEBPACK_IMPORTED_MODULE_0__.Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && (0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canZoomPan)(diagram) && !(0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.defaultTool)(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\n/* tslint:enable */\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\n/**\n * checkForConnectorSegment method\\\n *\n * @returns {Actions}    checkForConnectorSegment method .\\\n * @param {Connector} conn - provide the options value.\n * @param {SelectorModel} handle - provide the options value.\n * @param {PointModel} position - provide the options value.\n * @param {Diagram} diagram - provide the options value.\n * @private\n */\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    //(EJ2-70650)-Unable to drag bezier control thumb, when we increase handleSize value\n    //Added below code for drag the bezier control thumb while increasing handle size (Changing cursor from pointer to drag cursor)\n    var targetPaddingValue = (handle.handleSize / 2) / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = (handle.handleSize / 2) / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier' && diagram.connectorEditingToolModule) {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[parseInt(i.toString(), 10)];\n            // EJ2-67447 - Bezier segment control points are clickable after hiding it with controlPointsVisibility property.\n            // The below condition is used to check the control points visibility of the connector.\n            if (contains(position, !_primitives_point__WEBPACK_IMPORTED_MODULE_6__.Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue) && ((i === 0 && (0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canShowControlPoints)(conn.bezierSettings.controlPointsVisibility, 'Source')) || (i !== 0 && (0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canShowControlPoints)(conn.bezierSettings.controlPointsVisibility, 'Intermediate')))) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !_primitives_point__WEBPACK_IMPORTED_MODULE_6__.Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue) && ((i === conn.segments.length - 1 && (0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canShowControlPoints)(conn.bezierSettings.controlPointsVisibility, 'Target')) || (i !== conn.segments.length - 1 && (0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canShowControlPoints)(conn.bezierSettings.controlPointsVisibility, 'Intermediate')))) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && (0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canDragSegmentThumb)(conn)) {\n        // 927583: Segment points cannot be dragged when the pointer is in the outer part of the segmentThumb\n        var inheritSegmentThumbSize = (conn.constraints & _enum_enum__WEBPACK_IMPORTED_MODULE_8__.ConnectorConstraints.InheritSegmentThumbSize);\n        var segmentThumbSize = inheritSegmentThumbSize ? diagram.segmentThumbSize : conn.segmentThumbSize;\n        var padding = (segmentThumbSize > 20) && conn.type !== 'Straight' ? segmentThumbSize / 2 : 10;\n        padding = padding / diagram.scrollSettings.currentZoom;\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                //let segment: StraightSegmentModel | BezierSegmentModel;\n                var segment = (conn.segments)[parseInt(i.toString(), 10)];\n                if (contains(position, segment.point, padding)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segPoint = { x: 0, y: 0 };\n                var segment = (conn.segments)[parseInt(i.toString(), 10)];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = _primitives_point__WEBPACK_IMPORTED_MODULE_6__.Point.distancePoints(segment.points[parseInt(j.toString(), 10)], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[parseInt(j.toString(), 10)].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[parseInt(j.toString(), 10)].y + segment.points[j + 1].y) / 2);\n                            //Bug 857928: Issue in connector selection while enabling segment thumb.\n                            //Instead of setting static value 30, we have set the hit padding of connector.\n                            // 927583: Segment points cannot be dragged when the pointer is in the outer part of the segmentThumb\n                            if (contains(position, segPoint, padding)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    else if ((0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canDragSegmentThumb)(conn)) {\n        console.warn('[WARNING] :: Module \"ConnectorEditing\" is not available in Diagram component! You either misspelled the module name or forgot to load it.');\n    }\n    return null;\n}\n/**\n * findPortToolToActivate method\\\n *\n * @returns {boolean}    findPortToolToActivate method .\\\n * @param {Diagram} diagram - provide the options value.\n * @param {NodeModel | PointPortModel} target - provide the options value.\n * @param {ITouches[] | TouchList} touchStart - provide the options value.\n * @param {ITouches[] | TouchList} touchMove - provide the options value.\n * @private\n */\nfunction findPortToolToActivate(diagram, target, \n// eslint-disable-next-line\ntouchStart, touchMove) {\n    if ((0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canDrag)(target, diagram) && ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.checkPortRestriction)(target, _enum_enum__WEBPACK_IMPORTED_MODULE_8__.PortVisibility.Hover)\n        || ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.checkPortRestriction)(target, _enum_enum__WEBPACK_IMPORTED_MODULE_8__.PortVisibility.Visible)))) {\n        if ((target.constraints & _enum_enum__WEBPACK_IMPORTED_MODULE_8__.PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if ((0,_utility_constraints_util__WEBPACK_IMPORTED_MODULE_5__.canDraw)(target, diagram) && ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.checkPortRestriction)(target, _enum_enum__WEBPACK_IMPORTED_MODULE_8__.PortVisibility.Hover)\n        || ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.checkPortRestriction)(target, _enum_enum__WEBPACK_IMPORTED_MODULE_8__.PortVisibility.Visible)))) {\n        if (target.constraints & _enum_enum__WEBPACK_IMPORTED_MODULE_8__.PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= _enum_enum__WEBPACK_IMPORTED_MODULE_8__.DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @param {Diagram} diagram - provide the options value.\n * @param {DiagramElement} element - provide the options value.\n * @param {PointModel} position - provide the options value.\n * @param {number} x - provide the options value.\n * @param {number} y - provide the options value.\n * @returns {Actions}    Resize handle for container and also object.\\\n *\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    // 910600: Update cursor type in swimlane based on the values\n    var left = new _primitives_rect__WEBPACK_IMPORTED_MODULE_2__.Rect(x, y, element.style.strokeWidth, height);\n    var right = new _primitives_rect__WEBPACK_IMPORTED_MODULE_2__.Rect(x + width, y, element.style.strokeWidth, height);\n    var top = new _primitives_rect__WEBPACK_IMPORTED_MODULE_2__.Rect(x, y, width, element.style.strokeWidth);\n    var bottom = new _primitives_rect__WEBPACK_IMPORTED_MODULE_2__.Rect(x, y + height, width, element.style.strokeWidth);\n    var container = (0,_interaction_container_interaction__WEBPACK_IMPORTED_MODULE_11__.checkParentAsContainer)(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    // 924599: Resize Cursor Not Enabled for Phase with Width Less Than 40\n    if ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canResizeCorner)(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n        right.containsPoint(position, ten)) {\n        return 'ResizeEast';\n    }\n    if ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canResizeCorner)(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n        bottom.containsPoint(position, ten)) {\n        return 'ResizeSouth';\n    }\n    if (container.container.type !== 'Grid') {\n        if ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canResizeCorner)(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n            left.containsPoint(position, ten)) {\n            return 'ResizeWest';\n        }\n        if ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canResizeCorner)(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n            top.containsPoint(position, ten)) {\n            return 'ResizeNorth';\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = (diagram.selectedItems.handleSize / 2) / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canResizeCorner)(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, (0,_primitives_matrix__WEBPACK_IMPORTED_MODULE_3__.transformPointByMatrix)(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canResizeCorner)(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, (0,_primitives_matrix__WEBPACK_IMPORTED_MODULE_3__.transformPointByMatrix)(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canResizeCorner)(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, (0,_primitives_matrix__WEBPACK_IMPORTED_MODULE_3__.transformPointByMatrix)(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canResizeCorner)(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, (0,_primitives_matrix__WEBPACK_IMPORTED_MODULE_3__.transformPointByMatrix)(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canResizeCorner)(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, (0,_primitives_matrix__WEBPACK_IMPORTED_MODULE_3__.transformPointByMatrix)(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canResizeCorner)(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, (0,_primitives_matrix__WEBPACK_IMPORTED_MODULE_3__.transformPointByMatrix)(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canResizeCorner)(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, (0,_primitives_matrix__WEBPACK_IMPORTED_MODULE_3__.transformPointByMatrix)(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if ((0,_utility_diagram_util__WEBPACK_IMPORTED_MODULE_4__.canResizeCorner)(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, (0,_primitives_matrix__WEBPACK_IMPORTED_MODULE_3__.transformPointByMatrix)(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/**\n * contains method\\\n *\n * @returns {boolean}    contains method .\\\n * @param {PointModel} mousePosition - provide the options value.\n * @param {PointModel} corner - provide the corner value.\n * @param {number} padding - provide the padding value.\n * @private\n */\nfunction contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * hasSelection method\\\n *\n * @returns {boolean}    hasSelection method .\\\n * @param {Diagram} diagram - provide the options value.\n * @private\n */\nfunction hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/**\n * hasSingleConnection method\\\n *\n * @returns {boolean}    hasSingleConnection method .\\\n * @param {Diagram} diagram - provide the options value.\n * @private\n */\nfunction hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/**\n * isSelected method\\\n *\n * @returns {boolean}    isSelected method .\\\n * @param {Diagram} diagram - provide the options value.\n * @param {Object} element - provide the options value.\n * @param {boolean} firstLevel - provide the options value.\n * @param {DiagramElement} wrapper - provide the options value.\n * @private\n */\nfunction isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof _objects_node__WEBPACK_IMPORTED_MODULE_1__.Selector) {\n        return true;\n    }\n    if (element instanceof _objects_node__WEBPACK_IMPORTED_MODULE_1__.Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof _objects_connector__WEBPACK_IMPORTED_MODULE_0__.Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof _objects_annotation__WEBPACK_IMPORTED_MODULE_10__.ShapeAnnotation || element instanceof _objects_annotation__WEBPACK_IMPORTED_MODULE_10__.PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * getCursor method\\\n *\n * @returns {boolean}    getCursor method .\\\n * @param {Actions} cursor - provide the options value.\n * @param {number} angle - provide the options value.\n * @private\n */\nfunction getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[\"\" + cursor];\n    }\n    else {\n        var dir = cursors[\"\" + cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[\"\" + cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'grab',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize'\n};\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/actions.js?");

/***/ })

}]);