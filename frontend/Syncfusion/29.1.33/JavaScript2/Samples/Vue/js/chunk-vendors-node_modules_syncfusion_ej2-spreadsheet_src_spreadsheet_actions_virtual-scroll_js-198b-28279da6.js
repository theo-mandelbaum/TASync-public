"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-spreadsheet_src_spreadsheet_actions_virtual-scroll_js-198b-28279da6"],{

/***/ "./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/actions/virtual-scroll.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/actions/virtual-scroll.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VirtualScroll: () => (/* binding */ VirtualScroll)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _common_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/common/index.js\");\n/* harmony import */ var _workbook_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../workbook/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/index.js\");\n/* harmony import */ var _workbook_common_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../workbook/common/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/common/index.js\");\n\n\n\n\n\n\n/**\n * VirtualScroll module\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    function VirtualScroll(parent) {\n        this.scroll = [];\n        this.parent = parent;\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.createVirtualElement = function (args) {\n        var sheet = this.parent.getActiveSheet();\n        var container = this.parent.getMainContent();\n        this.content = this.parent.createElement('div', { className: 'e-virtualable' });\n        this.content.appendChild(container.querySelector('.e-table'));\n        container.appendChild(this.content);\n        var vTrack = container.appendChild(this.parent.createElement('div', { className: 'e-virtualtrack' }));\n        var height = 0;\n        var width;\n        if (this.parent.sheets.length > this.scroll.length) {\n            this.initScroll();\n        }\n        var endIndex = this.parent.viewport.bottomIndex;\n        if (sheet.rowCount > endIndex + 1 || sheet.usedRange.rowIndex > endIndex) {\n            if (!this.parent.scrollSettings.isFinite && sheet.rowCount <= sheet.usedRange.rowIndex) {\n                this.parent.setSheetPropertyOnMute(sheet, 'rowCount', sheet.usedRange.rowIndex + 1);\n            }\n            this.setScrollCount(sheet.rowCount, 'row');\n        }\n        else {\n            if (!this.parent.scrollSettings.isFinite) {\n                this.parent.setSheetPropertyOnMute(sheet, 'rowCount', endIndex + 1);\n            }\n            this.scroll[this.parent.activeSheetIndex].rowCount = sheet.rowCount;\n        }\n        var startIndex = this.parent.frozenRowCount(sheet);\n        var indexes = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.getCellIndexes)(sheet.topLeftCell);\n        if (args.top) {\n            height = args.top;\n            if (sheet.frozenRows) {\n                height += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowsHeight)(sheet, indexes[0], startIndex - 1, true);\n            }\n            startIndex = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.getCellIndexes)(sheet.paneTopLeftCell)[0];\n        }\n        height += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowsHeight)(sheet, startIndex, this.scroll[this.parent.activeSheetIndex].rowCount - 1, true);\n        endIndex = this.parent.viewport.rightIndex;\n        var size = 0;\n        var frozenCol = this.parent.frozenColCount(sheet);\n        if (args.left) {\n            size = args.left;\n            if (frozenCol) {\n                size += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, indexes[1], frozenCol - 1, true);\n            }\n            startIndex = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.getCellIndexes)(sheet.paneTopLeftCell)[1];\n        }\n        else {\n            startIndex = frozenCol;\n        }\n        if (sheet.colCount > endIndex + 1 || sheet.usedRange.colIndex > endIndex) {\n            if (!this.parent.scrollSettings.isFinite && sheet.colCount <= sheet.usedRange.colIndex) {\n                this.parent.setSheetPropertyOnMute(sheet, 'colCount', sheet.usedRange.colIndex + 1);\n            }\n            size += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, startIndex, endIndex, true);\n            this.setScrollCount(sheet.colCount, 'col');\n            width = size + (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, endIndex + 1, this.scroll[this.parent.activeSheetIndex].colCount - 1, true);\n        }\n        else {\n            if (!this.parent.scrollSettings.isFinite) {\n                this.parent.setSheetPropertyOnMute(sheet, 'colCount', endIndex + 1);\n            }\n            size += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, startIndex, sheet.colCount - 1, true);\n            this.scroll[this.parent.activeSheetIndex].colCount = sheet.colCount;\n            width = size;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.viewport.leftIndex)) {\n            this.parent.viewport.leftIndex = 0;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.viewport.topIndex)) {\n            this.parent.viewport.topIndex = 0;\n        }\n        if (args.left) {\n            size = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, this.parent.viewport.leftIndex + frozenCol, endIndex, true);\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.translateX)) {\n            this.translateX = 0;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.translateY)) {\n            this.translateY = 0;\n        }\n        container = this.parent.getRowHeaderContent();\n        this.rowHeader = this.content.cloneNode();\n        this.rowHeader.appendChild(container.querySelector('.e-table'));\n        container.appendChild(this.rowHeader);\n        var rowVTrack = container.appendChild(vTrack.cloneNode());\n        this.rowHeader.style.transform = \"translate(0px, \" + this.translateY + \"px)\";\n        container = this.parent.getColumnHeaderContent();\n        this.colHeader = this.content.cloneNode();\n        this.colHeader.appendChild(container.querySelector('.e-table'));\n        container.appendChild(this.colHeader);\n        var colVTrack = container.appendChild(vTrack.cloneNode());\n        this.colHeader.style.width = size + \"px\";\n        rowVTrack.style.height = height + \"px\";\n        colVTrack.style.width = width + \"px\";\n        this.colHeader.style.transform = \"translate(\" + this.translateX + \"px, 0px)\";\n        this.content.style.transform = \"translate(\" + this.translateX + \"px, \" + this.translateY + \"px)\";\n        this.content.style.width = size + \"px\";\n        vTrack.style.height = height + \"px\";\n        vTrack.style.width = width + \"px\";\n        if (this.parent.allowScrolling) {\n            var scrollVTrack = colVTrack.cloneNode(true);\n            scrollVTrack.style.width = width + (this.parent.scrollSettings.isFinite ? this.parent.sheetModule.getScrollSize() : 0) + \"px\";\n            this.parent.getScrollElement().appendChild(scrollVTrack);\n        }\n    };\n    VirtualScroll.prototype.initScroll = function () {\n        var i = 0;\n        while (i < this.parent.sheets.length) {\n            if (!this.scroll[i]) {\n                this.scroll.push({ rowCount: 0, colCount: 0 });\n            }\n            i++;\n        }\n    };\n    VirtualScroll.prototype.setScrollCount = function (count, layout) {\n        var activeSheetIdx = this.parent.activeSheetIndex;\n        if (!this.scroll[activeSheetIdx][layout + 'Count'] || this.scroll[activeSheetIdx][layout + 'Count'] !== count) {\n            this.scroll[activeSheetIdx][layout + 'Count'] = count;\n        }\n    };\n    VirtualScroll.prototype.getRowAddress = function (indexes) {\n        var sheet = this.parent.getActiveSheet();\n        return (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.getRangeAddress)([indexes[0], sheet.frozenColumns ? (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.getCellIndexes)(sheet.topLeftCell)[1] : this.parent.viewport.leftIndex,\n            indexes[1], this.parent.viewport.rightIndex]);\n    };\n    VirtualScroll.prototype.getColAddress = function (indexes) {\n        var sheet = this.parent.getActiveSheet();\n        return (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.getRangeAddress)([sheet.frozenRows ? (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.getCellIndexes)(sheet.topLeftCell)[0] : this.parent.viewport.topIndex, indexes[0],\n            this.parent.viewport.bottomIndex, indexes[1]]);\n    };\n    VirtualScroll.prototype.updateScrollCount = function (idx, layout, threshold) {\n        if (threshold === void 0) { threshold = idx; }\n        var sheet = this.parent.getActiveSheet();\n        var rowCount = idx + this.parent.viewport[layout + 'Count'] + 1 + threshold;\n        var usedRangeCount = this.scroll[this.parent.activeSheetIndex][layout + 'Count'];\n        if (rowCount < usedRangeCount) {\n            if (sheet[layout + 'Count'] === usedRangeCount) {\n                return;\n            }\n            rowCount = usedRangeCount;\n        }\n        if (!this.parent.scrollSettings.isFinite) {\n            this.parent.setSheetPropertyOnMute(sheet, layout + 'Count', rowCount);\n        }\n    };\n    VirtualScroll.prototype.onVerticalScroll = function (args) {\n        var idx = args.cur.idx;\n        var height = args.cur.size;\n        var prevIdx = args.prev.idx;\n        var idxDiff = Math.abs(idx - prevIdx);\n        var threshold = this.parent.getThreshold('row');\n        if (idxDiff > Math.round(threshold / 2)) {\n            var startIdx = void 0;\n            var lastIdx = void 0;\n            var prevTopIdx = void 0;\n            var sheet = this.parent.getActiveSheet();\n            if (idx <= threshold) {\n                if (!args.increase) {\n                    if (this.translateY && prevIdx > threshold) {\n                        this.translateY = 0;\n                        var frozenCol = this.parent.frozenColCount(sheet);\n                        var frozenRow = this.parent.frozenRowCount(sheet);\n                        if (!args.preventScroll) {\n                            var colIndex = frozenCol ? (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.getCellIndexes)(sheet.topLeftCell)[1] : this.parent.viewport.leftIndex;\n                            var fIndexes = frozenCol ? [frozenRow, this.parent.viewport.leftIndex + frozenCol] : [];\n                            if (idxDiff < this.parent.viewport.rowCount + threshold) {\n                                startIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, frozenRow, true);\n                                lastIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, (this.parent.viewport.topIndex + frozenRow) - 1, false);\n                                this.parent.viewport.topIndex = startIdx - frozenRow;\n                                var btmIdx = this.skipHiddenLastIdx(this.parent.viewport.bottomIndex - (((lastIdx - startIdx) + 1) - this.hiddenCount(startIdx, lastIdx)), this.parent.viewport.bottomIndex);\n                                this.parent.viewport.bottomIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, btmIdx, false);\n                                this.parent.renderModule.refreshUI({\n                                    colIndex: colIndex, rowIndex: startIdx, direction: 'last', refresh: 'RowPart',\n                                    skipUpdateOnFirst: true, frozenIndexes: fIndexes\n                                }, this.getRowAddress([startIdx, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, lastIdx, false)]));\n                            }\n                            else {\n                                var prevColIndex = this.parent.viewport.leftIndex;\n                                this.parent.renderModule.refreshUI({ rowIndex: 0, colIndex: colIndex, refresh: 'Row', skipUpdateOnFirst: true,\n                                    frozenIndexes: fIndexes, skipTranslate: true });\n                                if (frozenCol) {\n                                    this.parent.viewport.leftIndex = prevColIndex;\n                                }\n                                this.translate({ refresh: 'Row' });\n                            }\n                            (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.focus)(this.parent.element);\n                            idx = 0;\n                        }\n                        else {\n                            this.parent.viewport.topIndex = prevIdx - (threshold - frozenRow);\n                        }\n                    }\n                    this.updateScrollCount(threshold, 'row');\n                }\n            }\n            if (prevIdx < threshold) {\n                idxDiff = Math.abs(idx - threshold);\n            }\n            if (!args.increase && this.parent.scrollSettings.isFinite && this.parent.viewport.bottomIndex ===\n                (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, sheet.rowCount - 1, false)) {\n                var frozenRow = this.parent.frozenRowCount(sheet);\n                var thresholdIdx = this.parent.viewport.topIndex + frozenRow + (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(sheet.paneTopLeftCell)[0] - 1;\n                if (idx + frozenRow > thresholdIdx) {\n                    args.prev.idx = idx;\n                    return;\n                }\n                idxDiff = thresholdIdx - (idx + frozenRow);\n            }\n            if (idx > threshold) {\n                prevTopIdx = this.parent.viewport.topIndex;\n                this.parent.viewport.topIndex = idx - threshold;\n                if (args.increase && prevTopIdx > this.parent.viewport.topIndex) {\n                    this.parent.viewport.topIndex = prevTopIdx;\n                    return;\n                }\n                var frozenRow = this.parent.frozenRowCount(sheet);\n                if (!args.preventScroll) {\n                    var frozenCol = this.parent.frozenColCount(sheet);\n                    var colIndex = void 0;\n                    var frozenIndexes = [];\n                    if (frozenCol) {\n                        colIndex = (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.getCellIndexes)(sheet.topLeftCell)[1];\n                        frozenIndexes.push(frozenRow);\n                        frozenIndexes.push(this.parent.viewport.leftIndex + frozenCol);\n                    }\n                    else {\n                        colIndex = this.parent.viewport.leftIndex;\n                    }\n                    if (idxDiff < this.parent.viewport.rowCount + threshold) {\n                        if (args.increase) {\n                            startIdx = this.parent.viewport.bottomIndex + 1;\n                            lastIdx = this.parent.viewport.bottomIndex + (this.parent.viewport.topIndex - prevTopIdx);\n                            lastIdx -= this.hiddenCount(prevTopIdx + frozenRow, this.parent.viewport.topIndex - 1 + frozenRow);\n                            if (lastIdx <= this.parent.viewport.bottomIndex || (this.parent.scrollSettings.isFinite &&\n                                startIdx > (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, sheet.rowCount - 1, false, 'rows'))) {\n                                this.parent.viewport.topIndex = prevTopIdx;\n                                return;\n                            }\n                            var indexes = this.parent.skipHidden(startIdx, lastIdx, 'rows', false);\n                            var finiteProps = this.checkLastIdx(indexes[1], 'row');\n                            startIdx = indexes[0];\n                            lastIdx = finiteProps.index;\n                            var topIdx = this.parent.viewport.topIndex + frozenRow;\n                            if (finiteProps.diff) {\n                                var diffCount = ((lastIdx - startIdx) + 1) - this.hiddenCount(startIdx, lastIdx);\n                                topIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, prevTopIdx, true, 'rows', diffCount) + frozenRow;\n                            }\n                            this.parent.viewport.topIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, topIdx, !finiteProps.diff) - frozenRow;\n                            this.setThresholdHeight(height, idx - this.parent.viewport.topIndex, frozenRow, !!finiteProps.diff, prevTopIdx === (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, frozenRow, true));\n                            this.parent.viewport.bottomIndex = lastIdx;\n                            this.parent.renderModule.refreshUI({ colIndex: colIndex, rowIndex: startIdx, direction: 'first', refresh: 'RowPart',\n                                frozenIndexes: frozenIndexes }, this.getRowAddress([startIdx, lastIdx]));\n                        }\n                        else {\n                            startIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, this.parent.viewport.topIndex + frozenRow, false);\n                            if (startIdx < frozenRow) {\n                                startIdx = frozenRow;\n                                startIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, startIdx, true);\n                            }\n                            this.parent.viewport.topIndex = startIdx - frozenRow;\n                            lastIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, (prevTopIdx + frozenRow) - 1, false);\n                            if (lastIdx < frozenRow || lastIdx < startIdx) {\n                                this.parent.viewport.topIndex = prevTopIdx;\n                                return;\n                            }\n                            var btmIdx = this.skipHiddenLastIdx(this.parent.viewport.bottomIndex - (((lastIdx - startIdx) + 1) - this.hiddenCount(startIdx, lastIdx)), this.parent.viewport.bottomIndex);\n                            this.parent.viewport.bottomIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, btmIdx, false);\n                            this.setThresholdHeight(height, idx - this.parent.viewport.topIndex, frozenRow);\n                            this.parent.renderModule.refreshUI({ colIndex: colIndex, rowIndex: startIdx, direction: 'last', refresh: 'RowPart',\n                                frozenIndexes: frozenIndexes }, this.getRowAddress([startIdx, lastIdx]));\n                        }\n                    }\n                    else {\n                        prevTopIdx = this.parent.viewport.leftIndex;\n                        this.parent.viewport.topIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, this.parent.viewport.topIndex + frozenRow, false) - frozenRow;\n                        if (this.parent.viewport.topIndex < 0) {\n                            this.parent.viewport.topIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, frozenRow, true) - frozenRow;\n                        }\n                        this.parent.renderModule.refreshUI({\n                            rowIndex: this.parent.viewport.topIndex, colIndex: colIndex, refresh: 'Row',\n                            frozenIndexes: frozenIndexes, skipTranslate: true\n                        });\n                        if (frozenCol) {\n                            this.parent.viewport.leftIndex = prevTopIdx;\n                        }\n                        this.setThresholdHeight(height, idx - this.parent.viewport.topIndex, frozenRow, this.parent.scrollSettings.isFinite && this.parent.viewport.bottomIndex ===\n                            (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, sheet.rowCount - 1, false));\n                        this.translate({ refresh: 'Row' });\n                    }\n                    this.updateScrollCount(idx, 'row', threshold);\n                    this.focusSheet();\n                }\n                else {\n                    this.setThresholdHeight(height, threshold, frozenRow);\n                    this.translate({ refresh: 'Row' });\n                }\n            }\n            args.prev.idx = idx;\n        }\n    };\n    VirtualScroll.prototype.skipHiddenLastIdx = function (idx, prevIdx, layout) {\n        if (layout === void 0) { layout = 'rows'; }\n        var sheet = this.parent.getActiveSheet();\n        var count = 0;\n        for (var i = idx; i <= prevIdx; i++) {\n            if ((sheet[\"\" + layout])[i] && (sheet[\"\" + layout])[i].hidden) {\n                count++;\n            }\n        }\n        if (count) {\n            idx = this.skipHiddenLastIdx(idx - count, idx - 1, layout);\n        }\n        return idx;\n    };\n    VirtualScroll.prototype.hiddenCount = function (startIdx, endIdx, layout) {\n        if (layout === void 0) { layout = 'rows'; }\n        var index = 0;\n        var sheet = this.parent.getActiveSheet();\n        for (var i = startIdx; i <= endIdx; i++) {\n            if ((sheet[\"\" + layout])[i] && (sheet[\"\" + layout])[i].hidden) {\n                index++;\n            }\n        }\n        return index;\n    };\n    VirtualScroll.prototype.checkLastIdx = function (idx, layout) {\n        var diff = 0;\n        if (this.parent.scrollSettings.isFinite) {\n            var sheet = this.parent.getActiveSheet();\n            var count = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, (sheet[layout + 'Count'] - 1), false, layout === 'col' ? 'columns' : 'rows');\n            if (idx > count) {\n                diff = idx - count;\n                idx = count;\n            }\n        }\n        return { index: idx, diff: diff };\n    };\n    VirtualScroll.prototype.onHorizontalScroll = function (args) {\n        var idx = args.cur.idx;\n        var width = args.cur.size;\n        var prevIdx = args.prev.idx;\n        var idxDiff = Math.abs(idx - prevIdx);\n        var threshold = this.parent.getThreshold('col');\n        if (idxDiff > Math.round(threshold / 2)) {\n            var startIdx = void 0;\n            var endIdx = void 0;\n            var prevLeftIdx = void 0;\n            var sheet = this.parent.getActiveSheet();\n            if (idx <= threshold) {\n                if (!args.increase) {\n                    if (this.translateX && prevIdx > threshold) {\n                        this.translateX = 0;\n                        var frozenCol = this.parent.frozenColCount(sheet);\n                        var frozenRow = this.parent.frozenRowCount(sheet);\n                        if (!args.preventScroll) {\n                            var rowIndex = frozenRow ? (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.getCellIndexes)(sheet.topLeftCell)[0] : this.parent.viewport.topIndex;\n                            var fIndexes = frozenRow ? [this.parent.viewport.topIndex + frozenRow, frozenCol] : [];\n                            if (idxDiff < this.parent.viewport.colCount + threshold) {\n                                startIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, frozenCol, true, 'columns');\n                                endIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, (this.parent.viewport.leftIndex + frozenCol) - 1, false, 'columns');\n                                this.parent.viewport.leftIndex = startIdx - frozenCol;\n                                var rightIdx = this.skipHiddenLastIdx(this.parent.viewport.rightIndex - (((endIdx - startIdx) + 1) -\n                                    this.hiddenCount(startIdx, endIdx, 'columns')), this.parent.viewport.rightIndex, 'columns');\n                                this.parent.viewport.rightIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, rightIdx, false, 'columns');\n                                this.parent.renderModule.refreshUI({ rowIndex: rowIndex, colIndex: startIdx, direction: 'last', refresh: 'ColumnPart',\n                                    skipUpdateOnFirst: true, frozenIndexes: fIndexes }, this.getColAddress([startIdx, (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, endIdx, false, 'columns')]));\n                            }\n                            else {\n                                var prevRowIndex = this.parent.viewport.topIndex;\n                                this.parent.renderModule.refreshUI({ rowIndex: rowIndex, colIndex: 0, refresh: 'Column', skipUpdateOnFirst: true,\n                                    frozenIndexes: fIndexes, skipTranslate: true });\n                                if (frozenRow) {\n                                    this.parent.viewport.topIndex = prevRowIndex;\n                                }\n                                this.translate({ refresh: 'Column' });\n                            }\n                            (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.focus)(this.parent.element);\n                            idx = 0;\n                        }\n                        else {\n                            this.parent.viewport.leftIndex = prevIdx - (threshold - frozenCol);\n                        }\n                    }\n                    this.updateScrollCount(threshold, 'col');\n                }\n            }\n            if (prevIdx < threshold) {\n                idxDiff = Math.abs(idx - threshold);\n            }\n            if (!args.increase && this.parent.scrollSettings.isFinite && this.parent.viewport.rightIndex ===\n                (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, sheet.colCount - 1, false, 'columns')) {\n                var frozenCol = this.parent.frozenColCount(sheet);\n                var thresholdIdx = this.parent.viewport.leftIndex + frozenCol + (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRangeIndexes)(sheet.paneTopLeftCell)[1] - 1;\n                thresholdIdx += this.hiddenCount(this.parent.viewport.leftIndex + frozenCol, thresholdIdx);\n                if (idx + frozenCol > thresholdIdx) {\n                    args.prev.idx = idx;\n                    return;\n                }\n                idxDiff = thresholdIdx - (idx + frozenCol);\n            }\n            if (idx > threshold) {\n                prevLeftIdx = this.parent.viewport.leftIndex;\n                this.parent.viewport.leftIndex = idx - threshold;\n                if (args.increase && prevLeftIdx > this.parent.viewport.leftIndex) {\n                    this.parent.viewport.leftIndex = prevLeftIdx;\n                    return;\n                }\n                var frozenCol = this.parent.frozenColCount(sheet);\n                if (!args.preventScroll) {\n                    var frozenRow = this.parent.frozenRowCount(sheet);\n                    var rowIndex = frozenRow ? (0,_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.getCellIndexes)(sheet.topLeftCell)[0] : this.parent.viewport.topIndex;\n                    var frozenIndexes = [];\n                    if (frozenRow) {\n                        frozenIndexes = [frozenRow + this.parent.viewport.topIndex, frozenCol];\n                    }\n                    if (idxDiff < this.parent.viewport.colCount + threshold) {\n                        if (args.increase) {\n                            startIdx = this.parent.viewport.rightIndex + 1;\n                            endIdx = this.parent.viewport.rightIndex + (this.parent.viewport.leftIndex - prevLeftIdx);\n                            endIdx -= this.hiddenCount(prevLeftIdx + frozenCol, this.parent.viewport.leftIndex - 1 + frozenCol, 'columns');\n                            if (endIdx <= this.parent.viewport.rightIndex || (this.parent.scrollSettings.isFinite &&\n                                startIdx > (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, sheet.colCount - 1, false, 'columns'))) {\n                                this.parent.viewport.leftIndex = prevLeftIdx;\n                                return;\n                            }\n                            var indexes = this.parent.skipHidden(startIdx, endIdx, 'columns', false);\n                            var finiteOffset = this.checkLastIdx(indexes[1], 'col');\n                            startIdx = indexes[0];\n                            endIdx = finiteOffset.index;\n                            this.parent.viewport.leftIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, (this.parent.viewport.leftIndex - finiteOffset.diff) + frozenCol, !finiteOffset.diff, 'columns') - frozenCol;\n                            this.setThresholdWidth(width, idx - this.parent.viewport.leftIndex, frozenCol, !!finiteOffset.diff, prevLeftIdx === (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, frozenCol, true, 'columns'));\n                            this.parent.viewport.rightIndex = endIdx;\n                            this.parent.renderModule.refreshUI({ rowIndex: rowIndex, colIndex: startIdx, direction: 'first', refresh: 'ColumnPart',\n                                frozenIndexes: frozenIndexes }, this.getColAddress([startIdx, endIdx]));\n                        }\n                        else {\n                            startIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, this.parent.viewport.leftIndex + frozenCol, false, 'columns');\n                            if (startIdx < frozenCol) {\n                                startIdx = frozenCol;\n                                startIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, startIdx, true, 'columns');\n                            }\n                            this.parent.viewport.leftIndex = startIdx - frozenCol;\n                            endIdx = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, (prevLeftIdx + frozenCol) - 1, false, 'columns');\n                            if (endIdx < frozenCol || endIdx < startIdx) {\n                                this.parent.viewport.leftIndex = prevLeftIdx;\n                                return;\n                            }\n                            var rightIdx = this.skipHiddenLastIdx(this.parent.viewport.rightIndex - (((endIdx - startIdx) + 1) -\n                                this.hiddenCount(startIdx, endIdx, 'columns')), this.parent.viewport.rightIndex, 'columns');\n                            this.parent.viewport.rightIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, rightIdx, false, 'columns');\n                            this.setThresholdWidth(width, idx - this.parent.viewport.leftIndex, frozenCol);\n                            this.parent.renderModule.refreshUI({ rowIndex: rowIndex, colIndex: startIdx, direction: 'last', refresh: 'ColumnPart',\n                                frozenIndexes: frozenIndexes }, this.getColAddress([startIdx, endIdx]));\n                        }\n                    }\n                    else {\n                        prevLeftIdx = this.parent.viewport.topIndex;\n                        this.parent.viewport.leftIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, this.parent.viewport.leftIndex + frozenCol, false, 'columns')\n                            - frozenCol;\n                        if (this.parent.viewport.leftIndex < 0) {\n                            this.parent.viewport.leftIndex = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, frozenCol, true, 'columns') - frozenCol;\n                        }\n                        this.parent.renderModule.refreshUI({\n                            rowIndex: rowIndex, colIndex: this.parent.viewport.leftIndex, refresh: 'Column', frozenIndexes: frozenIndexes,\n                            skipTranslate: true\n                        });\n                        if (frozenRow) {\n                            this.parent.viewport.topIndex = prevLeftIdx;\n                        }\n                        this.setThresholdWidth(width, idx - this.parent.viewport.leftIndex, frozenCol, this.parent.scrollSettings.isFinite && this.parent.viewport.rightIndex ===\n                            (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.skipHiddenIdx)(sheet, sheet.colCount - 1, false, 'columns'));\n                        this.translate({ refresh: 'Column' });\n                    }\n                    this.updateScrollCount(idx, 'col', threshold);\n                    this.focusSheet();\n                }\n                else {\n                    this.setThresholdWidth(width, threshold, frozenCol);\n                    this.translate({ refresh: 'Column' });\n                }\n            }\n            args.prev.idx = idx;\n        }\n    };\n    VirtualScroll.prototype.focusSheet = function () {\n        if (!document.activeElement.classList.contains('e-text-findNext-short') || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(document.activeElement, '#' + this.parent.element.id)) {\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.focus)(this.parent.element);\n        }\n    };\n    VirtualScroll.prototype.setThresholdHeight = function (scrollHeight, threshold, frozenRow, endReached, isInit) {\n        var sheet = this.parent.getActiveSheet();\n        var start = this.parent.viewport.topIndex + frozenRow;\n        var end = (start + threshold) - 1;\n        if (endReached || isInit || end < start) {\n            this.translateY = start <= frozenRow ? 0 : (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowsHeight)(sheet, frozenRow, start - 1, true);\n        }\n        else {\n            this.translateY = scrollHeight - (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowsHeight)(sheet, start, end, true);\n        }\n    };\n    VirtualScroll.prototype.setThresholdWidth = function (scrollWidth, threshold, frozenCol, endReached, isInit) {\n        var sheet = this.parent.getActiveSheet();\n        var start = this.parent.viewport.leftIndex + frozenCol;\n        var end = (start + threshold) - 1;\n        if (endReached || isInit || end < start) {\n            this.translateX = start <= frozenCol ? 0 : (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, frozenCol, start - 1, true);\n        }\n        else {\n            this.translateX = scrollWidth - (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, start, end, true);\n        }\n    };\n    VirtualScroll.prototype.translate = function (args) {\n        if (args.skipTranslate || !this.content) {\n            return;\n        }\n        var translateX = this.translateX || 0;\n        translateX = this.parent.enableRtl ? -translateX : translateX;\n        if (args.refresh === 'Row' || args.refresh === 'RowPart') {\n            this.content.style.transform = \"translate(\" + translateX + \"px, \" + this.translateY + \"px)\";\n            this.rowHeader.style.transform = \"translate(0px, \" + this.translateY + \"px)\";\n        }\n        if (args.refresh === 'Column' || args.refresh === 'ColumnPart') {\n            this.content.style.transform = \"translate(\" + translateX + \"px, \" + this.translateY + \"px)\";\n            this.colHeader.style.transform = \"translate(\" + translateX + \"px, 0px)\";\n        }\n    };\n    VirtualScroll.prototype.updateColumnWidth = function (args) {\n        if (args.refresh === 'Column') {\n            this.content.style.width = '';\n            var sheet = this.parent.getActiveSheet();\n            var width = (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, this.parent.viewport.leftIndex + this.parent.frozenColCount(sheet), this.parent.viewport.rightIndex, true);\n            this.colHeader.style.width = width + 'px';\n            this.content.style.width = width + 'px';\n            if (!this.parent.scrollSettings.isFinite || args.isUpdate) {\n                var scroll_1 = this.parent.element.querySelector('.e-scroller .e-virtualtrack');\n                if (!scroll_1) {\n                    return;\n                }\n                var scrollWidth = parseInt(scroll_1.style.width, 10);\n                var newWidth = width + this.translateX + this.parent.viewport.beforeFreezeWidth;\n                if (newWidth > scrollWidth) {\n                    var diff = newWidth - scrollWidth;\n                    scroll_1.style.width = scrollWidth + diff + 'px';\n                }\n                else {\n                    var diff = scrollWidth - newWidth;\n                    var vTrack = this.parent.getMainContent().getElementsByClassName('e-virtualtrack')[0];\n                    if (scrollWidth - diff < parseInt(vTrack.style.width, 10)) {\n                        scroll_1.style.width = vTrack.style.width;\n                    }\n                }\n            }\n        }\n        else if (!this.parent.scrollSettings.isFinite) {\n            var vTrack = this.parent.getMainContent().getElementsByClassName('e-virtualtrack')[0];\n            var vTrackHeight = parseInt(vTrack.style.height, 10);\n            var height = this.content.getBoundingClientRect().height;\n            var newHeight = height + this.translateY + this.parent.viewport.beforeFreezeHeight;\n            if (newHeight > vTrackHeight) {\n                var diff = newHeight - vTrackHeight;\n                vTrack.style.height = vTrackHeight + diff + 'px';\n            }\n            else {\n                var diff = vTrackHeight - newHeight;\n                var hVTrack = this.parent.getRowHeaderContent().getElementsByClassName('e-virtualtrack')[0];\n                if (vTrackHeight - diff < parseInt(hVTrack.style.height, 10)) {\n                    vTrack.style.height = hVTrack.style.height;\n                }\n            }\n        }\n    };\n    VirtualScroll.prototype.updateRowColCount = function (args) {\n        if (!this.scroll.length) {\n            return;\n        }\n        var sheet = this.parent.getActiveSheet();\n        if (args.update === 'row') {\n            if (args.index !== this.scroll[this.parent.activeSheetIndex].rowCount - 1) {\n                var height = this.getVTrackHeight('height');\n                var newHeight = height;\n                if (args.index >= this.scroll[this.parent.activeSheetIndex].rowCount) {\n                    if (args.start === undefined) {\n                        newHeight += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowsHeight)(sheet, this.scroll[this.parent.activeSheetIndex].rowCount, args.index, true);\n                    }\n                    else {\n                        newHeight += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowsHeight)(sheet, args.start, args.end, true);\n                    }\n                }\n                else {\n                    if (args.start === undefined) {\n                        newHeight -= (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowsHeight)(sheet, args.index + 1, this.scroll[this.parent.activeSheetIndex].rowCount - 1, true);\n                    }\n                    else {\n                        newHeight -= (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getRowsHeight)(sheet, args.start, args.end, true);\n                    }\n                }\n                if (!args.isDelete && newHeight < height) {\n                    return;\n                }\n                this.scroll[this.parent.activeSheetIndex].rowCount = args.index + 1;\n                this.updateVTrack(this.rowHeader, newHeight, 'height');\n                if (this.scroll[this.parent.activeSheetIndex].rowCount > sheet.rowCount) {\n                    this.parent.setSheetPropertyOnMute(sheet, 'rowCount', this.scroll[this.parent.activeSheetIndex].rowCount);\n                }\n            }\n        }\n        else {\n            if (args.index !== this.scroll[this.parent.activeSheetIndex].colCount - 1) {\n                var width = this.getVTrackHeight('width');\n                var newWidth = width;\n                if (args.index >= this.scroll[this.parent.activeSheetIndex].colCount) {\n                    if (args.start === undefined) {\n                        newWidth += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, this.scroll[this.parent.activeSheetIndex].colCount, args.index, true);\n                    }\n                    else {\n                        newWidth += (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, args.start, args.end, true);\n                    }\n                }\n                else {\n                    if (args.start === undefined) {\n                        newWidth -= (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, args.index + 1, this.scroll[this.parent.activeSheetIndex].colCount - 1, true);\n                    }\n                    else {\n                        newWidth -= (0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.getColumnsWidth)(sheet, args.start, args.end, true);\n                    }\n                }\n                if (!args.isDelete && newWidth < width) {\n                    return;\n                }\n                this.scroll[this.parent.activeSheetIndex].colCount = args.index + 1;\n                this.updateVTrack(this.colHeader, newWidth, 'width');\n                if (this.scroll[this.parent.activeSheetIndex].colCount > sheet.colCount) {\n                    this.parent.setSheetPropertyOnMute(sheet, 'colCount', this.scroll[this.parent.activeSheetIndex].colCount);\n                }\n            }\n        }\n    };\n    VirtualScroll.prototype.getVTrackHeight = function (str) {\n        var height = this.content.nextElementSibling.style[\"\" + str];\n        if (height.includes('e+')) {\n            height = height.split('px')[0];\n            var heightArr = height.split('e+');\n            return Number(heightArr[0]) * Math.pow(10, Number(heightArr[1]));\n        }\n        else {\n            return parseFloat(height);\n        }\n    };\n    VirtualScroll.prototype.updateVTrackHeight = function (args) {\n        var frozenRow = this.parent.frozenRowCount(this.parent.getActiveSheet());\n        if (args.rowIdx < this.scroll[this.parent.activeSheetIndex].rowCount) {\n            this.updateVTrack(this.rowHeader, this.getVTrackHeight('height') + args.threshold, 'height');\n        }\n        if (args.rowIdx >= frozenRow && args.rowIdx < this.parent.scrollModule.offset.top.idx + frozenRow) {\n            var mainPanel = this.parent.element.getElementsByClassName('e-main-panel')[0];\n            if (mainPanel) {\n                this.parent.scrollModule.prevScroll.scrollTop = mainPanel.scrollTop + args.threshold;\n                mainPanel.scrollTop += args.threshold;\n            }\n            this.parent.scrollModule.offset.top.size += args.threshold;\n            if (args.rowIdx < this.parent.viewport.topIndex + frozenRow) {\n                this.translateY += args.threshold;\n                this.translate({ refresh: 'Row' });\n            }\n        }\n    };\n    VirtualScroll.prototype.updateVTrackWidth = function (args) {\n        if ((0,_workbook_index__WEBPACK_IMPORTED_MODULE_2__.isHiddenCol)(this.parent.getActiveSheet(), args.colIdx)) {\n            return;\n        }\n        var frozenCol = this.parent.frozenColCount(this.parent.getActiveSheet());\n        if (args.colIdx >= this.parent.viewport.leftIndex + frozenCol && args.colIdx <= this.parent.viewport.rightIndex) {\n            var hdrVTrack = this.parent.getColumnHeaderContent().getElementsByClassName('e-virtualtrack')[0];\n            hdrVTrack.style.width = parseFloat(hdrVTrack.style.width) + args.threshold + 'px';\n            var cntVTrack = this.parent.getMainContent().getElementsByClassName('e-virtualtrack')[0];\n            cntVTrack.style.width = parseFloat(cntVTrack.style.width) + args.threshold + 'px';\n            var scrollVTrack = this.parent.getScrollElement().getElementsByClassName('e-virtualtrack')[0];\n            scrollVTrack.style.width = parseFloat(scrollVTrack.style.width) + args.threshold + 'px';\n            var hdrColumn = this.parent.getColumnHeaderContent().getElementsByClassName('e-virtualable')[0];\n            hdrColumn.style.width = parseFloat(hdrColumn.style.width) + args.threshold + 'px';\n            var cntColumn = this.parent.getMainContent().getElementsByClassName('e-virtualable')[0];\n            cntColumn.style.width = parseFloat(cntColumn.style.width) + args.threshold + 'px';\n        }\n        else if (args.colIdx >= frozenCol && args.colIdx < this.parent.viewport.leftIndex + frozenCol) {\n            this.parent.scrollModule.offset.left.size += args.threshold;\n            this.translateX += args.threshold;\n            this.translate({ refresh: 'Column' });\n        }\n    };\n    VirtualScroll.prototype.updateVTrack = function (header, size, sizeStr) {\n        header.nextElementSibling.style[\"\" + sizeStr] = size + \"px\";\n        this.content.nextElementSibling.style[\"\" + sizeStr] = size + \"px\";\n        if (sizeStr === 'width' && this.parent.allowScrolling) {\n            this.parent.getScrollElement().firstElementChild.style.width = size + \"px\";\n        }\n    };\n    VirtualScroll.prototype.deInitProps = function () {\n        this.parent.viewport.leftIndex = null;\n        this.parent.viewport.topIndex = null;\n        this.parent.viewport.bottomIndex = null;\n        this.translateX = null;\n        this.translateY = null;\n    };\n    VirtualScroll.prototype.updateScrollProps = function (args) {\n        var _this = this;\n        if (args === void 0) { args = { sheetIndex: 0, sheets: this.parent.sheets }; }\n        if (this.scroll.length === 0) {\n            this.initScroll();\n        }\n        else {\n            args.sheets.forEach(function () { _this.scroll.splice(args.sheetIndex, 0, { rowCount: 0, colCount: 0 }); });\n        }\n    };\n    VirtualScroll.prototype.sliceScrollProps = function (args) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.sheetIndex)) {\n            this.scroll.length = 0;\n        }\n        else {\n            this.scroll.splice(args.sheetIndex, 1);\n        }\n    };\n    VirtualScroll.prototype.updateTranslate = function (args) {\n        if (args.height) {\n            if (args.isRender) {\n                this.translateY -= args.height;\n            }\n            else {\n                var height = parseInt(this.parent.getMainContent().getElementsByClassName('e-virtualtrack')[0].style.height, 10);\n                if (args.isHide) {\n                    this.updateVTrack(this.rowHeader, height - args.height, 'height');\n                    this.setThresholdHeight(this.translateY, ((args.prevSize - 1) - this.parent.viewport.topIndex) + 1, this.parent.frozenRowCount(this.parent.getActiveSheet()));\n                }\n                else {\n                    this.updateVTrack(this.rowHeader, height + args.height, 'height');\n                    this.translateY = this.translateY + args.size;\n                }\n            }\n            this.translate({ refresh: 'Row' });\n        }\n        if (args.width) {\n            this.translateX -= args.width;\n            this.translate({ refresh: 'Column' });\n        }\n    };\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.beforeContentLoaded, this.createVirtualElement, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.beforeVirtualContentLoaded, this.translate, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.virtualContentLoaded, this.updateColumnWidth, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.updateTableWidth, this.updateColumnWidth, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.onVerticalScroll, this.onVerticalScroll, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.onHorizontalScroll, this.onHorizontalScroll, this);\n        this.parent.on(_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.updateRowColCount, this.updateRowColCount, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.rowHeightChanged, this.updateVTrackHeight, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.colWidthChanged, this.updateVTrackWidth, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.deInitProperties, this.deInitProps, this);\n        this.parent.on(_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.sheetsDestroyed, this.sliceScrollProps, this);\n        this.parent.on(_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.sheetCreated, this.updateScrollProps, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.updateTranslate, this.updateTranslate, this);\n        this.parent.on(_common_index__WEBPACK_IMPORTED_MODULE_1__.spreadsheetDestroyed, this.destroy, this);\n    };\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n        var noteIndicatorElement = document.querySelectorAll('.e-addNoteIndicator');\n        if (noteIndicatorElement) {\n            noteIndicatorElement.forEach(function (element) {\n                element.remove();\n            });\n        }\n        if (this.rowHeader) {\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.removeAllChildren)(this.rowHeader);\n            this.rowHeader.remove();\n        }\n        if (this.colHeader) {\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.removeAllChildren)(this.colHeader);\n            this.colHeader.remove();\n        }\n        if (this.content) {\n            (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.removeAllChildren)(this.content);\n            this.content.remove();\n        }\n        this.rowHeader = null;\n        this.colHeader = null;\n        this.content = null;\n        this.parent = null;\n        this.scroll.length = 0;\n        this.translateX = null;\n        this.translateY = null;\n    };\n    VirtualScroll.prototype.removeEventListener = function () {\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.beforeContentLoaded, this.createVirtualElement);\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.beforeVirtualContentLoaded, this.translate);\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.virtualContentLoaded, this.updateColumnWidth);\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.updateTableWidth, this.updateColumnWidth);\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.onVerticalScroll, this.onVerticalScroll);\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.onHorizontalScroll, this.onHorizontalScroll);\n        this.parent.off(_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.updateRowColCount, this.updateRowColCount);\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.rowHeightChanged, this.updateVTrackHeight);\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.colWidthChanged, this.updateVTrackWidth);\n        this.parent.off(_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.sheetsDestroyed, this.sliceScrollProps);\n        this.parent.off(_workbook_common_index__WEBPACK_IMPORTED_MODULE_3__.sheetCreated, this.updateScrollProps);\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.updateTranslate, this.updateTranslate);\n        this.parent.off(_common_index__WEBPACK_IMPORTED_MODULE_1__.spreadsheetDestroyed, this.destroy);\n    };\n    return VirtualScroll;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-spreadsheet/src/spreadsheet/actions/virtual-scroll.js?");

/***/ })

}]);