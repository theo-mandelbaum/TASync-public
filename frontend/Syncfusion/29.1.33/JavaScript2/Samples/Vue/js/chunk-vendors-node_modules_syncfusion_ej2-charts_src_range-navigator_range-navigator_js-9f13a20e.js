"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-charts_src_range-navigator_range-navigator_js-9f13a20e"],{

/***/ "./node_modules/@syncfusion/ej2-charts/src/range-navigator/range-navigator.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-charts/src/range-navigator/range-navigator.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RangeNavigator: () => (/* binding */ RangeNavigator)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _common_utils_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils/helper */ \"./node_modules/@syncfusion/ej2-charts/src/common/utils/helper.js\");\n/* harmony import */ var _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-svg-base */ \"./node_modules/@syncfusion/ej2-svg-base/index.js\");\n/* harmony import */ var _common_model_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/model/base */ \"./node_modules/@syncfusion/ej2-charts/src/common/model/base.js\");\n/* harmony import */ var _renderer_chart_render__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./renderer/chart-render */ \"./node_modules/@syncfusion/ej2-charts/src/range-navigator/renderer/chart-render.js\");\n/* harmony import */ var _renderer_range_axis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./renderer/range-axis */ \"./node_modules/@syncfusion/ej2-charts/src/range-navigator/renderer/range-axis.js\");\n/* harmony import */ var _model_range_base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./model/range-base */ \"./node_modules/@syncfusion/ej2-charts/src/range-navigator/model/range-base.js\");\n/* harmony import */ var _renderer_slider__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./renderer/slider */ \"./node_modules/@syncfusion/ej2-charts/src/range-navigator/renderer/slider.js\");\n/* harmony import */ var _chart_series_line_series__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../chart/series/line-series */ \"./node_modules/@syncfusion/ej2-charts/src/chart/series/line-series.js\");\n/* harmony import */ var _common_model_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../common/model/constants */ \"./node_modules/@syncfusion/ej2-charts/src/common/model/constants.js\");\n/* harmony import */ var _utils_theme__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/theme */ \"./node_modules/@syncfusion/ej2-charts/src/range-navigator/utils/theme.js\");\n/* harmony import */ var _chart_axis_axis__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../chart/axis/axis */ \"./node_modules/@syncfusion/ej2-charts/src/chart/axis/axis.js\");\n/* harmony import */ var _chart_axis_double_axis__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../chart/axis/double-axis */ \"./node_modules/@syncfusion/ej2-charts/src/chart/axis/double-axis.js\");\n/* harmony import */ var _common_utils_export__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../common/utils/export */ \"./node_modules/@syncfusion/ej2-charts/src/common/utils/export.js\");\n/* harmony import */ var _common_period_selector_period_selector__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../common/period-selector/period-selector */ \"./node_modules/@syncfusion/ej2-charts/src/common/period-selector/period-selector.js\");\n/* harmony import */ var _common_utils_print__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../common/utils/print */ \"./node_modules/@syncfusion/ej2-charts/src/common/utils/print.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Range Navigator\n */\nvar RangeNavigator = /** @class */ (function (_super) {\n    __extends(RangeNavigator, _super);\n    /**\n     * Constructor for creating the widget.\n     *\n     * @param {RangeNavigatorModel} options - Specifies the Range Navigator model.\n     * @param {string | HTMLElement} element - Specifies the element for the Range Navigator.\n     * @hidden\n     */\n    function RangeNavigator(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.animateSeries = true;\n        _this.chartid = 57725;\n        _this.redraw = false;\n        return _this;\n    }\n    /**\n     * Starting point of the control initialization.\n     *\n     * @returns {void}\n     */\n    RangeNavigator.prototype.preRender = function () {\n        this.unWireEvents();\n        this.setCulture();\n        this.allowServerDataBinding = false;\n        if (this.periodSelectorModule) {\n            this.periodSelectorModule.selectedIndex = null;\n        }\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-rangenavigator').length;\n            this.element.id = 'rangenavigator_' + this.chartid + '_' + collection;\n        }\n        this.wireEvents();\n    };\n    /**\n     * To initialize the private variables.\n     *\n     * @returns {void}\n     */\n    RangeNavigator.prototype.initPrivateVariables = function () {\n        this.doubleModule = new _chart_axis_double_axis__WEBPACK_IMPORTED_MODULE_12__.Double();\n        this.labels = [];\n        this.rangeSlider = new _renderer_slider__WEBPACK_IMPORTED_MODULE_7__.RangeSlider(this);\n        this.chartSeries = new _renderer_chart_render__WEBPACK_IMPORTED_MODULE_4__.RangeSeries(this);\n        this.lineSeriesModule = new _chart_series_line_series__WEBPACK_IMPORTED_MODULE_8__.LineSeries();\n        this.rangeAxis = new _renderer_range_axis__WEBPACK_IMPORTED_MODULE_5__.RangeNavigatorAxis(this);\n    };\n    /**\n     * Method to set culture for chart.\n     *\n     * @returns {void}\n     */\n    RangeNavigator.prototype.setCulture = function () {\n        this.intl = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization();\n    };\n    /**\n     * To initialize the slider.\n     *\n     * @returns {void}\n     */\n    RangeNavigator.prototype.setSliderValue = function () {\n        var isDateTime = this.valueType === 'DateTime';\n        var isDateTimeCategory = this.valueType === 'DateTimeCategory';\n        var range = this.chartSeries.xAxis.actualRange;\n        this.startValue = (this.startValue || (isDateTimeCategory && this.startValue === 0)) ? this.startValue : (!this.value[0] ?\n            range.min : (isDateTime ? (new Date(this.value[0].toString())).getTime() : isDateTimeCategory ?\n            this.getRangeValue(new Date(this.value[0].toString()).getTime(), true) : +this.value[0]));\n        this.endValue = (this.endValue || (isDateTimeCategory && this.endValue === 0)) ? this.endValue : (!this.value[1] ? range.max :\n            (isDateTime ? (new Date(this.value[1].toString())).getTime() : isDateTimeCategory ?\n                this.getRangeValue(new Date(this.value[1].toString()).getTime(), false) : +this.value[1]));\n    };\n    /**\n     * To find the start and end value in the date-time category.\n     *\n     * @param {number} value - The value in the date-time category.\n     * @param {boolean} isStart - To find the start value in the date-time category.\n     * @returns {number} - The start or end value in date-time category.\n     */\n    RangeNavigator.prototype.getRangeValue = function (value, isStart) {\n        var labels = this.chartSeries.xAxis.labels;\n        var index = labels.length - 1;\n        while (index >= 0 && parseInt(labels[index], 10) > value) {\n            index--;\n        }\n        return isStart ? (index !== -1 ? index : this.chartSeries.xAxis.actualRange.min) :\n            (index === 0 ? this.chartSeries.xAxis.actualRange.max : index);\n    };\n    /**\n     * To render the range navigator.\n     *\n     * @returns {void}\n     */\n    RangeNavigator.prototype.render = function () {\n        var _this = this;\n        var loadEventData = {\n            name: 'load', rangeNavigator: this,\n            theme: this.theme\n        };\n        this.trigger('load', loadEventData, function () {\n            //this.theme = this.theme;\n            _this.setTheme();\n            _this.initPrivateVariables();\n            _this.createRangeSvg();\n            _this.calculateBounds();\n            _this.chartSeries.renderChart(_this);\n            (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.removeElement)('chartmeasuretext');\n            _this.renderComplete();\n            _this.allowServerDataBinding = true;\n        });\n        this.element.setAttribute('tabindex', '0');\n        this.element.style.outline = 'none';\n        this.element.setAttribute('role', 'region');\n        this.element.setAttribute('aria-label', 'Range navigator' + ' Syncfusion interactive chart.');\n    };\n    /**\n     * Theming for rangeNavigator.\n     *\n     * @returns {void}\n     */\n    RangeNavigator.prototype.setTheme = function () {\n        /** Set theme */\n        this.themeStyle = (0,_utils_theme__WEBPACK_IMPORTED_MODULE_10__.getRangeThemeColor)(this.theme, this);\n    };\n    /**\n     * Method to create SVG for Range Navigator.\n     *\n     * @returns {void}\n     */\n    RangeNavigator.prototype.createRangeSvg = function () {\n        this.removeSvg();\n        (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.createSvg)(this);\n        this.renderChartBackground();\n    };\n    /**\n     * Bounds calculation for widget performed.\n     *\n     * @returns {void}\n     */\n    RangeNavigator.prototype.calculateBounds = function () {\n        var labelPadding = this.enableGrouping ? 15 : 8;\n        var thumb = this.navigatorStyleSettings.thumb;\n        var labelSize = (0,_syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.measureText)('tempString', this.labelStyle, this.themeStyle.axisLabelFont).height;\n        var margin = this.margin;\n        var isLeightWeight = !this.series.length;\n        var tooltipSpace = (!this.disableRangeSelector) &&\n            isLeightWeight && this.tooltip.enable ? 35 : 0;\n        if (!this.periodSelectorModule && this.periodSelectorSettings.periods.length && !this.stockChart) {\n            this.periodSelectorModule = new _common_period_selector_period_selector__WEBPACK_IMPORTED_MODULE_14__.PeriodSelector(this);\n        }\n        var selector = this.periodSelectorModule;\n        if (this.periodSelectorModule && this.periodSelectorSettings.periods.length > 0) {\n            selector.periodSelectorSize = { x: 0, y: 0, height: 0, width: 0 };\n            selector.periodSelectorSize.width = this.availableSize.width;\n            selector.periodSelectorSize.height = this.periodSelectorSettings.height;\n            selector.periodSelectorSize.y = this.periodSelectorSettings.position === 'Bottom' ?\n                this.availableSize.height - selector.periodSelectorSize.height : 0;\n        }\n        var periodSelectorY = this.periodSelectorSettings.position === 'Top' && selector ?\n            selector.periodSelectorSize.y + selector.periodSelectorSize.height : 0;\n        var left = 0;\n        var top = 0;\n        if (this.stockChart && this.stockChart.stockLegendModule && this.stockChart.legendSettings.visible) {\n            if (this.stockChart.legendSettings.position === 'Left') {\n                left += this.stockChart.stockLegendModule.legendBounds.width;\n            }\n            else if (this.stockChart.legendSettings.position === 'Top') {\n                top += this.stockChart.stockLegendModule.legendBounds.height;\n            }\n        }\n        this.bounds = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.Rect((this.themeStyle.thumbWidth / 2 + thumb.border.width + margin.left + left), margin.top + tooltipSpace + periodSelectorY + top, this.availableSize.width - this.themeStyle.thumbWidth - (thumb.border.width * 2) - margin.left - margin.right, this.availableSize.height - margin.top - margin.bottom - tooltipSpace - (selector ? selector.periodSelectorSize.height : 0));\n        var deductHeight = ((this.labelPosition === 'Outside' || isLeightWeight) ?\n            (labelSize + labelPadding) : 0) + ((this.tickPosition === 'Outside' || isLeightWeight) ?\n            (this.majorTickLines.height) : 0);\n        this.bounds.height -= deductHeight;\n        if (isLeightWeight) {\n            var height = this.enableGrouping ? this.bounds.height - ((labelSize) + labelPadding) : this.bounds.height;\n            this.bounds.y += (this.themeStyle.thumbHeight > height ? (this.themeStyle.thumbHeight - height) / 2 : 0);\n        }\n        if (this.disableRangeSelector) {\n            this.bounds.y = 0;\n            this.bounds.height = this.periodSelectorSettings.periods.length > 0 ? this.periodSelectorSettings.height : 0;\n        }\n    };\n    /**\n     * Creating Chart for range navigator.\n     *\n     * @param {boolean} resize - Indicates whether the chart should be resized.\n     * @returns {void}\n     */\n    RangeNavigator.prototype.renderChart = function (resize) {\n        if (resize === void 0) { resize = false; }\n        this.chartSeries.renderSeries(this);\n        this.chartSeries.appendSeriesElements(this);\n        this.rangeAxis.renderGridLines();\n        this.rangeAxis.renderAxisLabels();\n        this.createSecondaryElement();\n        this.setSliderValue();\n        this.renderPeriodSelector();\n        this.renderSlider(resize);\n        if (!this.stockChart) {\n            this.element.appendChild(this.svgObject);\n        }\n        this.trigger('loaded', { rangeNavigator: this });\n        this.rangeSlider.setSlider(this.startValue, this.endValue, false, this.tooltip.enable && this.tooltip.displayMode === 'Always', resize);\n    };\n    /**\n     * To render period selector value.\n     *\n     * @returns {void}\n     */\n    RangeNavigator.prototype.renderPeriodSelector = function () {\n        if (this.periodSelectorModule) {\n            this.periodSelectorModule.renderSelectorElement(this);\n            this.periodSelectorModule.renderSelector();\n        }\n    };\n    /**\n     * Creating secondary range navigator.\n     *\n     * @returns {void}\n     */\n    RangeNavigator.prototype.createSecondaryElement = function () {\n        // For userInteraction\n        if (this.tooltip.enable) {\n            var tooltipDiv = this.createElement('div');\n            tooltipDiv.id = this.element.id + '_Secondary_Element';\n            tooltipDiv.style.position = 'relative';\n            this.element.appendChild(tooltipDiv);\n        }\n    };\n    /**\n     * Slider Calculation ane rendering performed here.\n     *\n     * @param {boolean} resize - Indicates whether the slider should be resized.\n     * @returns {void}\n     */\n    RangeNavigator.prototype.renderSlider = function (resize) {\n        this.rangeSlider.render(this);\n        if (this.periodSelectorModule) {\n            this.startValue = this.periodSelectorModule.control.startValue;\n            this.endValue = this.periodSelectorModule.control.endValue;\n        }\n        this.rangeSlider.setSlider(this.startValue, this.endValue, true, this.tooltip.enable && this.tooltip.displayMode === 'Always', resize);\n    };\n    /**\n     * To Remove the SVG.\n     *\n     * @returns {void}\n     * @private\n     */\n    RangeNavigator.prototype.removeSvg = function () {\n        if ((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.element.id + '_Secondary_Element')) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.element.id + '_Secondary_Element'));\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n        }\n        var removeLength = 0;\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > removeLength) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode && !this.stockChart) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.svgObject);\n            }\n        }\n    };\n    /** Wire, UnWire and Event releated calculation Started here */\n    /**\n     * Method to un-bind events for range navigator.\n     *\n     * @returns {void}\n     */\n    RangeNavigator.prototype.unWireEvents = function () {\n        /** Find the Events type */\n        var startEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent;\n        var moveEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent;\n        var stopEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent;\n        var cancelEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /** UnBind the Event handler */\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, startEvent, this.rangeOnMouseDown);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, stopEvent, this.mouseEnd);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'click', this.rangeOnMouseClick);\n        //EventHandler.remove(this.element, 'contextmenu', this.rangeRightClick);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, cancelEvent, this.mouseLeave);\n        window.removeEventListener((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.rangeResize);\n    };\n    /**\n     * Method to bind events for range navigator.\n     *\n     * @returns {void}\n     */\n    RangeNavigator.prototype.wireEvents = function () {\n        /** Find the Events type */\n        var cancelEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /** Bind the Event handler */\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent, this.rangeOnMouseDown, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent, this.mouseMove, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent, this.mouseEnd, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'click', this.rangeOnMouseClick, this);\n        //EventHandler.add(this.element, 'contextmenu', this.rangeRightClick, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, cancelEvent, this.mouseLeave, this);\n        window.addEventListener((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.rangeResize.bind(this));\n        var element = this.element;\n        element.style.touchAction = 'none';\n        element.style.msTouchAction = 'none';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n        element.style.display = 'block';\n    };\n    /**\n     * Handles the widget resize.\n     *\n     * @private\n     * @returns {boolean} - Indicates whether the widget was resized..\n     */\n    RangeNavigator.prototype.rangeResize = function () {\n        var _this = this;\n        // To avoid resize console error\n        if (!document.getElementById(this.element.id) || !this.svgObject) {\n            return false;\n        }\n        this.animateSeries = false;\n        this.removeAllTooltip();\n        var beforeResizeArgs = { name: 'beforeResize', cancelResizedEvent: false };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        var arg = {\n            rangeNavigator: this,\n            name: 'resized',\n            currentSize: new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.Size(0, 0),\n            previousSize: new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.Size(this.availableSize.width, this.availableSize.height)\n        };\n        this.trigger(_common_model_constants__WEBPACK_IMPORTED_MODULE_9__.beforeResize, beforeResizeArgs);\n        if (!beforeResizeArgs.cancelResizedEvent) {\n            this.resizeTo = +setTimeout(function () {\n                if (_this.isDestroyed) {\n                    clearTimeout(_this.resizeTo);\n                    return;\n                }\n                _this.createRangeSvg();\n                arg.currentSize = _this.availableSize;\n                _this.trigger('resized', arg);\n                _this.calculateBounds();\n                _this.chartSeries.processXAxis(_this);\n                _this.chartSeries.calculateGroupingBounds(_this);\n                _this.chartSeries.processYAxis(_this);\n                _this.renderChart(true);\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Bug task ID: EJ2-30797\n     * while resizing tooltip shows in wrong position\n     * Cause: Due to time lag in resize, tooltip did not remove until the component calculation\n     * Fix: Removed the tooltip element on resize\n     *\n     * @returns {void}\n     */\n    RangeNavigator.prototype.removeAllTooltip = function () {\n        if (this.tooltip.enable && this.tooltip.displayMode === 'Always') {\n            if ((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.element.id + '_leftTooltip')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.element.id + '_leftTooltip'));\n            }\n            if ((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.element.id + '_rightTooltip')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.element.id + '_rightTooltip'));\n            }\n        }\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @private\n     * @param {PointerEvent} e - The pointer event.\n     * @returns {boolean} - false.\n     */\n    RangeNavigator.prototype.mouseMove = function (e) {\n        if (this.stockChart) {\n            return false;\n        }\n        if ((0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(!this.stockChart ? this.element.id + '_svg' : this.element.id)) {\n            this.mouseX = this.setMouseX(e);\n            this.notify(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchMoveEvent, e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @private\n     * @param {PointerEvent} e - The pointer event.\n     * @returns {boolean} - false.\n     */\n    RangeNavigator.prototype.mouseLeave = function (e) {\n        var rangeSlider = this.rangeSlider;\n        if (rangeSlider.isDrag) {\n            if (this.stockChart) {\n                return false;\n            }\n            var enabledTooltip = rangeSlider.control.tooltip.enable;\n            if (rangeSlider.control.allowSnapping) {\n                rangeSlider.isDrag = false;\n                rangeSlider.setAllowSnapping(rangeSlider.control, rangeSlider.currentStart, rangeSlider.currentEnd, false, enabledTooltip);\n            }\n            rangeSlider.triggerEvent(this.chartSeries.xAxis.actualRange);\n        }\n        var cancelEvent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        this.mouseX = this.setMouseX(e);\n        this.notify(cancelEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse click on range navigator.\n     *\n     * @private\n     * @param {PointerEvent | TouchEvent} e - The pointer event.\n     * @returns {boolean} - false.\n     */\n    RangeNavigator.prototype.rangeOnMouseClick = function (e) {\n        this.notify('click', e);\n        return false;\n    };\n    /**\n     * Handles the print method for range navigator control.\n     *\n     * @param {string[] | string | Element} id - The id of the range navigator to be printed on the page.\n     * @returns {void}\n     */\n    RangeNavigator.prototype.print = function (id) {\n        new _common_utils_print__WEBPACK_IMPORTED_MODULE_15__.PrintUtils(this).print(id);\n    };\n    /**\n     * Handles the export method for range navigator control.\n     *\n     * @param {ExportType} type - The type of export.\n     * @param {string} fileName - The name of the file for export.\n     * @param {PdfPageOrientation} orientation - The orientation of the PDF page.\n     * @param {Chart | AccumulationChart | RangeNavigator[]} controls - Array of controls to be exported.\n     * @param {number} width - The width of the exported content.\n     * @param {number} height - The height of the exported content.\n     * @param {boolean} isVertical - Indicates whether the export is vertical.\n     * @returns {void}\n     */\n    RangeNavigator.prototype.export = function (type, fileName, orientation, controls, width, height, isVertical) {\n        controls = controls ? controls : [this];\n        new _common_utils_export__WEBPACK_IMPORTED_MODULE_13__.ExportUtils(this).export(type, fileName, orientation, controls, width, height, isVertical);\n    };\n    /**\n     * Creating a background element to the svg object.\n     *\n     * @returns {void}\n     */\n    RangeNavigator.prototype.renderChartBackground = function () {\n        var top = 0;\n        var left = 0;\n        if (this.stockChart && this.stockChart.legendSettings.visible && this.stockChart.stockLegendModule) {\n            if (this.stockChart.legendSettings.position === 'Top') {\n                top += this.stockChart.stockLegendModule.legendBounds.height;\n            }\n            else if (this.stockChart.legendSettings.position === 'Left') {\n                left += this.stockChart.stockLegendModule.legendBounds.width;\n            }\n        }\n        var rect = new _common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.RectOption(this.element.id + '_ChartBorder', this.background || this.themeStyle.background, { width: 0, color: 'transparent' }, 1, new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_2__.Rect(left, top, this.availableSize.width, this.availableSize.height));\n        this.svgObject.appendChild(this.renderer.drawRectangle(rect));\n    };\n    /**\n     * Handles the mouse down on range navigator.\n     *\n     * @private\n     * @param {PointerEvent} e - The pointer event.\n     * @returns {boolean} - false.\n     */\n    RangeNavigator.prototype.rangeOnMouseDown = function (e) {\n        this.mouseDownX = this.setMouseX(e);\n        this.notify(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse up.\n     *\n     * @private\n     * @param {PointerEvent} e - The pointer event.\n     * @returns {boolean} - false.\n     */\n    RangeNavigator.prototype.mouseEnd = function (e) {\n        this.mouseX = this.setMouseX(e);\n        this.notify(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent, e);\n        return false;\n    };\n    // private rangeRightClick(event: MouseEvent | PointerEvent): boolean {\n    //     if (event.buttons === 2 || event.which === 0 || (<PointerEvent>event).pointerType === 'touch') {\n    //         event.preventDefault();\n    //         event.stopPropagation();\n    //         return false;\n    //     }\n    //     return true;\n    // }\n    /**\n     * To find mouse x, y for aligned range navigator element svg position.\n     *\n     * @param {PointerEvent} e - The pointer event.\n     * @returns {number} - The mouse x-coordinate relative to the aligned range navigator SVG position..\n     */\n    RangeNavigator.prototype.setMouseX = function (e) {\n        var pageX = e.type.indexOf('touch') > -1 ?\n            e.changedTouches[0].clientX : e.clientX;\n        var rect = this.element.getBoundingClientRect();\n        var svgRect = !this.stockChart ? (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.element.id + '_svg').getBoundingClientRect() :\n            (0,_common_utils_helper__WEBPACK_IMPORTED_MODULE_1__.getElement)(this.element.id).getBoundingClientRect();\n        return (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /** Wire, UnWire and Event releated calculation End here */\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @private\n     * @returns {string} - The persisted data containing the properties.\n     */\n    RangeNavigator.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * OnProperty change method calling here.\n     *\n     * @param {RangeNavigatorModel} newProp - The new RangeNavigatorModel.\n     * @returns {void}\n     */\n    RangeNavigator.prototype.onPropertyChanged = function (newProp) {\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshRange = false;\n        this.animateSeries = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                case 'navigatorBorder':\n                case 'enableGrouping':\n                case 'labelPosition':\n                case 'tickPosition':\n                case 'labelStyle':\n                    refreshBounds = true;\n                    break;\n                case 'enableRtl':\n                case 'xName':\n                case 'yName':\n                case 'query':\n                case 'minimum':\n                case 'maximum':\n                case 'interval':\n                case 'intervalType':\n                case 'logBase':\n                case 'valueType':\n                case 'majorGridLines':\n                case 'minorGridLines':\n                case 'navigatorStyleSettings':\n                case 'labelFormat':\n                case 'skeleton':\n                case 'skeletonType':\n                case 'secondaryLabelAlignment':\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'dataSource':\n                case 'series':\n                    renderer = true;\n                    refreshBounds = true;\n                    break;\n                case 'theme':\n                    this.animateSeries = true;\n                    break;\n                case 'locale':\n                    _super.prototype.refresh.call(this);\n                    break;\n                case 'value':\n                    this.startValue = null;\n                    this.endValue = null;\n                    refreshRange = true;\n                    this.redraw = true;\n                    break;\n            }\n        }\n        if (!refreshBounds && renderer) {\n            this.removeSvg();\n            this.chartSeries.xMin = Infinity;\n            this.chartSeries.xMax = -Infinity;\n            this.chartSeries.renderChart(this);\n        }\n        // issue fix for Range Navigator size gets reduced when the data source is refreshed\n        if (refreshBounds && renderer) {\n            this.removeSvg();\n            this.chartSeries.xMin = this.chartSeries.yMin = Infinity;\n            this.chartSeries.xMax = this.chartSeries.yMax = -Infinity;\n            this.calculateBounds();\n            this.chartSeries.renderChart(this);\n        }\n        if (refreshBounds && !renderer) {\n            this.removeSvg();\n            this.calculateBounds();\n            this.chartSeries.renderChart(this);\n        }\n        if (!refreshBounds && !renderer && refreshRange) {\n            this.setSliderValue();\n            this.rangeSlider.setSlider(this.startValue, this.endValue, true, this.tooltip.enable && this.tooltip.displayMode === 'Always');\n        }\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} requiredModules\n     * @private\n     */\n    RangeNavigator.prototype.requiredModules = function () {\n        var _this = this;\n        var modules = [];\n        this.series.map(function (series) {\n            if (series.type === 'Area' || series.type === 'StepLine') {\n                modules.push({\n                    member: series.type + 'Series',\n                    args: [_this]\n                });\n            }\n        });\n        if (this.periodSelectorSettings.periods.length > 0) {\n            modules.push({\n                member: 'PeriodSelector',\n                args: [this]\n            });\n        }\n        if (this.valueType !== 'Double') {\n            modules.push({\n                member: this.valueType,\n                args: [this]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'RangeTooltip',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * To get the module name of the widget.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    RangeNavigator.prototype.getModuleName = function () {\n        return 'rangeNavigator';\n    };\n    /**\n     * To destroy the widget\n     *\n     * @function destroy\n     * @returns {void}\n     * @member of rangeNavigator\n     */\n    RangeNavigator.prototype.destroy = function () {\n        this.unWireEvents();\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n        this.rangeSlider.destroy();\n        _super.prototype.destroy.call(this);\n        this.element.innerText = '';\n        this.element.classList.remove('e-rangenavigator');\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeNavigator.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeNavigator.prototype, \"height\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeNavigator.prototype, \"dataSource\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeNavigator.prototype, \"xName\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeNavigator.prototype, \"yName\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], RangeNavigator.prototype, \"query\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([], _model_range_base__WEBPACK_IMPORTED_MODULE_6__.RangeNavigatorSeries)\n    ], RangeNavigator.prototype, \"series\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_range_base__WEBPACK_IMPORTED_MODULE_6__.RangeTooltipSettings)\n    ], RangeNavigator.prototype, \"tooltip\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeNavigator.prototype, \"minimum\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeNavigator.prototype, \"maximum\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeNavigator.prototype, \"interval\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Auto')\n    ], RangeNavigator.prototype, \"intervalType\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Hide')\n    ], RangeNavigator.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(10)\n    ], RangeNavigator.prototype, \"logBase\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Double')\n    ], RangeNavigator.prototype, \"valueType\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Outside')\n    ], RangeNavigator.prototype, \"labelPosition\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Auto')\n    ], RangeNavigator.prototype, \"labelPlacement\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(500)\n    ], RangeNavigator.prototype, \"animationDuration\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], RangeNavigator.prototype, \"enableGrouping\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], RangeNavigator.prototype, \"enableDeferredUpdate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], RangeNavigator.prototype, \"disableRangeSelector\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], RangeNavigator.prototype, \"allowSnapping\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], RangeNavigator.prototype, \"allowIntervalData\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], RangeNavigator.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], RangeNavigator.prototype, \"groupBy\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Outside')\n    ], RangeNavigator.prototype, \"tickPosition\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ fontFamily: null, size: null, fontStyle: null, fontWeight: null, color: null }, _common_model_base__WEBPACK_IMPORTED_MODULE_3__.Font)\n    ], RangeNavigator.prototype, \"labelStyle\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _chart_axis_axis__WEBPACK_IMPORTED_MODULE_11__.MajorGridLines)\n    ], RangeNavigator.prototype, \"majorGridLines\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _chart_axis_axis__WEBPACK_IMPORTED_MODULE_11__.MajorTickLines)\n    ], RangeNavigator.prototype, \"majorTickLines\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _model_range_base__WEBPACK_IMPORTED_MODULE_6__.StyleSettings)\n    ], RangeNavigator.prototype, \"navigatorStyleSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _common_model_base__WEBPACK_IMPORTED_MODULE_3__.PeriodSelectorSettings)\n    ], RangeNavigator.prototype, \"periodSelectorSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ color: null, width: 1 }, _common_model_base__WEBPACK_IMPORTED_MODULE_3__.Border)\n    ], RangeNavigator.prototype, \"navigatorBorder\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Material')\n    ], RangeNavigator.prototype, \"theme\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])\n    ], RangeNavigator.prototype, \"value\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], RangeNavigator.prototype, \"background\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], RangeNavigator.prototype, \"labelFormat\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], RangeNavigator.prototype, \"skeleton\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('DateTime')\n    ], RangeNavigator.prototype, \"skeletonType\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Middle')\n    ], RangeNavigator.prototype, \"secondaryLabelAlignment\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ top: 5, bottom: 5, right: 5, left: 5 }, _common_model_base__WEBPACK_IMPORTED_MODULE_3__.Margin)\n    ], RangeNavigator.prototype, \"margin\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], RangeNavigator.prototype, \"load\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], RangeNavigator.prototype, \"loaded\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], RangeNavigator.prototype, \"resized\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], RangeNavigator.prototype, \"beforeResize\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], RangeNavigator.prototype, \"labelRender\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], RangeNavigator.prototype, \"changed\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], RangeNavigator.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], RangeNavigator.prototype, \"selectorRender\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], RangeNavigator.prototype, \"beforePrint\", void 0);\n    RangeNavigator = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], RangeNavigator);\n    return RangeNavigator;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-charts/src/range-navigator/range-navigator.js?");

/***/ })

}]);