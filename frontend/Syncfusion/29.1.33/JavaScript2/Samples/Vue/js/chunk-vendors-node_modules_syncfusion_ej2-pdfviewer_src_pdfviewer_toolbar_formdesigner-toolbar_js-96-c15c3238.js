"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-pdfviewer_src_pdfviewer_toolbar_formdesigner-toolbar_js-96-c15c3238"],{

/***/ "./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/toolbar/formdesigner-toolbar.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/toolbar/formdesigner-toolbar.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FormDesignerToolbar: () => (/* binding */ FormDesignerToolbar)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\");\n/* harmony import */ var _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-splitbuttons */ \"./node_modules/@syncfusion/ej2-splitbuttons/index.js\");\n\n\n\n/**\n * @hidden\n */\nvar FormDesignerToolbar = /** @class */ (function () {\n    function FormDesignerToolbar(viewer, viewerBase, toolbar) {\n        /**\n         * @private\n         */\n        this.isToolbarHidden = false;\n        this.isTextboxBtnVisible = true;\n        this.isPasswordBtnVisible = true;\n        this.isCheckboxBtnVisible = true;\n        this.isRadiobuttonBtnVisible = true;\n        this.isDropdownBtnVisible = true;\n        this.isListboxBtnVisible = true;\n        this.isSignatureBtnVisible = true;\n        this.isDeleteBtnVisible = true;\n        this.toolbarBorderHeight = 1;\n        this.pdfViewer = viewer;\n        this.pdfViewerBase = viewerBase;\n        this.primaryToolbar = toolbar;\n    }\n    FormDesignerToolbar.prototype.initializeFormDesignerToolbar = function () {\n        this.toolbarElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: this.pdfViewer.element.id + '_formdesigner_toolbar', className: 'e-pv-formdesigner-toolbar' });\n        this.pdfViewerBase.viewerMainContainer.appendChild(this.toolbarElement);\n        this.toolbar = new _syncfusion_ej2_navigations__WEBPACK_IMPORTED_MODULE_1__.Toolbar({\n            width: '', height: '', overflowMode: 'Popup',\n            items: this.createToolbarItems(), clicked: this.onToolbarClicked.bind(this)\n        });\n        //this.toolbar.isStringTemplate = true;\n        if (this.pdfViewer.enableRtl) {\n            this.toolbar.enableRtl = true;\n        }\n        this.toolbar.appendTo(this.toolbarElement);\n        this.afterToolbarCreation();\n        this.createSignContainer();\n        this.applyFormDesignerToolbarSettings();\n        //this.updateToolbarItems();\n        this.showFormDesignerToolbar(null, true);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    FormDesignerToolbar.prototype.resetFormDesignerToolbar = function () {\n        if (this.pdfViewer.isFormDesignerToolbarVisible) {\n            this.pdfViewer.designerMode = true;\n            this.pdfViewer.formDesignerModule.setMode('designer');\n            this.adjustViewer(false);\n            this.toolbarElement.style.display = '';\n            this.isToolbarHidden = false;\n            this.adjustViewer(true);\n            this.primaryToolbar.selectItem(this.primaryToolbar.formDesignerItem);\n            this.pdfViewer.isFormDesignerToolbarVisible = true;\n        }\n        else {\n            this.toolbarElement.style.display = 'none';\n            this.isToolbarHidden = true;\n            if (!this.pdfViewer.isAnnotationToolbarVisible) {\n                this.adjustViewer(true);\n            }\n            this.primaryToolbar.deSelectItem(this.primaryToolbar.formDesignerItem);\n            this.pdfViewer.isFormDesignerToolbarVisible = false;\n        }\n    };\n    /**\n     * @param {HTMLElement} element - It describes about the element value\n     * @param {boolean} isInitialLoading - It describes about the isInitialLoading boolean value\n     * @private\n     * @returns {void}\n     */\n    FormDesignerToolbar.prototype.showFormDesignerToolbar = function (element, isInitialLoading) {\n        if (!this.isToolbarHidden) {\n            if (element) {\n                this.primaryToolbar.deSelectItem(element);\n            }\n            else {\n                if (this.pdfViewer.enableToolbar) {\n                    this.primaryToolbar.deSelectItem(this.primaryToolbar.formDesignerItem);\n                }\n            }\n            this.adjustViewer(false);\n            //this.deselectAllItems();\n            if (this.pdfViewer.formFieldCollection) {\n                var filteredFields = this.pdfViewer.formFieldCollection.filter(function (field) {\n                    return field.formFieldAnnotationType === 'Textbox' && field.isMultiline;\n                });\n                filteredFields.forEach(function (field) {\n                    var resize = document.getElementById(field.id);\n                    if (resize) {\n                        resize.style.pointerEvents = 'none';\n                        resize.style.resize = 'none';\n                    }\n                });\n            }\n            this.toolbarElement.style.display = 'none';\n            this.pdfViewer.formDesignerModule.setMode('edit');\n            this.pdfViewer.designerMode = false;\n            if (!isInitialLoading) {\n                this.pdfViewer.isFormDesignerToolbarVisible = false;\n            }\n        }\n        else {\n            var toolBarInitialStatus = this.toolbarElement.style.display;\n            this.toolbarElement.style.display = 'block';\n            this.pdfViewer.designerMode = true;\n            this.pdfViewer.formDesignerModule.setMode('designer');\n            if (!isInitialLoading) {\n                this.pdfViewer.isFormDesignerToolbarVisible = true;\n            }\n            if (element) {\n                this.primaryToolbar.selectItem(element);\n            }\n            else {\n                if (this.pdfViewer.enableToolbar) {\n                    this.primaryToolbar.selectItem(this.primaryToolbar.formDesignerItem);\n                }\n            }\n            if (toolBarInitialStatus === 'none') {\n                this.adjustViewer(true);\n            }\n            if (this.pdfViewer.formFieldCollection) {\n                var filteredFields = this.pdfViewer.formFieldCollection.filter(function (field) {\n                    return field.formFieldAnnotationType === 'Textbox' && field.isMultiline;\n                });\n                filteredFields.forEach(function (field) {\n                    var resize = document.getElementById(field.id);\n                    if (resize) {\n                        resize.style.pointerEvents = 'auto';\n                        resize.style.resize = 'auto';\n                    }\n                });\n            }\n        }\n        if (this.pdfViewer.magnification && this.pdfViewer.magnification.fitType === 'fitToPage') {\n            this.pdfViewer.magnification.fitToPage();\n        }\n        //this.enableAnnotationAddTools(true);\n        this.isToolbarHidden = !this.isToolbarHidden;\n    };\n    /**\n     * @param {boolean} isAdjust - It describes about the isAdjust boolean value\n     * @private\n     * @returns {void}\n     */\n    FormDesignerToolbar.prototype.adjustViewer = function (isAdjust) {\n        var splitterElement;\n        var toolbarContainer;\n        var formDesignerToolbarHeight;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {\n            splitterElement = this.pdfViewer.element.querySelector('.e-pv-sidebar-toolbar-splitter');\n            toolbarContainer = this.pdfViewer.element.querySelector('.e-pv-toolbar');\n            var formDesignerToolbarContainer = this.pdfViewer.element.querySelector('.e-pv-formDesigner-toolbar');\n            formDesignerToolbarHeight = this.getToolbarHeight(formDesignerToolbarContainer);\n        }\n        else {\n            splitterElement = this.pdfViewerBase.getElement('_sideBarToolbarSplitter');\n            toolbarContainer = this.pdfViewerBase.getElement('_toolbarContainer');\n            formDesignerToolbarHeight = this.getToolbarHeight(this.toolbarElement);\n        }\n        var toolbarHeight = this.getToolbarHeight(toolbarContainer);\n        var sideBarToolbar = this.pdfViewerBase.navigationPane.sideBarToolbar;\n        var sideBarContentContainer = this.pdfViewerBase.navigationPane.sideBarContentContainer;\n        var commentsContainer = this.pdfViewerBase.navigationPane.commentPanelContainer;\n        var commentPanelResizer = this.pdfViewerBase.navigationPane.commentPanelResizer;\n        var newToolbarHeight = '';\n        if (isAdjust) {\n            if (this.pdfViewer.enableToolbar) {\n                sideBarToolbar.style.top = (toolbarHeight + formDesignerToolbarHeight) + 'px';\n                sideBarContentContainer.style.top = (toolbarHeight + formDesignerToolbarHeight) + 'px';\n                splitterElement.style.top = (toolbarHeight + formDesignerToolbarHeight) + 'px';\n                commentsContainer.style.top = (toolbarHeight + formDesignerToolbarHeight) + 'px';\n                commentPanelResizer.style.top = (toolbarHeight + formDesignerToolbarHeight) + 'px';\n            }\n            else {\n                sideBarToolbar.style.top = (formDesignerToolbarHeight) + 'px';\n                sideBarContentContainer.style.top = (formDesignerToolbarHeight) + 'px';\n                splitterElement.style.top = (formDesignerToolbarHeight) + 'px';\n                commentsContainer.style.top = (formDesignerToolbarHeight) + 'px';\n                commentPanelResizer.style.top = (toolbarHeight + formDesignerToolbarHeight) + 'px';\n            }\n            if (!this.pdfViewer.enableToolbar) {\n                toolbarHeight = 0;\n            }\n            this.pdfViewerBase.viewerContainer.style.height = this.updateViewerHeight(this.getElementHeight(this.pdfViewerBase.viewerContainer), (formDesignerToolbarHeight + toolbarHeight)) + 'px';\n            newToolbarHeight = this.getNavigationToolbarHeight(formDesignerToolbarHeight + toolbarHeight);\n            sideBarToolbar.style.height = newToolbarHeight;\n            splitterElement.style.height = newToolbarHeight;\n            commentPanelResizer.style.height = newToolbarHeight;\n            sideBarContentContainer.style.height = newToolbarHeight;\n        }\n        else {\n            if (this.pdfViewer.enableToolbar) {\n                sideBarToolbar.style.top = toolbarHeight + 'px';\n                sideBarContentContainer.style.top = toolbarHeight + 'px';\n                splitterElement.style.top = toolbarHeight + 'px';\n                commentsContainer.style.top = toolbarHeight + 'px';\n                commentPanelResizer.style.top = toolbarHeight + 'px';\n            }\n            else {\n                sideBarToolbar.style.top = 1 + 'px';\n                sideBarToolbar.style.height = '100%';\n                sideBarContentContainer.style.top = 1 + 'px';\n                sideBarContentContainer.style.height = '100%';\n                splitterElement.style.top = 1 + 'px';\n                splitterElement.style.height = '100%';\n                commentsContainer.style.top = 1 + 'px';\n                commentsContainer.style.height = '100%';\n                commentPanelResizer.style.top = 1 + 'px';\n                commentPanelResizer.style.height = '100%';\n            }\n            if (!this.pdfViewer.enableToolbar) {\n                toolbarHeight = 0;\n            }\n            this.pdfViewerBase.viewerContainer.style.height = this.updateViewerHeight(this.getElementHeight(this.pdfViewerBase.viewerContainer), formDesignerToolbarHeight) + 'px';\n            newToolbarHeight = this.getNavigationToolbarHeight(toolbarHeight);\n            sideBarToolbar.style.height = newToolbarHeight;\n            splitterElement.style.height = newToolbarHeight;\n            commentPanelResizer.style.height = newToolbarHeight;\n            sideBarContentContainer.style.height = newToolbarHeight;\n            if (this.pdfViewerBase.viewerContainer.style.height === '0px') {\n                this.pdfViewerBase.viewerContainer.style.height = (parseInt(this.pdfViewer.element.style.height, 10) - parseInt(sideBarToolbar.style.top, 10)) + 'px';\n            }\n        }\n    };\n    FormDesignerToolbar.prototype.getElementHeight = function (element) {\n        try {\n            return element.getBoundingClientRect().height;\n        }\n        catch (error) {\n            return 0;\n        }\n    };\n    FormDesignerToolbar.prototype.updateViewerHeight = function (viewerHeight, toolbarHeight) {\n        return this.getElementHeight(this.pdfViewer.element) - toolbarHeight;\n    };\n    FormDesignerToolbar.prototype.resetViewerHeight = function (viewerHeight, toolbarHeight) {\n        return viewerHeight + toolbarHeight;\n    };\n    FormDesignerToolbar.prototype.getNavigationToolbarHeight = function (toolbarHeight) {\n        var height = this.pdfViewer.element.getBoundingClientRect().height;\n        return (height !== 0) ? height - toolbarHeight + 'px' : '';\n    };\n    FormDesignerToolbar.prototype.updateContentContainerHeight = function (isAdjust, isBlazor) {\n        var formDesignerToolbarHeight;\n        if (isBlazor) {\n            var formDesignerToolbarContainer = this.pdfViewer.element.querySelector('.e-pv-formDesigner-toolbar');\n            formDesignerToolbarHeight = this.getToolbarHeight(formDesignerToolbarContainer);\n        }\n        else {\n            formDesignerToolbarHeight = this.getToolbarHeight(this.toolbarElement);\n        }\n        var sideBarClientRect = this.pdfViewerBase.navigationPane.sideBarContentContainer.getBoundingClientRect();\n        if (sideBarClientRect.height !== 0) {\n            if (isAdjust) {\n                this.pdfViewerBase.navigationPane.sideBarContentContainer.style.height = sideBarClientRect.height - formDesignerToolbarHeight + 'px';\n            }\n            else {\n                this.pdfViewerBase.navigationPane.sideBarContentContainer.style.height = sideBarClientRect.height + formDesignerToolbarHeight + 'px';\n            }\n        }\n    };\n    FormDesignerToolbar.prototype.getToolbarHeight = function (element) {\n        var toolbarHeight = element.getBoundingClientRect().height;\n        if (toolbarHeight === 0 && element === this.pdfViewerBase.getElement('_toolbarContainer')) {\n            // getComputedStyle gets the value from style and toolbar border height is added to it.\n            toolbarHeight = parseFloat(window.getComputedStyle(element)['height']) + this.toolbarBorderHeight;\n        }\n        return toolbarHeight;\n    };\n    FormDesignerToolbar.prototype.createToolbarItems = function () {\n        var signTemplate = this.getTemplate('button', '_formfield_signature', 'e-pv-annotation-handwritten-container');\n        var items = [];\n        items.push({ prefixIcon: 'e-pv-textbox-icon e-pv-icon', className: 'e-pv-annotation-shapes-container', id: this.pdfViewer.element.id + '_formdesigner_textbox', align: 'Left', attr: { 'tabindex': 0, 'data-tabindex': 0 } });\n        items.push({ prefixIcon: 'e-pv-password-icon e-pv-icon', className: 'e-pv-annotation-shapes-container', id: this.pdfViewer.element.id + '_formdesigner_passwordfield', align: 'Left', attr: { 'tabindex': 0, 'data-tabindex': 0 } });\n        items.push({ prefixIcon: 'e-pv-checkbox-icon e-pv-icon', className: 'e-pv-annotation-shapes-container', id: this.pdfViewer.element.id + '_formdesigner_checkbox', align: 'Left', attr: { 'tabindex': 0, 'data-tabindex': 0 } });\n        items.push({ prefixIcon: 'e-pv-radiobutton-icon e-pv-icon', className: 'e-pv-annotation-shapes-container', id: this.pdfViewer.element.id + '_formdesigner_radiobutton', align: 'Left', attr: { 'tabindex': 0, 'data-tabindex': 0 } });\n        items.push({ prefixIcon: 'e-pv-dropdown-icon e-pv-icon', className: 'e-pv-annotation-shapes-container', id: this.pdfViewer.element.id + '_formdesigner_dropdown', align: 'Left', attr: { 'tabindex': 0, 'data-tabindex': 0 } });\n        items.push({ prefixIcon: 'e-pv-listbox-icon e-pv-icon', className: 'e-pv-annotation-shapes-container', id: this.pdfViewer.element.id + '_formdesigner_listbox', align: 'Left', attr: { 'tabindex': 0, 'data-tabindex': 0 } });\n        items.push({ template: signTemplate, align: 'Left', attr: { 'tabindex': 0, 'data-tabindex': 0 } });\n        items.push({ type: 'Separator', align: 'Left', attr: { 'tabindex': 0, 'data-tabindex': 0 } });\n        items.push({ prefixIcon: 'e-pv-annotation-delete-icon e-pv-icon', className: 'e-pv-annotation-delete-container', id: this.pdfViewer.element.id + '_formdesigner_delete', align: 'Left', attr: { 'tabindex': 0, 'data-tabindex': 0 } });\n        items.push({ prefixIcon: 'e-pv-annotation-tools-close-icon e-pv-icon', className: 'e-pv-annotation-tools-close-container', id: this.pdfViewer.element.id + '_formdesigner_close', align: 'Right', attr: { 'tabindex': 0, 'data-tabindex': 0 } });\n        return items;\n    };\n    FormDesignerToolbar.prototype.createSignContainer = function () {\n        var _this = this;\n        this.handWrittenSignatureItem = this.pdfViewerBase.getElement('_formfield_signature');\n        this.handWrittenSignatureItem.setAttribute('tabindex', '0');\n        this.handWrittenSignatureItem.setAttribute('data-tabindex', '0');\n        this.primaryToolbar.createTooltip(this.pdfViewerBase.getElement('_formfield_signature'), this.pdfViewer.localeObj.getConstant('HandwrittenSignatureDialogHeaderText'));\n        var items = [];\n        items = [\n            {\n                text: 'ADD SIGNATURE'\n            },\n            {\n                separator: true\n            },\n            {\n                text: 'ADD INITIAL'\n            }\n        ];\n        var saveOptions = {\n            items: items,\n            iconCss: 'e-pv-handwritten-icon e-pv-icon',\n            cssClass: 'e-pv-handwritten-popup',\n            beforeItemRender: function (args) {\n                _this.pdfViewer.clearSelection(_this.pdfViewerBase.currentPageNumber - 1);\n                if (args.element && args.element.className.indexOf('e-separator') !== -1) {\n                    args.element.style.margin = '8px 0';\n                    args.element.setAttribute('role', 'menuitem');\n                    args.element.setAttribute('aria-label', 'separator');\n                }\n                if (args.item.text === 'ADD SIGNATURE') {\n                    args.element.innerHTML = '';\n                    var addInitialSpan = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button');\n                    addInitialSpan.classList.add('e-control', 'e-btn', 'e-lib', 'e-outline', 'e-primary');\n                    addInitialSpan.textContent = _this.pdfViewer.localeObj.getConstant('SignatureFieldDialogHeaderText');\n                    if (_this.pdfViewer.locale === 'en-US') {\n                        addInitialSpan.style.width = '130px';\n                    }\n                    else {\n                        addInitialSpan.style.width = 'auto';\n                    }\n                    addInitialSpan.style.height = '36px';\n                    addInitialSpan.addEventListener('click', _this.clickSignature.bind(_this));\n                    args.element.appendChild(addInitialSpan);\n                    args.element.addEventListener('mouseover', _this.hoverInitialBtn.bind(_this));\n                    args.element.style.width = '206px';\n                    args.element.style.display = 'flex';\n                    args.element.style.flexDirection = 'column';\n                    args.element.style.height = 'auto';\n                    args.element.style.alignItems = 'center';\n                    args.element.setAttribute('role', 'menuitem');\n                }\n                if (args.item.text === 'ADD INITIAL') {\n                    args.element.innerHTML = '';\n                    var addInitialSpan = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('button');\n                    addInitialSpan.classList.add('e-control', 'e-btn', 'e-lib', 'e-outline', 'e-primary');\n                    addInitialSpan.textContent = _this.pdfViewer.localeObj.getConstant('InitialFieldDialogHeaderText');\n                    if (_this.pdfViewer.locale === 'en-US') {\n                        addInitialSpan.style.width = '130px';\n                    }\n                    else {\n                        addInitialSpan.style.width = 'auto';\n                    }\n                    addInitialSpan.style.height = '36px';\n                    addInitialSpan.addEventListener('click', _this.clickInitial.bind(_this));\n                    args.element.appendChild(addInitialSpan);\n                    args.element.addEventListener('mouseover', _this.hoverInitialBtn.bind(_this));\n                    args.element.style.width = '206px';\n                    args.element.style.display = 'flex';\n                    args.element.style.flexDirection = 'column';\n                    args.element.style.height = 'auto';\n                    args.element.style.alignItems = 'center';\n                    args.element.setAttribute('role', 'menuitem');\n                }\n            }\n        };\n        var drpDownBtn = new _syncfusion_ej2_splitbuttons__WEBPACK_IMPORTED_MODULE_2__.DropDownButton(saveOptions);\n        if (this.pdfViewer.enableRtl) {\n            drpDownBtn.enableRtl = this.pdfViewer.enableRtl;\n        }\n        drpDownBtn.appendTo(this.handWrittenSignatureItem);\n    };\n    FormDesignerToolbar.prototype.hoverInitialBtn = function (event) {\n        var eventTarget = event.target;\n        var currentFieldID = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(event.path) ? event.composedPath()[0].id : event.path[0].id;\n        if (currentFieldID !== 'sign_' + currentFieldID.split('_')[1] && currentFieldID !== 'delete_' + currentFieldID.split('_')[1]) {\n            var liElement = document.getElementById(eventTarget.id);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(liElement)) {\n                liElement = document.getElementById(eventTarget.parentElement.id);\n            }\n            if (liElement != null && (eventTarget.id !== 'sign_' + eventTarget.id.split('_')[1] || eventTarget.id !== 'sign_border_' + eventTarget.id.split('_')[2])) {\n                liElement.style.background = 'transparent';\n                liElement.style.cursor = 'default';\n            }\n            else if (liElement.parentElement != null && (eventTarget.id !== 'sign_' + eventTarget.id.split('_')[1] || eventTarget.id !== 'sign_border_' + eventTarget.id.split('_')[2])) {\n                liElement.parentElement.style.background = 'transparent';\n                liElement.parentElement.style.cursor = 'default';\n            }\n        }\n    };\n    FormDesignerToolbar.prototype.getTemplate = function (elementName, id, className) {\n        var element = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)(elementName, { id: this.pdfViewer.element.id + id });\n        if (className) {\n            element.className = className;\n        }\n        return element.outerHTML;\n    };\n    FormDesignerToolbar.prototype.onToolbarClicked = function (args) {\n        if (args && args.item) {\n            if (args.item.id.indexOf('textbox') !== -1) {\n                this.pdfViewer.formDesignerModule.setFormFieldMode('Textbox');\n            }\n            else if (args.item.id.indexOf('passwordfield') !== -1) {\n                this.pdfViewer.formDesignerModule.setFormFieldMode('Password');\n            }\n            else if (args.item.id.indexOf('checkbox') !== -1) {\n                this.pdfViewer.formDesignerModule.setFormFieldMode('CheckBox');\n            }\n            else if (args.item.id.indexOf('radiobutton') !== -1) {\n                this.pdfViewer.formDesignerModule.setFormFieldMode('RadioButton');\n            }\n            else if (args.item.id.indexOf('dropdown') !== -1) {\n                this.pdfViewer.formDesignerModule.setFormFieldMode('DropDown');\n            }\n            else if (args.item.id.indexOf('listbox') !== -1) {\n                this.pdfViewer.formDesignerModule.setFormFieldMode('ListBox');\n            }\n            else if (args.item.id.indexOf('signature') !== -1) {\n                this.pdfViewer.formDesignerModule.setFormFieldMode('SignatureField');\n            }\n            else if (args.item.id.indexOf('close') !== -1) {\n                this.pdfViewer.toolbarModule.formDesignerToolbarModule.\n                    showFormDesignerToolbar(this.pdfViewer.toolbarModule.formDesignerItem);\n            }\n            else if (args.item.id.indexOf('delete') !== -1) {\n                this.pdfViewer.formDesignerModule.deleteFormField(this.pdfViewer.selectedItems.formFields[0]);\n                this.showHideDeleteIcon(false);\n            }\n            if (this.pdfViewer.selectedItems.formFields.length > 0) {\n                this.pdfViewer.clearSelection(this.pdfViewer.selectedItems.formFields[0].pageIndex);\n            }\n        }\n    };\n    FormDesignerToolbar.prototype.clickSignature = function (args) {\n        this.pdfViewer.formDesignerModule.setFormFieldMode('SignatureField');\n    };\n    FormDesignerToolbar.prototype.clickInitial = function (args) {\n        this.pdfViewer.isInitialFieldToolbarSelection = true;\n        this.pdfViewer.formDesignerModule.setFormFieldMode('InitialField');\n        this.pdfViewer.isInitialFieldToolbarSelection = false;\n    };\n    FormDesignerToolbar.prototype.afterToolbarCreation = function () {\n        this.textboxItem = this.primaryToolbar.addClassToolbarItem('_formdesigner_textbox', 'e-pv-formdesigner-textbox', this.pdfViewer.localeObj.getConstant('Textbox'));\n        this.textboxItem.setAttribute('tabindex', '0');\n        this.textboxItem.setAttribute('data-tabindex', '0');\n        this.passwordItem = this.primaryToolbar.addClassToolbarItem('_formdesigner_passwordfield', 'e-pv-formdesigner-passwordfield', this.pdfViewer.localeObj.getConstant('Password'));\n        this.passwordItem.setAttribute('tabindex', '0');\n        this.passwordItem.setAttribute('data-tabindex', '0');\n        this.checkboxItem = this.primaryToolbar.addClassToolbarItem('_formdesigner_checkbox', 'e-pv-formdesigner-checkbox', this.pdfViewer.localeObj.getConstant('Check Box'));\n        this.checkboxItem.setAttribute('tabindex', '0');\n        this.checkboxItem.setAttribute('data-tabindex', '0');\n        this.radioButtonItem = this.primaryToolbar.addClassToolbarItem('_formdesigner_radiobutton', 'e-pv-formdesigner-radiobutton', this.pdfViewer.localeObj.getConstant('Radio Button'));\n        this.radioButtonItem.setAttribute('tabindex', '0');\n        this.radioButtonItem.setAttribute('data-tabindex', '0');\n        this.dropdownItem = this.primaryToolbar.addClassToolbarItem('_formdesigner_dropdown', 'e-pv-formdesigner-dropdown', this.pdfViewer.localeObj.getConstant('Dropdown'));\n        this.dropdownItem.setAttribute('tabindex', '0');\n        this.dropdownItem.setAttribute('data-tabindex', '0');\n        this.listboxItem = this.primaryToolbar.addClassToolbarItem('_formdesigner_listbox', 'e-pv-formdesigner-listbox', this.pdfViewer.localeObj.getConstant('List Box'));\n        this.listboxItem.setAttribute('tabindex', '0');\n        this.listboxItem.setAttribute('data-tabindex', '0');\n        //this.signatureItem = this.primaryToolbar.addClassToolbarItem('_formdesigner_signature', 'e-pv-formdesigner-signature', this.pdfViewer.localeObj.getConstant('Signature'));\n        this.deleteItem = this.primaryToolbar.addClassToolbarItem('_formdesigner_delete', 'e-pv-formdesigner-delete', this.pdfViewer.localeObj.getConstant('Delete FormField'));\n        this.closeItem = this.primaryToolbar.addClassToolbarItem('_formdesigner_close', 'e-pv-annotation-tools-close', null);\n        this.closeItem.setAttribute('tabindex', '0');\n        this.closeItem.setAttribute('data-tabindex', '0');\n        this.showHideDeleteIcon(false);\n        //this.enableTextMarkupAnnotationPropertiesTools(false);\n    };\n    FormDesignerToolbar.prototype.showHideDeleteIcon = function (isEnable) {\n        if (this.toolbar) {\n            this.toolbar.enableItems(this.deleteItem.parentElement, isEnable);\n            this.deleteItem.setAttribute('tabindex', isEnable ? '0' : '-1');\n            this.deleteItem.setAttribute('data-tabindex', isEnable ? '0' : '-1');\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    FormDesignerToolbar.prototype.applyFormDesignerToolbarSettings = function () {\n        if (this.pdfViewer.toolbarSettings.formDesignerToolbarItems) {\n            if (this.pdfViewer.toolbarSettings.formDesignerToolbarItems.indexOf('TextboxTool') !== -1) {\n                this.showTextboxTool(true);\n            }\n            else {\n                this.showTextboxTool(false);\n            }\n            if (this.pdfViewer.toolbarSettings.formDesignerToolbarItems.indexOf('PasswordTool') !== -1) {\n                this.showPasswordTool(true);\n            }\n            else {\n                this.showPasswordTool(false);\n            }\n            if (this.pdfViewer.toolbarSettings.formDesignerToolbarItems.indexOf('CheckBoxTool') !== -1) {\n                this.showCheckboxTool(true);\n            }\n            else {\n                this.showCheckboxTool(false);\n            }\n            if (this.pdfViewer.toolbarSettings.formDesignerToolbarItems.indexOf('RadioButtonTool') !== -1) {\n                this.showRadioButtonTool(true);\n            }\n            else {\n                this.showRadioButtonTool(false);\n            }\n            if (this.pdfViewer.toolbarSettings.formDesignerToolbarItems.indexOf('DropdownTool') !== -1) {\n                this.showDropdownTool(true);\n            }\n            else {\n                this.showDropdownTool(false);\n            }\n            if (this.pdfViewer.toolbarSettings.formDesignerToolbarItems.indexOf('ListboxTool') !== -1) {\n                this.showListboxTool(true);\n            }\n            else {\n                this.showListboxTool(false);\n            }\n            if (this.pdfViewer.toolbarSettings.formDesignerToolbarItems.indexOf('DrawSignatureTool') !== -1) {\n                this.showDrawSignatureTool(true);\n            }\n            else {\n                this.showDrawSignatureTool(false);\n            }\n            if (this.pdfViewer.toolbarSettings.formDesignerToolbarItems.indexOf('DeleteTool') !== -1) {\n                this.showDeleteTool(true);\n            }\n            else {\n                this.showDeleteTool(false);\n            }\n            this.showSeparator();\n        }\n    };\n    FormDesignerToolbar.prototype.showTextboxTool = function (isShow) {\n        this.isTextboxBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, 0, 0);\n    };\n    FormDesignerToolbar.prototype.showPasswordTool = function (isShow) {\n        this.isPasswordBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, 1, 1);\n    };\n    FormDesignerToolbar.prototype.showCheckboxTool = function (isShow) {\n        this.isCheckboxBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, 2, 2);\n    };\n    FormDesignerToolbar.prototype.showRadioButtonTool = function (isShow) {\n        this.isRadiobuttonBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, 3, 3);\n    };\n    FormDesignerToolbar.prototype.showDropdownTool = function (isShow) {\n        this.isDropdownBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, 4, 4);\n    };\n    FormDesignerToolbar.prototype.showListboxTool = function (isShow) {\n        this.isListboxBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, 5, 5);\n    };\n    FormDesignerToolbar.prototype.showDrawSignatureTool = function (isShow) {\n        this.isSignatureBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, 6, 6);\n    };\n    FormDesignerToolbar.prototype.showDeleteTool = function (isShow) {\n        this.isDeleteBtnVisible = isShow;\n        this.applyHideToToolbar(isShow, 8, 8);\n    };\n    FormDesignerToolbar.prototype.showSeparator = function () {\n        if (!this.isSignatureBtnVisible && !this.isDeleteBtnVisible) {\n            this.applyHideToToolbar(false, 7, 7);\n        }\n    };\n    FormDesignerToolbar.prototype.applyHideToToolbar = function (show, startIndex, endIndex) {\n        var isHide = !show;\n        for (var index = startIndex; index <= endIndex; index++) {\n            this.toolbar.hideItem(index, isHide);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    FormDesignerToolbar.prototype.destroy = function () {\n        var componentElement = [this.textboxItem, this.passwordItem, this.checkboxItem, this.radioButtonItem,\n            this.listboxItem, this.dropdownItem, this.handWrittenSignatureItem, this.deleteItem];\n        for (var i = 0; i < componentElement.length; i++) {\n            if (componentElement[parseInt(i.toString(), 10)]) {\n                this.destroyDependentComponent(componentElement[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    FormDesignerToolbar.prototype.destroyDependentComponent = function (component) {\n        if (component.ej2_instances) {\n            for (var i = component.ej2_instances.length - 1; i >= 0; i--) {\n                component.ej2_instances[parseInt(i.toString(), 10)].destroy();\n            }\n        }\n    };\n    return FormDesignerToolbar;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/toolbar/formdesigner-toolbar.js?");

/***/ })

}]);