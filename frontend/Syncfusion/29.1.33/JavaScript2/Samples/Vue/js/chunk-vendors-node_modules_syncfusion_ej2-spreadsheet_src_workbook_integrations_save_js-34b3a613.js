"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-spreadsheet_src_workbook_integrations_save_js-34b3a613"],{

/***/ "./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/integrations/save.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/integrations/save.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WorkbookSave: () => (/* binding */ WorkbookSave)\n/* harmony export */ });\n/* harmony import */ var _base_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/base/index.js\");\n/* harmony import */ var _common_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/common/index.js\");\n/* harmony import */ var _common_event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/event */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/common/event.js\");\n/* harmony import */ var _workers_save_worker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../workers/save-worker */ \"./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/workers/save-worker.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n\n\n\n\n\n/**\n * @hidden\n * The `WorkbookSave` module is used to handle the save action in Workbook library.\n */\nvar WorkbookSave = /** @class */ (function (_super) {\n    __extends(WorkbookSave, _super);\n    /**\n     * Constructor for WorkbookSave module in Workbook library.\n     *\n     * @private\n     * @param {Workbook} parent - Specifies the workbook.\n     */\n    function WorkbookSave(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.isProcessCompleted = false;\n        _this.saveJSON = {};\n        _this.isFullPost = false;\n        _this.needBlobData = false;\n        _this.customParams = null;\n        _this.pdfLayoutSettings = { fitSheetOnOnePage: false };\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * Get the module name.\n     *\n     * @returns {string} - To Get the module name.\n     * @private\n     */\n    WorkbookSave.prototype.getModuleName = function () {\n        return 'workbookSave';\n    };\n    /**\n     * To destroy the WorkbookSave module.\n     *\n     * @returns {void} - To destroy the WorkbookSave module.\n     * @hidden\n     */\n    WorkbookSave.prototype.destroy = function () {\n        this.removeEventListener();\n        this.parent = null;\n    };\n    /**\n     * @hidden\n     * @returns {void} - add Event Listener\n     */\n    WorkbookSave.prototype.addEventListener = function () {\n        this.parent.on(_common_event__WEBPACK_IMPORTED_MODULE_2__.beginSave, this.initiateSave, this);\n        this.parent.on('getStringifyObject', this.performStringifyAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void} - remove Event Listener.\n     */\n    WorkbookSave.prototype.removeEventListener = function () {\n        if (!this.parent.isDestroyed) {\n            this.parent.off(_common_event__WEBPACK_IMPORTED_MODULE_2__.beginSave, this.initiateSave);\n            this.parent.off('getStringifyObject', this.performStringifyAction);\n        }\n    };\n    /**\n     * Initiate save process.\n     *\n     * @hidden\n     * @param {Object} args - Specify the args.\n     * @returns {void} - Initiate save process.\n     */\n    WorkbookSave.prototype.initiateSave = function (args) {\n        var saveSettings = args.saveSettings;\n        this.saveSettings = {\n            saveType: saveSettings.saveType,\n            url: saveSettings.url,\n            fileName: saveSettings.fileName || 'Sample'\n            //passWord: saveSettings.passWord\n        };\n        this.isFullPost = args.isFullPost;\n        this.needBlobData = args.needBlobData;\n        if (this.needBlobData) {\n            this.isFullPost = false;\n        }\n        this.customParams = args.customParams;\n        this.pdfLayoutSettings = args.pdfLayoutSettings;\n        this.updateBasicSettings();\n        this.processSheets(saveSettings.autoDetectFormat, args.jsonConfig);\n    };\n    /**\n     * Update save JSON with basic settings.\n     *\n     * @hidden\n     * @returns {void} - Update save JSON with basic settings.\n     */\n    WorkbookSave.prototype.updateBasicSettings = function () {\n        var jsonStr = this.getStringifyObject(this.parent, ['sheets', '_isScalar', 'observers', 'closed', 'isStopped', 'hasError',\n            '__isAsync', 'beforeCellFormat', 'beforeCellRender', 'beforeDataBound', 'beforeOpen', 'beforeSave', 'beforeSelect',\n            'beforeSort', 'cellEdit', 'cellEdited', 'cellEditing', 'cellSave', 'beforeCellSave', 'contextMenuItemSelect', 'contextMenuBeforeClose',\n            'contextMenuBeforeOpen', 'created', 'dataBound', 'fileMenuItemSelect', 'fileMenuBeforeClose', 'fileMenuBeforeOpen',\n            'saveComplete', 'sortComplete', 'select', 'actionBegin', 'actionComplete', 'afterHyperlinkClick', 'afterHyperlinkCreate',\n            'beforeHyperlinkClick', 'beforeHyperlinkCreate', 'openComplete', 'openFailure', 'queryCellInfo', 'dialogBeforeOpen',\n            'dataSourceChanged', 'beforeConditionalFormat', 'beforeCellUpdate']);\n        var basicSettings = JSON.parse(jsonStr);\n        var sheetCount = this.parent.sheets.length;\n        if (sheetCount) {\n            basicSettings.sheets = [];\n        }\n        this.saveJSON = basicSettings;\n        this.saveJSON.filterCollection = [];\n    };\n    /**\n     * Process sheets properties.\n     *\n     * @param {boolean} autoDetectFormat - Auto detect the format based on the cell value.\n     * @param {SerializationOptions} jsonConfig - Specify the serialization options to exclude specific features from the JSON.\n     * @hidden\n     * @returns {void} - Process sheets properties.\n     */\n    WorkbookSave.prototype.processSheets = function (autoDetectFormat, jsonConfig) {\n        var _this = this;\n        var skipProps = ['dataSource', 'startCell', 'query', 'showFieldAsHeader', 'result'];\n        if (this.parent.isAngular) {\n            skipProps.push('template');\n        }\n        if (jsonConfig) {\n            if (jsonConfig.onlyValues) {\n                skipProps.push.apply(skipProps, ['style', 'formula', 'format', 'conditionalFormats', 'validation',\n                    'hyperlink', 'wrap', 'chart', 'image', 'notes']);\n            }\n            else {\n                var ignoreProps = {\n                    style: jsonConfig.ignoreStyle,\n                    formula: jsonConfig.ignoreFormula,\n                    format: jsonConfig.ignoreFormat,\n                    conditionalFormats: jsonConfig.ignoreConditionalFormat,\n                    validation: jsonConfig.ignoreValidation,\n                    wrap: jsonConfig.ignoreWrap,\n                    chart: jsonConfig.ignoreChart,\n                    image: jsonConfig.ignoreImage,\n                    notes: jsonConfig.ignoreNote\n                };\n                if (jsonConfig.ignoreFreezePane) {\n                    skipProps.push.apply(skipProps, ['frozenColumns', 'frozenRows']);\n                }\n                for (var prop in ignoreProps) {\n                    if (ignoreProps[prop]) {\n                        skipProps.push(prop);\n                    }\n                }\n            }\n        }\n        var isNotLoaded;\n        var isDataBinding;\n        var sheet;\n        var range;\n        for (var sheetIdx = 0, sheetCount = this.parent.sheets.length; sheetIdx < sheetCount; sheetIdx++) {\n            sheet = this.parent.sheets[sheetIdx];\n            isNotLoaded = false;\n            isDataBinding = false;\n            for (var rangeIdx = 0, rangeCount = sheet.ranges.length; rangeIdx < rangeCount; rangeIdx++) {\n                range = sheet.ranges[rangeIdx];\n                if (range.dataSource) {\n                    isDataBinding = true;\n                    if (!range.info || !range.info.loadedRange || !range.info.loadedRange.length) {\n                        isNotLoaded = true;\n                        break;\n                    }\n                }\n            }\n            if (isNotLoaded) {\n                var loadCompleteHandler = function (idx) {\n                    (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.executeTaskAsync)(_this, _this.processSheet, _this.updateSheet, [_this.getStringifyObject(_this.parent.sheets[idx], skipProps, idx, false, true), idx], null, _this.parent);\n                };\n                this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.updateSheetFromDataSource, { sheet: sheet, sheetIndex: sheetIdx, loadComplete: loadCompleteHandler.bind(this, sheetIdx),\n                    loadFromStartCell: true, autoDetectFormat: autoDetectFormat });\n            }\n            else {\n                (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.executeTaskAsync)(this, this.processSheet, this.updateSheet, [this.getStringifyObject(sheet, skipProps, sheetIdx, autoDetectFormat && isDataBinding, true), sheetIdx], null, this.parent);\n            }\n        }\n    };\n    /**\n     * Update processed sheet data.\n     *\n     * @hidden\n     * @param {Object[]} data - Specifies the data.\n     * @returns {void} - Update processed sheet data.\n     */\n    WorkbookSave.prototype.updateSheet = function (data) {\n        this.saveJSON.sheets[data[0]] = data[1];\n        this.isProcessCompleted = this.getSheetLength(this.saveJSON.sheets) === this.parent.sheets.length;\n        if (this.isProcessCompleted) {\n            this.save(this.saveSettings);\n        }\n    };\n    WorkbookSave.prototype.getSheetLength = function (sheets) {\n        var len = 0;\n        sheets.forEach(function (sheet) {\n            if (sheet) {\n                len++;\n            }\n        });\n        return len;\n    };\n    /**\n     * Save process.\n     *\n     * @hidden\n     * @param {SaveOptions} saveSettings - Specifies the save settings props.\n     * @returns {void} - Save process.\n     */\n    WorkbookSave.prototype.save = function (saveSettings) {\n        var args = { cancel: false, jsonObject: this.saveJSON };\n        this.parent.notify(_common_event__WEBPACK_IMPORTED_MODULE_2__.onSave, args);\n        if (!args.cancel) {\n            if (this.isFullPost) {\n                this.initiateFullPostSave();\n                this.saveJSON = {};\n            }\n            else {\n                (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.executeTaskAsync)(this, { 'workerTask': this.processSave }, this.updateSaveResult, [this.saveJSON, saveSettings, this.customParams, this.pdfLayoutSettings], true, this.parent);\n            }\n        }\n    };\n    /**\n     * Update final save data.\n     *\n     * @hidden\n     * @param {Object | Blob} result - specify the sve result.\n     * @returns {void} - Update final save data.\n     */\n    WorkbookSave.prototype.updateSaveResult = function (result) {\n        if (result.isFormDataError) {\n            this.processSave(this.saveJSON, this.saveSettings, this.customParams, this.pdfLayoutSettings, this.updateSaveResult);\n            return;\n        }\n        this.saveJSON = {};\n        var args = {\n            status: 'Success',\n            message: '',\n            url: this.saveSettings.url,\n            fileName: this.saveSettings.fileName,\n            saveType: this.saveSettings.saveType,\n            blobData: null\n        };\n        if (typeof (result) === 'object' && result.error) {\n            args.status = 'Failure';\n            args.message = result.error.toString();\n        }\n        else if (typeof (result) === 'object' && result.dialog) {\n            this.parent.notify(_common_event__WEBPACK_IMPORTED_MODULE_2__.saveError, { content: result.dialog });\n        }\n        else {\n            if (this.needBlobData) {\n                args.blobData = result;\n            }\n            else {\n                this.ClientFileDownload(result);\n            }\n        }\n        this.parent.trigger('saveComplete', args);\n        this.parent.notify(_common_event__WEBPACK_IMPORTED_MODULE_2__.saveCompleted, args);\n    };\n    WorkbookSave.prototype.ClientFileDownload = function (blobData) {\n        var anchor = this.parent.createElement('a', { attrs: { download: this.getFileNameWithExtension() } });\n        var url = URL.createObjectURL(blobData);\n        anchor.href = url;\n        document.body.appendChild(anchor);\n        anchor.click();\n        URL.revokeObjectURL(url);\n        document.body.removeChild(anchor);\n    };\n    WorkbookSave.prototype.initiateFullPostSave = function () {\n        var keys = Object.keys(this.saveSettings);\n        var i;\n        var formElem = this.parent.createElement('form', { attrs: { method: 'POST', action: this.saveSettings.url } });\n        var inputElem = this.parent.createElement('input', { attrs: { type: 'hidden', name: 'JSONData' } });\n        inputElem.value = JSON.stringify(this.saveJSON);\n        formElem.appendChild(inputElem);\n        for (i = 0; i < keys.length; i++) {\n            inputElem = this.parent.createElement('input', { attrs: { type: 'hidden', name: keys[i] } });\n            inputElem.value = this.saveSettings[keys[i]];\n            formElem.appendChild(inputElem);\n        }\n        keys = Object.keys(this.customParams);\n        for (i = 0; i < keys.length; i++) {\n            inputElem = this.parent.createElement('input', { attrs: { type: 'hidden', name: keys[i] } });\n            inputElem.value = this.customParams[keys[i]];\n            formElem.appendChild(inputElem);\n        }\n        inputElem = this.parent.createElement('input', { attrs: { type: 'hidden', name: 'pdfLayoutSettings' } });\n        inputElem.value = JSON.stringify(this.pdfLayoutSettings);\n        formElem.appendChild(inputElem);\n        document.body.appendChild(formElem);\n        formElem.submit();\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.detach)(formElem);\n        this.parent.notify(_common_event__WEBPACK_IMPORTED_MODULE_2__.saveCompleted, {});\n    };\n    WorkbookSave.prototype.performStringifyAction = function (args) {\n        args.model = '{\"jsonObject\":{\"Workbook\":{\"sheets\":[';\n        for (var sheetIdx = 0, sheetCount = this.parent.sheets.length - 1; sheetIdx <= sheetCount; sheetIdx++) {\n            args.model += this.getStringifyObject(this.parent.sheets[sheetIdx], args.skipProps, sheetIdx) +\n                (sheetIdx < sheetCount ? ',' : ']}}}');\n        }\n    };\n    /**\n     * Get stringified workbook object.\n     *\n     * @hidden\n     * @param {object} model - Specifies the workbook or sheet model.\n     * @param {string[]} skipProp - specifies the skipprop.\n     * @param {number} sheetIdx - Specifies the sheet index.\n     * @param {boolean} autoDetectFormat - Auto detect the format based on the cell value.\n     * @param {boolean} isSaveAction - Specifies whether the call is for sheet processing during save action.\n     * @returns {string} - Get stringified workbook object.\n     */\n    WorkbookSave.prototype.getStringifyObject = function (model, skipProp, sheetIdx, autoDetectFormat, isSaveAction) {\n        var _this = this;\n        if (skipProp === void 0) { skipProp = []; }\n        if (sheetIdx === 0) {\n            this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.removeUniquecol, { clearAll: true });\n        }\n        if (isSaveAction) {\n            this.parent.notify(_common_event__WEBPACK_IMPORTED_MODULE_2__.setFilteredCollection, { sheetIdx: sheetIdx, isSaveAction: true, saveJson: this.saveJSON });\n        }\n        var chartColl = [];\n        var chartModel;\n        var autoDetectFormatFn = autoDetectFormat && (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.getAutoDetectFormatParser)(this.parent);\n        var json = JSON.stringify(model, function (key, value) {\n            if (skipProp.indexOf(key) > -1) {\n                return undefined;\n            }\n            else if (key === 'cellStyle') {\n                return _this.parent.commonCellStyle;\n            }\n            else {\n                if (value && value.cells) {\n                    for (var i = 0, len = value.cells.length; i < len; i++) {\n                        var cell = value.cells[i];\n                        var cellIdx = [Number(key), i];\n                        if (cell) {\n                            if (cell.value) {\n                                if (autoDetectFormat && !cell.formula) {\n                                    autoDetectFormatFn(cell);\n                                }\n                            }\n                            else if (cell.formula && cell.formula.indexOf('=UNIQUE(') < 0) {\n                                if (_this.parent.calculationMode === 'Automatic') {\n                                    _this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.workbookFormulaOperation, {\n                                        action: 'refreshCalculate', value: cell.formula, rowIndex: cellIdx[0],\n                                        colIndex: i, isFormula: (0,_common_index__WEBPACK_IMPORTED_MODULE_1__.checkIsFormula)(cell.formula), sheetIndex: sheetIdx, isRefreshing: true\n                                    });\n                                }\n                                cell.value = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getCell)(cellIdx[0], i, model).value;\n                            }\n                            if (cell.chart) {\n                                chartColl.push({ index: cellIdx, chart: cell.chart });\n                                chartModel = [];\n                                for (var i_1 = 0, len_1 = cell.chart.length; i_1 < len_1; i_1++) {\n                                    var chart = Object.assign({}, cell.chart[i_1]);\n                                    delete chart.id;\n                                    chartModel.push(chart);\n                                }\n                                cell.chart = chartModel;\n                            }\n                        }\n                    }\n                }\n                if (key === 'validation' && value && typeof value.type === 'string' && value.type === 'Time') {\n                    ['value1', 'value2'].forEach(function (valKey) {\n                        var val = value[valKey] && value[valKey].toString();\n                        if (val && !(0,_common_index__WEBPACK_IMPORTED_MODULE_1__.isNumber)(Number(val))) {\n                            value[valKey] = _this.getDateAsNumber({ range: [], cell: { value: val } }, val);\n                        }\n                    });\n                }\n                if (value && value.properties && value.maxHgts) {\n                    value.properties = __assign({}, value.properties, { maxHgts: value.maxHgts });\n                }\n                // eslint-disable-next-line no-prototype-builtins\n                if (value && typeof value === 'object' && value.hasOwnProperty('properties')) {\n                    if (value.propName && value.propName.toString() === 'conditionalFormats') {\n                        var properties = value.properties;\n                        if (properties.format && properties.format.style) {\n                            var style = properties.format.style;\n                            if (style && style.backgroundColor === '#ffffff' && style.color === '#000000' &&\n                                style.fontWeight !== 'bold' && style.fontStyle !== 'italic' && style.textDecoration !== 'underline') {\n                                delete properties.format; // Remove format if it matches default cell style\n                            }\n                        }\n                    }\n                    return value.properties;\n                }\n                else if (value !== null) {\n                    return value;\n                }\n                else {\n                    return undefined;\n                }\n            }\n        });\n        var sheet = (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.getSheet)(this.parent, sheetIdx);\n        chartColl.forEach(function (obj) {\n            (0,_base_index__WEBPACK_IMPORTED_MODULE_0__.setCell)(obj.index[0], obj.index[1], sheet, { chart: obj.chart }, true);\n        });\n        return json;\n    };\n    WorkbookSave.prototype.getDateAsNumber = function (args, cellValue) {\n        var dateEventArgs = { value: cellValue, rowIndex: args.range[0], cell: args.cell,\n            colIndex: args.range[1], sheetIndex: args.sheetIdx, updatedVal: '' };\n        this.parent.notify(_common_index__WEBPACK_IMPORTED_MODULE_1__.checkDateFormat, dateEventArgs);\n        return dateEventArgs.updatedVal || cellValue;\n    };\n    WorkbookSave.prototype.getFileNameWithExtension = function (filename) {\n        if (!filename) {\n            filename = this.saveSettings.fileName;\n        }\n        var fileExt = this.getFileExtension();\n        var idx = filename.lastIndexOf('.');\n        if (idx > -1) {\n            filename = filename.substr(0, idx);\n        }\n        return (filename + fileExt);\n    };\n    WorkbookSave.prototype.getFileExtension = function () {\n        return ('.' + this.saveSettings.saveType.toLowerCase());\n    };\n    return WorkbookSave;\n}(_workers_save_worker__WEBPACK_IMPORTED_MODULE_3__.SaveWorker));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-spreadsheet/src/workbook/integrations/save.js?");

/***/ })

}]);