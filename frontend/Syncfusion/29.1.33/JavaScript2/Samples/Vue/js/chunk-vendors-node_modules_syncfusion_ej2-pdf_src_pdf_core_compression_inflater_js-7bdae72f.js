"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-pdf_src_pdf_core_compression_inflater_js-7bdae72f"],{

/***/ "./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/inflater.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/inflater.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _Inflater: () => (/* binding */ _Inflater)\n/* harmony export */ });\n/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enum */ \"./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/enum.js\");\n/* harmony import */ var _decompressed_output__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decompressed-output */ \"./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/decompressed-output.js\");\n/* harmony import */ var _in_buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./in-buffer */ \"./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/in-buffer.js\");\n/* harmony import */ var _huffman_tree__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./huffman-tree */ \"./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/huffman-tree.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../utils */ \"./node_modules/@syncfusion/ej2-pdf/src/pdf/core/utils.js\");\n\n\n\n\n\n/* eslint-disable */\nvar _Inflater = /** @class */ (function () {\n    function _Inflater() {\n        this._extraLengthBits = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\n        this._staticDistanceTreeTable = [0x00, 0x10, 0x08, 0x18, 0x04, 0x14, 0x0c, 0x1c, 0x02, 0x12, 0x0a, 0x1a, 0x06, 0x16, 0x0e, 0x1e,\n            0x01, 0x11, 0x09, 0x19, 0x05, 0x15, 0x0d, 0x1d, 0x03, 0x13, 0x0b, 0x1b, 0x07, 0x17, 0x0f, 0x1f];\n        this._lengthBase = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115,\n            131, 163, 195, 227, 258];\n        this._distanceBasePosition = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049,\n            3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0];\n        this._codeOrder = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n        this._bfinal = 0;\n        this._bLength = 0;\n        this._blBuffer = [0, 0, 0, 0];\n        this._blockType = _enum__WEBPACK_IMPORTED_MODULE_0__._BlockType.unCompressedType;\n        this._caSize = 0;\n        this._clCodeCount = 0;\n        this._extraBits = 0;\n        this._lengthCode = 0;\n        this._length = 0;\n        this._llCodeCount = 0;\n        this._output = new _decompressed_output__WEBPACK_IMPORTED_MODULE_1__._DecompressedOutput();\n        this._input = new _in_buffer__WEBPACK_IMPORTED_MODULE_2__._InBuffer();\n        this._loopCounter = 0;\n        this._codeList = Array(_huffman_tree__WEBPACK_IMPORTED_MODULE_3__._HuffmanTree._maxLengthTree + _huffman_tree__WEBPACK_IMPORTED_MODULE_3__._HuffmanTree._maxDepthTree).fill(0);\n        this._cltcl = Array(_huffman_tree__WEBPACK_IMPORTED_MODULE_3__._HuffmanTree._nCLength).fill(0);\n        this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingBFinal;\n    }\n    Object.defineProperty(_Inflater.prototype, \"_finished\", {\n        get: function () {\n            return this._inflaterState === _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.done || this._inflaterState === _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.vFooter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Inflater.prototype._setInput = function (inputBytes, offset, length) {\n        this._input._setInput(inputBytes, offset, length);\n    };\n    _Inflater.prototype._inflate = function (bytes, offset, length) {\n        var i = 0;\n        do {\n            var result = this._output._copyTo(bytes, offset, length);\n            var copied = result.count;\n            bytes = result.data;\n            if (copied > 0) {\n                offset += copied;\n                i += copied;\n                length -= copied;\n            }\n            if (length === 0) {\n                break;\n            }\n        } while (!this._finished && this._decode());\n        return { 'count': i, 'data': bytes };\n    };\n    _Inflater.prototype._decode = function () {\n        var eob = false;\n        var result = false;\n        if (this._finished) {\n            return true;\n        }\n        if (this._inflaterState === _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingBFinal) {\n            if (!this._input._availableBits(1)) {\n                return false;\n            }\n            this._bfinal = this._input._getBits(1);\n            this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingBType;\n        }\n        if (this._inflaterState === _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingBType) {\n            if (!this._input._availableBits(2)) {\n                this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingBType;\n                return false;\n            }\n            this._blockType = this._getBlockType(this._input._getBits(2));\n            if (this._blockType === _enum__WEBPACK_IMPORTED_MODULE_0__._BlockType.dynamicType) {\n                this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingNlCodes;\n            }\n            else if (this._blockType === _enum__WEBPACK_IMPORTED_MODULE_0__._BlockType.staticType) {\n                this._llTree = new _huffman_tree__WEBPACK_IMPORTED_MODULE_3__._HuffmanTree();\n                this._llTree._loadTree(true);\n                this._distanceTree = new _huffman_tree__WEBPACK_IMPORTED_MODULE_3__._HuffmanTree();\n                this._distanceTree._loadTree(false);\n                this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.decodeTop;\n            }\n            else if (this._blockType === _enum__WEBPACK_IMPORTED_MODULE_0__._BlockType.unCompressedType) {\n                this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedAligning;\n            }\n        }\n        if (this._blockType === _enum__WEBPACK_IMPORTED_MODULE_0__._BlockType.dynamicType) {\n            if (this._getInflaterStateValue(this._inflaterState) < this._getInflaterStateValue(_enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.decodeTop)) {\n                result = this._decodeDynamicBlockHeader();\n            }\n            else {\n                var returnedValue = this._decodeBlock(eob);\n                result = returnedValue.result;\n                eob = returnedValue.eob;\n                this._output = returnedValue.output;\n            }\n        }\n        else if (this._blockType === _enum__WEBPACK_IMPORTED_MODULE_0__._BlockType.staticType) {\n            var returnedValue = this._decodeBlock(eob);\n            result = returnedValue.result;\n            eob = returnedValue.eob;\n            this._output = returnedValue.output;\n        }\n        else if (this._blockType === _enum__WEBPACK_IMPORTED_MODULE_0__._BlockType.unCompressedType) {\n            var returnedValue = this._decodeUncompressedBlock(eob);\n            result = returnedValue.result;\n            eob = returnedValue.eob;\n            this._output = returnedValue.output;\n        }\n        if (eob && (this._bfinal !== 0)) {\n            this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.done;\n        }\n        return result;\n    };\n    _Inflater.prototype._decodeUncompressedBlock = function (endBlock) {\n        endBlock = false;\n        while (true) {\n            switch (this._inflaterState) {\n                case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedAligning:\n                    this._input._skipByteBoundary();\n                    this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte1;\n                    if (!this._unCompressedByte()) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte1:\n                case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte2:\n                case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte3:\n                case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte4:\n                    if (!this._unCompressedByte()) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.decodeUnCompressedBytes:\n                    this._bLength -= this._output._copyFrom(this._input, this._bLength);\n                    if (this._bLength === 0) {\n                        this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingBFinal;\n                        endBlock = true;\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    if (this._output._unusedBytes === 0) {\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    return { 'result': false, 'eob': endBlock, 'output': this._output };\n                default:\n                    break;\n            }\n        }\n    };\n    _Inflater.prototype._unCompressedByte = function () {\n        var bits = this._input._getBits(8);\n        if (bits < 0) {\n            return false;\n        }\n        var inflaterstate = this._getInflaterStateValue(this._inflaterState);\n        var unCompressedByte = this._getInflaterStateValue(_enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte1);\n        this._blBuffer[inflaterstate - unCompressedByte] = (0,_utils__WEBPACK_IMPORTED_MODULE_4__._toUnsigned)(bits, 8);\n        if (this._inflaterState === _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte4) {\n            this._bLength = this._blBuffer[0] + (this._blBuffer[1]) * 256;\n            if ((0,_utils__WEBPACK_IMPORTED_MODULE_4__._toUnsigned)(this._bLength, 16) !== (0,_utils__WEBPACK_IMPORTED_MODULE_4__._toUnsigned)((~(this._blBuffer[2] + (this._blBuffer[3]) * 256)), 16)) {\n                throw new Error('Ivalid block length.');\n            }\n        }\n        this._inflaterState = this._getInflaterState(this._getInflaterStateValue(this._inflaterState) + 1);\n        return true;\n    };\n    _Inflater.prototype._decodeBlock = function (endBlock) {\n        endBlock = false;\n        var fb = this._output._unusedBytes;\n        while (fb > 258) {\n            var symbol = void 0;\n            var dCodeResult = void 0;\n            var fLengthResult = void 0;\n            var inLengthResult = void 0;\n            switch (this._inflaterState) {\n                case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.decodeTop:\n                    symbol = this._llTree._getNextSymbol(this._input);\n                    if (symbol < 0) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    if (symbol < 256) {\n                        this._output._write((0,_utils__WEBPACK_IMPORTED_MODULE_4__._toUnsigned)(symbol, 8));\n                        --fb;\n                    }\n                    else if (symbol === 256) {\n                        endBlock = true;\n                        this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingBFinal;\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    else {\n                        symbol -= 257;\n                        if (symbol < 8) {\n                            symbol += 3;\n                            this._extraBits = 0;\n                        }\n                        else if (symbol === 28) {\n                            symbol = 258;\n                            this._extraBits = 0;\n                        }\n                        else {\n                            if (symbol < 0 || symbol >= this._extraLengthBits.length) {\n                                throw new Error('Invalid data.');\n                            }\n                            this._extraBits = this._extraLengthBits[Number.parseInt(symbol.toString(), 10)];\n                        }\n                        this._length = symbol;\n                        inLengthResult = this._inLength(fb);\n                        fb = inLengthResult.fb;\n                        if (!inLengthResult.value) {\n                            return { 'result': false, 'eob': endBlock, 'output': this._output };\n                        }\n                    }\n                    break;\n                case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.iLength:\n                    inLengthResult = this._inLength(fb);\n                    fb = inLengthResult.fb;\n                    if (!inLengthResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.fLength:\n                    fLengthResult = this._fLength(fb);\n                    fb = fLengthResult.fb;\n                    if (!fLengthResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.dCode:\n                    dCodeResult = this._dcode(fb);\n                    fb = dCodeResult.fb;\n                    if (!dCodeResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        return { 'result': true, 'eob': endBlock, 'output': this._output };\n    };\n    _Inflater.prototype._inLength = function (fb) {\n        if (this._extraBits > 0) {\n            this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.iLength;\n            var bits = this._input._getBits(this._extraBits);\n            if (bits < 0) {\n                return { 'value': false, 'fb': fb };\n            }\n            if (this._length < 0 || this._length >= this._lengthBase.length) {\n                throw new Error('Invalid data.');\n            }\n            this._length = this._lengthBase[this._length] + bits;\n        }\n        this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.fLength;\n        var fLengthResult = this._fLength(fb);\n        fb = fLengthResult.fb;\n        if (!fLengthResult.value) {\n            return { 'value': false, 'fb': fb };\n        }\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._fLength = function (fb) {\n        if (this._blockType === _enum__WEBPACK_IMPORTED_MODULE_0__._BlockType.dynamicType) {\n            this._distanceCode = this._distanceTree._getNextSymbol(this._input);\n        }\n        else {\n            this._distanceCode = this._input._getBits(5);\n            if (this._distanceCode >= 0) {\n                this._distanceCode = this._staticDistanceTreeTable[this._distanceCode];\n            }\n        }\n        if (this._distanceCode < 0) {\n            return { 'value': false, 'fb': fb };\n        }\n        this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.dCode;\n        var dCodeResult = this._dcode(fb);\n        fb = dCodeResult.fb;\n        if (!dCodeResult.value) {\n            return { 'value': false, 'fb': fb };\n        }\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._dcode = function (fb) {\n        var offset;\n        if (this._distanceCode > 3) {\n            this._extraBits = (this._distanceCode - 2) >> 1;\n            var bits = this._input._getBits(this._extraBits);\n            if (bits < 0) {\n                return { 'value': false, 'fb': fb };\n            }\n            offset = this._distanceBasePosition[this._distanceCode] + bits;\n        }\n        else {\n            offset = this._distanceCode + 1;\n        }\n        this._output._writeLD(this._length, offset);\n        fb -= this._length;\n        this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.decodeTop;\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._decodeDynamicBlockHeader = function () {\n        switch (this._inflaterState) {\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingNlCodes:\n                this._llCodeCount = this._input._getBits(5);\n                if (this._llCodeCount < 0) {\n                    return false;\n                }\n                this._llCodeCount += 257;\n                this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingNdCodes;\n                if (!this._readingNDCodes()) {\n                    return false;\n                }\n                break;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingNdCodes:\n                if (!this._readingNDCodes()) {\n                    return false;\n                }\n                break;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingCodes:\n                if (!this._readingCodes()) {\n                    return false;\n                }\n                break;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingClCodes:\n                if (!this._readingCLCodes()) {\n                    return false;\n                }\n                break;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingTcBefore:\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingTcAfter:\n                if (!this._readingTCBefore()) {\n                    return false;\n                }\n                break;\n            default:\n                break;\n        }\n        var literalTreeCodeLength = Array(_huffman_tree__WEBPACK_IMPORTED_MODULE_3__._HuffmanTree._maxLengthTree).fill(0);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_4__._copyRange)(literalTreeCodeLength, 0, this._codeList, 0, this._llCodeCount);\n        var distanceTreeCodeLength = Array(_huffman_tree__WEBPACK_IMPORTED_MODULE_3__._HuffmanTree._maxDepthTree).fill(0);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_4__._copyRange)(distanceTreeCodeLength, 0, this._codeList, this._llCodeCount, this._llCodeCount + this._dCodeCount);\n        this._llTree = new _huffman_tree__WEBPACK_IMPORTED_MODULE_3__._HuffmanTree();\n        this._llTree._load(literalTreeCodeLength);\n        this._distanceTree = new _huffman_tree__WEBPACK_IMPORTED_MODULE_3__._HuffmanTree();\n        this._distanceTree._load(distanceTreeCodeLength);\n        this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.decodeTop;\n        return true;\n    };\n    _Inflater.prototype._readingNDCodes = function () {\n        this._dCodeCount = this._input._getBits(5);\n        if (this._dCodeCount < 0) {\n            return false;\n        }\n        this._dCodeCount += 1;\n        this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingCodes;\n        if (!this._readingCodes()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingCodes = function () {\n        this._clCodeCount = this._input._getBits(4);\n        if (this._clCodeCount < 0) {\n            return false;\n        }\n        this._clCodeCount += 4;\n        this._loopCounter = 0;\n        this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingClCodes;\n        if (!this._readingCLCodes()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingCLCodes = function () {\n        while (this._loopCounter < this._clCodeCount) {\n            var bits = this._input._getBits(3);\n            if (bits < 0) {\n                return false;\n            }\n            this._cltcl[this._codeOrder[this._loopCounter]] = (0,_utils__WEBPACK_IMPORTED_MODULE_4__._toUnsigned)(bits, 8);\n            ++this._loopCounter;\n        }\n        for (var i = this._clCodeCount; i < this._codeOrder.length; i++) {\n            this._cltcl[this._codeOrder[Number.parseInt(i.toString(), 10)]] = 0;\n        }\n        this._clTree = new _huffman_tree__WEBPACK_IMPORTED_MODULE_3__._HuffmanTree();\n        this._clTree._load(this._cltcl);\n        this._caSize = this._llCodeCount + this._dCodeCount;\n        this._loopCounter = 0;\n        this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingTcBefore;\n        if (!this._readingTCBefore()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingTCBefore = function () {\n        while (this._loopCounter < this._caSize) {\n            if (this._inflaterState === _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingTcBefore) {\n                this._lengthCode = this._clTree._getNextSymbol(this._input);\n                if (this._lengthCode < 0) {\n                    return false;\n                }\n            }\n            if (this._lengthCode <= 15) {\n                this._codeList[this._loopCounter++] = (0,_utils__WEBPACK_IMPORTED_MODULE_4__._toUnsigned)(this._lengthCode, 8);\n            }\n            else {\n                if (!this._input._availableBits(7)) {\n                    this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingTcAfter;\n                    return false;\n                }\n                var repeatCount = void 0;\n                if (this._lengthCode === 16) {\n                    if (this._loopCounter === 0) {\n                        throw new Error('Invalid data.');\n                    }\n                    var previousCode = (0,_utils__WEBPACK_IMPORTED_MODULE_4__._toUnsigned)(this._codeList[this._loopCounter - 1], 8);\n                    repeatCount = this._input._getBits(2) + 3;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = previousCode;\n                    }\n                }\n                else if (this._lengthCode === 17) {\n                    repeatCount = this._input._getBits(3) + 3;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = 0;\n                    }\n                }\n                else {\n                    repeatCount = this._input._getBits(7) + 11;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = 0;\n                    }\n                }\n            }\n            this._inflaterState = _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingTcBefore;\n        }\n        return true;\n    };\n    _Inflater.prototype._getBlockType = function (type) {\n        if (type === _enum__WEBPACK_IMPORTED_MODULE_0__._BlockType.unCompressedType) {\n            return _enum__WEBPACK_IMPORTED_MODULE_0__._BlockType.unCompressedType;\n        }\n        else if (type === _enum__WEBPACK_IMPORTED_MODULE_0__._BlockType.staticType) {\n            return _enum__WEBPACK_IMPORTED_MODULE_0__._BlockType.staticType;\n        }\n        else {\n            return _enum__WEBPACK_IMPORTED_MODULE_0__._BlockType.dynamicType;\n        }\n    };\n    _Inflater.prototype._getInflaterState = function (value) {\n        switch (value) {\n            case 0:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingHeader;\n            case 2:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingBFinal;\n            case 3:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingBType;\n            case 4:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingNlCodes;\n            case 5:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingNdCodes;\n            case 6:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingCodes;\n            case 7:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingClCodes;\n            case 8:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingTcBefore;\n            case 9:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingTcAfter;\n            case 10:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.decodeTop;\n            case 11:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.iLength;\n            case 12:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.fLength;\n            case 13:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.dCode;\n            case 15:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedAligning;\n            case 16:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte1;\n            case 17:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte2;\n            case 18:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte3;\n            case 19:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte4;\n            case 20:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.decodeUnCompressedBytes;\n            case 21:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.srFooter;\n            case 22:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.rFooter;\n            case 23:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.vFooter;\n            case 24:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.done;\n            default:\n                return _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingHeader;\n        }\n    };\n    _Inflater.prototype._getInflaterStateValue = function (state) {\n        switch (state) {\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingHeader:\n                return 0;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingBFinal:\n                return 2;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingBType:\n                return 3;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingNlCodes:\n                return 4;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingNdCodes:\n                return 5;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingCodes:\n                return 6;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingClCodes:\n                return 7;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingTcBefore:\n                return 8;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.readingTcAfter:\n                return 9;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.decodeTop:\n                return 10;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.iLength:\n                return 11;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.fLength:\n                return 12;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.dCode:\n                return 13;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedAligning:\n                return 15;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte1:\n                return 16;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte2:\n                return 17;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte3:\n                return 18;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.unCompressedByte4:\n                return 19;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.decodeUnCompressedBytes:\n                return 20;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.srFooter:\n                return 21;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.rFooter:\n                return 22;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.vFooter:\n                return 23;\n            case _enum__WEBPACK_IMPORTED_MODULE_0__._InflaterState.done:\n                return 24;\n            default:\n                return 0;\n        }\n    };\n    return _Inflater;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdf/src/pdf/core/compression/inflater.js?");

/***/ })

}]);