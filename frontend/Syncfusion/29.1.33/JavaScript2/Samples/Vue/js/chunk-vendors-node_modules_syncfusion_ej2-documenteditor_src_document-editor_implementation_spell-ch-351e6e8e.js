"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_spell-ch-351e6e8e"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/spell-check/spell-checker.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/spell-check/spell-checker.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpellChecker: () => (/* binding */ SpellChecker)\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../index */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/index.js\");\n/* harmony import */ var _base_dictionary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../base/dictionary */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/dictionary.js\");\n/* harmony import */ var _viewer_page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../viewer/page */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/viewer/page.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* eslint-disable */\n\n\n\n\n\n/**\n * The spell checker module\n */\nvar SpellChecker = /** @class */ (function () {\n    function SpellChecker(documentHelper) {\n        this.langIDInternal = 0;\n        /**\n         * Specifies whether spell check has to be performed or not.\n         */\n        this.enableSpellCheckInternal = true;\n        /**\n         * @private\n         */\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        this.uniqueSpelledWords = {};\n        this.spellSuggestionInternal = true;\n        /**\n         * @private\n         */\n        this.uniqueKey = '';\n        this.removeUnderlineInternal = false;\n        /**\n         * @default 1000\n         */\n        this.uniqueWordsCountInternal = 15000;\n        this.performOptimizedCheck = true;\n        /**\n         * @private\n         */\n        this.isChangeAll = false;\n        this.documentHelper = documentHelper;\n        this.errorWordCollection = new _base_dictionary__WEBPACK_IMPORTED_MODULE_2__.Dictionary();\n        this.uniqueWordsCollection = new _base_dictionary__WEBPACK_IMPORTED_MODULE_2__.Dictionary();\n        this.errorSuggestions = new _base_dictionary__WEBPACK_IMPORTED_MODULE_2__.Dictionary();\n        this.ignoreAllItems = [];\n        this.uniqueSpelledWords = {};\n        this.textSearchResults = new _index__WEBPACK_IMPORTED_MODULE_0__.TextSearchResults(this.documentHelper.owner);\n        this.uniqueKey = this.documentHelper.owner.element.id + '_' + this.createGuid();\n    }\n    /**\n     * Gets module name.\n     */\n    SpellChecker.prototype.getModuleName = function () {\n        return 'SpellChecker';\n    };\n    Object.defineProperty(SpellChecker.prototype, \"enableOptimizedSpellCheck\", {\n        /**\n         * Gets the boolean indicating whether optimized spell check to be performed.\n         *\n         * @aspType bool\n         * @returns {boolean} Returns enableOptimizedSpellCheck\n         */\n        get: function () {\n            return this.performOptimizedCheck;\n        },\n        /**\n         * Sets the boolean indicating whether optimized spell check to be performed.\n         *\n         * @aspType bool\n         */\n        set: function (value) {\n            this.performOptimizedCheck = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpellChecker.prototype, \"uniqueWordsCount\", {\n        /**\n         * Gets the spell checked Unique words.\n         *\n         * @aspType int\n         */\n        get: function () {\n            return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.uniqueWordsCountInternal) ? 0 : this.uniqueWordsCountInternal;\n        },\n        /**\n         * Sets the spell checked Unique words.\n         *\n         * @aspType int\n         */\n        set: function (value) {\n            this.uniqueWordsCountInternal = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpellChecker.prototype, \"languageID\", {\n        /**\n         * Gets the languageID.\n         *\n         * @aspType int\n         */\n        get: function () {\n            return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.langIDInternal) ? 0 : this.langIDInternal;\n        },\n        /**\n         * Sets the languageID.\n         *\n         * @aspType int\n         */\n        set: function (value) {\n            this.langIDInternal = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpellChecker.prototype, \"allowSpellCheckAndSuggestion\", {\n        /**\n         * Getter indicates whether suggestion enabled.\n         *\n         * @aspType bool\n         */\n        get: function () {\n            return this.spellSuggestionInternal;\n        },\n        /**\n         * Setter to enable or disable suggestion\n         *\n         * @aspType bool\n         */\n        set: function (value) {\n            this.spellSuggestionInternal = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpellChecker.prototype, \"removeUnderline\", {\n        /**\n         * Getter indicates whether underline removed for mis-spelled word.\n         *\n         * @aspType bool\n         */\n        get: function () {\n            return this.removeUnderlineInternal;\n        },\n        /**\n         * Setter to enable or disable underline for mis-spelled word\n         *\n         * @aspType bool\n         */\n        set: function (value) {\n            this.removeUnderlineInternal = value;\n            this.documentHelper.owner.editorModule.reLayout(this.documentHelper.selection);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpellChecker.prototype, \"enableSpellCheck\", {\n        /**\n         * Getter indicates whether spell check has to be performed or not.\n         *\n         * @aspType bool\n         */\n        get: function () {\n            return this.enableSpellCheckInternal;\n        },\n        /**\n         * Setter to enable or disable spell check has to be performed or not\n         *\n         * @aspType bool\n         */\n        set: function (value) {\n            this.enableSpellCheckInternal = value;\n            this.documentHelper.owner.editorModule.reLayout(this.documentHelper.selection);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpellChecker.prototype, \"viewer\", {\n        get: function () {\n            return this.documentHelper.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Method to manage replace logic\n     *\n     * @private\n     */\n    SpellChecker.prototype.manageReplace = function (content, dialogElement) {\n        this.documentHelper.triggerSpellCheck = true;\n        var exactText = '';\n        var elementInfo;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(dialogElement) && dialogElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.ErrorTextElementBox) {\n            var exactText_1 = dialogElement.text;\n            this.documentHelper.selection.start = dialogElement.start.clone();\n            this.documentHelper.selection.end = dialogElement.end.clone();\n            if (content !== 'Ignore Once') {\n                content = this.manageSpecialCharacters(exactText_1, content);\n                this.documentHelper.owner.editorModule.insertTextInternal(content, true);\n                this.documentHelper.selection.start.setPositionInternal(this.documentHelper.selection.end);\n                this.documentHelper.clearSelectionHighlight();\n                return;\n            }\n            else {\n                this.currentContextInfo = { 'text': exactText_1, 'element': dialogElement };\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.currentContextInfo) && this.currentContextInfo.element && content !== 'Ignore Once') {\n            var elementBox = this.currentContextInfo.element;\n            exactText = this.currentContextInfo.element.text;\n            this.documentHelper.selection.start = elementBox.start.clone();\n            this.documentHelper.selection.end = elementBox.end.clone();\n        }\n        else {\n            this.handleReplace(content);\n        }\n        if (content !== 'Ignore Once') {\n            this.documentHelper.owner.editorModule.insertTextInternal(content, true);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.currentContextInfo)) {\n                this.removeErrorsFromCollection(this.currentContextInfo);\n            }\n            this.documentHelper.selection.start.setPositionInternal(this.documentHelper.selection.end);\n            this.documentHelper.clearSelectionHighlight();\n        }\n        //this.documentHelper.owner.errorWordCollection.remove(content);\n        this.documentHelper.triggerSpellCheck = false;\n    };\n    /**\n     * Method to handle replace logic\n     *\n     * @private\n     */\n    SpellChecker.prototype.handleReplace = function (content) {\n        var startPosition = this.documentHelper.selection.start;\n        var offset = startPosition.offset;\n        var startIndex = 0;\n        var startInlineObj = startPosition.currentWidget.getInline(offset, startIndex, false, true);\n        var startOffset = startInlineObj.element.line.getOffset(startInlineObj.element, 0) + startInlineObj.element.length;\n        if (startOffset === offset) {\n            this.retrieveExactElementInfo(startInlineObj);\n        }\n        var exactText = startInlineObj.element.text;\n        var startPattern = new RegExp('^[#\\\\@\\\\!\\\\~\\\\$\\\\%\\\\^\\\\&\\\\*\\\\(\\\\)\\\\-\\\\_\\\\+\\\\=\\\\{\\\\}\\\\[\\\\]\\\\:\\\\;\\\\\"\\'\\\\,\\\\<\\\\.\\\\>\\\\/\\\\?\\\\`\\\\s]+', 'g');\n        var matches = [];\n        var matchInfo;\n        // eslint-disable  no-cond-assign\n        while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(matchInfo = startPattern.exec(exactText))) {\n            matches.push(matchInfo);\n        }\n        if (content === 'Ignore Once') {\n            this.handleIgnoreOnce(startInlineObj);\n            return;\n        }\n        startPosition.offset = offset - startInlineObj.index;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(matches) && matches.length > 0) {\n            startPosition.offset += matches[0].toString().length;\n        }\n        startPosition.location = this.documentHelper.owner.selectionModule.getPhysicalPositionInternal(startPosition.currentWidget, startPosition.offset, true);\n        startPosition = this.documentHelper.owner.searchModule.textSearch.getTextPosition(startPosition.currentWidget, startPosition.offset.toString());\n        //startPosition.location = this.owner.selection.getPhysicalPositionInternal(span.line, offset, true);\n        startPosition.setPositionParagraph(startPosition.currentWidget, startPosition.offset);\n        var index = (startPosition.offset + startInlineObj.element.length) - startPosition.offset;\n        var endOffset = startPosition.currentWidget.getOffset(startInlineObj.element, index);\n        var lineWidget = startPosition.currentWidget;\n        var endPattern = new RegExp('[#\\\\@\\\\!\\\\~\\\\$\\\\%\\\\^\\\\&\\\\*\\\\(\\\\)\\\\-\\\\_\\\\+\\\\=\\\\{\\\\}\\\\[\\\\]\\\\:\\\\;\\\\\"\\'\\\\,\\\\<\\\\.\\\\>\\\\/\\\\?\\\\s\\\\`]+$', 'g');\n        matches = [];\n        // eslint-disable  no-cond-assign\n        while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(matchInfo = endPattern.exec(exactText))) {\n            matches.push(matchInfo);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(matches) && matches.length > 0) {\n            endOffset -= matches[0].toString().length;\n        }\n        this.documentHelper.selection.end = this.documentHelper.owner.searchModule.textSearch.getTextPosition(lineWidget, endOffset.toString());\n        this.documentHelper.selection.end.location = this.documentHelper.owner.selectionModule.getPhysicalPositionInternal(startPosition.currentWidget, endOffset, true);\n        this.documentHelper.selection.end.setPositionParagraph(lineWidget, endOffset);\n        this.currentContextInfo = { 'element': startInlineObj.element, 'text': startInlineObj.element.text };\n    };\n    /**\n     * Method to retrieve exact element info\n     *\n     * @private\n     */\n    SpellChecker.prototype.retrieveExactElementInfo = function (startInlineObj) {\n        var nextElement = startInlineObj.element.nextElement;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextElement) && nextElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n            var nextTextElBox = nextElement;\n            if (nextTextElBox.text.trim() != \"\") {\n                startInlineObj.element = nextElement;\n            }\n        }\n    };\n    /**\n     * Method to handle to ignore error Once\n     *\n     * @private\n     */\n    SpellChecker.prototype.handleIgnoreOnce = function (startInlineObj) {\n        var textElement = startInlineObj.element;\n        var exactText = '';\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.currentContextInfo) && this.currentContextInfo.element) {\n            exactText = this.currentContextInfo.element.text;\n        }\n        else {\n            exactText = textElement.text;\n        }\n        exactText = this.manageSpecialCharacters(exactText, undefined, true);\n        if (textElement.ignoreOnceItems.indexOf(exactText) === -1) {\n            textElement.ignoreOnceItems.push(exactText);\n        }\n        this.documentHelper.owner.editorModule.reLayout(this.documentHelper.selection);\n    };\n    /**\n     * Method to handle ignore all items\n     *\n     * @private\n     */\n    SpellChecker.prototype.handleIgnoreAllItems = function (contextElement) {\n        var contextItem = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(contextElement)) ? contextElement : this.retriveText();\n        var retrievedText = this.manageSpecialCharacters(contextItem.text, undefined, true);\n        if (this.ignoreAllItems.indexOf(retrievedText) === -1) {\n            this.ignoreAllItems.push(retrievedText);\n            this.removeErrorsFromCollection(contextItem);\n            this.documentHelper.triggerSpellCheck = true;\n            this.documentHelper.owner.editorModule.reLayout(this.documentHelper.selection);\n            this.documentHelper.triggerSpellCheck = false;\n            this.documentHelper.clearSelectionHighlight();\n        }\n    };\n    /**\n     * Method to handle dictionary\n     *\n     * @private\n     */\n    SpellChecker.prototype.handleAddToDictionary = function (contextElement) {\n        var _this = this;\n        var contextItem = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(contextElement)) ? contextElement : this.retriveText();\n        var retrievedText = this.manageSpecialCharacters(contextItem.text, undefined, true);\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        this.callSpellChecker(this.languageID, retrievedText, false, false, true).then(function (data) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(_this.documentHelper)) {\n                _this.documentHelper.triggerSpellCheck = true;\n                _this.removeErrorsFromCollection(contextItem);\n                _this.ignoreAllItems.push(retrievedText);\n                _this.documentHelper.owner.editorModule.reLayout(_this.documentHelper.selection, true);\n                _this.documentHelper.triggerSpellCheck = false;\n            }\n        });\n    };\n    /**\n     * Method to append/remove special characters\n     *\n     * @private\n     */\n    SpellChecker.prototype.manageSpecialCharacters = function (exactText, replaceText, isRemove) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(exactText)) {\n            var isRemoveSpecChar = false;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(replaceText)) {\n                isRemoveSpecChar = true;\n                replaceText = exactText;\n            }\n            var pattern = new RegExp('^[#\\\\@\\\\!\\\\$\\\\%\\\\^\\\\&\\\\*\\\\(\\\\)\\\\-\\\\_\\\\+\\\\=\\\\{\\\\}\\\\[\\\\]\\\\:\\\\;\\\\\"\\\\”\\'\\\\,\\\\<\\\\.\\\\>\\\\/\\\\?\\\\`\\\\s\\\\’]+', 'g');\n            var matches = [];\n            var matchInfo = void 0;\n            // eslint-disable  no-cond-assign\n            while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(matchInfo = pattern.exec(exactText))) {\n                matches.push(matchInfo);\n            }\n            if (matches.length > 0) {\n                for (var i = 0; i < matches.length; i++) {\n                    /* eslint-disable @typescript-eslint/no-explicit-any */\n                    var match = matches[i];\n                    replaceText = (!isRemove) ? match[0] + replaceText : replaceText.replace(match[0], '');\n                }\n            }\n            var endPattern = new RegExp('[#\\\\@\\\\!\\\\$\\\\%\\\\^\\\\&\\\\*\\\\(\\\\)\\\\-\\\\_\\\\+\\\\=\\\\{\\\\}\\\\[\\\\]\\\\:\\\\;\\\\\"\\\\”\\'\\\\,\\\\<\\\\.\\\\>\\\\/\\\\?\\\\s\\\\`\\\\’]+$', 'g');\n            matches = [];\n            var originalText = replaceText;\n            if (!isRemove) {\n                originalText = exactText;\n            }\n            // eslint-disable  no-cond-assign\n            while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(matchInfo = endPattern.exec(originalText))) {\n                matches.push(matchInfo);\n            }\n            if (matches.length > 0) {\n                for (var i = 0; i < matches.length; i++) {\n                    /* eslint-disable @typescript-eslint/no-explicit-any */\n                    var match = matches[i];\n                    replaceText = (!isRemove) ? replaceText + match[0] : replaceText.slice(0, match.index);\n                }\n            }\n        }\n        return replaceText;\n    };\n    /**\n     * Method to remove errors\n     *\n     * @private\n     */\n    SpellChecker.prototype.removeErrorsFromCollection = function (contextItem) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(contextItem.text) && this.errorWordCollection.containsKey(contextItem.text)) {\n            var textElement = this.errorWordCollection.get(contextItem.text);\n            if (textElement.indexOf(contextItem.element) >= 0) {\n                textElement.splice(0, 1);\n            }\n            if (textElement.length === 0) {\n                this.errorWordCollection.remove(contextItem.text);\n            }\n        }\n    };\n    /**\n     * Method to retrieve exact text\n     *\n     * @private\n     */\n    SpellChecker.prototype.retriveText = function () {\n        var exactText;\n        var currentElement;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.currentContextInfo) && this.currentContextInfo.element) {\n            currentElement = this.currentContextInfo.element;\n            exactText = this.currentContextInfo.element.text;\n            this.documentHelper.selection.start = currentElement.start.clone();\n            this.documentHelper.selection.end = currentElement.end.clone();\n        }\n        else {\n            var startPosition = this.documentHelper.selection.start;\n            var offset = startPosition.offset;\n            var startIndex = 0;\n            var startInlineObj = startPosition.currentWidget.getInline(offset, startIndex);\n            currentElement = startInlineObj.element;\n            exactText = startInlineObj.element.text;\n        }\n        return { 'text': exactText, 'element': currentElement };\n    };\n    /**\n     * Method to handle suggestions\n     *\n     * @private\n     */\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    SpellChecker.prototype.handleSuggestions = function (allsuggestions) {\n        this.spellCheckSuggestion = [];\n        if (allsuggestions.length === 0) {\n            this.spellCheckSuggestion.push(this.documentHelper.owner.contextMenuModule.locale.getConstant('Add to Dictionary'));\n        }\n        else {\n            allsuggestions = (allsuggestions.length > 3) ? this.constructInlineMenu(allsuggestions) : allsuggestions;\n            this.spellCheckSuggestion.push(this.documentHelper.owner.contextMenuModule.locale.getConstant('Add to Dictionary'));\n        }\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        var spellSuggestion = [];\n        if (this.spellCheckSuggestion.length > 0) {\n            for (var _i = 0, _a = this.spellCheckSuggestion; _i < _a.length; _i++) {\n                var str = _a[_i];\n                spellSuggestion.push({\n                    text: str,\n                    id: this.documentHelper.owner.element.id + '_contextmenu_otherSuggestions_spellcheck_' + (str === this.documentHelper.owner.contextMenuModule.locale.getConstant('Add to Dictionary') ? 'Add to Dictionary' : str),\n                    iconCss: ''\n                });\n            }\n        }\n        return spellSuggestion;\n    };\n    /**\n     * Method to check whether text element has errors\n     *\n     * @private\n     */\n    SpellChecker.prototype.checktextElementHasErrors = function (text, element, left) {\n        var hasError = false;\n        var erroElements = [];\n        text = text.replace(/[\\s]+/g, '');\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element.errorCollection) && element.errorCollection.length > 0) {\n            if (!this.documentHelper.isScrollHandler && (element.ischangeDetected || element.paragraph.isChangeDetected)) {\n                this.updateStatusForGlobalErrors(element.errorCollection, element);\n                element.errorCollection = [];\n                element.ischangeDetected = true;\n                return { 'errorFound': hasError, 'elements': erroElements };\n            }\n            for (var i = 0; i < element.errorCollection.length; i++) {\n                if (this.handleErrorCollection(element.errorCollection[i])) {\n                    hasError = true;\n                    erroElements.push(element.errorCollection[i]);\n                }\n            }\n        }\n        else if (!this.documentHelper.isScrollHandler && element.paragraph.isChangeDetected) {\n            element.ischangeDetected = true;\n        }\n        else if (!element.ischangeDetected && this.handleErrorCollection(element)) {\n            hasError = true;\n            erroElements.push(element);\n        }\n        return { 'errorFound': hasError, 'elements': erroElements };\n    };\n    SpellChecker.prototype.updateStatusForGlobalErrors = function (erroElements, parentElement) {\n        if (erroElements.length > 0) {\n            for (var i = 0; i < erroElements.length; i++) {\n                var exactText = this.manageSpecialCharacters(erroElements[i].text, undefined, true);\n                if (this.errorWordCollection.containsKey(exactText)) {\n                    var elements = this.errorWordCollection.get(exactText);\n                    for (var j = 0; j < elements.length; j++) {\n                        if (elements[j] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.ErrorTextElementBox && elements[j] === erroElements[i]) {\n                            elements[j].ischangeDetected = true;\n                            elements[j].start.offset = parentElement.line.getOffset(parentElement.istextCombined ? this.getCombinedElement(parentElement) : parentElement, 0);\n                            elements[j].line = parentElement.line;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Method to handle document error collection.\n     *\n     * @param {string} errorInElement\n     * @private\n     */\n    SpellChecker.prototype.handleErrorCollection = function (errorInElement) {\n        var errors = this.errorWordCollection;\n        var exactText = this.manageSpecialCharacters(errorInElement.text, undefined, true);\n        if (errors.containsKey(exactText) && errorInElement.length > 1) {\n            var ignoreAllIndex = this.ignoreAllItems.indexOf(exactText);\n            if (ignoreAllIndex > -1) {\n                if (errors.containsKey(exactText)) {\n                    errors.remove(exactText);\n                }\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    SpellChecker.prototype.constructInlineMenu = function (inlineSuggestion) {\n        for (var i = inlineSuggestion.length - 1; i > 0; i--) {\n            if (inlineSuggestion.length > 3) {\n                this.spellCheckSuggestion.push(inlineSuggestion[i]);\n                inlineSuggestion.pop();\n            }\n        }\n        return inlineSuggestion;\n    };\n    /**\n     * Method to retrieve error element text\n     *\n     * @private\n     */\n    SpellChecker.prototype.findCurretText = function () {\n        var insertPosition = this.documentHelper.selection.start;\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        var element;\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        var inlineObj = insertPosition.currentWidget.getInline(this.documentHelper.selection.start.offset, 0);\n        var text;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inlineObj.element)) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(inlineObj.element.errorCollection) && inlineObj.element.errorCollection.length > 0) {\n                for (var i = 0; i < inlineObj.element.errorCollection.length; i++) {\n                    var errorElement = inlineObj.element.errorCollection[i];\n                    if (errorElement.start.location.x <= insertPosition.location.x && errorElement.end.location.x >= insertPosition.location.x) {\n                        text = errorElement.text;\n                        element = errorElement;\n                        break;\n                    }\n                }\n            }\n            else {\n                text = inlineObj.element.text;\n            }\n            if (text === ' ') {\n                inlineObj = insertPosition.currentWidget.getInline(this.documentHelper.selection.start.offset + 1, 0);\n                text = inlineObj.element.text;\n            }\n        }\n        return { 'text': text, 'element': element };\n    };\n    SpellChecker.prototype.addErrorCollection = function (text, elementToCompare, suggestions) {\n        text = this.manageSpecialCharacters(text, undefined, true);\n        if (this.errorWordCollection.containsKey(text)) {\n            var errorElements = this.errorWordCollection.get(text);\n            if (elementToCompare instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.ErrorTextElementBox) {\n                if (!this.compareErrorTextElement(elementToCompare, errorElements)) {\n                    errorElements.push(elementToCompare);\n                }\n            }\n            else if (elementToCompare instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n                if (!this.compareTextElement(elementToCompare, errorElements)) {\n                    errorElements.push(elementToCompare);\n                }\n            }\n        }\n        else {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(suggestions) && suggestions.length > 0) {\n                this.errorSuggestions.add(text, suggestions);\n            }\n            this.errorWordCollection.add(text, [elementToCompare]);\n            if (!this.uniqueWordsCollection.containsKey(text)) {\n                this.uniqueWordsCollection.add(text, true);\n            }\n        }\n    };\n    SpellChecker.prototype.addCorrectWordCollection = function (text) {\n        text = this.manageSpecialCharacters(text, undefined, true);\n        if (!this.uniqueWordsCollection.containsKey(text)) {\n            this.uniqueWordsCollection.add(text, false);\n        }\n    };\n    /**\n     * @private\n     */\n    SpellChecker.prototype.isInUniqueWords = function (text) {\n        text = text.replace(/[\\s]+/g, '');\n        return this.uniqueWordsCollection.containsKey(text);\n    };\n    /**\n     * @private\n     */\n    SpellChecker.prototype.isErrorWord = function (text) {\n        text = text.replace(/[\\s]+/g, '');\n        return this.uniqueWordsCollection.get(text);\n    };\n    /**\n     * @private\n     */\n    SpellChecker.prototype.isCorrectWord = function (text) {\n        text = text.replace(/[\\s]+/g, '');\n        return !this.uniqueWordsCollection.get(text);\n    };\n    SpellChecker.prototype.compareErrorTextElement = function (errorElement, errorCollection) {\n        var copyElement = [];\n        var isChanged = false;\n        for (var i = 0; i < errorCollection.length; i++) {\n            copyElement.push(errorCollection[i]);\n        }\n        var length = errorCollection.length;\n        for (var i = 0; i < length; i++) {\n            if (copyElement[i] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.ErrorTextElementBox) {\n                if (copyElement[i].ischangeDetected) {\n                    var exactText = this.manageSpecialCharacters(copyElement[i].text, undefined, true);\n                    isChanged = true;\n                    this.removeErrorsFromCollection({ 'element': copyElement[i], 'text': exactText });\n                }\n                else {\n                    var currentElement = copyElement[i];\n                    if (errorElement.start.offset === currentElement.start.offset && errorElement.end.offset === currentElement.end.offset) {\n                        return true;\n                    }\n                }\n            }\n        }\n        if (isChanged) {\n            this.errorWordCollection.add(this.manageSpecialCharacters(errorElement.text, undefined, true), [errorElement]);\n        }\n        return false;\n    };\n    /**\n     * Method to compare text elements\n     *\n     * @private\n     */\n    SpellChecker.prototype.compareTextElement = function (errorElement, errorCollection) {\n        for (var i = 0; i < errorCollection.length; i++) {\n            if (errorCollection[i] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n                var currentElement = errorCollection[i];\n                if (currentElement === errorElement) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Method to handle Word by word spell check\n     *\n     * @private\n     */\n    SpellChecker.prototype.handleWordByWordSpellCheck = function (jsonObject, elementBox, left, top, underlineY, baselineAlignment, isSamePage, currentText) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentText)) {\n            currentText = elementBox.text;\n        }\n        if (jsonObject.HasSpellingError && isSamePage) {\n            this.addErrorCollection(currentText, elementBox, jsonObject.Suggestions);\n            if (currentText === elementBox.text.trim()) {\n                var backgroundColor = (elementBox.line.paragraph.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TableCellWidget) ? elementBox.line.paragraph.containerWidget.cellFormat.shading.backgroundColor : this.documentHelper.backgroundColor;\n                this.documentHelper.render.renderWavyLine(elementBox, left, top, underlineY, '#FF0000', 'Single', baselineAlignment, backgroundColor);\n                elementBox.isSpellChecked = true;\n            }\n        }\n        else {\n            this.addCorrectWordCollection(currentText);\n            elementBox.isSpellChecked = true;\n        }\n    };\n    /**\n     * Method to check errors for combined elements\n     *\n     * @private\n     */\n    SpellChecker.prototype.checkElementCanBeCombined = function (elementBox, underlineY, beforeIndex, callSpellChecker, textToCombine, isNext, isPrevious, canCombine) {\n        var currentText = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(textToCombine) ? '' : textToCombine;\n        var isCombined = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(canCombine) ? false : canCombine;\n        var checkPrevious = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(isPrevious) ? isPrevious : true;\n        var checkNext = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(isNext) ? isNext : true;\n        var combinedElements = [];\n        var line = this.documentHelper.selection.getLineWidget(elementBox, 0);\n        var index = line.children.indexOf(elementBox);\n        var prevText = elementBox.text;\n        combinedElements.push(elementBox);\n        var difference = (isPrevious) ? 0 : 1;\n        var prevCombined = false;\n        var isPrevField = false;\n        if (elementBox.text !== '\\v') {\n            if (checkPrevious) {\n                var textElement = undefined;\n                for (var i = index - difference; i >= 0; i--) {\n                    textElement = line.children[i];\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(textElement) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(textElement.revisions) && textElement.revisions.length > 0 && textElement.revisions[0].revisionType === \"Deletion\") {\n                        break;\n                    }\n                    if (textElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox && !isPrevField) {\n                        if (prevText.indexOf(' ') !== 0 && textElement.text.lastIndexOf(' ') !== textElement.text.length - 1) {\n                            prevCombined = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(textToCombine) ? true : false;\n                            currentText = textElement.text + currentText;\n                            prevText = textElement.text;\n                            isPrevField = false;\n                            combinedElements.push(textElement);\n                            isCombined = true;\n                        }\n                        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(textElement)) {\n                            textElement = textElement.nextElement;\n                            break;\n                        }\n                    }\n                    else if (textElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.FieldElementBox && textElement.fieldType !== 1) {\n                        isPrevField = true;\n                    }\n                }\n                var currentElement = (isCombined) ? textElement : elementBox;\n                if (this.lookThroughPreviousLine(currentText, prevText, currentElement, underlineY, beforeIndex)) {\n                    return true;\n                }\n            }\n            if (isPrevious) {\n                currentText = (prevCombined) ? currentText : elementBox.text + currentText;\n            }\n            else {\n                currentText += elementBox.text;\n            }\n            isPrevField = false;\n            var nextText = elementBox.text;\n            if (checkNext) {\n                var canCombine_1 = false;\n                var element = undefined;\n                for (var i = index + 1; i < line.children.length; i++) {\n                    element = line.children[i];\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element.revisions) && element.revisions.length > 0 && element.revisions[0].revisionType === \"Deletion\") {\n                        break;\n                    }\n                    if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox && !isPrevField) {\n                        if (nextText.lastIndexOf(' ') !== nextText.length - 1 && element.text.indexOf(' ') !== 0) {\n                            currentText += element.text;\n                            nextText = element.text;\n                            isPrevField = false;\n                            combinedElements.push(element);\n                            canCombine_1 = true;\n                            isCombined = true;\n                        }\n                        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element)) {\n                            element = element.previousElement;\n                            break;\n                        }\n                    }\n                    else if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.FieldElementBox && element.fieldType !== 2) {\n                        isPrevField = true;\n                    }\n                }\n                var currentElement = (canCombine_1) ? element : elementBox;\n                if (currentElement.text !== '\\f' && currentElement.text !== String.fromCharCode(14) && this.lookThroughNextLine(currentText, prevText, currentElement, underlineY, beforeIndex)) {\n                    return true;\n                }\n            }\n        }\n        if (isCombined && callSpellChecker && !this.checkCombinedElementsBeIgnored(combinedElements, currentText)) {\n            this.handleCombinedElements(elementBox, currentText, underlineY, beforeIndex);\n        }\n        return isCombined;\n    };\n    SpellChecker.prototype.lookThroughPreviousLine = function (currentText, prevText, currentElement, underlineY, beforeIndex) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentElement) && currentElement.indexInOwner === 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentElement.line.previousLine)) {\n            var previousLine = currentElement.line.previousLine;\n            var index = previousLine.children.length - 1;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(previousLine.children[index]) && previousLine.children[index] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n                var firstElement = previousLine.children[index];\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentElement.text)) {\n                    if (currentElement.text.indexOf(' ') !== 0 && firstElement.text.lastIndexOf(' ') !== firstElement.text.length - 1) {\n                        currentText = (currentText.length > 0) ? currentText : prevText;\n                        this.checkElementCanBeCombined(firstElement, underlineY, beforeIndex, true, currentText, false, true, true);\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    SpellChecker.prototype.lookThroughNextLine = function (currentText, prevText, elementBox, underlineY, beforeIndex) {\n        if (elementBox instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(elementBox) && elementBox.indexInOwner === elementBox.line.children.length - 1 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(elementBox.line.nextLine)) {\n            var nextLine = elementBox.line.nextLine;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(nextLine.children[0]) && nextLine.children[0] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n                var firstElement = nextLine.children[0];\n                if (elementBox.text.lastIndexOf(' ') !== elementBox.text.length - 1 && firstElement.text.indexOf(' ') !== 0) {\n                    currentText = (currentText.length > 0) ? currentText : prevText;\n                    this.checkElementCanBeCombined(firstElement, underlineY, beforeIndex, true, currentText, true, false, true);\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Method to handle combined elements\n     *\n     * @param {TextElementBox} elementBox\n     * @param {string} currentText\n     * @param {number} underlineY\n     * @param {number} beforeIndex\n     * @private\n     */\n    SpellChecker.prototype.handleCombinedElements = function (elementBox, currentText, underlineY, beforeIndex) {\n        elementBox.istextCombined = true;\n        var splittedText = currentText.split(/[\\s]+/);\n        if (this.ignoreAllItems.indexOf(currentText) === -1 && elementBox instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox && elementBox.ignoreOnceItems.indexOf(currentText) === -1) {\n            if (splittedText.length > 1) {\n                for (var i = 0; i < splittedText.length; i++) {\n                    var currentText_1 = splittedText[i];\n                    currentText_1 = this.manageSpecialCharacters(currentText_1, undefined, true);\n                    this.documentHelper.render.handleUnorderedElements(currentText_1, elementBox, underlineY, i, 0, i === splittedText.length - 1, beforeIndex);\n                }\n            }\n            else {\n                currentText = this.manageSpecialCharacters(currentText, undefined, true);\n                this.documentHelper.render.handleUnorderedElements(currentText, elementBox, underlineY, 0, 0, true, beforeIndex);\n            }\n        }\n    };\n    /**\n     * Method to check error element collection has unique element\n     *\n     * @param {ErrorTextElementBox[]} errorCollection\n     * @param {ErrorTextElementBox} elementToCheck\n     * @private\n     */\n    SpellChecker.prototype.checkArrayHasSameElement = function (errorCollection, elementToCheck) {\n        for (var i = 0; i < errorCollection.length; i++) {\n            var errorText = errorCollection[i];\n            if ((errorText.start.location.x === elementToCheck.start.location.x) && (errorText.start.location.y === elementToCheck.start.location.y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    SpellChecker.prototype.handleSplitWordSpellCheck = function (jsonObject, currentText, elementBox, isSamePage, underlineY, iteration, markIndex, isLastItem) {\n        if (jsonObject.HasSpellingError && elementBox.text !== ' ' && isSamePage) {\n            var matchResults = this.getMatchedResultsFromElement(elementBox, currentText);\n            if (elementBox.previousElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.FieldElementBox && elementBox.previousElement.fieldType === 1) {\n                matchResults.elementInfo.values.pop();\n                matchResults.elementInfo.values.push(0);\n            }\n            markIndex = (elementBox.istextCombined) ? elementBox.line.getOffset(this.getCombinedElement(elementBox), 0) : markIndex;\n            this.documentHelper.owner.searchModule.textSearch.updateMatchedTextLocation(matchResults.matches, matchResults.textResults, matchResults.elementInfo, 0, elementBox, false, null, markIndex);\n            this.handleMatchedResults(matchResults.textResults, elementBox, underlineY, iteration, jsonObject.Suggestions, isLastItem);\n        }\n        else {\n            this.addCorrectWordCollection(currentText);\n            if (isLastItem) {\n                elementBox.isSpellChecked = true;\n            }\n        }\n        this.updateUniqueWords([{ Text: currentText, HasSpellError: jsonObject.HasSpellingError }]);\n    };\n    SpellChecker.prototype.handleMatchedResults = function (results, elementBox, wavyLineY, index, suggestions, isLastItem) {\n        if (results.length === 0 && isLastItem) {\n            elementBox.isSpellChecked = true;\n            return;\n        }\n        for (var i = 0; i < results.length; i++) {\n            var span = this.createErrorElementWithInfo(results.innerList[i], elementBox);\n            var color = '#FF0000';\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(elementBox.errorCollection) && !this.checkArrayHasSameElement(elementBox.errorCollection, span)) {\n                elementBox.errorCollection.splice(index, 0, span);\n            }\n            this.addErrorCollection(span.text, span, suggestions);\n            var elements = this.errorWordCollection.get(span.text);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(elements) && elements.indexOf(elementBox) !== -1 && elements.indexOf(elementBox) !== elements.indexOf(span)) {\n                elements.splice(elements.indexOf(elementBox), 1);\n            }\n            var backgroundColor = (elementBox.line.paragraph.containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TableCellWidget) ? elementBox.paragraph.containerWidget.cellFormat.shading.backgroundColor : this.documentHelper.backgroundColor;\n            var para = elementBox.line.paragraph;\n            var lineY = para.y;\n            for (var i_1 = 0; i_1 < para.childWidgets.length; i_1++) {\n                if (para.childWidgets[i_1] == elementBox.line)\n                    break;\n                lineY += para.childWidgets[i_1].height;\n            }\n            if (elementBox.isRightToLeft) {\n                this.documentHelper.render.renderWavyLine(span, span.end.location.x, lineY, wavyLineY, color, 'Single', elementBox.characterFormat.baselineAlignment, backgroundColor);\n            }\n            else {\n                this.documentHelper.render.renderWavyLine(span, span.start.location.x, lineY, wavyLineY, color, 'Single', elementBox.characterFormat.baselineAlignment, backgroundColor);\n            }\n            if (isLastItem) {\n                elementBox.isSpellChecked = true;\n            }\n        }\n    };\n    /**\n     * Calls the spell checker service.\n     * @private\n     */\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    SpellChecker.prototype.callSpellChecker = function (languageID, word, checkSpelling, checkSuggestion, addWord, isByPage) {\n        var _this = this;\n        var spellchecker = this;\n        return new Promise(function (resolve, reject) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(_this)) {\n                var httpRequest_1 = new XMLHttpRequest();\n                var service_1 = _this.documentHelper.owner.serviceUrl;\n                service_1 = (isByPage) ? service_1 + _this.documentHelper.owner.serverActionSettings.spellCheckByPage : service_1 + _this.documentHelper.owner.serverActionSettings.spellCheck;\n                httpRequest_1.open('POST', service_1, true);\n                httpRequest_1.setRequestHeader('Content-Type', 'application/json');\n                var headers = _this.documentHelper.owner.headers;\n                /* eslint-disable @typescript-eslint/no-explicit-any */\n                if (isByPage) {\n                    word = word.replace(String.fromCharCode(160), ' ');\n                }\n                var spellCheckData = { LanguageID: languageID, TexttoCheck: word, CheckSpelling: checkSpelling, CheckSuggestion: checkSuggestion, AddWord: addWord };\n                var httprequestEventArgs = { serverActionType: 'SpellCheck', headers: headers, timeout: 0, cancel: false, withCredentials: false };\n                headers = httprequestEventArgs.headers;\n                _this.documentHelper.owner.trigger(_index__WEBPACK_IMPORTED_MODULE_1__.beforeXmlHttpRequestSend, httprequestEventArgs);\n                _this.setCustomHeaders(httpRequest_1, httprequestEventArgs.headers);\n                httpRequest_1.withCredentials = httprequestEventArgs.withCredentials;\n                if (!httprequestEventArgs.cancel) {\n                    httpRequest_1.send(JSON.stringify(spellCheckData));\n                }\n                httpRequest_1.onreadystatechange = function () {\n                    if (httpRequest_1.readyState === 4) {\n                        if (httpRequest_1.status === 200 || httpRequest_1.status === 304) {\n                            resolve(httpRequest_1.response);\n                        }\n                        else {\n                            var result = {\n                                status: httpRequest_1.status.toString(),\n                                statusText: httpRequest_1.responseText,\n                                url: service_1\n                            };\n                            result.name = 'onFailure';\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(spellchecker.documentHelper)) {\n                                spellchecker.documentHelper.owner.fireServiceFailure(result);\n                            }\n                            reject(httpRequest_1.response);\n                        }\n                    }\n                };\n            }\n        });\n    };\n    SpellChecker.prototype.setCustomHeaders = function (httpRequest, headers) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(headers)) {\n            for (var i = 0; i < headers.length; i++) {\n                var header = headers[i];\n                for (var _i = 0, _a = Object.keys(header); _i < _a.length; _i++) {\n                    var key = _a[_i];\n                    httpRequest.setRequestHeader(key, header[key]);\n                }\n            }\n        }\n    };\n    /**\n     * Method to check for next error\n     *\n     * @private\n     * @returns {void}\n     */\n    SpellChecker.prototype.checkForNextError = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(this.viewer)) {\n            var errorWords = this.errorWordCollection;\n            if (errorWords.length > 0) {\n                for (var i = 0; i < errorWords.length; i++) {\n                    var errorElements = errorWords.get(errorWords.keys[i]);\n                    for (var j = 0; j < errorElements.length; j++) {\n                        if (errorElements[j] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.ErrorTextElementBox && !errorElements[j].ischangeDetected) {\n                            this.updateErrorElementTextBox(errorWords.keys[i], errorElements[j]);\n                        }\n                        else if (errorElements[j] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n                            var matchResults = this.getMatchedResultsFromElement(errorElements[j]);\n                            var results = matchResults.textResults;\n                            var markIndex = (errorElements[j].ischangeDetected) ? errorElements[j].start.offset : errorElements[j].line.getOffset(errorElements[j], 0);\n                            this.documentHelper.owner.searchModule.textSearch.updateMatchedTextLocation(matchResults.matches, results, matchResults.elementInfo, 0, errorElements[j], false, null, markIndex);\n                            for (var i_2 = 0; i_2 < results.length; i_2++) {\n                                var element = this.createErrorElementWithInfo(results.innerList[i_2], errorElements[j]);\n                                this.updateErrorElementTextBox(element.text, element);\n                                break;\n                            }\n                        }\n                        break;\n                    }\n                    break;\n                }\n            }\n            else {\n                this.documentHelper.clearSelectionHighlight();\n            }\n        }\n    };\n    /**\n     * Method to create error element with matched results\n     *\n     * @param {TextSearchResult} result\n     * @param {ElementBox} errorElement\n     * @private\n     */\n    SpellChecker.prototype.createErrorElementWithInfo = function (result, errorElement) {\n        var element = new _viewer_page__WEBPACK_IMPORTED_MODULE_3__.ErrorTextElementBox();\n        var isUpdated = false;\n        if (errorElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.ErrorTextElementBox && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(result.start) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(result.end) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(result.text))) {\n            element.text = errorElement.text;\n            var line = errorElement.line;\n            for (var i = 0; i < line.children.length; i++) {\n                if (line.children[i] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n                    var text = line.children[i].text;\n                    var exactText = errorElement.text;\n                    if (text.indexOf(exactText) !== -1) {\n                        errorElement.start.offset = text.indexOf(exactText);\n                        errorElement.end.offset = errorElement.start.offset + exactText.length;\n                        element.start = errorElement.start;\n                        element.end = errorElement.end;\n                        element.start.currentWidget = errorElement.line;\n                        element.end.currentWidget = errorElement.line;\n                        isUpdated = true;\n                        break;\n                    }\n                }\n            }\n            if (!isUpdated) {\n                element.text = errorElement.text;\n                element.start = errorElement.start;\n                element.end = errorElement.end;\n                isUpdated = true;\n            }\n        }\n        if (!isUpdated) {\n            element.text = result.text;\n            element.start = result.start;\n            element.end = result.end;\n        }\n        element.height = errorElement.height;\n        element.canTrigger = errorElement.canTrigger;\n        element.characterFormat.copyFormat(errorElement.characterFormat);\n        // element.width = this.documentHelper.textHelper.getWidth(element.text, errorElement.characterFormat, (errorElement as TextElementBox).scriptType);\n        element.width = Math.abs(element.start.location.x - element.end.location.x);\n        return element;\n    };\n    /**\n     * Method to get matched results from element box\n     *\n     * @private\n     * @param {ElementBox} errorElement - Specifies the error element box.\n     * @param {string} currentText - Specifies the current text\n     * @returns {MatchResults} - Returns match results info.\n     */\n    SpellChecker.prototype.getMatchedResultsFromElement = function (errorElement, currentText) {\n        var line = errorElement.line;\n        var pattern = this.documentHelper.owner.searchModule.textSearch.stringToRegex(((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(currentText)) ? errorElement.text : currentText, 'CaseSensitive');\n        this.textSearchResults.clearResults();\n        var results = this.textSearchResults;\n        var textLineInfo = this.documentHelper.owner.searchModule.textSearch.getElementInfo(line.children[0], 0, false, pattern, undefined, undefined, undefined, undefined, true);\n        var text = textLineInfo.fullText;\n        var matches = [];\n        var spans = textLineInfo.elementsWithOffset;\n        var matchObject;\n        // eslint-disable  no-cond-assign\n        while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(matchObject = pattern.exec(text))) {\n            if (this.isChangeAll) {\n                matchObject.index = spans.get(errorElement);\n            }\n            matches.push(matchObject);\n        }\n        return { 'matches': matches, 'elementInfo': spans, 'textResults': results };\n    };\n    /**\n     * Method to update error element information\n     *\n     * @private\n     * @param {string} error - Specifies the error word.\n     * @param {ErrorTextElementBox} errorElement - Specifies the error element box.\n     * @returns {void}\n     */\n    SpellChecker.prototype.updateErrorElementTextBox = function (error, errorElement) {\n        var element = errorElement;\n        this.documentHelper.clearSelectionHighlight();\n        this.documentHelper.selection.start = element.start.clone();\n        this.documentHelper.selection.end = element.end.clone();\n        this.documentHelper.selection.highlight(errorElement.start.paragraph, errorElement.start, errorElement.end);\n        this.documentHelper.owner.spellCheckDialogModule.updateSuggestionDialog(error, element);\n    };\n    /**\n     * Method to retrieve space information in a text\n     *\n     * @private\n     * @param {string} text - Specifies the text\n     * @param {WCharacterFormat} characterFormat - Specifies the character format.\n     * @returns {SpecialCharacterInfo} - Returs special character info.\n     */\n    SpellChecker.prototype.getWhiteSpaceCharacterInfo = function (elementBox) {\n        var text = elementBox.text;\n        var characterFormat = elementBox.characterFormat;\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        var matchedText = [];\n        var width = 0;\n        var length = 0;\n        matchedText = text.match(/[\\s]+/);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(matchedText) && matchedText.length > 0) {\n            for (var i = 0; i < matchedText.length; i++) {\n                width += this.documentHelper.textHelper.getWidth(matchedText[i], characterFormat, elementBox.scriptType);\n                length += matchedText[i].length;\n            }\n        }\n        return { 'width': width, 'wordLength': length, 'isBeginning': (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(matchedText) && matchedText.index === 0) };\n    };\n    /**\n     * Retrieve Special character info\n     *\n     * @private\n     * @param {string} text - Specifies the text\n     * @param {WCharacterFormat} characterFormat - Specifies the character format.\n     * @returns {SpecialCharacterInfo} - Returs special character info.\n     */\n    SpellChecker.prototype.getSpecialCharactersInfo = function (elementBox) {\n        var text = elementBox.text;\n        var characterFormat = elementBox.characterFormat;\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        var matchedText = [];\n        var beginingwidth = 0;\n        var endWidth = 0;\n        var length = 0;\n        matchedText = text.match(/^[\\#\\@\\!\\~\\$\\%\\^\\&\\*\\(\\)\\-\\_\\+\\=\\{\\}\\[\\]\\:\\;\\\"\\'\\,\\<\\.\\>\\/\\?\\`]*/);\n        for (var i = 0; i < matchedText.length; i++) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(matchedText[i]) && matchedText[i].length > 0) {\n                beginingwidth = this.documentHelper.textHelper.getWidth(matchedText[i], characterFormat, elementBox.scriptType);\n            }\n            length = matchedText.length;\n        }\n        matchedText = text.match(/[\\#\\@\\!\\~\\$\\%\\^\\&\\*\\(\\)\\-\\_\\+\\=\\{\\}\\[\\]\\:\\;\\\"\\'\\,\\<\\.\\>\\/\\?\\`]*$/);\n        for (var i = 0; i < matchedText.length; i++) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(matchedText[i]) && matchedText[i].length > 0) {\n                endWidth = this.documentHelper.textHelper.getWidth(matchedText[i], characterFormat, elementBox.scriptType);\n            }\n            length = matchedText.length;\n        }\n        return { 'beginningWidth': beginingwidth, 'endWidth': endWidth, 'wordLength': length };\n    };\n    /**\n     * Method to retrieve next available combined element\n     *\n     * @private\n     * @param {ElementBox} element - Specified the element.\n     * @returns {ElementBox} - Returns combined element.\n     */\n    SpellChecker.prototype.getCombinedElement = function (element) {\n        var prevElement = element;\n        while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(element) && element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox && element.istextCombined) {\n            prevElement = element;\n            element = element.previousElement;\n        }\n        return prevElement;\n    };\n    SpellChecker.prototype.checkCombinedElementsBeIgnored = function (elements, exactText) {\n        exactText = this.manageSpecialCharacters(exactText, undefined, true);\n        for (var i = 0; i < elements.length; i++) {\n            if (elements[i].ignoreOnceItems.indexOf(exactText) !== -1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Method to update error collection\n     *\n     * @private\n     * @param {TextElementBox} currentElement - Specifies current element.\n     * @param {TextElementBox} splittedElement - Specifies splitted element.\n     * @returns {void}\n     */\n    SpellChecker.prototype.updateSplittedElementError = function (currentElement, splittedElement) {\n        var errorCount = currentElement.errorCollection.length;\n        if (errorCount > 0) {\n            var errorCollection = [];\n            for (var i = 0; i < errorCount; i++) {\n                errorCollection.push(currentElement.errorCollection[i]);\n            }\n            for (var i = 0; i < errorCount; i++) {\n                if (currentElement.text.indexOf(errorCollection[i].text) === -1) {\n                    splittedElement.ischangeDetected = true;\n                    currentElement.errorCollection.splice(0, 1);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {Page} page - Specifies the page.\n     * @returns {string} - Returns page content.\n     */\n    SpellChecker.prototype.getPageContent = function (page) {\n        var content = '';\n        if (this.documentHelper.owner.sfdtExportModule) {\n            var sfdtExport = this.documentHelper.owner.sfdtExportModule;\n            var index = sfdtExport.keywordIndex;\n            sfdtExport.keywordIndex = 0;\n            sfdtExport.Initialize();\n            var document_1 = sfdtExport.writePage(page);\n            sfdtExport.keywordIndex = index;\n            if (this.documentHelper.owner.textExportModule) {\n                var textExport = this.documentHelper.owner.textExportModule;\n                textExport.pageContent = '';\n                textExport.setDocument(document_1);\n                textExport.writeInternal();\n                content = textExport.pageContent;\n            }\n        }\n        return content;\n    };\n    /**\n     * @private\n     * @param {any[]} spelledWords - Specifies spelledWords\n     * @returns {void}\n     */\n    SpellChecker.prototype.updateUniqueWords = function (spelledWords) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(localStorage.getItem(this.uniqueKey))) {\n            this.uniqueSpelledWords = JSON.parse(localStorage.getItem(this.uniqueKey));\n        }\n        this.uniqueSpelledWords = this.uniqueSpelledWords || {};\n        var totalCount = spelledWords.length + Object.keys(this.uniqueSpelledWords).length;\n        if (totalCount <= this.uniqueWordsCount) {\n            for (var i = 0; i < spelledWords.length; i++) {\n                this.checkForUniqueWords(spelledWords[i]);\n            }\n        }\n        this.addUniqueWordsToLocalStorage(this.uniqueKey, JSON.stringify(this.uniqueSpelledWords));\n        this.uniqueSpelledWords = {};\n    };\n    SpellChecker.prototype.addUniqueWordsToLocalStorage = function (uniqueKey, value) {\n        try {\n            localStorage.setItem(uniqueKey, value);\n        }\n        catch (e) {\n            if (e.name === 'QuotaExceededError') {\n                this.clearCache();\n                localStorage.setItem(uniqueKey, value);\n            }\n        }\n    };\n    SpellChecker.prototype.checkForUniqueWords = function (spellData) {\n        var identityMatched = this.uniqueSpelledWords[spellData.Text];\n        if (!identityMatched) {\n            this.uniqueSpelledWords[spellData.Text] = spellData.HasSpellError;\n        }\n    };\n    /**\n     * Method to clear cached words for spell check\n     *\n     * @returns {void}\n     */\n    SpellChecker.prototype.clearCache = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(localStorage.getItem(this.uniqueKey))) {\n            localStorage.removeItem(this.uniqueKey);\n        }\n    };\n    SpellChecker.prototype.createGuid = function () {\n        var dateTime = new Date().getTime();\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (char) {\n            var randNo = (dateTime + Math.random() * 16) % 16 | 0;\n            dateTime = Math.floor(dateTime / 16);\n            return (char === 'x' ? randNo : (randNo & 0x3 | 0x8)).toString(16);\n        });\n        return uuid;\n    };\n    /**\n     * Check spelling in page data\n     *\n     * @private\n     * @param {string} wordToCheck - Specifies wordToCheck\n     * @returns {WordSpellInfo} - Retruns WordSpellInfo\n     */\n    SpellChecker.prototype.checkSpellingInPageInfo = function (wordToCheck) {\n        var hasError = false;\n        var elementPresent = false;\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        var uniqueWords = JSON.parse(localStorage.getItem(this.uniqueKey));\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(uniqueWords)) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(uniqueWords[wordToCheck])) {\n                return { hasSpellError: uniqueWords[wordToCheck], isElementPresent: true };\n            }\n        }\n        return { hasSpellError: hasError, isElementPresent: elementPresent };\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    SpellChecker.prototype.destroy = function () {\n        this.errorWordCollection = undefined;\n        this.ignoreAllItems = undefined;\n        this.errorSuggestions = undefined;\n        this.uniqueWordsCollection = undefined;\n        this.uniqueSpelledWords = {};\n        this.textSearchResults = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_4__.isNullOrUndefined)(localStorage.getItem(this.uniqueKey))) {\n            localStorage.removeItem(this.uniqueKey);\n        }\n        this.documentHelper = undefined;\n    };\n    return SpellChecker;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/spell-check/spell-checker.js?");

/***/ })

}]);