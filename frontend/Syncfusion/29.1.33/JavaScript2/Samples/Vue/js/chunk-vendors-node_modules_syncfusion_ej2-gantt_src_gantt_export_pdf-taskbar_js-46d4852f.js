"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-gantt_src_gantt_export_pdf-taskbar_js-46d4852f"],{

/***/ "./node_modules/@syncfusion/ej2-gantt/src/gantt/export/pdf-taskbar.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-gantt/src/gantt/export/pdf-taskbar.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PdfGanttTaskbarCollection: () => (/* binding */ PdfGanttTaskbarCollection)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-pdf-export */ \"./node_modules/@syncfusion/ej2-pdf-export/index.js\");\n/* harmony import */ var _base_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/utils */ \"./node_modules/@syncfusion/ej2-gantt/src/gantt/base/utils.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n\n/**\n * @hidden\n */\nvar PdfGanttTaskbarCollection = /** @class */ (function () {\n    function PdfGanttTaskbarCollection(parent) {\n        /** Defines the task baselineHeight . */\n        this.baselineHeight = 8;\n        this.segment = [];\n        this.segmentCollection = [];\n        /**\n         * @private\n         */\n        this.leftTaskLabel = {};\n        /**\n         * @private\n         */\n        this.rightTaskLabel = {};\n        this.startPage = -1;\n        this.endPage = -1;\n        this.spaceBetweenImageAndValue = 8;\n        this.parent = parent;\n    }\n    PdfGanttTaskbarCollection.prototype.add = function () {\n        return new PdfGanttTaskbarCollection(this.parent);\n    };\n    /**\n     * @param {PdfPage} page .\n     * @returns {PdfPage} .\n     * Get the next PDF page\n     */\n    PdfGanttTaskbarCollection.prototype.GetNextPage = function (page) {\n        var section = page.section;\n        var index = section.indexOf(page);\n        var nextPage = null;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGanttTaskbarCollection.prototype.isAutoFit = function () {\n        return ((this.parent.pdfExportModule && this.parent.pdfExportModule.helper.exportProps &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth) ||\n            this.parent.timelineModule.isZoomedToFit) ? true : false;\n    };\n    /**\n     * Draw the taskbar, chart back ground\n     *\n     * @private\n     */\n    /* eslint-disable */\n    PdfGanttTaskbarCollection.prototype.drawTaskbar = function (page, startPoint, detail, cumulativeWidth, rowHeight, taskbar, lineWidth) {\n        var _this = this;\n        var taskGraphics = page.graphics;\n        var isNextPage = false;\n        var pageSize = page.getClientSize();\n        var yPoint = startPoint.y + rowHeight;\n        //code for while current pdf page is exceed\n        if (yPoint > pageSize.height) {\n            page = this.GetNextPage(page);\n            page['contentWidth'] = (this.isAutoFit()) ? (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pointToPixel)(detail.endPoint - detail.startPoint) : detail.endPoint - detail.startPoint;\n            taskGraphics = page.graphics;\n            startPoint.y = 0;\n            if (this.parent.pdfExportModule.gantt.enableHeader) {\n                this.parent.pdfExportModule.gantt.chartHeader.drawPageTimeline(page, startPoint, detail);\n                startPoint.y = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.parent.timelineModule.isSingleTier ? 45 : 60);\n            }\n            isNextPage = true;\n        }\n        this.drawLeftLabel(page, startPoint, detail, cumulativeWidth, taskbar);\n        //Draw Taskbar\n        var font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(this.fontFamily, 9, _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontStyle.Regular);\n        var fontColor = null;\n        var fontBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(this.progressFontColor);\n        var customizedFont;\n        var customizedFontBrush;\n        var customizedFontColor;\n        customizedFont = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) && taskbar.taskbarTemplate.fontStyle && taskbar.taskbarTemplate.fontStyle.fontFamily && taskbar.taskbarTemplate.fontStyle.fontSize\n            ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(taskbar.taskbarTemplate.fontStyle.fontFamily, taskbar.taskbarTemplate.fontStyle.fontSize, taskbar.taskbarTemplate.fontStyle.fontStyle)\n            : font;\n        customizedFontBrush = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) && taskbar.taskbarTemplate.fontStyle && taskbar.taskbarTemplate.fontStyle.fontColor\n            ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(taskbar.taskbarTemplate.fontStyle.fontColor)\n            : fontBrush;\n        customizedFontColor = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) && taskbar.taskbarTemplate.fontStyle && taskbar.taskbarTemplate.fontStyle.fontBrush\n            ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(taskbar.taskbarTemplate.fontStyle.fontBrush)\n            : fontColor;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) &&\n            this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n            font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n        }\n        var taskLabelFont;\n        var taskLabelFontBrush;\n        var ganttStyle = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle;\n        if (taskbar.labelSettings.taskLabel.fontStyle.fontSize) {\n            var taskFont = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(taskbar.labelSettings.taskLabel.fontStyle.fontFamily, taskbar.labelSettings.taskLabel.fontStyle.fontSize, taskbar.labelSettings.taskLabel.fontStyle.fontStyle);\n            taskLabelFont = taskFont;\n        }\n        else if (ganttStyle && ganttStyle.label && ganttStyle.label.fontBrush) {\n            taskLabelFontBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(ganttStyle.label.fontBrush);\n        }\n        else {\n            taskLabelFont = font;\n        }\n        if (taskbar.labelSettings.taskLabel.fontStyle.fontColor) {\n            taskLabelFontBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(taskbar.labelSettings.taskLabel.fontStyle.fontColor);\n        }\n        else {\n            taskLabelFontBrush = fontBrush;\n        }\n        var progressFormat = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStringFormat();\n        progressFormat.lineAlignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfVerticalAlignment.Middle;\n        progressFormat.alignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfTextAlignment.Right;\n        var isLabelString = false;\n        var updatedWidth;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.taskLabel) && (/^[a-zA-Z0-9]/.test(this.taskLabel))) {\n            if (this.taskLabel === '0' || this.taskLabel === '0%') {\n                updatedWidth = this.width;\n                progressFormat.alignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfTextAlignment.Left;\n            }\n        }\n        if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.taskLabel) && (/^[a-zA-Z]/.test(this.taskLabel))) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value))) {\n            isLabelString = true;\n            progressFormat.alignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfTextAlignment.Left;\n        }\n        var pageIndex = -1;\n        var baselinePen = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(taskbar.baselineBorderColor);\n        var baselineBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(taskbar.baselineColor);\n        var template = taskbar.taskbarTemplate;\n        var renderedBaseline = false;\n        if (!taskbar.isMilestone) {\n            var taskbarPen_1 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(taskbar.taskBorderColor);\n            var taskBrush_1 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(taskbar.taskColor);\n            var manualParentBorderPen = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(taskbar.manualParentBorder);\n            var manualChildBorderPen = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(taskbar.manualChildBorder);\n            var manualTaskbarPen = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(taskbar.manuallineColor);\n            var manualParentPen = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(taskbar.manualParentProgress);\n            var manualline = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(taskbar.manuallineColor);\n            var manuallineBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(taskbar.manuallineColor);\n            var splitline = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(taskbar.splitLineBackground);\n            var manualBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(taskbar.manualParentBackground);\n            var manualChildBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(taskbar.manualChildBackground);\n            var manualChildProgressBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(taskbar.manualChildProgress);\n            var manualProgressBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(taskbar.manualParentProgress);\n            var progressPen_1 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(taskbar.progressColor);\n            var progressBrush_1 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(taskbar.progressColor);\n            var adjustHeightforTaskbar = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)((this.parent.rowHeight - this.height) / 2.0);\n            var adjustHeightforBaseline = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)((this.parent.rowHeight - this.height) / 4.5);\n            var adjustHeight_1 = this.parent.renderBaseline ? adjustHeightforBaseline : adjustHeightforTaskbar;\n            pageIndex = page.section.indexOf(page);\n            var startDate = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.unscheduleStarteDate) ? this.startDate : this.unscheduleStarteDate;\n            var endDate = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.unscheduleEndDate) ? this.endDate : this.unscheduleEndDate;\n            var imageSize_1 = 10;\n            //Task start and end date both are in the range of header split up start and end date\n            if (detail.startDate <= startDate && endDate <= detail.endDate) {\n                if (!this.isStartPoint) {\n                    this.taskStartPoint = __assign({}, startPoint);\n                    this.isStartPoint = true;\n                }\n                if (!this.isScheduledTask && this.unscheduledTaskBy === 'duration') {\n                    var brush1 = void 0;\n                    var brush2 = void 0;\n                    if (this.isAutoFit()) {\n                        brush1 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfLinearGradientBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5 + (taskbar.width) / 2, 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (this.left - cumulativeWidth), 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(taskbar.unscheduledTaskBarColor), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(255, 255, 255));\n                        taskGraphics.drawRectangle(brush1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                        brush2 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfLinearGradientBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5 + (taskbar.width), 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (this.left - cumulativeWidth) + (taskbar.width) / 2, 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(255, 255, 255), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(taskbar.unscheduledTaskBarColor));\n                        //Draw rectangle to fill linear gradient color\n                        taskGraphics.drawRectangle(brush2, startPoint.x + (this.left - cumulativeWidth) + 0.5 + (taskbar.width) / 2, startPoint.y + adjustHeight_1, (taskbar.width) / 2, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                        if (template.value || template.image) {\n                            var imageWidth = void 0;\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                                imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                taskGraphics.drawImage(image, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].height));\n                            }\n                            else {\n                                imageWidth = 0;\n                            }\n                            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat) : '';\n                        }\n                    }\n                    else {\n                        brush1 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfLinearGradientBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width) / 2, 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth), 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(taskbar.unscheduledTaskBarColor), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(255, 255, 255));\n                        taskGraphics.drawRectangle(brush1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                        brush2 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfLinearGradientBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width) / 2, 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(255, 255, 255), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(taskbar.unscheduledTaskBarColor));\n                        //Draw rectangle to fill linear gradient color\n                        taskGraphics.drawRectangle(brush2, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width) / 2, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width) / 2, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                        if (template.value || template.image) {\n                            var imageWidth = void 0;\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                                imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                taskGraphics.drawImage(image, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].height));\n                            }\n                            else {\n                                imageWidth = 0;\n                            }\n                            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat) : '';\n                        }\n                    }\n                }\n                else if (!this.isScheduledTask && this.unscheduledTaskBy === \"endDate\") {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n                }\n                else if (!this.isScheduledTask && this.unscheduledTaskBy !== 'duration') {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n                }\n                else {\n                    if (taskbar.isSpliterTask) {\n                        splitline.dashStyle = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfDashStyle.Dot;\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawLine(splitline, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height / 2)), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF((taskbar.width) + startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height / 2)));\n                        }\n                        else {\n                            taskGraphics.drawLine(splitline, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height / 2)), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF((0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width) + startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height / 2)));\n                        }\n                        taskbar.segment.map(function (data, index) {\n                            var segmenttaskbarPen = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(_this.taskSegmentStyles) ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(_this.taskSegmentStyles[index].taskBorderColor) : taskbarPen_1;\n                            var segmenttaskBrush = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(_this.taskSegmentStyles) ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(_this.taskSegmentStyles[index].taskColor) : taskBrush_1;\n                            if (_this.isAutoFit()) {\n                                taskGraphics.drawRectangle(segmenttaskbarPen, segmenttaskBrush, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (data.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                                if (template.value || template.image) {\n                                    var imageWidth = void 0;\n                                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                                        imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                        var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                        taskGraphics.drawImage(image, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].height));\n                                    }\n                                    else {\n                                        imageWidth = 0;\n                                    }\n                                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(data.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height), progressFormat) : '';\n                                }\n                            }\n                            else {\n                                taskGraphics.drawRectangle(segmenttaskbarPen, segmenttaskBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(data.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                                if (template.value || template.image) {\n                                    var imageWidth = void 0;\n                                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                                        imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                        var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                        taskGraphics.drawImage(image, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].height));\n                                    }\n                                    else {\n                                        imageWidth = 0;\n                                    }\n                                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(_this.left + data.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(data.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height), progressFormat) : '';\n                                }\n                            }\n                        });\n                    }\n                    else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                        taskGraphics.save();\n                        var path = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPath();\n                        path.addEllipse(0, 0, 5, 5);\n                        if (this.isAutoFit()) {\n                            taskGraphics.translateTransform(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 - 2);\n                        }\n                        else {\n                            taskGraphics.translateTransform(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 - 2);\n                        }\n                        taskGraphics.drawPath(manualTaskbarPen, manuallineBrush, path);\n                        taskGraphics.restore();\n                        var path1 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPath();\n                        path1.addEllipse(0, 0, 5, 5);\n                        taskGraphics.save();\n                        if (this.isAutoFit()) {\n                            taskGraphics.translateTransform(startPoint.x + (this.left - cumulativeWidth) + 0.5 + (this.width), startPoint.y + adjustHeight_1 - 2);\n                        }\n                        else {\n                            taskGraphics.translateTransform(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.width), startPoint.y + adjustHeight_1 - 2);\n                        }\n                        taskGraphics.drawPath(manualTaskbarPen, manuallineBrush, path1);\n                        taskGraphics.restore();\n                        manualline.dashStyle = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfDashStyle.Solid;\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawLine(manualline, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF((taskbar.width) + startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1));\n                        }\n                        else {\n                            taskGraphics.drawLine(manualline, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF((0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width) + startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1));\n                        }\n                    }\n                    else if (!taskbar.isAutoSchedule && !taskbar.isParentTask) {\n                        taskGraphics.save();\n                        taskGraphics.setTransparency(0.87);\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(manualChildBorderPen, manualChildBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(manualChildBorderPen, manualChildBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                        }\n                        taskGraphics.restore();\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (taskbar.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height));\n                        }\n                    }\n                    else {\n                        if (this.isAutoFit()) {\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.value) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.image)) {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                                var imageWidth = void 0;\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                                    imageWidth = taskbar.taskbarTemplate.image[0].width / 2.0;\n                                    var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                    taskGraphics.drawImage(image, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + (taskbar.height - taskbar.taskbarTemplate.image[0].height) / 2.0, (taskbar.taskbarTemplate.image[0].width) / 2.0, (taskbar.taskbarTemplate.image[0].height) / 2.0);\n                                }\n                                else {\n                                    imageWidth = 0;\n                                }\n                                if (taskbar.taskbarTemplate.value) {\n                                    if (isLabelString) {\n                                        updatedWidth = this.width;\n                                    }\n                                    taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (this.left - cumulativeWidth) + imageWidth, startPoint.y + adjustHeight_1, (updatedWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat);\n                                }\n                            }\n                        }\n                        else {\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.value) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.image)) {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                                var imageWidth = void 0;\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                                    imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                    var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                    taskGraphics.drawImage(image, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 1, startPoint.y + adjustHeight_1 + 1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)((taskbar.height - taskbar.taskbarTemplate.image[0].height) / 2.0), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].height));\n                                }\n                                else {\n                                    imageWidth = 0;\n                                }\n                                !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + imageWidth, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(updatedWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat) : '';\n                            }\n                        }\n                    }\n                    if (this.isScheduledTask && taskbar.isAutoSchedule && !taskbar.isSpliterTask) {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.image) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.value)) {\n                            if (this.isAutoFit()) {\n                                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (taskbar.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                            }\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.parent.labelSettings.taskLabel) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.taskLabel)) {\n                                if (this.taskLabel !== '0' && this.taskLabel !== '0%') {\n                                    updatedWidth = this.progressWidth;\n                                }\n                                if (isLabelString) {\n                                    updatedWidth = this.width;\n                                }\n                                if (this.isAutoFit()) {\n                                    taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + (this.left - cumulativeWidth), startPoint.y + adjustHeight_1, (updatedWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat);\n                                }\n                                else {\n                                    taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth), startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(updatedWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat);\n                                }\n                            }\n                        }\n                    }\n                    else if (taskbar.isSpliterTask) {\n                        taskbar.segment.map(function (data, index) {\n                            var segmentprogressPen = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(_this.taskSegmentStyles) ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(_this.taskSegmentStyles[index].progressColor) : progressPen_1;\n                            var segmentprogressBrush = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(_this.taskSegmentStyles) ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(_this.taskSegmentStyles[index].progressColor) : progressBrush_1;\n                            if (_this.isAutoFit()) {\n                                taskGraphics.drawRectangle(segmentprogressPen, segmentprogressBrush, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (data.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(segmentprogressPen, segmentprogressBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(data.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                            }\n                        });\n                    }\n                }\n                this.isCompleted = true;\n                this.startPage = pageIndex;\n                this.endPage = pageIndex;\n            }\n            //Task start date is in the range of header split up start and end date\n            else if (detail.startDate <= startDate && detail.endDate >= startDate && (endDate >= detail.endDate)) {\n                if (!this.isStartPoint) {\n                    this.taskStartPoint = __assign({}, startPoint);\n                    this.isStartPoint = true;\n                }\n                var width = this.width;\n                var renderWidth_1 = 0;\n                var progressWidth = 0;\n                var splitRenderwidth_1 = 0;\n                this.width = this.width - (detail.totalWidth - (this.left - cumulativeWidth));\n                renderWidth_1 = (detail.totalWidth - (this.left - cumulativeWidth));\n                progressWidth = (detail.totalWidth - (this.left - cumulativeWidth));\n                if (width < renderWidth_1) {\n                    renderWidth_1 = width;\n                }\n                splitRenderwidth_1 = renderWidth_1;\n                if (!this.isScheduledTask && this.unscheduledTaskBy === 'duration') {\n                    var brush1 = void 0;\n                    var brush2 = void 0;\n                    if (this.isAutoFit()) {\n                        brush1 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfLinearGradientBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5 + (renderWidth_1) / 2, 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (this.left - cumulativeWidth), 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(taskbar.unscheduledTaskBarColor), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(255, 255, 255));\n                        taskGraphics.drawRectangle(brush1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (renderWidth_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                        brush2 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfLinearGradientBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5 + (renderWidth_1), 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (this.left - cumulativeWidth) + (renderWidth_1) / 2, 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(255, 255, 255), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(taskbar.unscheduledTaskBarColor));\n                        taskGraphics.drawRectangle(brush2, startPoint.x + (this.left - cumulativeWidth) + 0.5 + (renderWidth_1) / 2, startPoint.y + adjustHeight_1, (renderWidth_1) / 2, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                        if (template.value || template.image) {\n                            var imageWidth = void 0;\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                                imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                taskGraphics.drawImage(image, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].height));\n                            }\n                            else {\n                                imageWidth = 0;\n                            }\n                            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat) : '';\n                        }\n                    }\n                    else {\n                        brush1 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfLinearGradientBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(renderWidth_1) / 2, 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth), 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(taskbar.unscheduledTaskBarColor), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(255, 255, 255));\n                        taskGraphics.drawRectangle(brush1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(renderWidth_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                        brush2 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfLinearGradientBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(renderWidth_1), 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(renderWidth_1) / 2, 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(255, 255, 255), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(taskbar.unscheduledTaskBarColor));\n                        taskGraphics.drawRectangle(brush2, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(renderWidth_1) / 2, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(renderWidth_1) / 2, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                        if (template.value || template.image) {\n                            var imageWidth = void 0;\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                                imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                taskGraphics.drawImage(image, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].height));\n                            }\n                            else {\n                                imageWidth = 0;\n                            }\n                            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat) : '';\n                        }\n                    }\n                }\n                else if (!this.isScheduledTask && this.unscheduledTaskBy !== 'duration') {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n                }\n                else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                    taskGraphics.save();\n                    var path = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPath();\n                    path.addEllipse(0, 0, 5, 5);\n                    if (this.isAutoFit()) {\n                        taskGraphics.translateTransform(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 - 2);\n                    }\n                    else {\n                        taskGraphics.translateTransform(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 - 2);\n                    }\n                    taskGraphics.drawPath(manualTaskbarPen, manuallineBrush, path);\n                    taskGraphics.restore();\n                    manualline.dashStyle = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfDashStyle.Solid;\n                    if (this.isAutoFit()) {\n                        taskGraphics.drawLine(manualline, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF((renderWidth_1) + startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1));\n                    }\n                    else {\n                        taskGraphics.drawLine(manualline, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF((0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(renderWidth_1) + startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1));\n                    }\n                }\n                else if (!taskbar.isAutoSchedule && !taskbar.isParentTask) {\n                    if (this.isAutoFit()) {\n                        taskGraphics.drawRectangle(manualChildBorderPen, null, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (renderWidth_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    }\n                    else {\n                        taskGraphics.drawRectangle(manualChildBorderPen, null, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(renderWidth_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    }\n                    taskGraphics.save();\n                    taskGraphics.setTransparency(0.87);\n                    if (this.isAutoFit()) {\n                        taskGraphics.drawRectangle(null, manualChildBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (renderWidth_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    }\n                    else {\n                        taskGraphics.drawRectangle(null, manualChildBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(renderWidth_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    }\n                    taskGraphics.restore();\n                    if (this.isAutoFit()) {\n                        taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    }\n                    else {\n                        taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    }\n                    taskbar.progressWidth = taskbar.progressWidth - progressWidth;\n                }\n                else if (!this.isScheduledTask && this.unscheduledTaskBy !== 'duration') {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n                }\n                else if (!this.isScheduledTask && this.unscheduledTaskBy === \"endDate\") {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n                }\n                else {\n                    if (taskbar.isSpliterTask) {\n                        var pervwidth_1 = 0;\n                        var valueChangeBlocker_1 = true;\n                        var lineWidth_1 = 0;\n                        taskbar.segment.map(function (item) {\n                            lineWidth_1 = item.left + item.width;\n                        });\n                        splitline.dashStyle = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfDashStyle.Dot;\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawLine(splitline, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height / 2)), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF((lineWidth_1) + (this.left - cumulativeWidth) + startPoint.x, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height / 2)));\n                        }\n                        else {\n                            taskGraphics.drawLine(splitline, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height / 2)), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF((0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(lineWidth_1) + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + startPoint.x, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height / 2)));\n                        }\n                        taskbar.segment.map(function (data, index) {\n                            var segmenttaskbarPen = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(_this.taskSegmentStyles) ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(_this.taskSegmentStyles[index].taskBorderColor) : taskbarPen_1;\n                            var segmenttaskBrush = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(_this.taskSegmentStyles) ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(_this.taskSegmentStyles[index].taskColor) : taskBrush_1;\n                            if (_this.isAutoFit()) {\n                                taskGraphics.drawRectangle(segmenttaskbarPen, segmenttaskBrush, startPoint.x + (_this.left - cumulativeWidth) + 0.5 + (data.left), startPoint.y + adjustHeight_1, (data.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                                if (template.value || template.image) {\n                                    var imageWidth = void 0;\n                                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                                        imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                        var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                        taskGraphics.drawImage(image, startPoint.x + (_this.left - cumulativeWidth) + 0.5 + (data.left), startPoint.y + adjustHeight_1, (taskbar.taskbarTemplate.image[0].width), (taskbar.taskbarTemplate.image[0].height));\n                                    }\n                                    else {\n                                        imageWidth = 0;\n                                    }\n                                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (_this.left - cumulativeWidth) + 0.5 + (data.left) + imageWidth, startPoint.y + adjustHeight_1, (data.width), (taskbar.height), progressFormat) : '';\n                                }\n                            }\n                            else {\n                                taskGraphics.drawRectangle(segmenttaskbarPen, segmenttaskBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(_this.left - cumulativeWidth) + 0.5 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(data.left), startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(data.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                                if (template.value || template.image) {\n                                    var imageWidth = void 0;\n                                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                                        imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                        var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                        taskGraphics.drawImage(image, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(_this.left - cumulativeWidth) + 0.5 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(data.left), startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].height));\n                                    }\n                                    else {\n                                        imageWidth = 0;\n                                    }\n                                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(_this.left - cumulativeWidth) + 0.5 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(data.left) + imageWidth, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(data.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height), progressFormat) : '';\n                                }\n                            }\n                            pervwidth_1 = data.left + data.width;\n                            if (renderWidth_1 >= pervwidth_1) {\n                                _this.segmentCollection[parseInt(index.toString(), 10)].width = 0;\n                                _this.segmentCollection[parseInt(index.toString(), 10)].left = 0;\n                            }\n                            else {\n                                if (renderWidth_1 >= (pervwidth_1 - data.width)) {\n                                    _this.segmentCollection[parseInt(index.toString(), 10)].left = 0;\n                                }\n                                else {\n                                    _this.segmentCollection[parseInt(index.toString(), 10)].left = ((splitRenderwidth_1 - data.left));\n                                }\n                                if (renderWidth_1 >= (pervwidth_1)) {\n                                    _this.segmentCollection[parseInt(index.toString(), 10)].width = 0;\n                                }\n                                else {\n                                    if (valueChangeBlocker_1) {\n                                        _this.segmentCollection[parseInt(index.toString(), 10)].width = pervwidth_1 - renderWidth_1;\n                                        valueChangeBlocker_1 = false;\n                                    }\n                                }\n                            }\n                            splitRenderwidth_1 = splitRenderwidth_1 + data.width + data.left;\n                        });\n                    }\n                    else {\n                        if (this.isAutoFit()) {\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.value) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.image)) {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (renderWidth_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (renderWidth_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                                    var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                    taskGraphics.drawImage(image, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)((taskbar.height - taskbar.taskbarTemplate.image[0].height) / 0.5), (taskbar.taskbarTemplate.image[0].width / 2.0), (taskbar.taskbarTemplate.image[0].height / 2.0));\n                                }\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value)) {\n                                    var imageWidth = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image) ? taskbar.taskbarTemplate.image[0].width : 0;\n                                    taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (this.left - cumulativeWidth) + imageWidth, (startPoint.y + adjustHeight_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(updatedWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat);\n                                }\n                            }\n                        }\n                        else {\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.value) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.image)) {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(renderWidth_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(renderWidth_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                                var imageWidth = void 0;\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                                    imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                    var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                    taskGraphics.drawImage(image, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 1, startPoint.y + adjustHeight_1 + 1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)((taskbar.height - taskbar.taskbarTemplate.image[0].height) / 2.0), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].height));\n                                }\n                                else {\n                                    imageWidth = 0;\n                                }\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value)) {\n                                    this.stringLeft = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left);\n                                    var result_1 = this.getWidth(taskbar.taskbarTemplate.value, detail.endPoint - this.stringLeft, 15);\n                                    taskGraphics.drawString(result_1.lines[0].text, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + imageWidth, (startPoint.y + adjustHeight_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(updatedWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat);\n                                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(result_1.remainder)) {\n                                        this.remainString = result_1.remainder;\n                                        this.stringLeft = detail.endPoint;\n                                        // this.rightTaskLabel.isLeftCalculated = true;\n                                    }\n                                }\n                            }\n                        }\n                        if (taskbar.isAutoSchedule && !taskbar.isSpliterTask) {\n                            var progressBoundsWidth = 0;\n                            if (this.progressWidth <= renderWidth_1) {\n                                progressBoundsWidth = this.progressWidth;\n                            }\n                            else {\n                                progressBoundsWidth = renderWidth_1;\n                            }\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.image) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.value)) {\n                                if (this.isAutoFit()) {\n                                    taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (progressBoundsWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                                }\n                                else {\n                                    taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(progressBoundsWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                                }\n                            }\n                            this.progressWidth -= progressBoundsWidth;\n                            if (this.parent.labelSettings.taskLabel && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.taskLabel)) {\n                                updatedWidth = progressBoundsWidth;\n                                if (isLabelString) {\n                                    updatedWidth = renderWidth_1;\n                                }\n                                this.stringLeft = this.left;\n                                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value)) {\n                                    var result_2 = this.getWidth(this.taskLabel.toString(), detail.endPoint - this.stringLeft, 15);\n                                    taskGraphics.drawString(result_2.lines[0].text, taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth), (startPoint.y + adjustHeight_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(updatedWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat);\n                                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(result_2.remainder)) {\n                                        this.remainString = result_2.remainder;\n                                        this.stringLeft = detail.endPoint;\n                                        // this.rightTaskLabel.isLeftCalculated = true;\n                                    }\n                                }\n                                else {\n                                    if (this.isAutoFit()) {\n                                        taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + (this.left - cumulativeWidth), (startPoint.y + adjustHeight_1), (updatedWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat);\n                                    }\n                                    else {\n                                        taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth), (startPoint.y + adjustHeight_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(updatedWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (taskbar.isSpliterTask) {\n                        taskbar.segment.map(function (data, index) {\n                            var segmentprogressPen = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(_this.taskSegmentStyles) ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(_this.taskSegmentStyles[index].progressColor) : progressPen_1;\n                            var segmentprogressBrush = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(_this.taskSegmentStyles) ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(_this.taskSegmentStyles[index].progressColor) : progressBrush_1;\n                            if (_this.isAutoFit()) {\n                                taskGraphics.drawRectangle(segmentprogressPen, segmentprogressBrush, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (data.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(segmentprogressPen, segmentprogressBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(data.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                            }\n                            if (_this.segmentCollection[parseInt(index.toString(), 10)].width === 0) {\n                                _this.segmentCollection[parseInt(index.toString(), 10)].progressWidth = 0;\n                            }\n                            else {\n                                if (data.width - _this.segmentCollection[parseInt(index.toString(), 10)].width < data.progressWidth && data.width !== _this.segmentCollection[index].width) {\n                                    _this.segmentCollection[parseInt(index.toString(), 10)].progressWidth = data.progressWidth - (data.width - _this.segmentCollection[index].width);\n                                }\n                            }\n                        });\n                    }\n                }\n                this.left = 0;\n                this.isCompleted = false;\n                this.startPage = pageIndex;\n            }\n            //Task end date is in the range of header split up start and end date\n            else if (endDate <= detail.endDate && detail.startDate <= endDate && !this.isCompleted) {\n                if (!this.isStartPoint) {\n                    this.taskStartPoint = __assign({}, startPoint);\n                    this.isStartPoint = true;\n                }\n                if (!this.isScheduledTask && this.unscheduledTaskBy === 'duration') {\n                    var brush1 = void 0;\n                    var brush2 = void 0;\n                    brush1 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfLinearGradientBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5) + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width) / 2, 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5), 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(taskbar.unscheduledTaskBarColor), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(255, 255, 255));\n                    taskGraphics.drawRectangle(brush1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5), startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    brush2 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfLinearGradientBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5) + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5) + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width) / 2, 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(255, 255, 255), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(taskbar.unscheduledTaskBarColor));\n                    taskGraphics.drawRectangle(brush2, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5) + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width) / 2, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width) / 2, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    if (template.value || template.image) {\n                        var imageWidth = void 0;\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                            imageWidth = taskbar.taskbarTemplate.image[0].width;\n                            var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                            taskGraphics.drawImage(image, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5), startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].height));\n                        }\n                        else {\n                            imageWidth = 0;\n                        }\n                        !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5) + imageWidth, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat) : '';\n                    }\n                }\n                else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                    var path1 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPath();\n                    path1.addEllipse(0, 0, 5, 5); // Circle with radius 5\n                    taskGraphics.save(); // Save the current graphics state  \n                    var lineStartX = startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left + 0.5); // Calculate the endpoint of the line\n                    var lineEndX = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width) + lineStartX - 5;\n                    var lineY = startPoint.y + adjustHeight_1;\n                    taskGraphics.drawLine(manualline, lineStartX, lineY, lineEndX, lineY); // Draw the line first     \n                    taskGraphics.translateTransform(lineEndX, lineY - 2); // Now move the origin to the line's end point to draw the circle        \n                    taskGraphics.drawPath(manualTaskbarPen, manuallineBrush, path1); // Draw the circle at the end of the line  \n                    taskGraphics.restore(); // Restore the graphics state\n                    manualline.dashStyle = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfDashStyle.Solid; // Ensure the line has a solid style\n                }\n                else if (!taskbar.isAutoSchedule && !taskbar.isParentTask) {\n                    taskGraphics.drawRectangle(manualChildBorderPen, null, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left + 0.5), startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    taskGraphics.save();\n                    taskGraphics.setTransparency(0.87);\n                    taskGraphics.drawRectangle(null, manualChildBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left + 0.5), startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    taskGraphics.restore();\n                    taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left + 0.5), startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                }\n                else if (!this.isScheduledTask && this.unscheduledTaskBy === \"endDate\") {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n                }\n                else if (taskbar.isSpliterTask) {\n                    splitline.dashStyle = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfDashStyle.Dot;\n                    taskGraphics.drawLine(splitline, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left) + 0.5, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height / 2)), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF((0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width) + startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left), startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height / 2)));\n                    taskbar.segmentCollection.map(function (data, index) {\n                        var segmenttaskbarPen = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(_this.taskSegmentStyles) ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(_this.taskSegmentStyles[index].taskBorderColor) : taskbarPen_1;\n                        var segmenttaskBrush = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(_this.taskSegmentStyles) ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(_this.taskSegmentStyles[index].taskColor) : taskBrush_1;\n                        if (data.width !== 0) {\n                            taskGraphics.drawRectangle(segmenttaskbarPen, segmenttaskBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5 + data.left), startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(data.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                            if (template.value || template.image) {\n                                var imageWidth = void 0;\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                                    imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                    var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                    taskGraphics.drawImage(image, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5 + data.left), startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].height));\n                                }\n                                else {\n                                    imageWidth = 0;\n                                }\n                                !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5 + data.left) + imageWidth, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(data.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height), progressFormat) : '';\n                            }\n                        }\n                    });\n                }\n                else {\n                    taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5), startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.remainString)) {\n                        var result = this.getWidth(this.remainString, taskbar.width - taskbar.left, 15);\n                        taskGraphics.drawString(result.lines[0].text, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left), (startPoint.y + adjustHeight_1), result.actualSize.width, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat);\n                    }\n                }\n                if (this.isScheduledTask && taskbar.isAutoSchedule && !taskbar.isSpliterTask) {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.image) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.value)) {\n                        taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5), startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.taskLabel)) {\n                        updatedWidth = this.progressWidth;\n                        if (isLabelString) {\n                            updatedWidth = this.width;\n                        }\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value)) {\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value)) {\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.remainString)) {\n                                    var result_3 = this.getWidth(this.remainString, detail.endPoint - this.stringLeft, 15);\n                                    taskGraphics.drawString(result_3.lines[0].text, font, fontColor, fontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left), (startPoint.y + adjustHeight_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(updatedWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat);\n                                }\n                            }\n                        }\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.taskLabel)) {\n                            updatedWidth = this.progressWidth;\n                            if (isLabelString) {\n                                updatedWidth = this.width;\n                            }\n                            taskGraphics.drawString(this.taskLabel.toString(), font, fontColor, fontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left), (startPoint.y + adjustHeight_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(updatedWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat);\n                        }\n                    }\n                }\n                else if (taskbar.isSpliterTask) {\n                    taskbar.segmentCollection.map(function (data, index) {\n                        var segmentprogressPen = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(_this.taskSegmentStyles) ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(_this.taskSegmentStyles[index].progressColor) : progressPen_1;\n                        var segmentprogressBrush = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(_this.taskSegmentStyles) ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(_this.taskSegmentStyles[index].progressColor) : progressBrush_1;\n                        taskGraphics.drawRectangle(segmentprogressPen, segmentprogressBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5 + data.left), startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(data.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    });\n                }\n                this.isCompleted = true;\n                this.endPage = pageIndex;\n            }\n            //Header splitup start and end date with in the task start and end date.\n            //So the task is takes entire width of page.\n            else if (startDate < detail.startDate && endDate > detail.endDate) {\n                if (!this.isStartPoint) {\n                    this.taskStartPoint = __assign({}, startPoint);\n                    this.isStartPoint = true;\n                }\n                if (!this.isScheduledTask && this.unscheduledTaskBy === 'duration') {\n                    var brush1 = void 0;\n                    var brush2 = void 0;\n                    brush1 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfLinearGradientBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) + 0.5 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(detail.totalWidth) / 2, 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left), 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(taskbar.unscheduledTaskBarColor), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(255, 255, 255));\n                    taskGraphics.drawRectangle(brush1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(detail.totalWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    brush2 = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfLinearGradientBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) + 0.5 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(detail.totalWidth), 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(detail.totalWidth) / 2, 0), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(255, 255, 255), new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(taskbar.unscheduledTaskBarColor));\n                    taskGraphics.drawRectangle(brush2, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) + 0.5 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(detail.totalWidth) / 2, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(detail.totalWidth) / 2, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    if (template.value || template.image) {\n                        var imageWidth = void 0;\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                            imageWidth = taskbar.taskbarTemplate.image[0].width;\n                            var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                            taskGraphics.drawImage(image, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].height));\n                        }\n                        else {\n                            imageWidth = 0;\n                        }\n                        !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left + 0.5) + imageWidth, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat) : 0;\n                    }\n                }\n                else if (!this.isScheduledTask && this.unscheduledTaskBy === \"endDate\") {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n                }\n                else if (!taskbar.isAutoSchedule && !taskbar.isParentTask) {\n                    taskGraphics.drawRectangle(manualChildBorderPen, null, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(detail.totalWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    taskGraphics.save();\n                    taskGraphics.setTransparency(0.87);\n                    taskGraphics.drawRectangle(null, manualChildBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(detail.totalWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    taskGraphics.restore();\n                    var progressBoundsWidth = 0;\n                    if (this.progressWidth <= detail.totalWidth) {\n                        progressBoundsWidth = this.progressWidth;\n                    }\n                    else {\n                        progressBoundsWidth = detail.totalWidth;\n                    }\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.image) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.value)) {\n                        taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(progressBoundsWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    }\n                    this.progressWidth -= progressBoundsWidth;\n                    taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(progressBoundsWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                }\n                else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                    manualline.dashStyle = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfDashStyle.Solid;\n                    taskGraphics.drawLine(manualline, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(detail.totalWidth), startPoint.y + adjustHeight_1);\n                }\n                else {\n                    taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(detail.totalWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.value)) {\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.remainString)) {\n                            var result_4 = this.getWidth(this.remainString, detail.endPoint - this.stringLeft, 15);\n                            taskGraphics.drawString(result_4.lines[0].text, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) + 0.5, (startPoint.y + adjustHeight_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(detail.totalWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat);\n                        }\n                    }\n                    if (this.isScheduledTask && !taskbar.isParentTask) {\n                        var progressBoundsWidth = 0;\n                        if (this.progressWidth <= detail.totalWidth) {\n                            progressBoundsWidth = this.progressWidth;\n                        }\n                        else {\n                            progressBoundsWidth = detail.totalWidth;\n                        }\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.image) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(template.value)) {\n                            taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(progressBoundsWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height));\n                        }\n                        this.progressWidth -= progressBoundsWidth;\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.taskLabel)) {\n                            updatedWidth = progressBoundsWidth;\n                            if (isLabelString) {\n                                updatedWidth = this.width;\n                            }\n                            taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left), (startPoint.y + adjustHeight_1), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(updatedWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height), progressFormat);\n                        }\n                    }\n                }\n                this.isCompleted = false;\n                this.width -= detail.totalWidth;\n            }\n            if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n                if (detail.startDate <= taskbar.baselineStartDate && taskbar.baselineEndDate <= detail.endDate) {\n                    if (!this.isStartPoint) {\n                        this.taskStartPoint = __assign({}, startPoint);\n                        this.isStartPoint = true;\n                    }\n                    if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (taskbar.baselineLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height + 3), (taskbar.baselineWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.baselineHeight));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.baselineLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height + 3), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.baselineWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.baselineHeight));\n                        }\n                    }\n                    this.isCompletedBaseline = true;\n                    this.startPage = pageIndex;\n                    this.endPage = pageIndex;\n                }\n                else if (detail.startDate <= taskbar.baselineStartDate && detail.endDate >= taskbar.baselineStartDate && (taskbar.baselineEndDate >= detail.endDate)) {\n                    if (!this.isStartPoint) {\n                        this.taskStartPoint = __assign({}, startPoint);\n                        this.isStartPoint = true;\n                    }\n                    var width = this.baselineWidth;\n                    var renderWidth = 0;\n                    renderWidth = (detail.totalWidth - (taskbar.baselineLeft - cumulativeWidth));\n                    if (width < renderWidth) {\n                        renderWidth = width;\n                    }\n                    if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (taskbar.baselineLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height + 3), (renderWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.baselineHeight));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.baselineLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height + 3), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(renderWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.baselineHeight));\n                        }\n                    }\n                    taskbar.baselineWidth = taskbar.baselineWidth - renderWidth;\n                    this.baselineLeft = 0;\n                    this.isCompletedBaseline = false;\n                    this.startPage = pageIndex;\n                }\n                else if (taskbar.baselineEndDate <= detail.endDate && detail.startDate <= taskbar.baselineEndDate && !this.isCompletedBaseline) {\n                    if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (taskbar.baselineLeft + 0.5), startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height + 3), (taskbar.baselineWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.baselineHeight));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.baselineLeft + 0.5), startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height + 3), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.baselineWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.baselineHeight));\n                        }\n                    }\n                    this.isCompletedBaseline = true;\n                    this.endPage = pageIndex;\n                }\n                else if (taskbar.baselineStartDate < detail.startDate && taskbar.baselineEndDate > detail.endDate) {\n                    if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (taskbar.baselineLeft) + 0.5, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height + 3), (detail.totalWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.baselineHeight));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.baselineLeft) + 0.5, startPoint.y + adjustHeight_1 + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.height + 3), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(detail.totalWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.baselineHeight));\n                        }\n                    }\n                    this.isCompletedBaseline = false;\n                    this.baselineWidth -= detail.totalWidth;\n                }\n            }\n            if (!this.isAutoSchedule && taskbar.isParentTask) {\n                if (detail.startDate <= taskbar.autoStartDate && taskbar.autoEndDate <= detail.endDate) {\n                    if (!this.isStartPoint) {\n                        this.taskStartPoint = __assign({}, startPoint);\n                        this.isStartPoint = true;\n                    }\n                    if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (this.autoWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.autoWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        taskGraphics.save();\n                        taskGraphics.setTransparency(0.87);\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(null, manualBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (this.autoWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(null, manualBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.autoWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        taskGraphics.restore();\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (taskbar.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                    }\n                    this.isCompletedAutotask = true;\n                    this.startPage = pageIndex;\n                    this.endPage = pageIndex;\n                }\n                else if (detail.startDate <= taskbar.autoStartDate && detail.endDate >= taskbar.autoStartDate && (taskbar.autoEndDate >= detail.endDate)) {\n                    if (!this.isStartPoint) {\n                        this.taskStartPoint = __assign({}, startPoint);\n                        this.isStartPoint = true;\n                    }\n                    var renderWidth = 0;\n                    var progressWidth = 0;\n                    renderWidth = (detail.totalWidth - (this.autoLeft - cumulativeWidth));\n                    progressWidth = (detail.totalWidth - (this.autoLeft - cumulativeWidth));\n                    if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (renderWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(renderWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        taskGraphics.save();\n                        taskGraphics.setTransparency(0.87);\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(null, manualBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (renderWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(null, manualBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(renderWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        taskGraphics.restore();\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (taskbar.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        taskbar.autoWidth = taskbar.autoWidth - renderWidth;\n                        taskbar.progressWidth = taskbar.progressWidth - progressWidth;\n                    }\n                    this.autoLeft = 0;\n                    this.isCompletedAutotask = false;\n                    this.startPage = pageIndex;\n                }\n                else if (taskbar.autoEndDate <= detail.endDate && detail.startDate <= taskbar.autoEndDate && !this.isCompletedAutotask) {\n                    if (!this.isStartPoint) {\n                        this.taskStartPoint = __assign({}, startPoint);\n                        this.isStartPoint = true;\n                    }\n                    else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                        taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.autoWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        taskGraphics.save();\n                        taskGraphics.setTransparency(0.87);\n                        taskGraphics.drawRectangle(manualBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.autoWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        taskGraphics.restore();\n                        taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.progressWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                    }\n                    this.isCompletedAutotask = true;\n                    this.endPage = pageIndex;\n                }\n                else if (taskbar.autoStartDate < detail.startDate && taskbar.autoEndDate > detail.endDate) {\n                    if (!this.isStartPoint) {\n                        this.taskStartPoint = __assign({}, startPoint);\n                        this.isStartPoint = true;\n                    }\n                    if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                        var progressBoundsWidth = 0;\n                        if (this.progressWidth <= detail.totalWidth) {\n                            progressBoundsWidth = this.progressWidth;\n                        }\n                        else {\n                            progressBoundsWidth = detail.totalWidth;\n                        }\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + (this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, (progressBoundsWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        else {\n                            if (taskbar.progressWidth !== 0) {\n                                taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(progressBoundsWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                            }\n                        }\n                        this.progressWidth -= progressBoundsWidth;\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + (this.autoLeft) + 0.5, startPoint.y + adjustHeight_1 + 10, (detail.totalWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.autoLeft) + 0.5, startPoint.y + adjustHeight_1 + 10, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(detail.totalWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        taskGraphics.save();\n                        taskGraphics.setTransparency(0.87);\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(null, manualBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (detail.totalWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(null, manualBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.autoLeft) + 0.5, startPoint.y + adjustHeight_1 + 10, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(detail.totalWidth), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(12));\n                        }\n                        taskGraphics.restore();\n                    }\n                    this.isCompletedAutotask = false;\n                    this.autoWidth -= detail.totalWidth;\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.indicators) && taskbar.indicators.length > 0) {\n                taskbar.indicators.map(function (items, index) {\n                    var currendate = _this.parent.dateValidationModule.getDateFromFormat(items.date, true);\n                    if (detail.startDate <= currendate && currendate <= detail.endDate) {\n                        var leftValue = _this.parent.chartRowsModule.getIndicatorleft(items.date);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(items.base64)) {\n                            var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(items.base64);\n                            if (_this.isAutoFit()) {\n                                taskGraphics.drawImage(image, (startPoint.x + (leftValue - cumulativeWidth) + 0.5 + 10) - _this.parent.perDayWidth / 2, startPoint.y + adjustHeight_1, imageSize_1, imageSize_1);\n                                var state = taskGraphics.save();\n                                taskGraphics.setClip(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.RectangleF(startPoint.x, startPoint.y, page['contentWidth'], rowHeight));\n                                taskGraphics.drawString(items.name, font, null, _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBrushes.Black, (startPoint.x + (leftValue - cumulativeWidth) + 0.5 + 15 + imageSize_1) - _this.parent.perDayWidth / 2, startPoint.y + adjustHeight_1, null);\n                                taskGraphics.restore(state);\n                            }\n                            else {\n                                taskGraphics.drawImage(image, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(leftValue - cumulativeWidth) + 0.5 + 10, startPoint.y + adjustHeight_1, imageSize_1, imageSize_1);\n                                var state = taskGraphics.save();\n                                taskGraphics.setClip(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.RectangleF(startPoint.x, startPoint.y, page['contentWidth'], rowHeight));\n                                taskGraphics.drawString(items.name, font, null, _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBrushes.Black, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(leftValue - cumulativeWidth) + 0.5 + 15 + imageSize_1, startPoint.y + adjustHeight_1, null);\n                                taskGraphics.restore(state);\n                            }\n                        }\n                    }\n                });\n            }\n        }\n        else {\n            this.drawMilestone(page, startPoint, detail, cumulativeWidth, taskbar, false);\n            if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n                this.drawMilestone(page, startPoint, detail, cumulativeWidth, taskbar, true);\n            }\n        }\n        this.drawRightLabel(page, startPoint, detail, cumulativeWidth);\n        return isNextPage;\n    };\n    /* eslint-enable */\n    /**\n     * @param {IGanttStyle} ganttStyle .\n     * @returns {PdfFont}\n     * Customizes the font based on the Gantt style.\n     */\n    PdfGanttTaskbarCollection.prototype.getPdfFont = function (ganttStyle) {\n        var font;\n        if (ganttStyle && ganttStyle.label && (ganttStyle.label.fontSize || ganttStyle.label.fontStyle ||\n            ganttStyle.label.fontFamily)) {\n            var fontSize = ganttStyle.label.fontSize ? ganttStyle.label.fontSize : 9;\n            var fontFamilyValue = ganttStyle.label.fontFamily;\n            var fontFamily = ganttStyle.label.fontFamily ?\n                fontFamilyValue : this.fontFamily;\n            var fontStyleValue = ganttStyle.label.fontStyle;\n            var fontStyle = ganttStyle.label.fontStyle ?\n                this.parent.pdfExportModule.helper['getFontStyle'](fontStyleValue) : _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontStyle.Regular;\n            font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(fontFamily, fontSize, fontStyle);\n        }\n        return font;\n    };\n    /* eslint-enable */\n    /**\n     * @param {PdfPage} page .\n     * @param {PointF} startPoint .\n     * @param {TimelineDetails} detail .\n     * @param {number} cumulativeWidth .\n     * @returns {void}\n     * Draw task right side label\n     */\n    PdfGanttTaskbarCollection.prototype.drawRightLabel = function (page, startPoint, detail, cumulativeWidth) {\n        var left;\n        var graphics = page.graphics;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.rightTaskLabel.value)) {\n            if (this.rightTaskLabel.isLeftCalculated) {\n                left = this.rightTaskLabel.left;\n            }\n            else {\n                if (this.isAutoFit()) {\n                    left = (this.rightTaskLabel.left);\n                }\n                else {\n                    left = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.rightTaskLabel.left);\n                }\n            }\n            var actualLeft = void 0;\n            if (this.isAutoFit()) {\n                actualLeft = left - (cumulativeWidth) + startPoint.x;\n            }\n            else {\n                actualLeft = left - (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(cumulativeWidth) + startPoint.x;\n            }\n            var leftForLabel = this.isAutoFit() ? (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(left) : left;\n            if (detail.startPoint <= leftForLabel && leftForLabel < detail.endPoint &&\n                !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.rightTaskLabel.value) && !this.rightTaskLabel.isCompleted) {\n                var result = this.getWidth(this.rightTaskLabel.value, detail.endPoint - leftForLabel, 15);\n                var font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(this.fontFamily, 9);\n                var customizedFont = void 0;\n                var ganttStyle = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label) && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label.fontSize)\n                    || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label.fontStyle) ||\n                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label.fontFamily))) {\n                    customizedFont = this.getPdfFont(ganttStyle);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(customizedFont)) {\n                    font = customizedFont;\n                }\n                var padding = { left: 0, right: 0, top: 0, bottom: 0 };\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label) &&\n                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label.padding)) {\n                    padding = ganttStyle.label.padding;\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) &&\n                    this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n                    font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n                }\n                var adjustHeight = ((0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.parent.rowHeight) - result.actualSize.height) / 2;\n                var point = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(actualLeft + padding.left, startPoint.y + adjustHeight + padding.top);\n                var size = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF((page['contentWidth'] - actualLeft) - (padding.left + padding.right), result.actualSize.height - (padding.top + padding.bottom));\n                var labelBounds = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.RectangleF(point, size);\n                var labelFormat = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStringFormat();\n                labelFormat.alignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfTextAlignment.Left;\n                labelFormat.lineAlignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfVerticalAlignment.Middle;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label.format) &&\n                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label.format.alignment)) {\n                    labelFormat.alignment = ganttStyle.label.format.alignment;\n                }\n                if (result.actualSize.width > 0) {\n                    var fontColor = null;\n                    var ganttStyle_1 = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle;\n                    var fontBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush((ganttStyle_1 && ganttStyle_1.label && ganttStyle_1.label.fontBrush) ?\n                        ganttStyle_1.label.fontBrush : this.labelColor);\n                    /* eslint-disable-next-line */\n                    var labelBrush = null;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle_1) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle_1.label) &&\n                        !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle_1.label.backgroundColor)) {\n                        labelBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(ganttStyle_1.label.backgroundColor);\n                    }\n                    var lablePen = null;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle_1) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle_1.label) &&\n                        !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle_1.label.borderColor)) {\n                        lablePen = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(ganttStyle_1.label.borderColor);\n                    }\n                    var strSize = font.measureString(result.lines[0].text);\n                    graphics.drawRectangle(lablePen, labelBrush, labelBounds.x - 3, labelBounds.y, strSize.width + 6, strSize.height);\n                    graphics.drawString(result.lines[0].text, font, fontColor, fontBrush, labelBounds.x, labelBounds.y, size.width, size.height, labelFormat);\n                    if (result.remainder !== null) {\n                        this.rightTaskLabel.value = result.remainder;\n                        this.rightTaskLabel.left = detail.endPoint;\n                        this.rightTaskLabel.isLeftCalculated = true;\n                    }\n                    else {\n                        this.rightTaskLabel.isCompleted = true;\n                    }\n                }\n                else {\n                    this.rightTaskLabel.left = detail.endPoint;\n                }\n            }\n        }\n        else {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.rightLabel.image)) {\n                this.previousWidthofRightImage = 0;\n                this.previousWidthofRightValue = 0;\n                for (var i = 0; i < this.labelSettings.rightLabel.image.length; i++) {\n                    this.drawRigthlabelImage(page, startPoint, detail, cumulativeWidth, this.labelSettings.rightLabel.image[i]);\n                    if (this.labelSettings.rightLabel.value) {\n                        var value = this.labelSettings.rightLabel.value.split(',');\n                        if (value) {\n                            this.rightTaskLabel.isCompleted = false;\n                            this.drawRightLabelValue(page, startPoint, detail, cumulativeWidth - this.spaceBetweenImageAndValue, value[i]);\n                        }\n                    }\n                }\n            }\n            else if (this.labelSettings.rightLabel.value) {\n                this.drawRightLabelValue(page, startPoint, detail, cumulativeWidth, this.labelSettings.rightLabel.value);\n            }\n        }\n    };\n    PdfGanttTaskbarCollection.prototype.drawRigthlabelImage = function (page, startPoint, detail, cumulativeWidth, rightImage) {\n        var left;\n        var graphics = page.graphics;\n        var labelBounds;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.rightLabel) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.rightLabel.image)) {\n            if (this.labelSettings.isLeftCalculated) {\n                left = this.rightTaskLabel.left;\n            }\n            else {\n                if (this.isAutoFit()) {\n                    if (this.labelSettings.rightLabel.image.length > 1) {\n                        left = this.rightTaskLabel.left + +this.previousWidthofRightValue;\n                        this.previousWidthofRightImage = rightImage.width;\n                    }\n                    else {\n                        left = (this.rightTaskLabel.left);\n                    }\n                }\n                else {\n                    var value = void 0;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.rightLabel.value)) {\n                        value = this.labelSettings.rightLabel.value.split(',');\n                    }\n                    if (this.labelSettings.rightLabel.image.length > 1 && value.length > 1) {\n                        left = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.rightTaskLabel.left) + this.previousWidthofRightValue;\n                        this.previousWidthofRightImage = rightImage.width;\n                    }\n                    else if (this.labelSettings.rightLabel.image.length > 1) {\n                        left = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.rightTaskLabel.left) + this.previousWidthofRightImage;\n                        this.previousWidthofRightImage = rightImage.width;\n                    }\n                    else {\n                        left = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.rightTaskLabel.left);\n                    }\n                }\n            }\n            var actualLeft = void 0;\n            if (this.isAutoFit()) {\n                actualLeft = left - (cumulativeWidth) + startPoint.x;\n            }\n            else {\n                actualLeft = left - (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(cumulativeWidth) + startPoint.x;\n            }\n            var leftForLabel = this.isAutoFit() ? (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(left) : left;\n            if (detail.startPoint <= leftForLabel && leftForLabel < detail.endPoint &&\n                !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.rightLabel) && !this.rightTaskLabel.isCompleted) {\n                var result = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(rightImage.width, rightImage.height);\n                var adjustHeight = ((0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.parent.rowHeight) - result.height) / 2;\n                var point = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(actualLeft, startPoint.y + adjustHeight);\n                var size = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(result.width, result.height);\n                labelBounds = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.RectangleF(point, size);\n                var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(rightImage.base64);\n                if (result.width > 0) {\n                    graphics.drawImage(image, labelBounds.x, labelBounds.y, result.width, result.height);\n                    if (this.labelSettings.rightLabel.value !== null) {\n                        this.rightTaskLabel.isLeftCalculated = true;\n                    }\n                    else {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.rightLabel.value)) {\n                            this.rightTaskLabel.isCompleted = true;\n                        }\n                    }\n                }\n                else {\n                    this.rightTaskLabel.left = detail.endPoint;\n                }\n            }\n        }\n    };\n    PdfGanttTaskbarCollection.prototype.drawRightLabelValue = function (page, startPoint, detail, cumulativeWidth, rightString) {\n        var left;\n        var graphics = page.graphics;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.rightLabel.value)) {\n            if (this.labelSettings.isLeftCalculated) {\n                left = this.rightTaskLabel.left;\n            }\n            else {\n                if (this.isAutoFit()) {\n                    if (this.labelSettings.rightLabel.image) {\n                        if (this.labelSettings.rightLabel.image.length > 1) {\n                            left = this.rightTaskLabel.left + this.previousWidthofRightImage + this.previousWidthofRightValue;\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(rightString)) {\n                                var result = this.getWidthofrightLabel(rightString, detail.endPoint - left, 15);\n                                this.previousWidthofRightValue += result.actualSize.width + this.previousWidthofRightImage;\n                            }\n                        }\n                        else {\n                            left = this.rightTaskLabel.left + this.labelSettings.rightLabel.image[0].width;\n                        }\n                    }\n                    else {\n                        left = (this.rightTaskLabel.left);\n                    }\n                }\n                else {\n                    if (this.labelSettings.rightLabel.image) {\n                        if (this.labelSettings.rightLabel.image.length > 1) {\n                            left = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.rightTaskLabel.left) + this.previousWidthofRightImage + this.previousWidthofRightValue;\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(rightString)) {\n                                var result = this.getWidthofrightLabel(rightString, detail.endPoint - left, 15);\n                                this.previousWidthofRightValue += result.actualSize.width + this.previousWidthofRightImage;\n                            }\n                        }\n                        else {\n                            left = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.rightTaskLabel.left) + this.labelSettings.rightLabel.image[0].width;\n                        }\n                    }\n                    else {\n                        left = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.rightTaskLabel.left);\n                    }\n                }\n            }\n            var actualLeft = void 0;\n            if (this.isAutoFit()) {\n                actualLeft = left - (cumulativeWidth) + startPoint.x;\n            }\n            else {\n                actualLeft = left - (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(cumulativeWidth) + startPoint.x;\n            }\n            var leftForLabel = this.isAutoFit() ? (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(left) : left;\n            if (detail.startPoint <= leftForLabel && leftForLabel < detail.endPoint &&\n                !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(rightString) && !this.rightTaskLabel.isCompleted) {\n                var result = this.getWidthofrightLabel(rightString, detail.endPoint - leftForLabel, 15);\n                var font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(this.fontFamily, 9);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) &&\n                    this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n                    font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n                }\n                var adjustHeight = ((0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.parent.rowHeight) - result.actualSize.height) / 2;\n                var point = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(actualLeft, startPoint.y + adjustHeight);\n                var size = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(result.actualSize.width, result.actualSize.height);\n                var labelBound = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.RectangleF(point, size);\n                var labelFormat = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStringFormat();\n                labelFormat.alignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfTextAlignment.Right;\n                labelFormat.lineAlignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfVerticalAlignment.Middle;\n                if (result.actualSize.width > 0) {\n                    var fontColor = null;\n                    var fontBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(this.labelColor);\n                    var newFont = (this.labelSettings.rightLabel.fontStyle.fontSize) ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(this.labelSettings.rightLabel.fontStyle.fontFamily, this.labelSettings.rightLabel.fontStyle.fontSize, this.labelSettings.rightLabel.fontStyle.fontStyle) : font;\n                    var newFontBrush = this.labelSettings.rightLabel.fontStyle.fontColor ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(this.labelSettings.rightLabel.fontStyle.fontColor) : fontBrush;\n                    /* eslint-disable-next-line */\n                    graphics.drawString(rightString, newFont, fontColor, newFontBrush, labelBound.x, labelBound.y, result.actualSize.width, result.actualSize.height, labelFormat);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(result.remainder) && result.remainder !== null) {\n                        this.rightTaskLabel.value = result.remainder;\n                        this.rightTaskLabel.left = detail.endPoint;\n                        this.rightTaskLabel.isLeftCalculated = true;\n                    }\n                    else {\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.rightLabel.value)) {\n                            this.rightTaskLabel.isCompleted = true;\n                        }\n                    }\n                }\n                else {\n                    this.rightTaskLabel.left = detail.endPoint;\n                }\n            }\n        }\n    };\n    /**\n     * @param {PdfPage} page .\n     * @param {PointF} startPoint .\n     * @param {TimelineDetails} detail .\n     * @param {number} cumulativeWidth .\n     * @param {PdfGanttTaskbarCollection} taskbar .\n     * @returns {void}\n     * Draw task left task label\n     */\n    PdfGanttTaskbarCollection.prototype.drawLeftLabel = function (page, startPoint, detail, cumulativeWidth, taskbar) {\n        var graphics = page.graphics;\n        var left;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.leftTaskLabel.value)) {\n            var labelLeft = 0;\n            labelLeft = this.left;\n            if (!this.leftTaskLabel.isLeftCalculated) {\n                var result = this.getWidth(this.leftTaskLabel.value, Number.MAX_VALUE, 15);\n                var reduceLeft = this.isMilestone ? Math.floor(this.parent.chartRowsModule.taskBarHeight / 2) + 33 : 33; // 33 indicates default timeline cell width\n                if (this.isAutoFit()) {\n                    left = (labelLeft - reduceLeft) - result.actualSize.width;\n                }\n                else {\n                    left = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(labelLeft - reduceLeft) - result.actualSize.width;\n                }\n                this.leftTaskLabel.left = left;\n                this.leftTaskLabel.isLeftCalculated = true;\n            }\n            else {\n                left = this.leftTaskLabel.left;\n            }\n            var actualLeft = void 0;\n            if (this.isAutoFit()) {\n                actualLeft = left - (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(cumulativeWidth) + startPoint.x;\n                if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                    var leftValue = taskbar.left - taskbar.autoLeft;\n                    if (taskbar.left < taskbar.autoLeft) {\n                        actualLeft = left - cumulativeWidth + startPoint.x;\n                    }\n                    else {\n                        actualLeft = left - cumulativeWidth + startPoint.x - leftValue;\n                    }\n                }\n            }\n            else {\n                actualLeft = left - (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(cumulativeWidth) + startPoint.x;\n                if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                    var leftValue = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.left) - (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.autoLeft);\n                    if (taskbar.left < taskbar.autoLeft) {\n                        actualLeft = left - (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(cumulativeWidth) + startPoint.x;\n                    }\n                    else {\n                        actualLeft = left - (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(cumulativeWidth) + startPoint.x - leftValue;\n                    }\n                }\n            }\n            if (detail.startPoint <= left && left < detail.endPoint && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.leftTaskLabel.value)\n                && !this.leftTaskLabel.isCompleted) {\n                var result = this.getWidth(this.leftTaskLabel.value, detail.endPoint - left, 15);\n                var font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(this.fontFamily, 9);\n                var customizedFont = void 0;\n                var ganttStyle = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label) && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label.fontSize)\n                    || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label.fontStyle) ||\n                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label.fontFamily))) {\n                    customizedFont = this.getPdfFont(ganttStyle);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(customizedFont)) {\n                    font = customizedFont;\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) &&\n                    this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n                    font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n                }\n                var padding = { left: 0, right: 0, top: 0, bottom: 0 };\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label) &&\n                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label.padding)) {\n                    padding = ganttStyle.label.padding;\n                }\n                var adjustHeight = ((0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.parent.rowHeight) - result.actualSize.height) / 2;\n                var rightLabelpoint = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(actualLeft + padding.left, startPoint.y + adjustHeight + padding.top);\n                var rightLabelSize = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(result.actualSize.width - (padding.left + padding.right), result.actualSize.height - (padding.top + padding.bottom));\n                var rightLabelBounds = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.RectangleF(rightLabelpoint, rightLabelSize);\n                var rightLabelFormat = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStringFormat();\n                rightLabelFormat.alignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfTextAlignment.Right;\n                rightLabelFormat.lineAlignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfVerticalAlignment.Middle;\n                if (result.actualSize.width > 0) {\n                    var fontColor = null;\n                    /* eslint-disable-next-line */\n                    var fontBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush((ganttStyle && ganttStyle.label && ganttStyle.label.fontBrush) ?\n                        ganttStyle.label.fontBrush : this.labelColor);\n                    /* eslint-disable-next-line */\n                    var labelBrush = null;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label) &&\n                        !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label.backgroundColor)) {\n                        labelBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(ganttStyle.label.backgroundColor);\n                    }\n                    var lablePen = null;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label) &&\n                        !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle.label.borderColor)) {\n                        lablePen = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(ganttStyle.label.borderColor);\n                    }\n                    var strSize = font.measureString(result.lines[0].text);\n                    graphics.drawRectangle(lablePen, labelBrush, rightLabelBounds.x - 3, rightLabelBounds.y, strSize.width + 6, strSize.height);\n                    graphics.drawString(result.lines[0].text, font, fontColor, fontBrush, rightLabelBounds.x, rightLabelBounds.y, result.actualSize.width, result.actualSize.height, rightLabelFormat);\n                    if (result.remainder !== null) {\n                        this.leftTaskLabel.value = result.remainder;\n                        this.leftTaskLabel.left = detail.endPoint;\n                    }\n                    else {\n                        this.leftTaskLabel.isCompleted = true;\n                    }\n                }\n                else {\n                    this.leftTaskLabel.left = detail.endPoint;\n                }\n            }\n        }\n        else {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.leftLabel) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.leftLabel.image)) {\n                this.previousWidthofLeftImage = 0;\n                this.previousWidthofLeftValue = 0;\n                this.totalLeftWidth = 0;\n                for (var i = 0; i < this.labelSettings.leftLabel.image.length; i++) {\n                    var value = void 0;\n                    var result = void 0;\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.leftLabel.value)) {\n                        value = this.labelSettings.leftLabel.value.split(',');\n                        result = this.getWidth(value[i], Number.MAX_VALUE, 15);\n                    }\n                    var totalstringWidth = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(result) ? result.actualSize.width : 0;\n                    this.totalLeftWidth += this.labelSettings.leftLabel.image[i].width + totalstringWidth;\n                }\n                for (var i = 0; i < this.labelSettings.leftLabel.image.length; i++) {\n                    this.drawLeftLabelImage(page, startPoint, detail, cumulativeWidth, this.labelSettings.leftLabel.image[i]);\n                    if (this.labelSettings.leftLabel.value) {\n                        var value = this.labelSettings.leftLabel.value.split(',');\n                        if (value) {\n                            this.drawLeftLabelValue(page, startPoint, detail, cumulativeWidth - this.spaceBetweenImageAndValue, value[i]);\n                        }\n                    }\n                }\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.leftLabel) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.leftLabel.value)) {\n                this.drawLeftLabelValue(page, startPoint, detail, cumulativeWidth, this.labelSettings.leftLabel.value);\n            }\n        }\n    };\n    PdfGanttTaskbarCollection.prototype.drawLeftLabelImage = function (page, startPoint, detail, cumulativeWidth, leftLabelImage) {\n        var graphics = page.graphics;\n        var left;\n        var labelLeft = 0;\n        labelLeft = this.left;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.leftLabel) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.leftLabel.image)) {\n            if (!this.leftTaskLabel.isLeftCalculated) {\n                var result = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(leftLabelImage.width, leftLabelImage.height);\n                var reduceLeft = this.isMilestone ? Math.floor(this.parent.chartRowsModule.taskBarHeight / 2) + 33 : 33; // 33 indicates default timeline cell width\n                var value = this.labelSettings.leftLabel.value.split(',');\n                if (this.isAutoFit()) {\n                    if (this.labelSettings.leftLabel.image.length > 0 && value.length > 0) {\n                        left = labelLeft - this.totalLeftWidth - result.width;\n                        this.previousWidthofLeftImage += result.width;\n                    }\n                    else {\n                        left = (labelLeft - reduceLeft) - result.width;\n                    }\n                }\n                else {\n                    if (this.labelSettings.leftLabel.image.length > 0 && value.length > 0) {\n                        left = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(labelLeft) - this.totalLeftWidth - result.width;\n                        this.previousWidthofLeftImage += result.width;\n                    }\n                    else {\n                        left = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(labelLeft - reduceLeft) - result.width;\n                    }\n                }\n                this.leftTaskLabel.left = left;\n                this.leftTaskLabel.isLeftCalculated = true;\n            }\n            else {\n                if (this.labelSettings.leftLabel.image.length > 1) {\n                    left = this.leftTaskLabel.left + this.previousWidthofLeftValue;\n                }\n                else {\n                    left = this.leftTaskLabel.left;\n                }\n            }\n            var actualLeft = void 0;\n            if (this.isAutoFit()) {\n                actualLeft = left - (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(cumulativeWidth) + startPoint.x;\n            }\n            else {\n                actualLeft = left - (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(cumulativeWidth) + startPoint.x;\n            }\n            if (detail.startPoint <= left && left < detail.endPoint && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(leftLabelImage)\n                && !this.leftTaskLabel.isCompleted) {\n                var result = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(leftLabelImage.width, leftLabelImage.height);\n                var adjustHeight = ((0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.parent.rowHeight) - result.height) / 2;\n                var rightLabelpoint = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(actualLeft, startPoint.y + adjustHeight);\n                var rightLabelSize = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(result.width, result.height);\n                var rightLabelBounds = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.RectangleF(rightLabelpoint, rightLabelSize);\n                var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(leftLabelImage.base64);\n                if (result.width > 0) {\n                    graphics.drawImage(image, rightLabelBounds.x, rightLabelBounds.y, result.width, result.height);\n                    this.totalLeftWidth = this.totalLeftWidth - result.width;\n                }\n                else {\n                    this.leftTaskLabel.left = detail.endPoint;\n                }\n            }\n        }\n    };\n    PdfGanttTaskbarCollection.prototype.drawLeftLabelValue = function (page, startPoint, detail, cumulativeWidth, leftLabelValue) {\n        var graphics = page.graphics;\n        var left;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(leftLabelValue)) {\n            var labelLeft = 0;\n            labelLeft = this.left;\n            if (!this.leftTaskLabel.isLeftCalculated) {\n                var result = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n                var reduceLeft = this.isMilestone ? Math.floor(this.parent.chartRowsModule.taskBarHeight / 2) + 33 : 33; // 33 indicates default timeline cell width\n                var value = this.labelSettings.leftLabel.value.split(',');\n                if (this.isAutoFit()) {\n                    var isLeftImageExist = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.leftLabel.image) ? true : false;\n                    var imageLength = isLeftImageExist ? this.labelSettings.leftLabel.image.length : 0;\n                    if (value.length === 1 && isLeftImageExist && imageLength === 1) {\n                        left = this.leftTaskLabel.left + this.previousWidthofLeftImage;\n                        this.labelSettings.left = left;\n                        var result_5 = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n                        this.previousWidthofLeftValue += this.previousWidthofLeftImage + result_5.actualSize.width;\n                    }\n                    else if (value.length > 1 && isLeftImageExist && imageLength > 1) {\n                        var totalWidth = (this.previousWidthofLeftValue !== 0) ? this.previousWidthofLeftValue\n                            + this.previousWidthofLeftImage : this.previousWidthofLeftImage;\n                        left = this.leftTaskLabel.left + totalWidth;\n                        this.labelSettings.left = left;\n                        var result_6 = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n                        this.previousWidthofLeftValue += this.previousWidthofLeftImage + result_6.actualSize.width;\n                    }\n                    else {\n                        left = (labelLeft - reduceLeft) - result.actualSize.width;\n                    }\n                }\n                else {\n                    left = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(labelLeft - reduceLeft) - result.actualSize.width;\n                }\n                this.leftTaskLabel.left = left;\n                this.leftTaskLabel.isLeftCalculated = true;\n            }\n            else {\n                var value = this.labelSettings.leftLabel.value.split(',');\n                if (value.length === 1) {\n                    left = this.leftTaskLabel.left + (this.previousWidthofLeftImage ? this.previousWidthofLeftImage : 0);\n                    this.labelSettings.left = left;\n                    var result = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n                    this.previousWidthofLeftValue += this.previousWidthofLeftImage + result.actualSize.width;\n                }\n                else if (value.length > 1) {\n                    var totalWidth = (this.previousWidthofLeftValue !== 0) ?\n                        this.previousWidthofLeftValue + this.previousWidthofLeftImage\n                        : this.previousWidthofLeftImage;\n                    left = this.leftTaskLabel.left + totalWidth;\n                    this.labelSettings.left = left;\n                    var result = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n                    this.previousWidthofLeftValue += this.previousWidthofLeftImage + result.actualSize.width;\n                }\n                else {\n                    left = this.leftTaskLabel.left;\n                }\n            }\n            var actualLeft = void 0;\n            if (this.isAutoFit()) {\n                actualLeft = left - (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(cumulativeWidth) + startPoint.x;\n            }\n            else {\n                actualLeft = left - (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(cumulativeWidth) + startPoint.x;\n            }\n            var leftForLabel = this.isAutoFit() ? (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(left) : left;\n            if (detail.startPoint <= leftForLabel && leftForLabel < detail.endPoint && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(leftLabelValue)\n                && !this.leftTaskLabel.isCompleted) {\n                var result = this.getWidthofLeftLabel(leftLabelValue, detail.endPoint - leftForLabel, 15);\n                var font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(this.fontFamily, 9);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) &&\n                    this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n                    font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n                }\n                var adjustHeight = ((0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.parent.rowHeight) - result.actualSize.height) / 2;\n                var rightLabelpoint = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(actualLeft, startPoint.y + adjustHeight);\n                var rightLabelSize = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(result.actualSize.width, result.actualSize.height);\n                var rightLabelBounds = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.RectangleF(rightLabelpoint, rightLabelSize);\n                var rightLabelFormat = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStringFormat();\n                rightLabelFormat.alignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfTextAlignment.Right;\n                rightLabelFormat.lineAlignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfVerticalAlignment.Middle;\n                if (result.actualSize.width > 0) {\n                    var fontColor = null;\n                    var fontBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(this.labelColor);\n                    var newFont = (this.labelSettings.leftLabel.fontStyle.fontSize) ? new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(this.labelSettings.leftLabel.fontStyle.fontFamily, this.labelSettings.leftLabel.fontStyle.fontSize, this.labelSettings.leftLabel.fontStyle.fontStyle) : font;\n                    var newFontBrush = this.labelSettings.leftLabel.fontStyle.fontColor ?\n                        new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(this.labelSettings.leftLabel.fontStyle.fontColor) : fontBrush;\n                    graphics.drawString(leftLabelValue, newFont, fontColor, newFontBrush, rightLabelBounds.x, rightLabelBounds.y, result.actualSize.width, result.actualSize.height, rightLabelFormat);\n                    var value = this.labelSettings.leftLabel.value.split(',');\n                    if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(result.remainder)) && result.remainder !== null) {\n                        this.leftTaskLabel.value = result.remainder;\n                        this.leftTaskLabel.left = detail.endPoint;\n                    }\n                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.labelSettings.leftLabel.image) &&\n                        this.labelSettings.leftLabel.image.length === 1 && value.length === 1) {\n                        this.leftTaskLabel.isCompleted = true;\n                    }\n                }\n                else {\n                    this.leftTaskLabel.left = detail.endPoint;\n                }\n            }\n        }\n    };\n    PdfGanttTaskbarCollection.prototype.getWidth = function (value, width, height) {\n        var font;\n        font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(this.fontFamily, 9);\n        var ganttStyle = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle;\n        if (ganttStyle && ganttStyle.label && ganttStyle.label.fontSize) {\n            font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(this.fontFamily, ganttStyle.label.fontSize);\n            height = font.height;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(ganttStyle) && ganttStyle.font) {\n            font = ganttStyle.font;\n            height = font.height;\n        }\n        var layouter = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStringLayouter();\n        var progressFormat = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStringFormat();\n        progressFormat.alignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfTextAlignment.Left;\n        progressFormat.wordWrap = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfWordWrapType.Character;\n        progressFormat.lineAlignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfVerticalAlignment.Middle;\n        /* eslint-disable-next-line */\n        var result = layouter.layout(value, font, progressFormat, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(width, height), false, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(width, height));\n        return result;\n    };\n    PdfGanttTaskbarCollection.prototype.getWidthofLeftLabel = function (value, width, height) {\n        var newFont = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(this.labelSettings.leftLabel.fontStyle.fontFamily, this.labelSettings.leftLabel.fontStyle.fontSize);\n        var font;\n        if (this.labelSettings.leftLabel.fontStyle.fontSize) {\n            font = newFont;\n        }\n        else {\n            font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(this.fontFamily, 9);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) &&\n            this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n            font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n        }\n        var layouter = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStringLayouter();\n        var progressFormat = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStringFormat();\n        progressFormat.alignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfTextAlignment.Left;\n        progressFormat.wordWrap = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfWordWrapType.Character;\n        progressFormat.lineAlignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfVerticalAlignment.Middle;\n        /* eslint-disable-next-line */\n        var result = layouter.layout(value, font, progressFormat, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(width, height), false, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(width, height));\n        return result;\n    };\n    PdfGanttTaskbarCollection.prototype.getWidthofrightLabel = function (value, width, height) {\n        var newFont = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(this.labelSettings.rightLabel.fontStyle.fontFamily, this.labelSettings.rightLabel.fontStyle.fontSize);\n        var font;\n        if (this.labelSettings.rightLabel.fontStyle.fontSize) {\n            font = newFont;\n        }\n        else {\n            font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(this.fontFamily, 9);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) &&\n            this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n            font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n        }\n        var layouter = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStringLayouter();\n        var progressFormat = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStringFormat();\n        progressFormat.alignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfTextAlignment.Left;\n        progressFormat.wordWrap = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfWordWrapType.Character;\n        progressFormat.lineAlignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfVerticalAlignment.Middle;\n        /* eslint-disable-next-line */\n        var result = layouter.layout(value, font, progressFormat, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(width, height), false, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(width, height));\n        return result;\n    };\n    /**\n     * @param {PdfGraphics} taskGraphics .\n     * @param {PointF} startPoint .\n     * @param {number} cumulativeWidth .\n     * @param {number} adjustHeight .\n     * @returns {void}\n     * Draw Unscheduled Task\n     */\n    PdfGanttTaskbarCollection.prototype.drawUnscheduledTask = function (taskGraphics, startPoint, cumulativeWidth, adjustHeight) {\n        var taskBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(this.taskColor);\n        if (this.isAutoFit()) {\n            taskGraphics.drawRectangle(taskBrush, startPoint.x + (this.left - cumulativeWidth), startPoint.y + adjustHeight, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(3), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height));\n        }\n        else {\n            taskGraphics.drawRectangle(taskBrush, startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth), startPoint.y + adjustHeight, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(3), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.height));\n        }\n    };\n    /**\n     * @param {PdfPage} page .\n     * @param {PointF} startPoint .\n     * @param {TimelineDetails} detail .\n     * @param {number} cumulativeWidth .\n     * @param {PdfGanttTaskbarCollection} taskbar .\n     * @param {boolean} isBaseline .\n     * @returns {void}\n    Draw milestone task\n     */\n    PdfGanttTaskbarCollection.prototype.drawMilestone = function (page, startPoint, detail, cumulativeWidth, taskbar, isBaseline) {\n        if (detail.startDate <= this.startDate && this.startDate <= detail.endDate) {\n            var taskGraphics = page.graphics;\n            var pageIndex = page.section.indexOf(page);\n            this.taskStartPoint = __assign({}, startPoint);\n            var milestonePen = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(this.milestoneColor);\n            var adjustHeightforBaselineMilesone = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(((this.parent.rowHeight - this.height) / 3.0));\n            var adjustHeightforMilesone = (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(((this.parent.rowHeight - this.height) / 2.0));\n            var adjustHeight = this.parent.renderBaseline ? adjustHeightforBaselineMilesone : adjustHeightforMilesone;\n            var milestoneBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(this.milestoneColor);\n            var baselinePen = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(this.baselineBorderColor);\n            var baselineBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(this.baselineColor);\n            taskGraphics.save(); //saving graphics state\n            var height = Math.floor(this.parent.chartRowsModule.taskBarHeight * 0.8);\n            if (!isBaseline) {\n                if (this.isAutoFit()) {\n                    taskGraphics.translateTransform(startPoint.x + (this.left - cumulativeWidth), startPoint.y + adjustHeight - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2);\n                }\n                else {\n                    taskGraphics.translateTransform(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth), startPoint.y + adjustHeight - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2);\n                }\n            }\n            if (isBaseline) {\n                if (this.isAutoFit()) {\n                    taskGraphics.translateTransform(startPoint.x + (taskbar.baselineLeft - cumulativeWidth), startPoint.y + adjustHeight - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2);\n                }\n                else {\n                    taskGraphics.translateTransform(startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.baselineLeft - cumulativeWidth), startPoint.y + adjustHeight - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2);\n                }\n            }\n            taskGraphics.rotateTransform(45); //apply rotation\n            if (this.parent.renderBaseline && this.baselineStartDate && this.baselineEndDate && isBaseline) {\n                taskGraphics.drawRectangle(baselinePen, baselineBrush, 2, 2, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(height), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(height));\n            }\n            if (!isBaseline) {\n                taskGraphics.drawRectangle(milestonePen, milestoneBrush, 0, 0, (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(height), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(height));\n            }\n            taskGraphics.restore(); //restoring graphics state\n            if (this.isAutoFit()) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                    var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                    var x = startPoint.x + (this.left - cumulativeWidth) - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2 +\n                        ((this.parent.chartRowsModule.taskBarHeight * 0.7) - taskbar.taskbarTemplate.image[0].height) / 1.0;\n                    var width = taskbar.taskbarTemplate.image[0].width / 2.0;\n                    var height_1 = taskbar.taskbarTemplate.image[0].height / 2.0;\n                    taskGraphics.drawImage(image, x, startPoint.y + adjustHeight - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2 +\n                        (((this.parent.chartRowsModule.taskBarHeight * 0.7) - taskbar.taskbarTemplate.image[0].height) / 0.5), width, height_1);\n                }\n            }\n            else {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(taskbar.taskbarTemplate.image)) {\n                    var image = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                    var x = startPoint.x + (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(this.left - cumulativeWidth) - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2 +\n                        (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)((this.parent.chartRowsModule.taskBarHeight * 0.7) - taskbar.taskbarTemplate.image[0].height) / 1.0;\n                    taskGraphics.drawImage(image, x, startPoint.y + adjustHeight - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2 +\n                        (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(((this.parent.chartRowsModule.taskBarHeight * 0.7) - taskbar.taskbarTemplate.image[0].height) / 0.5), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].width), (0,_base_utils__WEBPACK_IMPORTED_MODULE_1__.pixelToPoint)(taskbar.taskbarTemplate.image[0].height - 2));\n                }\n            }\n            this.endPage = this.startPage = pageIndex;\n        }\n    };\n    return PdfGanttTaskbarCollection;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-gantt/src/gantt/export/pdf-taskbar.js?");

/***/ })

}]);