"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-inputs_src_maskedtextbox_maskedtextbox_maskedtextbox_js-94-838cd2ee"],{

/***/ "./node_modules/@syncfusion/ej2-inputs/src/maskedtextbox/maskedtextbox/maskedtextbox.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-inputs/src/maskedtextbox/maskedtextbox/maskedtextbox.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MaskedTextBox: () => (/* binding */ MaskedTextBox)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _input_input__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../input/input */ \"./node_modules/@syncfusion/ej2-inputs/src/input/input.js\");\n/* harmony import */ var _base_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/index */ \"./node_modules/@syncfusion/ej2-inputs/src/maskedtextbox/base/index.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\nvar ROOT = 'e-control-wrapper e-mask';\nvar INPUT = 'e-input';\nvar COMPONENT = 'e-maskedtextbox';\nvar CONTROL = 'e-control';\nvar MASKINPUT_FOCUS = 'e-input-focus';\nvar wrapperAttr = ['title', 'style', 'class'];\n/**\n * The MaskedTextBox allows the user to enter the valid input only based on the provided mask.\n * ```html\n * <input id=\"mask\" type=\"text\" />\n * ```\n * ```typescript\n * <script>\n * var maskObj = new MaskedTextBox({ mask: \"(999) 9999-999\" });\n * maskObj.appendTo('#mask');\n * </script>\n * ```\n */\nvar MaskedTextBox = /** @class */ (function (_super) {\n    __extends(MaskedTextBox, _super);\n    /**\n     *\n     * @param {MaskedTextBoxModel} options - Specifies the MaskedTextBox model.\n     * @param {string | HTMLElement | HTMLInputElement} element - Specifies the element to render as component.\n     * @private\n     */\n    function MaskedTextBox(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.initInputValue = '';\n        _this.preventChange = false;\n        _this.isClicked = false;\n        _this.maskOptions = options;\n        return _this;\n    }\n    /**\n     * Gets the component name.\n     *\n     * @returns {string} Returns the component name.\n     * @private\n     */\n    MaskedTextBox.prototype.getModuleName = function () {\n        return 'maskedtextbox';\n    };\n    /**\n     * Initializes the event handler\n     *\n     * @returns {void}\n     * @private\n     */\n    MaskedTextBox.prototype.preRender = function () {\n        this.promptMask = '';\n        this.hiddenMask = '';\n        this.escapeMaskValue = '';\n        this.regExpCollec = _base_index__WEBPACK_IMPORTED_MODULE_2__.regularExpressions;\n        this.customRegExpCollec = [];\n        this.maskedRegExp = [];\n        this.undoCollec = [];\n        this.redoCollec = [];\n        this.changeEventArgs = {};\n        this.focusEventArgs = {};\n        this.blurEventArgs = {};\n        this.maskKeyPress = false;\n        this.isFocus = false;\n        this.isInitial = false;\n        this.isIosInvalid = false;\n        var ejInstance = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('ej2_instances', this.element);\n        this.cloneElement = this.element.cloneNode(true);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.cloneElement], [CONTROL, COMPONENT, 'e-lib']);\n        this.angularTagName = null;\n        this.formElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.element, 'form');\n        if (this.element.tagName === 'EJS-MASKEDTEXTBOX') {\n            this.angularTagName = this.element.tagName;\n            var input = this.createElement('input');\n            for (var i = 0; i < this.element.attributes.length; i++) {\n                input.setAttribute(this.element.attributes[i].nodeName, this.element.attributes[i].nodeValue);\n                input.innerHTML = this.element.innerHTML;\n            }\n            if (this.element.hasAttribute('id')) {\n                this.element.removeAttribute('id');\n            }\n            if (this.element.hasAttribute('name')) {\n                this.element.removeAttribute('name');\n            }\n            this.element.classList.remove('e-control', 'e-maskedtextbox');\n            this.element.classList.add('e-mask-container');\n            this.element.appendChild(input);\n            this.element = input;\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)('ej2_instances', ejInstance, this.element);\n        }\n        this.updateHTMLAttrToElement();\n        this.checkHtmlAttributes(false);\n        if (this.formElement) {\n            this.initInputValue = this.value;\n        }\n    };\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Gets the properties to be maintained in the persisted state.\n     *\n     * @returns {string}\n     */\n    MaskedTextBox.prototype.getPersistData = function () {\n        var keyEntity = ['value'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initializes the component rendering.\n     *\n     * @returns {void}\n     * @private\n     */\n    MaskedTextBox.prototype.render = function () {\n        if (this.element.tagName.toLowerCase() === 'input') {\n            if (this.floatLabelType === 'Never') {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], INPUT);\n            }\n            this.createWrapper();\n            this.updateHTMLAttrToWrapper();\n            if (this.element.name === '') {\n                this.element.setAttribute('name', this.element.id);\n            }\n            this.isInitial = true;\n            this.resetMaskedTextBox();\n            this.isInitial = false;\n            this.setMaskPlaceholder(true, false);\n            this.setWidth(this.width);\n            this.preEleVal = this.element.value;\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.version === '11.0' || _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'edge')) {\n                this.element.blur();\n            }\n            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isIos) {\n                this.element.blur();\n            }\n            if (this.element.getAttribute('value') || this.value) {\n                this.element.setAttribute('value', this.element.value);\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.element, 'fieldset')) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.element, 'fieldset').disabled) {\n                this.enabled = false;\n            }\n            if (!this.element.hasAttribute('aria-labelledby') && !this.element.hasAttribute('placeholder') && !this.element.hasAttribute('aria-label')) {\n                this.element.setAttribute('aria-label', 'maskedtextbox');\n            }\n            this.renderComplete();\n        }\n    };\n    MaskedTextBox.prototype.updateHTMLAttrToElement = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (wrapperAttr.indexOf(key) < 0) {\n                    this.element.setAttribute(key, this.htmlAttributes[\"\" + key]);\n                }\n            }\n        }\n    };\n    MaskedTextBox.prototype.updateCssClass = function (newClass, oldClass) {\n        _input_input__WEBPACK_IMPORTED_MODULE_1__.Input.setCssClass(this.getValidClassList(newClass), [this.inputObj.container], this.getValidClassList(oldClass));\n    };\n    MaskedTextBox.prototype.getValidClassList = function (maskClassName) {\n        var result = maskClassName;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(maskClassName) && maskClassName !== '') {\n            result = (maskClassName.replace(/\\s+/g, ' ')).trim();\n        }\n        return result;\n    };\n    MaskedTextBox.prototype.updateHTMLAttrToWrapper = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (wrapperAttr.indexOf(key) > -1) {\n                    if (key === 'class') {\n                        var updatedClassValues = (this.htmlAttributes[\"\" + key].replace(/\\s+/g, ' ')).trim();\n                        if (updatedClassValues !== '') {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputObj.container], updatedClassValues.split(' '));\n                        }\n                    }\n                    else if (key === 'style') {\n                        var maskStyle = this.inputObj.container.getAttribute(key);\n                        maskStyle = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(maskStyle) ? (maskStyle + this.htmlAttributes[\"\" + key]) :\n                            this.htmlAttributes[\"\" + key];\n                        this.inputObj.container.setAttribute(key, maskStyle);\n                    }\n                    else {\n                        this.inputObj.container.setAttribute(key, this.htmlAttributes[\"\" + key]);\n                    }\n                }\n            }\n        }\n    };\n    MaskedTextBox.prototype.resetMaskedTextBox = function () {\n        this.promptMask = '';\n        this.hiddenMask = '';\n        this.escapeMaskValue = '';\n        this.customRegExpCollec = [];\n        this.undoCollec = [];\n        this.redoCollec = [];\n        if (this.promptChar && this.promptChar.length > 1) {\n            this.promptChar = this.promptChar[0];\n        }\n        _base_index__WEBPACK_IMPORTED_MODULE_2__.createMask.call(this);\n        _base_index__WEBPACK_IMPORTED_MODULE_2__.applyMask.call(this);\n        if (this.mask === null || this.mask === '' && this.value !== undefined) {\n            _base_index__WEBPACK_IMPORTED_MODULE_2__.setElementValue.call(this, this.value);\n        }\n        var val = _base_index__WEBPACK_IMPORTED_MODULE_2__.strippedValue.call(this, this.element);\n        this.prevValue = val;\n        this.value = val;\n        if (!this.isInitial) {\n            _base_index__WEBPACK_IMPORTED_MODULE_2__.unwireEvents.call(this);\n        }\n        _base_index__WEBPACK_IMPORTED_MODULE_2__.wireEvents.call(this);\n    };\n    MaskedTextBox.prototype.setMaskPlaceholder = function (setVal, dynamicPlaceholder) {\n        if (dynamicPlaceholder || this.placeholder) {\n            _input_input__WEBPACK_IMPORTED_MODULE_1__.Input.setPlaceholder(this.placeholder, this.element);\n            if ((this.element.value === this.promptMask && setVal && this.floatLabelType !== 'Always') ||\n                this.element.value === this.promptMask && this.floatLabelType === 'Never') {\n                _base_index__WEBPACK_IMPORTED_MODULE_2__.setElementValue.call(this, '');\n            }\n        }\n    };\n    MaskedTextBox.prototype.setWidth = function (width) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(width)) {\n            if (typeof width === 'number') {\n                this.inputObj.container.style.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(width);\n                this.element.style.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(width);\n            }\n            else if (typeof width === 'string') {\n                var elementWidth = (width.match(/px|%|em/)) ? (width) : ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(width));\n                this.inputObj.container.style.width = elementWidth;\n                this.element.style.width = elementWidth;\n            }\n        }\n    };\n    MaskedTextBox.prototype.checkHtmlAttributes = function (isDynamic) {\n        var attributes = isDynamic ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes)\n            : ['placeholder', 'disabled', 'value', 'readonly'];\n        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n            var key = attributes_1[_i];\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.getAttribute(key))) {\n                switch (key) {\n                    case 'placeholder':\n                        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.maskOptions) || (this.maskOptions['placeholder'] === undefined)) || isDynamic) {\n                            this.setProperties({ placeholder: this.element.placeholder }, !isDynamic);\n                        }\n                        break;\n                    case 'disabled':\n                        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.maskOptions) || (this.maskOptions['enabled'] === undefined)) || isDynamic) {\n                            var isEnabled = this.element.getAttribute(key) === 'disabled' || this.element.getAttribute(key) === '' ||\n                                this.element.getAttribute(key) === 'true' ? false : true;\n                            this.setProperties({ enabled: isEnabled }, !isDynamic);\n                        }\n                        break;\n                    case 'value':\n                        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.maskOptions) || (this.maskOptions['value'] === undefined)) || isDynamic) {\n                            this.setProperties({ value: this.element.value }, !isDynamic);\n                        }\n                        break;\n                    case 'readonly':\n                        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.maskOptions) || (this.maskOptions['readonly'] === undefined)) || isDynamic) {\n                            var isReadonly = this.element.getAttribute(key) === 'readonly' || this.element.getAttribute(key) === ''\n                                || this.element.getAttribute(key) === 'true' ? true : false;\n                            this.setProperties({ readonly: isReadonly }, !isDynamic);\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    MaskedTextBox.prototype.createWrapper = function () {\n        var updatedCssClassValues = this.cssClass;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.cssClass) && this.cssClass !== '') {\n            updatedCssClassValues = this.getValidClassList(this.cssClass);\n        }\n        this.inputObj = _input_input__WEBPACK_IMPORTED_MODULE_1__.Input.createInput({\n            element: this.element,\n            floatLabelType: this.floatLabelType,\n            properties: {\n                enableRtl: this.enableRtl,\n                cssClass: updatedCssClassValues,\n                enabled: this.enabled,\n                readonly: this.readonly,\n                placeholder: this.placeholder,\n                showClearButton: this.showClearButton\n            }\n        }, this.createElement);\n        this.inputObj.container.setAttribute('class', ROOT + ' ' + this.inputObj.container.getAttribute('class'));\n    };\n    /**\n     * Calls internally if any of the property value is changed.\n     *\n     * @param {MaskedTextBoxModel} newProp - Returns the dynamic property value of the component.\n     * @param {MaskedTextBoxModel} oldProp - Returns the previous property value of the component.\n     * @returns {void}\n     * @hidden\n     */\n    MaskedTextBox.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'value':\n                    _base_index__WEBPACK_IMPORTED_MODULE_2__.setMaskValue.call(this, this.value);\n                    if (this.placeholder && !this.isFocus) {\n                        this.setMaskPlaceholder(false, false);\n                    }\n                    if (this.value === '' && oldProp.value != null) {\n                        this.element.selectionStart = 0;\n                        this.element.selectionEnd = 0;\n                    }\n                    break;\n                case 'placeholder':\n                    this.setMaskPlaceholder(true, true);\n                    break;\n                case 'width':\n                    this.setWidth(newProp.width);\n                    _input_input__WEBPACK_IMPORTED_MODULE_1__.Input.calculateWidth(this.element, this.inputObj.container);\n                    break;\n                case 'cssClass':\n                    this.updateCssClass(newProp.cssClass, oldProp.cssClass);\n                    break;\n                case 'enabled':\n                    _input_input__WEBPACK_IMPORTED_MODULE_1__.Input.setEnabled(newProp.enabled, this.element, this.floatLabelType, this.inputObj.container);\n                    break;\n                case 'readonly':\n                    _input_input__WEBPACK_IMPORTED_MODULE_1__.Input.setReadonly(newProp.readonly, this.element);\n                    break;\n                case 'enableRtl':\n                    _input_input__WEBPACK_IMPORTED_MODULE_1__.Input.setEnableRtl(newProp.enableRtl, [this.inputObj.container]);\n                    break;\n                case 'customCharacters':\n                    this.customCharacters = newProp.customCharacters;\n                    this.resetMaskedTextBox();\n                    break;\n                case 'showClearButton':\n                    _input_input__WEBPACK_IMPORTED_MODULE_1__.Input.setClearButton(newProp.showClearButton, this.element, this.inputObj, undefined, this.createElement);\n                    _base_index__WEBPACK_IMPORTED_MODULE_2__.bindClearEvent.call(this);\n                    break;\n                case 'floatLabelType':\n                    this.floatLabelType = newProp.floatLabelType;\n                    _input_input__WEBPACK_IMPORTED_MODULE_1__.Input.removeFloating(this.inputObj);\n                    _input_input__WEBPACK_IMPORTED_MODULE_1__.Input.addFloating(this.element, this.floatLabelType, this.placeholder, this.createElement);\n                    break;\n                case 'htmlAttributes':\n                    this.updateHTMLAttrToElement();\n                    this.updateHTMLAttrToWrapper();\n                    this.checkHtmlAttributes(true);\n                    break;\n                case 'mask':\n                    {\n                        var strippedValue_1 = this.value;\n                        this.mask = newProp.mask;\n                        this.maskedRegExp = [];\n                        this.updateValue(strippedValue_1);\n                    }\n                    break;\n                case 'promptChar': {\n                    if (newProp.promptChar.length > 1) {\n                        newProp.promptChar = newProp.promptChar[0];\n                    }\n                    if (newProp.promptChar) {\n                        this.promptChar = newProp.promptChar;\n                    }\n                    else {\n                        this.promptChar = '_';\n                    }\n                    /* eslint-disable-next-line security/detect-non-literal-regexp */\n                    var value = this.element.value.replace(new RegExp('[' + oldProp.promptChar + ']', 'g'), this.promptChar);\n                    if (this.promptMask === this.element.value) {\n                        /* eslint-disable-next-line security/detect-non-literal-regexp */\n                        value = this.promptMask.replace(new RegExp('[' + oldProp.promptChar + ']', 'g'), this.promptChar);\n                    }\n                    /* eslint-disable-next-line security/detect-non-literal-regexp */\n                    this.promptMask = this.promptMask.replace(new RegExp('[' + oldProp.promptChar + ']', 'g'), this.promptChar);\n                    this.undoCollec = this.redoCollec = [];\n                    _base_index__WEBPACK_IMPORTED_MODULE_2__.setElementValue.call(this, value);\n                    break;\n                }\n            }\n        }\n        this.preventChange = this.isAngular && this.preventChange ? !this.preventChange : this.preventChange;\n    };\n    MaskedTextBox.prototype.updateValue = function (strippedVal) {\n        this.resetMaskedTextBox();\n        _base_index__WEBPACK_IMPORTED_MODULE_2__.setMaskValue.call(this, strippedVal);\n    };\n    /**\n     * Gets the value of the MaskedTextBox with the masked format.\n     * By using `value` property, you can get the raw value of maskedtextbox without literals and prompt characters.\n     *\n     * @returns {string} Returns the value with the masked format.\n     */\n    MaskedTextBox.prototype.getMaskedValue = function () {\n        return _base_index__WEBPACK_IMPORTED_MODULE_2__.unstrippedValue.call(this, this.element);\n    };\n    /**\n     * Sets the focus to widget for interaction.\n     *\n     * @returns {void}\n     */\n    MaskedTextBox.prototype.focusIn = function () {\n        if (document.activeElement !== this.element && this.enabled) {\n            this.isFocus = true;\n            this.element.focus();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.inputObj.container], [MASKINPUT_FOCUS]);\n        }\n    };\n    /**\n     * Remove the focus from widget, if the widget is in focus state.\n     *\n     * @returns {void}\n     */\n    MaskedTextBox.prototype.focusOut = function () {\n        if (document.activeElement === this.element && this.enabled) {\n            this.isFocus = false;\n            this.element.blur();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.inputObj.container], [MASKINPUT_FOCUS]);\n        }\n    };\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers.\n     * Also it maintains the initial input element from the DOM.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    MaskedTextBox.prototype.destroy = function () {\n        _base_index__WEBPACK_IMPORTED_MODULE_2__.unwireEvents.call(this);\n        if (this.showClearButton) {\n            this.clearButton = document.getElementsByClassName('e-clear-icon')[0];\n        }\n        var attrArray = ['aria-labelledby', 'role', 'autocomplete', 'aria-readonly',\n            'aria-disabled', 'autocapitalize', 'spellcheck', 'aria-autocomplete', 'aria-live', 'aria-invalid'];\n        for (var i = 0; i < attrArray.length; i++) {\n            this.element.removeAttribute(attrArray[i]);\n        }\n        this.element.classList.remove('e-input');\n        if (this.inputObj) {\n            this.inputObj.container.insertAdjacentElement('afterend', this.element);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.inputObj.container);\n        }\n        this.blurEventArgs = null;\n        _input_input__WEBPACK_IMPORTED_MODULE_1__.Input.destroy({\n            element: this.element,\n            floatLabelType: this.floatLabelType,\n            properties: this.properties\n        }, this.clearButton);\n        this.changeEventArgs = null;\n        this.inputObj = null;\n        _super.prototype.destroy.call(this);\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], MaskedTextBox.prototype, \"cssClass\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], MaskedTextBox.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], MaskedTextBox.prototype, \"placeholder\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Never')\n    ], MaskedTextBox.prototype, \"floatLabelType\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({})\n    ], MaskedTextBox.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], MaskedTextBox.prototype, \"enabled\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], MaskedTextBox.prototype, \"readonly\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], MaskedTextBox.prototype, \"showClearButton\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], MaskedTextBox.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], MaskedTextBox.prototype, \"mask\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('_')\n    ], MaskedTextBox.prototype, \"promptChar\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], MaskedTextBox.prototype, \"value\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], MaskedTextBox.prototype, \"customCharacters\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], MaskedTextBox.prototype, \"created\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], MaskedTextBox.prototype, \"destroyed\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], MaskedTextBox.prototype, \"change\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], MaskedTextBox.prototype, \"focus\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], MaskedTextBox.prototype, \"blur\", void 0);\n    MaskedTextBox = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], MaskedTextBox);\n    return MaskedTextBox;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-inputs/src/maskedtextbox/maskedtextbox/maskedtextbox.js?");

/***/ })

}]);