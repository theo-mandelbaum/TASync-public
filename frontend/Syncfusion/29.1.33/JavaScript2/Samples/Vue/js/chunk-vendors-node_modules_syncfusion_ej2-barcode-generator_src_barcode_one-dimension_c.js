"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-barcode-generator_src_barcode_one-dimension_c"],{

/***/ "./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/code93.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/code93.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Code93: () => (/* binding */ Code93)\n/* harmony export */ });\n/* harmony import */ var _one_dimension__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../one-dimension */ \"./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/**\n * code39 used to calculate the barcode of type 39\n */\nvar Code93 = /** @class */ (function (_super) {\n    __extends(Code93, _super);\n    function Code93() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Validate the given input.\n     *\n     * @returns {string} Validate the given input.\n     * @param {string} value - Provide the canvas element .\n     * @private\n     */\n    Code93.prototype.validateInput = function (value) {\n        // eslint-disable-next-line\n        if (value.search(/^[0-9A-Z\\-\\.\\*\\$\\/\\+\\ %\\ ]+$/) === -1) {\n            return 'Supports A-Z, 0-9, and symbols ( - . $ / + % SPACE).';\n        }\n        else {\n            return undefined;\n        }\n    };\n    // eslint-disable-next-line\n    Code93.prototype.getCharacterWeight = function () {\n        // eslint-disable-next-line\n        var codes = {\n            '0': '0',\n            '1': '1',\n            '2': '2',\n            '3': '3',\n            '4': '4',\n            '5': '5',\n            '6': '6',\n            '7': '7',\n            '8': '8',\n            '9': '9',\n            'A': '10',\n            'B': '11',\n            'C': '12',\n            'D': '13',\n            'E': '14',\n            'F': '15',\n            'G': '16',\n            'H': '17',\n            'I': '18',\n            'J': '19',\n            'K': '20',\n            'L': '21',\n            'M': '22',\n            'N': '23',\n            'O': '24',\n            'P': '25',\n            'Q': '26',\n            'R': '27',\n            'S': '28',\n            'T': '29',\n            'U': '30',\n            'V': '31',\n            'W': '32',\n            'X': '33',\n            'Y': '34',\n            'Z': '35',\n            '-': '36',\n            '.': '37',\n            ' ': '38',\n            '$': '39',\n            '/': '40',\n            '+': '41',\n            '%': '42',\n            '($)': '43',\n            '(/)': '44',\n            '(+)': '45',\n            '(%)': '46'\n        };\n        return codes;\n    };\n    /**\n     * get the code value.\n     *\n     * @returns {string[]} return the code value.\n     * @private\n     */\n    // eslint-disable-next-line\n    Code93.prototype.getCodeValue = function () {\n        // eslint-disable-next-line\n        var codes = {\n            '0': '100010100',\n            '1': '101001000',\n            '2': '101000100',\n            '3': '101000010',\n            '4': '100101000',\n            '5': '100100100',\n            '6': '100100010',\n            '7': '101010000',\n            '8': '100010010',\n            '9': '100001010',\n            'A': '110101000',\n            'B': '110100100',\n            'C': '110100010',\n            'D': '110010100',\n            'E': '110010010',\n            'F': '110001010',\n            'G': '101101000',\n            'H': '101100100',\n            'I': '101100010',\n            'J': '100110100',\n            'K': '100011010',\n            'L': '101011000',\n            'M': '101001100',\n            'N': '101000110',\n            'O': '100101100',\n            'P': '100010110',\n            'Q': '110110100',\n            'R': '110110010',\n            'S': '110101100',\n            'T': '110100110',\n            'U': '110010110',\n            'V': '110011010',\n            'W': '101101100',\n            'X': '101100110',\n            'Y': '100110110',\n            'Z': '100111010',\n            '-': '100101110',\n            '.': '111010100',\n            ' ': '111010010',\n            '$': '111001010',\n            '/': '101101110',\n            '+': '101110110',\n            '%': '110101110',\n            '($)': '100100110',\n            '(/)': '111010110',\n            '(+)': '100110010',\n            '(%)': '111011010'\n        };\n        return codes;\n    };\n    Code93.prototype.getPatternCollection = function (givenCharacter, codes, encodingValue) {\n        var code = encodingValue;\n        for (var i = 0; i < givenCharacter.length; i++) {\n            var char = givenCharacter[parseInt(i.toString(), 10)];\n            code.push(codes[\"\" + char]);\n        }\n    };\n    Code93.prototype.calculateCheckSum = function (givenCharacter) {\n        var value = givenCharacter;\n        var weightSum = 0;\n        var j = 0;\n        // eslint-disable-next-line\n        var codes = this.getCharacterWeight();\n        for (var i = value.length; i > 0; i--) {\n            var characterValue = codes[value[parseInt(j.toString(), 10)]] * i;\n            weightSum += characterValue;\n            j++;\n        }\n        var moduloValue = weightSum % 47;\n        var objectValue = Object.keys(codes);\n        var appendSymbol = objectValue[parseInt(moduloValue.toString(), 10)];\n        return appendSymbol;\n    };\n    /**\n     * Draw the barcode SVG.\\\n     *\n     * @returns {void} Draw the barcode SVG .\n     *  @param {HTMLElement} canvas - Provide the canvas element .\n     * @private\n     */\n    Code93.prototype.draw = function (canvas) {\n        var codes = this.getCodeValue();\n        var encodingValue = [];\n        var givenCharacter = this.value;\n        var startStopCharacter = '101011110';\n        var terminationBar = '1';\n        if (this.enableCheckSum) {\n            givenCharacter += this.calculateCheckSum(givenCharacter);\n            givenCharacter += this.calculateCheckSum(givenCharacter);\n        }\n        encodingValue.push(startStopCharacter);\n        this.getPatternCollection(givenCharacter, codes, encodingValue);\n        encodingValue.push(startStopCharacter);\n        encodingValue.push(terminationBar);\n        this.calculateBarCodeAttributes(encodingValue, canvas);\n    };\n    return Code93;\n}(_one_dimension__WEBPACK_IMPORTED_MODULE_0__.OneDimension));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/code93.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/code93Extension.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/code93Extension.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Code93Extension: () => (/* binding */ Code93Extension)\n/* harmony export */ });\n/* harmony import */ var _code93__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./code93 */ \"./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/code93.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/**\n * code39 used to calculate the barcode of type 39\n */\nvar Code93Extension = /** @class */ (function (_super) {\n    __extends(Code93Extension, _super);\n    function Code93Extension() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.barcodeSymbols = [];\n        return _this;\n    }\n    /**\n     * Validate the given input.\n     *\n     * @returns {string} Validate the given input.\n     * @param {string} text - Provide the canvas element .\n     * @private\n     */\n    Code93Extension.prototype.validateInput = function (text) {\n        var valueCheck = this.getValue(text);\n        if (valueCheck) {\n            return undefined;\n        }\n        else {\n            return 'Supports 128 characters of ASCII.';\n        }\n    };\n    Code93Extension.prototype.getValue = function (text) {\n        for (var i = 0; i < text.length; i++) {\n            if (text.charCodeAt(i) > 127) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Code93Extension.prototype.getBars = function () {\n        this.barcodeSymbols[0] = { value: '', checkDigit: 0, bars: '111213' };\n        this.barcodeSymbols[1] = { value: '1', checkDigit: 1, bars: '111213' };\n        this.barcodeSymbols[2] = { value: '2', checkDigit: 2, bars: '111312 ' };\n        this.barcodeSymbols[3] = { value: '3', checkDigit: 3, bars: '111411 ' };\n        this.barcodeSymbols[4] = { value: '4', checkDigit: 4, bars: '121113' };\n        this.barcodeSymbols[5] = { value: '5', checkDigit: 5, bars: '121212' };\n        this.barcodeSymbols[6] = { value: '6', checkDigit: 6, bars: '121311' };\n        this.barcodeSymbols[7] = { value: '7', checkDigit: 7, bars: '111114' };\n        this.barcodeSymbols[8] = { value: '8', checkDigit: 8, bars: '131211' };\n        this.barcodeSymbols[9] = { value: '9', checkDigit: 9, bars: '141111' };\n        this.barcodeSymbols[10] = { value: 'A', checkDigit: 10, bars: '211113' };\n        this.barcodeSymbols[11] = { value: 'B', checkDigit: 11, bars: '211212' };\n        this.barcodeSymbols[12] = { value: 'C', checkDigit: 12, bars: '211311' };\n        this.barcodeSymbols[13] = { value: 'D', checkDigit: 13, bars: '221112' };\n        this.barcodeSymbols[14] = { value: 'E', checkDigit: 14, bars: '221211 ' };\n        this.barcodeSymbols[15] = { value: 'F', checkDigit: 15, bars: '231111' };\n        this.barcodeSymbols[16] = { value: 'G', checkDigit: 16, bars: '112113' };\n        this.barcodeSymbols[17] = { value: 'H', checkDigit: 17, bars: '112212' };\n        this.barcodeSymbols[18] = { value: 'I', checkDigit: 18, bars: '112311' };\n        this.barcodeSymbols[19] = { value: 'J', checkDigit: 19, bars: '122112' };\n        this.barcodeSymbols[20] = { value: 'K', checkDigit: 20, bars: '132111 ' };\n        this.barcodeSymbols[21] = { value: 'L', checkDigit: 21, bars: '111123' };\n        this.barcodeSymbols[22] = { value: 'M', checkDigit: 22, bars: '111222' };\n        this.barcodeSymbols[23] = { value: 'N', checkDigit: 23, bars: '111321' };\n        this.barcodeSymbols[24] = { value: 'O', checkDigit: 24, bars: '121122 ' };\n        this.barcodeSymbols[25] = { value: 'P', checkDigit: 25, bars: '131121 ' };\n        this.barcodeSymbols[26] = { value: 'Q', checkDigit: 26, bars: '212112 ' };\n        this.barcodeSymbols[27] = { value: 'R', checkDigit: 27, bars: ' 212211 ' };\n        this.barcodeSymbols[28] = { value: 'S', checkDigit: 28, bars: '211122' };\n        this.barcodeSymbols[29] = { value: 'T', checkDigit: 29, bars: '211221' };\n        this.barcodeSymbols[30] = { value: 'U', checkDigit: 30, bars: '221121' };\n        this.barcodeSymbols[31] = { value: 'V', checkDigit: 31, bars: '222111' };\n        this.barcodeSymbols[32] = { value: 'W', checkDigit: 32, bars: '112122' };\n        this.barcodeSymbols[33] = { value: 'X', checkDigit: 33, bars: '112221' };\n        this.barcodeSymbols[34] = { value: 'Y', checkDigit: 34, bars: '122121' };\n        this.barcodeSymbols[35] = { value: 'Z', checkDigit: 35, bars: ' 123111' };\n        this.barcodeSymbols[36] = { value: '-', checkDigit: 36, bars: '121131' };\n        this.barcodeSymbols[37] = { value: '.', checkDigit: 37, bars: '311112' };\n        this.barcodeSymbols[38] = { value: ' ', checkDigit: 38, bars: '311211' };\n        this.barcodeSymbols[39] = { value: '$', checkDigit: 39, bars: '321111' };\n        this.barcodeSymbols[40] = { value: '/', checkDigit: 40, bars: '112131' };\n        this.barcodeSymbols[41] = { value: '+', checkDigit: 41, bars: '113121' };\n        this.barcodeSymbols[42] = { value: '%', checkDigit: 42, bars: '211131' };\n        this.barcodeSymbols[43] = { value: '*', checkDigit: 42, bars: '111141' };\n        this.barcodeSymbols[44] = { value: 'ÿ', checkDigit: 47, bars: '1111411' };\n        this.barcodeSymbols[45] = { value: 'û', checkDigit: 43, bars: '121220' };\n        this.barcodeSymbols[46] = { value: 'ü', checkDigit: 44, bars: '312111 ' };\n        this.barcodeSymbols[47] = { value: 'ý', checkDigit: 45, bars: '311121' };\n        this.barcodeSymbols[48] = { value: 'þ', checkDigit: 46, bars: '122211' };\n    };\n    Code93Extension.prototype.GetExtendedText = function (string) {\n        var code = this.value;\n        var extcodes;\n        this.extendedText = '';\n        for (var i = 0; i < code.length; i++) {\n            for (var j = string.length - 1; j > 0; j--) {\n                if (string[parseInt(j.toString(), 10)] && string[parseInt(j.toString(), 10)].value\n                    && string[parseInt(j.toString(), 10)].character === code[parseInt(i.toString(), 10)]) {\n                    extcodes = string[parseInt(j.toString(), 10)];\n                    break;\n                }\n            }\n            if (extcodes.keyword && extcodes.value) {\n                this.extendedText += extcodes.keyword + extcodes.value;\n            }\n            else if (extcodes.value && extcodes.value) {\n                this.extendedText += extcodes.value;\n            }\n        }\n    };\n    /**\n     * Draw the barcode SVG.\\\n     *\n     * @returns {void} Draw the barcode SVG .\n     *  @param {HTMLElement} canvas - Provide the canvas element .\n     * @private\n     */\n    Code93Extension.prototype.drawCode93 = function (canvas) {\n        this.getBars();\n        var temp = [];\n        var string = this.getArrayValue();\n        this.GetExtendedText(string);\n        var checkDigit = this.CalculateCheckDigit();\n        for (var i = 0; i < checkDigit.length; i++) {\n            this.extendedText += checkDigit[parseInt(i.toString(), 10)];\n        }\n        temp[0] = '*' + this.extendedText + 'ÿ';\n        var encodingValue = [];\n        encodingValue = this.encoding(temp);\n        this.calculateBarCodeAttributes(encodingValue, canvas);\n    };\n    Code93Extension.prototype.GetCheckSumSymbols = function () {\n        var text = this.extendedText;\n        var dataToEncode = text;\n        var charArray = [];\n        var checkValue = 0;\n        var length = dataToEncode.length;\n        var numi;\n        for (var i = 0; i < length; i++) {\n            var num4 = (length - i) % 20;\n            if (num4 === 0) {\n                num4 = 20;\n            }\n            for (var j = 0; j < this.barcodeSymbols.length; j++) {\n                if (dataToEncode[parseInt(i.toString(), 10)] === this.barcodeSymbols[parseInt(j.toString(), 10)].value) {\n                    numi = this.barcodeSymbols[parseInt(j.toString(), 10)].checkDigit;\n                }\n            }\n            checkValue += numi * num4;\n        }\n        checkValue = checkValue % 0x2f;\n        var char1 = '';\n        for (var k = 0; k < this.barcodeSymbols.length; k++) {\n            if (checkValue === this.barcodeSymbols[parseInt(k.toString(), 10)].checkDigit) {\n                char1 = this.barcodeSymbols[parseInt(k.toString(), 10)].value;\n                break;\n            }\n        }\n        var data = this.extendedText;\n        data = data + char1;\n        charArray[0] = char1;\n        text = data;\n        checkValue = 0;\n        dataToEncode = text;\n        length = dataToEncode.length;\n        for (var i = 0; i < length; i++) {\n            var num4 = (length - i) % 15;\n            if (num4 === 0) {\n                num4 = 15;\n            }\n            for (var m = 0; m < this.barcodeSymbols.length; m++) {\n                if (dataToEncode[parseInt(i.toString(), 10)] === this.barcodeSymbols[parseInt(m.toString(), 10)].value) {\n                    var tempi = this.barcodeSymbols[parseInt(m.toString(), 10)].checkDigit;\n                    checkValue += tempi * num4;\n                }\n            }\n        }\n        checkValue = checkValue % 0x2f;\n        text = text + checkValue;\n        var char2 = ' ';\n        for (var i = 0; i < this.barcodeSymbols.length; i++) {\n            if (checkValue === this.barcodeSymbols[parseInt(i.toString(), 10)].checkDigit) {\n                char2 = this.barcodeSymbols[parseInt(i.toString(), 10)].value;\n                break;\n            }\n        }\n        data = data + char2;\n        charArray[1] = char2;\n        return charArray;\n    };\n    Code93Extension.prototype.CalculateCheckDigit = function () {\n        var code = this.extendedText;\n        var checkValue = 0;\n        for (var i = 0; i < code.length; i++) {\n            for (var j = 0; j < this.barcodeSymbols.length; j++) {\n                if (code[parseInt(i.toString(), 10)] === this.barcodeSymbols[parseInt(j.toString(), 10)].value) {\n                    // eslint-disable-next-line\n                    checkValue += this.barcodeSymbols[j].checkDigit;\n                }\n            }\n        }\n        var ch = this.GetCheckSumSymbols();\n        return ch;\n    };\n    /* tslint:disable */\n    Code93Extension.prototype.getArrayValue = function () {\n        var arrayValue = [];\n        arrayValue[0] = { character: '\\0', keyword: 'ü', value: 'U' };\n        arrayValue[1] = { character: '\\x0001', keyword: 'û', value: 'A' };\n        arrayValue[2] = { character: '\\x0002', keyword: 'x00fb', value: 'B' };\n        arrayValue[3] = { character: '\\x0003', keyword: 'û', value: 'C' };\n        arrayValue[4] = { character: '\\x0004', keyword: 'û', value: 'D' };\n        arrayValue[5] = { character: '\\x0005', keyword: 'û', value: 'E' };\n        arrayValue[6] = { character: '\\x0006', keyword: 'û', value: 'F' };\n        // eslint-disable-next-line\n        arrayValue[7] = { character: '\\a', keyword: 'û', value: 'G' };\n        arrayValue[8] = { character: '\\b', keyword: 'û', value: 'H' };\n        arrayValue[9] = { character: '\\t', keyword: 'û', value: 'I' };\n        arrayValue[10] = { character: '\\n', keyword: 'û', value: 'J' };\n        arrayValue[12] = { character: '\\v', keyword: 'û', value: 'K' };\n        arrayValue[13] = { character: '\\f', keyword: 'û', value: 'L' };\n        arrayValue[14] = { character: '\\r', keyword: 'û', value: 'M' };\n        arrayValue[15] = { character: '\\x000e', keyword: 'û', value: 'N' };\n        arrayValue[16] = { character: '\\x000f', keyword: 'û', value: 'O' };\n        arrayValue[17] = { character: '\\x0010', keyword: 'û', value: 'P' };\n        arrayValue[18] = { character: '\\x0011', keyword: 'û', value: 'Q' };\n        arrayValue[19] = { character: '\\x0012', keyword: 'û', value: 'R' };\n        arrayValue[20] = { character: '\\x0013', keyword: 'û', value: 'S' };\n        arrayValue[21] = { character: '\\x0014', keyword: 'û', value: 'T' };\n        arrayValue[22] = { character: '\\x0015', keyword: 'û', value: 'U' };\n        arrayValue[23] = { character: '\\x0016', keyword: 'û', value: 'V' };\n        arrayValue[24] = { character: '\\x0017', keyword: 'û', value: 'W' };\n        arrayValue[25] = { character: '\\x0018', keyword: 'û', value: 'X' };\n        arrayValue[26] = { character: '\\x0019', keyword: 'û', value: 'Y' };\n        arrayValue[27] = { character: '\\x001a', keyword: 'û', value: 'Z' };\n        arrayValue[28] = { character: '\\x001b', keyword: 'ü', value: 'A' };\n        arrayValue[29] = { character: '\\x001c', keyword: 'ü', value: 'B' };\n        arrayValue[30] = { character: '\\x001d', keyword: 'ü', value: 'C' };\n        arrayValue[31] = { character: '\\x001e', keyword: 'ü', value: 'D' };\n        arrayValue[32] = { character: '\\x001f', keyword: 'ü', value: 'E' };\n        arrayValue[33] = { character: ' ', keyword: ' ' };\n        arrayValue[34] = { character: '!', keyword: 'ý', value: 'A' };\n        arrayValue[35] = { character: '\"', keyword: 'ý', value: 'B' };\n        arrayValue[36] = { character: '#', keyword: 'ý', value: 'C' };\n        arrayValue[37] = { character: '$', keyword: 'ý', value: 'D' };\n        arrayValue[38] = { character: '%', keyword: 'ý', value: 'E' };\n        arrayValue[39] = { character: '&', keyword: 'ý', value: 'F' };\n        arrayValue[40] = { character: '\\'', keyword: 'ý', value: 'G' };\n        arrayValue[41] = { character: '(', keyword: 'ý', value: 'H' };\n        arrayValue[42] = { character: ')', keyword: 'ý', value: 'I' };\n        arrayValue[43] = { character: '*', keyword: 'ý', value: 'J' };\n        arrayValue[44] = { character: '+', keyword: 'ý', value: 'K' };\n        arrayValue[45] = { character: ',', keyword: 'ý', value: 'L' };\n        arrayValue[46] = { character: '-', keyword: 'ý', value: 'M' };\n        arrayValue[47] = { character: '.', keyword: 'ý', value: 'N' };\n        arrayValue[48] = { character: '/', keyword: 'ý', value: 'O' };\n        arrayValue[49] = { character: '0', value: '0' };\n        arrayValue[50] = { character: '1', value: '1' };\n        arrayValue[51] = { character: '2', value: '2' };\n        arrayValue[52] = { character: '3', value: '3' };\n        arrayValue[53] = { character: '4', value: '4' };\n        arrayValue[54] = { character: '5', value: '5' };\n        arrayValue[55] = { character: '6', value: '6' };\n        arrayValue[56] = { character: '7', value: '7' };\n        arrayValue[57] = { character: '8', value: '8' };\n        arrayValue[58] = { character: '9', value: '9' };\n        arrayValue[59] = { character: ':', keyword: 'ý', value: 'Z' };\n        arrayValue[60] = { character: ';', keyword: 'ü', value: 'F' };\n        arrayValue[61] = { character: '<', keyword: 'ü', value: 'G' };\n        arrayValue[62] = { character: '=', keyword: 'ü', value: 'H' };\n        arrayValue[63] = { character: '>', keyword: 'ü', value: 'I' };\n        arrayValue[64] = { character: '?', keyword: 'ü', value: 'J' };\n        arrayValue[65] = { character: '@', keyword: 'ü', value: 'V' };\n        arrayValue[66] = { character: 'A', value: 'A' };\n        arrayValue[67] = { character: 'B', value: 'B' };\n        arrayValue[68] = { character: 'C', value: 'C' };\n        arrayValue[69] = { character: 'D', value: 'D' };\n        arrayValue[70] = { character: 'E', value: 'E' };\n        arrayValue[71] = { character: 'F', value: 'F' };\n        arrayValue[72] = { character: 'G', value: 'G' };\n        arrayValue[73] = { character: 'H', value: 'H' };\n        arrayValue[74] = { character: 'I', value: 'I' };\n        arrayValue[75] = { character: 'J', value: 'J' };\n        arrayValue[76] = { character: 'K', value: 'K' };\n        arrayValue[77] = { character: 'L', value: 'L' };\n        arrayValue[78] = { character: 'M', value: 'M' };\n        arrayValue[79] = { character: 'N', value: 'N' };\n        arrayValue[80] = { character: 'O', value: 'O' };\n        arrayValue[81] = { character: 'P', value: 'P' };\n        arrayValue[82] = { character: 'Q', value: 'Q' };\n        arrayValue[83] = { character: 'R', value: 'R' };\n        arrayValue[84] = { character: 'S', value: 'S' };\n        arrayValue[85] = { character: 'T', value: 'T' };\n        arrayValue[86] = { character: 'U', value: 'U' };\n        arrayValue[87] = { character: 'V', value: 'V' };\n        arrayValue[88] = { character: 'W', value: 'W' };\n        arrayValue[88] = { character: 'X', value: 'X' };\n        arrayValue[89] = { character: 'Y', value: 'Y' };\n        arrayValue[90] = { character: 'Z', value: 'Z' };\n        arrayValue[91] = { character: '[', keyword: 'ü', value: 'K' };\n        arrayValue[92] = { character: '\\\\', keyword: 'ü', value: 'L' };\n        arrayValue[93] = { character: ']', keyword: 'ü', value: 'M' };\n        arrayValue[94] = { character: '^', keyword: 'ü', value: 'N' };\n        arrayValue[95] = { character: '_', keyword: 'ü', value: 'O' };\n        arrayValue[96] = { character: '`', keyword: 'ü', value: 'W' };\n        arrayValue[97] = { character: 'a', keyword: 'þ', value: 'A' };\n        arrayValue[98] = { character: 'b', keyword: 'þ', value: 'B' };\n        arrayValue[99] = { character: 'c', keyword: 'þ', value: 'C' };\n        arrayValue[100] = { character: 'd', keyword: 'þ', value: 'D' };\n        arrayValue[101] = { character: 'e', keyword: 'þ', value: 'E' };\n        arrayValue[102] = { character: 'f', keyword: 'þ', value: 'F' };\n        arrayValue[103] = { character: 'g', keyword: 'þ', value: 'G' };\n        arrayValue[104] = { character: 'h', keyword: 'þ', value: 'H' };\n        arrayValue[105] = { character: 'i', keyword: 'þ', value: 'I' };\n        arrayValue[106] = { character: 'j', keyword: 'þ', value: 'J' };\n        arrayValue[107] = { character: 'k', keyword: 'þ', value: 'K' };\n        arrayValue[108] = { character: 'l', keyword: 'þ', value: 'L' };\n        arrayValue[109] = { character: 'm', keyword: 'þ', value: 'M' };\n        arrayValue[110] = { character: 'n', keyword: 'þ', value: 'N' };\n        arrayValue[111] = { character: 'o', keyword: 'þ', value: 'O' };\n        arrayValue[112] = { character: 'p', keyword: 'þ', value: 'P' };\n        arrayValue[113] = { character: 'q', keyword: 'þ', value: 'Q' };\n        arrayValue[114] = { character: 'r', keyword: 'þ', value: 'R' };\n        arrayValue[115] = { character: 's', keyword: 'þ', value: 'S' };\n        arrayValue[116] = { character: 't', keyword: 'þ', value: 'T' };\n        arrayValue[117] = { character: 'u', keyword: 'þ', value: 'U' };\n        arrayValue[118] = { character: 'v', keyword: 'þ', value: 'V' };\n        arrayValue[119] = { character: 'w', keyword: 'þ', value: 'W' };\n        arrayValue[120] = { character: 'x', keyword: 'þ', value: 'X' };\n        arrayValue[121] = { character: 'y', keyword: 'þ', value: 'Y' };\n        arrayValue[122] = { character: 'z', keyword: 'þ', value: 'Z' };\n        arrayValue[123] = { character: '{', keyword: 'ü', value: 'P' };\n        arrayValue[124] = { character: '|', keyword: 'ü', value: 'Q' };\n        arrayValue[125] = { character: '}', keyword: 'ü', value: 'R' };\n        arrayValue[126] = { character: '~', keyword: 'ü', value: 'S' };\n        return arrayValue;\n    };\n    /* tslint:enable */\n    Code93Extension.prototype.encoding = function (string) {\n        var temp = [];\n        for (var j = 0; j < string.length; j++) {\n            for (var k = 0; k < string[parseInt(j.toString(), 10)].length; k++) {\n                for (var i = 0; i < this.barcodeSymbols.length; i++) {\n                    if (string[parseInt(j.toString(), 10)][parseInt(k.toString(), 10)] ===\n                        this.barcodeSymbols[parseInt(i.toString(), 10)].value) {\n                        temp[parseInt(k.toString(), 10)] = this.barcodeSymbols[parseInt(i.toString(), 10)].bars;\n                    }\n                }\n            }\n        }\n        return temp;\n    };\n    return Code93Extension;\n}(_code93__WEBPACK_IMPORTED_MODULE_0__.Code93));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/code93Extension.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/ean13.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/ean13.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ean13: () => (/* binding */ Ean13)\n/* harmony export */ });\n/* harmony import */ var _one_dimension__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../one-dimension */ \"./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/**\n * EAN13 class is  used to calculate the barcode of type EAN13 barcode\n */\nvar Ean13 = /** @class */ (function (_super) {\n    __extends(Ean13, _super);\n    function Ean13() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Validate the given input.\n     *\n     * @returns {string} Validate the given input.\n     * @param {string} value - provide the input values .\n     * @private\n     */\n    Ean13.prototype.validateInput = function (value) {\n        var checkSumValue = this.checksumValue(value);\n        if (value.search(/^[0-9]{13}$/) !== -1 && (Number(value[12]) === this.checkSumData(value) || Number(value[12]) === checkSumValue)) {\n            return undefined;\n        }\n        else if (value.search(/^[0-9]{12}$/) !== -1) {\n            value += this.checkSumData(value);\n            this.value = value;\n            return undefined;\n        }\n        else {\n            return 'Accepts 12 numeric characters.';\n        }\n    };\n    Ean13.prototype.checksumValue = function (number) {\n        var res = number\n            .substr(0, 12)\n            .split('')\n            .map(function (n) { return +n; })\n            .reduce(function (sum, a, idx) { return (idx % 2 ? sum + a * 3 : sum + a); }, 0);\n        return (10 - (res % 10)) % 10;\n    };\n    Ean13.prototype.checkSumData = function (value) {\n        var sum1 = 3 * (Number(value[11]) + Number(value[9]) + Number(value[7])\n            + Number(value[5]) + Number(value[3]) + Number(value[1]));\n        var sum2 = (Number(value[10]) + Number(value[8]) + Number(value[6])\n            + Number(value[4])) + Number(value[2]) + Number(value[0]);\n        var checkSumValue = (sum1 + sum2);\n        var roundOffValue = Math.round(checkSumValue / 10) * 10;\n        return roundOffValue - checkSumValue;\n    };\n    // eslint-disable-next-line\n    Ean13.prototype.getStructure = function () {\n        return {\n            '0': 'LLLLLL',\n            '1': 'LLGLGG',\n            '2': 'LLGGLG',\n            '3': 'LLGGGL',\n            '4': 'LGLLGG',\n            '5': 'LGGLLG',\n            '6': 'LGGGLL',\n            '7': 'LGLGLG',\n            '8': 'LGLGGL',\n            '9': 'LGGLGL'\n        };\n    };\n    // eslint-disable-next-line\n    Ean13.prototype.getBinaries = function () {\n        return {\n            'L': [\n                '0001101', '0011001', '0010011', '0111101', '0100011',\n                '0110001', '0101111', '0111011', '0110111', '0001011'\n            ], 'G': [\n                '0100111', '0110011', '0011011', '0100001', '0011101',\n                '0111001', '0000101', '0010001', '0001001', '0010111'\n            ],\n            'R': [\n                '1110010', '1100110', '1101100', '1000010', '1011100',\n                '1001110', '1010000', '1000100', '1001000', '1110100'\n            ],\n            'O': [\n                '0001101', '0011001', '0010011', '0111101', '0100011',\n                '0110001', '0101111', '0111011', '0110111', '0001011'\n            ],\n            'E': [\n                '0100111', '0110011', '0011011', '0100001', '0011101',\n                '0111001', '0000101', '0010001', '0001001', '0010111'\n            ]\n        };\n    };\n    /**\n     * Draw the barcode SVG.\\\n     *\n     * @returns {void} Draw the barcode SVG .\n     * @param {HTMLElement} canvas - Provide the canvas element .\n     * @private\n     */\n    Ean13.prototype.draw = function (canvas) {\n        var endBars = '101';\n        var middleBar = '01010';\n        var code = [];\n        // eslint-disable-next-line\n        var structureValue = this.getStructure();\n        var structure = structureValue[this.value[0]];\n        code.push(endBars);\n        var leftString = this.value.substr(1, 6);\n        code.push(this.leftValue(true, structure, leftString));\n        code.push(middleBar);\n        leftString = this.value.substr(7, 6);\n        code.push(this.leftValue(false, 'RRRRRR', leftString));\n        code.push(endBars);\n        this.calculateBarCodeAttributes(code, canvas);\n    };\n    Ean13.prototype.leftValue = function (isLeft, structure, leftString) {\n        var code;\n        var tempCodes;\n        // eslint-disable-next-line\n        var codes = this.getBinaries();\n        for (var i = 0; i < leftString.length; i++) {\n            tempCodes = codes[structure[parseInt(i.toString(), 10)]];\n            if (i === 0) {\n                code = tempCodes[leftString[parseInt(i.toString(), 10)]];\n            }\n            else {\n                code += tempCodes[leftString[parseInt(i.toString(), 10)]];\n            }\n        }\n        return code;\n    };\n    return Ean13;\n}(_one_dimension__WEBPACK_IMPORTED_MODULE_0__.OneDimension));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/ean13.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/ean8.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/ean8.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ean8: () => (/* binding */ Ean8)\n/* harmony export */ });\n/* harmony import */ var _one_dimension__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../one-dimension */ \"./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/**\n * EAN8 class is  used to calculate the barcode of type EAN8 barcode\n */\nvar Ean8 = /** @class */ (function (_super) {\n    __extends(Ean8, _super);\n    function Ean8() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Validate the given input.\n     *\n     * @returns {string} Validate the given input.\n     * @param {string} value - provide the input values .\n     * @private\n     */\n    Ean8.prototype.validateInput = function (value) {\n        if (value.search(/^[0-9]{8}$/) !== -1 && Number(value[7]) === this.checkSumData(value)) {\n            return undefined;\n        }\n        else {\n            return 'Accepts 8 numeric characters.';\n        }\n    };\n    // eslint-disable-next-line\n    Ean8.prototype.getCodeValueRight = function (right) {\n        // eslint-disable-next-line\n        var codes;\n        if (right) {\n            codes = {\n                '0': '0001101',\n                '1': '0011001',\n                '2': '0010011',\n                '3': '0111101',\n                '4': '0100011',\n                '5': '0110001',\n                '6': '0101111',\n                '7': '0111011',\n                '8': '0110111',\n                '9': '0001011'\n            };\n        }\n        else {\n            codes = {\n                '0': '1110010',\n                '1': '1100110',\n                '2': '1101100',\n                '3': '1000010',\n                '4': '1011100',\n                '5': '1001110',\n                '6': '1010000',\n                '7': '1000100',\n                '8': '1001000',\n                '9': '1110100'\n            };\n        }\n        return codes;\n    };\n    Ean8.prototype.checkSumData = function (value) {\n        for (var i = 0; i < value.length; i++) {\n            var sum1 = Number(value[1]) + Number(value[3]) + Number(value[5]);\n            var sum2 = 3 * (Number(value[0]) + Number(value[2]) + Number(value[4]) + Number(value[6]));\n            var checkSumValue = sum1 + sum2;\n            var checkSumDigit = 10 - (checkSumValue % 10);\n            return checkSumDigit === 0 ? checkSumDigit = 0 : checkSumDigit;\n        }\n        return 0;\n    };\n    /**\n     * Draw the barcode SVG.\\\n     *\n     * @returns {void} Draw the barcode SVG .\n     * @param {HTMLElement} canvas - Provide the canvas element .\n     * @private\n     */\n    Ean8.prototype.draw = function (canvas) {\n        var endBars = '101';\n        var middleBar = '01010';\n        var codes = this.getCodeValueRight(true);\n        var code = [];\n        code.push(endBars);\n        code.push(this.leftValue(codes, true));\n        code.push(middleBar);\n        codes = this.getCodeValueRight(false);\n        code.push(this.leftValue(codes, false));\n        code.push(endBars);\n        this.calculateBarCodeAttributes(code, canvas);\n    };\n    Ean8.prototype.leftValue = function (codes, isLeft) {\n        var code;\n        for (var i = isLeft ? 0 : this.value.length - 4; i < (isLeft ? this.value.length - 4 : this.value.length); i++) {\n            if (i === 0 || i === 4) {\n                code = codes[this.value[parseInt(i.toString(), 10)]];\n            }\n            else {\n                code += codes[this.value[parseInt(i.toString(), 10)]];\n            }\n        }\n        return code;\n    };\n    return Ean8;\n}(_one_dimension__WEBPACK_IMPORTED_MODULE_0__.OneDimension));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/ean8.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/upcA.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/upcA.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UpcA: () => (/* binding */ UpcA)\n/* harmony export */ });\n/* harmony import */ var _one_dimension__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../one-dimension */ \"./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/**\n * This class is  used to calculate the barcode of type Universal Product Code barcode\n */\nvar UpcA = /** @class */ (function (_super) {\n    __extends(UpcA, _super);\n    function UpcA() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Validate the given input.\n     *\n     * @returns {string} Validate the given input.\n     * @param {string} value - provide the input values .\n     * @private\n     */\n    UpcA.prototype.validateInput = function (value) {\n        if (value.search(/^[0-9]{11}$/) !== -1 && this.enableCheckSum) {\n            this.value += this.checkSumData(this.value);\n        }\n        if (this.value.search(/^[0-9]{12}$/) !== -1 && (Number(this.value[11]) === this.checkSumData(this.value))) {\n            return undefined;\n        }\n        else {\n            return 'Accepts 11 numeric characters.';\n        }\n    };\n    UpcA.prototype.checkSumData = function (value) {\n        var sum1 = 3 * (Number(value[0]) + Number(value[2]) + Number(value[4])\n            + Number(value[6]) + Number(value[8]) + Number(value[10]));\n        var sum2 = (Number(value[9]) + Number(value[7]) + Number(value[5]) + Number(value[3]) + Number(value[1]));\n        var checkSumValue = (sum1 + sum2);\n        return (10 - checkSumValue % 10) % 10;\n    };\n    // eslint-disable-next-line\n    UpcA.prototype.getBinaries = function () {\n        return {\n            'L': [\n                '0001101', '0011001', '0010011', '0111101', '0100011',\n                '0110001', '0101111', '0111011', '0110111', '0001011'\n            ],\n            'R': [\n                '1110010', '1100110', '1101100', '1000010', '1011100',\n                '1001110', '1010000', '1000100', '1001000', '1110100'\n            ]\n        };\n    };\n    /**\n     * Draw the barcode SVG.\\\n     *\n     * @returns {void} Draw the barcode SVG .\n     * @param {HTMLElement} canvas - Provide the canvas element .\n     * @private\n     */\n    UpcA.prototype.draw = function (canvas) {\n        var endDigits = '00000000';\n        var middleBar = '01010';\n        var code = [];\n        code.push(endDigits);\n        code.push('101' + this.leftValue(true, 'L', this.value[0]));\n        code.push(this.leftValue(true, 'LLLLL', this.value.substr(1, 5)));\n        code.push(middleBar);\n        code.push(this.leftValue(true, 'RRRRR', this.value.substr(6, 5)));\n        code.push(this.leftValue(true, 'R', this.value[11]) + '101');\n        code.push(endDigits);\n        this.calculateBarCodeAttributes(code, canvas);\n    };\n    UpcA.prototype.leftValue = function (isLeft, structure, leftString) {\n        var code;\n        var tempValue;\n        // eslint-disable-next-line\n        var codes = this.getBinaries();\n        for (var i = 0; i < leftString.length; i++) {\n            tempValue = codes[structure[parseInt(i.toString(), 10)]];\n            if (i === 0) {\n                code = tempValue[leftString[parseInt(i.toString(), 10)]];\n            }\n            else {\n                code += tempValue[leftString[parseInt(i.toString(), 10)]];\n            }\n        }\n        return code;\n    };\n    return UpcA;\n}(_one_dimension__WEBPACK_IMPORTED_MODULE_0__.OneDimension));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/upcA.js?");

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/upcE.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/upcE.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UpcE: () => (/* binding */ UpcE)\n/* harmony export */ });\n/* harmony import */ var _one_dimension__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../one-dimension */ \"./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/**\n * This class is  used to calculate the barcode of type Universal Product Code barcode\n */\nvar UpcE = /** @class */ (function (_super) {\n    __extends(UpcE, _super);\n    function UpcE() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Validate the given input.\n     *\n     * @returns {string} Validate the given input.\n     * @param {string} value - provide the input values .\n     * @private\n     */\n    UpcE.prototype.validateInput = function (value) {\n        if (value.search(/^[0-9]{6}$/) !== -1) {\n            return undefined;\n        }\n        else {\n            return 'Accepts 6 numeric characters.';\n        }\n    };\n    UpcE.prototype.checkSum = function (value) {\n        var result = 0;\n        var i;\n        for (i = 1; i < 11; i += 2) {\n            // eslint-disable-next-line\n            result += parseInt(value[i], undefined);\n        }\n        for (i = 0; i < 11; i += 2) {\n            // eslint-disable-next-line\n            result += parseInt(value[i], undefined) * 3;\n        }\n        return (10 - (result % 10)) % 10;\n    };\n    // eslint-disable-next-line\n    UpcE.prototype.getStructure = function () {\n        return {\n            '0': 'EEEOOO',\n            '1': 'EEOEOO',\n            '2': 'EEOOEO',\n            '3': 'EEOOOE',\n            '4': 'EOEEOO',\n            '5': 'EOOEEO',\n            '6': 'EOOOEE',\n            '7': 'EOEOEO',\n            '8': 'EOEOOE',\n            '9': 'EOOEOE'\n        };\n    };\n    UpcE.prototype.getValue = function () {\n        return ['XX00000XXX',\n            'XX10000XXX',\n            'XX20000XXX',\n            'XXX00000XX',\n            'XXXX00000X',\n            'XXXXX00005',\n            'XXXXX00006',\n            'XXXXX00007',\n            'XXXXX00008',\n            'XXXXX00009'];\n    };\n    UpcE.prototype.getExpansion = function (lastDigit) {\n        var value = this.getValue();\n        return value[\"\" + lastDigit];\n    };\n    UpcE.prototype.getUpcValue = function () {\n        var lastDigit = this.value[this.value.length - 1];\n        var expansionValue = this.getExpansion(lastDigit);\n        var result = '';\n        var index = 0;\n        for (var i = 0; i < expansionValue.length; i++) {\n            var value = expansionValue[parseInt(i.toString(), 10)];\n            if (value === 'X') {\n                result += this.value[index++];\n            }\n            else {\n                result += value;\n            }\n        }\n        result = '' + '0' + result;\n        var encodingValue = '' + result;\n        if (this.enableCheckSum) {\n            encodingValue += this.checkSum(result);\n        }\n        return encodingValue;\n    };\n    // eslint-disable-next-line\n    UpcE.prototype.getBinaries = function () {\n        return {\n            'O': [\n                '0001101', '0011001', '0010011', '0111101', '0100011',\n                '0110001', '0101111', '0111011', '0110111', '0001011'\n            ],\n            'E': [\n                '0100111', '0110011', '0011011', '0100001', '0011101',\n                '0111001', '0000101', '0010001', '0001001', '0010111'\n            ]\n        };\n    };\n    UpcE.prototype.encoding = function (upcAValue, string, structure) {\n        var code;\n        var tempValue;\n        // eslint-disable-next-line\n        var codes = this.getBinaries();\n        for (var i = 0; i < string.length; i++) {\n            tempValue = codes[structure[parseInt(i.toString(), 10)]];\n            if (i === 0) {\n                code = tempValue[string[parseInt(i.toString(), 10)]];\n            }\n            else {\n                code += tempValue[string[parseInt(i.toString(), 10)]];\n            }\n        }\n        return code;\n    };\n    /**\n     * Draw the barcode SVG.\\\n     *\n     * @returns {void} Draw the barcode SVG .\n     * @param {HTMLElement} canvas - Provide the canvas element .\n     * @private\n     */\n    UpcE.prototype.draw = function (canvas) {\n        var endBars = '101';\n        var middleBar = '010101';\n        var endDigits = '00000000';\n        var code = [];\n        var upcAValue = this.getUpcValue();\n        // eslint-disable-next-line\n        var structureValue = this.getStructure();\n        var structure = structureValue[upcAValue[upcAValue.length - 1]];\n        code.push(endDigits);\n        code.push(endBars);\n        code.push(this.encoding(upcAValue, this.value, structure));\n        code.push(middleBar);\n        code.push(endDigits);\n        var renderText = upcAValue[0] + this.value + upcAValue[upcAValue.length - 1];\n        this.calculateBarCodeAttributes(code, canvas, this.displayText.text === '' ? renderText : undefined);\n    };\n    return UpcE;\n}(_one_dimension__WEBPACK_IMPORTED_MODULE_0__.OneDimension));\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-barcode-generator/src/barcode/one-dimension/upcE.js?");

/***/ })

}]);