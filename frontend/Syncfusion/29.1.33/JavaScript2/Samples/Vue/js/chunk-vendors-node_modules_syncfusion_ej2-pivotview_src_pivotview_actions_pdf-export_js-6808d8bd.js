"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-pivotview_src_pivotview_actions_pdf-export_js-6808d8bd"],{

/***/ "./node_modules/@syncfusion/ej2-pivotview/src/pivotview/actions/pdf-export.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pivotview/src/pivotview/actions/pdf-export.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PDFExport: () => (/* binding */ PDFExport)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-pdf-export */ \"./node_modules/@syncfusion/ej2-pdf-export/index.js\");\n/* harmony import */ var _common_base_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/base/constant */ \"./node_modules/@syncfusion/ej2-pivotview/src/common/base/constant.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_export_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../base/export-util */ \"./node_modules/@syncfusion/ej2-pivotview/src/base/export-util.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../base/util */ \"./node_modules/@syncfusion/ej2-pivotview/src/base/util.js\");\n/* harmony import */ var _pdf_export_helper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pdf-export-helper */ \"./node_modules/@syncfusion/ej2-pivotview/src/pivotview/actions/pdf-export-helper.js\");\n\n\n\n\n\n\n/**\n * @hidden\n * `PDFExport` module is used to handle the PDF export action.\n */\nvar PDFExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid PDF Export module.\n     *\n     * @param {PivotView} parent - Instance of pivot table.\n     * @hidden\n     */\n    function PDFExport(parent) {\n        this.parent = parent;\n        this.pdfExportHelper = new _pdf_export_helper__WEBPACK_IMPORTED_MODULE_5__.PDFExportHelper();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - string.\n     * @private\n     */\n    PDFExport.prototype.getModuleName = function () {\n        return 'pdfExport';\n    };\n    PDFExport.prototype.addPage = function (eventParams, pdfExportProperties) {\n        pdfExportProperties = pdfExportProperties ? pdfExportProperties : this.exportProperties.pdfExportProperties;\n        var documentSection = eventParams.document.sections.add();\n        var documentHeight = eventParams.document.pageSettings.height;\n        var documentWidth = eventParams.document.pageSettings.width;\n        if (this.exportProperties.width || this.exportProperties.height) {\n            eventParams.document.pageSettings.orientation = ((this.exportProperties.width > this.exportProperties.height)\n                || (!this.exportProperties.height && (this.exportProperties.width > documentHeight)) || (!this.exportProperties.width\n                && (documentWidth > this.exportProperties.height))) ? _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPageOrientation.Landscape : _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPageOrientation.Portrait;\n            eventParams.document.pageSettings.size = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.SizeF(this.exportProperties.width ? this.exportProperties.width :\n                documentWidth, this.exportProperties.height ? this.exportProperties.height : documentHeight);\n        }\n        else {\n            eventParams.document.pageSettings.orientation = (this.exportProperties.orientation === 0 || this.exportProperties.orientation)\n                ? this.exportProperties.orientation : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties) &&\n                !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties.pageOrientation)) ? (pdfExportProperties.pageOrientation === 'Landscape' ?\n                _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPageOrientation.Landscape : _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPageOrientation.Portrait) : _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPageOrientation.Landscape;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties.pageSize)) {\n                eventParams.document.pageSettings.size = _base_util__WEBPACK_IMPORTED_MODULE_4__.PivotUtil.getPageSize(pdfExportProperties.pageSize);\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.exportProperties.pdfMargins)) {\n            var margins = eventParams.document.pageSettings.margins;\n            margins.top = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.exportProperties.pdfMargins.top) ? this.exportProperties.pdfMargins.top : margins.top;\n            margins.bottom = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.exportProperties.pdfMargins.bottom) ? this.exportProperties.pdfMargins.bottom :\n                margins.bottom;\n            margins.left = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.exportProperties.pdfMargins.left) ? this.exportProperties.pdfMargins.left : margins.left;\n            margins.right = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.exportProperties.pdfMargins.right) ? this.exportProperties.pdfMargins.right :\n                margins.right;\n        }\n        documentSection.setPageSettings(eventParams.document.pageSettings);\n        var page = documentSection.pages.add();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties.header)) {\n            this.pdfExportHelper.drawHeader(pdfExportProperties, eventParams.document);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties.footer)) {\n            this.pdfExportHelper.drawFooter(pdfExportProperties, eventParams.document);\n        }\n        return page;\n    };\n    PDFExport.prototype.getFontStyle = function (theme) {\n        var fontType = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontStyle.Regular;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme) && theme.bold) {\n            fontType |= _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontStyle.Bold;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme) && theme.italic) {\n            fontType |= _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontStyle.Italic;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme) && theme.underline) {\n            fontType |= _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontStyle.Underline;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme) && theme.strikeout) {\n            fontType |= _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontStyle.Strikeout;\n        }\n        return fontType;\n    };\n    PDFExport.prototype.getBorderStyle = function (borderStyle) {\n        var borders = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBorders();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(borderStyle)) {\n            var borderWidth = borderStyle.width;\n            // set border width\n            var width = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(borderWidth) && typeof borderWidth === 'number') ? borderWidth * 0.75 : undefined;\n            // set border color\n            var color = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(196, 196, 196);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(borderStyle.color)) {\n                var borderColor = this.pdfExportHelper.hexDecToRgb(borderStyle.color);\n                color = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(borderStyle.dashStyle)) {\n                pen.dashStyle = this.pdfExportHelper.getDashStyle(borderStyle.dashStyle);\n            }\n            borders.all = pen;\n        }\n        else {\n            var pdfColor = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(234, 234, 234);\n            borders.all = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(pdfColor);\n        }\n        return borders;\n    };\n    PDFExport.prototype.getStyle = function () {\n        var border = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBorders();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.gridStyle)) {\n            var fontFamily = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.gridStyle.header.fontName) ?\n                this.getFontFamily(this.gridStyle.header.fontName) : _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontFamily.Helvetica;\n            var fontStyle = this.getFontStyle(this.gridStyle.header);\n            var fontSize = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.gridStyle.header.fontSize) ? this.gridStyle.header.fontSize : 10.5;\n            var pdfColor = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor();\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.gridStyle.header.fontColor)) {\n                var penBrushColor = this.pdfExportHelper.hexDecToRgb(this.gridStyle.header.fontColor);\n                pdfColor = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            var font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.gridStyle.header.font)) {\n                font = this.gridStyle.header.font;\n            }\n            return {\n                border: this.getBorderStyle(this.gridStyle.header.border), font: font, brush: new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(pdfColor)\n            };\n        }\n        else {\n            return {\n                brush: new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor()),\n                border: border, font: undefined\n            };\n        }\n    };\n    PDFExport.prototype.setRecordThemeStyle = function (row, border) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.gridStyle) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.gridStyle.record)) {\n            var fontFamily = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.gridStyle.record.fontName) ?\n                this.getFontFamily(this.gridStyle.record.fontName) : _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontFamily.Helvetica;\n            var fontSize = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.gridStyle.record.fontSize) ? this.gridStyle.record.fontSize : 9.75;\n            var fontStyle = this.getFontStyle(this.gridStyle.record);\n            var font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.gridStyle.record.font)) {\n                font = this.gridStyle.record.font;\n            }\n            row.style.setFont(font);\n            var pdfColor = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor();\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.gridStyle.record.fontColor)) {\n                var penBrushColor = this.pdfExportHelper.hexDecToRgb(this.gridStyle.record.fontColor);\n                pdfColor = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            row.style.setTextBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(pdfColor));\n        }\n        var borderRecord = this.gridStyle && this.gridStyle.record &&\n            this.gridStyle.record.border ? this.getBorderStyle(this.gridStyle.record.border) : border;\n        row.style.setBorder(borderRecord);\n        return row;\n    };\n    /**\n     * Method to perform pdf export.\n     *\n     * @param  {PdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Object} pdfDoc - Defined the PDF document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<Object>}\n     * @hidden\n     */\n    PDFExport.prototype.exportToPDF = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var _a;\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.gridStyle = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.exportProperties.pdfExportProperties) ?\n            this.exportProperties.pdfExportProperties.theme : undefined;\n        var eventParams = this.applyEvent();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfDoc)) {\n            eventParams.document = pdfDoc;\n        }\n        var headerStyle = this.getStyle();\n        var fileName = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.exportProperties) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.exportProperties.fileName) ?\n            this.exportProperties.fileName : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties.fileName)) ?\n            pdfExportProperties.fileName : 'default';\n        var indent = this.parent.renderModule.maxIndent ? this.parent.renderModule.maxIndent : 5;\n        var firstColumnWidth = 100 + (indent * 20);\n        var size = Math.floor((540 - firstColumnWidth) / 90) + 1;\n        /** Fill data and export */\n        var dataCollIndex = 0;\n        var pivotValues = eventParams.args.pivotValues[dataCollIndex];\n        if (this.exportProperties.columnSize || this.exportProperties.width || this.exportProperties.height) {\n            size = this.exportProperties.columnSize > 0 ? this.exportProperties.columnSize : pivotValues[0].length;\n        }\n        this.exportProperties.allowRepeatHeader =\n            this.exportProperties.allowRepeatHeader === true || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.exportProperties.allowRepeatHeader);\n        var allowRepeatHeader = this.exportProperties.allowRepeatHeader ? this.exportProperties.allowRepeatHeader : false;\n        var isHeaderRepeatEligible = allowRepeatHeader && size > 1;\n        var rowMaxLevel;\n        if (this.parent.isTabular) {\n            rowMaxLevel = this.parent.engineModule.rowMaxLevel;\n            size = rowMaxLevel + 1 < size ? size : rowMaxLevel + 2;\n        }\n        for (var vLen = 0; isHeaderRepeatEligible && vLen < pivotValues.length; vLen++) {\n            for (var vCnt = size; pivotValues[vLen] && vCnt < pivotValues[vLen].length; vCnt += size) {\n                var rowHeaderLevel = this.parent.isTabular\n                    ? pivotValues[vLen].slice(0, rowMaxLevel + 1) : [pivotValues[vLen][0]];\n                (_a = pivotValues[vLen]).splice.apply(_a, [vCnt, 0].concat(rowHeaderLevel));\n            }\n        }\n        var colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n        var integratedCnt = 0;\n        do {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties)) {\n                this.exportProperties.header = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties.header) &&\n                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties.header.contents) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties.header.contents[0].value))\n                    ? pdfExportProperties.header.contents[0].value : this.exportProperties.header;\n                this.exportProperties.footer = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties.footer) &&\n                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties.footer.contents) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(pdfExportProperties.footer.contents[0].value))\n                    ? pdfExportProperties.footer.contents[0].value : this.exportProperties.footer;\n            }\n            var page = this.addPage(eventParams, pdfExportProperties);\n            var pdfGrid = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfGrid();\n            var pageSize = size > 0 ? size : 5;\n            if (pivotValues && pivotValues.length > 0) {\n                pdfGrid.columns.add(pivotValues[0].length - integratedCnt >= pageSize ? pageSize : pivotValues[0].length - integratedCnt);\n                var rowLen = pivotValues.length;\n                var actualrCnt = 0;\n                var maxLevel = 0;\n                var columnWidth = 0;\n                for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        var isColHeader = !(pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row');\n                        var colLen = pivotValues[rCnt].length > (integratedCnt + pageSize) ? (integratedCnt + pageSize)\n                            : pivotValues[rCnt].length;\n                        var rowCount = 0;\n                        if (isColHeader) {\n                            pdfGrid.headers.add(1);\n                        }\n                        var pdfGridRow = !isColHeader ? pdfGrid.rows.addRow() : pdfGrid.headers.getHeader(actualrCnt);\n                        if (isColHeader) {\n                            pdfGridRow.style.setBorder(headerStyle.border);\n                            if (headerStyle.font) {\n                                pdfGridRow.style.setFont(headerStyle.font);\n                            }\n                            pdfGridRow.style.setTextBrush(headerStyle.brush);\n                        }\n                        else {\n                            this.setRecordThemeStyle(pdfGridRow, headerStyle.border);\n                        }\n                        var localCnt = 0;\n                        var isEmptyRow = true;\n                        for (var cCnt = integratedCnt; cCnt < colLen; cCnt++) {\n                            var isValueCell = false;\n                            if (pivotValues[rCnt][cCnt] && pivotValues[rCnt][cCnt].rowSpan !== 0) {\n                                var pivotCell = pivotValues[rCnt][cCnt];\n                                var cellValue = pivotCell.formattedText;\n                                cellValue = (this.parent.dataSourceSettings.rows.length === 0 || this.parent.dataSourceSettings.columns.length === 0) ? this.parent.getValuesHeader(pivotCell, 'value') : cellValue;\n                                cellValue = pivotCell.type === 'grand sum' ? (this.parent.dataSourceSettings.rows.length === 0 || this.parent.dataSourceSettings.columns.length === 0) ? this.parent.getValuesHeader(pivotCell, 'grandTotal') :\n                                    this.parent.localeObj.getConstant('grandTotal') : (pivotCell.type === 'sum' ?\n                                    cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total')) : cellValue);\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                        pdfGridRow.cells.getCell(localCnt).columnSpan = pivotCell.colSpan ?\n                                            (pageSize - localCnt < pivotCell.colSpan ? pageSize - localCnt : pivotCell.colSpan) : 1;\n                                        if ((isColHeader && pivotCell.rowSpan && pivotCell.rowSpan > 1) ||\n                                            (!isColHeader && pivotCell.rowSpan && pivotCell.rowSpan > 1 && this.parent.isTabular)) {\n                                            pdfGridRow.cells.getCell(localCnt).rowSpan = pivotCell.rowSpan ? pivotCell.rowSpan : 1;\n                                        }\n                                        pdfGridRow.cells.getCell(localCnt).value = cellValue ? cellValue.toString() : '';\n                                    }\n                                    if (cellValue !== '') {\n                                        isEmptyRow = false;\n                                    }\n                                }\n                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                isValueCell = pivotCell.axis === 'value';\n                                cCnt = cCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                localCnt = localCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                if (pivotCell.style) {\n                                    pdfGridRow = this.applyStyle(pdfGridRow, pivotCell, localCnt);\n                                }\n                                var args = {\n                                    style: undefined,\n                                    pivotCell: pivotCell,\n                                    cell: pdfGridRow.cells.getCell(localCnt),\n                                    column: pdfGrid.columns.getColumn(localCnt)\n                                };\n                                this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_1__.onPdfCellRender, args);\n                                if (pivotCell.axis === 'column') {\n                                    args = {\n                                        style: args.style,\n                                        cell: args.cell,\n                                        gridCell: args.pivotCell\n                                    };\n                                    this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_1__.pdfHeaderQueryCellInfo, args);\n                                    pdfGridRow.cells.getCell(localCnt).value = args.gridCell.formattedText ?\n                                        args.gridCell.formattedText : cellValue;\n                                }\n                                else {\n                                    args = {\n                                        style: args.style,\n                                        cell: args.cell,\n                                        column: undefined,\n                                        data: args.pivotCell,\n                                        value: cellValue\n                                    };\n                                    this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_1__.pdfQueryCellInfo, args);\n                                    pdfGridRow.cells.getCell(localCnt).value = args.value ? args.value : cellValue;\n                                }\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                            }\n                            else {\n                                var args = {\n                                    style: undefined,\n                                    pivotCell: undefined,\n                                    cell: pdfGridRow.cells.getCell(localCnt),\n                                    column: pdfGrid.columns.getColumn(localCnt)\n                                };\n                                this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_1__.onPdfCellRender, args);\n                                columnWidth = args.column.width;\n                                var pivotCell = { formattedText: '' };\n                                if (pivotCell.axis === 'column') {\n                                    args = {\n                                        style: args.style,\n                                        cell: args.cell,\n                                        gridCell: args.pivotCell\n                                    };\n                                    this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_1__.pdfHeaderQueryCellInfo, args);\n                                }\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                                pdfGridRow.cells.getCell(localCnt).value = '';\n                                if (this.parent.isTabular && rowCount === 0) {\n                                    if (cCnt === 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                        this.parent.dataSourceSettings.columns.length > 0) {\n                                        pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan =\n                                            Object.keys(this.engine.headerContent).length + 1;\n                                        pdfGrid.headers.getHeader(0).cells.getCell(0).columnSpan = this.parent.engineModule.rowMaxLevel + 1;\n                                    }\n                                    else if (cCnt !== 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                        this.parent.dataSourceSettings.columns.length > 0 &&\n                                        pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan <\n                                            Object.keys(this.engine.headerContent).length) {\n                                        pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan =\n                                            Object.keys(this.engine.headerContent).length;\n                                        pdfGrid.headers.getHeader(0).cells.getCell(0).columnSpan = this.parent.engineModule.rowMaxLevel + 1;\n                                    }\n                                    rowCount++;\n                                }\n                                else {\n                                    if (cCnt === 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                        this.parent.dataSourceSettings.columns.length > 0) {\n                                        pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                    }\n                                    else if (cCnt !== 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                        this.parent.dataSourceSettings.columns.length > 0 &&\n                                        pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan <\n                                            Object.keys(this.engine.headerContent).length) {\n                                        pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                    }\n                                }\n                            }\n                            var stringFormat = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStringFormat();\n                            if (this.parent.dataType === 'olap') {\n                                var indent_1 = (!isColHeader && localCnt === 0 &&\n                                    pivotValues[rCnt][cCnt]) ?\n                                    (this.parent.renderModule.indentCollection[pivotValues[rCnt][cCnt]\n                                        .rowIndex]) : 0;\n                                stringFormat.paragraphIndent = indent_1 * 15;\n                                maxLevel = maxLevel > indent_1 ? maxLevel : indent_1;\n                            }\n                            else {\n                                stringFormat.paragraphIndent = 0;\n                                if ((!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt] &&\n                                    pivotValues[rCnt][cCnt].level !== -1)) {\n                                    var cell = pivotValues[rCnt][cCnt];\n                                    var levelName = cell.valueSort ? cell.valueSort.levelName.toString() : '';\n                                    var memberPos = cell.actualText ?\n                                        cell.actualText.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter)\n                                            .length : 0;\n                                    var levelPosition = levelName.split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length -\n                                        (memberPos ? memberPos - 1 : memberPos);\n                                    var level = levelPosition ? (levelPosition - 1) : 0;\n                                    stringFormat.paragraphIndent = level * 10;\n                                }\n                            }\n                            stringFormat.alignment = isValueCell ? _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfTextAlignment.Right : _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfTextAlignment.Left;\n                            stringFormat.lineAlignment = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfVerticalAlignment.Middle;\n                            pdfGridRow.cells.getCell(localCnt).style.stringFormat = stringFormat;\n                            localCnt++;\n                        }\n                        if (isEmptyRow) {\n                            pdfGridRow.height = 16;\n                        }\n                        actualrCnt++;\n                    }\n                }\n                pdfGrid.columns.getColumn(0).width = columnWidth > 0 ? columnWidth : 100 + (maxLevel * 20);\n            }\n            if (integratedCnt === 0 && this.parent.dataSourceSettings.columns && this.parent.dataSourceSettings.columns.length > 0) {\n                pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan--;\n            }\n            pdfGrid.draw(page, new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PointF(10, 20));\n            integratedCnt = integratedCnt + pageSize;\n            if (integratedCnt >= colLength && eventParams.args.pivotValues.length > (dataCollIndex + 1)) {\n                dataCollIndex++;\n                pivotValues = eventParams.args.pivotValues[dataCollIndex];\n                colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n                integratedCnt = 0;\n            }\n        } while (integratedCnt < colLength);\n        return new Promise(function (resolve) {\n            var blobData;\n            if (isBlob || isMultipleExport) {\n                if (isBlob) {\n                    blobData = eventParams.document.save();\n                }\n            }\n            else {\n                eventParams.document.save(fileName + '.pdf');\n                eventParams.document.destroy();\n            }\n            var exportCompleteEventArgs = {\n                type: 'PDF',\n                promise: isBlob ? blobData : null\n            };\n            _this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_1__.exportComplete, exportCompleteEventArgs);\n            resolve(eventParams.document);\n        });\n    };\n    PDFExport.prototype.applyStyle = function (pdfGridRow, pivotCell, localCnt) {\n        var color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.backgroundColor);\n        var brush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.backgroundBrush = brush;\n        var size = Number(pivotCell.style.fontSize.split('px')[0]);\n        var font = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(_syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontFamily.TimesRoman, size, _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontStyle.Regular);\n        pdfGridRow.cells.getCell(localCnt).style.font = font;\n        color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.color);\n        brush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.textBrush = brush;\n        return pdfGridRow;\n    };\n    PDFExport.prototype.getFontFamily = function (family) {\n        switch (family) {\n            case 'TimesRoman':\n                return 2;\n            case 'Courier':\n                return 1;\n            case 'Symbol':\n                return 3;\n            case 'ZapfDingbats':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    PDFExport.prototype.getFont = function (theme) {\n        if (theme.style.font) {\n            return theme.style.font;\n        }\n        var fontSize = (theme.cell['cellStyle'].font &&\n            theme.cell['cellStyle'].font.fontSize) ? theme.cell['cellStyle'].font.fontSize :\n            (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme.style.fontSize)) ? (theme.style.fontSize * 0.75) : 9.75;\n        var fontFamily = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme.style.fontFamily)) ?\n            (this.getFontFamily(theme.style.fontFamily)) : _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontFamily.TimesRoman;\n        var fontStyle = _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontStyle.Regular;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme.style.bold) && theme.style.bold) {\n            fontStyle |= _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontStyle.Bold;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme.style.italic) && theme.style.italic) {\n            fontStyle |= _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontStyle.Italic;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme.style.underline) && theme.style.underline) {\n            fontStyle |= _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontStyle.Underline;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme.style.strikeout) && theme.style.strikeout) {\n            fontStyle |= _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfFontStyle.Strikeout;\n        }\n        return new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfStandardFont(fontFamily, fontSize, fontStyle);\n    };\n    PDFExport.prototype.processCellStyle = function (gridCell, arg) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(arg.style.backgroundColor)) {\n            var backColor = this.pdfExportHelper.hexDecToRgb(arg.style.backgroundColor);\n            gridCell.style.backgroundBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(backColor.r, backColor.g, backColor.b));\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(arg.style.textBrushColor)) {\n            var textBrushColor = this.pdfExportHelper.hexDecToRgb(arg.style.textBrushColor);\n            gridCell.style.textBrush = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfSolidBrush(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(arg.style.textPenColor)) {\n            var textColor = this.pdfExportHelper.hexDecToRgb(arg.style.textPenColor);\n            gridCell.style.textPen = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(textColor.r, textColor.g, textColor.b));\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(arg.style.fontFamily) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(arg.style.fontSize) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(arg.style.bold) ||\n            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(arg.style.italic) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(arg.style.underline) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(arg.style.strikeout)) {\n            gridCell.style.font = this.getFont(arg);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(arg.style.border)) {\n            var border = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfBorders();\n            var borderWidth = arg.style.border.width;\n            // set border width\n            var width = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(borderWidth) && typeof borderWidth === 'number') ? (borderWidth * 0.75) : (undefined);\n            // set border color\n            var color = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(196, 196, 196);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(arg.style.border.color)) {\n                var borderColor = this.pdfExportHelper.hexDecToRgb(arg.style.border.color);\n                color = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(arg.style.border.dashStyle)) {\n                pen.dashStyle = this.pdfExportHelper.getDashStyle(arg.style.border.dashStyle);\n            }\n            border.all = pen;\n            gridCell.style.borders = border;\n        }\n    };\n    PDFExport.prototype.applyEvent = function () {\n        /** Event trigerring */\n        var clonedValues;\n        var mdxQuery;\n        var currentPivotValues = _base_export_util__WEBPACK_IMPORTED_MODULE_3__.PivotExportUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.exportAllPages && (this.parent.enableVirtualization || this.parent.enablePaging) && this.parent.dataSourceSettings.mode !== 'Server') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.isPagingOrVirtualizationEnabled = false;\n            if (this.parent.dataType === 'olap') {\n                this.updateOlapPageSettings(true);\n                mdxQuery = this.parent.olapEngineModule.mdxQuery.slice(0);\n            }\n            else {\n                this.engine.pageSettings = null;\n            }\n            this.engine.generateGridData(this.parent.dataSourceSettings, true, true);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = _base_export_util__WEBPACK_IMPORTED_MODULE_3__.PivotExportUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n            this.engine.isPagingOrVirtualizationEnabled = true;\n            if (this.parent.dataType === 'olap') {\n                this.updateOlapPageSettings(false);\n                this.parent.olapEngineModule.mdxQuery = mdxQuery;\n            }\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var args = {\n            pivotValues: [clonedValues]\n        };\n        this.parent.trigger(_common_base_constant__WEBPACK_IMPORTED_MODULE_1__.enginePopulated, args);\n        this.document = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_0__.PdfDocument();\n        return { document: this.document, args: args };\n    };\n    PDFExport.prototype.updateOlapPageSettings = function (isUpdate) {\n        this.parent.olapEngineModule.isExporting = isUpdate ? true : false;\n        if (!this.parent.exportSpecifiedPages) {\n            this.parent.olapEngineModule.pageSettings = isUpdate ? null : this.parent.olapEngineModule.pageSettings;\n            this.parent.olapEngineModule.isPaging = isUpdate ? false : true;\n        }\n        else {\n            this.parent.olapEngineModule.exportSpeciedPages = this.parent.exportSpecifiedPages = isUpdate ?\n                this.parent.exportSpecifiedPages : undefined;\n        }\n    };\n    /**\n     * To destroy the pdf export module.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PDFExport.prototype.destroy = function () {\n        if (this.engine) {\n            this.engine = null;\n        }\n        if (this.exportProperties) {\n            this.exportProperties = null;\n        }\n        if (this.document) {\n            this.document = null;\n        }\n        if (this.pdfExportHelper) {\n            this.pdfExportHelper = null;\n        }\n    };\n    return PDFExport;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pivotview/src/pivotview/actions/pdf-export.js?");

/***/ })

}]);