"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-grids_src_grid_actions_excel-export_js-0a3de13e"],{

/***/ "./node_modules/@syncfusion/ej2-grids/src/grid/actions/excel-export.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-grids/src/grid/actions/excel-export.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExcelExport: () => (/* binding */ ExcelExport)\n/* harmony export */ });\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base/constant */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _syncfusion_ej2_excel_export__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-excel-export */ \"./node_modules/@syncfusion/ej2-excel-export/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _actions_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../actions/data */ \"./node_modules/@syncfusion/ej2-grids/src/grid/actions/data.js\");\n/* harmony import */ var _export_helper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./export-helper */ \"./node_modules/@syncfusion/ej2-grids/src/grid/actions/export-helper.js\");\n/* harmony import */ var _services_summary_model_generator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/summary-model-generator */ \"./node_modules/@syncfusion/ej2-grids/src/grid/services/summary-model-generator.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../base/enum */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"./node_modules/@syncfusion/ej2-data/index.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../base/util */ \"./node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * @hidden\n * `ExcelExport` module is used to handle the Excel export action.\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for the Grid Excel Export module.\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} locator - specifies the ServiceLocator\n     * @hidden\n     */\n    function ExcelExport(parent, locator) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.book = {};\n        this.workSheet = [];\n        this.rows = [];\n        this.columns = [];\n        this.styles = [];\n        this.rowLength = 1;\n        this.expType = 'AppendToSheet';\n        this.includeHiddenColumn = false;\n        this.isCsvExport = false;\n        this.isChild = false;\n        this.isElementIdChanged = false;\n        this.gridPool = {};\n        this.sheet = {};\n        this.grpFooterTemplates = [];\n        this.footerTemplates = [];\n        this.aggIndex = 0;\n        this.totalAggregates = 0;\n        this.parent = parent;\n        this.helper = new _export_helper__WEBPACK_IMPORTED_MODULE_4__.ExportHelper(parent);\n        this.locator = locator;\n        this.l10n = this.locator.getService('localization');\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    ExcelExport.prototype.init = function (gObj) {\n        if (gObj.element !== null && gObj.element.id === '') {\n            gObj.element.id = new Date().toISOString();\n            this.isElementIdChanged = true;\n        }\n        this.parent = gObj;\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.isExporting = undefined;\n        this.book = {};\n        this.workSheet = [];\n        this.rows = [];\n        this.columns = [];\n        this.styles = [];\n        this.rowLength = 1;\n        this.footer = undefined;\n        this.expType = 'AppendToSheet';\n        this.includeHiddenColumn = false;\n        this.exportValueFormatter = new _export_helper__WEBPACK_IMPORTED_MODULE_4__.ExportValueFormatter(gObj.locale);\n        gObj.id = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getUid)('main-grid');\n        this.gridPool[gObj.id] = false;\n    };\n    /**\n     * Export Grid to Excel file.\n     *\n     * @param {IGrid} grid - Defines the grid.\n     * @param  {exportProperties} exportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Defines is multiple Grid's are exported.\n     * @param  {Workbook} workbook - Defined the Workbook if multiple Grid is exported.\n     * @param  {boolean} isCsv - true if export to CSV.\n     * @param {boolean} isBlob - true if isBlob is enabled.\n     * @returns {Promise<any>} - Returns the map for export.\n     */\n    // eslint-disable-next-line\n    ExcelExport.prototype.Map = function (grid, exportProperties, isMultipleExport, workbook, isCsv, isBlob) {\n        var gObj = grid;\n        var cancel = 'cancel';\n        var isBlb = 'isBlob';\n        var Child = 'isChild';\n        var csv = 'isCsv';\n        var workbk = 'workbook';\n        var isMultiEx = 'isMultipleExport';\n        this.gridPool = {};\n        if ((grid.childGrid || grid.detailTemplate) && !(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties) && exportProperties.hierarchyExportMode === 'None')) {\n            grid.expandedRows = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getPrintGridModel)(grid).expandedRows;\n        }\n        var args = {\n            requestType: 'beforeExcelExport', gridObject: gObj, cancel: false,\n            isMultipleExport: isMultipleExport, workbook: workbook, isCsv: isCsv, isBlob: isBlob, isChild: this.isChild,\n            grpFooterTemplates: this.grpFooterTemplates\n        };\n        gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_0__.beforeExcelExport, args);\n        if (args[\"\" + cancel]) {\n            return new Promise(function (resolve) {\n                return resolve();\n            });\n        }\n        this.parent.log('exporting_begin', this.getModuleName());\n        this.data = new _actions_data__WEBPACK_IMPORTED_MODULE_3__.Data(gObj);\n        this.isExporting = true;\n        this.isBlob = args[\"\" + isBlb];\n        this.isChild = args[\"\" + Child];\n        this.grpFooterTemplates = args['grpFooterTemplates'];\n        if (args[\"\" + csv]) {\n            this.isCsvExport = args[\"\" + csv];\n        }\n        else {\n            this.isCsvExport = false;\n        }\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isExportColumns)(exportProperties)) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.updateColumnTypeForExportColumns)(exportProperties, gObj);\n        }\n        return this.processRecords(gObj, exportProperties, args[\"\" + isMultiEx], args[\"\" + workbk]);\n    };\n    ExcelExport.prototype.exportingSuccess = function (resolve) {\n        this.isExporting = false;\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_0__.excelExportComplete, this.isBlob ? { promise: this.blobPromise } : { gridInstance: this.parent });\n        this.parent.log('exporting_complete', this.getModuleName());\n        resolve(this.book);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ExcelExport.prototype.processRecords = function (gObj, exportProperties, isMultipleExport, workbook) {\n        var _this = this;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties.dataSource)) {\n            exportProperties.dataSource = exportProperties.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_7__.DataManager ?\n                exportProperties.dataSource : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_7__.DataManager(exportProperties.dataSource);\n            var query_1 = exportProperties.query ? exportProperties.query : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_7__.Query();\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(query_1.isCountRequired) || gObj.aggregates) {\n                query_1.isCountRequired = true;\n            }\n            return new Promise(function (resolve) {\n                var dataManager = exportProperties.dataSource.executeQuery(query_1);\n                dataManager.then(function (r) {\n                    _this.init(gObj);\n                    _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, r).then(function () {\n                        _this.exportingSuccess(resolve);\n                    });\n                });\n            });\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties) && exportProperties.exportType === 'CurrentPage' &&\n            !(this.parent.groupSettings.enableLazyLoading && this.parent.groupSettings.columns.length\n                && !this.parent.getDataModule().isRemote())) {\n            return new Promise(function (resolve) {\n                _this.init(gObj);\n                _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, _this.parent.getCurrentViewRecords());\n                _this.exportingSuccess(resolve);\n            });\n        }\n        else {\n            var allPromise_1 = [];\n            var query = _export_helper__WEBPACK_IMPORTED_MODULE_4__.ExportHelper.getQuery(gObj, this.data);\n            if (this.parent.groupSettings.enableLazyLoading && this.parent.groupSettings.columns.length\n                && !this.parent.getDataModule().isRemote()) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties)) {\n                    exportProperties = { hierarchyExportMode: 'All' };\n                }\n                exportProperties.hierarchyExportMode = exportProperties.hierarchyExportMode === 'None' ? 'None' : 'All';\n                if (exportProperties.hierarchyExportMode === 'All') {\n                    query.lazyLoad = [];\n                }\n            }\n            allPromise_1.push(this.data.getData({}, query));\n            allPromise_1.push(this.helper.getColumnData(gObj));\n            return new Promise(function (resolve, reject) {\n                Promise.all(allPromise_1).then(function (e) {\n                    _this.init(gObj);\n                    _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, e[0]).then(function () {\n                        _this.exportingSuccess(resolve);\n                    });\n                }).catch(function (e) {\n                    reject(_this.book);\n                    _this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_0__.actionFailure, e);\n                });\n            });\n        }\n    };\n    ExcelExport.prototype.processInnerRecords = function (gObj, exportProperties, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isMultipleExport, workbook, r) {\n        var _this = this;\n        this.groupedColLength = gObj.groupSettings.columns.length;\n        var blankRows = 5;\n        var separator;\n        var rows = [];\n        var colDepth = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.measureColumnDepth)(gObj.columns);\n        var isExportPropertiesPresent = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties);\n        if (isExportPropertiesPresent && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties.multipleExport)) {\n            this.expType = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties.multipleExport.type) ? exportProperties.multipleExport.type : 'AppendToSheet');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties.multipleExport.blankRows)) {\n                blankRows = exportProperties.multipleExport.blankRows;\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(workbook)) {\n            this.workSheet = [];\n            this.rows = [];\n            this.columns = [];\n            this.styles = [];\n            this.sheet.images = [];\n        }\n        else if (this.expType === 'NewSheet') {\n            this.workSheet = workbook.worksheets;\n            this.rows = [];\n            this.columns = [];\n            this.sheet.images = [];\n            this.styles = workbook.styles;\n        }\n        else {\n            this.workSheet = [];\n            this.rows = workbook.worksheets[0].rows;\n            this.columns = workbook.worksheets[0].columns;\n            this.styles = workbook.styles;\n            this.sheet.images = workbook.worksheets[0].images;\n            this.rowLength = (this.rows[this.rows.length - 1].index + blankRows);\n            this.rowLength++;\n        }\n        if (isExportPropertiesPresent) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(isMultipleExport)) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties.header) && (isMultipleExport || this.expType === 'NewSheet')) {\n                    this.processExcelHeader(JSON.parse(JSON.stringify(exportProperties.header)));\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties.footer)) {\n                    if (this.expType === 'AppendToSheet') {\n                        if (!isMultipleExport) {\n                            this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n                        }\n                    }\n                    else {\n                        this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n                    }\n                }\n            }\n            else {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties.header)) {\n                    this.processExcelHeader(JSON.parse(JSON.stringify(exportProperties.header)));\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties.footer)) {\n                    this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n                }\n            }\n        }\n        this.includeHiddenColumn = (isExportPropertiesPresent ? exportProperties.includeHiddenColumn : false);\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        return new Promise(function (resolve, reject) {\n            gObj.childGridLevel = 0;\n            rows = _this.processGridExport(gObj, exportProperties, r);\n            _this.globalResolve = resolve;\n            _this.gridPool[gObj.id] = true;\n            _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n        }).then(function () {\n            var organisedRows = [];\n            _this.organiseRows(rows, rows[0].index, organisedRows);\n            _this.rows = _this.rows.concat(organisedRows);\n            //footer template add\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(_this.footer)) {\n                if ((_this.expType === 'AppendToSheet' && !isMultipleExport) || (_this.expType === 'NewSheet')) {\n                    _this.processExcelFooter(_this.footer);\n                }\n            }\n            if (_this.columns.length > 0) {\n                _this.sheet.columns = _this.columns;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            _this.sheet.rows = _this.rows;\n            _this.sheet.enableRtl = _this.parent.enableRtl;\n            if (_this.parent.allowFiltering && gObj.getVisibleColumns().length && isExportPropertiesPresent &&\n                exportProperties.enableFilter) {\n                var headerRowLen = exportProperties.header ? exportProperties.header.headerRows ||\n                    exportProperties.header.rows.length : 0;\n                var autoFilters = {\n                    row: colDepth + headerRowLen, column: _this.groupedColLength ? _this.groupedColLength + 1 :\n                        _this.sheet.columns[0].index, lastRow: _this.sheet.rows.length, lastColumn: _this.sheet.columns.length\n                };\n                _this.sheet.autoFilters = autoFilters;\n            }\n            _this.workSheet.push(_this.sheet);\n            _this.book.worksheets = _this.workSheet;\n            _this.book.styles = _this.styles;\n            gObj.notify('finalPageSetup', _this.book);\n            if (!isMultipleExport) {\n                if (_this.isCsvExport) {\n                    if (isExportPropertiesPresent && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties.separator)\n                        && exportProperties.separator !== ',') {\n                        separator = exportProperties.separator;\n                    }\n                    var book = new _syncfusion_ej2_excel_export__WEBPACK_IMPORTED_MODULE_1__.Workbook(_this.book, 'csv', gObj.locale, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.defaultCurrencyCode, separator);\n                    if (!_this.isBlob) {\n                        if (isExportPropertiesPresent && exportProperties.fileName) {\n                            book.save(exportProperties.fileName);\n                        }\n                        else {\n                            book.save('Export.csv');\n                        }\n                    }\n                    else {\n                        _this.blobPromise = book.saveAsBlob('text/csv');\n                    }\n                }\n                else {\n                    var book = new _syncfusion_ej2_excel_export__WEBPACK_IMPORTED_MODULE_1__.Workbook(_this.book, 'xlsx', gObj.locale, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.defaultCurrencyCode);\n                    if (!_this.isBlob) {\n                        if (isExportPropertiesPresent && exportProperties.fileName) {\n                            book.save(exportProperties.fileName);\n                        }\n                        else {\n                            book.save('Export.xlsx');\n                        }\n                    }\n                    else {\n                        _this.blobPromise = book.saveAsBlob('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n                    }\n                }\n                if (_this.isElementIdChanged) {\n                    gObj.element.id = '';\n                }\n                delete gObj.expandedRows;\n            }\n            return workbook;\n        });\n    };\n    ExcelExport.prototype.organiseRows = function (rows, initialIndex, organisedRows) {\n        if (!rows.length) {\n            return initialIndex;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            var childRows = row.childRows;\n            if (childRows) {\n                row.index = initialIndex++;\n                delete row.childRows;\n                organisedRows.push(row);\n                initialIndex = this.organiseRows(childRows, initialIndex, organisedRows);\n            }\n            else {\n                row.index = initialIndex++;\n                organisedRows.push(row);\n            }\n        }\n        return initialIndex;\n    };\n    ExcelExport.prototype.processGridExport = function (gObj, exportProperties, r) {\n        var excelRows = [];\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties.theme)) {\n            this.theme = exportProperties.theme;\n        }\n        if ((gObj.childGrid || gObj.detailTemplate) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties)) {\n            gObj.hierarchyPrintMode = exportProperties.hierarchyExportMode || 'Expanded';\n        }\n        var helper = new _export_helper__WEBPACK_IMPORTED_MODULE_4__.ExportHelper(gObj, this.helper.getForeignKeyData());\n        var gColumns = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isExportColumns)(exportProperties) ?\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.prepareColumns)(exportProperties.columns, gObj.enableColumnVirtualization) :\n            helper.getGridExportColumns(gObj.columns);\n        var headerRow = helper.getHeaders(gColumns, this.includeHiddenColumn);\n        var groupIndent = gObj.groupSettings.columns.length ? gObj.groupSettings.columns.length - 1 : 0;\n        excelRows = this.processHeaderContent(gObj, headerRow, groupIndent, excelRows);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties) && Object.keys(exportProperties).length &&\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(exportProperties.dataSource)) {\n            if (exportProperties.exportType === 'CurrentPage' && (!gObj.groupSettings.enableLazyLoading\n                || gObj.getDataModule().isRemote())) {\n                excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, gObj.currentViewData, excelRows, helper);\n            }\n            else {\n                excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, undefined, excelRows, helper);\n            }\n        }\n        else {\n            excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, undefined, excelRows, helper);\n        }\n        gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_0__.exportDataBound, { excelRows: excelRows, type: 'excel' });\n        this.capTemplate = undefined;\n        this.footerTemplates = [];\n        this.grpFooterTemplates = [];\n        this.aggIndex = 0;\n        this.totalAggregates = 0;\n        return excelRows;\n    };\n    ExcelExport.prototype.processRecordContent = function (gObj, returnType, headerRow, exportProperties, currentViewRecords, excelRow, helper) {\n        var record;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(currentViewRecords) && currentViewRecords.length) {\n            record = currentViewRecords;\n        }\n        else {\n            record = returnType.result;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(record.level)) {\n            this.processGroupedRows(gObj, record, headerRow, record.level, 0, exportProperties, excelRow, helper);\n        }\n        else {\n            this.processRecordRows(gObj, record, headerRow, 0, 0, exportProperties, excelRow, helper);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(returnType.aggregates)) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(currentViewRecords) && !this.parent.groupSettings.enableLazyLoading) {\n                this.processAggregates(gObj, returnType.result, excelRow, currentViewRecords);\n            }\n            else {\n                var result = returnType.result.GroupGuid ?\n                    returnType.result.records : returnType.result;\n                this.processAggregates(gObj, result, excelRow);\n            }\n        }\n        return excelRow;\n    };\n    ExcelExport.prototype.processGroupedRows = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    gObj, dataSource, headerRow, level, startIndex, excelExportProperties, excelRows, helper) {\n        for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {\n            var item = dataSource_1[_i];\n            var cells = [];\n            var index = 1;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var cell = {};\n            cell.index = (index + level) - 1;\n            var col = gObj.getColumnByField(item.field);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var args = {\n                value: item.key,\n                column: col,\n                style: undefined,\n                isForeignKey: col.isForeignColumn()\n            };\n            var value = gObj.getColumnByField(item.field).headerText +\n                ': ' + (!col.enableGroupByFormat ? this.exportValueFormatter.formatCellValue(args) : item.key) + ' - ';\n            if (item.count > 1) {\n                value += item.count + ' items';\n            }\n            else {\n                value += item.count + ' item';\n            }\n            var cArgs = { captionText: value, type: this.isCsvExport ? 'CSV' : 'Excel', data: item };\n            this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_0__.exportGroupCaption, cArgs);\n            cell.value = cArgs.captionText;\n            cell.style = this.getCaptionThemeStyle(this.theme);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(cArgs.style)) {\n                cell.style = this.mergeOptions(cell.style, cArgs.style);\n            }\n            var captionModelGen = new _services_summary_model_generator__WEBPACK_IMPORTED_MODULE_5__.CaptionSummaryModelGenerator(gObj);\n            var groupCaptionSummaryRows = captionModelGen.generateRows(item);\n            this.fillAggregates(gObj, groupCaptionSummaryRows, (dataSource.level + dataSource.childLevels) - 1, excelRows, this.rowLength);\n            cells.push(cell);\n            if (excelRows[excelRows.length - 1].cells.length > 0) {\n                var lIndex = dataSource.level + dataSource.childLevels + groupCaptionSummaryRows[0].cells.length;\n                var hIndex = 0;\n                for (var _a = 0, _b = excelRows[excelRows.length - 1].cells; _a < _b.length; _a++) {\n                    var tCell = _b[_a];\n                    if (tCell.index < lIndex) {\n                        lIndex = tCell.index;\n                    }\n                    if (tCell.index > hIndex) {\n                        hIndex = tCell.index;\n                    }\n                    if (cells[cells.length - 1].index !== tCell.index) {\n                        cells.push(tCell);\n                    }\n                }\n                if ((lIndex - cell.index) > 1) {\n                    cell.colSpan = lIndex - cell.index;\n                }\n                while (hIndex < (headerRow.columns.length + level + dataSource.childLevels)) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var sCell = {};\n                    sCell.index = (hIndex + 1);\n                    sCell.style = this.getCaptionThemeStyle(this.theme);\n                    cells.push(sCell);\n                    hIndex++;\n                }\n            }\n            else {\n                var span = 0;\n                //Calculation for column span when group caption dont have aggregates\n                for (var _c = 0, _d = headerRow.columns; _c < _d.length; _c++) {\n                    var col_1 = _d[_c];\n                    if (col_1.visible) {\n                        span++;\n                    }\n                }\n                cell.colSpan = (dataSource.childLevels + span);\n            }\n            excelRows[excelRows.length - 1].cells = cells;\n            this.rowLength++;\n            if (this.groupedColLength < 8 && level > 1) {\n                var grouping = { outlineLevel: level - 1, isCollapsed: true };\n                excelRows[excelRows.length - 1].grouping = grouping;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(dataSource.childLevels) && dataSource.childLevels > 0) {\n                this.processGroupedRows(gObj, item.items, headerRow, item.items.level, startIndex, excelExportProperties, excelRows, helper);\n                this.processAggregates(gObj, item, excelRows, undefined, (level - 1) + dataSource.childLevels, true);\n            }\n            else {\n                startIndex = this.processRecordRows(gObj, item.items, headerRow, (level - 1), startIndex, excelExportProperties, excelRows, helper);\n                this.processAggregates(gObj, item, excelRows, undefined, (level - 1), true);\n            }\n        }\n    };\n    ExcelExport.prototype.processRecordRows = function (gObj, record, headerRow, level, startIndex, excelExportProperties, excelRows, helper) {\n        var index = 1;\n        var cells = [];\n        var columns = headerRow.columns;\n        var rows = helper.getGridRowModel(columns, record, gObj, startIndex);\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            cells = [];\n            startIndex++;\n            index = 1;\n            var templateRowHeight = void 0;\n            for (var c = 0, len = row.cells.length; c < len; c++) {\n                var gCell = row.cells[parseInt(c.toString(), 10)];\n                if (gCell.cellType !== _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.Data) {\n                    continue;\n                }\n                var column = gCell.column;\n                var field = column.field;\n                var cellValue = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(field) ? column.valueAccessor(field, row.data, column) : '';\n                var value = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(cellValue) ? cellValue : '';\n                if (column.type === 'dateonly' && typeof value === 'string' && value) {\n                    var arr = value.split(/[^0-9.]/);\n                    value = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10));\n                }\n                var fkData = void 0;\n                if (column.isForeignColumn && column.isForeignColumn()) {\n                    fkData = helper.getFData(value, column);\n                    value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.getValue)(column.foreignKeyValue, fkData);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(value)) {\n                    var cell = {};\n                    var idx = index + level + gObj.childGridLevel;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var excelCellArgs = {\n                        data: row.data, column: column, foreignKeyData: fkData,\n                        value: value, style: undefined, colSpan: 1, cell: cell\n                    };\n                    gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_0__.excelQueryCellInfo, excelCellArgs);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(excelCellArgs.image) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(excelCellArgs.image.base64)) {\n                        templateRowHeight = this.setImage(excelCellArgs, idx);\n                        if (excelCellArgs.image.height && excelCellArgs.value !== '') {\n                            templateRowHeight += 30;\n                        }\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(excelCellArgs.hyperLink)) {\n                        excelCellArgs.cell.hyperlink = { target: excelCellArgs.hyperLink.target };\n                        excelCellArgs.value = excelCellArgs.hyperLink.displayText || excelCellArgs.value;\n                    }\n                    cell = excelCellArgs.cell;\n                    cell.index = idx;\n                    cell.value = excelCellArgs.value;\n                    if (excelCellArgs.data === '' && gObj.childGridLevel && index === 1) {\n                        var style = {};\n                        style.hAlign = 'left';\n                        excelCellArgs = { style: style };\n                        cell.colSpan = gObj.getVisibleColumns().length;\n                        cell.value = this.l10n.getConstant('EmptyRecord');\n                    }\n                    if (excelCellArgs.colSpan > 1) {\n                        cell.colSpan = excelCellArgs.colSpan;\n                    }\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(excelCellArgs.style)) {\n                        var styleIndex = this.getColumnStyle(gObj, index + level);\n                        cell.style = this.mergeOptions(this.styles[parseInt(styleIndex.toString(), 10)], excelCellArgs.style);\n                    }\n                    else {\n                        cell.style = { name: gObj.element.id + 'column' + (index + level) };\n                    }\n                    cells.push(cell);\n                }\n                index++;\n            }\n            var excelRow = { index: this.rowLength++, cells: cells };\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(templateRowHeight)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                excelRow.height = templateRowHeight;\n            }\n            if (this.groupedColLength && this.groupedColLength < 8 && (level + 1) > 0) {\n                excelRow.grouping = { outlineLevel: (level + 1), isCollapsed: true };\n                excelRows.push(excelRow);\n            }\n            else {\n                excelRows.push(excelRow);\n            }\n            if ((row.isExpand || this.isChild) && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(gObj.childGrid) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(gObj.detailTemplate))) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(gObj.childGrid)) {\n                    gObj.isPrinting = true;\n                    var exportType = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(excelExportProperties) && excelExportProperties.exportType) ?\n                        excelExportProperties.exportType : 'AllPages';\n                    var returnVal = this.helper.createChildGrid(gObj, row, exportType, this.gridPool);\n                    var childGridObj = returnVal.childGrid;\n                    var element = returnVal.element;\n                    childGridObj.actionFailure =\n                        helper.failureHandler(this.gridPool, childGridObj, this.globalResolve);\n                    childGridObj.childGridLevel = gObj.childGridLevel + 1;\n                    var childExportProperties = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.extend)(excelExportProperties, {\n                        columns: null,\n                        dataSource: null,\n                        query: null\n                    });\n                    var args = { childGrid: childGridObj, row: row, exportProperties: childExportProperties };\n                    this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_0__.exportDetailDataBound, args);\n                    childGridObj.beforeDataBound = this.childGridCell(excelRow, childGridObj, childExportProperties, row);\n                    childGridObj.appendTo(element);\n                }\n                else {\n                    var args = { parentRow: row, row: excelRow, value: {}, action: 'excelexport', gridInstance: gObj };\n                    this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_0__.exportDetailTemplate, args);\n                    excelRow.childRows = this.processDetailTemplate(args);\n                }\n            }\n            gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_0__.exportRowDataBound, { rowObj: row, type: 'excel', excelRows: excelRows });\n        }\n        return startIndex;\n    };\n    ExcelExport.prototype.processDetailTemplate = function (templateData) {\n        var _this = this;\n        var rows = [];\n        var templateRowHeight;\n        var detailIndent = 2;\n        var detailCellIndex;\n        if (templateData.value.columnHeader || templateData.value.rows) {\n            var processCell_1 = function (currentCell, isHeader) {\n                var cell = {};\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(currentCell.index)) {\n                    currentCell.index = detailCellIndex;\n                    detailCellIndex++;\n                }\n                cell.index = currentCell.index + detailIndent;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(currentCell.value)) {\n                    cell.value = currentCell.value;\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(currentCell.colSpan)) {\n                    cell.colSpan = currentCell.colSpan;\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(currentCell.rowSpan)) {\n                    cell.rowSpan = currentCell.rowSpan;\n                }\n                if (isHeader) {\n                    cell.style = _this.getHeaderThemeStyle(_this.theme);\n                }\n                else {\n                    cell.style = _this.getRecordThemeStyle(_this.theme);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(currentCell.style)) {\n                    var cellStyle = {\n                        fontColor: currentCell.style.fontColor,\n                        fontName: currentCell.style.fontName,\n                        fontSize: currentCell.style.fontSize,\n                        hAlign: currentCell.style.excelHAlign,\n                        vAlign: currentCell.style.excelVAlign,\n                        rotation: currentCell.style.excelRotation,\n                        bold: currentCell.style.bold,\n                        indent: currentCell.style.indent,\n                        italic: currentCell.style.italic,\n                        underline: currentCell.style.underline,\n                        backColor: currentCell.style.backColor,\n                        wrapText: currentCell.style.wrapText,\n                        borders: currentCell.style.excelBorders,\n                        numberFormat: currentCell.style.excelNumberFormat,\n                        type: currentCell.style.excelType,\n                        strikeThrough: currentCell.style.strikeThrough\n                    };\n                    cell.style = _this.mergeOptions(cellStyle, cell.style);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(currentCell.image) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(currentCell.image.base64)) {\n                    if (currentCell.rowSpan > 1) {\n                        _this.setImage(currentCell, cell.index);\n                    }\n                    else {\n                        templateRowHeight = _this.setImage(currentCell, cell.index);\n                        if (currentCell.image.height && currentCell.value !== '') {\n                            templateRowHeight += 30;\n                        }\n                    }\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(currentCell.hyperLink)) {\n                    cell.hyperlink = { target: currentCell.hyperLink.target };\n                    cell.value = currentCell.hyperLink.displayText;\n                }\n                return cell;\n            };\n            var processRow = function (currentRow, isHeader) {\n                var excelDetailCells = [];\n                detailCellIndex = 0;\n                for (var j = 0; j < currentRow.cells.length; j++) {\n                    var currentCell = currentRow.cells[parseInt(j.toString(), 10)];\n                    var detailCell = processCell_1(currentCell, isHeader);\n                    excelDetailCells.push(detailCell);\n                }\n                var row = { index: _this.rowLength++, cells: excelDetailCells };\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(templateRowHeight)) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    row.height = templateRowHeight;\n                    templateRowHeight = null;\n                }\n                rows.push(row);\n            };\n            if (templateData.value.columnHeader) {\n                for (var i = 0; i < templateData.value.columnHeader.length; i++) {\n                    processRow(templateData.value.columnHeader[parseInt(i.toString(), 10)], true);\n                }\n            }\n            if (templateData.value.rows) {\n                for (var i = 0; i < templateData.value.rows.length; i++) {\n                    processRow(templateData.value.rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        else if (templateData.value.image) {\n            templateRowHeight = this.setImage(templateData.value, detailIndent);\n            var row = {\n                index: this.rowLength++,\n                cells: [{\n                        index: detailIndent,\n                        style: this.getRecordThemeStyle(this.theme)\n                    }]\n            };\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(templateRowHeight)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                row.height = templateRowHeight;\n                templateRowHeight = null;\n            }\n            rows.push(row);\n        }\n        else if (templateData.value.text) {\n            var row = {\n                index: this.rowLength++,\n                cells: [{\n                        index: detailIndent,\n                        value: templateData.value.text,\n                        style: this.getRecordThemeStyle(this.theme)\n                    }]\n            };\n            rows.push(row);\n        }\n        else if (templateData.value.hyperLink) {\n            var row = {\n                index: this.rowLength++,\n                cells: [{\n                        index: 2,\n                        hyperlink: { target: templateData.value.hyperLink.target },\n                        value: templateData.value.hyperLink.displayText,\n                        style: this.getRecordThemeStyle(this.theme)\n                    }]\n            };\n            rows.push(row);\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].grouping = {\n                outlineLevel: 1, isCollapsed: !templateData.parentRow.isExpand, isHidden: !templateData.parentRow.isExpand\n            };\n        }\n        return rows;\n    };\n    ExcelExport.prototype.setImage = function (args, idx) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(this.sheet.images)) {\n            this.sheet.images = [];\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var excelImage = {\n            image: args.image.base64, row: this.rowLength, column: idx,\n            lastRow: this.rowLength, lastColumn: idx\n        };\n        if (args.image.width && args.image.height) {\n            excelImage.width = args.image.width;\n            excelImage.height = args.image.height;\n        }\n        this.sheet.images.push(excelImage);\n        this.columns[idx - 1].width = args.image.width || this.columns[idx - 1].width;\n        return args.image.height || 50;\n    };\n    ExcelExport.prototype.childGridCell = function (excelRow, childGridObj, excelExportProps, gRow) {\n        var _this = this;\n        return function (result) {\n            childGridObj.beforeDataBound = null;\n            result.cancel = true;\n            if (result.result.length === 0) {\n                result.result = [''];\n            }\n            excelRow.childRows = _this.processGridExport(childGridObj, excelExportProps, result);\n            var intent = _this.parent.groupSettings.columns.length;\n            var rows = excelRow.childRows;\n            for (var i = 0; i < rows.length; i++) {\n                rows[parseInt(i.toString(), 10)].grouping = { outlineLevel: intent + childGridObj\n                        .childGridLevel, isCollapsed: !gRow.isExpand, isHidden: !gRow.isExpand };\n            }\n            childGridObj.destroy();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.detach)(childGridObj.element);\n            _this.gridPool[childGridObj.id] = true;\n            _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n            return excelRow;\n        };\n    };\n    ExcelExport.prototype.processAggregates = function (gObj, rec, excelRows, currentViewRecords, indent, byGroup) {\n        var summaryModel = new _services_summary_model_generator__WEBPACK_IMPORTED_MODULE_5__.SummaryModelGenerator(gObj);\n        var columns = summaryModel.getColumns();\n        columns = columns.filter(function (col) { return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(col.commands) && col.type !== 'checkbox'; });\n        if (gObj.aggregates.length && this.parent !== gObj) {\n            gObj.aggregateModule.prepareSummaryInfo();\n        }\n        var data = undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(currentViewRecords)) {\n            data = currentViewRecords;\n        }\n        else {\n            data = rec;\n        }\n        if (indent === undefined) {\n            indent = 0;\n        }\n        if (gObj.groupSettings.columns.length > 0 && byGroup) {\n            var groupSummaryModel = new _services_summary_model_generator__WEBPACK_IMPORTED_MODULE_5__.GroupSummaryModelGenerator(gObj);\n            var groupSummaryRows = groupSummaryModel.generateRows(data, { level: data.level });\n            if (groupSummaryRows.length > 0) {\n                excelRows = this.fillAggregates(gObj, groupSummaryRows, indent, excelRows);\n            }\n        }\n        else {\n            indent = gObj.groupSettings.columns.length > 0 && !byGroup ? gObj.groupSettings.columns.length : indent;\n            var sRows = summaryModel.generateRows(data, rec.aggregates, null, null, columns);\n            if (sRows.length > 0 && !byGroup) {\n                indent = gObj.groupSettings.columns.length ? indent - 1 : indent;\n                excelRows = this.fillAggregates(gObj, sRows, indent, excelRows);\n            }\n        }\n        return excelRows;\n    };\n    ExcelExport.prototype.fillAggregates = function (gObj, rows, indent, excelRows, customIndex) {\n        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n            var row = rows_2[_i];\n            var cells = [];\n            var isEmpty = true;\n            var index = 0;\n            for (var _a = 0, _b = row.cells; _a < _b.length; _a++) {\n                var cell = _b[_a];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var eCell = {};\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var columnsDetails = {};\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(cell.attributes.index)) {\n                    columnsDetails = this.parent.getColumnByIndex(cell.attributes.index);\n                }\n                if (cell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.DetailFooterIntent || columnsDetails.type === 'checkbox' || columnsDetails.commands) {\n                    continue;\n                }\n                if ((cell.visible || this.includeHiddenColumn)) {\n                    index++;\n                    if (cell.isDataCell) {\n                        isEmpty = false;\n                        var footerTemplate = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(cell.column.footerTemplate);\n                        var groupFooterTemplate = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(cell.column.groupFooterTemplate);\n                        var groupCaptionTemplate = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(cell.column.groupCaptionTemplate);\n                        eCell.index = index + indent + gObj.childGridLevel;\n                        if (footerTemplate) {\n                            eCell.value = this.getAggreateValue(gObj, _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.Summary, cell.column.footerTemplate, cell, row);\n                        }\n                        else if (groupFooterTemplate) {\n                            eCell.value = this.getAggreateValue(gObj, _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.GroupSummary, cell.column.groupFooterTemplate, cell, row);\n                        }\n                        else if (groupCaptionTemplate) {\n                            eCell.value = this.getAggreateValue(gObj, _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.CaptionSummary, cell.column.groupCaptionTemplate, cell, row);\n                        }\n                        else {\n                            for (var _c = 0, _d = Object.keys(row.data[cell.column.field]); _c < _d.length; _c++) {\n                                var key = _d[_c];\n                                if (key === cell.column.type) {\n                                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(row.data[cell.column.field].Sum)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - sum\"];\n                                    }\n                                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(row.data[cell.column.field].Average)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - average\"];\n                                    }\n                                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(row.data[cell.column.field].Max)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - max\"];\n                                    }\n                                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(row.data[cell.column.field].Min)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - min\"];\n                                    }\n                                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(row.data[cell.column.field].Count)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - count\"];\n                                    }\n                                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(row.data[cell.column.field].TrueCount)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - truecount\"];\n                                    }\n                                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(row.data[cell.column.field].FalseCount)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - falsecount\"];\n                                    }\n                                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(row.data[cell.column.field].Custom)) {\n                                        eCell.value = row.data[cell.column.field].Custom;\n                                    }\n                                }\n                            }\n                        }\n                        eCell.style = this.getCaptionThemeStyle(this.theme); //{ name: gObj.element.id + 'column' + index };\n                        this.aggregateStyle(cell.column, eCell.style, cell.column.field);\n                        var gridCellStyle = cell.attributes.class != null ? cell.attributes.class.toString() : '';\n                        if (gridCellStyle) {\n                            eCell.style.hAlign = gridCellStyle.indexOf('e-rightalign') > -1 ? 'right' :\n                                gridCellStyle.indexOf('e-centeralign') > -1 ? 'center' : 'left';\n                        }\n                        var args = {\n                            row: row,\n                            type: footerTemplate ? 'Footer' : groupFooterTemplate ? 'GroupFooter' : 'GroupCaption',\n                            style: eCell,\n                            cell: cell\n                        };\n                        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_0__.excelAggregateQueryCellInfo, args);\n                        cells.push(eCell);\n                    }\n                    else {\n                        if (customIndex === undefined) {\n                            eCell.index = index + indent + gObj.childGridLevel;\n                            eCell.style = this.getCaptionThemeStyle(this.theme); //{ name: gObj.element.id + 'column' + index };\n                            cells.push(eCell);\n                        }\n                    }\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(customIndex)) {\n                excelRows.push({ index: customIndex, cells: cells });\n            }\n            else {\n                var row_1 = {};\n                var dummyOutlineLevel = 'outlineLevel';\n                var dummyGrouping = 'grouping';\n                if (this.groupedColLength < 8 && this.groupedColLength > 0 && !(gObj.groupSettings.enableLazyLoading && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(excelRows[excelRows.length - 1][\"\" + dummyGrouping]))) {\n                    var level = excelRows[excelRows.length - 1][\"\" + dummyGrouping][\"\" + dummyOutlineLevel];\n                    var grouping = { outlineLevel: level, isCollapsed: true };\n                    row_1 = { index: this.rowLength++, cells: cells, grouping: grouping };\n                }\n                else {\n                    row_1 = { index: this.rowLength++, cells: cells };\n                }\n                if (!isEmpty) {\n                    excelRows.push(row_1);\n                }\n            }\n        }\n        return excelRows;\n    };\n    ExcelExport.prototype.aggregateStyle = function (col, style, field) {\n        var column = this.parent.getColumnByField(field);\n        if (typeof col.format === 'object') {\n            var format = col.format;\n            style.numberFormat = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(format.format) ? format.format : format.skeleton;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(format.type)) {\n                style.type = format.type.toLowerCase();\n            }\n        }\n        else {\n            style.numberFormat = col.format;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(column) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(style.type)) {\n            style.type = column.type.toLowerCase();\n        }\n    };\n    ExcelExport.prototype.getAggreateValue = function (gObj, cellType, template, cell, row) {\n        var templateFn = {};\n        templateFn[(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.getEnumValue)(_base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType, cell.cellType)] = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.compile)(template);\n        var txt;\n        var data = row.data[cell.column.field ? cell.column.field : cell.column.columnName];\n        if ((this.parent.isReact || this.parent.isVue || this.parent.isVue3 || this.parent.isAngular) &&\n            !(typeof cell.column.footerTemplate === 'string' || typeof cell.column.groupFooterTemplate === 'string' || typeof cell.column.groupCaptionTemplate === 'string')) {\n            txt = data[(cell.column.type)];\n            return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(txt) ? (txt) : '';\n        }\n        else {\n            txt = (templateFn[(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.getEnumValue)(_base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType, cell.cellType)](data, this.parent));\n            if (this.parent.isVue3 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(txt[1])) {\n                return txt[1].textContent;\n            }\n        }\n        return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(txt[0]) ? txt[0].textContent : '';\n    };\n    ExcelExport.prototype.mergeOptions = function (JSON1, JSON2) {\n        var result = {};\n        var attrname = Object.keys(JSON1);\n        for (var index = 0; index < attrname.length; index++) {\n            if (attrname[parseInt(index.toString(), 10)] !== 'name') {\n                result[attrname[parseInt(index.toString(), 10)]] = JSON1[attrname[parseInt(index.toString(), 10)]];\n            }\n        }\n        attrname = Object.keys(JSON2);\n        for (var index = 0; index < attrname.length; index++) {\n            if (attrname[parseInt(index.toString(), 10)] !== 'name') {\n                result[attrname[parseInt(index.toString(), 10)]] = JSON2[attrname[parseInt(index.toString(), 10)]];\n            }\n        }\n        return result;\n    };\n    ExcelExport.prototype.getColumnStyle = function (gObj, columnIndex) {\n        var index = 0;\n        for (var _i = 0, _a = this.styles; _i < _a.length; _i++) {\n            var style = _a[_i];\n            if (style.name === gObj.element.id + 'column' + columnIndex) {\n                return index;\n            }\n            index++;\n        }\n        return undefined;\n    };\n    ExcelExport.prototype.headerRotation = function (args) {\n        var degree = args.style.rotation;\n        if (degree <= 90 && degree >= 0) {\n            args.style.hAlign = 'Left';\n        }\n        else if (degree > 90 && degree <= 180) {\n            args.style.hAlign = 'Right';\n        }\n        else {\n            degree = 180;\n            args.style.hAlign = 'Right';\n        }\n        args.style.rotation = degree;\n    };\n    ExcelExport.prototype.processHeaderContent = function (gObj, headerRow, indent, excelRows) {\n        var rowIndex = 1;\n        var gridRows = headerRow.rows;\n        // Column collection with respect to the records in the grid\n        var gridColumns = headerRow.columns;\n        var spannedCells = [];\n        if (indent > 0) {\n            var index = 0;\n            while (index !== indent) {\n                this.columns.push({ index: index + 1, width: 30 });\n                index++;\n            }\n        }\n        for (var col = 0; col < gridColumns.length; col++) {\n            this.parseStyles(gObj, gridColumns[parseInt(col.toString(), 10)], this.getRecordThemeStyle(this.theme), indent + col + 1);\n        }\n        var templateRowHeight;\n        for (var row = 0; row < gridRows.length; row++) {\n            var currentCellIndex = 1 + indent;\n            var cells = [];\n            for (var column = 0; column < gridRows[parseInt(row.toString(), 10)].cells.length; column++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var style = {};\n                var cell = {};\n                var gridCell = gridRows[parseInt(row.toString(), 10)].cells[parseInt(column.toString(), 10)];\n                if (gridCell.isSpanned || gridCell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.HeaderIndent || gridCell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.DetailHeader) {\n                    continue;\n                }\n                var result = { contains: true, index: 1 };\n                while (result.contains) {\n                    result = this.getIndex(spannedCells, rowIndex, currentCellIndex);\n                    currentCellIndex = result.index;\n                    if (!result.contains) {\n                        cell.index = result.index + gObj.childGridLevel;\n                        break;\n                    }\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(gridCell.rowSpan) && gridCell.rowSpan !== 1) {\n                    cell.rowSpan = gridCell.rowSpan;\n                    for (var i = rowIndex; i < gridCell.rowSpan + rowIndex; i++) {\n                        var spannedCell = { rowIndex: 0, columnIndex: 0,\n                            colSpan: 0 };\n                        spannedCell.rowIndex = i;\n                        spannedCell.columnIndex = currentCellIndex;\n                        spannedCell.colSpan = gridCell.colSpan || 1;\n                        spannedCells.push(spannedCell);\n                    }\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(gridCell.colSpan) && gridCell.colSpan !== 1) {\n                    cell.colSpan = gridCell.colSpan;\n                    currentCellIndex = currentCellIndex + cell.colSpan - 1;\n                }\n                cell.value = gridCell.column.headerText;\n                style = this.getHeaderThemeStyle(this.theme);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(gridCell.column.textAlign)) {\n                    style.hAlign = gridCell.column.textAlign.toLowerCase();\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(gridCell.column.headerTextAlign)) {\n                    style.hAlign = gridCell.column.headerTextAlign.toLowerCase();\n                }\n                var excelHeaderCellArgs = { cell: cell, gridCell: gridCell, style: style };\n                gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_0__.excelHeaderQueryCellInfo, excelHeaderCellArgs);\n                if (gridCell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.Header && cell.colSpan > 1) {\n                    currentCellIndex = currentCellIndex + cell.colSpan - 1;\n                    for (var j = 1; j < cell.colSpan; j++) {\n                        var nextCellIndex = column + j;\n                        if (nextCellIndex < gridRows[parseInt(row.toString(), 10)].cells.length) {\n                            gridRows[parseInt(row.toString(), 10)].cells[parseInt(nextCellIndex.toString(), 10)].isSpanned = true;\n                        }\n                    }\n                    for (var i = 0; i < spannedCells.length; i++) {\n                        if (spannedCells[parseInt(i.toString(), 10)].columnIndex === cell.index) {\n                            spannedCells[parseInt(i.toString(), 10)].colSpan = cell.colSpan;\n                        }\n                    }\n                }\n                if (excelHeaderCellArgs.style.rotation) {\n                    this.headerRotation(excelHeaderCellArgs);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(excelHeaderCellArgs.image) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(excelHeaderCellArgs.image.base64)) {\n                    templateRowHeight = this.setImage(excelHeaderCellArgs, currentCellIndex);\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(excelHeaderCellArgs.hyperLink)) {\n                    excelHeaderCellArgs.cell.hyperlink = { target: excelHeaderCellArgs.hyperLink.target };\n                    cell.value = excelHeaderCellArgs.hyperLink.displayText || cell.value;\n                }\n                cell.style = excelHeaderCellArgs.style;\n                cells.push(cell);\n                currentCellIndex++;\n            }\n            var excelRow = { index: this.rowLength++, cells: cells };\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(templateRowHeight)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                excelRow.height = templateRowHeight;\n            }\n            excelRows.push(excelRow);\n        }\n        return excelRows;\n    };\n    ExcelExport.prototype.getHeaderThemeStyle = function (theme) {\n        var style = {};\n        style.fontSize = 12;\n        style.borders = { color: '#E0E0E0' };\n        style.bold = true;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme.header)) {\n            style = this.updateThemeStyle(theme.header, style);\n        }\n        return style;\n    };\n    ExcelExport.prototype.updateThemeStyle = function (themestyle, style) {\n        return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.extend)(style, themestyle);\n    };\n    ExcelExport.prototype.getCaptionThemeStyle = function (theme) {\n        var style = {};\n        style.fontSize = 13;\n        style.backColor = '#F6F6F6';\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme.caption)) {\n            style = this.updateThemeStyle(theme.caption, style);\n        }\n        return style;\n    };\n    ExcelExport.prototype.getRecordThemeStyle = function (theme) {\n        var style = {};\n        style.fontSize = 13;\n        style.borders = { color: '#E0E0E0' };\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(theme.record)) {\n            style = this.updateThemeStyle(theme.record, style);\n        }\n        return style;\n    };\n    ExcelExport.prototype.processExcelHeader = function (header) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(header.rows) && (this.expType === 'NewSheet' || this.rowLength === 1)) {\n            var noRows = void 0;\n            if (header.headerRows === undefined) {\n                this.rowLength = header.rows.length;\n            }\n            else {\n                this.rowLength = header.headerRows;\n            }\n            if (this.rowLength < header.rows.length) {\n                noRows = this.rowLength;\n            }\n            else {\n                noRows = header.rows.length;\n            }\n            this.rowLength++;\n            for (var row = 0; row < noRows; row++) {\n                var json = header.rows[parseInt(row.toString(), 10)];\n                //Row index\n                if (!(json.index !== null && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(json.index))) {\n                    json.index = (row + 1);\n                }\n                this.updatedCellIndex(json);\n            }\n        }\n    };\n    ExcelExport.prototype.updatedCellIndex = function (json) {\n        var cellsLength = json.cells.length;\n        for (var cellId = 0; cellId < cellsLength; cellId++) {\n            var jsonCell = json.cells[parseInt(cellId.toString(), 10)];\n            //cell index\n            if (!(jsonCell.index !== null && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(jsonCell.index))) {\n                jsonCell.index = (cellId + 1);\n            }\n        }\n        this.rows.push(json);\n    };\n    ExcelExport.prototype.processExcelFooter = function (footer) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(footer.rows)) {\n            var noRows = void 0;\n            if (footer.footerRows === undefined) {\n                this.rowLength += footer.rows.length;\n            }\n            else {\n                if (footer.footerRows > footer.rows.length) {\n                    this.rowLength += (footer.footerRows - footer.rows.length);\n                    noRows = footer.rows.length;\n                }\n                else {\n                    noRows = footer.footerRows;\n                }\n            }\n            for (var row = 0; row < noRows; row++) {\n                var json = footer.rows[parseInt(row.toString(), 10)];\n                //Row index\n                if (json.index === null || json.index === undefined) {\n                    json.index = this.rowLength++;\n                }\n                else {\n                    json.index += this.rowLength;\n                }\n                this.updatedCellIndex(json);\n            }\n        }\n    };\n    ExcelExport.prototype.getIndex = function (spannedCells, rowIndex, columnIndex) {\n        for (var _i = 0, spannedCells_1 = spannedCells; _i < spannedCells_1.length; _i++) {\n            var spannedCell = spannedCells_1[_i];\n            if ((spannedCell.rowIndex === rowIndex) && (spannedCell.columnIndex === columnIndex)) {\n                columnIndex += spannedCell.colSpan || 1;\n                return { contains: true, index: columnIndex };\n            }\n        }\n        return { contains: false, index: columnIndex };\n    };\n    ExcelExport.prototype.parseStyles = function (gObj, col, style, index) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(col.format)) {\n            if (typeof col.format === 'object') {\n                var format = col.format;\n                style.numberFormat = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(format.format) ? format.format : format.skeleton;\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(format.type)) {\n                    style.type = format.type === 'dateonly' ? 'date' : format.type.toLowerCase();\n                }\n            }\n            else {\n                style.numberFormat = col.format;\n                style.type = col.type === 'dateonly' ? 'date' : col.type;\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(col.textAlign)) {\n            style.hAlign = col.textAlign.toLowerCase();\n        }\n        if (Object.keys(style).length > 0) {\n            style.name = gObj.element.id + 'column' + index;\n            this.styles.push(style);\n        }\n        if (!gObj.childGridLevel) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__.isNullOrUndefined)(col.width) && col.width !== 'auto') {\n                this.columns.push({ index: index + gObj.childGridLevel, width: typeof col.width === 'number' ?\n                        col.width : this.helper.getConvertedWidth(col.width) });\n            }\n            else {\n                this.columns.push({ index: index + gObj.childGridLevel, width: null });\n            }\n        }\n    };\n    ExcelExport.prototype.destroy = function () {\n        //destroy for exporting\n    };\n    return ExcelExport;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-grids/src/grid/actions/excel-export.js?");

/***/ })

}]);