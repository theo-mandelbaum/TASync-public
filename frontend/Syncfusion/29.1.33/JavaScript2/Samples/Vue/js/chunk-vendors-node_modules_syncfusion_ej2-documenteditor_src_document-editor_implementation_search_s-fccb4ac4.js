"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-documenteditor_src_document-editor_implementation_search_s-fccb4ac4"],{

/***/ "./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/search/search.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/search/search.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Search: () => (/* binding */ Search)\n/* harmony export */ });\n/* harmony import */ var _base_dictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/dictionary */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/dictionary.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _selection_selection_helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../selection/selection-helper */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/selection/selection-helper.js\");\n/* harmony import */ var _viewer_page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../viewer/page */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/viewer/page.js\");\n/* harmony import */ var _text_search__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../search/text-search */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/search/text-search.js\");\n/* harmony import */ var _search_text_search_results__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../search/text-search-results */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/search/text-search-results.js\");\n/* harmony import */ var _search_results__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./search-results */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/search/search-results.js\");\n/* harmony import */ var _base_index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../base/index */ \"./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/base/index.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Search module\n */\nvar Search = /** @class */ (function () {\n    function Search(owner) {\n        /**\n         * @private\n         */\n        this.searchHighlighters = undefined;\n        this.owner = owner;\n        this.searchHighlighters = new _base_dictionary__WEBPACK_IMPORTED_MODULE_0__.Dictionary();\n        this.textSearch = new _text_search__WEBPACK_IMPORTED_MODULE_4__.TextSearch(this.owner);\n        this.textSearchResults = new _search_text_search_results__WEBPACK_IMPORTED_MODULE_5__.TextSearchResults(this.owner);\n        this.searchResultsInternal = new _search_results__WEBPACK_IMPORTED_MODULE_6__.SearchResults(this);\n    }\n    Object.defineProperty(Search.prototype, \"viewer\", {\n        get: function () {\n            return this.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Search.prototype, \"searchResults\", {\n        /**\n         * Gets the search results object.\n         *\n         * @aspType SearchResults\n         * @returns {SearchResults} - Returns the search results object.\n         */\n        get: function () {\n            return this.searchResultsInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Search.prototype, \"documentHelper\", {\n        get: function () {\n            return this.owner.documentHelper;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Search.prototype.getModuleName = function () {\n        return 'Search';\n    };\n    //#region Find & Find All\n    /**\n     * Finds the immediate occurrence of specified text from cursor position in the document.\n     *\n     * @param {string} text - Specifies text to find.\n     * @param {FindOption} findOptions - Default value of ‘findOptions’ parameter is 'None'.\n     * @returns {void}\n     */\n    Search.prototype.find = function (text, findOptions) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(findOptions)) {\n            findOptions = 'None';\n        }\n        var result = this.textSearch.find(text, findOptions);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(result)) {\n            this.navigate(result);\n        }\n    };\n    /**\n     * Finds all occurrence of specified text in the document.\n     *\n     * @param {string} text - Specifies text to find.\n     * @param {FindOption} findOptions - Default value of ‘findOptions’ parameter is 'None'.\n     * @returns {void}\n     */\n    Search.prototype.findAll = function (text, findOptions) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(text || text === '')) {\n            return;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(findOptions)) {\n            findOptions = 'None';\n        }\n        var results = this.textSearch.findAll(text, findOptions);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(results) && results.length > 0) {\n            this.navigate(results.innerList[results.currentIndex]);\n            this.highlight(results);\n        }\n    };\n    //#endregion\n    //#region Replace and Replace All\n    /**\n     * Replace the searched string with specified string\n     *\n     * @private\n     * @param  {string} replaceText  - Specifies text to replace.\n     * @param  {TextSearchResult} result - Specifies the result.\n     * @param  {TextSearchResults} results - Specifies the results.\n     * @returns {number} - Returns replaced text count.\n     */\n    Search.prototype.replace = function (replaceText, result, results) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.viewer.owner) || this.viewer.owner.isReadOnlyMode\n            || !this.viewer.owner.editorModule.canEditContentControl || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(results)) {\n            return 0;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.viewer)) {\n            this.clearSearchHighlight();\n        }\n        this.navigate(result);\n        var endPosition = this.documentHelper.selection.start;\n        if (this.owner.enableTrackChanges && this.documentHelper.selection.start.currentWidget) {\n            var inline = undefined;\n            /* eslint-disable-next-line max-len */\n            var inlineElement = this.documentHelper.selection.end.currentWidget.getInline(this.owner.selectionModule.start.offset, 0);\n            inline = inlineElement.element;\n            if (inline.revisions.length > 0) {\n                this.isRepalceTracking = true;\n            }\n        }\n        var index = results.indexOf(result);\n        if (index < 0) {\n            return 0;\n        }\n        this.owner.editorModule.insertTextInternal(replaceText, true);\n        var endTextPosition = result.end;\n        var startPosition = new _selection_selection_helper__WEBPACK_IMPORTED_MODULE_2__.TextPosition(this.viewer.owner);\n        if (endTextPosition.currentWidget.children.length === 0) {\n            var linewidget = endTextPosition.currentWidget.paragraph.childWidgets[0];\n            startPosition.setPositionParagraph(linewidget, endPosition.offset - replaceText.length);\n        }\n        else {\n            startPosition.setPositionParagraph(endTextPosition.currentWidget, endPosition.offset - replaceText.length);\n        }\n        this.documentHelper.selection.selectRange(endPosition, startPosition);\n        var eventArgs = { source: this.viewer.owner };\n        this.viewer.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_7__.searchResultsChangeEvent, eventArgs);\n        return 1;\n    };\n    /**\n     * Find the textToFind string in current document and replace the specified string.\n     *\n     * @private\n     * @param {string} textToReplace - Specifies the text to replace.\n     * @param {FindOption} findOptions - Default value of ‘findOptions’ parameter is FindOption.None.\n     * @returns {void}\n     */\n    Search.prototype.replaceInternal = function (textToReplace, findOptions) {\n        if ((textToReplace === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(textToReplace))) {\n            return;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(findOptions)) {\n            findOptions = 'None';\n        }\n        var textToFind = this.textSearchResults.currentSearchResult.text;\n        var pattern = this.viewer.owner.searchModule.textSearch.stringToRegex(textToFind, findOptions);\n        var index = this.owner.selectionModule.end.getHierarchicalIndexInternal();\n        var result = this.textSearchResults.currentSearchResult;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(result)) {\n            result = this.viewer.owner.searchModule.textSearch.findNext(pattern, findOptions, index);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(result)) {\n            this.navigate(result);\n            this.textSearchResults.addResult();\n            this.textSearchResults.innerList[0] = result;\n            this.replace(textToReplace, result, this.textSearchResults);\n            index = this.owner.selectionModule.end.getHierarchicalIndexInternal();\n            result = this.textSearch.findNext(textToFind, findOptions, index);\n            if (result) {\n                this.textSearchResults.addResult();\n                this.textSearchResults.innerList[0] = result;\n                this.navigate(result);\n            }\n        }\n    };\n    /**\n     * Replace all the searched string with specified string\n     *\n     * @private\n     * @param  {string} replaceText - Specifies the replace text.\n     * @param  {TextSearchResults} results - Specfies the results.\n     * @returns {number} - Returns the replace count.\n     */\n    Search.prototype.replaceAll = function (replaceText, results) {\n        this.documentHelper.layout.isReplacingAll = true;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.viewer.owner) || this.viewer.owner.isReadOnlyMode || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(results)) {\n            return 0;\n        }\n        if (this.owner.editorHistoryModule) {\n            this.owner.editorHistoryModule.initComplexHistory(this.owner.selectionModule, 'ReplaceAll');\n        }\n        var count = results.length;\n        this.viewer.owner.isLayoutEnabled = false;\n        var text = results.innerList[0].text;\n        for (var i = count - 1; i >= 0; i--) {\n            var result = results.innerList[parseInt(i.toString(), 10)];\n            if (result.start.currentWidget.children.length === 0) {\n                results = this.textSearch.findAll(text);\n                i = results.length;\n            }\n            else {\n                this.navigate(result);\n                if (this.viewer.owner.isReadOnlyMode || !this.viewer.owner.editorModule.canEditContentControl) {\n                    continue;\n                }\n                var allowLayout = true;\n                if (i > 0) {\n                    var previousResult = results.innerList[i - 1];\n                    if (previousResult.start.paragraph.equals(result.start.paragraph)) {\n                        allowLayout = false;\n                    }\n                }\n                this.owner.editorModule.insertTextInternal(replaceText, true, undefined, allowLayout);\n                result.destroy();\n            }\n            //if (result.isHeader || result.isFooter) {\n            // eslint-disable-next-line max-len\n            //this.documentHelper.layout.updateHeaderFooterToParent(this.documentHelper.selection.start.paragraph.bodyWidget as HeaderFooterWidget);\n            //}\n        }\n        if (this.owner.editorHistoryModule && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.owner.editorHistoryModule.currentHistoryInfo)) {\n            this.owner.editorHistoryModule.updateComplexHistory();\n        }\n        else {\n            this.owner.editorModule.updateComplexWithoutHistory(2);\n        }\n        this.searchResults.clear();\n        this.documentHelper.layout.isReplacingAll = false;\n        return count;\n    };\n    /**\n     * Find the textToFind string in current document and replace the specified string.\n     *\n     * @private\n     * @param {string} textToReplace - Specifies the text to replace.\n     * @param {FindOption} findOptions - Default value of ‘findOptions’ parameter is FindOption.None.\n     * @returns {void}\n     */\n    Search.prototype.replaceAllInternal = function (textToReplace, findOptions) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(textToReplace)) {\n            return;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(findOptions)) {\n            findOptions = 'None';\n        }\n        if (this.textSearchResults.length > 0) {\n            this.navigate(this.textSearchResults.innerList[this.textSearchResults.currentIndex]);\n            this.highlight(this.textSearchResults);\n            this.replaceAll(textToReplace, this.textSearchResults);\n        }\n    };\n    //#endregion\n    //#region Highlight Search Result\n    /**\n     * @private\n     * @param {TextSearchResult} textSearchResult - Specifies the text search results.\n     * @returns {void}\n     */\n    Search.prototype.navigate = function (textSearchResult) {\n        if (textSearchResult) {\n            var start = textSearchResult.startOffset;\n            var end = textSearchResult.endOffset;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.owner) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.owner.selectionModule) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(start) &&\n                !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(end)) {\n                this.owner.selectionModule.select(start, end);\n                this.documentHelper.updateFocus();\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TextSearchResults} textSearchResults - Specifies the text search results.\n     * @returns {void}\n     */\n    Search.prototype.highlight = function (textSearchResults) {\n        this.searchHighlighters = new _base_dictionary__WEBPACK_IMPORTED_MODULE_0__.Dictionary();\n        for (var i = 0; i < textSearchResults.innerList.length; i++) {\n            var result = textSearchResults.innerList[parseInt(i.toString(), 10)];\n            this.highlightResult(result);\n        }\n        this.viewer.renderVisiblePages();\n    };\n    Search.prototype.highlightResult = function (result) {\n        this.highlightSearchResult(result.start.paragraph, result.start, result.end);\n    };\n    /* eslint-disable  */\n    Search.prototype.highlightSearchResult = function (paragraph, start, end) {\n        var selectionStartIndex = 0;\n        var selectionEndIndex = 0;\n        var startElement = null;\n        var endElement = null;\n        var lineWidget = this.documentHelper.selection.getStartLineWidget(paragraph, start, startElement, selectionStartIndex);\n        selectionStartIndex = lineWidget.index;\n        startElement = lineWidget.element;\n        var startLineWidget = startElement ? startElement.line : paragraph.childWidgets[0];\n        var endLine = this.documentHelper.selection.getEndLineWidget(end, endElement, selectionEndIndex);\n        selectionEndIndex = endLine.index;\n        endElement = endLine.element;\n        var endLineWidget = endElement ? endElement.line :\n            end.paragraph.childWidgets[end.paragraph.childWidgets.length - 1];\n        var top = this.documentHelper.selection.getTop(startLineWidget);\n        var left = this.documentHelper.selection.getLeftInternal(startLineWidget, startElement, selectionStartIndex);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(startLineWidget) && startLineWidget === endLineWidget) {\n            //find result ends in current line.\n            var right = this.documentHelper.selection.getLeftInternal(endLineWidget, endElement, selectionEndIndex);\n            var isRtlText = false;\n            if (endElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n                isRtlText = endElement.isRightToLeft;\n            }\n            var width = 0;\n            width = Math.abs(right - left);\n            if (!isRtlText && startElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n                isRtlText = startElement.isRightToLeft;\n            }\n            // Handled the highlighting approach as genric for normal and rtl text.\n            if (isRtlText || paragraph.bidi) {\n                var elementBox = this.documentHelper.selection.getElementsForward(startLineWidget, startElement, endElement, paragraph.bidi);\n                if (elementBox && elementBox.length > 1) {\n                    for (var i = 0; i < elementBox.length; i++) {\n                        var element = elementBox[i];\n                        var elementIsRTL = false;\n                        var index = element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox ? element.length : 1;\n                        if (element === startElement) {\n                            left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, selectionStartIndex);\n                            right = this.documentHelper.selection.getLeftInternal(startLineWidget, element, index);\n                        }\n                        else if (element === endElement) {\n                            left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, 0);\n                            right = this.documentHelper.selection.getLeftInternal(startLineWidget, element, selectionEndIndex);\n                        }\n                        else {\n                            left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, 0);\n                            right = this.documentHelper.selection.getLeftInternal(startLineWidget, element, index);\n                        }\n                        if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n                            elementIsRTL = element.isRightToLeft;\n                        }\n                        width = Math.abs(right - left);\n                        this.createHighlightBorder(startLineWidget, width, elementIsRTL ? right : left, top);\n                    }\n                }\n                else {\n                    this.createHighlightBorder(startLineWidget, width, isRtlText ? right : left, top);\n                }\n            }\n            else {\n                // Start element and end element will be in reverese for Bidi paragraph highlighting. \n                // So, the right is considered based on Bidi property. \n                this.createHighlightBorder(startLineWidget, width, left, top);\n            }\n        }\n        else {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(startLineWidget)) {\n                if (paragraph !== startLineWidget.paragraph) {\n                    paragraph = startLineWidget.paragraph;\n                }\n                var width = this.documentHelper.selection.getWidth(startLineWidget, true) - (left - startLineWidget.paragraph.x);\n                // Handled the  highlighting approach as genric for normal and rtl text.\n                if (paragraph.bidi || (startElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox && startElement.isRightToLeft)) {\n                    var right = 0;\n                    var elementCollection = this.documentHelper.selection.getElementsForward(startLineWidget, startElement, endElement, paragraph.bidi);\n                    if (elementCollection) {\n                        var elementIsRTL = false;\n                        for (var i = 0; i < elementCollection.length; i++) {\n                            var element = elementCollection[i];\n                            var index = element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox ? element.length : 1;\n                            right = this.documentHelper.selection.getLeftInternal(startLineWidget, element, index);\n                            elementIsRTL = false;\n                            if (element === startElement) {\n                                left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, selectionStartIndex);\n                            }\n                            else {\n                                left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, 0);\n                            }\n                            if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n                                elementIsRTL = element.isRightToLeft;\n                            }\n                            width = Math.abs(right - left);\n                            this.createHighlightBorder(startLineWidget, width, elementIsRTL ? right : left, top);\n                        }\n                        // Highlight the Paragrph mark for last line.\n                    }\n                }\n                else {\n                    this.createHighlightBorder(startLineWidget, width, left, top);\n                }\n                var lineIndex = startLineWidget.paragraph.childWidgets.indexOf(startLineWidget);\n                //Iterates to last item of paragraph or search result end.\n                for (var i = 0; i < paragraph.childWidgets.length; i++) {\n                    if (paragraph === startLineWidget.paragraph) {\n                        lineIndex += 1;\n                    }\n                    this.highlightSearchResultParaWidget(paragraph, lineIndex, endLineWidget, endElement, selectionEndIndex);\n                    if (paragraph === endLineWidget.paragraph) {\n                        return;\n                    }\n                    else {\n                        lineIndex = 0;\n                        paragraph = endLineWidget.paragraph;\n                        i--;\n                    }\n                }\n            }\n        }\n    };\n    Search.prototype.createHighlightBorder = function (lineWidget, width, left, top) {\n        var findHighLight = this.addSearchHighlightBorder(lineWidget);\n        var page = this.viewer.owner.selectionModule.getPage(lineWidget.paragraph);\n        var pageTop = page.boundingRectangle.y;\n        var pageLeft = page.boundingRectangle.x;\n        findHighLight.left = Math.ceil(left);\n        top = Math.ceil(top);\n        findHighLight.width = Math.floor(width);\n        var height = Math.floor(lineWidget.height);\n        var context = this.documentHelper.containerContext;\n    };\n    Search.prototype.addSearchHighlightBorder = function (lineWidget) {\n        var highlighters = undefined;\n        var collection = this.searchHighlighters;\n        if (collection.containsKey(lineWidget)) {\n            highlighters = collection.get(lineWidget);\n        }\n        else {\n            highlighters = [];\n            collection.add(lineWidget, highlighters);\n        }\n        var searchHighlight = new _text_search__WEBPACK_IMPORTED_MODULE_4__.SearchWidgetInfo(0, 0);\n        highlighters.push(searchHighlight);\n        return searchHighlight;\n    };\n    Search.prototype.highlightSearchResultParaWidget = function (widget, startIndex, endLine, endElement, endIndex) {\n        var top = 0;\n        var width = 0;\n        var isRtlText = false;\n        for (var j = startIndex; j < widget.childWidgets.length; j++) {\n            var lineWidget = widget.childWidgets[j];\n            if (j === startIndex) {\n                top = this.documentHelper.selection.getTop(lineWidget);\n            }\n            var left = this.documentHelper.selection.getLeft(lineWidget);\n            if (endElement instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n                isRtlText = endElement.isRightToLeft;\n            }\n            if (lineWidget === endLine) {\n                //Selection ends in current line.\n                var right = 0;\n                // Handled the highlighting using the element box highlighting approach as genric for normal and rtl text.\n                if (isRtlText || widget.bidi) {\n                    var elementBox = this.documentHelper.selection.getElementsBackward(lineWidget, endElement, endElement, widget.bidi);\n                    for (var i = 0; i < elementBox.length; i++) {\n                        var element = elementBox[i];\n                        var elementIsRTL = false;\n                        left = this.documentHelper.selection.getLeftInternal(lineWidget, element, 0);\n                        if (element === endElement) {\n                            right = this.documentHelper.selection.getLeftInternal(lineWidget, element, endIndex);\n                        }\n                        else {\n                            var index = element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox ? element.length : 1;\n                            right = this.documentHelper.selection.getLeftInternal(lineWidget, element, index);\n                        }\n                        if (element instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n                            elementIsRTL = element.isRightToLeft;\n                        }\n                        width = Math.abs(right - left);\n                        this.createHighlightBorder(lineWidget, width, elementIsRTL ? right : left, top);\n                    }\n                    return;\n                }\n                else {\n                    right = this.documentHelper.selection.getLeftInternal(endLine, endElement, endIndex);\n                    width = Math.abs(right - left);\n                    this.createHighlightBorder(lineWidget, width, isRtlText ? right : left, top);\n                    return;\n                }\n            }\n            else {\n                width = this.documentHelper.selection.getWidth(lineWidget, true) - (left - widget.x);\n                this.createHighlightBorder(lineWidget, width, left, top);\n                top += lineWidget.height;\n            }\n        }\n    };\n    //#endregion\n    //#region Get find result view\n    /**\n     * @private\n     * @param {HTMLElement} result - Specified the result.\n     * @returns {void}\n     */\n    Search.prototype.addSearchResultItems = function (result) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(result)) {\n            return;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.owner.findResultsList)) {\n            this.owner.findResultsList = [];\n        }\n        this.owner.findResultsList.push(result);\n    };\n    /**\n     * @private\n     * @param {TextSearchResults} textSearchResults - Specified text search result.\n     * @returns {void}\n     */\n    Search.prototype.addFindResultView = function (textSearchResults) {\n        for (var i = 0; i < textSearchResults.innerList.length; i++) {\n            var result = textSearchResults.innerList[i];\n            this.addFindResultViewForSearch(result);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    /* eslint-disable  */\n    Search.prototype.addFindResultViewForSearch = function (result) {\n        if (result.start != null && result.end != null && result.start.paragraph != null && result.end.paragraph != null) {\n            var prefixText = void 0;\n            var suffixtext = void 0;\n            var currentText = void 0;\n            var startIndex = 0;\n            var inlineObj = result.start.currentWidget.getInline(result.start.offset, startIndex);\n            var inline = inlineObj.element;\n            startIndex = inlineObj.index;\n            var prefix = '';\n            var lastIndex = 0;\n            if (inline instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.FieldElementBox) {\n                var elementInfo = this.owner.selectionModule.getRenderedInline(inline, startIndex);\n                if (elementInfo.element.nextNode instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n                    inline = elementInfo.element.nextNode;\n                    startIndex = elementInfo.index;\n                }\n                else {\n                    inline = elementInfo.element;\n                    startIndex = elementInfo.index;\n                }\n            }\n            var boxObj = this.owner.selectionModule.getElementBoxInternal(inline, startIndex);\n            var box = boxObj.element;\n            startIndex = boxObj.index;\n            if (box != null) {\n                if (box instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox && startIndex > 0) {\n                    prefix = box.text.substring(0, startIndex);\n                }\n                var boxIndex = box.line.children.indexOf(box);\n                lastIndex = prefix.lastIndexOf(' ');\n                while (lastIndex < 0 && boxIndex > 0 && box.line.children[boxIndex - 1] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) {\n                    prefix = box.line.children[boxIndex - 1].text + prefix;\n                    boxIndex--;\n                    lastIndex = prefix.lastIndexOf(' ');\n                }\n            }\n            var shiftIndex = prefix.lastIndexOf('\\v');\n            if (shiftIndex > 0) {\n                prefix = prefix.substring(0, shiftIndex);\n            }\n            else {\n                lastIndex = prefix.lastIndexOf(' ');\n                prefixText = lastIndex < 0 ? prefix : prefix.substring(lastIndex + 1);\n            }\n            currentText = result.text;\n            var endIndex = 0;\n            var endInlineObj = result.end.currentWidget.getInline(result.end.offset, endIndex);\n            var endInline = endInlineObj.element;\n            endIndex = endInlineObj.index;\n            suffixtext = '';\n            //Checks prefix element box is empty\n            if (boxObj != null) {\n                // Gets the element box using endIndex of the text and set as suffix\n                boxObj = this.owner.selectionModule.getElementBoxInternal(endInline, endIndex);\n                box = boxObj.element;\n                endIndex = boxObj.index;\n            }\n            //Checks suffix element box is empty.\n            if (box != null) {\n                if (box instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox && endIndex < box.length) {\n                    suffixtext = box.text.substring(endIndex);\n                }\n                var boxIndex = box.line.children.indexOf(box);\n                while (boxIndex + 1 < box.line.children.length && (box.line.children[boxIndex + 1] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.TextElementBox) || (box.line.children[boxIndex + 1] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.FieldElementBox)) {\n                    if (box.line.children[boxIndex + 1] instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.FieldElementBox) {\n                        boxIndex = boxIndex + 2;\n                    }\n                    else {\n                        suffixtext = suffixtext + box.line.children[boxIndex + 1].text;\n                        boxIndex = boxIndex + 1;\n                    }\n                }\n            }\n            lastIndex = suffixtext.lastIndexOf(' ');\n            suffixtext = suffixtext === '\\v' ? suffixtext = '' : suffixtext;\n            var headerFooterString = void 0;\n            var containerWidget = result.start.paragraph.containerWidget;\n            var type = containerWidget instanceof _viewer_page__WEBPACK_IMPORTED_MODULE_3__.HeaderFooterWidget ? containerWidget.headerFooterType : '';\n            if (type.indexOf('Header') != -1) {\n                headerFooterString = document.createElement('span');\n                headerFooterString.classList.add('e-de-header-footer-list');\n                headerFooterString.textContent = 'Header: ';\n            }\n            else if (type.indexOf('Footer') != -1) {\n                headerFooterString = document.createElement('span');\n                headerFooterString.classList.add('e-de-header-footer-list');\n                headerFooterString.textContent = 'Footer: ';\n            }\n            var listElement = document.createElement('li');\n            listElement.setAttribute('tabindex', '0');\n            listElement.classList.add('e-de-search-result-item', 'e-de-op-search-txt');\n            if (headerFooterString) {\n                listElement.appendChild(headerFooterString);\n            }\n            if (prefix) {\n                var prefixNode = document.createTextNode(prefix);\n                listElement.appendChild(prefixNode);\n            }\n            var resultSpan = document.createElement('span');\n            resultSpan.classList.add('e-de-op-search-word');\n            resultSpan.style.pointerEvents = 'none';\n            resultSpan.textContent = result.text;\n            listElement.appendChild(resultSpan);\n            if (suffixtext) {\n                var suffixNode = document.createTextNode(suffixtext);\n                listElement.appendChild(suffixNode);\n            }\n            this.addSearchResultItems(listElement);\n        }\n    };\n    //#endregion\n    /**\n     * Clears search highlight.\n     *\n     * @private\n     * @returns {void}\n     */\n    Search.prototype.clearSearchHighlight = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.searchHighlighters)) {\n            this.searchHighlighters.clear();\n            this.searchHighlighters = undefined;\n        }\n        var eventArgs = { source: this.viewer.owner };\n        this.viewer.owner.trigger(_base_index__WEBPACK_IMPORTED_MODULE_7__.searchResultsChangeEvent, eventArgs);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Search.prototype.destroy = function () {\n        if (this.textSearchResults) {\n            this.textSearchResults.destroy();\n        }\n        this.textSearchResults = undefined;\n        this.owner = undefined;\n    };\n    return Search;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/search/search.js?");

/***/ })

}]);