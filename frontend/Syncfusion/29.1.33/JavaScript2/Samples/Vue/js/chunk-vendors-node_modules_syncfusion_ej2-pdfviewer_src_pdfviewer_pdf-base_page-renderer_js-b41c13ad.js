"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-pdfviewer_src_pdfviewer_pdf-base_page-renderer_js-b41c13ad"],{

/***/ "./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/pdf-base/page-renderer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/pdf-base/page-renderer.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageRenderer: () => (/* binding */ PageRenderer),\n/* harmony export */   StampAnnotationBase: () => (/* binding */ StampAnnotationBase)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../index */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/pdf-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-pdf */ \"./node_modules/@syncfusion/ej2-pdf/index.js\");\n/* harmony import */ var _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-drawings */ \"./node_modules/@syncfusion/ej2-drawings/index.js\");\n/* harmony import */ var _base_pdfviewer_utlis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../base/pdfviewer-utlis */ \"./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/base/pdfviewer-utlis.js\");\n\n\n\n\n\n\n/**\n * PageRenderer\n *\n * @hidden\n */\nvar PageRenderer = /** @class */ (function () {\n    /**\n     * @param {PdfViewer} pdfViewer - The PdfViewer.\n     * @param {PdfViewerBase} pdfViewerBase - The PdfViewerBase.\n     * @private\n     */\n    function PageRenderer(pdfViewer, pdfViewerBase) {\n        /**\n         * @private\n         */\n        this.shapeAnnotationList = [];\n        /**\n         * @private\n         */\n        this.textMarkupAnnotationList = [];\n        /**\n         * @private\n         */\n        this.measureAnnotationList = [];\n        /**\n         * @private\n         */\n        this.stickyAnnotationList = [];\n        /**\n         * @private\n         */\n        this.rubberStampAnnotationList = [];\n        /**\n         * @private\n         */\n        this.freeTextAnnotationList = [];\n        /**\n         * @private\n         */\n        this.signatureAnnotationList = [];\n        /**\n         * @private\n         */\n        this.signatureInkAnnotationList = [];\n        /**\n         * @private\n         */\n        this.annotationOrder = [];\n        /**\n         * @private\n         */\n        this.hyperlinks = [];\n        /**\n         * @private\n         */\n        this.imageData = '';\n        /**\n         * @private\n         */\n        this.isMaskedImage = false;\n        /**\n         * @private\n         */\n        this.hyperlinkBounds = [];\n        /**\n         * @private\n         */\n        this.annotationDestPage = [];\n        /**\n         * @private\n         */\n        this.annotationList = [];\n        /**\n         * @private\n         */\n        this.annotationYPosition = [];\n        /**\n         * @private\n         */\n        this.digitalSignaturePresent = false;\n        this.annotationCount = 0;\n        /**\n         * @private\n         */\n        this.isAnnotationPresent = false;\n        /**\n         *\n         * @private\n         */\n        this.htmldata = [];\n        /**\n         *\n         * @private\n         */\n        this.renderingMode = 0;\n        this.textString = '';\n        this.baseFont = '';\n        this.fontSize = 0;\n        this.pdfViewer = pdfViewer;\n        this.pdfViewerBase = pdfViewerBase;\n    }\n    /**\n     * @param {number} pageNumber - pageNumber\n     * @param {Size} pageSize - pageSize\n     * @private\n     * @returns {void}\n     */\n    PageRenderer.prototype.exportAnnotationComments = function (pageNumber, pageSize) {\n        var page = this.pdfViewer.pdfRendererModule.loadedDocument.getPage(parseInt(pageNumber.toString(), 10));\n        var pageRotation = page.rotation;\n        return this.getAnnotationFromPDF(pageSize.height, pageSize.width, pageNumber, pageRotation);\n    };\n    PageRenderer.prototype.IsStampExist = function (subject) {\n        switch (subject.trim()) {\n            case 'Approved':\n            case 'Not Approved':\n            case 'Confidential':\n            case 'Draft':\n            case 'Final':\n            case 'Completed':\n            case 'For Public Release':\n            case 'Not For Public Release':\n            case 'For Comment':\n            case 'Void':\n            case 'Preliminary Results':\n            case 'Information Only':\n            case 'Witness':\n            case 'Initial Here':\n            case 'Sign Here':\n            case 'Accepted':\n            case 'Rejected':\n            case 'Revised':\n            case 'Reviewed':\n            case 'Received':\n                return true;\n            default:\n                return false;\n        }\n    };\n    PageRenderer.prototype.getAnnotationFromPDF = function (height, width, pageNumber, pageRotation) {\n        var loadedPage = this.pdfViewer.pdfRendererModule.loadedDocument.getPage(parseInt(pageNumber.toString(), 10));\n        var annotRenderer = new _index__WEBPACK_IMPORTED_MODULE_2__.AnnotationRenderer(this.pdfViewer, this.pdfViewerBase);\n        var textLabelCollection = [];\n        var loadedFreetextAnnotations = [];\n        this.isAnnotationPresent = false;\n        if (loadedPage != null) {\n            loadedFreetextAnnotations = this.getAllFreeTextAnnotations(loadedPage.annotations);\n            this.annotationCount = 0;\n            if (loadedPage.annotations != null && loadedPage.annotations.count > 0) {\n                this.isAnnotationPresent = true;\n                var _loop_1 = function (i) {\n                    var annotation = loadedPage.annotations.at(i);\n                    if (annotation instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfTextMarkupAnnotation) {\n                        var textMarkup = annotRenderer.loadTextMarkupAnnotation(annotation, height, width, pageRotation, loadedPage);\n                        this_1.textMarkupAnnotationList[this_1.textMarkupAnnotationList.length] = textMarkup;\n                        this_1.annotationOrder[this_1.annotationOrder.length] = textMarkup;\n                        var name_1 = this_1.textMarkupAnnotationList[this_1.textMarkupAnnotationList.length - 1].AnnotName;\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(name_1) || name_1 === '') {\n                            this_1.textMarkupAnnotationList[this_1.textMarkupAnnotationList.length - 1].AnnotName =\n                                this_1.setAnnotationName(pageNumber);\n                        }\n                    }\n                    else if (annotation instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfLineAnnotation) {\n                        var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapeLabel)) {\n                            textLabelCollection.push(shapeLabel.name);\n                        }\n                        var shapes = annotRenderer.loadLineAnnotation(annotation, height, width, pageRotation, shapeLabel);\n                        var name_2 = shapes.AnnotName;\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(name_2) || name_2 === '') {\n                            shapes.AnnotName = this_1.setAnnotationName(pageNumber);\n                        }\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapes)) {\n                            if (shapes instanceof _index__WEBPACK_IMPORTED_MODULE_2__.MeasureShapeAnnotationBase) {\n                                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                            else if (shapes instanceof _index__WEBPACK_IMPORTED_MODULE_2__.ShapeAnnotationBase) {\n                                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                        }\n                    }\n                    else if (annotation instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfSquareAnnotation || annotation instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfRectangleAnnotation) {\n                        var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapeLabel)) {\n                            textLabelCollection.push(shapeLabel.name);\n                        }\n                        var shapes = annotRenderer.loadSquareAnnotation(annotation, height, width, pageRotation, shapeLabel);\n                        var name_3 = shapes.AnnotName;\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(name_3) || name_3 === '') {\n                            shapes.AnnotName = this_1.setAnnotationName(pageNumber);\n                        }\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapes)) {\n                            if (shapes instanceof _index__WEBPACK_IMPORTED_MODULE_2__.MeasureShapeAnnotationBase) {\n                                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                            else if (shapes instanceof _index__WEBPACK_IMPORTED_MODULE_2__.ShapeAnnotationBase) {\n                                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                        }\n                    }\n                    else if (annotation instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfCircleAnnotation) {\n                        var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapeLabel)) {\n                            textLabelCollection.push(shapeLabel.name);\n                        }\n                        var shapes = annotRenderer.loadEllipseAnnotation(annotation, height, width, pageRotation, shapeLabel);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapes)) {\n                            if (shapes instanceof _index__WEBPACK_IMPORTED_MODULE_2__.MeasureShapeAnnotationBase) {\n                                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                            else if (shapes instanceof _index__WEBPACK_IMPORTED_MODULE_2__.ShapeAnnotationBase) {\n                                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                        }\n                    }\n                    else if (annotation instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfEllipseAnnotation) {\n                        var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapeLabel)) {\n                            textLabelCollection.push(shapeLabel.name);\n                        }\n                        var shapes = annotRenderer.loadEllipseAnnotation(annotation, height, width, pageRotation, shapeLabel);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapes)) {\n                            if (shapes instanceof _index__WEBPACK_IMPORTED_MODULE_2__.MeasureShapeAnnotationBase) {\n                                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                            else if (shapes instanceof _index__WEBPACK_IMPORTED_MODULE_2__.ShapeAnnotationBase) {\n                                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                        }\n                    }\n                    else if (annotation instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfPolygonAnnotation) {\n                        var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapeLabel)) {\n                            textLabelCollection.push(shapeLabel.name);\n                        }\n                        var shapes = annotRenderer.loadPolygonAnnotation(annotation, height, width, pageRotation, shapeLabel);\n                        var name_4 = shapes.AnnotName;\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(name_4) || name_4 === '') {\n                            shapes.AnnotName = this_1.setAnnotationName(pageNumber);\n                        }\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapes)) {\n                            if (shapes instanceof _index__WEBPACK_IMPORTED_MODULE_2__.MeasureShapeAnnotationBase) {\n                                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                            else if (shapes instanceof _index__WEBPACK_IMPORTED_MODULE_2__.ShapeAnnotationBase) {\n                                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                        }\n                    }\n                    else if (annotation instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfPolyLineAnnotation || annotation instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfAngleMeasurementAnnotation) {\n                        var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapeLabel)) {\n                            textLabelCollection.push(shapeLabel.name);\n                        }\n                        var shapes = annotRenderer.loadPolylineAnnotation(annotation, height, width, pageRotation, shapeLabel);\n                        var name_5 = shapes.AnnotName;\n                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(name_5) || name_5 === '') {\n                            shapes.AnnotName = this_1.setAnnotationName(pageNumber);\n                        }\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapes)) {\n                            if (shapes instanceof _index__WEBPACK_IMPORTED_MODULE_2__.MeasureShapeAnnotationBase) {\n                                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                            else if (shapes instanceof _index__WEBPACK_IMPORTED_MODULE_2__.ShapeAnnotationBase) {\n                                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                        }\n                    }\n                    if (annotation instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfRubberStampAnnotation) {\n                        this_1.htmldata = [];\n                        var stampAnnotation = annotation;\n                        var pdfRenderedFormFields = [];\n                        for (var _i = 0, _a = this_1.pdfViewer.pdfRendererModule.formFieldsBase.PdfRenderedFormFields; _i < _a.length; _i++) {\n                            var formfield = _a[_i];\n                            if (formfield.ActualFieldName === stampAnnotation._dictionary._map.T) {\n                                pdfRenderedFormFields.push(formfield);\n                                break;\n                            }\n                        }\n                        if (stampAnnotation._dictionary.has('T') && this_1.checkName(stampAnnotation)) {\n                            this_1.signatureAnnotationList.push(annotRenderer.loadSignatureImage(stampAnnotation, pageNumber));\n                        }\n                        else if (stampAnnotation._dictionary.has('M') || (stampAnnotation._dictionary.has('NM') ||\n                            stampAnnotation._dictionary.has('Name') && !stampAnnotation._dictionary.has('F') ||\n                            (!stampAnnotation._dictionary.has('NM') && !stampAnnotation._dictionary.has('T'))) ||\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pdfRenderedFormFields[0]) || !this_1.pdfViewerBase.isSignatureWithInRect(this_1.pdfViewerBase.canvasRectArray(pdfRenderedFormFields[0].LineBounds), this_1.pdfViewerBase.canvasRectArray(stampAnnotation.bounds))) {\n                            var rubberStampAnnotation = new StampAnnotationBase();\n                            rubberStampAnnotation.Author = stampAnnotation.author;\n                            rubberStampAnnotation.Subject = stampAnnotation.subject;\n                            rubberStampAnnotation.AnnotName = stampAnnotation.name;\n                            if (rubberStampAnnotation.AnnotName === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rubberStampAnnotation.AnnotName)) {\n                                rubberStampAnnotation.AnnotName = this_1.setAnnotationName(pageNumber);\n                            }\n                            if (annotation._dictionary.has('rotateAngle')) {\n                                var rotateAngle = annotation._dictionary.get('rotateAngle');\n                                if (rotateAngle !== undefined) {\n                                    // The rotateAngle will get as 1, 2 and 3 To save in RotateAngle multiplying with 90.\n                                    rubberStampAnnotation.RotateAngle = parseInt(rotateAngle[0], 10) * 90;\n                                }\n                            }\n                            else {\n                                // If the rotate angle is not specified in the annotation dictionary, then calculate it based on the page rotation.\n                                rubberStampAnnotation.RotateAngle = 360 - (Math.abs(stampAnnotation.rotate) - (pageRotation * 90));\n                                var rubberStampAnnotationAngle = rubberStampAnnotation.RotateAngle;\n                                if (rubberStampAnnotation.RotateAngle >= 360) {\n                                    rubberStampAnnotation.RotateAngle = rubberStampAnnotationAngle - 360;\n                                }\n                            }\n                            var isBoundsEqual = false;\n                            if (rubberStampAnnotation.RotateAngle !== 0) {\n                                isBoundsEqual = (Math.ceil(stampAnnotation._innerTemplateBounds.x * 100) / 100 ===\n                                    Math.ceil(stampAnnotation.bounds.x * 100) / 100 &&\n                                    Math.ceil(stampAnnotation._innerTemplateBounds.y * 100) / 100 ===\n                                        Math.ceil(stampAnnotation.bounds.y * 100) / 100 &&\n                                    Math.ceil(stampAnnotation._innerTemplateBounds.width * 100) / 100 ===\n                                        Math.ceil(stampAnnotation.bounds.width * 100) / 100 &&\n                                    Math.ceil(stampAnnotation._innerTemplateBounds.height * 100) / 100 ===\n                                        Math.ceil(stampAnnotation.bounds.height * 100) / 100);\n                            }\n                            if ((rubberStampAnnotation.RotateAngle !== 0 && isBoundsEqual) || (rubberStampAnnotation.RotateAngle === 0)) {\n                                rubberStampAnnotation.Rect = this_1.getBounds(stampAnnotation.bounds, height, width, pageRotation);\n                            }\n                            else {\n                                var bounds = this_1.getRubberStampBounds(stampAnnotation._innerTemplateBounds, stampAnnotation.bounds, height, width, pageRotation);\n                                rubberStampAnnotation.Rect = bounds;\n                            }\n                            if (rubberStampAnnotation.Rect.y < 0) {\n                                var cropRect = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_4__.Rect(rubberStampAnnotation.Rect.x, loadedPage.cropBox[1] + rubberStampAnnotation.Rect.y, rubberStampAnnotation.Rect.width, rubberStampAnnotation.Rect.height);\n                                rubberStampAnnotation.Rect = this_1.getBounds(cropRect, height, width, pageRotation);\n                            }\n                            rubberStampAnnotation.Icon = stampAnnotation.icon;\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(stampAnnotation.modifiedDate)) {\n                                rubberStampAnnotation.ModifiedDate = this_1.formatDate(stampAnnotation.modifiedDate);\n                            }\n                            else {\n                                rubberStampAnnotation.ModifiedDate = this_1.formatDate(new Date());\n                            }\n                            rubberStampAnnotation.Opacity = stampAnnotation.opacity;\n                            rubberStampAnnotation.pageNumber = pageNumber;\n                            var dictionary = annotation._dictionary.get('AP');\n                            this_1.pdfViewerBase.pngData.push(stampAnnotation);\n                            rubberStampAnnotation.IsDynamic = false;\n                            rubberStampAnnotation.AnnotType = 'stamp';\n                            if (Object.prototype.hasOwnProperty.call(stampAnnotation._dictionary, 'iconName')) {\n                                rubberStampAnnotation.IconName = stampAnnotation.getValues('iconName')[0];\n                            }\n                            else if (stampAnnotation.subject !== null) {\n                                rubberStampAnnotation.IconName = stampAnnotation.subject;\n                            }\n                            else {\n                                rubberStampAnnotation.IconName = '';\n                            }\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(stampAnnotation.text)) {\n                                rubberStampAnnotation.Note = stampAnnotation.text;\n                            }\n                            else {\n                                rubberStampAnnotation.Note = '';\n                            }\n                            annotRenderer.updateIsLockProperty(rubberStampAnnotation, stampAnnotation);\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(stampAnnotation.reviewHistory)) {\n                                for (var i_1 = 0; i_1 < stampAnnotation.reviewHistory.count; i_1++) {\n                                    rubberStampAnnotation.State =\n                                        this_1.getStateString(stampAnnotation.reviewHistory.at(parseInt(i_1.toString(), 10)).state);\n                                    rubberStampAnnotation.StateModel =\n                                        this_1.getStateModelString(stampAnnotation.reviewHistory.at(parseInt(i_1.toString(), 10)).stateModel);\n                                }\n                            }\n                            if (rubberStampAnnotation.State == null || rubberStampAnnotation.StateModel == null) {\n                                rubberStampAnnotation.State = 'Unmarked';\n                                rubberStampAnnotation.StateModel = 'None';\n                            }\n                            rubberStampAnnotation.Comments = new Array();\n                            for (var i_2 = 0; i_2 < stampAnnotation.comments.count; i_2++) {\n                                var annot = annotRenderer.loadPopupAnnotation(stampAnnotation.comments.at(i_2), height, width, pageRotation);\n                                rubberStampAnnotation.Comments.push(annot);\n                            }\n                            if (annotation._dictionary.has('Name')) {\n                                rubberStampAnnotation.Name = annotation._dictionary.get('Name');\n                                if (annotation._dictionary.get('Name').name && (annotation._dictionary.get('Name').name.includes('#23D') || annotation._dictionary.get('Name').name.includes('#D'))) {\n                                    rubberStampAnnotation.IsDynamic = true;\n                                }\n                            }\n                            rubberStampAnnotation.IsMaskedImage = this_1.isMaskedImage;\n                            rubberStampAnnotation.Apperarance = this_1.htmldata;\n                            if (stampAnnotation._dictionary.has('CustomData')) {\n                                var customData = stampAnnotation._dictionary.get('CustomData');\n                                if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(customData) && customData.trim())) {\n                                    var ExistingCustomData = dictionary.get('CustomData') ? dictionary.get('CustomData') : customData;\n                                    if (ExistingCustomData) {\n                                        rubberStampAnnotation.CustomData = ExistingCustomData;\n                                    }\n                                }\n                            }\n                            this_1.rubberStampAnnotationList.push(rubberStampAnnotation);\n                            this_1.annotationOrder.push(rubberStampAnnotation);\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dictionary)) {\n                                var pdfReference = annotation._dictionary.get('AP');\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pdfReference) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pdfReference.dictionary) && (pdfReference.dictionary.has('N'))) {\n                                    var apDictionary = pdfReference.dictionary;\n                                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(apDictionary)) {\n                                        var template = annotation.createTemplate();\n                                        if (template.size[0] === 0 || template.size[1] === 0 || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(template._appearance)) {\n                                            this_1.findStampImage(annotation);\n                                        }\n                                        else {\n                                            this_1.findStampTemplate(annotation, rubberStampAnnotation, pageRotation, this_1.annotationOrder.length - 1);\n                                        }\n                                    }\n                                }\n                            }\n                            else if (dictionary.has('N')) {\n                                var template = annotation.createTemplate();\n                                if (template.size[0] === 0 || template.size[1] === 0 || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(template._appearance)) {\n                                    this_1.findStampImage(annotation);\n                                }\n                                else {\n                                    this_1.findStampTemplate(annotation, rubberStampAnnotation, pageRotation, this_1.annotationOrder.length - 1);\n                                }\n                            }\n                        }\n                    }\n                    if (annotation instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfPopupAnnotation) {\n                        if (!annotation._dictionary.has('IRT')) {\n                            var stickyNote = annotRenderer.loadPopupAnnotation(annotation, height, width, pageRotation);\n                            this_1.stickyAnnotationList[this_1.stickyAnnotationList.length] = stickyNote;\n                            this_1.annotationOrder[this_1.annotationOrder.length] = stickyNote;\n                            var name_6 = stickyNote.AnnotName;\n                            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(name_6) || name_6 === '') {\n                                stickyNote.AnnotName = this_1.setAnnotationName(pageNumber);\n                            }\n                        }\n                    }\n                    if (annotation instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfFreeTextAnnotation) {\n                        var freeTextAnnot_1 = annotation;\n                        var isFreeTextAnnotation = this_1.isFreeTextAnnotationType(freeTextAnnot_1);\n                        if (isFreeTextAnnotation) {\n                            var isShapeLabelAnnot = textLabelCollection.some(function (s) { return s === freeTextAnnot_1.name; });\n                            var freeText = annotRenderer.loadFreeTextAnnotation(freeTextAnnot_1, height, width, pageRotation, loadedPage);\n                            if (!isShapeLabelAnnot) {\n                                this_1.freeTextAnnotationList[this_1.freeTextAnnotationList.length] = freeText;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = freeText;\n                            }\n                        }\n                        else {\n                            var freeText = annotRenderer.loadSignatureText(freeTextAnnot_1, pageNumber, height, width, pageRotation);\n                            if (!freeTextAnnot_1._dictionary.has('T')) {\n                                this_1.signatureAnnotationList[this_1.signatureAnnotationList.length] = freeText;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = freeText;\n                            }\n                        }\n                    }\n                    if (annotation instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfInkAnnotation) {\n                        var inkAnnotation = annotation;\n                        var signatureData = annotRenderer.loadSignature(inkAnnotation, height, width, pageRotation, pageNumber, loadedPage);\n                        var inkSignatureData = annotRenderer.loadInkAnnotation(inkAnnotation, height, width, pageRotation, pageNumber, loadedPage);\n                        if (!inkAnnotation._dictionary.has('T')) {\n                            this_1.signatureAnnotationList.push(signatureData);\n                            this_1.annotationOrder.push(signatureData);\n                        }\n                        else if (inkAnnotation._dictionary.has('NM')) {\n                            this_1.signatureInkAnnotationList.push(inkSignatureData);\n                            this_1.annotationOrder.push(inkSignatureData);\n                        }\n                        else if (inkAnnotation._dictionary.has('T')) {\n                            if (inkAnnotation._dictionary.has('annotationSignature')) {\n                                var canAdd = true;\n                                canAdd = inkAnnotation.getValues('annotationSignature').length > 0 ? false : true;\n                                if (canAdd) {\n                                    this_1.signatureAnnotationList.push(signatureData);\n                                    this_1.annotationOrder.push(signatureData);\n                                }\n                            }\n                        }\n                        if (!inkAnnotation._dictionary.has('NM') && !inkAnnotation._dictionary.has('annotationSignature')) {\n                            this_1.signatureAnnotationList.push(signatureData);\n                            this_1.annotationOrder.push(signatureData);\n                        }\n                    }\n                };\n                var this_1 = this;\n                for (var i = 0; i < loadedPage.annotations.count; i++) {\n                    _loop_1(i);\n                }\n            }\n        }\n        return { shapeAnnotation: this.shapeAnnotationList, textMarkupAnnotation: this.textMarkupAnnotationList,\n            measureShapeAnnotation: this.measureAnnotationList, stampAnnotations: this.rubberStampAnnotationList,\n            stickyNotesAnnotation: this.stickyAnnotationList, freeTextAnnotation: this.freeTextAnnotationList,\n            signatureAnnotation: this.signatureAnnotationList, signatureInkAnnotation: this.signatureInkAnnotationList,\n            annotationOrder: this.annotationOrder };\n    };\n    PageRenderer.prototype.formatDate = function (date) {\n        var month = this.datePadding(date.getMonth() + 1); // Months are zero-based\n        var day = this.datePadding(date.getDate());\n        var year = date.getFullYear();\n        var hours = this.datePadding(date.getHours());\n        var minutes = this.datePadding(date.getMinutes());\n        var seconds = this.datePadding(date.getSeconds());\n        return month + \"/\" + day + \"/\" + year + \" \" + hours + \":\" + minutes + \":\" + seconds;\n    };\n    // Pad the numbers with leading zeros if they are single digits\n    PageRenderer.prototype.datePadding = function (number) {\n        return number < 10 ? ('0' + number) : number.toString();\n    };\n    /**\n     * @private\n     * @param {PdfAnnotation} annotation - annotation\n     * @returns {void}\n     */\n    PageRenderer.prototype.findStampImage = function (annotation) {\n        var stream = annotation._dictionary.get('AP').get('N');\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(stream)) {\n            var appearance = stream;\n            var data = appearance.getString();\n            var content = (0,_syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__._stringToBytes)(data, true);\n            var parser = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__._ContentParser(content);\n            var result = parser._readContent();\n            this.stampAnnoattionRender(result, stream);\n        }\n    };\n    /**\n     * @private\n     * @param {PdfRubberStampAnnotation} annotation - annotation\n     * @param {any} rubberStampAnnotation - rubberStampAnnotation\n     * @param {number} pageRotation - pageRotation\n     * @param {number} collectionOrder - Gets the collection order\n     * @param {boolean} isFormField - Optional flag indicating whether the annotation is for a form field.\n     * @param {string} formFieldName - Optional name of the form field, if applicable.\n     * @param {Array<any>} formFieldList - Optional list of form fields, if applicable.\n     * @param {number} PageIndex - Optional page index, if applicable.\n     * @returns {void}\n     */\n    PageRenderer.prototype.findStampTemplate = function (annotation, rubberStampAnnotation, pageRotation, collectionOrder, isFormField, formFieldName, formFieldList, PageIndex) {\n        // Create a template from the appearance of rubber stamp annotation\n        var template = annotation.createTemplate();\n        //Store custom stamp model calss\n        rubberStampAnnotation.template = template._appearance;\n        rubberStampAnnotation.templateSize = template.size;\n        var stampDocument = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfDocument(this.readFromResources());\n        // Add a new page with template size and no margins\n        var pageSettings = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfPageSettings();\n        pageSettings.margins = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfMargins(0);\n        // pageSettings.rotation = this.getPageRotation(annotation);\n        pageSettings.rotation = pageRotation;\n        pageSettings.size = template.size;\n        var page = stampDocument.addPage(pageSettings);\n        // Draw template into new page graphics\n        page.graphics.drawTemplate(template, { x: 0, y: 0, width: template.size[0], height: template.size[1] });\n        // Remove existing PDF page at index 0\n        stampDocument.removePage(0);\n        // Save the PDF document which have appearance template\n        var data = 'data:application/pdf;base64,' + (0,_syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__._encode)(stampDocument.save());\n        data = this.pdfViewerBase.checkDocumentData(data, false);\n        var fileByteArray = this.pdfViewerBase.convertBase64(data);\n        if (isFormField) {\n            this.pdfViewerBase.pdfViewerRunner.addTask({ uploadedFile: fileByteArray, message: 'LoadPageStampCollection', password: null, pageIndex: 0, zoomFactor: this.pdfViewer.magnificationModule.zoomFactor, isTextNeed: false, isZoomMode: false, AnnotName: rubberStampAnnotation.AnnotName, rubberStampAnnotationPageNumber: rubberStampAnnotation.pageNumber, annotationOrder: JSON.stringify(this.annotationOrder), collectionOrder: collectionOrder, isFormField: isFormField, formFieldName: formFieldName, formFieldList: JSON.stringify(formFieldList), rubberStampAnnotation: rubberStampAnnotation, PageIndex: PageIndex }, _base_pdfviewer_utlis__WEBPACK_IMPORTED_MODULE_5__.TaskPriorityLevel.High);\n        }\n        else {\n            this.pdfViewerBase.pdfViewerRunner.addTask({ uploadedFile: fileByteArray, message: 'LoadPageStampCollection', password: null, pageIndex: 0, zoomFactor: this.pdfViewer.magnificationModule.zoomFactor, isTextNeed: false, isZoomMode: false, AnnotName: rubberStampAnnotation.AnnotName, rubberStampAnnotationPageNumber: rubberStampAnnotation.pageNumber, annotationOrder: JSON.stringify(this.annotationOrder), collectionOrder: collectionOrder }, _base_pdfviewer_utlis__WEBPACK_IMPORTED_MODULE_5__.TaskPriorityLevel.High);\n        }\n    };\n    /**\n     * @private\n     * @param {any} data - data\n     * @returns {void}\n     */\n    PageRenderer.prototype.initialPagesRendered = function (data) {\n        var canvas = document.createElement('canvas');\n        var value = data.value, width = data.width, height = data.height;\n        canvas.width = width;\n        canvas.height = height;\n        var canvasContext = canvas.getContext('2d');\n        var imageData = canvasContext.createImageData(width, height);\n        imageData.data.set(value);\n        canvasContext.putImageData(imageData, 0, 0);\n        var imageUrl = canvas.toDataURL();\n        this.pdfViewerBase.releaseCanvas(canvas);\n        var Json = { imagedata: imageUrl };\n        var id = data.annotName;\n        var annotOrder = [];\n        if (JSON.parse(data.annotationOrder).length > 0) {\n            annotOrder = JSON.parse(data.annotationOrder);\n        }\n        else {\n            if (this.pdfViewer.viewerBase.importedAnnotation &&\n                this.pdfViewer.viewerBase.importedAnnotation[data.rubberStampAnnotationPageNumber]) {\n                annotOrder = this.pdfViewer.viewerBase.importedAnnotation[data.rubberStampAnnotationPageNumber].annotationOrder;\n            }\n        }\n        var storeObject;\n        var annotObject;\n        var currentAnnot = annotOrder.find(function (currentAnnotation) { return id === currentAnnotation.AnnotName; });\n        if (currentAnnot) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentAnnot.Apperarance)) {\n                currentAnnot.Apperarance = [];\n            }\n            currentAnnot.Apperarance.push(Json);\n            storeObject = _index__WEBPACK_IMPORTED_MODULE_1__.PdfViewerBase.sessionStorageManager.getItem(this.pdfViewerBase.documentId + '_annotations_stamp');\n            if (this.pdfViewerBase.isStorageExceed) {\n                storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_stamp'];\n            }\n            var shouldRender = true;\n            if (storeObject) {\n                annotObject = JSON.parse(storeObject);\n                if (annotObject.length > 0) {\n                    for (var i = 0; i < annotObject.length; i++) {\n                        for (var j = 0; j < annotObject[parseInt(i.toString(), 10)].annotations.length; j++) {\n                            if (annotObject[parseInt(i.toString(), 10)].annotations[parseInt(j.toString(), 10)].\n                                annotName === currentAnnot.AnnotName) {\n                                shouldRender = false;\n                            }\n                        }\n                    }\n                }\n            }\n            if (shouldRender) {\n                this.pdfViewer.annotationModule.stampAnnotationModule.renderStampAnnotImage(currentAnnot, 0, null, null, true, true, data.collectionOrder);\n            }\n        }\n        this.Imagedata = imageUrl;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    PageRenderer.prototype.readFromResources = function () {\n        var base64string = 'JVBERi0xLjUNCiWDkvr+DQo0IDAgb2JqDQo8PA0KL1R5cGUgL0NhdGFsb2cNCi9QYWdlcyA1IDAgUg0KL0Fjcm9Gb3JtIDYgMCBSDQo+Pg0KZW5kb2JqDQoxIDAgb2JqDQo8PA0KL0ZpbHRlciAvRmxhdGVEZWNvZGUNCi9MZW5ndGggMTINCj4+DQpzdHJlYW0NCnheUyhU4AIAAiEAvA0KZW5kc3RyZWFtDQplbmRvYmoNCjIgMCBvYmoNCjw8DQovRmlsdGVyIC9GbGF0ZURlY29kZQ0KL0xlbmd0aCAxMg0KPj4NCnN0cmVhbQ0KeF5TCFTgAgABwQCcDQplbmRzdHJlYW0NCmVuZG9iag0KMyAwIG9iag0KPDwNCi9GaWx0ZXIgL0ZsYXRlRGVjb2RlDQovTGVuZ3RoIDEzNQ0KPj4NCnN0cmVhbQ0KeF5tjs0KwjAQhO8L+w578diYSlu9+wSC4DnUbRvIT0324ttrogiih2UYlm9mbggbOi4mzExjbGK62mCEKd+zsCeJ5HiSrcRVIbRKa1Lv+5hDtytCo69Zzq7kTZptyE+k0+XXvKRv++r2QyUSIywIFwoFPCcTsivdvzv+dn9F1/YTwgN6hTPqDQplbmRzdHJlYW0NCmVuZG9iag0KOSAwIG9iag0KPDwNCi9GaXJzdCAyNg0KL04gNA0KL1R5cGUgL09ialN0bQ0KL0ZpbHRlciAvRmxhdGVEZWNvZGUNCi9MZW5ndGggMTk2DQo+Pg0Kc3RyZWFtDQp4Xm1PTQuCQBC9L+x/mF+Qu34H4qHCSwRi3cTDYkMI4YauUP++WcVM6rA784b35r0JQHAWgpQ+ZxFIL+QsBlcIzpKEM+fyeiA4ubphT+jYXHsoIxBQVAT3emgNSOoK7PXQ1dhDkqQpZzQ64bVRO/2EciME2BdsA1ti36Vi9YU2yqANMGlGx6zBu3WpVtPF6l+ieE6Uqw6JF1i80i+qhRVNLNrdGsK0R9oJuOPvzTu/b7PiTtdnNFA6+SH7hPy55Q19a1EBDQplbmRzdHJlYW0NCmVuZG9iag0KMTAgMCBvYmoNCjw8DQovUm9vdCA0IDAgUg0KL0luZGV4IFswIDExXQ0KL1NpemUgMTENCi9UeXBlIC9YUmVmDQovVyBbMSAyIDFdDQovRmlsdGVyIC9GbGF0ZURlY29kZQ0KL0xlbmd0aCA0NA0KPj4NCnN0cmVhbQ0KeF4Vw0ENACAMALG77cVzBvCFUEShAkaTAlcWstFCimD89uipB3PyAFuGA3QNCmVuZHN0cmVhbQ0KZW5kb2JqDQoNCnN0YXJ0eHJlZg0KNzk4DQolJUVPRg0KJVBERi0xLjUNCiWDkvr+DQoxMSAwIG9iag0KPDwNCi9GaXJzdCA1DQovTiAxDQovVHlwZSAvT2JqU3RtDQovRmlsdGVyIC9GbGF0ZURlY29kZQ0KL0xlbmd0aCA3MQ0KPj4NCnN0cmVhbQ0KeF4zVzDg5bKx4eXSd84vzStRMOTl0g+pLEhV0A9ITE8tBvK8M1OKFaItFAwUgmKB3IDEolSgOlMQn5fLzo6Xi5cLAEOtEAkNCmVuZHN0cmVhbQ0KZW5kb2JqDQoxMiAwIG9iag0KPDwNCi9Sb290IDQgMCBSDQovSW5kZXggWzAgMSA3IDEgMTEgMl0NCi9TaXplIDEzDQovVHlwZSAvWFJlZg0KL1cgWzEgMiAxXQ0KL1ByZXYgNzk4DQovTGVuZ3RoIDI0DQovRmlsdGVyIC9GbGF0ZURlY29kZQ0KPj4NCnN0cmVhbQ0KeF5jYGD4z8TAzcDIwsLAyLKbAQAPSwHWDQplbmRzdHJlYW0NCmVuZG9iag0KDQpzdGFydHhyZWYNCjEyMTENCiUlRU9GDQo=';\n        return base64string;\n    };\n    /**\n     * @private\n     * @param {PdfRubberStampAnnotation} annotation - annotation\n     * @returns {void}\n     */\n    PageRenderer.prototype.getPageRotation = function (annotation) {\n        if (annotation.rotate === 0) {\n            return 0;\n        }\n        else if (annotation.rotate === 90) {\n            return 1;\n        }\n        else if (annotation.rotate === 180) {\n            return 2;\n        }\n        else if (annotation.rotate === 270) {\n            return 3;\n        }\n        return 0;\n    };\n    PageRenderer.prototype.stampAnnoattionRender = function (recordCollection, dictionary) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(recordCollection)) {\n            for (var i = 0; i < recordCollection.length; i++) {\n                var element = recordCollection[parseInt(i.toString(), 10)]._operands;\n                switch (recordCollection[parseInt(i.toString(), 10)]._operator) {\n                    case 'q': {\n                        var Json = { restorecanvas: false };\n                        this.htmldata.push(Json);\n                        break;\n                    }\n                    case 'Q': {\n                        var Json = { restorecanvas: true };\n                        this.htmldata.push(Json);\n                        break;\n                    }\n                    case 'Tr': {\n                        this.renderingMode = parseInt(element[0], 10);\n                        break;\n                    }\n                    case 'TJ':\n                    case 'Tj': {\n                        this.textString = recordCollection[parseInt(i.toString(), 10)]._operands[0];\n                        var Json = { type: 'string', text: this.textString, currentFontname: this.currentFont, baseFontName: this.baseFont, fontSize: this.fontSize };\n                        this.htmldata.push(Json);\n                        break;\n                    }\n                    case '\\'': {\n                        this.textString = recordCollection[parseInt(i.toString(), 10)]._operands[0];\n                        var Json = { type: 'string', text: this.textString, currentFontname: this.currentFont, baseFontName: this.baseFont, fontSize: this.fontSize };\n                        this.htmldata.push(Json);\n                        break;\n                    }\n                    case 'Tf': {\n                        var j = 0;\n                        for (j = 0; j < element.length; j++) {\n                            if (element[parseInt(j.toString(), 10)].includes('/')) {\n                                this.currentFont = element[parseInt(j.toString(), 10)].replace('/', '');\n                                break;\n                            }\n                        }\n                        this.fontSize = parseInt(element[j + 1], 10);\n                        if (dictionary.dictionary.has('Resources')) {\n                            var stdic = dictionary.dictionary.get('Resources');\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(stdic)) {\n                                var fontObject = stdic.get('Font');\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(fontObject) && recordCollection[parseInt(i.toString(), 10)]._operator === 'Tf') {\n                                    var name_7 = element[0].replace('/', '');\n                                    var refernceholder = fontObject.get(name_7);\n                                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(refernceholder) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(refernceholder.dictionary)) {\n                                        var sub = refernceholder.dictionary;\n                                        this.baseFont = sub.get('BaseFont');\n                                    }\n                                }\n                            }\n                        }\n                        break;\n                    }\n                    case 'Do': {\n                        if (dictionary.dictionary.has('Resources')) {\n                            var stdic = dictionary.dictionary.get('Resources');\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(stdic)) {\n                                var xObject = stdic.get('XObject');\n                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(xObject) && recordCollection[parseInt(i.toString(), 10)]._operator === 'Do') {\n                                    var name_8 = element[0].replace('/', '');\n                                    if (xObject.has(name_8)) {\n                                        var refernceholder = xObject.get(name_8);\n                                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(refernceholder) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(refernceholder.dictionary)) {\n                                            var sub = refernceholder;\n                                            if (sub.dictionary.get('Subtype').name === 'Image') {\n                                                var imageStucture = new _index__WEBPACK_IMPORTED_MODULE_2__.ImageStructureBase(sub, sub.dictionary);\n                                                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(imageStucture)) {\n                                                    var imageStream = imageStucture.getImageStream();\n                                                    var imageString = 'data:image/png;base64,' + (0,_syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__._encode)(imageStream);\n                                                    var Json = { imagedata: imageString };\n                                                    this.htmldata.push(Json);\n                                                    this.Imagedata = imageString;\n                                                }\n                                            }\n                                            else if (sub.dictionary.get('Subtype').name === 'Form') {\n                                                var appearance = sub;\n                                                var data = appearance.getString();\n                                                var content = (0,_syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__._stringToBytes)(data, true);\n                                                var parser = new _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__._ContentParser(content);\n                                                var result = parser._readContent();\n                                                this.stampAnnoattionRender(result, sub);\n                                            }\n                                            this.IsMaskedImage = false;\n                                            if (sub.dictionary.get('SMask')) {\n                                                this.IsMaskedImage = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    PageRenderer.prototype.getStateModelString = function (stateModel) {\n        switch (stateModel) {\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfAnnotationStateModel.review:\n                return 'Review';\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfAnnotationStateModel.marked:\n                return 'Marked';\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfAnnotationStateModel.none:\n                return 'None';\n            default:\n                return 'None';\n        }\n    };\n    PageRenderer.prototype.getStateString = function (state) {\n        switch (state) {\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfAnnotationState.accepted:\n                return 'Accepted';\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfAnnotationState.rejected:\n                return 'Rejected';\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfAnnotationState.cancel:\n                return 'Cancelled';\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfAnnotationState.completed:\n                return 'Completed';\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfAnnotationState.none:\n                return 'None';\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfAnnotationState.unmarked:\n                return 'Unmarked';\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfAnnotationState.marked:\n                return 'Marked';\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfAnnotationState.unknown:\n                return 'Unknown';\n            default:\n                return null;\n        }\n    };\n    PageRenderer.prototype.getBounds = function (bounds, pageHeight, pageWidth, pageRotation) {\n        var bound;\n        if (pageRotation === 0) {\n            bound = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_4__.Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n        else if (pageRotation === 1) {\n            bound = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_4__.Rect(this.convertPixelToPoint(pageWidth - this.convertPointToPixel(bounds.y) -\n                this.convertPointToPixel(bounds.height)), bounds.x, bounds.height, bounds.width);\n        }\n        else if (pageRotation === 2) {\n            bound = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_4__.Rect(this.convertPixelToPoint(pageWidth - this.convertPointToPixel(bounds.x) -\n                this.convertPointToPixel(bounds.width)), this.convertPixelToPoint(pageHeight -\n                this.convertPointToPixel(bounds.y) - this.convertPointToPixel(bounds.height)), bounds.width, bounds.height);\n        }\n        else if (pageRotation === 3) {\n            bound = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_4__.Rect(bounds.y, this.convertPixelToPoint(pageHeight - this.convertPointToPixel(bounds.x) -\n                this.convertPointToPixel(bounds.width)), bounds.height, bounds.width);\n        }\n        return bound;\n    };\n    PageRenderer.prototype.getRubberStampBounds = function (innerTemplateBounds, bounds, pageHeight, pageWidth, pageRotation) {\n        var bound = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_4__.Rect();\n        var centerPointX = 0;\n        var centerPointY = 0;\n        if (pageRotation === 0) {\n            centerPointX = bounds.x + (bounds.width / 2);\n            centerPointY = bounds.y + (bounds.height / 2);\n            bound = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_4__.Rect(centerPointX - (innerTemplateBounds.width / 2), centerPointY -\n                (innerTemplateBounds.height / 2), innerTemplateBounds.width, innerTemplateBounds.height);\n        }\n        else if (pageRotation === 1) {\n            var boundsX = this.convertPixelToPoint(pageWidth - this.convertPointToPixel(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bounds.Y) ?\n                bounds.Y : bounds.y) - this.convertPointToPixel(bounds.height));\n            var boundsY = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bounds.X) ? bounds.X : bounds.x;\n            centerPointX = boundsX + (bounds.height / 2);\n            centerPointY = boundsY + (bounds.width / 2);\n            bound = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_4__.Rect(centerPointX - (innerTemplateBounds.width / 2), centerPointY - (innerTemplateBounds.height / 2), innerTemplateBounds.width, innerTemplateBounds.height);\n        }\n        else if (pageRotation === 2) {\n            var boundsX = this.convertPixelToPoint(pageWidth - this.convertPointToPixel(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bounds.X) ?\n                bounds.X : bounds.x) - this.convertPointToPixel(bounds.width));\n            var boundsY = this.convertPixelToPoint(pageHeight - this.convertPointToPixel(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bounds.Y) ?\n                bounds.Y : bounds.y) - this.convertPointToPixel(bounds.height));\n            centerPointX = boundsX + (bounds.width / 2);\n            centerPointY = boundsY + (bounds.height / 2);\n            bound = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_4__.Rect(centerPointX - (innerTemplateBounds.width / 2), centerPointY - (innerTemplateBounds.height / 2), innerTemplateBounds.width, innerTemplateBounds.height);\n        }\n        else if (pageRotation === 3) {\n            var boundsX = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bounds.Y) ? bounds.Y : bounds.y;\n            var boundsY = this.convertPixelToPoint(pageHeight - this.convertPointToPixel(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(bounds.X) ?\n                bounds.X : bounds.x) - this.convertPointToPixel(bounds.width));\n            centerPointX = boundsX + (bounds.height / 2);\n            centerPointY = boundsY + (bounds.width / 2);\n            bound = new _syncfusion_ej2_drawings__WEBPACK_IMPORTED_MODULE_4__.Rect(centerPointX - (innerTemplateBounds.width / 2), centerPointY - (innerTemplateBounds.height / 2), innerTemplateBounds.width, innerTemplateBounds.height);\n        }\n        return bound;\n    };\n    PageRenderer.prototype.convertPixelToPoint = function (value) {\n        return (value * 72 / 96);\n    };\n    PageRenderer.prototype.convertPointToPixel = function (value) {\n        return (value * 96 / 72);\n    };\n    PageRenderer.prototype.getRotateAngleString = function (angle) {\n        switch (angle) {\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfRotationAngle.angle0:\n                return 'RotateAngle0';\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfRotationAngle.angle90:\n                return 'RotateAngle90';\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfRotationAngle.angle180:\n                return 'RotateAngle180';\n            case _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfRotationAngle.angle270:\n                return 'RotateAngle270';\n            default:\n                return 'RotateAngle0';\n        }\n    };\n    PageRenderer.prototype.checkName = function (stampAnnotation) {\n        // Check if the stamp annotation has a \"Name\" key in its dictionary.\n        if ('Name' in stampAnnotation._dictionary) {\n            // Get the custom data for the \"Name\" key.\n            var customData = stampAnnotation.getValues('Name');\n            // Check if the custom data is not null and contains a '#' character.\n            if (!((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(customData)) && customData.indexOf('#') > -1) {\n                // The stamp annotation has a name that contains a '#' character.\n                return true;\n            }\n        }\n        // The stamp annotation does not have a name that contains a '#' character.\n        return false;\n    };\n    PageRenderer.prototype.getAllFreeTextAnnotations = function (annotations) {\n        var loadedFreetextAnnotations = [];\n        for (var i = 0; i < annotations.count; i++) {\n            var annotation = annotations.at(i);\n            if (annotation instanceof _syncfusion_ej2_pdf__WEBPACK_IMPORTED_MODULE_3__.PdfFreeTextAnnotation) {\n                loadedFreetextAnnotations.push(annotation);\n            }\n        }\n        return loadedFreetextAnnotations;\n    };\n    PageRenderer.prototype.getShapeFreeText = function (shapeName, loadedFreetextAnnotations) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(shapeName) && shapeName !== '') {\n            // eslint-disable-next-line\n            return loadedFreetextAnnotations.find(function (annot) { return annot.name != undefined &&\n                annot.name.includes(shapeName); });\n        }\n        return null;\n    };\n    PageRenderer.prototype.setAnnotationName = function (pageNumber) {\n        var annotationName = pageNumber + this.annotationCount.toString();\n        this.annotationCount++;\n        return annotationName;\n    };\n    PageRenderer.prototype.isFreeTextAnnotationType = function (freeTextAnnot) {\n        var isFreeTextAnnotation = true;\n        if (freeTextAnnot._dictionary.has('AnnotationType')) {\n            var annotType = freeTextAnnot.getValues('AnnotationType');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(annotType) && annotType[0] === 'Signature') {\n                isFreeTextAnnotation = false;\n            }\n        }\n        return isFreeTextAnnotation;\n    };\n    return PageRenderer;\n}());\n\n/**\n *\n * @hidden\n */\nvar StampAnnotationBase = /** @class */ (function () {\n    function StampAnnotationBase() {\n    }\n    return StampAnnotationBase;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/pdf-base/page-renderer.js?");

/***/ })

}]);