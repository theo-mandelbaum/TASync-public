"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkej2_vue_samples"] = self["webpackChunkej2_vue_samples"] || []).push([["chunk-vendors-node_modules_syncfusion_ej2-maps_src_maps_layers_marker_js-77753f59"],{

/***/ "./node_modules/@syncfusion/ej2-maps/src/maps/layers/marker.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-maps/src/maps/layers/marker.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Marker: () => (/* binding */ Marker)\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index */ \"./node_modules/@syncfusion/ej2-maps/src/maps/index.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _utils_helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/helper */ \"./node_modules/@syncfusion/ej2-maps/src/maps/utils/helper.js\");\n\n\n\n\n\n/**\n * Marker class\n */\nvar Marker = /** @class */ (function () {\n    function Marker(maps) {\n        this.maps = maps;\n        this.sameMarkerData = [];\n        this.initialMarkerCluster = [];\n        this.zoomedMarkerCluster = [];\n    }\n    /**\n     * @private\n     * @returns {Maps} - Returns the instance of the map.\n     */\n    Marker.prototype.getMapsInstance = function () {\n        return this.maps;\n    };\n    Marker.prototype.markerRender = function (maps, layerElement, layerIndex, factor, type) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateFn;\n        var markerCount = 0;\n        var nullCount = 0;\n        var isMarkerTemplateNewCreation = false;\n        var markerTemplateCount = 0;\n        maps.translateType = 'marker';\n        var currentLayer = maps.layersCollection[layerIndex];\n        var markerElement = layerElement.querySelectorAll('#' + maps.element.id + '_Markers_Group');\n        if (markerElement.length > 0) {\n            this.markerSVGObject = markerElement[0];\n            this.markerSVGObject.innerHTML = '';\n            isMarkerTemplateNewCreation = true;\n        }\n        else {\n            this.markerSVGObject = maps.renderer.createGroup({\n                id: maps.element.id + '_Markers_Group',\n                class: 'GroupElement'\n            });\n        }\n        this.markerSVGObject.style.pointerEvents = 'auto';\n        var secondaryElement = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(maps.element.id + '_Secondary_Element');\n        var markerTemplateElement = secondaryElement.querySelectorAll('#' + maps.element.id + '_LayerIndex_' + layerIndex + '_Markers_Template_Group');\n        var markerTemplateEle;\n        if (markerTemplateElement && markerTemplateElement.length > 0 && markerTemplateElement[0].childElementCount > 0) {\n            markerTemplateEle = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(maps.element.id + '_LayerIndex_' + layerIndex + '_Markers_Template_Group');\n            markerTemplateEle.innerHTML = '';\n            isMarkerTemplateNewCreation = true;\n        }\n        else {\n            markerTemplateEle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\n                id: maps.element.id + '_LayerIndex_' + layerIndex + '_Markers_Template_Group',\n                className: maps.element.id + '_template'\n            });\n            markerTemplateEle.style.cssText = 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + maps.mapAreaRect.y + 'px;' +\n                'left:' + maps.mapAreaRect.x + 'px;' +\n                'height:' + maps.mapAreaRect.height + 'px;' +\n                'width:' + maps.mapAreaRect.width + 'px;';\n        }\n        var allowInnerClusterSetting = this.allowInnerClusterSetting(currentLayer);\n        var allowAnimation = (currentLayer.animationDuration !== 0 || _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.animationMode === 'Enable') || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(maps.zoomModule);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var translatePoint;\n        if (!maps.isTileMap) {\n            translatePoint = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(maps.zoomModule) && maps.zoomSettings.zoomFactor > 1 ?\n                (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getZoomTranslate)(maps, currentLayer, allowAnimation) :\n                (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getTranslate)(maps, currentLayer, allowAnimation);\n        }\n        Array.prototype.forEach.call(currentLayer.markerSettings, function (markerSettings, markerIndex) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var markerData = markerSettings.dataSource;\n            markerCount = 0;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerSettings.dataSource)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                Array.prototype.forEach.call(markerData, function (data, dataIndex) {\n                    maps.markerNullCount = markerIndex > 0 && dataIndex === 0 ? 0 : maps.markerNullCount;\n                    var eventArgs = {\n                        cancel: false, name: _index__WEBPACK_IMPORTED_MODULE_0__.markerRendering, fill: markerSettings.fill,\n                        height: (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerSettings.heightValuePath) &&\n                            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data[markerSettings.heightValuePath]) ?\n                            data[markerSettings.heightValuePath] : markerSettings.height),\n                        width: (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerSettings.widthValuePath) &&\n                            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data[markerSettings.widthValuePath]) ?\n                            data[markerSettings.widthValuePath] : markerSettings.width),\n                        imageUrl: markerSettings.imageUrl, shape: markerSettings.shape,\n                        template: markerSettings.template, data: data, maps: maps, marker: markerSettings,\n                        border: markerSettings.border, colorValuePath: markerSettings.colorValuePath,\n                        shapeValuePath: markerSettings.shapeValuePath, imageUrlValuePath: markerSettings.imageUrlValuePath\n                    };\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    maps.trigger('markerRendering', eventArgs, function (MarkerArgs) {\n                        eventArgs = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.markerColorChoose)(eventArgs, data);\n                        eventArgs = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.markerShapeChoose)(eventArgs, data);\n                        var lng = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerSettings.longitudeValuePath)) ?\n                            Number((0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getValueFromObject)(data, markerSettings.longitudeValuePath)) : !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data['longitude']) ?\n                            parseFloat(data['longitude']) : !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data['Longitude']) ? parseFloat(data['Longitude']) : null;\n                        var lat = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerSettings.latitudeValuePath)) ?\n                            Number((0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getValueFromObject)(data, markerSettings.latitudeValuePath)) : !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data['latitude']) ?\n                            parseFloat(data['latitude']) : !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data['Latitude']) ? parseFloat(data['Latitude']) : null;\n                        var offset = markerSettings.offset;\n                        if (!eventArgs.cancel && markerSettings.visible && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(lng) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(lat)) {\n                            var markerID = maps.element.id + '_LayerIndex_' + layerIndex + '_MarkerIndex_'\n                                + markerIndex + '_dataIndex_' + dataIndex;\n                            var location_1 = (maps.isTileMap) ? (0,_index__WEBPACK_IMPORTED_MODULE_0__.convertTileLatLongToPoint)(new _index__WEBPACK_IMPORTED_MODULE_0__.MapLocation(lng, lat), factor, maps.tileTranslatePoint, true) : (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.convertGeoToPoint)(lat, lng, factor, currentLayer, maps);\n                            if (maps.isTileMap) {\n                                translatePoint = (currentLayer.type === 'SubLayer' && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(maps.zoomModule)) ? location_1 = (0,_index__WEBPACK_IMPORTED_MODULE_0__.convertTileLatLongToPoint)(new _index__WEBPACK_IMPORTED_MODULE_0__.MapLocation(lng, lat), maps.tileZoomLevel, maps.tileTranslatePoint, true) : new Object();\n                            }\n                            var scale = type === 'AddMarker' ? maps.scale : translatePoint['scale'];\n                            var transPoint = type === 'AddMarker' ? maps.translatePoint : translatePoint['location'];\n                            if (eventArgs.template && (!isNaN(location_1.x) && !isNaN(location_1.y))) {\n                                isMarkerTemplateNewCreation = false;\n                                markerTemplateCount++;\n                                (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.markerTemplate)(eventArgs, templateFn, markerID, data, markerIndex, markerTemplateEle, location_1, transPoint, scale, offset, maps);\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                maps.renderReactTemplates();\n                            }\n                            else if (!eventArgs.template && (!isNaN(location_1.x) && !isNaN(location_1.y))) {\n                                isMarkerTemplateNewCreation = true;\n                                markerCount++;\n                                (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.marker)(eventArgs, markerSettings, markerData, dataIndex, location_1, transPoint, markerID, offset, scale, maps, _this.markerSVGObject);\n                            }\n                        }\n                        nullCount += (!isNaN(lat) && !isNaN(lng)) ? 0 : 1;\n                        markerTemplateCount += (eventArgs.cancel) ? 1 : 0;\n                        markerCount += (eventArgs.cancel) ? 1 : 0;\n                        maps.markerNullCount = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(lng) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(lat)) ?\n                            maps.markerNullCount + 1 : maps.markerNullCount;\n                        var markerDataLength = markerData.length - maps.markerNullCount;\n                        var isMarkersClustered = false;\n                        var markerGroup = (markerSettings.clusterSettings.allowClustering ||\n                            (currentLayer.markerClusterSettings.allowClustering && currentLayer.markerSettings.length > 1))\n                            ? _this.markerSVGObject.querySelectorAll(\"[id*='LayerIndex_\" + layerIndex + \"_MarkerIndex_\" + markerIndex + \"']:not([id*='_Group'])\")\n                            : _this.markerSVGObject.childNodes;\n                        var templateCount = _this.markerSVGObject.childNodes === markerGroup ? markerTemplateCount : 0;\n                        if (markerGroup.length === (markerDataLength - templateCount - nullCount) && (type !== 'Template')) {\n                            if (markerElement.length === 0) {\n                                layerElement.appendChild(_this.markerSVGObject);\n                            }\n                            if (markerSettings.clusterSettings.allowClustering || !allowInnerClusterSetting &&\n                                currentLayer.markerClusterSettings.allowClustering) {\n                                if (markerElement.length === 0) {\n                                    maps.svgObject.appendChild(_this.markerSVGObject);\n                                    maps.element.appendChild(maps.svgObject);\n                                }\n                                if ((currentLayer.urlTemplate.indexOf('openstreetmap') !== -1 && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(currentLayer.shapeData))\n                                    && maps.zoomSettings.enable) {\n                                    isMarkersClustered = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.clusterTemplate)(currentLayer, _this.markerSVGObject, maps, layerIndex, markerIndex, _this.markerSVGObject, layerElement, true, false, null, allowInnerClusterSetting);\n                                    if (markerElement.length === 0) {\n                                        layerElement.appendChild(_this.markerSVGObject);\n                                    }\n                                }\n                                else {\n                                    isMarkersClustered = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.clusterTemplate)(currentLayer, _this.markerSVGObject, maps, layerIndex, markerIndex, _this.markerSVGObject, layerElement, true, false, translatePoint, allowInnerClusterSetting);\n                                }\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                maps.renderReactTemplates();\n                            }\n                        }\n                        var markerTemplateGroup = (markerSettings.clusterSettings.allowClustering ||\n                            (currentLayer.markerClusterSettings.allowClustering && currentLayer.markerSettings.length > 1))\n                            ? markerTemplateEle.querySelectorAll(\"[id*='LayerIndex_\" + layerIndex + \"_MarkerIndex_\" + markerIndex + \"']:not([id*='_Group'])\")\n                            : markerTemplateEle.childNodes;\n                        if (markerTemplateGroup.length === (markerDataLength - markerCount - nullCount) && (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(maps.element.id + '_Secondary_Element')) {\n                            if (!isMarkerTemplateNewCreation) {\n                                (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(maps.element.id + '_Secondary_Element').appendChild(markerTemplateEle);\n                            }\n                            if (maps.checkInitialRender) {\n                                if ((markerSettings.clusterSettings.allowClustering || !allowInnerClusterSetting &&\n                                    currentLayer.markerClusterSettings.allowClustering) && !isMarkersClustered) {\n                                    (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.clusterTemplate)(currentLayer, markerTemplateEle, maps, layerIndex, markerIndex, _this.markerSVGObject, layerElement, false, false, translatePoint, allowInnerClusterSetting);\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    maps.renderReactTemplates();\n                                }\n                            }\n                            if (currentLayer.markerClusterSettings.allowClustering && markerElement.length > 0) {\n                                var layerCollectionEle = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElementByID)(maps.element.id + '_Layer_Collections');\n                                layerCollectionEle.appendChild(layerElement);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    };\n    /**\n     * To find zoom level for individual layers like India, USA.\n     *\n     * @param {number} mapWidth - Specifies the width of the maps\n     * @param {number} mapHeight - Specifies the height of the maps\n     * @param {number} maxZoomFact - Specifies the maximum zoom factor\n     * @returns {number} - Returns the scale factor\n     */\n    Marker.prototype.calculateIndividualLayerMarkerZoomLevel = function (mapWidth, mapHeight, maxZoomFact) {\n        var latZoom;\n        var lngZoom;\n        var height = Math.abs(this.maps.baseMapBounds.latitude.max - this.maps.baseMapBounds.latitude.min);\n        var width = Math.abs(this.maps.baseMapBounds.longitude.max - this.maps.baseMapBounds.longitude.min);\n        latZoom = Math.floor(Math.log(mapHeight / height));\n        latZoom = (latZoom > maxZoomFact) ? maxZoomFact : latZoom;\n        lngZoom = Math.floor(Math.log(mapWidth / width));\n        lngZoom = (lngZoom > maxZoomFact) ? maxZoomFact : lngZoom;\n        var result = Math.min(latZoom, lngZoom);\n        var scaleFactor = Math.min(result, maxZoomFact - 1);\n        if (!this.maps.isTileMap) {\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.compareZoomFactor)(scaleFactor, this.maps);\n        }\n        return scaleFactor;\n    };\n    /**\n     * To calculate center position and factor value dynamically.\n     *\n     * @param {LayerSettings[]} layersCollection - Specifies the layer settings instance.\n     * @returns {void}\n     * @private\n     */\n    Marker.prototype.calculateZoomCenterPositionAndFactor = function (layersCollection) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.maps)) {\n            if (this.maps.zoomSettings.shouldZoomInitially && this.maps.markerModule) {\n                var minLong_1;\n                var maxLat_1;\n                var minLat_1;\n                var maxLong_1;\n                var zoomLevel = void 0;\n                var centerLat = void 0;\n                var centerLong = void 0;\n                var maxZoomFact = this.maps.zoomSettings.maxZoom;\n                var mapWidth = this.maps.mapAreaRect.width;\n                var mapHeight = this.maps.mapAreaRect.height;\n                this.maps.markerZoomedState = this.maps.markerZoomedState ? this.maps.markerZoomedState :\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.maps.markerZoomFactor) ? !this.maps.markerZoomedState :\n                        this.maps.markerZoomFactor > 1 ? this.maps.markerZoomedState : !this.maps.markerZoomedState;\n                this.maps.defaultState = this.maps.markerZoomedState ? !this.maps.markerZoomedState : this.maps.defaultState;\n                Array.prototype.forEach.call(layersCollection, function (currentLayer) {\n                    var isMarker = currentLayer.markerSettings.length !== 0;\n                    if (isMarker) {\n                        Array.prototype.forEach.call(currentLayer.markerSettings, function (markerSetting) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            var markerData = markerSetting.dataSource;\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(markerData) && markerData.length > 0) {\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                Array.prototype.forEach.call(markerData, function (data, dataIndex) {\n                                    var latitude = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data['latitude']) ? parseFloat(data['latitude']) :\n                                        !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data['Latitude']) ? parseFloat(data['Latitude']) : null;\n                                    var longitude = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data['longitude']) ? parseFloat(data['longitude']) :\n                                        !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(data['Longitude']) ? parseFloat(data['Longitude']) : null;\n                                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(latitude) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(longitude)) {\n                                        minLong_1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(minLong_1) && dataIndex === 0 ?\n                                            longitude : minLong_1;\n                                        maxLat_1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(maxLat_1) && dataIndex === 0 ?\n                                            latitude : maxLat_1;\n                                        minLat_1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(minLat_1) && dataIndex === 0 ?\n                                            latitude : minLat_1;\n                                        maxLong_1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(maxLong_1) && dataIndex === 0 ?\n                                            longitude : maxLong_1;\n                                        if (minLong_1 > longitude) {\n                                            minLong_1 = longitude;\n                                        }\n                                        if (minLat_1 > latitude) {\n                                            minLat_1 = latitude;\n                                        }\n                                        if (maxLong_1 < longitude) {\n                                            maxLong_1 = longitude;\n                                        }\n                                        if (maxLat_1 < latitude) {\n                                            maxLat_1 = latitude;\n                                        }\n                                    }\n                                });\n                            }\n                        });\n                    }\n                });\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(minLat_1) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(minLong_1) &&\n                    !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(maxLong_1) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(maxLat_1)) {\n                    // To find the center position\n                    centerLat = (minLat_1 + maxLat_1) / 2;\n                    centerLong = (minLong_1 + maxLong_1) / 2;\n                    this.maps.markerCenterLatitude = centerLat;\n                    this.maps.markerCenterLongitude = centerLong;\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.maps.markerZoomCenterPoint) || this.maps.markerZoomedState) {\n                        this.maps.markerZoomCenterPoint = {\n                            latitude: centerLat,\n                            longitude: centerLong\n                        };\n                    }\n                    var markerFactor = void 0;\n                    if (this.maps.isTileMap || this.maps.baseMapRectBounds['min']['x'] === 0) {\n                        zoomLevel = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.calculateZoomLevel)(minLat_1, maxLat_1, minLong_1, maxLong_1, mapWidth, mapHeight, this.maps, false);\n                        if (this.maps.isTileMap) {\n                            markerFactor = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.maps.markerZoomFactor) ?\n                                zoomLevel : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.maps.mapScaleValue) ?\n                                zoomLevel : this.maps.mapScaleValue > 1 && this.maps.markerZoomFactor !== 1 ?\n                                this.maps.mapScaleValue : zoomLevel;\n                        }\n                        else {\n                            markerFactor = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.maps.mapScaleValue) ? zoomLevel :\n                                (Math.floor(this.maps.scale) !== 1 &&\n                                    this.maps.mapScaleValue !== zoomLevel)\n                                    &&\n                                        ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.maps.shouldZoomCurrentFactor))\n                                    ? this.maps.mapScaleValue : zoomLevel;\n                            if (((markerFactor === this.maps.mapScaleValue &&\n                                (this.maps.markerZoomFactor === 1 || this.maps.mapScaleValue === 1))\n                                && (!this.maps.enablePersistence))) {\n                                markerFactor = zoomLevel;\n                            }\n                        }\n                    }\n                    else {\n                        zoomLevel = this.calculateIndividualLayerMarkerZoomLevel(mapWidth, mapHeight, maxZoomFact);\n                        markerFactor = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.maps.mapScaleValue) ? zoomLevel :\n                            (this.maps.mapScaleValue !== zoomLevel)\n                                ? this.maps.mapScaleValue : zoomLevel;\n                    }\n                    this.maps.markerZoomFactor = markerFactor;\n                }\n            }\n            else {\n                this.maps.markerZoomedState = false;\n                if (this.maps.markerZoomFactor > 1) {\n                    this.maps.markerCenterLatitude = null;\n                    this.maps.markerCenterLongitude = null;\n                    this.maps.markerZoomFactor = 1;\n                    if (!this.maps.enablePersistence) {\n                        this.maps.mapScaleValue = 1;\n                    }\n                }\n                if (this.maps.isTileMap && !this.maps.enablePersistence\n                    && this.maps.mapScaleValue <= 1) {\n                    this.maps.tileZoomLevel = this.maps.mapScaleValue === 0 ? (this.maps.isZoomByPosition ? this.maps.tileZoomLevel : 1)\n                        : this.maps.mapScaleValue;\n                    if (this.maps.mapScaleValue === 1 && this.maps.markerZoomFactor === 1 &&\n                        !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.maps.tileTranslatePoint)) {\n                        this.maps.tileTranslatePoint.x = 0;\n                        this.maps.tileTranslatePoint.y = 0;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To check and trigger marker click event.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event argument.\n     * @returns {void}\n     * @private\n     */\n    Marker.prototype.markerClick = function (e) {\n        var target = e.target.id;\n        if (target.indexOf(this.maps.element.id) === -1) {\n            var ancestor = e.target.closest('.' + this.maps.element.id + '_marker_template_element');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(ancestor) && ancestor.id.indexOf('_MarkerIndex_') > -1) {\n                target = ancestor.id;\n            }\n        }\n        if (target.indexOf('_LayerIndex_') === -1 || target.indexOf('_cluster_') > 0) {\n            return;\n        }\n        var options = this.getMarker(target);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(options)) {\n            return;\n        }\n        if (options.marker.enableDrag) {\n            document.getElementById(this.maps.element.id + '_svg').style.cursor = 'grabbing';\n        }\n        var eventArgs = {\n            cancel: false, name: _index__WEBPACK_IMPORTED_MODULE_0__.markerClick, data: options.data, maps: this.maps,\n            marker: options.marker, target: target, x: e.clientX, y: e.clientY,\n            latitude: options.data['latitude'] || options.data['Latitude'],\n            longitude: options.data['longitude'] || options.data['Longitude'],\n            value: options.data['name']\n        };\n        this.maps.trigger(_index__WEBPACK_IMPORTED_MODULE_0__.markerClick, eventArgs);\n        if (options.marker.enableDrag) {\n            var isCluster = false;\n            var layerIndex = parseInt(target.split('_LayerIndex_')[1].split('_')[0], 10);\n            var markerIndex = parseInt(target.split('_MarkerIndex_')[1].split('_')[0], 10);\n            var dataIndex_1 = parseInt(target.split('_dataIndex_')[1].split('_')[0], 10);\n            var marker_1 = this.maps.layers[layerIndex].markerSettings[markerIndex];\n            if (this.sameMarkerData.length > 0) {\n                isCluster = (this.sameMarkerData[0].data.filter(function (el) { return (el['index'] === dataIndex_1); })).length > 0 &&\n                    this.sameMarkerData[0].layerIndex === layerIndex && this.sameMarkerData[0].markerIndex === markerIndex;\n            }\n            if (!isCluster) {\n                var dragEventArgs = {\n                    name: _index__WEBPACK_IMPORTED_MODULE_0__.markerDragStart, x: e.clientX, y: e.clientY,\n                    latitude: options.data['latitude'] || options.data['Latitude'],\n                    longitude: options.data['longitude'] || options.data['Longitude'],\n                    layerIndex: layerIndex, markerIndex: markerIndex, dataIndex: dataIndex_1\n                };\n                this.maps.trigger(_index__WEBPACK_IMPORTED_MODULE_0__.markerDragStart, dragEventArgs);\n                this.maps.markerDragArgument = {\n                    targetId: target, x: e.clientX, y: e.clientY,\n                    latitude: options.data['latitude'] || options.data['Latitude'],\n                    longitude: options.data['longitude'] || options.data['Longitude'],\n                    shape: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(marker_1.shapeValuePath) ? marker_1.shape\n                        : marker_1.dataSource[dataIndex_1][marker_1.shapeValuePath],\n                    layerIndex: layerIndex, markerIndex: markerIndex, dataIndex: dataIndex_1\n                };\n            }\n        }\n    };\n    /**\n     * To check and trigger Cluster click event.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event argument.\n     * @returns {void}\n     * @private\n     */\n    Marker.prototype.markerClusterClick = function (e) {\n        var target = e.target.id;\n        if (target.indexOf('_LayerIndex_') === -1 || target.indexOf('_cluster_') === -1) {\n            return;\n        }\n        var options = this.getMarker(target);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(options)) {\n            return;\n        }\n        if ((options.clusterCollection.length > 0 && this.maps.markerClusterExpand)) {\n            if ((0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.getElement)(this.maps.element.id + '_mapsTooltip') &&\n                this.maps.mapsTooltipModule.tooltipTargetID.indexOf('_MarkerIndex_') > -1) {\n                (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.removeElement)(this.maps.element.id + '_mapsTooltip');\n            }\n            if (this.sameMarkerData.length > 0 && !this.maps.markerClusterExpandCheck) {\n                this.maps.markerClusterExpandCheck = true;\n                (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.mergeSeparateCluster)(this.sameMarkerData, this.maps);\n            }\n            else {\n                this.sameMarkerData = options.clusterCollection;\n                this.maps.markerClusterExpandCheck = false;\n                (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.clusterSeparate)(this.sameMarkerData, this.maps, this.markerSVGObject, true);\n            }\n        }\n        var eventArgs = {\n            cancel: false, name: _index__WEBPACK_IMPORTED_MODULE_0__.markerClusterClick, data: options, maps: this.maps,\n            target: target, x: e.clientX, y: e.clientY,\n            latitude: options.data['latitude'] || options.data['Latitude'], longitude: options.data['longitude'] || options.data['Longitude'],\n            markerClusterCollection: options['markCollection']\n        };\n        this.maps.trigger(_index__WEBPACK_IMPORTED_MODULE_0__.markerClusterClick, eventArgs);\n    };\n    /**\n     * To get marker from target id.\n     *\n     * @param {string} target - Specifies the target\n     * @returns {object} - Returns the marker, data, clusterCollection, markCollection\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Marker.prototype.getMarker = function (target) {\n        var id = target.split('_LayerIndex_');\n        var index = parseInt(id[1].split('_')[0], 10);\n        var layer = this.maps.layers[index];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var data;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var markCollection = [];\n        var clusterCollection = [];\n        var marker;\n        if (target.indexOf('_MarkerIndex_') > -1) {\n            var markerIndex = parseInt(id[1].split('_MarkerIndex_')[1].split('_')[0], 10);\n            var dataIndex = parseInt(id[1].split('_dataIndex_')[1].split('_')[0], 10);\n            marker = layer.markerSettings[markerIndex];\n            var allowInnerClusterSetting = this.allowInnerClusterSetting(layer);\n            this.maps.markerClusterExpand = !allowInnerClusterSetting && layer.markerClusterSettings.allowClustering ?\n                layer.markerClusterSettings.allowClusterExpand : marker.clusterSettings.allowClusterExpand;\n            if (!isNaN(markerIndex)) {\n                data = marker.dataSource[dataIndex];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection_1 = [];\n                if (!marker.template && (target.indexOf('_cluster_') > -1) && this.maps.markerClusterExpand) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    Array.prototype.forEach.call(marker.dataSource, function (location, index) {\n                        if (location['latitude'] === data['latitude'] && location['longitude'] === data['longitude']) {\n                            collection_1.push({ data: data, index: index });\n                        }\n                    });\n                }\n                if ((target.indexOf('_cluster_') > -1)) {\n                    var isClusterSame = false;\n                    var cluster = !allowInnerClusterSetting && layer.markerClusterSettings.allowClustering ?\n                        layer.markerClusterSettings : layer.markerSettings[markerIndex].clusterSettings;\n                    var clusterElement = document.getElementById(target.indexOf('_datalabel_') > -1 ? cluster.shape === 'Balloon' ? target.split('_datalabel_')[0] + '_Group' : target.split('_datalabel_')[0] : cluster.shape === 'Balloon' ? target + '_Group' : target);\n                    var indexes = cluster.shape === 'Balloon' ? clusterElement.children[0].textContent.split(',').map(Number) : clusterElement.textContent.split(',').map(Number);\n                    collection_1 = [];\n                    for (var _i = 0, indexes_1 = indexes; _i < indexes_1.length; _i++) {\n                        var i = indexes_1[_i];\n                        collection_1.push({ data: marker.dataSource[i], index: i });\n                        markCollection.push(marker.dataSource[i]);\n                    }\n                    isClusterSame = false;\n                    clusterCollection.push({\n                        data: collection_1, layerIndex: index, markerIndex: markerIndex, dataIndex: dataIndex,\n                        targetClusterIndex: +(target.split('_cluster_')[1].indexOf('_datalabel_') > -1 ? target.split('_cluster_')[1].split('_datalabel_')[0] : target.split('_cluster_')[1]),\n                        isClusterSame: isClusterSame\n                    });\n                }\n                return { marker: marker, data: data, clusterCollection: clusterCollection, markCollection: markCollection };\n            }\n        }\n        return null;\n    };\n    /**\n     * To check and trigger marker move event.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event argument.\n     * @returns {void}\n     * @private\n     */\n    Marker.prototype.markerMove = function (e) {\n        var targetId = e.target.id;\n        if (targetId.indexOf('_LayerIndex_') === -1 || targetId.indexOf('_cluster_') > 0) {\n            return;\n        }\n        var options = this.getMarker(targetId);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(options)) {\n            return;\n        }\n        if (options.marker.enableDrag) {\n            document.getElementById(this.maps.element.id + '_svg').style.cursor = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(this.maps.markerDragArgument) ?\n                'pointer' : 'grabbing';\n        }\n        var eventArgs = {\n            cancel: false, name: _index__WEBPACK_IMPORTED_MODULE_0__.markerMouseMove, data: options.data,\n            maps: this.maps, target: targetId, x: e.clientX, y: e.clientY\n        };\n        this.maps.trigger(_index__WEBPACK_IMPORTED_MODULE_0__.markerMouseMove, eventArgs);\n    };\n    /**\n     * To check and trigger cluster move event.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event argument.\n     * @returns {void}\n     * @private\n     */\n    Marker.prototype.markerClusterMouseMove = function (e) {\n        var targetId = e.target.id;\n        if (targetId.indexOf('_LayerIndex_') === -1 || targetId.indexOf('_cluster_') === -1) {\n            return;\n        }\n        var options = this.getMarker(targetId);\n        if (this.maps.markerClusterExpand) {\n            e.target.style.cursor = 'pointer';\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(options)) {\n            return;\n        }\n        var eventArgs = {\n            cancel: false, name: _index__WEBPACK_IMPORTED_MODULE_0__.markerClusterMouseMove, data: options.data, maps: this.maps,\n            target: targetId, x: e.clientX, y: e.clientY\n        };\n        this.maps.trigger(_index__WEBPACK_IMPORTED_MODULE_0__.markerClusterMouseMove, eventArgs);\n    };\n    /**\n     * This method is used to return whether the clustering is enabled in any marker settings.\n     *\n     * @param {LayerSettings} layer - Specifies the layer settings\n     * @returns {boolean}  - Specifies whether the clustering is enabled in any marker settings.\n     * @private\n     */\n    Marker.prototype.allowInnerClusterSetting = function (layer) {\n        var allowInnerClusterSetting = false;\n        for (var markerIndex = 0; markerIndex < layer.markerSettings.length; markerIndex++) {\n            if (layer.markerSettings[markerIndex].clusterSettings.allowClustering) {\n                allowInnerClusterSetting = true;\n                break;\n            }\n        }\n        return allowInnerClusterSetting;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Marker.prototype.initializeMarkerClusterList = function () {\n        for (var i = 0; i < this.maps.layers.length; i++) {\n            this.initialMarkerCluster[i] = [];\n            this.zoomedMarkerCluster[i] = [];\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Marker.prototype.getModuleName = function () {\n        return 'Marker';\n    };\n    /**\n     * To destroy the layers.\n     *\n     * @returns {void}\n     * @private\n     */\n    Marker.prototype.destroy = function () {\n        this.maps = null;\n        this.markerSVGObject = null;\n        this.sameMarkerData = [];\n        this.initialMarkerCluster = [];\n        this.zoomedMarkerCluster = [];\n    };\n    return Marker;\n}());\n\n\n\n//# sourceURL=webpack://ej2-vue-samples/./node_modules/@syncfusion/ej2-maps/src/maps/layers/marker.js?");

/***/ })

}]);