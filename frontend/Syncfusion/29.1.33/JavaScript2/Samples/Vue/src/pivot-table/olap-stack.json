{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n  <div>\n    <div class=\"control-section\" id=\"pivot-grid-section\">\n      <div class=\"content-wrapper\">\n        <ejs-pivotview\n          id=\"pivotview\"\n          ref=\"pivotview\"\n          :dataSourceSettings=\"dataSourceSettings\"\n          :gridSettings=\"gridSettings\"\n          :width=\"width\"\n          :height=\"height\"\n          :enableValueSorting=\"enableValueSorting\"\n          :allowExcelExport=\"allowExcelExport\"\n          :allowConditionalFormatting=\"allowConditionalFormatting\"\n          :allowPdfExport=\"allowPdfExport\"\n          :showToolbar=\"showToolbar\"\n          :allowCalculatedField=\"allowCalculatedField\"\n          :showFieldList=\"showFieldList\"\n          :showGroupingBar=\"showGroupingBar\"\n          :toolbar=\"toolbar\"\n          :enableFieldSearching=\"enableFieldSearching\"\n          :saveReport=\"saveReport\"\n          :loadReport=\"loadReport\"\n          :fetchReport=\"fetchReport\"\n          :renameReport=\"renameReport\"\n          :removeReport=\"removeReport\"\n          :newReport=\"newReport\"\n          :toolbarRender=\"beforeToolbarRender\"\n          :displayOption=\"displayOption\"\n          :chartSettings=\"chartSettings\"\n        ></ejs-pivotview>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ChartTheme, ILoadedEventArgs } from \"@syncfusion/ej2-vue-charts\";\nimport {\n  PivotViewComponent,\n  GroupingBar,\n  FieldList,\n  IDataSet,\n  CalculatedField,\n  Toolbar,\n  PDFExport,\n  ExcelExport,\n  ConditionalFormatting\n} from \"@syncfusion/ej2-vue-pivotview\";\nimport { extend, enableRipple } from \"@syncfusion/ej2-base\";\nenableRipple(false);\n\n/* tslint:disable */\ndeclare var require: any;\nlet selectedTheme = location.hash.split(\"/\")[1];\nselectedTheme = selectedTheme ? selectedTheme : \"Material\";\nlet theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\");\n\nexport default {\n  components: {\n    'ejs-pivotview': PivotViewComponent\n  },\n  data: () => {\n    return {\n      dataSourceSettings: {\n        catalog: \"Adventure Works DW 2008 SE\",\n        cube: \"Adventure Works\",\n        providerType: \"SSAS\",\n        url: \"https://bi.syncfusion.com/olap/msmdpump.dll\",\n        enableSorting: true,\n        rows: [\n          {\n            name: \"[Customer].[Customer Geography]\",\n            caption: \"Customer Geography\"\n          }\n        ],\n        columns: [\n          {\n            name: \"[Product].[Product Categories]\",\n            caption: \"Product Categories\"\n          },\n          { name: \"[Measures]\", caption: \"Measures\" }\n        ],\n        values: [\n          { name: \"[Measures].[Customer Count]\", caption: \"Customer Count\" },\n          {\n            name: \"[Measures].[Internet Sales Amount]\",\n            caption: \"Internet Sales Amount\"\n          }\n        ],\n        filters: [{ name: \"[Date].[Fiscal]\", caption: \"Date Fiscal\" }]\n      },\n      width: \"100%\",\n      height: 500,\n      gridSettings: { columnWidth: 160 },\n      allowExcelExport: true,\n      allowConditionalFormatting: true,\n      enableFieldSearching: true,\n      allowPdfExport: true,\n      enableValueSorting: true,\n      displayOption: { view: \"Both\" },\n      showToolbar: true,\n      allowCalculatedField: true,\n      showFieldList: true,\n      showGroupingBar: true,\n      chartSettings: {\n         title: \"Sales Analysis\",\n         theme: theme,\n        load: (args: ILoadedEventArgs) => {\n          let selectedTheme: string = location.hash.split(\"/\")[1];\n          selectedTheme = selectedTheme ? selectedTheme : \"Material\";\n          args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast') as ChartTheme;\n        }\n      },\n      toolbar: [\n        \"New\",\n        \"Save\",\n        \"SaveAs\",\n        \"Rename\",\n        \"Remove\",\n        \"Load\",\n        \"Grid\",\n        \"Chart\",\n        \"MDX\",\n        \"Export\",\n        \"SubTotal\",\n        \"GrandTotal\",\n        \"ConditionalFormatting\",\n        \"FieldList\"\n      ]\n    };\n  },\n  methods: {\n    fetchReport: function(args: any) {\n      let reportsCollection = [];\n      let reeportList: any = [];\n      if (\n        localStorage.pivotviewReports &&\n        localStorage.pivotviewReports !== \"\"\n      ) {\n        reportsCollection = JSON.parse(localStorage.pivotviewReports);\n      }\n      reportsCollection.map(function(item: any) {\n        reeportList.push(item.reportName);\n      });\n      args.reportName = reeportList;\n    },\n    newReport: function() {\n      let pivotObject = ((this as any).$refs.pivotview).ej2Instances;\n      pivotObject.setProperties(\n        {\n          dataSourceSettings: {\n            columns: [],\n            rows: [],\n            values: [],\n            filters: []\n          }\n        },\n        false\n      );\n    },\n    loadReport: function(args: any) {\n      let pivotObject = ((this as any).$refs.pivotview).ej2Instances;\n      let reportsCollection = [];\n      if (\n        localStorage.pivotviewReports &&\n        localStorage.pivotviewReports !== \"\"\n      ) {\n        reportsCollection = JSON.parse(localStorage.pivotviewReports);\n      }\n      reportsCollection.map(function(item: any) {\n        if (args.reportName === item.reportName) {\n          args.report = item.report;\n        }\n      });\n      if (args.report) {\n        pivotObject.dataSourceSettings = JSON.parse(\n          args.report\n        ).dataSourceSettings;\n      }\n    },\n    renameReport: function(args: any) {\n      let reportsCollection = [];\n      if (\n        localStorage.pivotviewReports &&\n        localStorage.pivotviewReports !== \"\"\n      ) {\n        reportsCollection = JSON.parse(localStorage.pivotviewReports);\n      }\n      if (args.isReportExists) {\n        for (let i = 0; i < reportsCollection.length; i++) {\n          if (reportsCollection[i].reportName === args.rename) {\n            reportsCollection.splice(i, 1);\n          }\n        }\n      }\n      reportsCollection.map(function(item: any) {\n        if (args.reportName === item.reportName) {\n          item.reportName = args.rename;\n        }\n      });\n      if (\n        localStorage.pivotviewReports &&\n        localStorage.pivotviewReports !== \"\"\n      ) {\n        localStorage.pivotviewReports = JSON.stringify(reportsCollection);\n      }\n    },\n    removeReport: function(args: any) {\n      let reportsCollection = [];\n      if (\n        localStorage.pivotviewReports &&\n        localStorage.pivotviewReports !== \"\"\n      ) {\n        reportsCollection = JSON.parse(localStorage.pivotviewReports);\n      }\n      for (let i = 0; i < reportsCollection.length; i++) {\n        if (reportsCollection[i].reportName === args.reportName) {\n          reportsCollection.splice(i, 1);\n        }\n      }\n      if (\n        localStorage.pivotviewReports &&\n        localStorage.pivotviewReports !== \"\"\n      ) {\n        localStorage.pivotviewReports = JSON.stringify(reportsCollection);\n      }\n    },\n    beforeToolbarRender: function(args: any) {\n      args.customToolbar.splice(6, 0, {\n        type: \"Separator\"\n      });\n      args.customToolbar.splice(9, 0, {\n        type: \"Separator\"\n      });\n    },\n    saveReport: function(args: any) {\n      let report = [];\n      let isSave = false;\n      if (\n        localStorage.pivotviewReports &&\n        localStorage.pivotviewReports !== \"\"\n      ) {\n        report = JSON.parse(localStorage.pivotviewReports);\n      }\n      if (args.report && args.reportName && args.reportName !== \"\") {\n        report.map(function(item: any) {\n          if (args.reportName === item.reportName) {\n            item.report = args.report;\n            isSave = true;\n          }\n        });\n        if (!isSave) {\n          report.push(args);\n        }\n        localStorage.pivotviewReports = JSON.stringify(report);\n      }\n    }\n  },\n  provide: {\n    pivotview: [\n      FieldList,\n      CalculatedField,\n      Toolbar,\n      PDFExport,\n      ExcelExport,\n      ConditionalFormatting,\n      GroupingBar\n    ]\n  }\n}\n</script>\n\n<style scoped>\n/deep/ #PivotView_PivotFieldList {\n  width: auto !important;\n}\n\n/deep/ #pivotview {\n  width: 100%;\n}\n\n@media only screen and (max-width: 400px) {\n  #pivot-grid-section {\n    overflow: auto;\n  }\n}\n/deep/ #pivotviewcontainerwrapper {\n  height: auto !important;\n}\n/deep/ .e-pivotview .e-pivotchart-type-dialog {\n       max-width: 380px !important;\n       max-height: 380px !important;\n    }\n</style>","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-vue-pivotview\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-vue-maps\":\"*\",\"@syncfusion/ej2-vue-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-vue-grids\":\"*\",\"@syncfusion/ej2-vue-schedule\":\"*\",\"@syncfusion/ej2-vue-richtexteditor\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-vue-navigations\":\"*\",\"@syncfusion/ej2-vue-documenteditor\":\"*\",\"@syncfusion/ej2-vue-splitbuttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-vue-pdfviewer\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}