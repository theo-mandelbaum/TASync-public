{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<div class=\"control-sections\" style=\"overflow:hidden;\">\n<div class=\"col-lg-8 control-section inplace-control-section default_layout\">\n    <div class=\"control_wrapper\">\n        <table>\n            <tr>\n                <td>\n                    <label class=\"control-label\" style=\"text-align: left;font-size: 14px;font-weight: 400\">\n                    TextBox </label>\n                </td>\n                <td>\n                    <ejs-inplaceeditor ref=\"editObj\" id=\"inplace_editor\" mode=\"Inline\" type=\"Text\" value=\"Andrew\" submitOnEnter= \"true\" :model=\"textModel\" :popupSettings= \"textPopupSettings\">\n                    </ejs-inplaceeditor>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label class=\"control-label\" style=\"text-align: left;font-size: 14px;font-weight: 400\">\n                    NumericTextBox </label>\n                </td>\n                <td>\n                    <ejs-inplaceeditor ref=\"numericObj\" id=\"numericTextBoxEle\" mode=\"Inline\" type=\"Numeric\" value=\"$100.00\" :model=\"numericTextBoxModel\">\n                    </ejs-inplaceeditor>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label class=\"control-label\" style=\"text-align: left;font-size: 14px;font-weight: 400\">\n                    MaskedTextBox </label>\n                </td>\n                <td>\n                    <ejs-inplaceeditor ref=\"maskedObj\" id=\"maskedTextBoxEle\" mode=\"Inline\" type=\"Mask\" value=\"012-345-6789\" :model=\"maskedTextBoxModel\" :created='created'>\n                    </ejs-inplaceeditor>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\" id=\"defaultProperty\">\n    <table id=\"property\" title=\"Properties\">\n        <tr>\n            <td>\n                <div>Mode</div>\n            </td>\n            <td>\n                <div>\n                    <ejs-dropdownlist ref=\"editorMode\" id=\"editorMode\" class=\"form-control\" width='90%' :dataSource='dataPlace' :change='changeEditorMode' :value='dataValue' :fields='placeFields'>\n                    </ejs-dropdownlist>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <div>Editable On</div>\n            </td>\n            <td>\n                <div>\n                    <ejs-dropdownlist ref=\"editableOn\" id=\"editableon\" class=\"form-control\" width='90%' :dataSource='editableData' :change='onEditableOn' :value='editableValue' :fields='editableFields'>\n                    </ejs-dropdownlist>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <div>Show Buttons</div>\n            </td>\n            <td>\n                <div>\n                    <ejs-checkbox ref=\"checkObj1\" id=\"showbuttons\" checked=true :change=\"onChange\" :labelPosition=\"labelPosition\"></ejs-checkbox>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <div>Disable</div>\n            </td>\n            <td>\n                <div>\n                    <ejs-checkbox ref=\"checkObj2\" id=\"editorEnable\" :change=\"onChangeEnable\" :labelPosition=\"labelPosition\"></ejs-checkbox>\n                </div>\n            </td>\n        </tr>\n    </table>\n</div>\n</div>\n</template>\n<script>\n\nimport { InPlaceEditorComponent } from \"@syncfusion/ej2-vue-inplace-editor\";\nimport { CheckBoxComponent } from \"@syncfusion/ej2-vue-buttons\";\nimport { DropDownListComponent } from \"@syncfusion/ej2-vue-dropdowns\";\n\nexport default {\n  components: {\n    'ejs-inplaceeditor': InPlaceEditorComponent,\n    'ejs-checkbox': CheckBoxComponent,\n    'ejs-dropdownlist': DropDownListComponent\n  },\n  data: () => {\n    return {\n        textModel: {\n            placeholder: 'Enter employee name'\n        },\n        textPopupSettings: {\n            title: 'Enter Employee Name'\n        },\n        numericTextBoxModel: {\n            format: 'c2',\n            value: 100,\n            placeholder: 'Currency format'\n        },\n        maskedTextBoxModel: {\n            mask: '000-000-0000'\n        },\n        placeFields: { text: 'mode', value: 'value' },\n        dataPlace: [{ value: 'inline', mode: 'Inline' }, { value: 'popup', mode: 'Popup' }],\n        dataValue: 'inline',\n        editableFields: { text: 'editable', value: 'id' },\n        editableData: [{ id: 'Click', editable: 'Click' }, { id: 'DblClick', editable: 'Double Click' }, { id: 'EditIconClick', editable: 'Edit Icon Click' }],\n        editableValue: 'Click',\n        labelPosition: 'Before'\n    };\n  },\n  mounted: function(){\n    this.editObj = this.$refs.editObj.ej2Instances;\n    this.numericObj = this.$refs.numericObj.ej2Instances;\n    this.maskedObj = this.$refs.maskedObj.ej2Instances;\n    this.editorMode = this.$refs.editorMode.ej2Instances;\n  },\n  methods: {\n        changeEditorMode: function() {\n           var editMode = this.$refs.editorMode.ej2Instances.text;\n           this.editObj.mode = this.numericObj.mode = this.maskedObj.mode = editMode;\n        },\n        onEditableOn: function() {\n           var editableOn = this.$refs.editableOn.ej2Instances.value;\n           this.editObj.editableOn = this.numericObj.editableOn = this.maskedObj.editableOn = editableOn;\n        },\n        onChange: function() {            \n            this.$refs.checkObj1.ej2Instances.checked ? this.editObj.showButtons = this.numericObj.showButtons = this.maskedObj.showButtons = true : this.editObj.showButtons = this.numericObj.showButtons = this.maskedObj.showButtons = false;\n        },\n        onChangeEnable: function() {            \n            this.$refs.checkObj2.ej2Instances.checked ? this.editObj.disabled = this.numericObj.disabled = this.maskedObj.disabled = true : this.editObj.disabled = this.numericObj.disabled = this.maskedObj.disabled = false;\n        },\n        created: function() {\n            if (document.getElementById(\"right-pane\")) {\n                document.getElementById(\"right-pane\").addEventListener(\"scroll\", this.onScroll);\n            }\n        },\n        onScroll: function() {\n            if (this.editorMode.text === 'Inline') { return; }\n            if (this.$refs.editObj && this.$refs.editObj.$el.querySelectorAll('.e-editable-open').length > 0) {\n                this.editObj.enableEditMode = false;\n            }\n            if (this.$refs.numericObj && this.$refs.numericObj.$el.querySelectorAll('.e-editable-open').length > 0) {\n                this.numericObj.enableEditMode = false;\n            }\n            if (this.$refs.maskedObj && this.$refs.maskedObj.$el.querySelectorAll('.e-editable-open').length > 0) {\n                this.maskedObj.enableEditMode = false;\n            }\n        }\n    },\n}\n</script>\n<style scoped>\n\n.e-inplaceeditor-tip .e-editable-component .e-input-group .e-clear-icon.e-clear-icon-hide,\n.inplace-control-section.default_layout .e-inplaceeditor .e-editable-component .e-clear-icon-hide {\ndisplay: block;\nvisibility: hidden;\n}\n\n/* custom code start */\n.inplace-control-section.default_layout .control_wrapper {\n    width: 100%;\n    max-width: 400px;\n    margin: auto;\n    border: none;\n}\n\n.inplace-control-section.default_layout .control-wrapper {\n    width: 100%;\n}\n\n.inplace-control-section.default_layout .control_wrapper table td {\n    width: 200px;\n    height: 100px;\n}\n/* custom code end */\n\n.inplace-control-section.default_layout .control_wrapper .control-center {\n    text-align: center;\n}\n\n.inplace-control-section.default_layout .control_wrapper table {\n    margin: auto;\n}\n\n.inplace-control-section.default_layout .e-inplaceeditor {\n    height: auto;\n}\n\n#defaultProperty table td {\n    width: 50%;\n}\n\n@media (max-width: 1200px) {\n    .inplace-control-section.default_layout  {\n        width: 100%;\n    }\n}\n\n@media (max-width: 768px) {\n    .inplace-control-section .control_wrapper table tr td:nth-child(1) {\n        width: 130px;\n    }\n\n    .inplace-control-section .control_wrapper table tr td:nth-child(2) {\n        width: 200px;\n    }\n}\n\n#defaultProperty .property-panel-table div {\n    padding-left: 10px;\n    padding-top: 10px;\n}\n\n</style>","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-inplace-editor\":\"*\",\"@syncfusion/ej2-vue-inplace-editor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-vue-maps\":\"*\",\"@syncfusion/ej2-vue-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-vue-grids\":\"*\",\"@syncfusion/ej2-vue-schedule\":\"*\",\"@syncfusion/ej2-vue-richtexteditor\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-vue-navigations\":\"*\",\"@syncfusion/ej2-vue-documenteditor\":\"*\",\"@syncfusion/ej2-vue-splitbuttons\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}