{"src/customizationdata.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.data2 = exports.data = void 0;\n// tslint:disable\nexports.data = [\n    { x: 0, xval: 'AUDI', yval: 1 },\n    { x: 1, xval: 'BMW', yval: 5 },\n    { x: 2, xval: 'BUICK', yval: -1 },\n    { x: 3, xval: 'CETROEN', yval: -6 },\n    { x: 4, xval: 'CHEVROLET', yval: 0 },\n    { x: 5, xval: 'FIAT', yval: 1 },\n    { x: 6, xval: 'FORD', yval: -2 },\n    { x: 7, xval: 'HONDA', yval: 7 },\n    { x: 8, xval: 'HYUNDAI', yval: -9 },\n    { x: 9, xval: 'JEEP', yval: 0 },\n    { x: 10, xval: 'KIA', yval: -10 },\n    { x: 11, xval: 'MAZDA', yval: 3 },\n    { x: 12, xval: 'MERCEDES', yval: 13 },\n    { x: 13, xval: 'NISSAN', yval: 5 },\n    { x: 14, xval: 'OPEL/VHALL', yval: -6 },\n    { x: 15, xval: 'PEUGEOT', yval: 0 },\n    { x: 16, xval: 'RENAULT', yval: 7 },\n    { x: 17, xval: 'SKODA', yval: 5 },\n    { x: 18, xval: 'SUBARU', yval: 5 },\n    { x: 19, xval: 'SUZUKI', yval: 11 },\n    { x: 20, xval: 'TOYOTA', yval: 5 },\n    { x: 21, xval: 'VOLKSWAGEN', yval: 3 }\n];\nexports.data2 = [\n    { x: 0, xval: 'AUDI', yval: 1847613 },\n    { x: 1, xval: 'BMW', yval: 2030331 },\n    { x: 2, xval: 'BUICK', yval: 1465823 },\n    { x: 3, xval: 'CETROEN', yval: 999888 },\n    { x: 4, xval: 'CHEVROLET', yval: 3857388 },\n    { x: 5, xval: 'FIAT', yval: 1503806 },\n    { x: 6, xval: 'FORD', yval: 5953122 },\n    { x: 7, xval: 'HONDA', yval: 4967689 },\n    { x: 8, xval: 'HYUNDAI', yval: 3951176 },\n    { x: 9, xval: 'JEEP', yval: 1390130 },\n    { x: 10, xval: 'KIA', yval: 2511293 },\n    { x: 11, xval: 'MAZDA', yval: 1495557 },\n    { x: 12, xval: 'MERCEDES', yval: 2834181 },\n    { x: 13, xval: 'NISSAN', yval: 4834694 },\n    { x: 14, xval: 'OPEL/VHALL', yval: 996559 },\n    { x: 15, xval: 'PEUGEOT', yval: 1590300 },\n    { x: 16, xval: 'RENAULT', yval: 2275227 },\n    { x: 17, xval: 'SKODA', yval: 1180672 },\n    { x: 18, xval: 'SUBARU', yval: 1050390 },\n    { x: 19, xval: 'SUZUKI', yval: 2891415 },\n    { x: 20, xval: 'TOYOTA', yval: 7843423 },\n    { x: 21, xval: 'VOLKSWAGEN', yval: 6639250 }\n];\n","src/theme-color.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadSparkLineTheme = void 0;\nvar loadSparkLineTheme = function (args) {\n    var selectedTheme = location.hash.split(\"/\")[1];\n    selectedTheme = selectedTheme ? selectedTheme : \"Tailwind3\";\n    var theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1))\n        .replace(/-dark/i, \"Dark\")\n        .replace(/light/i, \"Light\")\n        .replace(/contrast/i, \"Contrast\")\n        .replace(/-highContrast/i, \"HighContrast\");\n    if (args) {\n        args.sparkline.theme = theme;\n    }\n    return theme;\n};\nexports.loadSparkLineTheme = loadSparkLineTheme;\n","public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <link href=\"https://ej2.syncfusion.com/vue/demos/lib/codemirror.css\" rel=\"stylesheet\" />\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/codemirror.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/css/css.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/xml/xml.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/htmlmixed/htmlmixed.js\" type=\"text/javascript\"></script>\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<div id=\"sprkline-custom-sample\">\n<div class=\"col-lg-8 control-section\">\n    <div id=\"spark-container\" class=\"row\">\n        <div class=\"cols-sample-area\" align=\"center\">\n            <p>\n                <div style=\"font-size: 16px;\">Worldwide car sales by brand - 2017</div>\n            </p>\n            <table style=\"width:100%;\">\n                <tr>\n                <td align=\"center\" style=\"width: 30%;\">Sales Percentage</td>\n                    <td style=\"width: 30%;\">\n                        <ejs-sparkline ref=\"percentage\" id='percentage' :load='load' style=\"width:200px; height:200px\" :height='height' :width='width' :lineWidth='lineWidth' :type='type' :valueType='valueType' :dataSource='dataSource' :tooltipSettings='tooltipSettings' :axisSettings='axisSettings' :markerSettings='markerSettings' xName='xval' yName='yval'></ejs-sparkline>                        \n                    </td>\n                </tr>\n                <tr>\n                  <td align=\"center\" style=\"width: 30%;\">Sales Count</td>\n                    <td style=\"width: 30%;\">\n                        <ejs-sparkline ref=\"sales\" id='sales' :load='load' style=\"width:200px; height:200px\" :height='height' :width='width' :lineWidth='lineWidth' :type='type' :valueType='valueType' :dataSource='dataSource2' :tooltipSettings='tooltipSettings2' :axisSettings='axisSettings2' :markerSettings='markerSettings2' xName='xval' yName='yval'></ejs-sparkline>                        \n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n    <div style=\"float: right; margin-right: 10px;\">Source:\n    <a href=\" http://carsalesbase.com/global-car-sales-2017\" target=\"_blank\" aria-label=\"Navigate to the documentation for car sales base\">carsalesbase.com</a>\n</div>\n</div>\n\n<div class=\"col-lg-4 property-section\">\n    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>\n    <table id=\"property\" style=\"width:100%\" title=\"Properties\">\n        <tbody>\n            <tr style=\"height: 30px\">\n                <td class=\"property-text\" style=\"width: 50%\">\n                    Sparkline\n                </td>\n                <td style=\"width: 50%\">\n                    <ejs-dropdownlist ref=\"spark\" id='spark' style=\"width: 100%;\" :dataSource='sparkdata' :fields='sparkfields' value='salespercentage' index=0  :change='changeSpark'></ejs-dropdownlist>        \n                </td>\n            </tr>\n            <tr style=\"height: 30px\">\n                <td style=\"width: 50%\">\n                    Special Points\n                </td>\n                <td style=\"width: 50%\">\n                    <table>\n                        <tr>\n                            <td>All</td>\n                            <td>\n                                <ejs-checkbox ref=\"all\" checked=\"true\" id=\"all\" :change='changeAll'></ejs-checkbox>\n                            </td>\n                            <td style=\"padding: 5px;\">Negative</td>\n                            <td>\n                                <ejs-checkbox ref=\"negative\" :disabled='disabled' id=\"negative\" :change='changeNegative'></ejs-checkbox>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style=\"padding: 5px;\">First</td>\n                            <td>\n                                <ejs-checkbox ref=\"first\" :disabled='disabled' id=\"first\" :change='changeNegative'></ejs-checkbox>\n                            </td>\n                            <td style=\"padding: 5px;\">Last</td>\n                            <td>\n                                 <ejs-checkbox ref=\"last\" :disabled='disabled' id=\"last\" :change='changeNegative'></ejs-checkbox>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style=\"padding: 5px;\">High</td>\n                            <td>\n                                 <ejs-checkbox ref=\"high\" :disabled='disabled' id=\"high\" :change='changeNegative'></ejs-checkbox>\n                            </td>\n                           <td style=\"padding: 5px;\">Low</td>\n                            <td>\n                                 <ejs-checkbox ref=\"low\" :disabled='disabled' id=\"low\" :change='changeNegative'></ejs-checkbox>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            <tr style=\"height: 30px\">\n                <td style=\"width: 50%\">\n                    Marker\n                </td>\n                <td style=\"width: 50%\">\n                    <ejs-checkbox id=\"marker\" ref=\"marker\" name=\"marker\" :change='changeMarker'></ejs-checkbox>\n                </td>\n            </tr>\n            <tr style=\"height: 30px\">\n                <td style=\"width: 50%\">\n                    Data Label\n                </td>\n                <td style=\"width: 50%\">\n                    <ejs-checkbox  id=\"datalabel\" ref=\"datalabel\" name=\"datalabel\" :change='changeDatalabel'></ejs-checkbox>\n                </td>\n            </tr>\n            <tr style=\"height: 30px\">\n                <td style=\"width: 50%\">\n                    Enable RTL\n                </td>\n                <td style=\"width: 50%\">\n                    <ejs-checkbox id=\"enableRTL\" name=\"enableRTL\" ref=\"rtl\" :change='changeEnableRtl'></ejs-checkbox>\n                </td>\n            </tr>\n            <tr style=\"height: 30px\">\n                <td style=\"width: 50%\">\n                    Tooltip\n                </td>\n                <td style=\"width: 50%\">\n                    <ejs-checkbox id=\"tooltip\" name=\"tooltip\" ref=\"tooltip\" :change='changeTooltip'></ejs-checkbox>\n                </td>\n            </tr>\n            <tr style=\"height: 30px\">\n                <td style=\"width: 50%\">\n                    Track Line\n                </td>\n                <td style=\"width: 50%\">\n                    <ejs-checkbox name=\"trackline\" id=\"trackline\" ref=\"trackline\" :change='changeTrackline'></ejs-checkbox>\n                </td>\n            </tr>\n            <tr style=\"height: 30px\">\n                <td style=\"width: 50%\">\n                    Axis Line\n                </td>\n                <td style=\"width: 50%\">\n                    <ejs-checkbox id=\"axis1\" name=\"axis\" ref=\"axisline\" :change='changeAxis'></ejs-checkbox>\n                </td>\n            </tr>\n            <tr>\n                <td id='axisval'>\n                    Axis Value<span>&nbsp;&nbsp;&nbsp;0</span>\n                </td>\n                <td>\n                    <div>\n                        <ejs-slider id='axis' ref=\"axisval\" :value='value' :type='rangetype' :change='changeAxisrange' max=100 min=0 ></ejs-slider>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n</div>\n</template>\n<style>\n    #sprkline-custom-sample .property-text {\n        font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\" !important;\n        font-size: 13px !important;\n        font-weight: 400 !important;\n    }\n    #sprkline-custom-sample #axis > * {\n        padding: 0px !important;\n    }\n</style>\n<script>\nimport { SparklineComponent,SparklineTooltip } from \"@syncfusion/ej2-vue-charts\";\nimport { CheckBoxComponent } from \"@syncfusion/ej2-vue-buttons\";\nimport { SliderComponent } from \"@syncfusion/ej2-vue-inputs\";\nimport { DropDownListComponent } from '@syncfusion/ej2-vue-dropdowns';\nimport { data, data2 } from \"./customizationdata\";\nimport { loadSparkLineTheme } from \"./theme-color\";\nexport default {\ncomponents: {\n    'ejs-sparkline': SparklineComponent,\n    'ejs-checkbox': CheckBoxComponent,\n    'ejs-dropdownlist': DropDownListComponent,\n    'ejs-slider': SliderComponent\n},\ndata:function(){\nreturn{\n        height: '200px',\n        width: '180px',\n        lineWidth: 1,\n        type: 'Column',\n        valueType: 'Category',\n        dataSource: data,\n        axisSettings: {\n            lineSettings: {\n                color: 'red',\n                width: 2\n            }\n        },\n        markerSettings: {\n            fill: 'red',\n            size: 5\n        },\n        tooltipSettings: {\n            format: '${xval}: ${yval}',\n            trackLineSettings: {\n                color: 'red',\n                width: 1\n            }\n        },\n        dataSource2: data2,\n        axisSettings2: {\n            lineSettings: {\n                color: 'red',\n                width: 2\n            }\n        },\n        markerSettings2: {\n            fill: 'red',\n            size: 5\n        },\n        tooltipSettings2: {\n            format: '${xval}: ${yval}',\n            trackLineSettings: {\n                color: 'red',\n                width: 1\n            }\n        },\n    sparkdata:[\n        { Id:'salespercentage', level:'Sales Percentage'},\n        { Id:'salescount', level:'Sales Count'}],\n    sparkfields: { text: 'level', value: 'Id' },\n    value:0,\n    rangetype: 'MinRange',\n    disabled:true\n}\n},\nmounted(){\n    this.start();    \n    this.changeSpark();\n},\nmethods:{\n    /* custom code start */\n    load:function(args){\n           loadSparkLineTheme(args);\n    },\n    /* custom code end */\n    // Code for Property Panel\n    start: function(){\n        if (this.$refs.spark.ej2Instances.value === 'salespercentage') {\n            this.$refs.axisval.ej2Instances.min = 0;\n            this.$refs.axisval.ej2Instances.max = 10;\n        } else {\n            this.$refs.axisval.ej2Instances.min = 0;\n            this.$refs.axisval.ej2Instances.max = 5000000;\n        }\n    },\n    changeSpark:function(args){\n        let element1 = (document.getElementById('spark'));\n        if (this.$refs.spark.ej2Instances.value === 'salespercentage') {\n            this.$refs.axisval.ej2Instances.min = 0;\n            this.$refs.axisval.ej2Instances.max = 10;\n        } else {\n            this.$refs.axisval.ej2Instances.min = 0;\n            this.$refs.axisval.ej2Instances.max = 5000000;\n        }\n        if ((this.$refs.spark.ej2Instances.value === 'salespercentage' && this.$refs.percentage.ej2Instances.markerSettings.visible.length) ||\n            (this.$refs.spark.ej2Instances.value === 'salescount' && this.$refs.sales.ej2Instances.markerSettings.visible.length)) {\n            this.$refs.marker.ej2Instances.checked = true;\n        } else {\n            this.$refs.marker.ej2Instances.checked = false;\n        }\n        document.getElementById('marker').onchange = (e) => {\n            let boolean = (event.target).checked;\n            let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances;\n            if (boolean) {\n                spark.markerSettings.visible = this.getVisible();\n            } else {\n                spark.markerSettings.visible = [];\n            }\n            spark.refresh();\n        };\n        if ((this.$refs.spark.ej2Instances.value === 'salespercentage' && this.$refs.percentage.ej2Instances.dataLabelSettings.visible.length) ||\n            (this.$refs.spark.ej2Instances.value === 'salescount' && this.$refs.sales.ej2Instances.dataLabelSettings.visible.length)) {\n            this.$refs.datalabel.ej2Instances.checked = true;\n        } else {\n            this.$refs.datalabel.ej2Instances.checked = false;\n        }\n        if ((this.$refs.spark.ej2Instances.value === 'salespercentage' && this.$refs.percentage.ej2Instances.enableRtl) ||\n            (this.$refs.spark.ej2Instances.value === 'salescount' && this.$refs.sales.ej2Instances.enableRtl)) {\n            this.$refs.rtl.ej2Instances.checked = true;\n        } else {\n            this.$refs.rtl.ej2Instances.checked = false;\n        }\n        document.getElementById('enableRTL').onchange = (e) => {\n            let boolean = (event.target).checked;\n            let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances;\n            if (boolean) {\n                spark.enableRtl = true;\n            } else {\n                spark.enableRtl = false;\n            }\n            spark.refresh();\n        };\n        \n        let all = this.$refs.all.ej2Instances;\n        let negative = this.$refs.negative.ej2Instances;\n        let first = this.$refs.first.ej2Instances;\n        let last = this.$refs.last.ej2Instances;\n        let high = this.$refs.high.ej2Instances;\n        let low = this.$refs.low.ej2Instances;\n        let label = document.getElementById('datalabel');\n        let marker = document.getElementById('marker');\n        let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances ;\n        if (!this.$refs.marker.ej2Instances.checked && !this.$refs.datalabel.ej2Instances.checked) {\n            this.$refs.all.ej2Instances.checked = false;\n            this.$refs.negative.ej2Instances.checked = false;\n            this.$refs.first.ej2Instances.checked = false;\n            this.$refs.last.ej2Instances.checked = false;\n            this.$refs.high.ej2Instances.checked = false;\n            this.$refs.low.ej2Instances.checked = false;\n        }\n        if (this.$refs.marker.ej2Instances.checked) {\n            let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances;\n            this.$refs.all.ej2Instances.checked = spark.markerSettings.visible.indexOf('All') > -1;\n            this.$refs.negative.ej2Instances.checked = spark.markerSettings.visible.indexOf('Negative') > -1;\n            this.$refs.first.ej2Instances.checked = spark.markerSettings.visible.indexOf('Start') > -1;\n            this.$refs.last.ej2Instances.checked = spark.markerSettings.visible.indexOf('End') > -1;\n            this.$refs.high.ej2Instances.checked = spark.markerSettings.visible.indexOf('High') > -1;\n            this.$refs.low.ej2Instances.checked = spark.markerSettings.visible.indexOf('Low') > -1;\n        }\n        if (this.$refs.datalabel.ej2Instances.checked) {\n            let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances;\n            this.$refs.all.ej2Instances.checked = spark.dataLabelSettings.visible.indexOf('All') > -1;\n            this.$refs.negative.ej2Instances.checked = spark.dataLabelSettings.visible.indexOf('Negative') > -1;\n            this.$refs.first.ej2Instances.checked = spark.dataLabelSettings.visible.indexOf('Start') > -1;\n            this.$refs.last.ej2Instances.checked = spark.dataLabelSettings.visible.indexOf('End') > -1;\n            this.$refs.high.ej2Instances.checked = spark.dataLabelSettings.visible.indexOf('High') > -1;\n            this.$refs.low.ej2Instances.checked = spark.dataLabelSettings.visible.indexOf('Low') > -1;\n        }\n        document.getElementById('datalabel').onchange = (e) => {\n            let boolean = (event.target).checked;\n            let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances;\n            if (boolean) {\n                spark.dataLabelSettings.visible = this.getVisible();\n            } else {\n                spark.dataLabelSettings.visible = [];\n            }\n            spark.refresh();\n        };\n        if ((this.$refs.spark.ej2Instances.value === 'salespercentage' && this.$refs.percentage.ej2Instances.tooltipSettings.visible === true) ||\n            (this.$refs.spark.ej2Instances.value === 'salescount' && this.$refs.sales.ej2Instances.tooltipSettings.visible === true)) {\n            this.$refs.tooltip.ej2Instances.checked = true;\n        } else {\n            this.$refs.tooltip.ej2Instances.checked = false;\n        }\n        document.getElementById('tooltip').onchange = (e) => {\n            let boolean = (event.target).checked;\n            let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances;\n            if (boolean) {\n                spark.tooltipSettings.visible = true;\n            } else {\n                spark.tooltipSettings.visible = false;\n            }\n            spark.refresh();\n        };\n        if ((this.$refs.spark.ej2Instances.value === 'salespercentage' && this.$refs.percentage.ej2Instances.tooltipSettings.trackLineSettings.visible === true) ||\n            (this.$refs.spark.ej2Instances.value === 'salescount' && this.$refs.sales.ej2Instances.tooltipSettings.trackLineSettings.visible === true)) {\n            this.$refs.trackline.ej2Instances.checked = true;\n        } else {\n            this.$refs.trackline.ej2Instances.checked = false;\n        }\n        document.getElementById('trackline').onchange = (e) => {\n            let boolean = (event.target).checked;\n            let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances;\n            if (boolean) {\n                spark.tooltipSettings.trackLineSettings.visible = true;\n            } else {\n                spark.tooltipSettings.trackLineSettings.visible = false;\n            }\n            spark.refresh();\n        };\n        if ((this.$refs.spark.ej2Instances.value === 'salespercentage' && this.$refs.percentage.ej2Instances.axisSettings.lineSettings.visible === true) ||\n            (this.$refs.spark.ej2Instances.value === 'salescount' && this.$refs.sales.ej2Instances.axisSettings.lineSettings.visible === true)) {\n            this.$refs.axisline.ej2Instances.checked = true;\n        } else {\n            this.$refs.axisline.ej2Instances.checked = false;\n        }\n        document.getElementById('axis1').onchange = (e) => {\n            let boolean = (event.target).checked;\n            let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances;\n            if (boolean) {\n                spark.axisSettings.lineSettings.visible = true;\n            } else {\n                spark.axisSettings.lineSettings.visible = false;\n            }\n            spark.refresh();\n        };\n        if (this.$refs.spark.ej2Instances.value === 'salespercentage' && this.$refs.percentage.ej2Instances.axisSettings.value !== 0) {\n            this.$refs.axisval.ej2Instances.value =  this.$refs.percentage.ej2Instances.axisSettings.value;\n            this.$refs.axisval.ej2Instances.min = 0;\n            this.$refs.axisval.ej2Instances.max = 10;\n            document.getElementById('axisval').innerHTML = 'Axis value: <span> ' + this.$refs.percentage.ej2Instances.axisSettings.value;\n        }\n        if (this.$refs.spark.ej2Instances.value === 'salescount' && this.$refs.sales.ej2Instances.axisSettings.value !== 0) {\n            this.$refs.axisval.ej2Instances.value =  this.$refs.sales.ej2Instances.axisSettings.value;\n            this.$refs.axisval.ej2Instances.min = 0;\n            this.$refs.axisval.ej2Instances.max = 5000000;\n            document.getElementById('axisval').innerHTML = 'Axis value: <span> ' + this.$refs.sales.ej2Instances.axisSettings.value;\n        }\n        function changeAxisrange(e){\n                let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances;\n                spark.axisSettings.value = e.value;\n                document.getElementById('axisval').innerHTML = 'Axis value: <span> ' + e.value;\n                spark.refresh();\n        }\n        all.checked = !(negative.checked || high.checked || low.checked || first.checked || last.checked);\n        negative.disabled = high.disabled = low.disabled = first.disabled = last.disabled = all.checked;\n    },\n    changeAll:function(e){\n        let negative = this.$refs.negative.ej2Instances;\n        let first = this.$refs.first.ej2Instances;\n        let last = this.$refs.last.ej2Instances;\n        let high = this.$refs.high.ej2Instances;\n        let low = this.$refs.low.ej2Instances;\n        let checked = (event.target).checked;\n        negative.disabled = checked;\n        first.disabled = checked;\n        last.disabled = checked;\n        high.disabled = checked;\n        low.disabled = checked;\n        let marker = this.$refs.marker.ej2Instances;\n        let label =this.$refs.datalabel.ej2Instances;\n        let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances;\n        spark.markerSettings.visible = (checked && marker.checked) ? ['All'] : (marker.checked) ? this.getVisible() : [];\n        spark.dataLabelSettings.visible = (checked && label.checked) ? ['All'] : (label.checked) ? this.getVisible() : [];\n        spark.refresh();\n    },\n    changeNegative:function(e){\n        this.processMarkerLabel(e);\n    },\n    processMarkerLabel:function(e) {\n        let checked = (event.target).checked;\n        let marker = this.$refs.marker.ej2Instances;\n        let label =this.$refs.datalabel.ej2Instances;\n        let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances;\n        if (marker.checked) {\n            spark.markerSettings.visible = this.getVisible();\n            spark.refresh();\n        }\n        if (label.checked) {\n            spark.dataLabelSettings.visible = this.getVisible();\n            spark.refresh();\n        } \n    },\n    getVisible:function(){\n        let all = this.$refs.all.ej2Instances;\n        let negative = this.$refs.negative.ej2Instances;\n        let first = this.$refs.first.ej2Instances;\n        let last = this.$refs.last.ej2Instances;\n        let high = this.$refs.high.ej2Instances;\n        let low = this.$refs.low.ej2Instances;\n        let visible = [];\n        if (all.checked) { return ['All']; }\n        if (negative.checked) { visible.push('Negative'); }\n        if (first.checked) { visible.push('Start'); }\n        if (last.checked) { visible.push('End'); }\n        if (high.checked) { visible.push('High'); }\n        if (low.checked) { visible.push('Low'); }\n        return visible;\n    },\n    changeMarker:function(e){\n        let element = (document.getElementById('spark'));\n        let boolean = (event.target).checked;\n        let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances ;\n        if (boolean) {\n            spark.markerSettings.visible = this.getVisible();\n        } else {\n            spark.markerSettings.visible = [];\n        }\n        spark.refresh();\n    },\n    changeDatalabel:function(e){\n        let element = (document.getElementById('spark'));\n        let boolean = (event.target).checked;\n        let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances ;\n        if (boolean) {\n            spark.dataLabelSettings.visible = this.getVisible();\n        } else {\n            spark.dataLabelSettings.visible = [];\n        }\n        spark.refresh();\n    },\n    changeTooltip:function(e){\n        let element = (document.getElementById('spark'));\n        let boolean = (event.target).checked;\n        let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances ;\n        if (boolean) {\n            spark.tooltipSettings.visible = true;\n            spark.tooltipSettings.format = '${xval}: ${yval}';\n        } else {\n            spark.tooltipSettings.visible = false;\n        }\n        spark.refresh();\n    },\n    changeTrackline:function(e){\n        let element = (document.getElementById('spark'));\n        let boolean = (event.target).checked;\n        let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances ;\n        if (boolean) {\n            spark.tooltipSettings.trackLineSettings.visible = true;\n            spark.tooltipSettings.trackLineSettings.color = 'red';\n            spark.tooltipSettings.trackLineSettings.width = 1;\n        } else {\n            spark.tooltipSettings.trackLineSettings.visible = false;\n        }\n        spark.refresh();\n    },\n    changeEnableRtl:function(e){\n        let element = (document.getElementById('enableRTL'));\n        let boolean = (event.target).checked;\n        let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances ;\n        if (boolean) {\n            spark.enableRtl = true;\n        } else {\n           spark.enableRtl = false; \n        }\n        spark.refresh();\n    },\n    changeAxis:function(e){\n        let element = (document.getElementById('spark'));\n        let boolean = (event.target).checked;\n        let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances ;\n        if (boolean) {\n            spark.axisSettings.lineSettings.visible = true;\n            spark.axisSettings.lineSettings.color = 'red';\n            spark.axisSettings.lineSettings.width = 2;\n        } else {\n            spark.axisSettings.lineSettings.visible = false;\n        }\n        spark.refresh();\n    },\n    changeAxisrange:function(e){\n        let element = (document.getElementById('spark'));\n        let spark = this.$refs.spark.ej2Instances.value === 'salespercentage' ? this.$refs.percentage.ej2Instances : this.$refs.sales.ej2Instances ;\n        spark.axisSettings.value = e.value;\n            document.getElementById('axisval').innerHTML = 'Axis value: <span> ' + e.value;\n        spark.refresh();\n    }\n},\nprovide:{\n    sparkline:[SparklineTooltip]\n}\n}\n</script>\n","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-vue-maps\":\"*\",\"@syncfusion/ej2-vue-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-vue-grids\":\"*\",\"@syncfusion/ej2-vue-schedule\":\"*\",\"@syncfusion/ej2-vue-richtexteditor\":\"*\",\"@syncfusion/ej2-vue-navigations\":\"*\",\"@syncfusion/ej2-vue-documenteditor\":\"*\",\"@syncfusion/ej2-vue-splitbuttons\":\"*\",\"@syncfusion/ej2-vue-pdfviewer\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}