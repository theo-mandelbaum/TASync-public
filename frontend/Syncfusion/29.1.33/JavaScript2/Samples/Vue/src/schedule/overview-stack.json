{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <link href=\"https://ej2.syncfusion.com/vue/demos/lib/codemirror.css\" rel=\"stylesheet\" />\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/codemirror.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/css/css.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/xml/xml.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/htmlmixed/htmlmixed.js\" type=\"text/javascript\"></script>\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<div>\n<div class=\"col-lg-12 control-section\">\n    <div class=\"content-wrapper\">\n        <div class=\"schedule-overview\">\n            <ejs-appbar colorMode=\"Primary\">\n                <span class=\"time e-icons e-time-zone\"></span>\n                <span id=\"timezoneBtn\" class=\"time \">UTC</span>\n                <span class=\"time e-icons e-clock\"></span>\n                <span id=\"timeBtn\" class=\"time current-time\">{{liveTimeUpdate}}</span>\n                <div class=\"e-appbar-spacer\"></div>\n                <ejs-button id=\"printBtn\" cssClass=\"title-bar-btn e-inherit\"\n                    iconCss=\"e-icons e-print\" v-on:click=\"onPrint\">Print</ejs-button>\n                 <div class=\"control-panel import-button\">\n                    <ejs-uploader id='icalendar' cssClass='calendar-import' :multiple='multiple'\n                        :buttons='buttons' :showFileList='showFileList' allowedExtensions='.ics'\n                            :selected='onSelected'></ejs-uploader>\n                </div>\n                <div class=\"control-panel calendar-export\">\n                    <ejs-dropdownbutton id=\"exportBtn\" cssClass = 'e-inherit' :items='exportItems' :select=\"onExportItemSelect\">Export</ejs-dropdownbutton>\n                </div>\n                    <ejs-button id=\"settingsBtn\" iconCss=\"e-icons e-settings\"\n                        cssClass=\"overview-toolbar-settings e-inherit\" iconPosition=\"Top\"\n                        v-on:click.native=\"onSettingsClick\"></ejs-button>\n            </ejs-appbar>\n                    <ejs-toolbar id=\"toolbarOptions\" height=\"70px\" overflowMode=\"Scrollable\" scrollStep=\"100\"  cssClass= 'overview-toolbar'\n                        :created=\"onToolbarCreated\" :clicked=\"onToolbarItemClicked\">\n                        <e-items>\n                            <e-item prefixIcon='e-icons e-plus' tooltipText='New Event' text='New Event' tabindex=\"0\">\n                            </e-item>\n                            <e-item prefixIcon='e-icons e-repeat'\n                                tooltipText='New Recurring Event' text='New Recurring Event' tabindex=\"0\"></e-item>\n                            <e-item type='Separator'></e-item>\n                            <e-item prefixIcon='e-icons e-day' tooltipText='Day' text='Day' tabindex=\"0\"></e-item>\n                            <e-item prefixIcon='e-icons e-week' tooltipText='Week' text='Week' tabindex=\"0\"></e-item>\n                            <e-item prefixIcon='e-icons e-week' tooltipText='WorkWeek'\n                                text='WorkWeek' tabindex=\"0\"></e-item>\n                            <e-item prefixIcon='e-icons e-month' tooltipText='Month' text='Month' tabindex=\"0\">\n                            </e-item>\n                            <e-item prefixIcon='e-icons e-month' tooltipText='Year' text='Year' tabindex=\"0\"></e-item>\n                            <e-item prefixIcon='e-icons e-agenda-date-range' tooltipText='Agenda' text='Agenda' tabindex=\"0\">\n                            </e-item>\n                            <e-item tooltipText=\"Timeline Views\" :template=\"'timelineTemplate'\"></e-item>\n                            <template v-slot:timelineTemplate>\n                                <div class=\"template\">\n                                    <label>\n                                        <div class=\"icon-child\">\n                                            <ejs-checkbox id=\"timeline_views\" :checked=\"false\" :created=\"onTimelineCreated\" :change=\"onTimelineViewChange\"></ejs-checkbox>\n                                        </div>\n                                        <div class=\"text-child\">Timeline Views</div>\n                                    </label>\n                                </div>                                             \n                            </template>\n                            <e-item type='Separator'></e-item>\n                            <e-item tooltipText=\"Resource Grouping\" :template=\"'groupTemplate'\"></e-item>\n                            <template v-slot:groupTemplate>\n                                <div class=\"template\">\n                                    <label>\n                                        <div class=\"icon-child\">\n                                            <ejs-checkbox id=\"grouping\" :checked=\"true\" :created=\"onCreated\" :change=\"onGroupingChange\"></ejs-checkbox>\n                                        </div><div class=\"text-child\">Grouping</div>\n                                    </label>\n                                </div>                            \n                            </template>\n                            <e-item tooltipText=\"Time Slots\" :template=\"'gridlineTemplate'\"></e-item>\n                            <template v-slot:gridlineTemplate>\n                                <div class=\"template\">\n                                    <label>\n                                        <div class=\"icon-child\">\n                                            <ejs-checkbox id=\"timeSlot\" :checked=\"true\" :created=\"onTimeSlotCreated\" :change=\"onTimeSlotChange\"></ejs-checkbox>\n                                        </div>\n                                        <div class=\"text-child\">Time Slots</div>\n                                    </label>\n                                </div>                        \n                            </template>\n                            <e-item tooltipText=\"Auto Fit Rows\" :template=\"'autoHeightTemplate'\"></e-item>\n                            <template v-slot:autoHeightTemplate>\n                                <div class=\"template\">\n                                    <label>\n                                        <div class=\"icon-child\">\n                                            <ejs-checkbox id=\"row_auto_height\" :checked=\"false\" :created=\"onRowAutoHeightCreated\" :change=\"onRowAutoHeightChange\"></ejs-checkbox>\n                                        </div>\n                                        <div class=\"text-child\">Auto Fit Rows</div>\n                                    </label>\n                                </div>                        \n                            </template>\n                        </e-items>\n                    </ejs-toolbar>\n            <div class=\"overview-content\">\n                <div class=\"left-panel\">\n                    <div class=\"overview-scheduler\">\n                        <ejs-schedule id='scheduler' ref=\"scheduleObj\"  height=\"100%\" cssClass='schedule-overview' :currentView='currentView' timezone='UTC' :dateHeaderTemplate=\"dateHeaderTemplate\" :group='group' :eventSettings='eventSettings'>\n                            <e-views>\n                                <e-view option=\"Day\"></e-view>\n                                <e-view option=\"Week\"></e-view>\n                                <e-view option=\"WorkWeek\"></e-view>\n                                <e-view option=\"Month\"></e-view>\n                                <e-view option=\"Year\"></e-view>\n                                <e-view option=\"Agenda\"></e-view>\n                                <e-view option=\"TimelineDay\"></e-view>\n                                <e-view option=\"TimelineWeek\"></e-view>\n                                <e-view option=\"TimelineWorkWeek\"></e-view>\n                                <e-view option=\"TimelineMonth\"></e-view>\n                                <e-view option=\"TimelineYear\"></e-view>\n                            </e-views>\n                            <e-resources>\n                              <e-resource field=\"CalendarId\" title=\"Calendars\" :dataSource=\"resourceDataSource\" :query='resourceQuery' :allowMultiple=\"allowMultiple\" name=\"Calendars\"\n                              textField=\"CalendarText\" idField=\"CalendarId\" colorField='CalendarColor'>\n                              </e-resource>\n                            </e-resources>\n                         </ejs-schedule>\n                         <ejs-contextmenu id=\"overviewContextMenu\" ref=\"menuObj\" cssClass=\"schedule-context-menu\" target=\".e-schedule\" :items=\"menuItems\" :beforeOpen=\"onContextMenuBeforeOpen\" :select=\"onMenuItemSelect\" ></ejs-contextmenu>\n                    </div>\n                </div>\n                <div class=\"right-panel hide\">\n                    <div class=\"control-panel e-css\">\n                       <div class=\"col-row\">\n                            <div class=\"col-left\">\n                                <label style=\"line-height: 34px; margin: 0;\">Calendar</label>\n                            </div>\n                            <div class=\"col-right\">\n                                <ejs-multiselect id='resources' ref=\"resourcesObj\" cssClass=\"schedule-resource\" index=\"0\" :dataSource='resourceDataSource' \n                                    :mode='checkboxMode' :fields='calendarFields' enableSelectionOrder=\"false\" showClearButton=\"false\" showDropDownIcon=\"true\" \n                                    :value='calendarsValue' :change='onResourceChange'></ejs-multiselect>\n                            </div>\n                        </div>\n                        <div class=\"col-row\">\n                            <div class=\"col-left\">\n                                <label style=\"line-height: 34px; margin: 0;\">First Day of Week</label>\n                            </div>\n                            <div class=\"col-right\">\n                                <ejs-dropdownlist id='weekFirstDay' :dataSource='weekDays'\n                                    :change='onWeekDayChange' :value='firstDayOfWeek' :fields='fields'></ejs-dropdownlist>\n                            </div>\n                        </div>\n                        <div class=\"col-row\">\n                            <div class=\"col-left\">\n                                <label style=\"line-height: 34px; margin: 0;\">Work week</label>\n                            </div>\n                            <div class=\"col-right\">\n                                <ejs-multiselect id='workWeekDays' ref=\"workWeekDaysObj\" cssClass=\"schedule-workweek\" :dataSource='weekDays' enableSelectionOrder=\"false\" :showClearButton=\"false\"\n                                    showDropDownIcon=\"true\" :mode='checkboxMode' :fields='fields' :value='workDays'\n                                    :change='onWorkWeekDayChange'></ejs-multiselect>\n                            </div>\n                        </div>\n                         <div class=\"col-row\">\n                            <div class=\"col-left\">\n                                <label style=\"line-height: 34px; margin: 0;\">Timezone</label>\n                            </div>\n                            <div class=\"col-right\">\n                                <ejs-dropdownlist id='timezone' :dataSource='timezoneData'\n                                    :change='onTimezoneChange' value='Etc/GMT' :fields='fields'\n                                    popupHeight='150px'></ejs-dropdownlist>\n                            </div>\n                        </div>\n                        <div class=\"col-row\">\n                            <div class=\"col-left\">\n                                <label style=\"line-height: 34px; margin: 0;\">Day Start Hour</label>\n                            </div>\n                            <div class=\"col-right\">\n                                <ejs-timepicker id='dayStartHour' :showClearButton='false'\n                                    :value='dayStartHourValue' :change='onDayStartHourChange'>\n                                </ejs-timepicker>\n                            </div>\n                        </div>\n                        <div class=\"col-row\">\n                            <div class=\"col-left\">\n                                <label style=\"line-height: 34px; margin: 0;\">Day End Hour</label>\n                            </div>\n                            <div class=\"col-right\">\n                                <ejs-timepicker id='dayEndHour' :showClearButton='false'\n                                    :value='dayEndHourValue' :change='onDayEndHourChange'>\n                                </ejs-timepicker>\n                            </div>\n                        </div>\n                        <div class=\"col-row\">\n                            <div class=\"col-left\">\n                                <label style=\"line-height: 34px; margin: 0;\">Work Start Hour</label>\n                            </div>\n                            <div class=\"col-right\">\n                                <ejs-timepicker id='workHourStart' :showClearButton='false'\n                                    :value='workStartHourValue' :change='onWorkStartHourChange'>\n                                </ejs-timepicker>\n                            </div>\n                        </div>\n                        <div class=\"col-row\">\n                            <div class=\"col-left\">\n                                <label style=\"line-height: 34px; margin: 0;\">Work End Hour</label>\n                            </div>\n                            <div class=\"col-right\">\n                                <ejs-timepicker id='workHourEnd' :showClearButton='false'\n                                    :value='workEndHourValue' :change='onWorkEndHourChange'></ejs-timepicker>\n                            </div>\n                        </div>\n                        <div class=\"col-row\">\n                            <div class=\"col-left\">\n                                <label style=\"line-height: 34px; margin: 0;\">Slot Duration</label>\n                            </div>\n                            <div class=\"col-right\">\n                                <ejs-dropdownlist id='slotDuration' :dataSource='timeSlotDuration'\n                                    :change='onTimescaleDurationChange' :value='timeSlotDurationValue'\n                                    popupHeight='150px'></ejs-dropdownlist>\n                            </div>\n                        </div>\n                        <div class=\"col-row\">\n                            <div class=\"col-left\">\n                                <label style=\"line-height: 34px; margin: 0;\">Slot Interval</label>\n                            </div>\n                            <div class=\"col-right\">\n                                <ejs-dropdownlist id='slotInterval' :dataSource='timeSlotCount'\n                                    :change='onTimescaleIntervalChange' :value='timeSlotCountValue'\n                                    popupHeight='150px'></ejs-dropdownlist>\n                            </div>\n                        </div>\n                        <div class=\"col-row\">\n                            <div class=\"col-left\">\n                                <label style=\"line-height: 34px; margin: 0;\">Time Format</label>\n                            </div>\n                            <div class=\"col-right\">\n                                <ejs-dropdownlist id='timeFormat' :dataSource='timeFormatdata'\n                                    :change='onchangeTimeFormat' :value='timeFormatValue' :fields='fields'\n                                    popupHeight='150px'></ejs-dropdownlist>\n                            </div>\n                        </div>\n                        <div class=\"col-row\">\n                            <div class=\"col-left\">\n                                <label style=\"line-height: 34px; margin: 0;\">Week Numbers</label>\n                            </div>\n                            <div class=\"col-right\">\n                                <ejs-dropdownlist id='weekNumber' :dataSource='weekNumberData'\n                                    :change='onchangeWeekNumber' :fields='fields' :value='weekNumberValue'\n                                    popupHeight='150px'></ejs-dropdownlist>\n                            </div>\n                        </div>\n                        <div class=\"col-row\">\n                            <div class=\"col-left\">\n                                <label style=\"line-height: 34px; margin: 0;\">Tooltip</label>\n                            </div>\n                            <div class=\"col-right\">\n                                <ejs-dropdownlist id='tooltip' :dataSource='tooltipData'\n                                    :change='onTooltipChange' :fields='fields' :value='tooltipValue'\n                                    popupHeight='150px'></ejs-dropdownlist>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</div>\n</template>\n\n<style>\n\n    .tailwind .schedule-overview .overview-content .right-panel .control-panel,\n    .tailwind3 .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #f3f4f6;\n    }\n\n    .tailwind-dark .schedule-overview .overview-content .right-panel .control-panel,\n    .tailwind3-dark .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #374151;\n        color: #fff;\n    }\n\n    .material .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #fafafa;\n    }\n\n    .material-dark .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #2a2a2a;\n        color: #ffff;\n    }\n\n    .fabric .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #ffffff;\n    }\n\n    .fabric-dark .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #333232;\n        color: #fff;\n    }\n\n    .fluent .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #f3f2f1;\n    }\n\n    .fluent-dark .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #252423;\n        border-color: #c1c1c1;\n        color: #fff;\n    }\n\n    .bootstrap .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #f8f8f8;\n    }\n\n    .bootstrap-dark .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #2a2a2a;\n        color: #fff;\n    }\n\n    .bootstrap5 .schedule-overview .overview-content .right-panel .control-panel,\n    .bootstrap5_3 .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #f8f9fa;\n        color: #212529;\n    }\n\n    .bootstrap5-dark .schedule-overview .overview-content .right-panel .control-panel,\n    .bootstrap5_3-dark .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #343a40;\n        color: #fff;\n    }\n\n    .highcontrast .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #000000;\n        color: #ffffff;\n    }\n\n    .material3 .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #f3f1f8;\n    }\n\n    .material3-dark .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #2a2731;\n    }\n\n    .fluent2 .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #FFFFFF;\n    }\n\n    .fluent2-dark .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #292929;\n    }\n\n    .fluent2-highcontrast .schedule-overview .overview-content .right-panel .control-panel {\n        background-color: #000000;\n    }\n\n    .schedule-overview .overview-toolbar.e-rtl + *{\n        flex-direction: row-reverse;\n    }\n\n    .schedule-overview .overview-toolbar.e-toolbar {\n        border-radius: 0;\n    }\n\n    .schedule-overview .overview-toolbar.e-toolbar .e-toolbar-item .e-tbar-btn.e-tbtn-txt {\n        display: inline-grid;\n    }\n\n    .material .schedule-overview .overview-toolbar.e-toolbar {\n        border-style: solid;\n    }\n\n    .schedule-overview .overview-toolbar.e-toolbar .e-toolbar-item:not(.e-separator) {\n        padding: 3.5px;\n    }\n\n    .schedule-overview .overview-toolbar.e-toolbar .e-toolbar-item .e-btn.e-tbar-btn .e-icons.e-btn-icon,\n    .schedule-overview .overview-toolbar.e-toolbar .e-toolbar-item .e-btn.e-tbar-btn .e-tbar-btn-text {\n        line-height: 23px !important;\n        min-height: 23px !important;\n        padding: 0px !important;\n    }\n\n    .schedule-overview .overview-toolbar.e-toolbar .e-toolbar-item.e-template {\n        margin: 0 5px;\n    }\n\n    .schedule-overview .overview-content {\n        display: flex;\n    }\n\n    .schedule-overview .overview-content .left-panel {\n        height: 700px;\n        width: 100%;\n    }\n\n    .schedule-overview .overview-content .right-panel {\n        display: block;\n        height: 700px;\n        transform: translateX(0%);\n        transition: transform .5s ease, width 500ms;\n        width: 500px;\n    }\n\n    .schedule-overview .overview-content .right-panel.hide {\n        display: none;\n        transform: translateX(100%);\n        transition: transform .5s ease, width 500ms;\n        width: 0;\n    }\n\n    .schedule-overview .overview-content .right-panel .control-panel {\n        background: #f8f9fa;\n        font-size: 14px;\n        height: 100%;\n        overflow: auto;\n        padding: 15px;\n        width: 100%;\n    }\n\n    .schedule-overview .overview-content .right-panel .control-panel .col-row {\n        display: flex;\n        flex-wrap: wrap;\n    }\n\n    .schedule-overview .overview-content .right-panel .control-panel label {\n        font-weight: 500;\n    }\n\n    .schedule-overview .overview-content .right-panel .control-panel .col-left {\n        flex: 0 0 41.666667%;\n        max-width: 41.666667%;\n        margin-bottom: 1rem;\n    }\n\n    .schedule-overview .overview-content .right-panel .control-panel .col-right {\n        flex: 0 0 58.333333%;\n        max-width: 58.333333%;\n        margin-bottom: 1rem;\n    }\n\n    .schedule-overview .overview-scheduler {\n        height: 100%;\n        width: 100%;\n    }\n\n    .schedule-overview .e-schedule-toolbar .e-views,\n    .schedule-overview .e-schedule-toolbar .e-schedule-seperator,\n    .schedule-workweek.e-multi-select-list-wrapper.e-checkbox .e-filter-parent,\n    .schedule-resource.e-multi-select-list-wrapper.e-checkbox .e-filter-parent {\n        display: none;\n    }\n\n    .schedule-overview .e-timeline-view .e-resource-left-td,\n    .schedule-overview .e-timeline-month-view .e-resource-left-td {\n        width: 120px;\n    }\n\n    .schedule-resource.e-multi-select-list-wrapper.e-checkbox .e-list-parent:first-child li:first-child {\n        background-image: none;\n        opacity: .5;\n        pointer-events: none;\n        user-select: none;\n    }\n\n    .schedule-overview .calendar-import.e-upload {\n        border: 0;\n        padding-left: 0 !important;\n    }\n\n    .schedule-overview .calendar-import.e-upload .e-btn-icon {\n        margin-left: initial;\n    }\n\n    .schedule-overview .calendar-import.e-upload .e-file-select-wrap {\n        padding: 0\n    }\n\n    .schedule-overview .calendar-import.e-upload .e-file-select-wrap .e-file-select {\n        display: none;\n    }\n\n    .schedule-overview .calendar-import.e-upload .e-file-select-wrap .e-file-drop,\n    .calendar-import .e-upload-files {\n        display: none;\n    }\n\n    .e-bigger .schedule-context-menu ul .e-menu-item .e-menu-icon {\n        font-size: 14px;\n    }\n\n    .schedule-context-menu ul .e-menu-item .e-menu-icon {\n        font-size: 12px;\n    }\n\n    .schedule-overview.e-schedule .e-vertical-view .e-header-cells,\n    .schedule-overview.e-schedule .e-timeline-month-view .e-header-cells {\n        padding: 0;\n        text-align: center !important;\n    }\n\n    .schedule-overview.e-schedule .date-text {\n        font-size: 14px;\n    }\n\n    .schedule-overview.e-schedule.e-device .date-text {\n        font-size: 12px;\n    }\n\n    .schedule-overview.e-schedule .weather-image {\n        width: 20px;\n        height: 20px;\n        background-position: center center;\n        background-repeat: no-repeat;\n        background-size: cover;\n    }\n\n    .schedule-overview.e-schedule .e-month-view .weather-image {\n        float: right;\n        margin: -20px 2px 0 0;\n        width: 20px;\n        height: 20px;\n    }\n\n    .fluent2 .schedule-overview .overview-toolbar .e-template .template .icon-child .e-checkbox-wrapper .e-frame,\n    .fluent2-dark .schedule-overview .overview-toolbar .e-template .template .icon-child .e-checkbox-wrapper .e-frame,\n    .fluent2-highcontrast .schedule-overview .overview-toolbar .e-template .template .icon-child .e-checkbox-wrapper .e-frame {\n        margin: 0;\n    }\n\n    .fluent .e-appbar .e-btn-icon.e-icons,\n    .fluent-dark .e-appbar .e-btn-icon.e-icons {\n        margin-top: -2px;\n    }\n\n    .fluent .e-toolbar-item .e-checkbox-wrapper .e-icons.e-frame,\n    .fluent-dark .e-toolbar-item .e-checkbox-wrapper .e-icons.e-frame {\n        height: 17px;\n        line-height: 17px;\n        width: 17px;\n    }\n\n    .fluent .e-toolbar-item .e-checkbox-wrapper .e-icons.e-frame.e-check,\n    .fluent-dark .e-toolbar-item .e-checkbox-wrapper .e-icons.e-frame.e-check {\n        font-size: 15px;\n        line-height: 16px;\n    }\n\n    .schedule-overview .overview-toolbar.e-toolbar .e-toolbar-item .e-tbar-btn {\n        padding-top: 2px;\n        padding-bottom: 2px;\n    }\n\n    #exportBtn {\n        white-space: nowrap;\n    }\n\n    .time {\n        display: flex;\n        gap: 5px;\n        align-items: center;\n        padding: 0 5px;\n    }\n\n    .template {\n        height: 46px;\n        line-height: 23px;\n    }\n\n    .template .icon-child {\n        text-align: center;\n        height: 23px !important;\n    }\n\n    .template .text-child {\n        font-size: 14px;\n        line-height: 23px !important;\n        font-weight: normal;\n    }\n\n    @media (max-width: 481px) {\n        .schedule-overview .overview-content .right-panel {\n            position: absolute;\n            width: 90%;\n        }\n\n        .import-button,\n        #printBtn,\n        #exportBtn {\n            display: none;\n        }\n\n    }\n\n    @media (max-width: 1024px) {\n        .schedule-overview .overview-content .right-panel .control-panel .col-row {\n            display: initial;\n        }\n\n        .schedule-overview .overview-content .right-panel .control-panel .col-left {\n            flex: initial;\n            max-width: initial;\n            margin-bottom: initial;\n        }\n\n        .schedule-overview .overview-content .right-panel .control-panel .col-right {\n            flex: initial;\n            max-width: initial;\n        }\n    }\n</style>\n\n<script>\n    import { createApp } from 'vue';\n    import { ScheduleComponent, ViewDirective, ViewsDirective, ResourceDirective, ResourcesDirective, Day, Week, WorkWeek, Month, Agenda, TimelineMonth, Year, TimelineViews,TimelineYear, Resize, DragAndDrop, Timezone, Print, ExcelExport,ICalendarImport, ICalendarExport } from \"@syncfusion/ej2-vue-schedule\";\n    import { addClass, extend, removeClass, closest, remove, isNullOrUndefined, Internationalization, createElement } from '@syncfusion/ej2-base';\n    import { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\n    import { ButtonComponent, CheckBoxComponent } from '@syncfusion/ej2-vue-buttons';\n    import { UploaderComponent, TextBoxComponent } from '@syncfusion/ej2-vue-inputs';\n    import { DropDownButtonComponent } from \"@syncfusion/ej2-vue-splitbuttons\";\n    import { ToolbarComponent, ItemsDirective, ItemDirective } from \"@syncfusion/ej2-vue-navigations\";\n    import { TimePickerComponent } from \"@syncfusion/ej2-vue-calendars\";\n    import { MultiSelectComponent, DropDownListComponent } from \"@syncfusion/ej2-vue-dropdowns\";\n    import { MultiSelect, CheckBoxSelection } from '@syncfusion/ej2-dropdowns';\n    import { ContextMenuComponent } from '@syncfusion/ej2-vue-navigations';\n    import { AppBarComponent } from \"@syncfusion/ej2-vue-navigations\";\n    MultiSelect.Inject(CheckBoxSelection);\n\n    var app = createApp();\n    var dateHeaderTemplate = app.component(\"date-header-template\", {\n        template: '<div><div class=\"date-text\">{{getDateHeaderDay(data.date)}}</div><div class=\"date-text\">' +\n            '{{getDateHeaderDate(data.date)}}</div><div v-html=getWeather(data.date)></div></div>',\n        data() {\n            return {\n                intl: new Internationalization(),\n                data: {},\n                dateHeader: ''\n            };\n        },\n        methods: {\n            getDateHeaderDay: function (value) {\n                return value ? this.intl.formatDate(value, { skeleton: 'E' }): '';\n            },\n             getDateHeaderDate: function (value) {\n                return value ? this.intl.formatDate(value, { skeleton: 'd' }): '';\n            },\n            getWeather: function (value) {\n                if (value) {\n                    switch (value.getDay()) {\n            case 0:\n                return '<img class=\"weather-image\" src=\"https://ej2.syncfusion.com/vue/demos/src/schedule/images/weather-clear.svg\" alt=\"Clear Weather\"/>';\n            case 1:\n                return '<img class=\"weather-image\" src=\"https://ej2.syncfusion.com/vue/demos/src/schedule/images/weather-clouds.svg\" alt=\"Clouds Weather\"/>';\n            case 2:\n                return '<img class=\"weather-image\" src=\"https://ej2.syncfusion.com/vue/demos/src/schedule/images/weather-rain.svg\" alt=\"Rain Weather\"/>';\n            case 3:\n                return '<img class=\"weather-image\" src=\"https://ej2.syncfusion.com/vue/demos/src/schedule/images/weather-clouds.svg\" alt=\"Clouds Weather\"/>';\n            case 4:\n                return '<img class=\"weather-image\" src=\"https://ej2.syncfusion.com/vue/demos/src/schedule/images/weather-rain.svg\" alt=\"Rain Weather\"/>';\n            case 5:\n                return '<img class=\"weather-image\" src=\"https://ej2.syncfusion.com/vue/demos/src/schedule/images/weather-clear.svg\" alt=\"Clear Weather\"/>';\n            case 6:\n                return '<img class=\"weather-image\" src=\"https://ej2.syncfusion.com/vue/demos/src/schedule/images/weather-clouds.svg\" alt=\"Clouds Weather\"/>';\n            default:\n                return null;\n                }\n                }\n\n            }\n        }\n    });\n\n    var liveTimeInterval;\n\n    export default {\n        components: {\n          'ejs-schedule': ScheduleComponent,\n          'e-view': ViewDirective,\n          'e-views': ViewsDirective,\n          'e-resource': ResourceDirective,\n          'e-resources': ResourcesDirective,\n          'ejs-dropdownlist': DropDownListComponent,\n          'ejs-appbar': AppBarComponent,\n          'ejs-button': ButtonComponent,\n          'ejs-uploader': UploaderComponent,\n          'ejs-dropdownbutton': DropDownButtonComponent,\n          'ejs-toolbar': ToolbarComponent,\n          'e-items': ItemsDirective,\n          'e-item': ItemDirective,\n          'ejs-contextmenu': ContextMenuComponent,\n          'ejs-timepicker': TimePickerComponent,\n          'ejs-multiselect': MultiSelectComponent,\n          'ejs-checkbox': CheckBoxComponent,\n        },\n        data: function () {\n            return {\n                intl: new Internationalization(),\n                eventSettings: { dataSource: this.generateEvents() },\n                currentView: 'Week',\n                group: { resources: ['Calendars'] },\n                resourceDataSource:  [\n                  { CalendarText: 'My Calendar', CalendarId: 1, CalendarColor: '#c43081' },\n                  { CalendarText: 'Company', CalendarId: 2, CalendarColor: '#ff7f50' },\n                  { CalendarText: 'Birthday', CalendarId: 3, CalendarColor: '#AF27CD' },\n                  { CalendarText: 'Holiday', CalendarId: 4, CalendarColor: '#808000' }\n                ],\n                resourceQuery: new Query().where('CalendarId', 'equal', 1),\n                allowMultiple: true,\n                liveTimeUpdate: new Date().toLocaleTimeString('en-US', { timeZone: 'UTC' }),\n                showFileList: false,\n                multiple:  false,\n                calendarFields: { text: 'CalendarText', value: 'CalendarId' },\n                firstDayOfWeek: 0,\n                dayStartHourValue: new Date(new Date().setHours(0, 0, 0)),\n                dayEndHourValue: new Date(new Date().setHours(23, 59, 59)),\n                workStartHourValue: new Date(new Date().setHours(9, 0, 0)),\n                workEndHourValue:  new Date(new Date().setHours(18, 0, 0)),\n                timeSlotDuration: [30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 360],\n                timeSlotCount: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n                timeSlotDurationValue: 60,\n                timeSlotCountValue: 2,\n                timeFormatdata: [\n                  { text: '12 hours', value: \"hh:mm a\" },\n                  { text: '24 hours', value: \"HH:mm\" }\n                ],\n                timeFormatValue: \"hh:mm a\", \n                weekNumberData: [\n                    { text: 'Off', value: 'Off' },\n                    { text: 'First Day of Year', value: 'FirstDay' },\n                    { text: 'First Full Week', value: 'FirstFullWeek' },\n                    { text: 'First Four-Day Week', value: 'FirstFourDayWeek' }\n                ],\n                weekNumberValue: \"Off\",\n                tooltipData: [\n                    { text: 'Off', value: \"Off\"},\n                    { text: 'On', value: \"On\"},\n                ],\n                tooltipValue: 'Off',\n                checkboxMode: 'CheckBox',\n                workDays: [1, 2, 3, 4, 5],\n                weekDays: [\n                  { text: 'Sunday', value: 0 },\n                  { text: 'Monday', value: 1 },\n                  { text: 'Tuesday', value: 2 },\n                  { text: 'Wednesday', value: 3 },\n                  { text: 'Thursday', value: 4 },\n                  { text: 'Friday', value: 5 },\n                  { text: 'Saturday', value: 6 }\n                ],\n                calendarsValue: [1],\n                buttons: { browse: this.importTemplateFn() },\n                exportItems: [\n                  { text: 'iCalendar', iconCss: 'e-icons e-export' },\n                  { text: 'Excel', iconCss: 'e-icons e-export-excel' }\n                ],\n                weekDays: [\n                  { text: 'Sunday', value: 0 },\n                  { text: 'Monday', value: 1 },\n                  { text: 'Tuesday', value: 2 },\n                  { text: 'Wednesday', value: 3 },\n                  { text: 'Thursday', value: 4 },\n                  { text: 'Friday', value: 5 },\n                  { text: 'Saturday', value: 6 }\n                ],\n                fields: { text: 'text', value: 'value' },\n                timezoneData: [\n                  { text: 'UTC -12:00', value: 'Etc/GMT+12' },\n                  { text: 'UTC -11:00', value: 'Etc/GMT+11' },\n                  { text: 'UTC -10:00', value: 'Etc/GMT+10' },\n                  { text: 'UTC -09:00', value: 'Etc/GMT+9' },\n                  { text: 'UTC -08:00', value: 'Etc/GMT+8' },\n                  { text: 'UTC -07:00', value: 'Etc/GMT+7' },\n                  { text: 'UTC -06:00', value: 'Etc/GMT+6' },\n                  { text: 'UTC -05:00', value: 'Etc/GMT+5' },\n                  { text: 'UTC -04:00', value: 'Etc/GMT+4' },\n                  { text: 'UTC -03:00', value: 'Etc/GMT+3' },\n                  { text: 'UTC -02:00', value: 'Etc/GMT+2' },\n                  { text: 'UTC -01:00', value: 'Etc/GMT+1' },\n                  { text: 'UTC +00:00', value: 'Etc/GMT' },\n                  { text: 'UTC +01:00', value: 'Etc/GMT-1' },\n                  { text: 'UTC +02:00', value: 'Etc/GMT-2' },\n                  { text: 'UTC +03:00', value: 'Etc/GMT-3' },\n                  { text: 'UTC +04:00', value: 'Etc/GMT-4' },\n                  { text: 'UTC +05:00', value: 'Etc/GMT-5' },\n                  { text: 'UTC +05:30', value: 'Asia/Calcutta' },\n                  { text: 'UTC +06:00', value: 'Etc/GMT-6' },\n                  { text: 'UTC +07:00', value: 'Etc/GMT-7' },\n                  { text: 'UTC +08:00', value: 'Etc/GMT-8' },\n                  { text: 'UTC +09:00', value: 'Etc/GMT-9' },\n                  { text: 'UTC +10:00', value: 'Etc/GMT-10' },\n                  { text: 'UTC +11:00', value: 'Etc/GMT-11' },\n                  { text: 'UTC +12:00', value: 'Etc/GMT-12' },\n                  { text: 'UTC +13:00', value: 'Etc/GMT-13' },\n                  { text: 'UTC +14:00', value: 'Etc/GMT-14' }\n                ],\n                 menuItems: [\n                    {\n                        text: 'New Event',\n                        iconCss: 'e-icons e-plus',\n                        id: 'Add'\n                    }, {\n                        text: 'New Recurring Event',\n                        iconCss: 'e-icons e-repeat',\n                        id: 'AddRecurrence'\n                    }, {\n                        text: 'Today',\n                        iconCss: 'e-icons e-timeline-today',\n                        id: 'Today'\n                    }, {\n                        text: 'Edit Event',\n                        iconCss: 'e-icons e-edit',\n                        id: 'Save'\n                    }, {\n                        text: 'Edit Event',\n                        id: 'EditRecurrenceEvent',\n                        iconCss: 'e-icons e-edit',\n                        items: [{\n                            text: 'Edit Occurrence',\n                            id: 'EditOccurrence'\n                        }, {\n                            text: 'Edit Series',\n                            id: 'EditSeries'\n                        }]\n                    }, {\n                        text: 'Delete Event',\n                        iconCss: 'e-icons e-trash',\n                        id: 'Delete'\n                    }, {\n                        text: 'Delete Event',\n                        id: 'DeleteRecurrenceEvent',\n                        iconCss: 'e-icons e-trash',\n                        items: [{\n                            text: 'Delete Occurrence',\n                            id: 'DeleteOccurrence'\n                        }, {\n                            text: 'Delete Series',\n                            id: 'DeleteSeries'\n                        }]\n                    }\n                ],\n                selectedTarget: null,              \n                dateHeaderTemplate: function () {\n                    return { template: dateHeaderTemplate }\n                },\n            }\n        },\n        provide: {\n            schedule: [Day, Week, WorkWeek, Month, Agenda, Resize, DragAndDrop,TimelineMonth, TimelineViews, Year, TimelineYear, Print, ExcelExport,ICalendarImport, ICalendarExport]\n        },\n        beforeUnmount: function () {\n            if (liveTimeInterval) {\n                clearInterval(liveTimeInterval);\n            }\n        },\n         mounted: function () { \n            const element = document.querySelector('.calendar-import .e-css.e-btn');\n            element.classList.add('e-inherit');\n         },\n        methods: {\n        onTimelineCreated: function() {\n            document.getElementById('timeline_views').setAttribute('tabindex', '0');\n        },\n        onTimelineViewChange: function(args) {\n            let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n            let isTimelineView = args.checked;\n            switch (scheduleObj.currentView) {\n                case 'Day':\n                case 'TimelineDay':\n                    scheduleObj.currentView = isTimelineView ? 'TimelineDay' : 'Day';\n                    break;\n                case 'Week':\n                case 'TimelineWeek':\n                    scheduleObj.currentView = isTimelineView ? 'TimelineWeek' : 'Week';\n                    break;\n                case 'WorkWeek':\n                case 'TimelineWorkWeek':\n                    scheduleObj.currentView = isTimelineView ? 'TimelineWorkWeek' : 'WorkWeek';\n                    break;\n                case 'Month':\n                case 'TimelineMonth':\n                    scheduleObj.currentView = isTimelineView ? 'TimelineMonth' : 'Month';\n                    break;\n                case 'Year':\n                case 'TimelineYear':\n                    scheduleObj.currentView = isTimelineView ? 'TimelineYear' : 'Year';\n                    break;\n                case 'Agenda':\n                    scheduleObj.currentView = 'Agenda';\n                    break;\n            }\n        },\n        onTimeSlotCreated: function() {\n            document.getElementById('timeSlot').setAttribute('tabindex', '0');\n        },\n        onTimeSlotChange: function(args) {\n            let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n            scheduleObj.timeScale.enable = args.checked;\n        },\n        onCreated: function() {\n            document.getElementById('grouping').setAttribute('tabindex', '0');\n        },\n        onGroupingChange: function(args) {\n            let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n            scheduleObj.group.resources = args.checked ? ['Calendars'] : [];\n        },\n        onRowAutoHeightCreated: function() {\n            document.getElementById('row_auto_height').setAttribute('tabindex', '0');\n        },\n        onRowAutoHeightChange: function(args) {\n            let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n            scheduleObj.rowAutoHeight = args.checked;\n        },\n        importTemplateFn: function() {\n            return createElement('div', { className: 'e-template-btn', innerHTML: '<span class=\"e-btn-icon e-icons e-upload-1 e-icon-left\"></span>Import' });\n        },\n        onSelected: function(args) {\n            let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n            scheduleObj.importICalendar((args.event.target).files[0]);\n        },\n        onPrint: function () {\n            let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n            scheduleObj.print();\n        },\n        onExportItemSelect: function(args) {\n            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n            if (args.item.text === 'Excel') {\n                var exportDatas = [];\n                var eventCollection = scheduleObj.getEvents();\n                var resourceCollection = scheduleObj.getResourceCollections();\n                var resourceData = resourceCollection[0].dataSource;\n                for (var i = 0; i < resourceData.length; i++) {\n                    var resource = resourceData[i];\n                    var data = eventCollection.filter(function (e) { return e.CalendarId === resource.CalendarId; });\n                    exportDatas = exportDatas.concat(data);\n                }\n                scheduleObj.exportToExcel({\n                    exportType: 'xlsx',\n                    customData: exportDatas,\n                    fields: ['Id', 'Subject', 'StartTime', 'EndTime', 'CalendarId']\n                });\n            }\n            else {\n                scheduleObj.exportToICalendar();\n            }\n        },\n        onSettingsClick: function(args) {\n          let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n        const settingsPanel = document.querySelector('.overview-content .right-panel');\n        if (settingsPanel.classList.contains('hide')) {\n            removeClass([settingsPanel], 'hide');\n            this.$refs.workWeekDaysObj.ej2Instances.refresh();\n            this.$refs.resourcesObj.ej2Instances.refresh();\n        } else {\n            addClass([settingsPanel], 'hide');\n        }\n        scheduleObj.refreshEvents();\n        },\n        generateEvents: function() {\n            const eventData = [];\n            const eventSubjects = [\n            'Bering Sea Gold', 'Technology', 'Maintenance', 'Meeting', 'Travelling', 'Annual Conference', 'Birthday Celebration',\n            'Farewell Celebration', 'Wedding Anniversary', 'Alaska: The Last Frontier', 'Deadliest Catch', 'Sports Day', 'MoonShiners',\n            'Close Encounters', 'HighWay Thru Hell', 'Daily Planet', 'Cash Cab', 'Basketball Practice', 'Rugby Match', 'Guitar Class',\n            'Music Lessons', 'Doctor checkup', 'Brazil - Mexico', 'Opening ceremony', 'Final presentation'\n        ];\n        const weekDate = new Date(new Date().setDate(new Date().getDate() - new Date().getDay()));\n        let startDate = new Date(weekDate.getFullYear(), weekDate.getMonth(), weekDate.getDate(), 10, 0);\n        let endDate = new Date(weekDate.getFullYear(), weekDate.getMonth(), weekDate.getDate(), 11, 30);\n        eventData.push({\n            Id: 1,\n            Subject: eventSubjects[Math.floor(Math.random() * (24 - 0 + 1) + 0)],\n            StartTime: startDate,\n            EndTime: endDate,\n            Location: '',\n            Description: 'Event Scheduled',\n            RecurrenceRule: 'FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR;INTERVAL=1;COUNT=10;',\n            IsAllDay: false,\n            IsReadonly: false,\n            CalendarId: 1\n        });\n        for (let a = 0, id = 2; a < 500; a++) {\n            const month = Math.floor(Math.random() * (11 - 0 + 1) + 0);\n            const date = Math.floor(Math.random() * (28 - 1 + 1) + 1);\n            const hour = Math.floor(Math.random() * (23 - 0 + 1) + 0);\n            const minutes = Math.floor(Math.random() * (59 - 0 + 1) + 0);\n            const start = new Date(new Date().getFullYear(), month, date, hour, minutes, 0);\n            const end = new Date(start.getTime());\n            end.setHours(end.getHours() + 2);\n            startDate = new Date(start.getTime());\n            endDate = new Date(end.getTime());\n            eventData.push({\n                Id: id,\n                Subject: eventSubjects[Math.floor(Math.random() * (24 - 0 + 1) + 0)],\n                StartTime: startDate,\n                EndTime: endDate,\n                Location: '',\n                Description: 'Event Scheduled',\n                IsAllDay: id % 10 === 0,\n                IsReadonly: endDate < new Date(),\n                CalendarId: (a % 4) + 1\n            });\n            id++;\n        }\n        if (/MSIE \\d|Trident.*rv:/.test(navigator.userAgent)) {\n            Timezone.prototype.offset = (date, zone) => moment.tz.zone(zone).utcOffset(date.getTime());\n        }\n        const overviewEvents = extend([], eventData, null, true);\n        const timezone = new Timezone();\n        const utcTimezone = 'UTC';\n        const currentTimezone = timezone.getLocalTimezoneName();\n        for (const event of overviewEvents) {\n            event.StartTime = timezone.convert(event.StartTime, utcTimezone, currentTimezone);\n            event.EndTime = timezone.convert(event.EndTime, utcTimezone, currentTimezone);\n        }\n        return overviewEvents;\n      },\n    onWeekDayChange: function(args) {\n        let scheduleObj = this.$refs.scheduleObj.ej2Instances;\n        scheduleObj.firstDayOfWeek = args.value;\n      },\n    updateLiveTime: function(timezone = 'UTC') {\n        let scheduleObj = this.$refs.scheduleObj.ej2Instances;\n        if (scheduleObj.isAdaptive) {\n            this.liveTimeUpdate = new Date().toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', timeZone: timezone });\n        }\n        else {\n            this.liveTimeUpdate = new Date().toLocaleTimeString('en-US', { timeZone: timezone });\n        }\n    },\n    onToolbarCreated: function() {\n        let scheduleObj = this.$refs.scheduleObj.ej2Instances;\n        liveTimeInterval = setInterval(() => { this.updateLiveTime(scheduleObj ? scheduleObj.timezone : 'UTC'); }, 1000);\n    },\n    onToolbarItemClicked: function(args) {\n        let scheduleObj = this.$refs.scheduleObj.ej2Instances;\n        let timelineSwitch = document.getElementById('timeline_views').ej2_instances[0];\n        let isTimelineView = timelineSwitch.checked;\n        switch (args.item.text) {\n            case 'Day':\n                scheduleObj.currentView = isTimelineView ? 'TimelineDay' : 'Day';\n                break;\n            case 'Week':\n                scheduleObj.currentView = isTimelineView ? 'TimelineWeek' : 'Week';\n                break;\n            case 'WorkWeek':\n                scheduleObj.currentView = isTimelineView ? 'TimelineWorkWeek' : 'WorkWeek';\n                break;\n            case 'Month':\n                scheduleObj.currentView = isTimelineView ? 'TimelineMonth' : 'Month';\n                break;\n            case 'Year':\n                scheduleObj.currentView = isTimelineView ? 'TimelineYear' : 'Year';\n                break;\n            case 'Agenda':\n                scheduleObj.currentView = 'Agenda';\n                break;\n            case 'New Event':\n                const eventData = this.getEventData();\n                scheduleObj.openEditor(eventData, 'Add', true);\n                break;\n            case 'New Recurring Event':\n                const recEventData = this.getEventData();\n                scheduleObj.openEditor(recEventData, 'Add', true, 1);\n                break;\n        }\n    },\n    getEventData: function() {\n        let scheduleObj = this.$refs.scheduleObj.ej2Instances;\n        const date = scheduleObj.selectedDate;\n        return {\n            Id: scheduleObj.getEventMaxID(),\n            Subject: '',\n            StartTime: new Date(date.getFullYear(), date.getMonth(), date.getDate(), new Date().getHours(), 0, 0),\n            EndTime: new Date(date.getFullYear(), date.getMonth(), date.getDate(), new Date().getHours() + 1, 0, 0),\n            Location: '',\n            Description: '',\n            IsAllDay: false,\n            CalendarId: 1\n        };\n\n    },\n    onTimezoneChange(args) {\n        let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n        scheduleObj.timezone = args.value;\n        this.updateLiveTime(scheduleObj.timezone);\n        document.querySelector('.schedule-overview #timezoneBtn').innerHTML =\n          args.itemData.text;\n    },\n    onDayStartHourChange: function(args) {\n        let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n        scheduleObj.startHour = this.intl.formatDate(args.value, { skeleton: 'Hm' });\n    },\n    onDayEndHourChange: function(args) {\n      let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n      scheduleObj.endHour = this.intl.formatDate(args.value, { skeleton: 'Hm' });\n    },\n    onWorkStartHourChange: function(args) {\n      let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n      scheduleObj.workHours.start = this.intl.formatDate(args.value, { skeleton: 'Hm' });\n    },\n    onWorkEndHourChange: function(args) {\n      let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n      scheduleObj.workHours.end = this.intl.formatDate(args.value, { skeleton: 'Hm' });\n    },\n    onTimescaleDurationChange: function(args) {\n      let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n      scheduleObj.timeScale.interval = args.value;\n    },\n    onTimescaleIntervalChange: function(args) {\n      let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n      scheduleObj.timeScale.slotCount = args.value;\n    },\n    onchangeTimeFormat: function(args) {\n      let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n      scheduleObj.timeFormat = args.value;\n    },\n    onchangeWeekNumber: function(args) {\n      let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n      if(args.value == \"Off\"){\n          scheduleObj.showWeekNumber = false;\n      } else {\n          scheduleObj.showWeekNumber = true;\n          scheduleObj.weekRule = args.value;\n      }\n    },\n    onWorkWeekDayChange: function(args) {\n      let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n      scheduleObj.workDays = args.value;\n    },\n    onResourceChange(args) {\n      let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n      let resourcePredicate;\n        for (const value of args.value) {\n            if (resourcePredicate) {\n                resourcePredicate = resourcePredicate.or(new Predicate('CalendarId', 'equal', value));\n            } else {\n                resourcePredicate = new Predicate('CalendarId', 'equal', value);\n            }\n        }\n        scheduleObj.resources[0].query = resourcePredicate ? new Query().where(resourcePredicate) :\n        new Query().where('CalendarId', 'equal', 1);\n    },\n    onTooltipChange(args) {\n        let scheduleObj = document.getElementById('scheduler').ej2_instances[0];\n        scheduleObj.eventSettings.enableTooltip = args.value;\n    },\n    onContextMenuBeforeOpen: function(args) {\n        let newEventElement = document.querySelector('.e-new-event');\n        if (newEventElement) {\n            remove(newEventElement);\n            removeClass([document.querySelector('.e-selected-cell')], 'e-selected-cell');\n        }\n        let scheduleObj = this.$refs.scheduleObj.ej2Instances;\n        scheduleObj.closeQuickInfoPopup();\n        let targetElement = args.event.target;\n        if (closest(targetElement, '.e-contextmenu')) {\n            return;\n        }\n        let menuObj = this.$refs.menuObj;\n        this.selectedTarget = closest(targetElement, '.e-appointment,.e-work-cells,' +\n        '.e-vertical-view .e-date-header-wrap .e-all-day-cells,.e-vertical-view .e-date-header-wrap .e-header-cells');\n        if (isNullOrUndefined(this.selectedTarget)) {\n            args.cancel = true;\n            return;\n        }\n        if (this.selectedTarget.classList.contains('e-appointment')) {\n            let eventObj= scheduleObj.getEventDetails(this.selectedTarget);\n            if (eventObj.RecurrenceRule) {\n                menuObj.showItems(['EditRecurrenceEvent', 'DeleteRecurrenceEvent'], true);\n                menuObj.hideItems(['Add', 'AddRecurrence', 'Today', 'Save', 'Delete'], true);\n            } else {\n                menuObj.showItems(['Save', 'Delete'], true);\n                menuObj.hideItems(['Add', 'AddRecurrence', 'Today', 'EditRecurrenceEvent', 'DeleteRecurrenceEvent'], true);\n            }\n            return;\n        } else if ((this.selectedTarget.classList.contains('e-work-cells') || this.selectedTarget.classList.contains('e-all-day-cells')) &&\n            !this.selectedTarget.classList.contains('e-selected-cell')) {\n            this.selectedTarget.setAttribute('aria-selected', 'true');\n            this.selectedTarget.classList.add('e-selected-cell');\n            removeClass([].slice.call(scheduleObj.element.querySelectorAll('.e-selected-cell')), 'e-selected-cell');\n        }\n        menuObj.hideItems(['Save', 'Delete', 'EditRecurrenceEvent', 'DeleteRecurrenceEvent'], true);\n        menuObj.showItems(['Add', 'AddRecurrence', 'Today'], true);\n    },\n    onMenuItemSelect: function(args) {\n                let scheduleObj = this.$refs.scheduleObj.ej2Instances;\n                let selectedMenuItem = args.item.id;\n                let eventObj;\n                if (this.selectedTarget.classList.contains('e-appointment')) {\n                    eventObj = scheduleObj.getEventDetails(this.selectedTarget);\n                }\n                switch (selectedMenuItem) {\n                    case 'Today':\n                        scheduleObj.selectedDate = new Date();\n                        break;\n                    case 'Add':\n                    case 'AddRecurrence':\n                        let selectedCells = scheduleObj.getSelectedElements();\n                        let isRightClickInSelectedCells= selectedCells.some((cell) => cell === this.selectedTarget);\n                        let activeCellsData= scheduleObj.getCellDetails(isRightClickInSelectedCells ? selectedCells : [this.selectedTarget]);\n                        if (selectedMenuItem === 'Add') {\n                            scheduleObj.openEditor(activeCellsData, 'Add');\n                        } else {\n                            scheduleObj.openEditor(activeCellsData, 'Add', null, 1);\n                        } \n                        break;\n                    case 'Save':\n                    case 'EditOccurrence':\n                    case 'EditSeries':\n                        if (selectedMenuItem === 'EditSeries') {\n                            eventObj = new DataManager(scheduleObj.eventsData).\n                                executeLocal(new Query().where(scheduleObj.eventFields.id, 'equal', eventObj[scheduleObj.eventFields.recurrenceID]))[0];\n                        }\n                        scheduleObj.openEditor(eventObj, selectedMenuItem);\n                        break;\n                    case 'Delete':\n                        scheduleObj.deleteEvent(eventObj);\n                        break;\n                    case 'DeleteOccurrence':\n                    case 'DeleteSeries':\n                        scheduleObj.deleteEvent(eventObj, selectedMenuItem);\n                        break;\n                }\n            },\n        }\n    };\n</script>","dependencies":"{\"vue\":\"3.3.4\",\"@microsoft/signalr\":\"7.0.11\",\"moment-timezone\":\"0.5.43\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-vue-schedule\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-vue-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-vue-navigations\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-vue-calendars\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-vue-maps\":\"*\",\"@syncfusion/ej2-vue-grids\":\"*\",\"@syncfusion/ej2-vue-richtexteditor\":\"*\",\"@syncfusion/ej2-vue-documenteditor\":\"*\",\"@syncfusion/ej2-vue-pdfviewer\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}