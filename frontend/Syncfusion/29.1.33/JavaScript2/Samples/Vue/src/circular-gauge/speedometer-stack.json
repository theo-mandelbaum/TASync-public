{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<main><div>\n    <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\">\n            <ejs-circulargauge ref=\"circulargauge\" :background='background' style='display:block' align='center' id='gauge-container' :title='title' centerY='75%' :titleStyle='titleStyle' :load='load'>\n                <template v-slot:indicatorTemplate=\"{}\">\n                <div id=\"templateWrap\"><div class=\"des\"><div id=\"pointerannotation\" style=\"width:90px;text-align:center;font-size:20px;font-family:Segoe UI;\">{{value}} km/h</div></div></div>\n                </template>\n                <e-axes>\n                    <e-axis :startAngle='startAngle' :endAngle='endAngle' :lineStyle='lineStyle' :labelStyle='labelStyle' :majorTicks='majorTicks' :minorTicks='minorTicks' :radius='radius' minimum=0 maximum=120 :ranges='ranges'>\n                        <e-annotations>\n                          <e-annotation angle='0' zIndex='1' radius='30%' :content=\"'indicatorTemplate'\"></e-annotation>\n                        </e-annotations>\n                        <e-pointers>\n                          <e-pointer :value='value' :radius='pointerRadius' :color='color' :pointerWidth='pointerWidth' :animation='animation' :cap='cap' :needleTail=\"needleTail\"></e-pointer>\n                        </e-pointers>  \n                    </e-axis>\n                </e-axes>\n            </ejs-circulargauge>\n        </div>\n    </div>\n<div class=\"col-md-4 property-section\">\n        <table role=\"none\" id=\"property\" title=\"Properties\" style=\"width: 100%; margin-left: -20px;\">\n        <colgroup>\n            <col span=\"1\" style=\"width: 50%;\">\n            <col span=\"1\" style=\"width: 50%;\">\n         </colgroup>\n            <tbody>\n                    <tr style=\"height: 40px\">\n                        <td>\n                            <div class=\"property-text\" style=\"font-size: 14px;\"> Combine Ranges</div>\n                        </td>\n                        <td>\n                            <div style=\"margin-top: -5px; margin-left: 40px\">\n                            <ejs-checkbox id=\"combineRange\" ref=\"range\" :change=\"onChangeCombineRange\"></ejs-checkbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 40px\">\n                        <td>\n                            <div class=\"property-text\" style=\"font-size: 14px;\"> Gap Between Ranges</div>\n                        </td>\n                        <td>\n                            <div style=\"margin-top: -5px; margin-left: 40px\">\n                            <ejs-checkbox id=\"range\" ref=\"gap\" :change=\"onChangeRange\"></ejs-checkbox>\n                            </div>\n                        </td>\n                    </tr>\n            </tbody>\n            <br/>\n        </table>\n    </div>\n</div>\n<section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n    <p>\n        This sample depicts the appearance of a speedometer rendered using the circular gauge. The pointer value is\n        dynamically updated with random values in this case.\n    </p>\n</section>\n<section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n    <p>\n        In this example, you can see how to make a circular gauge look like a speedometer. Using the options in the\n        properties panel, a gap can be added between ranges or ranges can be combined to form a single range.\n    </p>\n    <p>\n        More information on the circular gauge can be found in this <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/circular-gauge/getting-started/\"> documentation\n            section</a>.\n    </p>\n</section>\n<svg style=\"height:0px;width:0px\">\n    <defs>\n      <linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n        <stop offset=\"0%\" style=\"stop-color:#82b944;stop-opacity:1\" />\n        <stop offset=\"50%\" style=\"stop-color:rgb(255,255,0);stop-opacity:1\" />\n        <stop offset=\"100%\" style=\"stop-color:red;stop-opacity:1\" />\n      </linearGradient>\n    </defs>   \n  </svg>\n</main>\n</template>\n<style scoped>\n.property-panel-content td {\n    padding-top: 0px;\n}\n</style>\n<script>\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, PointersDirective, PointerDirective, AnnotationsDirective, AnnotationDirective, Annotations } from \"@syncfusion/ej2-vue-circulargauge\";\nimport { CheckBoxComponent } from \"@syncfusion/ej2-vue-buttons\";\nimport { isNullOrUndefined } from \"@syncfusion/ej2-base\";\n\nexport default {\ncomponents: {\n    'ejs-circulargauge': CircularGaugeComponent,\n    'e-axes': AxesDirective,\n    'e-axis': AxisDirective,\n    'e-pointers': PointersDirective,\n    'e-pointer': PointerDirective,\n    'e-annotations': AnnotationsDirective,\n    'e-annotation': AnnotationDirective,\n    'ejs-checkbox': CheckBoxComponent\n},\ndata:function(){\n    return{\n            minimum: 0,\n            maximum: 120,\n            background:'transparent',\n            value: 40,\n            radius: '120%',\n            pointerRadius: '80%',\n            lineStyle: { width: 0 },\n            majorTicks: { width: 0, },\n            minorTicks: { width: 0 },\n            pointerWidth: 7,\n            titleStyle: { size: '18px', fontFamily: 'inherit' },\n            labelStyle: { useRangeColor: false, position: 'Outside', autoAngle: true,\n            font: { size: '13px', fontFamily: 'inherit' } },\n            startAngle: 270, \n            endAngle: 90,\n            color: '#757575',\n            title: 'Speedometer',\n            animation: { enable: true, duration: 900 },\n            cap: {\n                    radius: 8,\n                    color: '#757575',\n                    border: { width: 0 }\n                },\n            needleTail: {\n                    color: '#757575',\n                    length: '15%'\n            },\n            ranges: [\n                {\n                    start: 0,\n                    end: 20,\n                    startWidth: 5, endWidth: 10,\n                    radius: '102%',\n                    color: '#82b944',\n                },\n                {\n                    start: 20,\n                    end: 40,\n                    startWidth: 10, endWidth: 15,\n                    radius: '102%',\n                    color: '#a1cb43',\n                }, {\n                    start: 40,\n                    end: 60,\n                    startWidth: 15, endWidth: 20,\n                    radius: '102%',\n                    color: '#ddec12',\n                },\n                {\n                    start: 60,\n                    end: 80,\n                    startWidth: 20, endWidth: 25,\n                    radius: '102%',\n                    color: '#ffbc00',\n                },\n                {\n                    start: 80,\n                    end: 100,\n                    startWidth: 25, endWidth: 30,\n                    radius: '102%',\n                    color: '#ff6000',\n                },\n                {\n                    start: 100,\n                    end: 120,\n                    startWidth: 30, endWidth: 35,\n                    radius: '102%',\n                    color: 'red',\n                }\n            ]\n    }\n},\nprovide: {\n    circulargauge: [Annotations]\n},\nmounted : function(){\n   this.setIntervalStart();       \n},\nbeforeDestroy () {\n       clearInterval(this.intervalid1)\n},\nmethods: {\n    load: function (args) {\n        /* custom code start */\n        let selectedTheme = location.hash.split(\"/\")[1];\n        selectedTheme = selectedTheme ? selectedTheme : \"Material\";\n        args.gauge.theme =\n            (selectedTheme.charAt(0).toUpperCase() +\n        selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n        /* custom code end */\n    },\n    setIntervalStart : function(){       \n        let gauge = this.$refs.circulargauge.ej2Instances;   \n            this.intervalid1 = setInterval(function(){   \n                let newVal = gauge.axes[0].pointers[0].value + (Math.floor(Math.random() * (10 - (-10))) - 10);\n            if (newVal <= 0) {\n                newVal = 5;\n            }\n            if (!isNullOrUndefined(document.getElementById('gauge-container'))) {\n                gauge.axes[0].pointers[0].animation.enable = true;\n                gauge.setPointerValue(0, 0, newVal);\n                if (!isNullOrUndefined(document.getElementById('pointerannotation'))) {\n                    document.getElementById('pointerannotation').innerHTML = newVal.toString() + ' km/h';\n                }\n            } else {\n                clearInterval(this.pointerInterval1);\n            }\n            }, 1000);\n    },\n    onChangeRange: function(args) {\n        let circulargauge=this.$refs.circulargauge.ej2Instances;\n        if (args.checked) {\n            circulargauge.axes[0].rangeGap = 5;\n        } else {\n            circulargauge.axes[0].rangeGap = null;\n        }\n        circulargauge.axes[0].pointers[0].animation.enable = false;\n        circulargauge.refresh();\n    },\n    onChangeCombineRange: function(args) {\n        let circulargauge = this.$refs.circulargauge.ej2Instances;\n        let rangeCheckbox = this.$refs.gap.ej2Instances;\n        if (args.checked) {\n            rangeCheckbox.disabled = true;\n            circulargauge.axes[0].ranges[0].start = 0;\n            circulargauge.axes[0].ranges[0].end = 120;\n            circulargauge.axes[0].ranges[0].startWidth = 5;\n            circulargauge.axes[0].ranges[0].endWidth = 35;\n            circulargauge.axes[0].ranges[0].color = 'url(#grad1)';\n            circulargauge.axes[0].ranges[1].start = null;\n            circulargauge.axes[0].ranges[1].end = null;\n            circulargauge.axes[0].ranges[1].startWidth = '';\n            circulargauge.axes[0].ranges[1].endWidth = '';\n            circulargauge.axes[0].ranges[1].color = '';\n            circulargauge.axes[0].ranges[2].start = null;\n            circulargauge.axes[0].ranges[2].end = null;\n            circulargauge.axes[0].ranges[2].startWidth = '';\n            circulargauge.axes[0].ranges[2].endWidth = '';\n            circulargauge.axes[0].ranges[2].color = '';\n            circulargauge.axes[0].ranges[3].start = null;\n            circulargauge.axes[0].ranges[3].end = null;\n            circulargauge.axes[0].ranges[3].startWidth = '';\n            circulargauge.axes[0].ranges[3].endWidth = '';\n            circulargauge.axes[0].ranges[3].color = '';\n            circulargauge.axes[0].ranges[4].start = null;\n            circulargauge.axes[0].ranges[4].end = null;\n            circulargauge.axes[0].ranges[4].startWidth = '';\n            circulargauge.axes[0].ranges[4].endWidth = '';\n            circulargauge.axes[0].ranges[4].color = '';\n            circulargauge.axes[0].ranges[5].start = null;\n            circulargauge.axes[0].ranges[5].end = null;\n            circulargauge.axes[0].ranges[5].startWidth = '';\n            circulargauge.axes[0].ranges[5].endWidth = '';\n            circulargauge.axes[0].ranges[5].color = '';\n            circulargauge.axes[0].pointers[0].animation.enable = false;\n            circulargauge.refresh();\n        } else {\n            rangeCheckbox.disabled = false;\n            circulargauge.axes[0].ranges[0].start = 0;\n            circulargauge.axes[0].ranges[0].end = 20;\n            circulargauge.axes[0].ranges[0].startWidth = 5;\n            circulargauge.axes[0].ranges[0].endWidth = 10;\n            circulargauge.axes[0].ranges[0].color = '#82b944';\n            circulargauge.axes[0].ranges[1].start = 20;\n            circulargauge.axes[0].ranges[1].end = 40;\n            circulargauge.axes[0].ranges[1].startWidth = 10;\n            circulargauge.axes[0].ranges[1].endWidth = 15;\n            circulargauge.axes[0].ranges[1].color = '#a1cb43';\n            circulargauge.axes[0].ranges[2].start = 40;\n            circulargauge.axes[0].ranges[2].end = 60;\n            circulargauge.axes[0].ranges[2].startWidth = 15;\n            circulargauge.axes[0].ranges[2].endWidth = 20;\n            circulargauge.axes[0].ranges[2].color = '#ddec12';\n            circulargauge.axes[0].ranges[3].start = 60;\n            circulargauge.axes[0].ranges[3].end = 80;\n            circulargauge.axes[0].ranges[3].startWidth = 20;\n            circulargauge.axes[0].ranges[3].endWidth = 25;\n            circulargauge.axes[0].ranges[3].color = '#ffbc00';\n            circulargauge.axes[0].ranges[4].start = 80;\n            circulargauge.axes[0].ranges[4].end = 100;\n            circulargauge.axes[0].ranges[4].startWidth = 25;\n            circulargauge.axes[0].ranges[4].endWidth = 30;\n            circulargauge.axes[0].ranges[4].color = '#ff6000';\n            circulargauge.axes[0].ranges[5].start = 100;\n            circulargauge.axes[0].ranges[5].end = 120;\n            circulargauge.axes[0].ranges[5].startWidth = 30;\n            circulargauge.axes[0].ranges[5].endWidth = 35;\n            circulargauge.axes[0].ranges[5].color = 'red';\n            circulargauge.axes[0].pointers[0].animation.enable = false;\n            circulargauge.refresh();\n        }\n        rangeCheckbox.dataBind();\n    }\n}\n}\n</script>","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-vue-circulargauge\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-vue-charts\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}