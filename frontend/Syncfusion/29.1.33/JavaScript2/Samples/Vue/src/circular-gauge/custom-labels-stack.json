{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n <main><div>\n    <div class=\"control-section\">\n        <ejs-circulargauge :load='load' :animationDuration=2000 :background='background' style='display:block' align='center' :axisLabelRender='axisLabelRender' id='gauge' >\n            <e-axes>\n                <e-axis :radius='gaugeRadius' :startAngle='startAngle' :endAngle='endAngle' :minimum =0 :maximum=8 :majorTicks='majorTicks' :lineStyle='lineStyle' :minorTicks='minorTicks' :labelStyle='labelStyle' >\n                    <e-pointers>\n                    <e-pointer :value='value' :radius='pointerRadius' :needleStartWidth= 'needleStartWidth' :needleEndWidth ='needleEndWidth' :color='color' :pointerWidth='pointerWidth' :cap='cap' :needleTail='needleTail'  :animation='animation' :linearGradient='pointerLinearGradient' ></e-pointer>\n                    </e-pointers>\n                    <e-ranges>\n                    <e-range :start='start' :end='end' :startWidth='startWidth' :endWidth='endWidth' :color='color1' :linearGradient='rangeLinearGradient'></e-range>\n                    <e-range :start='start2' :end='end2' :startWidth='startWidth' :endWidth='endWidth' :color='color2'></e-range>\n                    </e-ranges>\n                </e-axis>\n            </e-axes>\n        </ejs-circulargauge>\n    </div>\n</div>\n <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n    <p>\n        This example demonstrates how to introduce and position custom labels in a circular gauge. In addition,\n        gradient colors are used on the circular gauge elements such as the pointer and range.\n    </p>\n</section>\n<section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n    <p>\n        In this example, you can see how to render and configure custom labels in the circular gauge. The label text can\n        be modified using the <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/api/circular-gauge/#axislabelrender\">axisLabelRender</a>\n        event which will be triggered everytime when a label is rendered.\n    </p>\n    <p>\n        More information on the labels can be found in this <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/circular-gauge/gauge-axes/#labels\">documentation\n            section</a>.\n    </p>\n </section>\n</main>\n</template>\n<script>\n\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, PointerDirective, PointersDirective , RangesDirective, RangeDirective, Gradient} from \"@syncfusion/ej2-vue-circulargauge\";\n\nexport default {\n   data:function(){\n    return{\n            gaugeRadius: '80%',\n            startAngle: 210,\n            background:'transparent',\n            endAngle: 150,\n            majorTicks: {\n                width: 0,\n                interval: 1\n            },\n            lineStyle: {width: 0 },\n            minorTicks: {\n                width: 0\n            },\n            labelStyle: {\n                 font: {\n                    fontFamily: 'inherit',\n                },\n                offset: 10\n            },\n            value: 6.2,\n            pointerRadius: '85%',\n            pointerWidth: 10,\n            animation: {enable : false},\n            color:'#E63B86',\n            cap: {\n                   radius: 0,\n                   border: { width: 0 }\n            },\n            needleTail: {\n                    length: '0%',\n            },\n            needleStartWidth: 10,\n            needleEndWidth:5,            \n            start: 0,  end: 6.2, startWidth: 22, endWidth: 22, color1: '#E63B86',\n            start2: 6.2,  end2: 8,color2:'#E0E0E0',\n            rangeLinearGradient:\n            {\n                startValue: '0%',\n                endValue: '100%',\n                colorStop: [\n                    { color: '#9e40dc', offset: '0%', opacity: 1 },\n                    { color: '#d93c95', offset: '70%', opacity: 1 },\n                ]\n            },\n            pointerLinearGradient :\n            {\n                startValue: '0%',\n                endValue: '100%',\n                colorStop: [\n                    { color: '#9e40dc', offset: '0%', opacity: 0.2 },\n                    { color: '#9e40dc', offset: '70%', opacity: 0.5 }]\n            }  \n    }\n   },\n   components: {\n        'ejs-circulargauge': CircularGaugeComponent,\n        'e-axis': AxisDirective,\n        'e-axes': AxesDirective,\n        'e-pointer': PointerDirective,\n        'e-pointers': PointersDirective,\n        'e-ranges': RangesDirective,\n        'e-range': RangeDirective,\n    },\n    provide: {\n        circulargauge: [Gradient]\n    },\n   methods: {\n    axisLabelRender: function (args) {\n        let value = ['0', '2', '5', '10', '20', '50', '100', '150', '200'];\n        args.text = value[args.value];\n    },\n    load: function(args) {\n    /* custom code start */\n      let selectedTheme = location.hash.split(\"/\")[1];\n      selectedTheme = selectedTheme ? selectedTheme : \"Material\";\n      args.gauge.theme =\n        (selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n    /* custom code end */\n    }\n}\n}\n</script>\n","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-vue-circulargauge\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}