{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<main><div>\n    <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\">\n            <ejs-circulargauge :load='load' :background='background' ref=\"circulargauge\" style='display:block' align='center' id='range-container'>\n                <e-axes>\n                   <e-axis :radius='gaugeRadius' :startAngle='startAngle' minimum=0  maximum=120 :endAngle='endAngle' :majorTicks='majorTicks' :lineStyle='lineStyle' :minorTicks='minorTicks' :labelStyle='labelStyle' :annotations='annotations' :ranges='ranges'>\n                       <e-pointers>\n                           <e-pointer :value='value' :radius='pointerRadius'  :pointerWidth='pointerWidth' :cap='cap' :needleTail='needleTail'></e-pointer>\n                       </e-pointers>\n                   </e-axis>\n                </e-axes>\n            </ejs-circulargauge>\n        </div>\n    </div>\n<br>\n<div class=\"col-md-4 property-section\">\n <table role=\"none\" id=\"property\" title=\"Properties\" style=\"width: 100%; margin-left: -20px;\">\n    <colgroup>\n        <col span=\"1\" style=\"width: 30%;\">\n        <col span=\"1\" style=\"width: 40%;\">\n        <col span=\"1\" style=\"width: 30%;\">\n    </colgroup>\n    <tbody>\n            <tr style=\"height: 40px\">\n                <td>\n                    <div style=\"font-size:14px\"> Select Range </div>\n                </td>\n                <td style=\"height: 50px\">\n                    <div style=\"height: 100%\">\n                       <ejs-dropdownlist ref=\"selectRange\" id='rangeSelect' :dataSource='rangeselectdata' :fields='rangeselectfields' value='0' index=0  :width='rangeselectwidth' :change='changeRangeselect'></ejs-dropdownlist>                      \n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 40px\">\n                <td>\n                    <div style=\"font-size:14px\">Range Start  </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" ref=\"rangeStart\" id=\"start\" v-on:pointermove=\"rangeStart\" v-on:touchmove=\"rangeStart\" v-on:change=\"rangeStart\" value=\"0\" min=\"0\" max=\"40\" style=\"width: 70%\" />\n                    </div>\n                </td>\n                 <td style=\"text-align: center;\">\n               <span id='rangeStart' style=\"margin-left: -30px;font-size: 14px\">0</span>\n                </td>\n            </tr>\n            <tr style=\"height: 40px\">\n                <td>\n                    <div style=\"font-size:14px\">Range End </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" ref=\"rangeEnd\" id=\"end\" v-on:pointermove=\"rangeEnd\" v-on:touchmove=\"rangeEnd\" v-on:change=\"rangeEnd\" value=\"40\" min=\"0\" max=\"40\" style=\"width: 70%\" />\n                    </div>\n                </td>\n                <td style=\"text-align: center;\">\n                  <span id='rangeEnd' style=\"margin-left: -30px;font-size: 14px\">40</span>\n                </td>\n            </tr>\n            <tr style=\"height: 40px\">\n                <td>\n                    <div style=\"font-size:14px\">Start Width </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" ref=\"startWidth\" id=\"startWidth\" v-on:pointermove=\"rangeStartwidth\" v-on:touchmove=\"rangeStartwidth\" v-on:change=\"rangeStartwidth\" value=\"10\" min=\"0\" max=\"30\" style=\"width: 70%\" />\n                    </div>\n                </td>\n                <td style=\"text-align: center;\">\n                     <span id='rangeStartWidth' style=\"margin-left: -30px;font-size: 14px\">10</span>\n                </td>\n            </tr>\n            <tr style=\"height: 40px\">\n                <td>\n                    <div style=\"font-size:14px\">End Width </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" ref=\"endWidth\" id=\"endWidth\" v-on:pointermove=\"rangeEndwidth\" v-on:touchmove=\"rangeEndwidth\" v-on:change=\"rangeEndwidth\" value=\"10\" min=\"0\" max=\"30\" style=\"width: 70%\" />\n                    </div>\n                </td>\n                <td style=\"text-align: center;\">\n                <span id='rangeEndWidth' style=\"margin-left: -30px;font-size: 14px\">10</span>\n                </td>\n            </tr>\n            <tr style=\"height: 40px\">\n                <td>\n                    <div style=\"font-size:14px\">Corner Radius </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" ref=\"cornerRadius\" id=\"radius\" v-on:pointermove=\"roundedRadius\" v-on:touchmove=\"roundedRadius\" v-on:change=\"roundedRadius\" value=\"0\" min=\"0\" max=\"12\" style=\"width: 70%\" />\n                    </div>\n                </td>\n                <td style=\"text-align: center;\">\n                 <span id='roundedRadius' style=\"margin-left: -30px;font-size: 14px\">0</span>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n</div>\n</div>\n<section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n    <p>\n        This sample demonstrates how to highlight a region in an axis using ranges in the circular gauge. The width,\n        corner radius, and start and end range of a range can all be customized.\n    </p>\n</section>\n<section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n    <p>\n        In this example, you can see how to render and configure the ranges in the circular gauge. Ranges are used to\n        group the axis values, and you can use <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/api/circular-gauge/rangeModel/#start\">start</a>, <a\n            target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/api/circular-gauge/rangeModel/#end\">end</a>, <a\n            target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/api/circular-gauge/rangeModel/#color\">color</a>, <a\n            target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/api/circular-gauge/rangeModel/#startwidth\">startWidth</a>,\n        <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/api/circular-gauge/rangeModel/#endwidth\">endWidth</a>,\n        <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/api/circular-gauge/rangeModel/#radius\">radius</a> and\n        <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/api/circular-gauge/rangeModel/#roundedcornerradius\">roundedCornerRadius</a>\n        properties to customize them. In addition, an axis with multiple ranges is shown in the circular gauge\n        component, as well as options to customize the range properties via the property panel.\n    </p>\n    <p>\n        More information on the ranges can be found in this <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/circular-gauge/gauge-ranges/\">documentation\n            section</a>.\n    </p>\n</section>\n</main>\n</template>\n<style scoped>\n.property-panel-content td {\n    padding-top: 0px;\n}\n</style>\n<script>\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, PointersDirective, PointerDirective, AnnotationsDirective, AnnotationDirective, Annotations } from \"@syncfusion/ej2-vue-circulargauge\";\nimport { DropDownListComponent } from '@syncfusion/ej2-vue-dropdowns';\nimport { CheckBoxComponent } from \"@syncfusion/ej2-vue-buttons\";\n\nexport default {\n    components: {\n    'ejs-circulargauge': CircularGaugeComponent,\n    'e-axes': AxesDirective,\n    'e-axis': AxisDirective,\n    'e-pointers': PointersDirective,\n    'e-pointer': PointerDirective,\n    'ejs-dropdownlist': DropDownListComponent,\n    'ejs-checkbox': CheckBoxComponent\n   },\ndata:function(){\n    return{\n            lineStyle: { width: 10, color: 'transparent' },\n            background:'transparent',\n            labelStyle: {\n                position: 'Inside', useRangeColor: false,\n                font: { size: '12px', fontFamily: 'inherit', fontStyle: 'Regular' }\n            }, majorTicks: { height: 10, offset: 5 }, minorTicks: { height: 0 },\n            annotations: [{\n                description:'Speedometer',\n                content: '<div><span style=\"font-size:14px; font-family:inherit\">Speedometer</span></div>',\n                radius: '30%', angle: 0, zIndex: '1'\n            }, {\n                description:'65 MPH',\n                content: '<div><span style=\"font-size:20px; font-family:inherit\">65 MPH</span></div>',\n                radius: '40%', angle: 180, zIndex: '1'\n            }],\n            startAngle: 210,\n            endAngle: 150,\n            gaugeRadius: '80%',\n            ranges: [{ start: 0, end: 40, color: '#30B32D' }, { start: 40, end: 80, color: '#FFDD00' },\n            { start: 80, end: 120, color: '#F03E3E' }],\n            value: 65, \n            pointerRadius: '60%', \n            color: '#757575', \n            pointerWidth: 8,\n            cap: { radius: 7 },\n            needleTail: { length: '18%'},\n            rangeselectdata:[\n            { Id:'0', level:'Low'},\n            { Id:'1', level:'Medium'},\n            { Id:'2', level:'High'}],\n            rangeselectfields:{ text: 'level', value: 'Id' },\n            rangecolordata:['#30B32D','#FFDD00','#F03E3E'],\n            rangeselectwidth:'115%',\n            rangecolorwidth:'100%'\n    }\n},\nprovide: {\n    circulargauge: [Annotations]\n},\nmethods: {\n    load: function(args) {\n        /* custom code start */\n      let selectedTheme = location.hash.split(\"/\")[1];\n      selectedTheme = selectedTheme ? selectedTheme : \"Material\";\n      args.gauge.theme =\n        (selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n        /* custom code end */\n    },\n    changeRangeselect: function(args){\n            let index = args.value;\n            let container = this.$refs.circulargauge.ej2Instances;            \n            (document.getElementById('endWidth')).value = this.$refs.circulargauge.ej2Instances.axes[0].ranges[index].endWidth.toString();\n            document.getElementById('rangeEndWidth').innerHTML = this.$refs.circulargauge.ej2Instances.axes[0].ranges[index].endWidth;\n            (document.getElementById('startWidth')).value = this.$refs.circulargauge.ej2Instances.axes[0].ranges[index].startWidth.toString();\n            document.getElementById('rangeStartWidth').innerHTML = this.$refs.circulargauge.ej2Instances.axes[0].ranges[index].startWidth;\n            (document.getElementById('end')).value = this.$refs.circulargauge.ej2Instances.axes[0].ranges[index].end.toString();\n            document.getElementById('rangeEnd').innerHTML = this.$refs.circulargauge.ej2Instances.axes[0].ranges[index].end;\n            if (index == 0) {\n                (document.getElementById('start')).min = \"0\";\n                (document.getElementById('start')).max = \"40\";\n                (document.getElementById('end')).min = \"0\";\n                (document.getElementById('end')).max = \"40\";\n            } else if (index == 1) {\n                (document.getElementById('start')).min = \"40\";\n                (document.getElementById('start')).max = \"80\";\n                (document.getElementById('end')).min = \"40\";\n                (document.getElementById('end')).max = \"80\";\n            } else {\n                (document.getElementById('start')).min = \"80\";\n                (document.getElementById('start')).max = \"120\";\n                (document.getElementById('end')).min = \"80\";\n                (document.getElementById('end')).max = \"120\";\n            }\n            (document.getElementById('start')).value = this.$refs.circulargauge.ej2Instances.axes[0].ranges[index].start.toString();\n            (document.getElementById('end')).value = this.$refs.circulargauge.ej2Instances.axes[0].ranges[index].end.toString();\n            document.getElementById('rangeStart').innerHTML = this.$refs.circulargauge.ej2Instances.axes[0].ranges[index].start;\n            (document.getElementById('radius')).value = this.$refs.circulargauge.ej2Instances.axes[0].ranges[index].roundedCornerRadius.toString();\n            document.getElementById('roundedRadius').innerHTML = this.$refs.circulargauge.ej2Instances.axes[0].ranges[index].roundedCornerRadius;\n    },\n    changeRangeColor: function(args){\n        this.$refs.circulargauge.ej2Instances.axes[0].ranges[this.$refs.selectRange.ej2Instances.value].color = this.$refs.rangeColor.ej2Instances.value.toString();\n        this.$refs.circulargauge.ej2Instances.axes[0].pointers[0].animation.enable = false;\n        this.$refs.circulargauge.ej2Instances.refresh();\n    },\n    rangeStart:function(args){\n        let min = this.$refs.rangeStart.value;\n        document.getElementById('rangeStart').innerHTML = min.toString();\n        this.$refs.circulargauge.ej2Instances.axes[0].ranges[this.$refs.selectRange.ej2Instances.value].start = min;\n        this.$refs.circulargauge.ej2Instances.axes[0].pointers[0].animation.enable = false; \n        this.$refs.circulargauge.ej2Instances.refresh();\n    },\n    rangeEnd:function(args){\n        let max = this.$refs.rangeEnd.value;\n        document.getElementById('rangeEnd').innerHTML = max.toString();\n        this.$refs.circulargauge.ej2Instances.axes[0].ranges[this.$refs.selectRange.ej2Instances.value].end = max;\n        this.$refs.circulargauge.ej2Instances.axes[0].pointers[0].animation.enable = false; \n        this.$refs.circulargauge.ej2Instances.refresh();\n    },\n    rangeStartwidth:function(args){\n        let startWidth = this.$refs.startWidth.value;\n        document.getElementById('rangeStartWidth').innerHTML = startWidth.toString();\n        this.$refs.circulargauge.ej2Instances.axes[0].ranges[this.$refs.selectRange.ej2Instances.value].startWidth = startWidth;\n        this.$refs.circulargauge.ej2Instances.axes[0].pointers[0].animation.enable = false; \n        this.$refs.circulargauge.ej2Instances.refresh();\n    },\n    rangeEndwidth:function(args){\n        let endWidth = this.$refs.endWidth.value;\n        document.getElementById('rangeEndWidth').innerHTML = endWidth.toString();\n        this.$refs.circulargauge.ej2Instances.axes[0].ranges[this.$refs.selectRange.ej2Instances.value].endWidth = endWidth;\n        this.$refs.circulargauge.ej2Instances.axes[0].pointers[0].animation.enable = false;\n        this.$refs.circulargauge.ej2Instances.refresh();\n    },\n    roundedRadius:function(args){\n        let cotainerObj=document.getElementById('range-container');\n        let listObj=document.getElementById('rangeSelect');     \n        let radius = parseInt((document.getElementById('radius')).value, 10);\n        document.getElementById('roundedRadius').innerHTML = radius.toString();\n        cotainerObj.ej2_instances[0].axes[0].ranges[+listObj.ej2_instances[0].value].roundedCornerRadius = radius;\n        cotainerObj.ej2_instances[0].axes[0].pointers[0].animation.enable = false;\n        cotainerObj.ej2_instances[0].refresh();\n    },\n    changeRangefont:function(args){\n        let useRangeColor = args.checked;\n        this.$refs.circulargauge.ej2Instances.axes[0].labelStyle.useRangeColor = useRangeColor;\n        this.$refs.circulargauge.ej2Instances.axes[0].majorTicks.useRangeColor = useRangeColor;\n        this.$refs.circulargauge.ej2Instances.axes[0].minorTicks.useRangeColor = useRangeColor;\n        this.$refs.circulargauge.ej2Instances.axes[0].pointers[0].animation.enable = false; \n        this.$refs.circulargauge.ej2Instances.refresh();\n    }\n  }\n}\n</script>","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-vue-circulargauge\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}