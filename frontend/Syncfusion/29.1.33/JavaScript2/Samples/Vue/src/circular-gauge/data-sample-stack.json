{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<main><div>\n    <div class=\"control-section\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\">\n                        <ejs-circulargauge :load='load' :background='background' style='display:block; height:230px' align='center' id='gauge1'>\n                            <template v-slot:firstImageTemplate=\"{}\">\n                                <div class='templateWrap'><img src='https://ej2.syncfusion.com/vue/demos/src/circular-gauge/images/positive.png' alt='Positive value for Germany'/>&nbsp;&nbsp;<p class=\"gauge_text\">{{value1}}%</p></div>\n                            </template>\n                            <template v-slot:firstTextTemplate=\"{}\">\n                                <div style=\"color:#9E9E9E;font-size:16px;font-family:Segoe UI\">Germany</div>\n                            </template>\n                            <e-axes>\n                                <e-axis :startAngle='gauge1startAngle' :endAngle='gauge1endAngle' :majorTicks='gauge1majorTicks' :lineStyle='gauge1lineStyle' :minorTicks='gauge1minorTicks' :labelStyle='gauge1labelStyle' :ranges='gauge1ranges'>\n                                    <e-annotations>\n                                        <e-annotation description='Positive arrow' angle='180' zIndex='1' radius='30%' :content=\"'firstImageTemplate'\"></e-annotation>\n                                        <e-annotation description='Germany' angle='180' zIndex='1' radius='65%' :content=\"'firstTextTemplate'\"></e-annotation>\n                                    </e-annotations>\n                                    <e-pointers>\n                                        <e-pointer :value='value1' :radius='pointerRadius1' :pointerWidth='pointerWidth1' :cap='cap1' :needleTail='needleTail1' :animation='animation1'></e-pointer>\n                                    </e-pointers>\n                                </e-axis>\n                            </e-axes>\n                        </ejs-circulargauge>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <ejs-circulargauge :load='load' :background='background' style='display:block; height:230px' align='center' id='gauge2'>\n                            <template v-slot:twoImageTemplate=\"{}\">\n                                <div class='templateWrap'><img src='https://ej2.syncfusion.com/vue/demos/src/circular-gauge/images/positive.png' alt='Positive value for USA'/>&nbsp;&nbsp;<p class=\"gauge_text\">{{value2}}%</p></div>\n                            </template>\n                            <template v-slot:twoTextTemplate=\"{}\">\n                                <div style=\"color:#9E9E9E;font-size:16px;font-family:Segoe UI\">USA</div>\n                            </template>\n                            <e-axes>\n                                <e-axis :startAngle='gauge2startAngle' :endAngle='gauge2endAngle' :majorTicks='gauge2majorTicks' :lineStyle='gauge2lineStyle' :minorTicks='gauge2minorTicks' :labelStyle='gauge2labelStyle' :ranges='gauge2ranges'>\n                                    <e-annotations>\n                                        <e-annotation description='Positive arrow ' angle='180' zIndex='1' radius='30%' :content=\"'twoImageTemplate'\"></e-annotation>\n                                        <e-annotation description='USA' angle='180' zIndex='1' radius='65%' :content=\"'twoTextTemplate'\"></e-annotation>\n                                    </e-annotations>\n                                    <e-pointers>\n                                        <e-pointer :value='value2' :radius='pointerRadius2' :pointerWidth='pointerWidth2' :cap='cap2' :needleTail='needleTail2' :animation='animation2'></e-pointer>\n                                    </e-pointers>\n                                </e-axis>\n                            </e-axes>\n                        </ejs-circulargauge>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <ejs-circulargauge :load='load' :background='background' style='display:block; height:230px' align='center' id='gauge3'>\n                            <template v-slot:threeImageTemplate=\"{}\">\n                                <div class='templateWrap'><img src='https://ej2.syncfusion.com/vue/demos/src/circular-gauge/images/negative.png' alt='Negative value for UK'/>&nbsp;&nbsp;<p class=\"gauge_text\">{{value3}}%</p></div>\n                            </template>\n                            <template v-slot:threeTextTemplate=\"{}\">\n                                <div style=\"color:#9E9E9E;font-size:16px;font-family:Segoe UI\">UK</div>\n                            </template>\n                            <e-axes>\n                                <e-axis :startAngle='gauge3startAngle' :endAngle='gauge3endAngle' :majorTicks='gauge3majorTicks' :lineStyle='gauge3lineStyle' :minorTicks='gauge3minorTicks' :labelStyle='gauge3labelStyle' :ranges='gauge3ranges'>\n                                    <e-annotations>\n                                        <e-annotation  description='Negative arrow' angle='180' zIndex='1' radius='30%' :content=\"'threeImageTemplate'\"></e-annotation>\n                                        <e-annotation description='UK' angle='180' zIndex='1' radius='65%' :content=\"'threeTextTemplate'\"></e-annotation>\n                                    </e-annotations>\n                                    <e-pointers>\n                                        <e-pointer :value='value3' :radius='pointerRadius3' :pointerWidth='pointerWidth3' :cap='cap3' :needleTail='needleTail3' :animation='animation3'></e-pointer>\n                                    </e-pointers>\n                                </e-axis>\n                            </e-axes>\n                        </ejs-circulargauge>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-sm-12\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <ejs-grid id='grid' :dataSource='data' :load='toolTipInterval1'>\n                            <e-columns>\n                                <e-column field=\"Country\" headerText=\"Country\" width=80 />\n                                <e-column field=\"Sales\" headerText=\"Sales $\" width=80 />\n                                <e-column field=\"Target\" headerText=\"Target $\" width=80 />\n                                <e-column field=\"vsTarget\" headerText=\"vs Target\" width=80 />\n                            </e-columns>\n                        </ejs-grid>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n    <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n        <p>\n            This sample shows live stock price data displayed in multiple circular gauges.\n        </p>\n    </section>\n    <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n        <p>\n            The pointer value in the circular gauge can be dynamically updated using the <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/vue/documentation/api/circular-gauge/#setpointervalue\">setPointerValue</a>\n            method. In this example, the stock price changes across countries are displayed in multiple circular gauges.\n        </p>\n        <p>\n            More information on the circular gauge can be found in this <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/vue/documentation/circular-gauge/getting-started/\"> documentation\n                section</a>.\n        </p>\n    </section>\n</main>\n</template>\n\n<script>\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, PointersDirective, PointerDirective, AnnotationsDirective, AnnotationDirective, Annotations} from \"@syncfusion/ej2-vue-circulargauge\";\nimport { GridComponent, ColumnsDirective, ColumnDirective } from \"@syncfusion/ej2-vue-grids\";\nimport { Query, DataManager } from '@syncfusion/ej2-data';\n\nexport default {\n   data: () => {\n        let value1 = Math.round(Math.random() * (90 - 55) + 55);\n        let value2 = Math.round(Math.random() * (75 - 60) + 60);\n        let value3 = Math.round(Math.random() * (40 - 10) + 10);\n        let gridData1 = 4 * value1;\n        let gridData2 = 6 * value2;\n        let gridData3 = 7 * value3;\n        let orderData = [{\n            'Country': 'Germany',\n            'Sales': 500,\n            'Target': 400,\n            'vsTarget': gridData1\n        }, {\n            'Country': 'USA',\n            'Sales': 1000,\n            'Target': 600,\n            'vsTarget': gridData2\n        }, {\n            'Country': 'UK',\n            'Sales': 600,\n            'Target': 700,\n            'vsTarget': -gridData3\n        }];\n        return {\n            gauge1startAngle: 230,\n            background:'transparent',\n            gauge1endAngle: 130,\n            gauge1majorTicks: {\n                width: 0\n            },\n            gauge1lineStyle: {\n                width: 0\n            },\n            gauge1minorTicks: {\n                width: 0\n            },\n            gauge1labelStyle: {\n\t\t\t    format:'positive {value}',\n                font: {\n                    size: '0'\n                }\n            },\n            gauge1ranges: [{\n                start: 0,\n                end: 50,\n                startWidth: 15,\n                endWidth: 15,\n                color: '#EC121C'\n            }, {\n                start: 50,\n                end: 100,\n                startWidth: 15,\n                endWidth: 15,\n                color: '#45EA0C'\n            }],\n            value1: 75,\n            pointerRadius1: '60%',\n            animation1: {\n                enable: false\n            },\n            pointerWidth1: 5,\n            cap1: {\n                radius: 6,\n                border: {\n                    width: 0\n                }\n            },\n            needleTail1: {\n                length: '25%'\n            },\n            gauge2startAngle: 230,\n            gauge2endAngle: 130,\n            gauge2majorTicks: {\n                width: 0\n            },\n            gauge2lineStyle: {\n                width: 0\n            },\n            gauge2minorTicks: {\n                width: 0\n            },\n            gauge2labelStyle: {\n\t\t\t    format:'positive {value} ',\n                font: {\n                    size: '0'\n                }\n            },\n            gauge2ranges: [{\n                start: 0,\n                end: 50,\n                startWidth: 15,\n                endWidth: 15,\n                color: '#EC121C'\n            }, {\n                start: 50,\n                end: 100,\n                startWidth: 15,\n                endWidth: 15,\n                color: '#45EA0C'\n            }],\n            value2: 60,\n            pointerRadius2: '60%',\n            animation2: {\n                enable: false\n            },\n            pointerWidth2: 5,\n            cap2: {\n                radius: 6,\n                border: {\n                    width: 0\n                }\n            },\n            needleTail2: {\n                length: '25%'\n            },\n            gauge3startAngle: 230,\n            gauge3endAngle: 130,\n            gauge3majorTicks: {\n                width: 0\n            },\n            gauge3lineStyle: {\n                width: 0\n            },\n            gauge3minorTicks: {\n                width: 0\n            },\n            gauge3labelStyle: {\n\t\t\t    format:'negative {value}',\n                font: {\n                    size: '0'\n                }\n            },\n            gauge3ranges: [{\n                start: 0,\n                end: 50,\n                startWidth: 15,\n                endWidth: 15,\n                color: '#EC121C'\n            }, {\n                start: 50,\n                end: 100,\n                startWidth: 15,\n                endWidth: 15,\n                color: '#45EA0C'\n            }],\n            value3: 25,\n            pointerRadius3: '60%',\n            animation3: {\n                enable: false\n            },\n            pointerWidth3: 5,\n            cap3: {\n                radius: 6,\n                border: {\n                    width: 0\n                }\n            },\n            needleTail3: {\n                length: '25%'\n            },\n            data: new DataManager(orderData).executeLocal(new Query().take(15))\n        }\n    },\n    provide: {\n        circulargauge: [Annotations]\n    },\n    components: {\n    'ejs-circulargauge': CircularGaugeComponent,\n    'e-axes': AxesDirective,\n    'e-axis': AxisDirective,\n    'e-pointers': PointersDirective,\n    'e-pointer': PointerDirective,\n    'e-annotations': AnnotationsDirective,\n    'e-annotation': AnnotationDirective,\n    'ejs-grid': GridComponent,\n    'e-columns': ColumnsDirective,\n    'e-column': ColumnDirective\n   },\n    methods: {\n        load: function (args) {\n            /* custom code start */\n            let selectedTheme = location.hash.split(\"/\")[1];\n            selectedTheme = selectedTheme ? selectedTheme : \"Material\";\n            args.gauge.theme =\n                (selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            /* custom code end */\n        },\n        toolTipInterval1: function () {\n            setInterval(function () {\n                let germany = document.getElementById('gauge1');\n                let usa = document.getElementById('gauge2');\n                let uk = document.getElementById('gauge3');\n                let grid = document.getElementById('grid');\n                if (grid) {\n                    let value1 = Math.round(Math.random() * (90 - 55) + 55);\n                    let value2 = Math.round(Math.random() * (75 - 60) + 60);\n                    let value3 = Math.round(Math.random() * (40 - 10) + 10);\n                    let gridData1 = 4 * value1;\n                    let gridData2 = 6 * value2;\n                    let gridData3 = 7 * value3;\n                    let orderData = [{\n                        'Country': 'Germany',\n                        'Sales': 500,\n                        'Target': 400,\n                        'vsTarget': gridData1\n                    }, {\n                        'Country': 'USA',\n                        'Sales': 1000,\n                        'Target': 600,\n                        'vsTarget': gridData2\n                    }, {\n                        'Country': 'UK',\n                        'Sales': 600,\n                        'Target': 700,\n                        'vsTarget': -gridData3\n                    }];\n                    let data = new DataManager(orderData).executeLocal(new Query().take(3));\n                    grid.ej2_instances[0].dataSource = data;\n                    grid.ej2_instances[0].refresh();\n                    germany.ej2_instances[0].axes[0].pointers[0].animation.enable = true;\n                    usa.ej2_instances[0].axes[0].pointers[0].animation.enable = true;\n                    uk.ej2_instances[0].axes[0].pointers[0].animation.enable = true;\n                    germany.ej2_instances[0].setPointerValue(0, 0, value1);\n                    usa.ej2_instances[0].setPointerValue(0, 0, value2);\n                    uk.ej2_instances[0].setPointerValue(0, 0, value3);\n                    germany.ej2_instances[0].setAnnotationValue(0, 0, \"<div style='display: inline;margin-left: -10px;'><img style='width: 16px; height: 16px; display: inline-block; vertical-align: middle;' src='https://ej2.syncfusion.com/vue/demos/src/circular-gauge/images/positive.png' alt='Positive value for Germany'/>&nbsp;&nbsp;<p style='display: inline-block; vertical-align: sub; font-size:20px; font-family:Roboto;'>${pointers[0].value}%</p></div>\");\n                    usa.ej2_instances[0].setAnnotationValue(0, 0, \"<div style='display: inline;margin-left: -10px;'><img style='width: 16px; height: 16px;display: inline-block; vertical-align: middle;' src='https://ej2.syncfusion.com/vue/demos/src/circular-gauge/images/positive.png' alt='Positive value for USA'/>&nbsp;&nbsp;<p style='display: inline-block; vertical-align: sub; font-size:20px; font-family:Roboto;'>${pointers[0].value}%</p></div>\");\n                    uk.ej2_instances[0].setAnnotationValue(0, 0, \"<div style='display: inline;margin-left: -10px;'><img style='width: 16px; height: 16px; display: inline-block; vertical-align: middle;' src='https://ej2.syncfusion.com/vue/demos/src/circular-gauge/images/negative.png' alt='Negative value for UK'/>&nbsp;&nbsp;<p style='display: inline-block; vertical-align: sub; font-size:20px; font-family:Roboto;'>-${pointers[0].value}%</p></div>\");\n                } else {\n                    clearInterval(this.toolTipInterval1);\n                }\n            }, 2000)\n        }\n    }\n}\n</script>\n<style scoped>\n.templateWrap {\n    display: inline;\n    margin-left: -10px;\n}\n.templateWrap img {\n    width: 16px;\n    height: 16px; \n    margin-top: 4px; \n    display: inline-block; \n    vertical-align: middle;\n}\n.gauge_text {\n    display: inline-block; \n    vertical-align: sub; \n    color:#424242; \n    font-size:20px; \n    font-family:inherit;\n}\n</style>","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-vue-circulargauge\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-vue-grids\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}