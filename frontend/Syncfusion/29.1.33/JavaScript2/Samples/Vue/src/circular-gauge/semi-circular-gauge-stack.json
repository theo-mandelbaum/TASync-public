{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n    <main><div>\n      <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\" align='center'>\n            <ejs-circulargauge ref=\"circulargauge\" :background='background' style='display:block' align='center' :load='load' id='semi-container' :moveToCenter='false' :centerX='centerX' :centerY='centerY'>\n                <e-axes>\n                    <e-axis :startAngle='startAngle' :endAngle='endAngle' :lineStyle='lineStyle' :labelStyle='labelStyle' :majorTicks='majorTicks' :minorTicks='minorTicks' :radius='radius1' :hideIntersectingLabel='true' minimum=0 maximum=100 >\n                        <e-pointers>\n                           <e-pointer :value='value' :radius='pointerRadius' :pointerWidth='pointerWidth' :animation='animation' :cap='cap' :needleTail=\"needleTail\"></e-pointer>\n                        </e-pointers>\n                    </e-axis>\n                </e-axes>\n            </ejs-circulargauge>\n      </div>\n    </div>\n    <br>\n    <div class=\"col-md-4 property-section\">\n        <table role=\"none\" id=\"property\" title=\"Properties\" style=\"width: 100%; margin-left: -20px;\">\n          <colgroup>\n             <col span=\"1\" style=\"width: 50%;\">\n             <col span=\"1\" style=\"width: 30%;\">\n             <col span=\"1\" style=\"width: 20%;\">\n          </colgroup>\n          <tbody>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div style=\"font-size: 14px\">Start Angle </div>\n                </td>\n                <td>\n                    <div style=\"width: 95%;\">\n                        <input type=\"range\" v-on:pointermove=\"angleStart\" v-on:touchmove=\"angleStart\" v-on:change=\"angleStart\" id=\"startangle\" value=\"270\" min=\"0\" max=\"360\" />\n                    </div>\n                </td>\n                <td style=\"padding-top: 10px; text-align: center;\">\n                <div style=\"width: 25px;\">\n                    <span id='rangeStart' style=\"margin-left: -10px;font-size: 14px;\">270°</span>\n                    </div>\n                </td>\n            </tr>\n                 <tr style=\"height: 50px\">\n                <td>\n                    <div style=\"font-size: 14px\">End Angle</div>\n                </td>\n                <td>\n                    <div style=\"width: 95%\">\n                        <input type=\"range\" v-on:pointermove=\"angleEnd\" v-on:touchmove=\"angleEnd\" v-on:change=\"angleEnd\" id=\"end\" value=\"90\" min=\"0\" max=\"360\"  />\n                    </div>\n                </td>\n                <td style=\"padding-top: 10px; text-align: center;\">\n                <div style=\"width: 25px\">\n                    <span id='rangeEnd' style=\"margin-left: -10px;font-size: 14px;\">90°</span>\n                    </div>\n                </td>\n            </tr>\n                 <tr style=\"height: 50px\">\n                <td>\n                    <div style=\"font-size: 14px\">Radius</div>\n                </td>\n                <td>\n                    <div style=\"width: 95%\">\n                        <input type=\"range\" v-on:pointermove=\"gaugeRadius\" v-on:touchmove=\"gaugeRadius\" v-on:change=\"gaugeRadius\" id=\"radius\" value=\"100\" min=\"30\" max=\"100\"  />\n                    </div>\n                </td>\n                <td style=\"text-align: center;\">\n                 <div style=\"width: 25px\">\n                    <span id='radius1' style=\"margin-left: -10px;font-size: 14px;\">100%</span>\n                    </div>\n                </td>\n            </tr>\n                 <tr style=\"height: 50px\">\n                <td>\n                    <div style=\"width: 90%;font-size: 14px;margin-top: -5px;\"> Radius based on angle</div>\n                </td>\n                <td>\n                    <div style=\"padding-top: 6px; margin-left: -10px;\">\n                        <ejs-checkbox ref=\"angle\" id=\"angle\" :change=\"onChange\"></ejs-checkbox>\n                    </div>\n                </td>\n            </tr>\n                   <tr style=\"height: 50px\">\n                <td>\n                    <div style=\"font-size: 14px\">Center X</div>\n                </td>\n                <td>\n                    <div style=\"width: 95%\">\n                        <input type=\"range\" id=\"centerX\" v-on:pointermove=\"gaugeCenterX\" v-on:touchmove=\"gaugeCenterX\" v-on:change=\"gaugeCenterX\" value=\"50\" min=\"0\" max=\"100\"  />\n                    </div>\n                </td>\n                <td style=\"text-align: center;\">\n                 <div style=\"width: 25px\">\n                    <span id='center1' style=\"margin-left: -10px;font-size: 14px;\">50%</span>\n                    </div>\n                </td>\n            </tr>\n                <tr style=\"height: 50px\">\n                <td>\n                    <div style=\"font-size: 14px\">Center Y</div>\n                </td>\n                <td>\n                    <div style=\"width: 95%\">\n                        <input type=\"range\" v-on:pointermove=\"gaugeCenterY\" v-on:touchmove=\"gaugeCenterY\" v-on:change=\"gaugeCenterY\" id=\"centerY\" value=\"50\" min=\"0\" max=\"100\"  />\n                    </div>\n                </td>\n                 <td style=\"text-align: center;\">\n                  <div style=\"width: 25px\">\n                    <span id='center2' style=\"margin-left: -10px;font-size: 14px;\">50%</span>\n                    </div>\n                </td>\n            </tr>\n           <tr style=\"height: 50px\">\n                <td>\n                    <div style=\"width: 90%;font-size: 14px;margin-top: -5px;\"> Hide Intersecting Labels</div>\n                </td>\n                <td>\n                    <div style=\"padding-top: 6px; margin-left: -10px;\">\n                        <ejs-checkbox checked=\"true\" ref=\"Hide\" id=\"label\" :change=\"hideLabel\"></ejs-checkbox>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n<section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n    <p>\n        This sample shows how to create semi-circular or quarter-circular gauges by modifying a circular gauge with\n        different start and end angles.\n    </p>\n</section>\n<section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n    <p>\n        In this example, a circular gauge is rendered with different start and end angles to create semi-circular or\n        quarter-circular gauges. The radius, start angle, end angle, and center position of the circular gauge can all\n        be customized using the options in the properties panel.\n    </p>\n    <p>\n        More information on the semi-circular or quarter-circular gauges can be found in this <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/circular-gauge/gauge-appearance#radius-calculation-based-on-angles\">documentation\n            section</a>.\n    </p>\n</section>\n</main>\n</template>\n<script>\n\nimport { CircularGaugeComponent, Annotations, AxesDirective, AxisDirective, PointerDirective, PointersDirective } from \"@syncfusion/ej2-vue-circulargauge\";\nimport { CheckBoxComponent } from \"@syncfusion/ej2-vue-buttons\";\n\nexport default {\ndata:function(){\n    return{\n            centerX:'50%',\n            centerY:'50%',\n            startAngle: 270,\n            background:'transparent',\n            endAngle: 90,\n            lineStyle: { width: 3},\n            labelStyle: {\n                 position: 'Outside', autoAngle: true,\n                font: { fontWeight: 'normal', fontFamily: 'inherit' },\n                format:'{value}%'\n            },\n            majorTicks: {\n                position: 'Inside', width: 2, height: 15, interval: 10\n            },\n            minorTicks: {\n                position: 'Inside', height: 8, width: 1, interval: 2\n            },\n            radius1: '100%',\n            pointerWidth: 7,            \n            pointerRadius: '75%',\n            value: 30,\n            animation: { enable: false },\n            cap: { radius: 8, border: { width: 0 } },\n            needleTail: { length: '13%'}\n    }\n},\ncomponents: {\n    'ejs-circulargauge': CircularGaugeComponent,\n    'e-axis': AxisDirective,\n    'e-axes': AxesDirective,\n    'e-pointer': PointerDirective,\n    'e-pointers': PointersDirective,\n    'ejs-checkbox': CheckBoxComponent\n},\nprovide: {\n    circulargauge: [Annotations]\n},\nmethods: {\n    angleStart:function(){\n      let min = parseInt(document.getElementById('startangle').value, 10);\n      document.getElementById('rangeStart').innerHTML = min + '°';\n      this.$refs.circulargauge.ej2Instances.axes[0].startAngle = min;\n      this.$refs.circulargauge.ej2Instances.refresh();\n    },\n    angleEnd:function(){\n      let max = parseInt(document.getElementById('end').value, 10);\n      document.getElementById('rangeEnd').innerHTML = max + '°';\n      this.$refs.circulargauge.ej2Instances.axes[0].endAngle = max;\n      this.$refs.circulargauge.ej2Instances.refresh();\n    },\n    gaugeRadius:function(){\n      let max = parseInt(document.getElementById('radius').value, 10);\n      document.getElementById('radius1').innerHTML = max + '%';\n      this.$refs.circulargauge.ej2Instances.axes[0].radius = '' + max + '%';\n      this.$refs.circulargauge.ej2Instances.refresh();\n    },\n    gaugeCenterX:function(){\n      let checkbox = this.$refs.angle.ej2Instances;\n      if(!checkbox.checked) {\n         let max = parseInt(document.getElementById('centerX').value, 10);\n         document.getElementById('center1').innerHTML = max + '%';\n         this.$refs.circulargauge.ej2Instances.centerX = '' + max + '%';\n         this.$refs.circulargauge.ej2Instances.refresh();\n      }      \n    },\n    gaugeCenterY:function(){\n      let checkbox = this.$refs.angle.ej2Instances;\n      if(!checkbox.checked) {\n            let max = parseInt(document.getElementById('centerY').value, 10);\n            document.getElementById('center2').innerHTML = max + '%';\n            this.$refs.circulargauge.ej2Instances.centerY = '' + max + '%';\n            this.$refs.circulargauge.ej2Instances.refresh();\n      }      \n    },\n    onChange: function(args) {\n      let centerX = document.getElementById('centerX');\n      let centerY = document.getElementById('centerY');\n       if (args.checked) {\n            this.$refs.circulargauge.ej2Instances.centerX = null;\n            this.$refs.circulargauge.ej2Instances.centerY = null;\n            this.$refs.circulargauge.ej2Instances.moveToCenter = true;\n            centerX.disabled = true;\n            centerY.disabled = true;\n        } else {\n             this.$refs.circulargauge.ej2Instances.centerX = centerX.value + '%';\n             this.$refs.circulargauge.ej2Instances.centerY = centerY.value + '%';\n             centerX.disabled = false;\n             centerY.disabled = false;\n             this.$refs.circulargauge.ej2Instances.moveToCenter = false;\n        }\n        this.$refs.circulargauge.ej2Instances.refresh();\n    },\n    hideLabel: function(args) {\n        this.$refs.circulargauge.ej2Instances.axes[0].hideIntersectingLabel = args.checked;\n        this.$refs.circulargauge.ej2Instances.refresh();\n    },\n    load: function(args) {\n     /* custom code start */\n      let selectedTheme = location.hash.split(\"/\")[1];\n      selectedTheme = selectedTheme ? selectedTheme : \"Material\";\n      args.gauge.theme =\n        (selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n      /* custom code end */\n    }\n}\n}\n</script>\n\n","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-vue-circulargauge\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}