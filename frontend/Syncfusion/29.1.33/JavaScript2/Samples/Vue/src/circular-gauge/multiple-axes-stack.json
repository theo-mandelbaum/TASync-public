{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<main><div>\n    <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\">\n            <ejs-circulargauge ref=\"circulargauge\" :load='load' :background='background' style='display:block' align='center' id='axis-container'>\n                <e-axes>\n                    <e-axis :radius='gaugeradius' :startAngle='startAngle' minimum=0  maximum=160 :endAngle='endAngle' :majorTicks='majorTicks' :lineStyle='lineStyle' :minorTicks='minorTicks' :labelStyle='labelStyle'>\n                        <e-pointers>\n                           <e-pointer :value='value' :radius='pointerRadius'  :markerHeight='markerHeight' :markerWidth='markerWidth' :type='type' :markerShape='markerShape'></e-pointer>\n                        </e-pointers>\n                    </e-axis>\n                    <e-axis :radius='gaugeradius2' :startAngle='startAngle2' minimum=0  maximum=240 :endAngle='endAngle2' :majorTicks='majorTicks2' :lineStyle='lineStyle2' :minorTicks='minorTicks2' :labelStyle='labelStyle2'>\n                        <e-pointers>\n                           <e-pointer :value='value2' :radius='pointerRadius2' :color='color2' :markerHeight='markerHeight2' :markerWidth='markerWidth2' :type='type2' :markerShape='markerShape2'></e-pointer>\n                        </e-pointers>\n                    </e-axis>\n                </e-axes>\n            </ejs-circulargauge>\n        </div>\n    </div>\n    <br>\n    <div class=\"col-md-4 property-section\">\n        <table id=\"property\" role=\"none\" title=\"Properties\" style=\"width: 100%; margin-left: -20px;\">\n        <colgroup>\n             <col span=\"1\" style=\"width: 30%;\">\n             <col span=\"1\" style=\"width: 40%;\">\n             <col span=\"1\" style=\"width: 30%;\">\n          </colgroup>\n          <tbody>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div style=\"font-size:14px\"> Axis </div>\n                </td>\n                <td style=\"height: 50px\">\n                    <div style=\"height: 100%\">\n                       <ejs-dropdownlist id='axisIndex' ref=\"axis\" :dataSource='axisindexdata' :fields='axisindexfields' value='0' index=0  :width='axisindexwidth' :change='changeAxisindex'></ejs-dropdownlist>                                        \n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div style=\"font-size:14px\"> Direction </div>\n                </td>\n                <td style=\"height: 50px\">\n                    <div style=\"height: 100%\">\n                       <ejs-dropdownlist id='axisDirection' ref=\"direction\" :dataSource='axisdirectiondata' index=0  :width='axisdirectionwidth' :change='changeAxisdirection'></ejs-dropdownlist>                                                          \n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div style=\"font-size:14px\"> Start Angle</div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" ref=\"start\" id=\"startAngle\" value=\"220\" min=\"0\" max=\"360\" v-on:change=\"startAnglechange\" style=\"width: 70%;\" />\n                    </div>\n                </td>\n                <td style=\"text-align: center;\">\n                    <span  id='start' style=\"margin-left: -30px;font-size: 14px;\">220</span> \n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div style=\"font-size:14px\"> End Angle</div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" ref=\"end\" id=\"endAngle\" value=\"140\" min=\"0\" max=\"360\" v-on:change=\"endAnglechange\" style=\"width: 70%;\"  />\n                    </div>\n                </td>\n                <td style=\"text-align: center;\">\n                    <span  id='end' style=\"margin-left: -30px;font-size: 14px;\">140</span> \n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n<section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n    <p>\n        This sample illustrates the multiple axes in the circular gauge as well as the options for changing the\n        direction, start, and end angle of an axis.\n    </p>\n</section>\n\n<section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n    <p>\n        In this example, you can see how to render and configure multiple axes in the circular gauge. To render multiple\n        axes in the circular gauge, use the axes collection, and each axis can be customized with pointers and ticks.\n    </p>\n    <p>\n        More information on the multiple axes can be found in this <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/circular-gauge/gauge-axes/#multiple-axes\">documentation\n            section</a>.\n    </p>\n</section>\n</main>\n</template>\n    <style scoped>\n.property-panel-content td {\n    padding-top: 0px;\n}\n</style>\n<script>\n\nimport { CircularGaugeComponent, isCompleteAngle, AxesDirective, AxisDirective, PointersDirective, PointerDirective } from \"@syncfusion/ej2-vue-circulargauge\";\nimport { DropDownListComponent } from '@syncfusion/ej2-vue-dropdowns';\n\nexport default {\ndata:function(){\n    return{\n        lineStyle: { width: 1.5 },\n        background:'transparent',\n        gaugeradius: '93%',\n        labelStyle: {\n                position: 'Inside', autoAngle: true,\n                hiddenLabel: 'None', \n                font: { fontFamily: 'inherit' }\n        }, majorTicks: {\n                position: 'Inside',\n                width: 2, height: 10\n        }, minorTicks: {\n                position: 'Inside', width: 2,\n                height: 5\n        },\n        startAngle: 220, endAngle: 140,\n        value: 80, pointerRadius: '100%',\n        markerHeight: 15, markerWidth: 15, type: 'Marker',\n        markerShape: 'Triangle',\n        lineStyle2: { width: 1.5, color: '#E84011' }, gaugeradius2: '93%',\n        labelStyle2: {\n                position: 'Outside', autoAngle: true,\n                hiddenLabel: 'None', font: { fontFamily: 'inherit' }\n        }, majorTicks2: {\n                position: 'Outside', width: 2, height: 10,\n                color: '#E84011'\n        }, minorTicks2: {\n                position: 'Outside', width: 2,\n                height: 5, color: '#E84011'\n        },\n        startAngle2: 220, endAngle2: 140,\n        value2: 120, pointerRadius2: '100%', color2: '#C62E0A',\n        markerHeight2: 15, markerWidth2: 15, type2: 'Marker',\n        markerShape2: 'InvertedTriangle',\n        axisindexdata:[\n            { Id:'0', level:'Axis 1'},\n            { Id:'1', level:'Axis 2'}],\n        axisindexfields:{ text: 'level', value: 'Id' },\n        axisindexwidth:'115%',\n        axisdirectiondata:['Clockwise','Anti-clockwise'],\n        axisdirectionwidth:'115%'\n       }\n    },\n    components: {\n    'ejs-circulargauge': CircularGaugeComponent,\n    'e-axis': AxisDirective,\n    'e-axes': AxesDirective,\n    'e-pointer': PointerDirective,\n    'e-pointers': PointersDirective,\n    'ejs-dropdownlist': DropDownListComponent,\n   },\n   methods: { \n    changeAxisindex:function(){\n            let axisIndex = parseInt(this.$refs.axis.ej2Instances.value);\n            axisIndex = this.$refs.axis.ej2Instances.value;\n            this.$refs.direction.ej2Instances.value = this.$refs.circulargauge.ej2Instances.axes[axisIndex].direction == \"ClockWise\" ? \"Clockwise\" : \"Anti-clockwise\";\n            let startAngle = this.$refs.circulargauge.ej2Instances.axes[axisIndex].startAngle;\n            let endAngle = this.$refs.circulargauge.ej2Instances.axes[axisIndex].endAngle;\n            document.getElementById('start').innerHTML = startAngle.toString();;\n            document.getElementById('end').innerHTML = endAngle.toString();;\n            (document.getElementById('startAngle')).value = startAngle.toString();\n            (document.getElementById('endAngle')).value = endAngle.toString();        \n    },\n    changeAxisdirection: function(){\n             let axisIndex = parseInt(this.$refs.axis.ej2Instances.value); \n            this.$refs.circulargauge.ej2Instances.axes[axisIndex].direction = this.$refs.direction.ej2Instances.value.toString() == \"Clockwise\" ? \"ClockWise\" : \"AntiClockWise\" ;\n            this.$refs.circulargauge.ej2Instances.axes[0].pointers[0].animation.enable = false;\n            this.$refs.circulargauge.ej2Instances.axes[1].pointers[0].animation.enable = false;\n            this.$refs.circulargauge.ej2Instances.refresh();        \n    },\n    startAnglechange:function(){\n            let axisIndex = parseInt(this.$refs.axis.ej2Instances.value);           \n            let value = parseInt((document.getElementById('startAngle')).value, 10);\n            this.$refs.circulargauge.ej2Instances.axes[0].pointers[0].animation.enable = false;\n            this.$refs.circulargauge.ej2Instances.axes[1].pointers[0].animation.enable = false;\n            this.$refs.circulargauge.ej2Instances.axes[axisIndex].startAngle = value;\n            document.getElementById('start').innerHTML = value.toString();;\n            this.$refs.circulargauge.ej2Instances.axes[axisIndex].labelStyle.hiddenLabel =\n                isCompleteAngle(this.$refs.circulargauge.ej2Instances.axes[axisIndex].startAngle, this.$refs.circulargauge.ej2Instances.axes[axisIndex].endAngle) ?\n                    'First' : 'None';\n            this.$refs.circulargauge.ej2Instances.refresh();        \n    },\n    endAnglechange:function(){\n            let axisIndex = parseInt(this.$refs.axis.ej2Instances.value);       \n            let value = parseInt((document.getElementById('endAngle')).value, 10);\n            this.$refs.circulargauge.ej2Instances.axes[0].pointers[0].animation.enable = false;\n            this.$refs.circulargauge.ej2Instances.axes[1].pointers[0].animation.enable = false;\n            this.$refs.circulargauge.ej2Instances.axes[axisIndex].endAngle = value;\n            document.getElementById('end').innerHTML =value.toString();;\n            this.$refs.circulargauge.ej2Instances.axes[axisIndex].labelStyle.hiddenLabel =\n                isCompleteAngle(this.$refs.circulargauge.ej2Instances.axes[axisIndex].startAngle, this.$refs.circulargauge.ej2Instances.axes[axisIndex].endAngle) ?\n                    'First' : 'None';\n            this.$refs.circulargauge.ej2Instances.refresh();        \n    },\n    load: function(args) {\n    /* custom code start */\n      let selectedTheme = location.hash.split(\"/\")[1];\n      selectedTheme = selectedTheme ? selectedTheme : \"Material\";\n      args.gauge.theme =\n        (selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n    /* custom code end */\n    }\n}\n}\n</script>","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-vue-circulargauge\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}