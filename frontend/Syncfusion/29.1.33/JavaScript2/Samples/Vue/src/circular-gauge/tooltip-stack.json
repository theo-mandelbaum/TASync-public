{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n <main><div>\n    <div class=\"control-section\">\n        <ejs-circulargauge ref=\"circulargauge\" :animationDuration=2000 :background='background' style='display:block' :load='load' align='center' id='tooltip-container' :enablePointerDrag='enablePointerDrag' :dragEnd='dragEnd' :tooltip='tooltip'>\n            <e-axes>\n                <e-axis :radius='gaugeradius' :startAngle='startAngle' minimum=0 maximum=120 :endAngle='endAngle' :majorTicks='majorTicks' :lineStyle='lineStyle' :minorTicks='minorTicks' :labelStyle='labelStyle' :ranges='ranges'>\n                    <e-pointers>\n                       <e-pointer :value='value' :cap='cap' :radius='pointerRadius' :color='color' :animation='animation'></e-pointer>\n                    </e-pointers>\n                </e-axis>\n            </e-axes>\n        </ejs-circulargauge>\n    </div>\n</div>\n<section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n    <p>\n        This sample helps in visualizing the tooltip of the pointer and the range in a circular gauge.\n    </p>\n</section>\n<section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n    <p>\n        In this example, you can see how to display the tooltip for the pointer and the range in a circular gauge. The <a target=\"_blank\" href=\"https://ej2.syncfusion.com/vue/documentation/api/circular-gauge/tooltipSettings/\">tooltip</a> settings is used to enable and customize the tooltip. To see the tooltip in action, hover your mouse over the pointer or the range, or tap them on touch-enabled devices.\n    </p>\n    <p>\n        More information on the tooltip can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/vue/documentation/circular-gauge/gauge-user-interaction/\">documentation section</a>.\n    </p>\n</section>\n</main>\n</template>\n<script>\n\nimport {CircularGaugeComponent, GaugeTooltip, PointersDirective, PointerDirective, AxisDirective, AxesDirective } from \"@syncfusion/ej2-vue-circulargauge\";\n\nexport default {\n    data: function () {\n        return {\n            gaugeradius: '90%',\n            startAngle: 240,\n            endAngle: 120,\n            background:'transparent',\n            lineStyle: {\n                width: 0\n            },\n            majorTicks: {\n                color: 'white',\n                offset: -3.7,\n                height: 10\n            },\n            minorTicks: {\n                width: 0\n            },\n            labelStyle: {\n                useRangeColor: true,\n                font: {\n                    color: '#424242',\n                    size: '13px',\n                    fontFamily: 'Segoe UI'\n                }\n            },\n            value: 70,\n            pointerRadius: '60%',\n            color: '#33BCBD',\n            cap: {\n                radius: 10,\n                border: {\n                    color: '#33BCBD',\n                    width: 5\n                }\n            },\n            animation: {\n                enable: true,\n                duration: 1500\n            },\n            ranges: [{\n                start: 0,\n                end: 50,\n                startWidth: 10,\n                endWidth: 10,\n                radius: '102%',\n                color: '#3A5DC8',\n            }, {\n                start: 50,\n                end: 120,\n                radius: '102%',\n                startWidth: 10,\n                endWidth: 10,\n                color: '#33BCBD',\n            }],\n            tooltip: {\n                enable: true,\n                type: ['Range', 'Pointer'],\n                        showAtMousePosition: true,\n                format: 'Current Value:  {value}',\n                enableAnimation: false,\n                textStyle: {\n                    size: '13px',\n                    fontFamily: 'inherit'\n                },\n                rangeSettings: {\n                    showAtMousePosition: true, format: \"Start Value: {start} <br/> End Value: {end}\", \n                    textStyle: {\n                        size: '13px',\n                        fontFamily: 'inherit'\n                    }\n                }\n            },\n            enablePointerDrag: true\n        }\n    },\n    components: {\n    'ejs-circulargauge': CircularGaugeComponent,\n    'e-axis': AxisDirective,\n    'e-axes': AxesDirective,\n    'e-pointer': PointerDirective,\n    'e-pointers': PointersDirective,\n    },\n    provide: {\n        circulargauge: [GaugeTooltip]\n    },\n    methods: {\n        dragEnd: function (args) {\n        if (args.currentValue >= 0 && args.currentValue <= 50) {\n            args.pointer.color = '#3A5DC8';\n            args.pointer.cap.border.color = '#3A5DC8';  \n        }\n        else {\n            args.pointer.color = '#33BCBD';\n            args.pointer.cap.border.color = '#33BCBD';\n        }\n\t\targs.pointer.value = args.currentValue;\n        args.pointer.animation.enable = false;\n        this.$refs.circulargauge.ej2Instances.refresh();\n        },\n        load: function (args) {\n            /* custom code start */\n            let selectedTheme = location.hash.split(\"/\")[1];\n            selectedTheme = selectedTheme ? selectedTheme : \"Material\";\n            args.gauge.theme =\n                (selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            }, \n            /* custom code end */                \n        }\n}\n</script>","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-vue-circulargauge\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}