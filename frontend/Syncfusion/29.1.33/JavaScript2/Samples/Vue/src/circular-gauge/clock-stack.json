{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n <main><div>\n    <div class=\"control-section\">\n        <ejs-circulargauge :load='load' :background='background' :resized='resized' ref=\"gauge\" :loaded='loaded' style='display:block' align='center' id='clock'>\n            <e-axes>\n                <e-axis :radius='gaugeRadius' :startAngle='startAngle' :endAngle='endAngle' :majorTicks='majorTicks' :lineStyle='lineStyle' :minorTicks='minorTicks' :minimum=0 :maximum=12 :annotations='annotations' :labelStyle='labelStyle'>\n                    <e-pointers>\n                    <e-pointer :value='value1' :radius='pointerRadius1'  :pointerWidth='pointerWidth' :cap='cap' :needleTail='needleTail' :needleStartWidth='needleStartWidth1' :animation='animation'></e-pointer>\n                    <e-pointer :value='value2' :radius='pointerRadius2'  :pointerWidth='pointerWidth' :cap='cap' :needleTail='needleTail' :needleStartWidth='needleStartWidth' :animation='animation'></e-pointer>\n                    <e-pointer :value='value3' :radius='pointerRadius3'  :pointerWidth='pointerWidth' :cap='cap' :needleTail='needleTail1' :color='pointerColor' :animation='animation' :needleStartWidth='needleStartWidth'></e-pointer>\n                    </e-pointers>\n                </e-axis>\n            </e-axes>\n        </ejs-circulargauge>\n    </div>\n</div>\n <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n    <p>\n        This sample demonstrates how to create an analog clock that displays the time.\n    </p>\n  </section>\n<section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n    <p>\n        In this example, a clock has been created by adding axis, minor ticks, major ticks, and needles in a circular\n        gauge and customizing it accordingly. In addition, the clock ticks, displaying the time in a lively manner.\n    </p>\n    <p>\n        More information on the circular gauge can be found in this <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/circular-gauge/getting-started/\">documentation\n            section</a>.\n    </p>\n</section>\n</main>\n</template>\n<script>\n\nimport { CircularGaugeComponent, AxesDirective, CircularGauge, AxisDirective, Annotations, PointerDirective, PointersDirective } from \"@syncfusion/ej2-vue-circulargauge\";\nexport default {\n   data:function(){\n    return{\n            annotationGaugeOne: CircularGaugeComponent,\n            annotationGaugeTwo: CircularGaugeComponent,\n            gaugeRadius: '90%',\n            background:'transparent',\n            startAngle: 0,\n            endAngle: 0,\n            majorTicks: {\n                width: 2,\n                height:15,\n                interval:1,\n                offset:5\n            },\n            lineStyle: { width: 2 },\n            minorTicks: {\n                width: 1,\n                height:10,\n                interval:0.2,\n                offset:5\n            },\n            labelStyle: {\n                font: {\n                    fontFamily: 'inherit',\n                },\n                offset: 10,\n                hiddenLabel:'First'\n            },\n            value1: 10.2,\n            value2:2,\n            value3:12,\n            pointerRadius1: '70%',\n            pointerRadius2: '100%',\n            pointerRadius3: '90%',\n            pointerWidth: 3,\n            pointerColor:'#00A8B5',\n            needleStartWidth:1,\n            needleStartWidth1:2,\n            cap: {\n                    radius: 5,\n                    color:'white',\n                    border: { width: 1, color:'#00A8B5' }\n            },\n            needleTail: {\n                    length: '0%'\n            },\n            needleTail1: {\n                length: '25%',\n                color:'#00A8B5'\n            },\n            animation: { enable: false },\n            annotations: [{\n                content: '<div id=\"subGaugeOne\" style=\"margin-left: -100%\"></div>',\n                description:'Sub gauge one', radius: '0%', angle: 290, zIndex: '1'\n            }, {\n                content: '<div id=\"subGaugeTwo\" style=\"margin-left: -218%;margin-top: -50%;\"></div>',\n                description:'Sub gauge two', radius: '0%', angle: 90, zIndex: '1'\n            }\n        ],\n    }\n   },\n    components: {\n        'ejs-circulargauge': CircularGaugeComponent,\n        'e-axis': AxisDirective,\n        'e-axes': AxesDirective,\n        'e-pointer': PointerDirective,\n        'e-pointers': PointersDirective,\n    },\n    provide: {\n     circulargauge: [Annotations]\n    },\n    methods: {\n    load: function(args) {\n      /* custom code start */\n      let selectedTheme = location.hash.split(\"/\")[1];\n      selectedTheme = selectedTheme ? selectedTheme : \"Material\";      \n      args.gauge.theme =\n        (selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n      /* custom code end */\n    },\n    resized : function(args)\n    { \n       window.location.reload();\n    },\n    loaded: function(args) {\n    let annotationGaugeOne = new CircularGauge({\n        width: '150px',\n        height: '150px',\n        background: 'transparent',\n        axes: [{\n            labelStyle: { hiddenLabel: 'First', font: { fontFamily: 'inherit', size: '7px' }, offset: -5 },\n            majorTicks: { interval: 2, offset: 2 },\n            minorTicks: { interval: 0.4, offset: 2 }, minimum: 0, maximum: 12,\n            pointers: [{\n                value: 5,\n                radius: '50%', pointerWidth: 2, color: '#00A8B5',\n                animation: { enable: false }, cap: { radius: 0 }, needleTail: { length: '0%' }\n            }],\n            startAngle: 0, endAngle: 0, radius: '70%', lineStyle: { width: 2 }\n        }],\n        load: function(args) {\n            /* custom code start */\n            let selectedTheme = location.hash.split(\"/\")[1];\n            selectedTheme = selectedTheme ? selectedTheme : \"Material\";      \n            args.gauge.theme =\n            (selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            /* custom code end */\n        },\n    });\n    annotationGaugeOne.appendTo('#subGaugeOne');\n\n    let annotationGaugeTwo = new CircularGauge({\n    width: '150px',\n    height: '150px',\n    background: 'transparent',\n    axes: [{\n        labelStyle: { hiddenLabel: 'First', font: { fontFamily: 'inherit', size: '7px' }, offset: -5 },\n        majorTicks: { offset: 2, interval: 2 },\n        minorTicks: { offset: 2, interval: 0.4 }, minimum: 0, maximum: 12,\n        pointers: [{\n            value: 8,\n            radius: '50%', pointerWidth: 2, color: '#00A8B5',\n            animation: { enable: false }, cap: { radius: 0 }, needleTail: { length: '0%' }\n        }], startAngle: 0, endAngle: 0, radius: '70%', lineStyle: { width: 2 }\n    }],\n    load: function(args) {\n      /* custom code start */\n      let selectedTheme = location.hash.split(\"/\")[1];\n      selectedTheme = selectedTheme ? selectedTheme : \"Material\";      \n      args.gauge.theme =\n        (selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n      /* custom code end */\n    } \n});\nannotationGaugeTwo.appendTo('#subGaugeTwo');\n\nlet needlePointer = 0.2;\nlet gaugeData = this.$refs.gauge.ej2Instances;\nlet pointerInterval = setInterval(() => {\n        if (document.getElementById('clock')) {\n            if (needlePointer <= 12) {\n                gaugeData.setPointerValue(0, 2, needlePointer);\n                needlePointer += 0.2;\n            } else {\n                needlePointer = 0.2;\n            }\n        } else {\n            clearInterval(+pointerInterval);\n        }\n    }, 1000)\n  },\n }\n}\n</script>","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-vue-circulargauge\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}