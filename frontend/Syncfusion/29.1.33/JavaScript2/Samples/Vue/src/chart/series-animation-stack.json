{"src/theme-color.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadAccumulationChartTheme = exports.loadChartTheme = exports.pointFluent2HighContrastColors = exports.pointFluent2DarkColors = exports.pointFluent2Colors = exports.pointMaterial3DarkColors = exports.pointMaterial3Colors = exports.pointTailwind3DarkColors = exports.pointTailwind3Colors = exports.pointTailwindDarkColors = exports.pointTailwindColors = exports.pointFluentDarkColors = exports.pointFluentColors = exports.pointBootstrap5DarkColors = exports.pointBootstrap5Colors = exports.pointHighContrastColors = exports.pointBootstrapColors = exports.pointFabricColors = exports.pointMaterialDarkColors = exports.pointMaterialColors = exports.bubbleFluent2DarkColors = exports.bubbleFluent2HighContrastColors = exports.bubbleFluent2Colors = exports.bubbleMaterial3DarkColors = exports.bubbleMaterial3Colors = exports.bubbleTailwind3DarkColors = exports.bubbleTailwind3Colors = exports.bubbleTailwindDarkColors = exports.bubbleTailwindColors = exports.bubblePointFluentDarkColors = exports.bubblePointFluentColors = exports.bubblePointBootstrap5DarkColors = exports.bubblePointBootstrap5Colors = exports.bubblePointHighContrastColors = exports.bubblePointBootstrapColors = exports.bubblePointFabricColors = exports.bubblePointMaterialDarkColors = exports.bubblePointMaterialColors = exports.keyBootstrapdarkColors = exports.keyBootstrap4Colors = exports.keyFabricDark = exports.fluent2HighContrastColors = exports.fluent2DarkColors = exports.fluent2Colors = exports.fluentDarkColors = exports.fluentColors = exports.highContrastColors = exports.bootstrapColors = exports.fabricColors = exports.materialColors = void 0;\nexports.piePointRender = exports.roundedPointRender = exports.roundedCornnerPointRender = exports.donutPointRender = exports.bubblePointRender = exports.pointRenderEvent = exports.accpatternPointRender = exports.funnelPointRender = void 0;\n/**\n * Initialize the Theme colors\n */\nexports.materialColors = ['#00bdae', '#404041', '#357cd2', '#e56590', '#f8b883', '#70ad47', '#dd8abd', '#7f84e8', '#7bb4eb',\n    '#ea7a57', '#404041', '#00bdae'];\nexports.fabricColors = ['#4472c4', '#ed7d31', '#ffc000', '#70ad47', '#5b9bd5',\n    '#c1c1c1', '#6f6fe2', '#e269ae', '#9e480e', '#997300', '#4472c4', '#70ad47', '#ffc000', '#ed7d31'];\nexports.bootstrapColors = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6',\n    '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\nexports.highContrastColors = ['#79ECE4', '#E98272', '#DFE6B6', '#C6E773', '#BA98FF',\n    '#FA83C3', '#00C27A', '#43ACEF', '#D681EF', '#D8BC6E'];\nexports.fluentColors = ['#614570', '#4C6FB1', '#CC6952', '#3F579A', '#4EA09B', '#6E7A89', '#D4515C', '#E6AF5D', '#639751',\n    '#9D4D69'];\nexports.fluentDarkColors = ['#8AB113', '#2A72D5', '#43B786', '#584EC6', '#E85F9C', '#6E7A89', '#EA6266', '#EBA844', '#26BC7A',\n    '#BC4870'];\nexports.fluent2Colors = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n    \"#C19C00\"];\nexports.fluent2DarkColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nexports.fluent2HighContrastColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nexports.keyFabricDark = [\"#4472C4\", \"#ED7D31\", \"#FFC000\", \"#70AD47\"];\nexports.keyBootstrap4Colors = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6', '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\nexports.keyBootstrapdarkColors = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\", \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\", \"#b91c52\"];\nexports.bubblePointMaterialColors = ['rgba(0, 189, 174, 0.5)', \"rgba(64, 64, 65, 0.5)\", \"rgba(53, 124, 210, 0.5)\", \"rgba(229, 101, 144, 0.5)\", \"rgba(248, 184, 131, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(221, 138, 189, 0.5)\",\n    \"rgba(127, 132, 232, 0.5)\", \"rgba(123, 180, 235, 0.5)\", \"rgba(234, 122, 87, 0.5)\", \"rgba(64, 64, 65, 0.5)\", \"rgba(0, 189, 174, 0.5)\"];\nexports.bubblePointMaterialDarkColors = [\"rgba(158, 203, 8, 0.5)\", \"rgba(86, 174, 255, 0.5)\", \"rgba(197, 122, 255, 0.5)\", \"rgba(97, 234, 169, 0.5)\", \"rgba(235, 187, 62, 0.5)\", \"rgba(244, 92, 92, 0.5)\", \"rgba(138, 119, 255, 0.5)\",\n    \"rgba(99, 199, 255, 0.5)\", \"rgba(255, 132, 176, 0.5)\", \"rgba(247, 201, 40, 0.5)\"];\nexports.bubblePointFabricColors = [\"rgba(68, 114, 196, 0.5)\", \"rgba(237, 125, 49, 0.5)\", \"rgba(255, 192, 0, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(91, 155, 213, 0.5)\", \"rgba(193, 193, 193, 0.5)\", \"rgba(111, 111, 226, 0.5)\",\n    \"rgba(226, 105, 174, 0.5)\", \"rgba(158, 72, 14, 0.5)\", \"rgba(153, 115, 0, 0.5)\", \"rgba(68, 114, 196, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(255, 192, 0, 0.5)\", \"rgba(237, 125, 49, 0.5)\"];\nexports.bubblePointBootstrapColors = [\"rgba(161, 110, 229, 0.5)\", \"rgba(247, 206, 105, 0.5)\", \"rgba(85, 165, 194, 0.5)\", \"rgba(125, 223, 30, 0.5)\", \"rgba(255, 110, 166, 0.5)\", \"rgba(121, 83, 172, 0.5)\",\n    \"rgba(185, 155, 79, 0.5)\", \"rgba(64, 124, 146, 0.5)\", \"rgba(94, 167, 22, 0.5)\", \"rgba(185, 28, 82, 0.5)\"];\nexports.bubblePointHighContrastColors = [\"rgba(121, 236, 228, 0.5)\", \"rgba(233, 130, 114, 0.5)\", \"rgba(223, 230, 182, 0.5)\", \"rgba(198, 231, 115, 0.5)\", \"rgba(186, 152, 255, 0.5)\", \"rgba(250, 131, 195, 0.5)\", \"rgba(0, 194, 122, 0.5)\",\n    \"rgba(67, 172, 239, 0.5)\", \"rgba(214, 129, 239, 0.5)\", \"rgba(216, 188, 110, 0.5)\"];\nexports.bubblePointBootstrap5Colors = ['rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)', 'rgba(255, 193, 7, 0.5)', 'rgba(25, 135, 84, 0.5)', 'rgba(13, 202, 240, 0.5)', 'rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)'];\nexports.bubblePointBootstrap5DarkColors = ['rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)', 'rgba(255, 193, 7, 0.5)', 'rgba(25, 135, 84, 0.5)', 'rgba(13, 202, 240, 0.5)', 'rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)'];\nexports.bubblePointFluentColors = [\"rgba(97, 69, 112, 0.5)\", \"rgba(76, 111, 177, 0.5)\", \"rgba(204, 105, 82, 0.5)\", \"rgba(63, 87, 154, 0.5)\", \"rgba(78, 160, 155, 0.5)\", \"rgba(110, 122, 137, 0.5)\", \"rgba(212, 81, 92, 0.5)\",\n    \"rgba(230, 175, 93, 0.5)\", \"rgba(99, 151, 81, 0.5)\", \"rgba(157, 77, 105, 0.5)\"];\nexports.bubblePointFluentDarkColors = [\"rgba(138, 177, 19, 0.5)\", \"rgba(42, 114, 213, 0.5)\", \"rgba(67, 183, 134, 0.5)\", \"rgba(88, 78, 198, 0.5)\", \"rgba(232, 95, 156, 0.5)\", \"rgba(110, 122, 137, 0.5)\", \"rgba(234, 98, 102, 0.5)\",\n    \"rgba(235, 168, 68, 0.5)\", \"rgba(38, 188, 122, 0.5)\", \"rgba(188, 72, 112, 0.5)\"];\nexports.bubbleTailwindColors = [\"rgba(90, 97, 246, 0.5)\", \"rgba(101, 163, 13, 0.5)\", \"rgba(51, 65, 85, 0.5)\", \"rgba(20, 184, 166, 0.5)\", \"rgba(139, 92, 246, 0.5)\", \"rgba(3, 105, 161, 0.5)\", \"rgba(249, 115, 22, 0.5)\",\n    \"rgba(147, 51, 234, 0.5)\", \"rgba(245, 158, 11, 0.5)\", \"rgba(21, 128, 61, 0.5)\"];\nexports.bubbleTailwindDarkColors = [\"rgba(139, 92, 246, 0.5)\", \"rgba(34, 211, 238, 0.5)\", \"rgba(248, 113, 113, 0.5)\", \"rgba(74, 222, 128, 0.5)\", \"rgba(232, 121, 249, 0.5)\", \"rgba(252, 211, 77, 0.5)\", \"rgba(249, 115, 22, 0.5)\",\n    \"rgba(45, 212, 191, 0.5)\", \"rgba(244, 114, 182, 0.5)\", \"rgba(16, 185, 129, 0.5)\"];\nexports.bubbleTailwind3Colors = [\"rgba(47, 64, 116, 0.5)\", \"rgba(3, 180, 180, 0.5)\", \"rgba(13, 114, 222, 0.5)\", \"rgba(255, 87, 51, 0.5)\", \"rgba(214, 51, 132, 0.5)\", \"rgba(243, 156, 18, 0.5)\", \"rgba(239, 41, 31, 0.5)\", \"rgba(145, 200, 34, 0.5)\", \"rgba(47, 64, 116, 0.5)\", \"rgba(3, 180, 180, 0.5)\"];\nexports.bubbleTailwind3DarkColors = [\"rgba(128, 41, 241, 0.5)\", \"rgba(26, 188, 156, 0.5)\", \"rgba(13, 114, 222, 0.5)\", \"rgba(255, 87, 51, 0.5)\", \"rgba(214, 51, 132, 0.5)\", \"rgba(243, 156, 18, 0.5)\", \"rgba(239, 41, 31, 0.5)\", \"rgba(145, 200, 34, 0.5)\", \"rgba(128, 41, 241, 0.5)\", \"rgba(26, 188, 156, 0.5)\"];\nexports.bubbleMaterial3Colors = [\"rgba(99, 85, 199, 0.5)\", \"rgba(0, 174, 224, 0.5)\", \"rgba(255, 180, 0, 0.5)\", \"rgba(247, 82, 63, 0.5)\", \"rgba(150, 60, 112, 0.5)\", \"rgba(253, 116, 0, 0.5)\", \"rgba(75, 224, 188, 0.5)\", \"rgba(33, 150, 245, 0.5)\", \"rgba(222, 61, 138, 0.5)\", \"rgba(22, 47, 136, 0.5)\"];\nexports.bubbleMaterial3DarkColors = [\"rgba(78, 170, 255, 0.5)\", \"rgba(250, 78, 171, 0.5)\", \"rgba(255, 245, 0, 0.5)\", \"rgba(23, 234, 88, 0.5)\", \"rgba(56, 255, 231, 0.5)\", \"rgba(255, 158, 69, 0.5)\", \"rgba(179, 243, 47, 0.5)\", \"rgba(185, 60, 228, 0.5)\", \"rgba(252, 86, 100, 0.5)\", \"rgba(155, 85, 255, 0.5)\"];\nexports.bubbleFluent2Colors = [\"rgba(98, 0, 238, 0.5)\", \"rgba(9, 175, 116, 0.5)\", \"rgba(0, 118, 229, 0.5)\", \"rgba(203, 53, 135, 0.5)\", \"rgba(231, 145, 15, 0.5)\", \"rgba(3, 100, 222, 0.5)\", \"rgba(102, 205, 21, 0.5)\", \"rgba(243, 169, 60, 0.5)\",\n    \"rgba(16, 124, 16, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\nexports.bubbleFluent2HighContrastColors = [\"rgba(155, 180, 73, 0.5)\", \"rgba(42, 114, 213, 0.5)\", \"rgba(67, 183, 134, 0.5)\", \"rgba(63, 87, 154, 0.5)\", \"rgba(88, 78, 198, 0.5)\", \"rgba(232, 95, 156, 0.5)\", \"rgba(110, 122, 137, 0.5)\", \"rgba(234, 98, 102, 0.5)\",\n    \"rgba(11, 106, 11, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\nexports.bubbleFluent2DarkColors = [\"rgba(155, 180, 73, 0.5)\", \"rgba(42, 114, 213, 0.5)\", \"rgba(67, 183, 134, 0.5)\", \"rgba(63, 87, 154, 0.5)\", \"rgba(88, 78, 198, 0.5)\", \"rgba(232, 95, 156, 0.5)\", \"rgba(110, 122, 137, 0.5)\", \"rgba(234, 98, 102, 0.5)\",\n    \"rgba(11, 106, 11, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\nexports.pointMaterialColors = [\"#00bdae\", \"#404041\", \"#357cd2\", \"#e56590\", \"#f8b883\", \"#70ad47\", \"#dd8abd\", \"#7f84e8\", \"#7bb4eb\",\n    \"#ea7a57\", \"#404041\", \"#00bdae\"];\nexports.pointMaterialDarkColors = [\"#9ECB08\", \"#56AEFF\", \"#C57AFF\", \"#61EAA9\", \"#EBBB3E\", \"#F45C5C\", \"#8A77FF\", \"#63C7FF\", \"#FF84B0\",\n    \"#F7C928\"];\nexports.pointFabricColors = [\"#4472c4\", \"#ed7d31\", \"#ffc000\", \"#70ad47\", \"#5b9bd5\", \"#c1c1c1\", \"#6f6fe2\", \"#e269ae\", \"#9e480e\",\n    \"#997300\", \"#4472c4\", \"#70ad47\", \"#ffc000\", \"#ed7d31\"];\nexports.pointBootstrapColors = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\", \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\",\n    \"#b91c52\"];\nexports.pointHighContrastColors = [\"#79ECE4\", \"#E98272\", \"#DFE6B6\", \"#C6E773\", \"#BA98FF\", \"#FA83C3\", \"#00C27A\", \"#43ACEF\", \"#D681EF\",\n    \"#D8BC6E\"];\nexports.pointBootstrap5Colors = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545',\n    '#FFC107', '#198754', '#0DCAF0', '#FD7E14', '#6610F2'];\nexports.pointBootstrap5DarkColors = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545',\n    '#FFC107', '#198754', '#0DCAF0', '#FD7E14', '#6610F2'];\nexports.pointFluentColors = [\"#614570\", \"#4C6FB1\", \"#CC6952\", \"#3F579A\", \"#4EA09B\", \"#6E7A89\", \"#D4515C\", \"#E6AF5D\", \"#639751\",\n    \"#9D4D69\"];\nexports.pointFluentDarkColors = [\"#8AB113\", \"#2A72D5\", \"#43B786\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\", \"#EBA844\", \"#26BC7A\",\n    \"#BC4870\"];\nexports.pointTailwindColors = [\"#5A61F6\", \"#65A30D\", \"#334155\", \"#14B8A6\", \"#8B5CF6\", \"#0369A1\", \"#F97316\", \"#9333EA\", \"#F59E0B\", \"#15803D\"];\nexports.pointTailwindDarkColors = [\"#8B5CF6\", \"#22D3EE\", \"#F87171\", \"#4ADE80\", \"#E879F9\", \"#FCD34D\", \"#F97316\", \"#2DD4BF\", \"#F472B6\", \"#10B981\"];\nexports.pointTailwind3Colors = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#2F4074', '#03B4B4'];\nexports.pointTailwind3DarkColors = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#8029F1', '#1ABC9C'];\nexports.pointMaterial3Colors = [\"#6355C7\", \"#00AEE0\", \"#FFB400\", \"#F7523F\", \"#963C70\", \"#FD7400\", \"#4BE0BC\", \"#2196F5\", \"#DE3D8A\", \"#162F88\"];\nexports.pointMaterial3DarkColors = [\"#4EAAFF\", \"#FA4EAB\", \"#FFF500\", \"#17EA58\", \"#38FFE7\", \"#FF9E45\", \"#B3F32F\", \"#B93CE4\", \"#FC5664\", \"#9B55FF\"];\nexports.pointFluent2Colors = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\", \"#C19C00\"];\nexports.pointFluent2DarkColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\", \"#0B6A0B\", \"#C19C00\"];\nexports.pointFluent2HighContrastColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\", \"#0B6A0B\", \"#C19C00\"];\nvar loadChartTheme = function (args, isGradient) {\n    var selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    var formattedTheme = (selectedTheme.charAt(0).toUpperCase() +\n        selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    if (args) {\n        args.chart.theme = formattedTheme;\n        return isGradient ? selectedTheme : args.chart.theme;\n    }\n    else if (isGradient && !args) {\n        return selectedTheme;\n    }\n    return formattedTheme;\n};\nexports.loadChartTheme = loadChartTheme;\nvar loadAccumulationChartTheme = function (args) {\n    var selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    var formattedTheme = (selectedTheme.charAt(0).toUpperCase() +\n        selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    if (args) {\n        args.accumulation.theme = formattedTheme;\n        return args.chart.theme;\n    }\n    else {\n        return formattedTheme;\n    }\n};\nexports.loadAccumulationChartTheme = loadAccumulationChartTheme;\nvar funnelPointRender = function (args) {\n    var selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        args.fill = exports.pointFabricColors[0];\n    }\n    else if (selectedTheme === 'material-dark') {\n        args.fill = exports.pointMaterialDarkColors[0];\n        ;\n    }\n    else if (selectedTheme === 'material') {\n        args.fill = exports.pointMaterialColors[0];\n    }\n    else if (selectedTheme === 'bootstrap5-dark') {\n        args.fill = exports.pointBootstrap5DarkColors[0];\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        args.fill = exports.pointBootstrap5Colors[0];\n    }\n    else if (selectedTheme === 'bootstrap') {\n        args.fill = exports.pointBootstrapColors[0];\n    }\n    else if (selectedTheme === 'bootstrap4') {\n        args.fill = exports.pointBootstrapColors[0];\n    }\n    else if (selectedTheme === 'bootstrap-dark') {\n        args.fill = exports.pointBootstrapColors[0];\n    }\n    else if (selectedTheme === 'highcontrast') {\n        args.fill = exports.pointHighContrastColors[0];\n    }\n    else if (selectedTheme === 'fluent-dark') {\n        args.fill = exports.pointFluentDarkColors[0];\n    }\n    else if (selectedTheme === 'fluent') {\n        args.fill = exports.pointFluentColors[0];\n    }\n    else if (selectedTheme === 'tailwind-dark') {\n        args.fill = exports.pointTailwindDarkColors[0];\n    }\n    else if (selectedTheme === 'tailwind') {\n        args.fill = exports.pointTailwindColors[0];\n    }\n    else if (selectedTheme === 'material3-dark') {\n        args.fill = exports.pointMaterial3DarkColors[0];\n    }\n    else if (selectedTheme === 'material3') {\n        args.fill = exports.pointMaterial3Colors[0];\n    }\n    else if (selectedTheme === 'fluent2') {\n        args.fill = exports.pointFluent2Colors[0];\n    }\n    else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n        args.fill = exports.pointFluent2HighContrastColors[0];\n    }\n    else if (selectedTheme === 'tailwind3-dark') {\n        args.fill = exports.pointTailwind3DarkColors[0];\n    }\n    else if (selectedTheme === 'tailwind3') {\n        args.fill = exports.pointTailwind3Colors[0];\n    }\n    ;\n};\nexports.funnelPointRender = funnelPointRender;\nvar accpatternPointRender = function (args) {\n    if (args.point.index === 0) {\n        args.pattern = 'DiagonalBackward';\n    }\n    else if (args.point.index === 1) {\n        args.pattern = 'DiagonalForward';\n    }\n    else if (args.point.index === 2) {\n        args.pattern = 'HorizontalStripe';\n    }\n    else if (args.point.index === 3) {\n        args.pattern = 'VerticalStripe';\n    }\n    else if (args.point.index === 4) {\n        args.pattern = 'HorizontalDash';\n    }\n    var selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n        }\n        else {\n            args.border.color = '#222222';\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n    }\n    else if (selectedTheme.indexOf('fluent2-highcontrast') > -1) {\n        args.border.color = '#000000';\n    }\n    else {\n        args.border.color = '#FFFFFF';\n    }\n};\nexports.accpatternPointRender = accpatternPointRender;\nvar pointRenderEvent = function (args) {\n    var selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        args.fill = exports.pointFabricColors[args.point.index % 10];\n        ;\n    }\n    else if (selectedTheme === 'material-dark') {\n        args.fill = exports.pointMaterialDarkColors[args.point.index % 10];\n        ;\n    }\n    else if (selectedTheme === 'material') {\n        args.fill = exports.pointMaterialColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap5-dark') {\n        args.fill = exports.pointBootstrap5DarkColors[args.point.index % exports.pointBootstrap5DarkColors.length];\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        args.fill = exports.pointBootstrap5Colors[args.point.index % exports.pointBootstrap5Colors.length];\n    }\n    else if (selectedTheme === 'bootstrap') {\n        args.fill = exports.pointBootstrapColors[args.point.index % exports.pointBootstrapColors.length];\n    }\n    else if (selectedTheme === 'bootstrap4') {\n        args.fill = exports.pointBootstrapColors[args.point.index % exports.pointBootstrapColors.length];\n    }\n    else if (selectedTheme === 'bootstrap-dark') {\n        args.fill = exports.pointBootstrapColors[args.point.index % exports.pointBootstrapColors.length];\n    }\n    else if (selectedTheme === 'highcontrast') {\n        args.fill = exports.pointHighContrastColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent-dark') {\n        args.fill = exports.pointFluentDarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent') {\n        args.fill = exports.pointFluentColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind-dark') {\n        args.fill = exports.pointTailwindDarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind') {\n        args.fill = exports.pointTailwindColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material3-dark') {\n        args.fill = exports.pointMaterial3DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material3') {\n        args.fill = exports.pointMaterial3Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2') {\n        args.fill = exports.pointFluent2Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n        args.fill = exports.pointFluent2HighContrastColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind3-dark') {\n        args.fill = exports.pointTailwind3DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind3') {\n        args.fill = exports.pointTailwind3Colors[args.point.index % 10];\n    }\n    ;\n};\nexports.pointRenderEvent = pointRenderEvent;\nvar bubblePointRender = function (args) {\n    var selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme === 'material-dark') {\n        args.fill = exports.bubblePointMaterialDarkColors[args.point.index % 10];\n        args.border.color = exports.pointMaterialDarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material') {\n        args.fill = exports.bubblePointMaterialColors[args.point.index % 10];\n        args.border.color = exports.pointMaterialColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fabric-dark' || selectedTheme === 'fabric') {\n        args.fill = exports.bubblePointFabricColors[args.point.index % 10];\n        args.border.color = exports.pointFabricColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap5-dark') {\n        args.fill = exports.bubblePointBootstrap5DarkColors[args.point.index % 10];\n        args.border.color = exports.pointBootstrap5DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        args.fill = exports.bubblePointBootstrap5Colors[args.point.index % 10];\n        args.border.color = exports.pointBootstrap5Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent-dark') {\n        args.fill = exports.bubblePointFluentDarkColors[args.point.index % 10];\n        args.border.color = exports.pointFluentDarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent') {\n        args.fill = exports.bubblePointFluentColors[args.point.index % 10];\n        args.border.color = exports.pointFluentColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap4' || selectedTheme === 'bootstrap') {\n        args.fill = exports.bubblePointBootstrapColors[args.point.index % 10];\n        args.border.color = exports.pointBootstrapColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind-dark') {\n        args.fill = exports.bubbleTailwindDarkColors[args.point.index % 10];\n        args.border.color = exports.pointTailwindDarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind') {\n        args.fill = exports.bubbleTailwindColors[args.point.index % 10];\n        args.border.color = exports.pointTailwindColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'highcontrast') {\n        args.fill = exports.bubblePointHighContrastColors[args.point.index % 10];\n        args.border.color = exports.pointHighContrastColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material3') {\n        args.fill = exports.bubbleMaterial3Colors[args.point.index % 10];\n        args.border.color = exports.pointMaterial3Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material3-dark') {\n        args.fill = exports.bubbleMaterial3DarkColors[args.point.index % 10];\n        args.border.color = exports.pointMaterial3DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2') {\n        args.fill = exports.bubbleFluent2Colors[args.point.index % 10];\n        args.border.color = exports.pointFluent2Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2-highcontrast') {\n        args.fill = exports.bubbleFluent2HighContrastColors[args.point.index % 10];\n        args.border.color = exports.pointFluent2HighContrastColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2-dark') {\n        args.fill = exports.bubbleFluent2DarkColors[args.point.index % 10];\n        args.border.color = exports.pointFluent2DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind3-dark') {\n        args.fill = exports.bubbleTailwind3DarkColors[args.point.index % 10];\n        args.border.color = exports.pointTailwind3DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind3') {\n        args.fill = exports.bubbleTailwind3Colors[args.point.index % 10];\n        args.border.color = exports.pointTailwind3Colors[args.point.index % 10];\n    }\n    else {\n        args.fill = exports.bubblePointBootstrapColors[args.point.index % 10];\n        args.border.color = exports.pointBootstrapColors[args.point.index % 10];\n    }\n};\nexports.bubblePointRender = bubblePointRender;\nvar seriesColor = ['#FFE066', \"#FAB666\", \"#F68F6A\", \"#F3646A\", \"#CC555A\", \"#9C4649\"];\nvar donutPointRender = function (args) {\n    var selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme === 'fluent') {\n        args.fill = seriesColor[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        args.fill = seriesColor[args.point.index % 10];\n    }\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n        }\n        else {\n            args.border.color = '#222222';\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n    }\n    else if (selectedTheme.indexOf('fluent2') > -1) {\n        args.fill = seriesColor[args.point.index % 10];\n    }\n    else if (selectedTheme.indexOf('fluent2-highcontrast') > -1) {\n        args.fill = seriesColor[args.point.index % 10];\n    }\n    else {\n        args.border.color = '#FFFFFF';\n    }\n};\nexports.donutPointRender = donutPointRender;\nvar roundedCornnerPointRender = function (args) {\n    var selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n        }\n        else {\n            args.border.color = '#222222';\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n    }\n    else {\n        args.border.color = '#FFFFFF';\n    }\n};\nexports.roundedCornnerPointRender = roundedCornnerPointRender;\nvar roundedPointRender = function (args) {\n    var selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric-dark') > -1) {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'material-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme === 'material') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'bootstrap5-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'bootstrap-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme === 'bootstrap') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'highcontrast') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'fluent-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'fluent') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'tailwind-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'tailwind') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'material3-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme === 'material3') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'fluent2') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'tailwind3-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'tailwind3') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n};\nexports.roundedPointRender = roundedPointRender;\nvar piePointRender = function (args) {\n    var selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric-dark') > -1) {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'material-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme === 'material') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'bootstrap5-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'bootstrap-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme === 'bootstrap') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'highcontrast') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'fluent-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'fluent') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'tailwind-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'tailwind') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'material3-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme === 'material3') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'fluent2') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'tailwind3-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'tailwind3') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n};\nexports.piePointRender = piePointRender;\n","public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n  <div class=\"control-section\">\n    <div class=\"content-wrapper\">\n      <ejs-tab id=\"element\" :heightAdjustMode=\"'None'\" :overflowMode=\"'Scrollable'\" height=\"500px\" headerPlacement=\"Top\"\n        @selected=\"tabSelected\">\n        <e-tabitems>\n          <e-tabitem :header=\"{ text: 'Line' }\" content=\"#lineCharts\"></e-tabitem>\n          <e-tabitem :header=\"{ text: 'Column' }\" content=\"#columnCharts\"></e-tabitem>\n          <e-tabitem :header=\"{ text: 'Spline' }\" content=\"#splineCharts\"></e-tabitem>\n          <e-tabitem :header=\"{ text: 'Area' }\" content=\"#areaCharts\"></e-tabitem>\n          <e-tabitem :header=\"{ text: 'Bar' }\" content=\"#barCharts\"></e-tabitem>\n          <e-tabitem :header=\"{ text: 'Bubble' }\" content=\"#bubbleCharts\"></e-tabitem>\n          <e-tabitem :header=\"{ text: 'Scatter' }\" content=\"#scatterCharts\"></e-tabitem>\n          <e-tabitem :header=\"{ text: 'Step line' }\" content=\"#stepLineCharts\"></e-tabitem>\n          <e-tabitem :header=\"{ text: 'Range column' }\" content=\"#rangeCharts\"></e-tabitem>\n        </e-tabitems>\n      </ejs-tab>\n      <div id=\"lineCharts\"><ejs-chart id='lineChart' :series='[lineSeries]' :primaryXAxis='primaryXAxis' :primaryYAxis='primaryYAxis'\n          :chartArea='chartArea' :width='width' @loaded=\"lineLoaded\" @load=\"lineLoad\"></ejs-chart></div>\n      <div id=\"columnCharts\" style=\"display: none\"><ejs-chart id='columnChart' :series='[columnSeries]' :primaryXAxis='primaryXAxis'\n          :primaryYAxis='primaryYAxis' :chartArea='chartArea' :width='width' @loaded=\"columnLoaded\"\n          @load=\"columnLoad\"></ejs-chart></div>\n      <div id=\"splineCharts\" style=\"display: none\"><ejs-chart id='splineChart' :series='[splineSeries]' :primaryXAxis='primaryXAxis'\n          :primaryYAxis='primaryYAxis' :chartArea='chartArea' :width='width' @loaded=\"splineLoaded\"\n          @load=\"splineLoad\"></ejs-chart></div>\n      <div id=\"areaCharts\" style=\"display: none\"><ejs-chart id='areaChart' :series='[areaSeries]' :primaryXAxis='primaryXAxis' :primaryYAxis='primaryYAxis'\n          :chartArea='chartArea' :width='width' @loaded=\"areaLoaded\" @load=\"areaLoad\"></ejs-chart></div>\n      <div id=\"barCharts\" style=\"display: none\"><ejs-chart id='barChart' :series='[barSeries]' :primaryXAxis='primaryXAxis' :primaryYAxis='primaryYAxis'\n          :chartArea='chartArea' :width='width' @loaded=\"barLoaded\" @load=\"barLoad\"></ejs-chart></div>\n      <div id=\"bubbleCharts\" style=\"display: none\"><ejs-chart id='bubbleChart' :series='[bubbleSeries]' :primaryXAxis='bubbleXAxis' :primaryYAxis='bubbleYAxis'\n          :chartArea='chartArea' @pointRender=\"pointRender\" @loaded=\"bubbleLoaded\" @load=\"bubbleLoad\"\n          :legendSettings=\"legendSettings\"></ejs-chart></div>\n      <div id=\"scatterCharts\" style=\"display: none\"><ejs-chart id='scatterChart' :series='scatterSeries' :primaryXAxis='scatterXAxis'\n          :primaryYAxis='scatterYAxis' :chartArea='chartArea' :width='width' @loaded=\"scatterLoaded\"\n          @load=\"scatterLoad\"></ejs-chart></div>\n      <div id=\"stepLineCharts\" style=\"display: none\"><ejs-chart id='stepLineChart' :series='[stepLineSeries]' :primaryXAxis='primaryXAxis'\n          :primaryYAxis='primaryYAxis' :chartArea='chartArea' :width='width' @loaded=\"stepLoaded\"\n          @load=\"stepLoad\"></ejs-chart></div>\n      <div id=\"rangeCharts\" style=\"display: none\"><ejs-chart id='rangeChart' :series='[rangeSeries]' :primaryXAxis='primaryXAxis' :primaryYAxis='primaryYAxis'\n          :chartArea='chartArea' :width='width' @loaded=\"rangeLoaded\" @load=\"rangeLoad\"></ejs-chart></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { TabComponent, TabItemDirective, TabItemsDirective } from '@syncfusion/ej2-vue-navigations';\nimport {\n  ChartComponent, SeriesDirective, SeriesCollectionDirective, LineSeries, SplineSeries, ColumnSeries, SplineAreaSeries,\n  BarSeries, BubbleSeries, ScatterSeries, StepLineSeries, RangeColumnSeries, Category, DataLabel, Highlight, Tooltip,\n} from '@syncfusion/ej2-vue-charts';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { loadChartTheme, bubblePointRender } from \"./theme-color\";\n\nexport default {\n  components: {\n    'ejs-tab': TabComponent,\n    'e-tabitems': TabItemsDirective,\n    'e-tabitem': TabItemDirective,\n    'ejs-chart': ChartComponent,\n    'e-series-collection': SeriesCollectionDirective,\n    'e-series': SeriesDirective,\n  },\n  data() {\n    return {\n      \n      primaryXAxis: {\n        valueType: \"Category\",\n        majorGridLines: { width: 0 },\n        majorTickLines: { width: 0 },\n        minorTickLines: { width: 0 },\n      },\n      bubbleXAxis: {\n        minimum: 1,\n        maximum: 7,\n        interval: 1,\n        majorGridLines: { width: 0 },\n        majorTickLines: { width: 0 },\n      },\n      scatterXAxis: {\n        minimum: 1,\n        interval: 1,\n        maximum: 10,\n        majorGridLines: { width: 0 },\n        majorTickLines: { width: 0 },\n        edgeLabelPlacement: 'Shift'\n      },\n      primaryYAxis: {\n        labelFormat: \"{value}\",\n        maximum: 100,\n        minimum: 0,\n        edgeLabelPlacement: \"Shift\",\n        lineStyle: { width: 0 },\n        majorTickLines: { width: 0 },\n      },\n      bubbleYAxis: {\n        minimum: 0,\n        maximum: 100,\n        lineStyle: { width: 0 },\n        majorTickLines: { width: 0 },\n      },\n      scatterYAxis: {\n        majorTickLines: { width: 0 },\n        lineStyle: { width: 0 },\n        minimum: 0,\n        maximum: 80,\n        interval: 10,\n        rangePadding: 'None'\n      },\n      chartArea: { border: { width: 0 } },\n      width: \"100%\",\n      seriesAnimation: { enable: false },\n      legendSettings: { visible: false },\n      splineSeries: {\n        dataSource: this.getSplineData(),\n        xName: \"x\",\n        yName: \"y\",\n        type: \"Spline\",\n        width: 2.5,\n        marker: { visible: true, height: 8, width: 8, dataLabel: { visible: true, position:'Outer' } },\n        animation: { enable: true }\n      },\n      lineSeries: {\n        dataSource: this.getLineData(),\n        xName: \"x\",\n        yName: \"y\",\n        type: \"Line\",\n        width: 2.5,\n        marker: { visible: true, height: 8, width: 8, dataLabel: { visible: true, position:'Outer' } },\n        animation: { enable: true }\n      },\n      columnSeries: {\n        dataSource: this.getColumnData(),\n        xName: \"x\",\n        yName: \"y\",\n        type: \"Column\",\n        marker: { visible: false, dataLabel: { visible: true, position:'Outer' } },\n        animation: { enable: true },\n        cornerRadius: { topLeft: 4, topRight: 4 }\n      },\n      areaSeries: {\n        dataSource: this.getAreaData(),\n        xName: \"x\",\n        yName: \"y\",\n        type: \"SplineArea\",\n        marker: { visible: false, dataLabel: { visible: true, position:'Outer' } },\n        animation: { enable: true }\n      },\n      barSeries: {\n        dataSource: this.getBarData(),\n        xName: \"x\",\n        yName: \"y\",\n        type: \"Bar\",\n        marker: { visible: false, dataLabel: { visible: true, position:'Outer' } },\n        animation: { enable: true },\n        cornerRadius: { bottomRight: 4, topRight: 4 }\n      },\n      bubbleSeries: {\n        dataSource: this.getBubbleData(),\n        type: \"Bubble\",\n        border: { width: 2 },\n        xName: \"x\",\n        yName: \"y\",\n        size: \"size\",\n        animation: { enable: true }\n      },\n      scatterSeries: [\n        {\n          dataSource: this.getScatterData(),\n          xName: \"x\",\n          yName: \"y\",\n          type: \"Scatter\",\n          marker: { visible: false, width: 8, height: 8, shape: 'Circle', dataLabel: { visible: false } },\n          animation: { enable: true }\n        },\n        {\n          dataSource: this.getScatterData(),\n          xName: \"x\",\n          yName: \"y1\",\n          type: \"Scatter\",\n          marker: { visible: false, width: 8, height: 8, shape: 'Circle', dataLabel: { visible: false } },\n          animation: { enable: true }\n        }\n      ],\n      stepLineSeries: {\n        dataSource: this.getStepLineData(),\n        xName: \"x\",\n        yName: \"y\",\n        width: 2.5,\n        type: \"StepLine\",\n        marker: { visible: false, dataLabel: { visible: false } },\n        animation: { enable: true }\n      },\n      rangeSeries: {\n        dataSource: this.getRangeColumnData(),\n        xName: \"x\",\n        low: \"low\",\n        high: \"high\",\n        type: \"RangeColumn\",\n        columnSpacing: 0.1,\n        marker: { visible: false, dataLabel: { visible: true, position:'Outer' } },\n        animation: { enable: true },\n        cornerRadius: { topLeft: 4, topRight: 4, bottomLeft: 4, bottomRight: 4 }\n      }\n    };\n  },\n  methods: {\n    tabSelected(args) {\n      const chartIds = [\n        'lineChart', 'columnChart', 'splineChart', 'areaChart', 'barChart',\n        'bubbleChart', 'scatterChart', 'stepLineChart', 'rangeChart'\n      ];\n      chartIds.forEach((id, index) => {\n        if (index === args.selectedIndex) {\n          let chartElement = document.getElementById(id);\n          if (chartElement) {\n            let chart = chartElement.ej2_instances[0];\n            chart.refresh();\n          }\n        }\n      });\n    },\n    getSplineData() {\n      return [\n        { x: \"1\", y: 30 }, { x: \"2\", y: 10 },\n        { x: \"3\", y: 80 }, { x: \"4\", y: 20 },\n        { x: \"5\", y: 30 }, { x: \"6\", y: 5 },\n        { x: \"7\", y: 69 }, { x: \"8\", y: 15 },\n        { x: \"9\", y: 60 }, { x: \"10\", y: 70 }\n      ];\n    },\n    getLineData() {\n      return [\n        { x: \"1\", y: 10 }, { x: \"2\", y: 30 },\n        { x: \"3\", y: 80 }, { x: \"4\", y: 20 },\n        { x: \"5\", y: 30 }, { x: \"6\", y: 40 },\n        { x: \"7\", y: 69 }, { x: \"8\", y: 15 },\n        { x: \"9\", y: 60 }, { x: \"10\", y: 70 }\n      ];\n    },\n    getColumnData() {\n      return [\n        { x: \"1\", y: 90 }, { x: \"2\", y: 10 },\n        { x: \"3\", y: 50 }, { x: \"4\", y: 20 },\n        { x: \"5\", y: 30 }, { x: \"6\", y: 70 },\n        { x: \"7\", y: 9 }\n      ];\n    },\n    getAreaData() {\n      return [\n        { x: \"1\", y: 10 }, { x: \"2\", y: 20 },\n        { x: \"3\", y: 80 }, { x: \"4\", y: 15 },\n        { x: \"5\", y: 30 }, { x: \"6\", y: 40 },\n        { x: \"7\", y: 69 }, { x: \"8\", y: 15 }\n      ];\n    },\n    getStepLineData() {\n      return [\n        { x: \"1\", y: 10 }, { x: \"2\", y: 30 },\n        { x: \"3\", y: 80 }, { x: \"4\", y: 20 },\n        { x: \"5\", y: 30 }, { x: \"6\", y: 40 },\n        { x: \"7\", y: 69 }, { x: \"8\", y: 15 },\n        { x: \"9\", y: 60 }, { x: \"10\", y: 70 }\n      ];\n    },\n    getBarData() {\n      return [\n        { x: \"1\", y: 90 }, { x: \"2\", y: 10 },\n        { x: \"3\", y: 50 }, { x: \"4\", y: 20 },\n        { x: \"5\", y: 30 }, { x: \"6\", y: 70 },\n        { x: \"7\", y: 9 }\n      ];\n    },\n    getBubbleData() {\n      return [\n        { x: \"1.5\", y: 80, size: 4 }, { x: \"2\", y: 60, size: 6 },\n        { x: \"3\", y: 70, size: 2 }, { x: \"4\", y: 13, size: 4 },\n        { x: \"5\", y: 30, size: 3 }, { x: \"6\", y: 20, size: 4 },\n        { x: \"6.5\", y: 40, size: 6 }\n      ];\n    },\n    getRangeColumnData() {\n      return [\n        { x: \"1\", low: 30, high: 60 }, { x: \"2\", low: 42, high: 73 },\n        { x: \"3\", low: 35, high: 80 }, { x: \"4\", low: 20, high: 50 },\n        { x: \"5\", low: 30, high: 80 }, { x: \"6\", low: 10, high: 40 },\n        { x: \"7\", low: 15, high: 69 }\n      ];\n    },\n    getScatterData() {\n      let scatterdata = [\n        { x: \"1\", y: 15, y1: 10 }, { x: \"1.25\", y: 35, y1: 20 },\n        { x: \"1.5\", y: 60, y1: 50 }, { x: \"1.75\", y: 25, y1: 15 },\n        { x: \"2\", y: 25, y1: 35 }, { x: \"2.25\", y: 30, y1: 30 },\n        { x: \"2.5\", y: 45, y1: 30 }, { x: \"2.75\", y: 40, y1: 20 },\n        { x: \"3\", y: 30, y1: 45 }, { x: \"3.25\", y: 55, y1: 35 },\n        { x: \"3.5\", y: 65, y1: 20 }, { x: \"3.75\", y: 40, y1: 50 },\n        { x: \"4\", y: 40, y1: 60 }, { x: \"4.25\", y: 60, y1: 25 },\n        { x: \"4.5\", y: 15, y1: 25 }, { x: \"4.75\", y: 75, y1: 55 },\n        { x: \"5\", y: 50, y1: 40 }, { x: \"5.25\", y: 45, y1: 30 },\n        { x: \"5.5\", y: 20, y1: 15 }, { x: \"5.75\", y: 65, y1: 35 },\n        { x: \"6\", y: 65, y1: 65 }, { x: \"6.25\", y: 35, y1: 50 },\n        { x: \"6.5\", y: 70, y1: 35 }, { x: \"6.75\", y: 50, y1: 40 },\n        { x: \"7\", y: 25, y1: 60 }, { x: \"7.25\", y: 60, y1: 40 },\n        { x: \"7.25\", y: 60, y1: 45 }, { x: \"7.5\", y: 45, y1: 20 },\n        { x: \"7.75\", y: 30, y1: 15 }, { x: \"8\", y: 60, y1: 50 },\n        { x: \"8.25\", y: 25, y1: 35 }, { x: \"8.5\", y: 30, y1: 10 },\n        { x: \"8.75\", y: 45, y1: 25 }, { x: \"9\", y: 75, y1: 45 },\n        { x: \"9.25\", y: 40, y1: 50 }, { x: \"9.5\", y: 20, y1: 15 },\n        { x: \"9.75\", y: 30, y1: 40 }, { x: \"10\", y: 60, y1: 25 }\n      ];\n      return this.shuffleArray(scatterdata);\n    },\n    getScatterData1() {\n      const scatterdata = [\n        { x: '1', y: 60, y1: 45 }, { x: '1.25', y: 40, y1: 30 },\n        { x: '1.5', y: 25, y1: 10 }, { x: '1.75', y: 15, y1: 50 },\n        { x: '2', y: 15, y1: 65 }, { x: '2.25', y: 35, y1: 50 },\n        { x: '2.5', y: 40, y1: 30 }, { x: '2.75', y: 60, y1: 25 },\n        { x: '3', y: 65, y1: 25 }, { x: '3.25', y: 30, y1: 15 },\n        { x: '3.5', y: 20, y1: 60 }, { x: '3.75', y: 50, y1: 40 },\n        { x: '4', y: 50, y1: 35 }, { x: '4.25', y: 55, y1: 50 },\n        { x: '4.5', y: 75, y1: 15 }, { x: '4.75', y: 45, y1: 60 },\n        { x: '5', y: 45, y1: 50 }, { x: '5.25', y: 35, y1: 30 },\n        { x: '5.5', y: 30, y1: 20 }, { x: '5.75', y: 55, y1: 40 },\n        { x: '6', y: 70, y1: 55 }, { x: '6.25', y: 60, y1: 25 },\n        { x: '6.5', y: 15, y1: 40 }, { x: '6.75', y: 40, y1: 15 },\n        { x: '7', y: 30, y1: 25 }, { x: '7.25', y: 60, y1: 35 },\n        { x: '7.5', y: 60, y1: 35 }, { x: '7.75', y: 25, y1: 15 },\n        { x: '8', y: 25, y1: 10 }, { x: '8.25', y: 50, y1: 30 },\n        { x: '8.5', y: 45, y1: 65 }, { x: '8.75', y: 55, y1: 20 },\n        { x: '9', y: 50, y1: 60 }, { x: '9.25', y: 30, y1: 45 },\n        { x: '9.5', y: 10, y1: 20 }, { x: '9.75', y: 40, y1: 35 },\n        { x: '10', y: 55, y1: 15 }\n      ];\n      return this.shuffleArray(scatterdata);\n    },\n    getScatterData2() {\n      const scatterdata = [\n        { x: '1', y: 70, y1: 25 }, { x: '1.25', y: 55, y1: 40 },\n        { x: '1.5', y: 45, y1: 40 }, { x: '1.75', y: 30, y1: 45 },\n        { x: '2', y: 20, y1: 55 }, { x: '2.25', y: 30, y1: 45 },\n        { x: '2.5', y: 10, y1: 35 }, { x: '2.75', y: 25, y1: 15 },\n        { x: '3', y: 50, y1: 20 }, { x: '3.25', y: 60, y1: 30 },\n        { x: '3.5', y: 25, y1: 60 }, { x: '3.75', y: 50, y1: 45 },\n        { x: '4', y: 30, y1: 15 }, { x: '4.25', y: 55, y1: 20 },\n        { x: '4.5', y: 65, y1: 75 }, { x: '4.75', y: 45, y1: 35 },\n        { x: '5', y: 60, y1: 45 }, { x: '5.25', y: 35, y1: 10 },\n        { x: '5.5', y: 15, y1: 30 }, { x: '5.75', y: 30, y1: 60 },\n        { x: '6', y: 55, y1: 50 }, { x: '6.25', y: 25, y1: 45 },\n        { x: '6.5', y: 35, y1: 10 }, { x: '6.75', y: 20, y1: 30 },\n        { x: '7', y: 40, y1: 65 }, { x: '7.25', y: 30, y1: 45 },\n        { x: '7.5', y: 30, y1: 60 }, { x: '7.75', y: 45, y1: 30 },\n        { x: '8', y: 60, y1: 45 }, { x: '8.25', y: 50, y1: 40 },\n        { x: '8.5', y: 20, y1: 25 }, { x: '8.75', y: 70, y1: 15 },\n        { x: '9', y: 75, y1: 15 }, { x: '9.25', y: 30, y1: 50 },\n        { x: '9.5', y: 50, y1: 35 }, { x: '9.75', y: 55, y1: 20 },\n        { x: '10', y: 15, y1: 70 }\n      ];\n      return this.shuffleArray(scatterdata);\n    },\n    getScatterData3() {\n      const scatterdata = [\n        { x: '1', y: 20, y1: 30 }, { x: '1.25', y: 30, y1: 20 },\n        { x: '1.5', y: 35, y1: 60 }, { x: '1.75', y: 40, y1: 30 },\n        { x: '2', y: 55, y1: 20 }, { x: '2.25', y: 45, y1: 35 },\n        { x: '2.5', y: 60, y1: 45 }, { x: '2.75', y: 25, y1: 30 },\n        { x: '3', y: 45, y1: 15 }, { x: '3.25', y: 50, y1: 45 },\n        { x: '3.5', y: 50, y1: 35 }, { x: '3.75', y: 15, y1: 40 },\n        { x: '4', y: 15, y1: 70 }, { x: '4.25', y: 45, y1: 55 },\n        { x: '4.5', y: 75, y1: 10 }, { x: '4.75', y: 60, y1: 25 },\n        { x: '5', y: 30, y1: 55 }, { x: '5.25', y: 45, y1: 35 },\n        { x: '5.5', y: 60, y1: 25 }, { x: '5.75', y: 40, y1: 45 },\n        { x: '6', y: 10, y1: 50 }, { x: '6.25', y: 20, y1: 65 },\n        { x: '6.5', y: 65, y1: 40 }, { x: '6.75', y: 30, y1: 30 },\n        { x: '7', y: 25, y1: 65 }, { x: '7.25', y: 35, y1: 40 },\n        { x: '7.5', y: 20, y1: 45 }, { x: '7.75', y: 60, y1: 50 },\n        { x: '8', y: 35, y1: 60 }, { x: '8.25', y: 25, y1: 45 },\n        { x: '8.5', y: 30, y1: 15 }, { x: '8.75', y: 50, y1: 70 },\n        { x: '9', y: 45, y1: 75 }, { x: '9.25', y: 20, y1: 35 },\n        { x: '9.5', y: 40, y1: 50 }, { x: '9.75', y: 45, y1: 30 },\n        { x: '10', y: 50, y1: 25 }\n      ];\n      return this.shuffleArray(scatterdata);\n    },\n    getScatterData4() {\n      const scatterdata = [\n        { x: '1', y: 50, y1: 60 }, { x: '1.25', y: 45, y1: 55 },\n        { x: '1.5', y: 15, y1: 30 }, { x: '1.75', y: 55, y1: 20 },\n        { x: '2', y: 60, y1: 45 }, { x: '2.25', y: 55, y1: 35 },\n        { x: '2.5', y: 55, y1: 20 }, { x: '2.75', y: 30, y1: 50 },\n        { x: '3', y: 70, y1: 50 }, { x: '3.25', y: 25, y1: 35 },\n        { x: '3.5', y: 30, y1: 35 }, { x: '3.75', y: 45, y1: 60 },\n        { x: '4', y: 65, y1: 15 }, { x: '4.25', y: 20, y1: 70 },\n        { x: '4.5', y: 25, y1: 75 }, { x: '4.75', y: 35, y1: 25 },\n        { x: '5', y: 40, y1: 60 }, { x: '5.25', y: 50, y1: 30 },\n        { x: '5.5', y: 20, y1: 10 }, { x: '5.75', y: 35, y1: 40 },\n        { x: '6', y: 35, y1: 45 }, { x: '6.25', y: 30, y1: 25 },\n        { x: '6.5', y: 30, y1: 70 }, { x: '6.75', y: 60, y1: 20 },\n        { x: '7', y: 45, y1: 25 }, { x: '7.25', y: 40, y1: 35 },\n        { x: '7.5', y: 20, y1: 55 }, { x: '7.75', y: 50, y1: 40 },\n        { x: '8', y: 50, y1: 40 }, { x: '8.25', y: 35, y1: 55 },\n        { x: '8.5', y: 60, y1: 35 }, { x: '8.75', y: 30, y1: 60 },\n        { x: '9', y: 10, y1: 65 }, { x: '9.25', y: 25, y1: 50 },\n        { x: '9.5', y: 40, y1: 50 }, { x: '9.75', y: 30, y1: 25 },\n        { x: '10', y: 65, y1: 30 }\n      ];\n      return this.shuffleArray(scatterdata);\n    },\n    shuffleArray(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n      return array;\n    },\n    splineLoaded(args) {\n      args.chart.element.setAttribute(\"title\", \"\");\n    },\n    lineLoaded(args) {\n      args.chart.element.setAttribute(\"title\", \"\");\n    },\n    columnLoaded(args) {\n      args.chart.element.setAttribute(\"title\", \"\");\n    },\n    areaLoaded(args) {\n      args.chart.element.setAttribute(\"title\", \"\");\n    },\n    barLoaded(args) {\n      args.chart.element.setAttribute(\"title\", \"\");\n    },\n    bubbleLoaded(args) {\n      args.chart.element.setAttribute(\"title\", \"\");\n    },\n    scatterLoaded(args) {\n      args.chart.element.setAttribute(\"title\", \"\");\n    },\n    stepLoaded(args) {\n      args.chart.element.setAttribute(\"title\", \"\");\n    },\n    rangeLoaded(args) {\n      args.chart.element.setAttribute(\"title\", \"\");\n    },\n    lineClearInterval() {\n      if (this.lineIntervalId) {\n        clearInterval(this.lineIntervalId);\n        this.lineIntervalId = null;\n      }\n    },\n    columnClearInterval() {\n      if (this.columnIntervalId) {\n        clearInterval(this.columnIntervalId);\n        this.columnIntervalId = null;\n      }\n    },\n    splineClearInterval() {\n      if (this.splineIntervalId) {\n        clearInterval(this.splineIntervalId);\n        this.splineIntervalId = null;\n      }\n    },\n    areaClearInterval() {\n      if (this.areaIntervalId) {\n        clearInterval(this.areaIntervalId);\n        this.areaIntervalId = null;\n      }\n    },\n    barClearInterval() {\n      if (this.barIntervalId) {\n        clearInterval(this.barIntervalId);\n        this.barIntervalId = null;\n      }\n    },\n    bubbleClearInterval() {\n      if (this.bubbleIntervalId) {\n        clearInterval(this.bubbleIntervalId);\n        this.bubbleIntervalId = null;\n      }\n    },\n    scatterClearInterval() {\n      if (this.scatterIntervalId) {\n        clearInterval(this.scatterIntervalId);\n        this.scatterIntervalId = null;\n      }\n    },\n    stepLineClearInterval() {\n      if (this.stepLineIntervalId) {\n        clearInterval(this.stepLineIntervalId);\n        this.stepLineIntervalId = null;\n      }\n    },\n    rangeClearInterval() {\n      if (this.rangeIntervalId) {\n        clearInterval(this.rangeIntervalId);\n        this.rangeIntervalId = null;\n      }\n    },\n    splineLoad(args) {\n      loadChartTheme(args);\n      this.splineClearInterval();\n      this.splineIntervalId = setInterval(() => {\n        let container = document.getElementById('splineChart');\n        if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n          const newData = this.getSplineData().map(item => ({\n            x: item.x,\n            y: Math.floor(Math.random() * (90 - 10 + 1)) + 10\n          }));\n          if (args.chart.series.length > 0) {\n            args.chart.series[0].setData(newData, 1400);\n          }\n        } else {\n          this.splineClearInterval();\n        }\n      }, 2000);\n    },\n    lineLoad(args) {\n      loadChartTheme(args);\n      this.lineClearInterval();\n      this.lineIntervalId = setInterval(() => {\n        let container = document.getElementById('lineChart');\n        if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n          const newData = this.getLineData().map(item => ({\n            x: item.x,\n            y: Math.floor(Math.random() * (95 - 10 + 1)) + 10\n          }));\n          if (args.chart.series.length > 0) {\n            args.chart.series[0].setData(newData, 1400);\n          }\n        } else {\n          this.lineClearInterval();\n        }\n      }, 2000);\n    },\n    columnLoad(args) {\n      loadChartTheme(args);\n      this.columnClearInterval();\n      this.columnIntervalId = setInterval(() => {\n        let container = document.getElementById('columnChart');\n        if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n          const newData = this.getColumnData().map(item => ({\n            x: item.x,\n            y: Math.floor(Math.random() * (95 - 10 + 1)) + 10\n          }));\n          if (args.chart.series.length > 0) {\n            args.chart.series[0].setData(newData, 1400);\n          }\n        } else {\n          this.columnClearInterval();\n        }\n      }, 2000);\n    },\n    areaLoad(args) {\n      loadChartTheme(args);\n      this.areaClearInterval();\n      this.areaIntervalId = setInterval(() => {\n        let container = document.getElementById('areaChart');\n        if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n          const newData = this.getAreaData().map(item => ({\n            x: item.x,\n            y: Math.floor(Math.random() * (95 - 10 + 1)) + 10\n          }));\n          if (args.chart.series.length > 0) {\n            args.chart.series[0].setData(newData, 1400);\n          }\n        } else {\n          this.areaClearInterval();\n        }\n      }, 2000);\n    },\n    barLoad(args) {\n      loadChartTheme(args);\n      this.barClearInterval();\n      this.barIntervalId = setInterval(() => {\n        let container = document.getElementById('barChart');\n        if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n          const newData = this.getBarData().map(item => ({\n            x: item.x,\n            y: Math.floor(Math.random() * (95 - 10 + 1)) + 10\n          }));\n          if (args.chart.series.length > 0) {\n            args.chart.series[0].setData(newData, 1400);\n          }\n        } else {\n          this.barClearInterval();\n        }\n      }, 2000);\n    },\n    bubbleLoad(args) {\n      loadChartTheme(args);\n      this.bubbleClearInterval();\n      this.bubbleIntervalId = setInterval(() => {\n        let container = document.getElementById('bubbleChart');\n        if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n          const newBubbleData = this.getBubbleData().map(item => ({\n            ...item,\n            y: Math.random() * (95 - 5) + 5,\n            size: Math.random() * (9.5 - 3.5) + 3.5\n          }));\n          args.chart.series[0].setData(this.shuffleArray(newBubbleData), 1400);\n        } else {\n          this.bubbleClearInterval();\n        }\n      }, 2000);\n    },\n    scatterLoad(args) {\n      loadChartTheme(args);\n      this.scatterClearInterval();\n      let index = 1;\n      const datasets = [this.shuffleArray(this.getScatterData()), this.shuffleArray(this.getScatterData1()), this.shuffleArray(this.getScatterData2()), this.shuffleArray(this.getScatterData3()), this.shuffleArray(this.getScatterData4())];\n      this.scatterIntervalId = setInterval(() => {\n        let container = document.getElementById('scatterChart');\n        if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n          const scatterDataSource = datasets[index % datasets.length];\n          index++;\n          if (scatterDataSource && scatterDataSource.length > 0) {\n            args.chart.series[0].setData(scatterDataSource, 2000);\n            args.chart.series[1].setData(scatterDataSource, 2000);\n          }\n        } else {\n          this.scatterClearInterval();\n        }\n      }, 2000);\n    },\n    stepLoad(args) {\n      loadChartTheme(args);\n      this.stepLineClearInterval();\n      this.stepLineIntervalId = setInterval(() => {\n        let container = document.getElementById('stepLineChart');\n        if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n          const newData = this.getStepLineData().map(item => ({\n            x: item.x,\n            y: Math.floor(Math.random() * (95 - 10 + 1)) + 10\n          }));\n          if (args.chart.series.length > 0) {\n            args.chart.series[0].setData(newData, 1400);\n          }\n        } else {\n          this.stepLineClearInterval();\n        }\n      }, 2000);\n    },\n    rangeLoad(args) {\n      loadChartTheme(args);\n      this.rangeClearInterval();\n      this.rangeIntervalId = setInterval(() => {\n        let container = document.getElementById('rangeChart');\n        if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n          const newData = this.getRangeColumnData().map(item => ({\n            x: item.x,\n            high: Math.floor(Math.random() * (95 - 50 + 1)) + 50,\n            low: Math.floor(Math.random() * (45 - 5 + 1)) + 5\n          }));\n          if (args.chart.series.length > 0) {\n            args.chart.series[0].setData(newData, 1400);\n          }\n        } else {\n          this.rangeClearInterval();\n        }\n      }, 2000);\n    },\n    pointRender(args) {\n      bubblePointRender(args)\n    }\n  },\n\n  provide: {\n    chart: [LineSeries, SplineSeries, ColumnSeries, SplineAreaSeries, BarSeries, BubbleSeries,\n      ScatterSeries, StepLineSeries, RangeColumnSeries, Category, DataLabel, Highlight, Tooltip]\n  }\n};\n</script>\n\n<style>\n.content-wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#element {\n  width: 100%;\n}\n</style>\n","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-vue-navigations\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}