{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<main><div id=\"kpiarcgauge\">\n<div class=\"control-section\" >\n    <ejs-circulargauge id=\"keyperform\" :load='load'>\n       <e-axes>\n         <e-axis startAngle=\"220\" endAngle=\"140\" radius='90%'  :majorTicks= 'majorTicks' :minorTicks= 'minorTicks' :labelStyle ='labelStyle' :lineStyle= 'lineStyle' :annotations='annotationsThree' :ranges='rangesThree' :pointers='pointersThree'>\n         </e-axis>\n       </e-axes>\n    </ejs-circulargauge>\n</div>\n</div>\n<section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n    <p>\n        This sample shows an arc gauge with a key performance indicator (KPI), which is a measurable value that shows\n        how an organization meets key business objectives.\n   </p>\n</section>\n<section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n    <p>\n        In this example, you can see how to render an arc gauge showing key performance indicator (KPI). You can use <a\n            target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/api/circular-gauge/axisModel/\">axes</a>, <a\n            target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/api/circular-gauge/rangeModel/\">ranges</a>, <a\n            target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/api/circular-gauge/pointerModel/\">pointers</a> and\n        <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/vue/documentation/api/circular-gauge/annotationModel/\">annotations</a>\n        oriented properties to customize the appearance of the arc gauge, in order to achieve the desired outcome.\n    </p>\n    <p>\n        More information on the arc gauge can be found in this\n        <a target=\"_blank\" href=\"https://ej2.syncfusion.com/vue/documentation/circular-gauge/getting-started/\">documentation section</a>.\n    </p>\n</section>\n</main>\n</template>\n<style>\n    #keyperform_Annotations_0 {\n            line-height: 0.5;\n    }\n    #kpiarcgauge .triangle-up {\n        width: 20;\n        height: 20;\n        border-left: 10px solid transparent;\n        border-right: 10px solid transparent;\n        border-bottom: 20px solid #84cbb5;\n        margin-top: -28px;\n        margin-left: -10px;\n    }\n\n    #kpiarcgauge .text {\n        font-family:inherit;\n        font-size: 30px;\n        text-align: center;\n        margin-left: -25px;\n        margin-top: -10px;\n    }\n\n    #kpiarcgauge .percentage {\n        font-family:inherit;\n        font-size: 44px;\n        text-align: center;\n        margin-left: -46px;\n        margin-top: -22px;\n    }\n    .e-view.material div#kpiarcgauge .triangle-up, .e-view.material-dark div#kpiarcgauge .triangle-up,\n    .e-view.bootstrap-dark div#kpiarcgauge .triangle-up,\n    .e-view.bootstrap div#kpiarcgauge .triangle-up,\n    .e-view.bootstrap4 div#kpiarcgauge .triangle-up {\n        width: 20;\n        height: 20;\n        border-left: 10px solid transparent;\n        border-right: 10px solid transparent;\n        border-bottom: 20px solid #84cbb5;\n        margin-top: -31px;\n    }\n\n    .e-view.tailwind3 div#kpiarcgauge .triangle-up, .e-view.tailwind3-dark div#kpiarcgauge .triangle-up {\n       margin-top: -6px;\n    }\n\n    @media screen and (max-width: 420px) {\n        #kpiarcgauge .text {\n            font-size: 20px;\n            text-align: center;\n            margin-left: -6px;\n        }\n\n        #kpiarcgauge .percentage {\n            font-size: 25px;\n            text-align: center;\n            margin-left: -25px;\n        }\n\n        #kpiarcgauge .triangle-up {\n            width: 20;\n            height: 20;\n            border-left: 10px solid transparent;\n            border-right: 10px solid transparent;\n            border-bottom: 20px solid #84cbb5;\n            margin-top: -30px;\n        }\n       \n        .e-view.material div#kpiarcgauge .percentage,\n        .e-view.material-dark div#kpiarcgauge .percentage,\n        .e-view.bootstrap-dark div#kpiarcgauge .percentage,\n        .e-view.bootstrap div#kpiarcgauge .percentage,\n        .e-view.bootstrap4 div#kpiarcgauge.percentage {\n            margin-left: -25px;\n            margin-top: -22px;\n        }\n\n        .e-view.material div#kpiarcgauge .triangle-up,\n        .e-view.material-dark div#kpiarcgauge .triangle-up,\n        .e-view.bootstrap-dark div#kpiarcgauge .triangle-up,\n        .e-view.bootstrap div#kpiarcgauge .triangle-up,\n        .e-view.bootstrap4 div#kpiarcgauge.triangle-up {\n            width: 20;\n            height: 20;\n            border-left: 10px solid transparent;\n            border-right: 10px solid transparent;\n            border-bottom: 20px solid #84cbb5;\n            margin-top: -33px;\n        }\n    }\n</style>\n<script>\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, Annotations, Gradient } from \"@syncfusion/ej2-vue-circulargauge\";\n\nexport default {\n   components: {\n        'ejs-circulargauge': CircularGaugeComponent,\n        'e-axes': AxesDirective,\n        'e-axis': AxisDirective\n   },\n   data:function(){\n    return{\n        majorTicks: {\n             height: 0,\n             width:0\n        },\n        minorTicks: {\n             height: 0,\n             width:0\n        },\n        labelStyle:{\n           format:'{value} %',\n           position: 'Inside',\n        font: {\n            size: '0px'\n        },\n        },\n        lineStyle:{\n          width:0\n        },\n        annotationsThree: [\n        {\n            description:'Triangle',\n            content: '<div class=\"triangle-up\"></div>',\n            angle: 259,\n            zIndex: '1',\n            radius: '36%',\n        },\n        {\n          description:'Current',\n          content:\n            '<div class=\"text\" style=\"color:#84cbb5;\">Current</div>',\n          angle: 0,\n          zIndex: '1',\n          radius: '25%',\n        },\n        {\n          description:'76.6%',\n          content:\n            '<div class=\"percentage\" style=\"color:#84cbb5;\">76.6%</div>',\n          angle: 125,\n          zIndex: '1',\n          radius: '12%',\n        },\n        {\n          description:'0',\n          content:\n            '<div style=\"font-size:22px;font-family:inherit;\">0</div>',\n          angle: 213,\n          zIndex: '1',\n          radius: '83%',\n        },\n        {\n          description:'100',\n          content:\n            '<div style=\"font-size:22px;font-family:inherit;\">100</div>',\n          angle: 150,\n          zIndex: '1',\n          radius: '83%',\n        },\n      ],\n      pointersThree: [\n        {\n            type: 'Marker',\n            markerShape: 'Circle',\n            markerWidth: 30,\n            markerHeight: 30,\n            animation:{\n              enable:false\n            },\n            radius: '82%',\n            color: '#bdbdbf',\n            value: 30,\n            },\n            {\n              type: 'Marker',\n              markerShape: 'Circle',\n              markerWidth: 30,\n              markerHeight: 30,\n              animation:{\n                enable:false\n              },\n              radius: '82%',\n              color: '#626866',\n              value: 50,\n            },\n            {\n              type: 'Marker',\n              markerShape: 'InvertedTriangle',\n              markerWidth: 30,\n              markerHeight: 30,\n              radius: '92%',\n              color: '#b6b6b6',\n              value: 76.6,\n            },\n      ],\n      rangesThree: [\n        {\n            start: 0,\n            end: 100,\n            startWidth: 30,\n            endWidth: 30,\n            roundedCornerRadius:20,\n            color: '#e3e3e3',\n            radius: '90%',\n            },\n            {\n              start: 30,\n              end: 50,\n              startWidth: 30,\n              endWidth: 30,\n              linearGradient: {\n                startValue: '0%',\n                endValue: '60%',\n                colorStop: [\n                  { color: 'white', offset: '10%', opacity: 0.9 },\n                  { color: '#84cbb5', offset: '90%', opacity: 0.9 },\n                ],\n              },\n              radius: '90%',\n            },\n        ], \n    }\n   },\n   provide: {\n        circulargauge: [Annotations, Gradient]\n   },\n   methods: {\n        load: function(args) {\n            /* custom code start */\n            let selectedTheme = location.hash.split(\"/\")[1];\n            selectedTheme = selectedTheme ? selectedTheme : \"Material\";\n            args.gauge.theme =\n            (selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            if (selectedTheme.indexOf(\"tailwind\") != -1 && args.gauge.axes[0].annotations != null) {\n              args.gauge.axes[0].annotations[0].angle = 92;\n              args.gauge.axes[0].annotations[0].radius = \"-40%\";\n              args.gauge.axes[0].annotations[1].angle = 170;\n              args.gauge.axes[0].annotations[1].radius = \"-29%\";\n              args.gauge.axes[0].annotations[2].angle = 148;\n              args.gauge.axes[0].annotations[2].radius = \"12%\";\n            }\n            /* custom code end */\n        }\n    }\n}\n</script>\n\n","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-vue-circulargauge\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}