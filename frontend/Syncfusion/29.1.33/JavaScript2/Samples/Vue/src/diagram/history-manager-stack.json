{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n    <div>\n        <div class=\"col-lg-8 control-section\">\n            <div id=\"historyControlSection\" class=\"content-wrapper\" style=\"width: 100%\">\n                <ejs-diagram style='display:block' ref=\"diagramObj\" id=\"diagram\" :width='width' :height='height' :historyChange=\"historyChange\" :nodes='nodes' :connectors='connectors' :getNodeDefaults='getNodeDefaults' :getConnectorDefaults='getConnectorDefaults' :snapSettings='snapSettings'></ejs-diagram>\n            </div>\n        </div>\n        <div id=\"historyPropertySection\" class=\"col-lg-4 property-section\" style=\"padding-right: 0px\">\n            <div class=\"property-panel-header\">\n                History manager settings\n            </div>\n            <div class=\"row property-panel-content\" id=\"appearance\">\n                <div class=\"row property-panel-content\">\n                    <div class=\"row\">\n                        <div class=\"listbox\" style=\"height:100%;border: 1px solid #e0e0e0\">\n                            <div class=\"heading\" style=\"height:40px\">\n                                <span>\n                                    Undo Stack\n                                </span>\n                                <div style=\"float: right; margin-top: -5px\">\n                                    <ejs-button ref=\"undo\" id=\"undo\" style=\"width:100%\" disabled=true>\n                                        Undo\n                                    </ejs-button>\n                                </div>\n                            </div>\n                            <ejs-listview ref=\"undoList\" id='undoList' height=\"180px\"></ejs-listview>\n                        </div>\n                    </div>\n                    <div class=\"row\" style=\"padding-top: 8px\">\n                        <div class=\"listbox\" style=\"height:100%;border: 1px solid #e0e0e0\">\n                            <div class=\"heading\" style=\"height:40px\">\n                                <span>\n                                    Redo Stack\n                                </span>\n                                <div style=\"float: right; margin-top: -5px\">\n                                    <ejs-button id=\"redo\" ref=\"redo\" style=\"width:100%\" disabled=true>\n                                        Redo\n                                    </ejs-button>\n                                </div>\n                            </div>\n                            <ejs-listview ref=\"redoList\" id='redoList' height=\"180px\"></ejs-listview>\n                        </div>\n                    </div>\n                    <div class=\"row\" style=\"padding-top: 10px\">\n                        <div style=\"display: table;height: 35px; padding-left: 0px\" class=\"col-xs-6\">\n                            <div style=\"display: table-cell; vertical-align: middle\">Stack Limit</div>\n                        </div>\n                        <div class=\"col-xs-6\" style=\"padding-left: 0px; padding-right: 0px\">\n                            <ejs-numerictextbox id=\"StackLimit\" :value=0 :min=0 :step=1 format='###.##' :change='setStackLimit'></ejs-numerictextbox>\n                        </div>\n                    </div>\n                    <div class=\"row\" style=\"padding-top: 10px\">\n                        <div class=\"col-xs-6\" style=\"padding-left: 0px\">\n                            <ejs-button ref=\"StartGroupAction\" title=\"startGroupAction\" id=\"StartGroupAction\" style=\"width:100%;overflow: hidden;text-overflow: ellipsis\" type=\"Button\" isToggle=true >Start Group Action</ejs-button>\n                        </div>\n                        <div class=\"col-xs-6\" style=\"padding-left: 0px; padding-right: 0px\">\n                            <ejs-button ref=\"ClearHistory\" id=\"ClearHistory\" title=\"clearHistory\">Clear History</ejs-button>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n        </div>\n\n    </div>\n</template>\n<style scoped>\n/* These are proprty panel CSS */\n#historyPropertySection .row {\n    margin-left: 0px;\n    margin-right: 0px;\n}\n\n#historyControlSection.content-wrapper {\n    border: 1px solid #D7D7D7;\n}\n\n#historyPropertySection .listbox {\n    width: 100%;\n    height: 50%;\n}\n\n#historyPropertySection .heading {\n    color: #4e4949;\n    font-size: 15px;\n    height: 50px;\n    width: 100%;\n    border-bottom: 1px solid #d9dedd;\n    padding: 10px;\n}\n</style>\n\n<script>\nimport {\n    DiagramComponent,\n    Diagram,\n    SnapConstraints,\n    UndoRedo,\n    DataBinding\n} from \"@syncfusion/ej2-vue-diagrams\";\nimport {\n    CheckBox,\n    CheckBoxComponent,\n    ChangeEventArgs as CheckBoxChangeEventArgs\n} from \"@syncfusion/ej2-vue-buttons\";\nimport { ButtonComponent } from '@syncfusion/ej2-vue-buttons';\nimport { DropDownListComponent } from \"@syncfusion/ej2-vue-dropdowns\";\nimport { NumericTextBoxComponent } from \"@syncfusion/ej2-vue-inputs\";\nimport { ListViewComponent, ListView } from \"@syncfusion/ej2-vue-lists\";\n\n// Helper function to create a NodeModel with default parameters\nfunction createNode(\n    id,\n    offsetX,\n    offsetY,\n    fill,\n    strokeColor,\n    shape,\n    content,\n    width = 70,\n    height = 40,\n    ports = []) {\n    return {\n        id,\n        offsetX,\n        offsetY,\n        style: { fill, strokeColor },\n        width,\n        height,\n        shape: { type: 'Flow', shape: shape },\n        annotations: [{ content: content }],\n        ports\n    };\n}\n// Initialize Diagram Nodes using the createNode function\nlet nodes = [\n    createNode('node1', 400, 30, '#FFB2B2', '#FFB2B2', 'Terminator', 'Start'),\n    createNode('node2', 400, 100, '#DCDCDC', '#DCDCDC', 'Process', 'Design', undefined, undefined, [{ id: 'designPort', offset: { x: 0, y: 0.5 } }]),\n    createNode('node3', 400, 180, '#DCDCDC', '#DCDCDC', 'Process', 'Coding', undefined, undefined, [{ id: 'codingPort', offset: { x: 0, y: 0.5 } }]),\n    createNode('node4', 400, 260, '#DCDCDC', '#DCDCDC', 'Process', 'Testing'),\n    createNode('node5', 400, 340, '#A2D8B0', '#A2D8B0', 'Decision', 'Errors?', 80, 60),\n    createNode('node6', 400, 430, '#FFB2B2', '#FFB2B2', 'Terminator', 'End'),\n    createNode('node7', 220, 180, '#A2D8B0', '#A2D8B0', 'Decision', 'Design Error?', 100, 60, [\n        { id: 'porterror', offset: { x: 0.5, y: 0 } },\n        { id: 'portcoding', offset: { x: 1, y: 0.5 } },\n        { id: 'portdesign', offset: { x: 0.5, y: 1 } }\n    ])\n];\n\nlet connectors = [\n    { id: 'connector1', sourceID: 'node1', targetID: 'node2' },\n    { id: 'connector2', sourceID: 'node2', targetID: 'node3' },\n    { id: 'connector3', sourceID: 'node3', targetID: 'node4' },\n    { id: 'connector4', sourceID: 'node4', targetID: 'node5' },\n    {\n        id: 'connector5', sourceID: 'node5', targetID: 'node6',\n        annotations: [{ content: 'No', style: { fill: 'white' } }]\n    },\n    {\n        id: 'connector6', sourceID: 'node5', targetID: 'node7', type: 'Orthogonal',\n        segments: [{ type: 'Orthogonal', length: 150, direction: 'Left' }],\n        annotations: [{ content: 'Yes', style: { fill: 'white' } }]\n    },\n    {\n        id: 'connector7', sourceID: 'node7', targetID: 'node3', sourcePortID: 'portcoding',\n        targetPortID: 'codingPort', type: 'Orthogonal',\n        segments: [{ type: 'Orthogonal', length: 10, direction: 'left' }],\n        annotations: [{ content: 'No', style: { fill: 'white' } }]\n    },\n    {\n        id: 'connector8', sourceID: 'node7', targetID: 'node2', sourcePortID: 'porterror',\n        targetPortID: 'designPort', type: 'Orthogonal',\n        annotations: [{ content: 'Yes', style: { fill: 'white' } }]\n    }\n];\nlet field = { value: 'value', text: 'text' };\nlet node;\nlet diagram;\nlet undoList;\nlet redoList;\nlet start;\nlet clear;\nlet end;\nlet undoButton;\nlet redoButton;\nexport default {\n    components: {\n    'ejs-numerictextbox': NumericTextBoxComponent,\n    'ejs-dropdownlist': DropDownListComponent,\n    'ejs-diagram': DiagramComponent,\n    'ejs-button': ButtonComponent,\n    'ejs-listview': ListViewComponent\n    },\n    data: function() {\n        return {\n            width: \"100%\",\n            height: \"600px\",\n            nodes: nodes,\n            connectors: connectors,\n            getNodeDefaults: getNodeDefaults,\n            historyChange: historyChange,\n            setStackLimit: setStackLimit,\n            snapSettings: { constraints: SnapConstraints.None },\n            getConnectorDefaults: (obj) => {\n                obj.style.fill = '#707070';\n                obj.targetDecorator.style.fill = '#707070';\n                obj.targetDecorator.style.strokeColor = '#707070';\n            },\n            snapSettings: { constraints: SnapConstraints.None },\n        };\n    },\n    provide: {\n        diagram: [UndoRedo, DataBinding]\n    },\n    mounted: function() {\n        diagram = this.$refs.diagramObj.ej2Instances;\n        diagram.fitToPage();\n        undoList = this.$refs.undoList.ej2Instances;\n        redoList = this.$refs.redoList.ej2Instances;\n        undoButton = this.$refs.undo.ej2Instances;\n        redoButton = this.$refs.redo.ej2Instances;\n        start = this.$refs.StartGroupAction.ej2Instances;\n        clear = this.$refs.ClearHistory.ej2Instances;\n        redoButton.element.onclick = () => {\n            diagram.redo();\n        };\n        undoButton.element.onclick = () => {\n            diagram.undo();\n        };\n        start.element.onclick = () => {\n            if (start.element.classList.contains('e-active')) {\n                start.content = 'End Group Action';\n                diagram.startGroupAction();\n            } else {\n                start.content = 'Start Group Action';\n                diagram.endGroupAction();\n            }\n        };\n        clear.element.onclick = () => {\n            diagram.clearHistory();\n            updateHistoryLists();\n        }\n    }\n}\n// Function to handle stack limit setting\nfunction setStackLimit(args) {\n    diagram.setStackLimit(args.value);\n}\n// Function called on history change\nfunction historyChange(arg) {\n    updateHistoryLists();\n};\nfunction getNodeDefaults(obj) {\n    obj.annotations[0].style.color = '#111111';\n    return obj;\n}\nfunction updateHistoryLists() {\n    const { undoStack, redoStack, stackLimit } = diagram.historyManager;\n\n    // Utility function to transform stack data\n    const transformStack = (stack) => stack.map(item => ({ text: item.type, value: item.type }));\n\n    // Transform undo and redo stacks\n    const undo = transformStack(undoStack);\n    const redo = transformStack(redoStack);\n\n    // Update button states\n    undoButton.disabled = !undo.length;\n    redoButton.disabled = !redo.length;\n\n    // Update lists\n    const updateList = (list, data) => {\n        list.dataSource = data;\n        list.fields = { text: 'text', value: 'text' };\n        list.index = 0;\n        list.dataBind();\n    };\n\n    updateList(undoList, undo);\n    updateList(redoList, redo);\n}\n\n</script>","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-diagrams\":\"*\",\"@syncfusion/ej2-vue-diagrams\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-vue-lists\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-vue-maps\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}