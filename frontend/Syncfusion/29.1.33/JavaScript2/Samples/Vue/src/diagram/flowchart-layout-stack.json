{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n    <div>\n        <div class=\"control-section\">\n            <div class=\"content-wrapper\" style=\"width:100%;background: white\">\n            <ejs-diagram style='display:block' ref=\"diagramObj\" id=\"diagram\" :width='width' :height='height'\n                :rulerSettings='rulerSettings' :layout='layout' :dataSourceSettings='dataSourceSettings' :tool='tool' :getNodeDefaults='getNodeDefaults'\n                :getConnectorDefaults='getConnectorDefaults' :scrollSettings='scrollSettings'></ejs-diagram>\n        </div>\n        </div>\n        <div class=\"flow-property-section\">\n            <div class=\"property-panel-header\">\n                <p>Properties</p>\n            </div>\n            <div class=\"row property-panel-content\" style=\"padding-top: 5px;\">\n                <div class=\"row\">\n                    <label>Orientation</label>\n                    <div class=\"input-element\">\n                        <ejs-dropdownlist id='orientation' :enabled=true :value=\"'Top to bottom'\"\n                            :dataSource='orientationData' :change='orientationChange' />\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <label>Yes branch direction</label>\n                    <div class=\"input-element\">\n                        <ejs-dropdownlist id='yesBranchDirection' :enabled=true :value=\"'Left in flow'\"\n                            :dataSource='branchData' :change='yesBranchDirectionChange' />\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <label>No branch direction</label>\n                    <div class=\"input-element\">\n                        <ejs-dropdownlist id='noBranchDirection' :enabled=true :value=\"'Right in flow'\"\n                            :dataSource='branchData' :change='noBranchDirectionChange' />\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <label>Horizontal spacing</label>\n                    <div class=\"input-element\">\n                        <ejs-numerictextbox ref=\"horizontalSpacingObj\" id=\"horizontalSpacing\" :min=\"20\" :max=\"120\"\n                            :format=\"'n'\" :step=\"1\" :value=\"50\" style=\"width: 100%;\" :change='horizontalSpacingChange' />\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <label>Vertical spacing</label>\n                    <div class=\"input-element\">\n                        <ejs-numerictextbox ref=\"verticalSpacingObj\" id=\"verticalSpacing\" :min=\"30\" :max=\"120\"\n                            :format=\"'n'\" :step=\"1\" :value=\"50\" style=\"width: 100%;\" :change='verticalSpacingChange' />\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</template>\n<style scoped>\n/* Container for diagram and property panel */\n.control-section {\n    width: 75%;\n    float: left;\n    border-right: 1px solid #D5D5D5;\n    /* Keep the diagram section on the left */\n}\n\n.property-panel-header {\n    font-size: larger;\n}\n\n.input-element {\n        margin-left: 10px;\n        width: 50%;\n}\n\n/* Diagram content style */\n.content-wrapper {\n    width: 100%;\n    background: white;\n    border: 1px solid #D5D5D5;\n}\n\n/* Property panel style */\n.flow-property-section {\n    width: 24%;\n    /* Adjusted to fill the remaining space */\n    float: right;\n    /* Ensure the property panel is on the right */\n    padding: 10px;\n}\n\n/* Align labels and inputs within the property panel */\n.row {\n    margin-left: 0;\n    margin-right: 0;\n    padding-top: 8px;\n}\n\n.property-panel-content .row {\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n}\n\n.property-panel-content label {\n    flex: 1;\n    font-weight: normal;\n}\n\n.property-panel-content input {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n}\n</style>\n<script>\nimport {\n    DiagramComponent,\n    FlowchartLayout,\n    DataBinding,DiagramTools\n} from \"@syncfusion/ej2-vue-diagrams\";\nimport {DataManager } from '@syncfusion/ej2-data';\nimport {\n  NumericTextBoxComponent,\n} from \"@syncfusion/ej2-vue-inputs\";\nimport { DropDownListComponent } from \"@syncfusion/ej2-vue-dropdowns\";\nconst orientationData = [\n    { text: 'Top to bottom', value: 'TopToBottom' }, { text: 'Left to right', value: 'LeftToRight' }\n];\n\nconst branchData = [\n    { text: 'Left in flow', value: 'LeftInFlow' }, { text: 'Right in flow', value: 'RightInFlow' }, { text: 'Same as flow', value: 'SameAsFlow' }\n];\n\n  //Initializes the data source for the layout\n  const flowchartData = [\n        { id: \"A\", name: \"Start\", shape: \"Terminator\", color: \"#90EE90\", parentId: null, stroke: \"#333\", strokeWidth: 1 },\n        { id: \"B\", name: \"Open the browser and go to Amazon site\", shape: \"Rectangle\", color: \"#1759B7\", parentId: [\"A\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"C\", name: \"Already a customer?\", shape: \"Decision\", color: \"#2F95D8\", parentId: [\"B\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"D\", name: \"Create an account\", shape: \"Rectangle\", color: \"#70AF16\", parentId: [\"C\"], label: [\"No\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"E\", name: \"Enter login information\", shape: \"Rectangle\", color: \"#70AF16\", parentId: [\"C\"], label: [\"Yes\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"F\", name: \"Search for the book in the search bar\", shape: \"Predefined Process\", color: \"#1759B7\", parentId: [\"E\", \"D\"], arrowType: \"single-line-arrow\", label: [\"\", \"\"], stroke: \"#333\", strokeWidth: 1 },\n        { id: \"G\", name: \"Select the preferred book\", shape: \"Rectangle\", color: \"#1759B7\", parentId: [\"F\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"H\", name: \"Is the book new or used?\", shape: \"Rectangle\", color: \"#2F95D8\", parentId: [\"G\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"I\", name: \"Select the new book\", shape: \"Rectangle\", color: \"#70AF16\", parentId: [\"H\"], label: [\"Yes\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"J\", name: \"Select the used book\", shape: \"Rectangle\", color: \"#70AF16\", parentId: [\"H\"], label: [\"No\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"K\", name: \"Add to Cart & Proceed to Checkout\", shape: \"Rectangle\", color: \"#1759B7\", parentId: [\"I\", \"J\"], arrowType: \"single-line-arrow\", label: [\"\", \"\"], stroke: \"#333\", strokeWidth: 1 },\n        { id: \"L\", name: \"Enter shipping and payment details\", shape: \"Rectangle\", color: \"#1759B7\", parentId: [\"K\", \"M\"], arrowType: \"single-line-arrow\", label: [\"\", \"\"], stroke: \"#333\", strokeWidth: 1 },\n        { id: \"M\", name: \"Is the information correct?\", shape: \"Decision\", color: \"#2F95D8\", parentId: [\"L\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"N\", name: \"Review and place the order\", shape: \"Rectangle\", color: \"#1759B7\", parentId: [\"M\"], label: [\"True\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"O\", name: \"End\", shape: \"Terminator\", color: \"#8E44CC\", parentId: [\"N\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 }\n    ];\nlet diagramInstance;\n\nexport default {\n    components: {\n        'ejs-diagram': DiagramComponent,\n        'ejs-dropdownlist': DropDownListComponent,\n        'ejs-numerictextbox': NumericTextBoxComponent,\n    },\n    data: function () {\n        return {\n            width: \"100%\",\n            height: \"750px\",\n            tool:DiagramTools.ZoomPan,\n            branchData:branchData,\n            orientationData:orientationData,\n            //Setting default nodes values\n            getNodeDefaults: (node) => {\n                node.width = 150;\n                node.height = 50;\n                if ((node.shape).shape === 'Decision') {\n                    node.width = 120;\n                    node.height = 100;\n                }\n                return node;\n            },\n            //Setting default connector values\n            getConnectorDefaults: (connector) => {\n                connector.type = 'Orthogonal';\n                if(connector.annotations && connector.annotations.length > 0) {\n                    connector.annotations[0].style.fill = 'white';\n                    connector.annotations[0].style.color = 'black';\n                }\n                return connector;\n            },\n            rulerSettings: {\n                showRulers: true\n            },\n            scrollSettings: {\n                scrollLimit: 'Infinity'\n            },\n            layout: {\n                type: 'Flowchart',\n                orientation: 'TopToBottom',\n                flowchartLayoutSettings: {\n                    yesBranchDirection: 'LeftInFlow',\n                    noBranchDirection: 'RightInFlow'\n                },\n                horizontalSpacing: 50,\n                verticalSpacing: 50\n            },\n            dataSourceSettings:{\n                id:'id',\n                parentId:'parentId',\n                dataSource: new DataManager(flowchartData),\n            },\n        orientationChange: function (args) {\n        let value = args.value;\n        diagramInstance.layout.orientation = value === 'Top to bottom' ? 'TopToBottom' : 'LeftToRight';\n        diagramInstance.dataBind();\n        },\n        yesBranchDirectionChange: (args) =>{\n            let value = args.value;\n            diagramInstance.layout.flowchartLayoutSettings.yesBranchDirection = value === 'Same as flow' ? 'SameAsFlow' : value === 'Right in flow' ? 'RightInFlow' : 'LeftInFlow';\n            diagramInstance.doLayout();\n        },\n        noBranchDirectionChange: (args) => {\n            let value = args.value;\n            diagramInstance.layout.flowchartLayoutSettings.noBranchDirection = value === 'Same as flow' ? 'SameAsFlow' : value === 'Right in flow' ? 'RightInFlow' : 'LeftInFlow';\n            diagramInstance.doLayout();\n\n        },\n        horizontalSpacingChange: function (args) {\n            let value = args.value;\n            diagramInstance.layout.horizontalSpacing = value;\n            diagramInstance.dataBind();\n        },\n        verticalSpacingChange: function (args) {\n            let value = args.value;\n            diagramInstance.layout.verticalSpacing = value;\n            diagramInstance.dataBind();\n        }\n\n        }\n    },\n    provide: {\n    diagram: [DataBinding, FlowchartLayout]\n    },\n    mounted: function () {\n        diagramInstance = this.$refs.diagramObj.ej2Instances;\n    },\n}\n\n</script>\n","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-diagrams\":\"*\",\"@syncfusion/ej2-vue-diagrams\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-vue-maps\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}