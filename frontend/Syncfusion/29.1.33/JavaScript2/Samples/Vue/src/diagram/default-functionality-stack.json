{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n  <div class=\"control-section\">\n    <div>\n      <ejs-toolbar\n        id=\"toolbar\"\n        ref=\"toolbar_diagram\"\n        overflowMode=\"Scrollable\"\n        style=\"width: 100%; height: 10%; margin-top: 10px\"\n        :clicked=\"toolbarclicked\"\n      >\n        <e-items>\n          <e-item prefixIcon=\"e-icons e-circle-add\" tooltipText=\"New Diagram\" id=\"New_Diagram\"></e-item>\n          <e-item  prefixIcon=\"e-icons e-folder-open\" tooltipText=\"Open Diagram\" id=\"Open_diagram\"></e-item>\n          <e-item prefixIcon=\"e-icons e-save\" tooltipText=\"Save Diagram\" id=\"Save\" ></e-item>\n          <e-item prefixIcon=\"e-print e-icons\" tooltipText=\"Print Diagram\" id=\"Print\"></e-item>\n          <e-item type=\"Input\" tooltipText=\"Export Diagram\" id=\"Export\" :template=\"exportImage\"></e-item>\n          <e-item type=\"Separator\"></e-item>\n          <e-item prefixIcon=\"e-cut e-icons\" tooltipText=\"Cut\"  id=\"Cut\"\n            cssClass=\"tb-item-middle tb-item-lock-category\" disabled=\"true\"></e-item>\n          <e-item prefixIcon=\"e-copy e-icons\" tooltipText=\"Copy\" id=\"Copy\"\n            cssClass=\"tb-item-middle tb-item-lock-category\" disabled=\"true\"></e-item>\n          <e-item prefixIcon=\"e-icons e-paste\" tooltipText=\"Paste\" id=\"Paste\" disabled=\"true\"></e-item>\n          <e-item type=\"Separator\"></e-item>\n          <e-item prefixIcon=\"e-icons e-undo\"  tooltipText=\"Undo\" id=\"Undo\" disabled=\"true\"></e-item>\n          <e-item prefixIcon=\"e-icons e-redo\" tooltipText=\"Redo\" id=\"Redo\" disabled=\"true\"></e-item>\n          <e-item type=\"Separator\"></e-item>\n          <e-item prefixIcon=\"e-pan e-icons\" tooltipText=\"Pan Tool\" id=\"Pan_tool\" cssClass=\"tb-item-start pan-item\"></e-item>\n          <e-item prefixIcon=\"e-mouse-pointer e-icons\" tooltipText=\"Select Tool\" id=\"Select_tool\" cssClass=\"tb-item-middle tb-item-selected\"></e-item>\n          <e-item tooltipText=\"Draw Connectors\" :template=\"drawConnector\" id=\"drawConnector\"></e-item>\n          <e-item tooltipText=\"Draw Shapes\" :template=\"drawShapes\" id=\"drawShapes\"></e-item>\n          <e-item prefixIcon=\"e-caption e-icons\" tooltipText=\"Text Tool\" id=\"Text_tool\" cssClass=\"tb-item-end\"></e-item>\n          <e-item type=\"Separator\"></e-item>\n          <e-item disabled=\"true\" prefixIcon=\"e-icons e-lock\" tooltipText=\"Lock\" id=\"Lock\" cssClass=\"tb-item-middle tb-item-lock-category\"></e-item>\n          <e-item disabled=\"true\"  prefixIcon=\"e-trash e-icons\" tooltipText=\"Delete\" id=\"Delete\"\n            cssClass=\"tb-item-middle tb-item-lock-category\"></e-item>\n          <e-item type=\"Separator\"></e-item>\n          <e-item disabled=\"true\" type=\"Input\" tooltipText=\"Align Objects\" :template=\"alignObjects\" id=\"alignObjects\"></e-item>\n          <e-item disabled=\"true\" type=\"Input\" tooltipText=\"Distribute Objects\" :template=\"distributeObjects\" id=\"distributeObjects\"></e-item>\n          <e-item type=\"Separator\"></e-item>\n          <e-item disabled=\"true\" type=\"Input\" tooltipText=\"Order Commands\" :template=\"orderCommands\" id=\"orderCommands\"></e-item>\n          <e-item type=\"Separator\"></e-item>\n          <e-item disabled=\"true\" type=\"Input\" tooltipText=\"Group/Ungroup\" :template=\"groupUngroup\" id=\"groupUngroup\"></e-item>\n          <e-item type=\"Separator\"></e-item>\n          <e-item disabled=\"true\" type=\"Input\" tooltipText=\"Rotate\" :template=\"rotateObjects\" id=\"rotateObjects\"></e-item>\n          <e-item type=\"Separator\"></e-item>\n          <e-item  disabled=\"true\" type=\"Input\" tooltipText=\"Flip\" :template=\"flipObjects\" id=\"flipObjects\"\n          ></e-item>\n          <e-item type=\"Separator\"></e-item>\n          <e-item :template=\"zoomDiagram\" id=\"zoomDiagram\"> </e-item>\n        </e-items>\n      </ejs-toolbar>\n    </div>\n    <div style=\"width: 100%\">\n      <div class=\"sb-mobile-palette-bar\">\n        <div\n          id=\"palette-icon\"\n          ref=\"paletteIcon\"\n          role=\"button\"\n          class=\"e-ddb-icons1 e-toggle-palette\"\n        ></div>\n      </div>\n      <div id=\"palette-space\" class=\"sb-mobile-palette\">\n        <ejs-symbolpalette\n          id=\"symbolpalette\"\n          ref=\"paletteSpace\"\n          :expandMode=\"expandMode\"\n          :palettes=\"palettes\"\n          :width=\"palettewidth\"\n          :height=\"paletteheight\"\n          :getNodeDefaults=\"palettegetNodeDefaults\"\n          :getSymbolInfo=\"getSymbolInfo\"\n          :symbolMargin=\"symbolMargin\"\n          :symbolHeight=\"symbolHeight\"\n          :symbolWidth=\"symbolWidth\"\n          :enableSearch=\"true\"\n        ></ejs-symbolpalette>\n      </div>\n\n      <div id=\"diagram-space\" class=\"sb-mobile-diagram\">\n        <ejs-diagram\n          style=\"display: block\"\n          ref=\"diagramObject\"\n          id=\"diagram\"\n          :width=\"width\"\n          :height=\"height\"\n          :nodes=\"nodes\"\n          :connectors=\"connectors\"\n          :getNodeDefaults=\"getNodeDefaults\"\n          :getConnectorDefaults=\"getConnectorDefaults\"\n          :dragEnter=\"dragEnter\"\n          :selectionChange=\"selectionChange\"\n          :historyChange=\"historyChange\"\n          :snapSettings=\"snapSettings\"\n          :created=\"created\"\n          :drawingObject=\"drawingObject\"\n        ></ejs-diagram>\n      </div>\n      <div style=\"display: none\">\n        <ejs-uploader\n          id=\"fileupload\"\n          name=\"UploadFiles\"\n          :asyncSettings=\"fileuploadasyncSettings\"\n          :success=\"fileuploadsuccess\"\n          :showFileList=\"showFile\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n<style scoped>\n/*To align palette */\n.sb-mobile-palette {\n  width: 240px;\n  height: 100%;\n  float: left;\n}\n\n.sb-mobile-palette-bar {\n  display: none;\n}\n/*To align diagram */\n.sb-mobile-diagram {\n  width: calc(100% - 242px);\n  height: 100%;\n  float: left;\n}\n\n@media (max-width: 550px) {\n  .sb-mobile-palette {\n    z-index: 19;\n    position: absolute;\n    display: none;\n    transition: transform 300ms linear, visibility 0s linear 300ms;\n    width: 39%;\n    height: 100%;\n  }\n\n  .sb-mobile-palette-bar {\n    display: block;\n    width: 100%;\n    background: #fafafa;\n    padding: 10px 10px;\n    border: 0.5px solid #e0e0e0;\n    min-height: 40px;\n  }\n\n  .sb-mobile-diagram {\n    width: 100%;\n    height: 100%;\n    float: left;\n    left: 0px;\n  }\n\n  #palette-icon {\n    font-size: 20px;\n  }\n}\n\n.sb-mobile-palette-open {\n  position: absolute;\n  display: block;\n  right: 15px;\n}\n.e-export::before {\n  content: \"\\\\e711\";\n}\n\n/* These styles are used for toolbar icons*/\n@font-face {\n  font-family: \"Bootstrap5 Diagram Builder\";\n  src: url(data:application/x-font-ttf;charset=utf-8;base64,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)\n    format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n[class^=\"sf-diagram-icon-\"],\n[class*=\" sf-diagram-icon-\"] {\n  font-family: \"Bootstrap5 Diagram Builder\" !important;\n  speak: none;\n  font-size: 55px;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.sf-diagram-icon-align-left-1:before {\n  content: \"\\\\e8bc\";\n}\n\n.sf-diagram-icon-align-middle-1:before {\n  content: \"\\\\e8bd\";\n}\n\n.sf-diagram-icon-align-right-1:before {\n  content: \"\\\\e8be\";\n}\n\n.sf-diagram-icon-align-top-1:before {\n  content: \"\\\\e8bf\";\n}\n\n.sf-diagram-icon-align-center-1:before {\n  content: \"\\\\e8c0\";\n}\n\n.sf-diagram-icon-align-bottom-1:before {\n  content: \"\\\\e8c1\";\n}\n\n.sf-diagram-icon-distribute-vertical:before {\n  content: \"\\\\e8c2\";\n}\n\n.sf-diagram-icon-distribute-horizontal:before {\n  content: \"\\\\e8c3\";\n}\n\n.sf-diagram-icon-elipse:before {\n  content: \"\\\\e8c4\";\n}\n\n.sf-diagram-icon-line-1:before {\n  content: \"\\\\e8c5\";\n}\n\n.sf-diagram-icon-orthogonal:before {\n  content: \"\\\\e8c6\";\n}\n\n.sf-diagram-icon-bezier:before {\n  content: \"\\\\e8c7\";\n}\n\n.sf-diagram-icon-same-width:before {\n  content: \"\\\\e8c8\";\n}\n\n.sf-diagram-icon-same-height:before {\n  content: \"\\\\e8c9\";\n}\n\n.sf-diagram-icon-same-size:before {\n  content: \"\\\\e8ca\";\n}\n\n@font-face {\n  font-family: \"e-ddb-icons\";\n  src: url(data:application/x-font-ttf;charset=utf-8;base64,)\n    format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n.e-ddb-icons {\n  font-family: \"e-ddb-icons\";\n  speak: none;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.e-basic::before {\n  content: \"\\\\e726\";\n}\n\n.e-flow::before {\n  content: \"\\\\e724\";\n}\n\n.e-diagram-connector::before {\n  content: \"\\\\e725\";\n}\n</style>\n\n<script>\nimport { createApp } from \"vue\";\nimport { Browser } from \"@syncfusion/ej2-base\";\nimport {\n  DiagramComponent,\n  SymbolPaletteComponent,\n  PrintAndExport,\n  IExportOptions,\n  NodeConstraints,\n  ConnectorConstraints,\n  SymbolInfo,\n  IDragEnterEventArgs,\n  DiagramTools,\n  GridlinesModel,\n  FlipDirection,\n} from \"@syncfusion/ej2-vue-diagrams\";\nimport { Uploader, UploaderComponent } from \"@syncfusion/ej2-vue-inputs\";\nimport {\n  ToolbarComponent,\n  ItemsDirective,\n  ItemDirective,\n  Toolbar,\n} from \"@syncfusion/ej2-vue-navigations\";\nimport { SplitButtonComponent } from \"@syncfusion/ej2-vue-splitbuttons\";\n\nlet isMobile;\nlet interval;\nlet diagram;\nlet toolbarEditor;\nlet paletteSpace;\nlet paletteIcon;\n//intervals for grid lines\ninterval = [\n  1, 9, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75,\n  0.25, 9.75, 0.25, 9.75, 0.25, 9.75,\n];\n\nlet gridlines = {\n  lineColor: \"#e0e0e0\",\n  lineIntervals: interval,\n};\n\n// Function to create a node with given properties\nfunction createNode(id, height, offsetX, offsetY, shape, content, margin = {}) {\n  return {\n    id: id,\n    height: height,\n    offsetX: offsetX,\n    offsetY: offsetY,\n    shape: { type: \"Flow\", shape: shape },\n    annotations: [{ content: content, margin: margin }],\n  };\n}\n\n// Initializing the nodes for the diagram\nlet nodes = [\n  createNode(\"NewIdea\", 60, 300, 80, \"Terminator\", \"Place Order\"),\n  createNode(\"Meeting\", 60, 300, 160, \"Process\", \"Start Transaction\"),\n  createNode(\"BoardDecision\", 60, 300, 240, \"Process\", \"Verification\"),\n  createNode(\"Project\", 60, 300, 330, \"Decision\", \"Credit card valid?\"),\n  createNode(\"End\", 60, 300, 430, \"Decision\", \"Funds available?\"),\n  createNode(\"node11\", 60, 545, 330, \"Process\", \"Enter payment method\"),\n  createNode( \"transaction_entered\", 60, 300,630,\"Terminator\",\"Log transaction\"),\n  createNode(\"node12\", 60, 480, 630, \"Process\", \"Reconcile the entries\"),\n  createNode(\"transaction_completed\",60,300,530,\"Process\",\"Complete Transaction\"),\n  createNode(\"Data\", 45, 110, 530, \"Data\", \"Send e-mail\", {left: 25,right: 25,}),\n  createNode(\"node10\", 70, 475, 530, \"DirectData\", \"Customer Database\", {left: 25,right: 25,}),\n];\n\n// Function to create a connector with given properties\nfunction createConnector(id,sourceID,targetID,type = \"Straight\",annotations = [],segments = [],style = {}) {\n  return {\n    id: id,\n    sourceID: sourceID,\n    targetID: targetID,\n    type: type,\n    annotations: annotations,\n    segments: segments,\n    style: style,\n  };\n}\n\n// Initializing the connectors for the diagram\nlet connectors = [\n  createConnector(\"connector1\", \"NewIdea\", \"Meeting\"),\n  createConnector(\"connector2\", \"Meeting\", \"BoardDecision\"),\n  createConnector(\"connector3\", \"BoardDecision\", \"Project\"),\n  createConnector(\"connector4\", \"Project\", \"End\", \"Straight\", [{ content: \"Yes\", style: { fill: \"white\" } }]),\n  createConnector(\"connector5\", \"End\", \"transaction_completed\", \"Straight\", [{ content: \"Yes\", style: { fill: \"white\" } }]),\n  createConnector(\"connector6\", \"transaction_completed\", \"transaction_entered\"),\n  createConnector(\"connector7\", \"transaction_completed\", \"Data\"),\n  createConnector(\"connector8\", \"transaction_completed\", \"node10\"),\n  createConnector(\"connector9\",\"node11\",\"Meeting\",\"Orthogonal\",[],[{ type: \"Orthogonal\", direction: \"Top\", length: 120 }]),\n  createConnector(\"connector10\",\"End\",\"node11\",\"Orthogonal\",\n    [{ content: \"No\", style: { fill: \"white\" } }],\n    [{ type: \"Orthogonal\", direction: \"Right\", length: 100 }]),\n  createConnector(\"connector11\", \"Project\", \"node11\", \"Straight\", [{ content: \"No\", style: { fill: \"white\" } },]),\n  createConnector(\"connector12\",\"transaction_entered\",\"node12\",\"Straight\",[],[],{ strokeDashArray: \"2,2\" }),\n];\n\n//Initialize the flowshapes for the symbol palatte\nlet flowshapes = [\n  { id: \"Terminator\", shape: { type: \"Flow\", shape: \"Terminator\" } },\n  { id: \"Process\", shape: { type: \"Flow\", shape: \"Process\" } },\n  { id: \"Decision\", shape: { type: \"Flow\", shape: \"Decision\" } },\n  { id: \"Document\", shape: { type: \"Flow\", shape: \"Document\" } },\n  {\n    id: \"PreDefinedProcess\",\n    shape: { type: \"Flow\", shape: \"PreDefinedProcess\" },\n  },\n  { id: \"PaperTap\", shape: { type: \"Flow\", shape: \"PaperTap\" } },\n  { id: \"DirectData\", shape: { type: \"Flow\", shape: \"DirectData\" } },\n  { id: \"SequentialData\", shape: { type: \"Flow\", shape: \"SequentialData\" } },\n  { id: \"Sort\", shape: { type: \"Flow\", shape: \"Sort\" } },\n  { id: \"MultiDocument\", shape: { type: \"Flow\", shape: \"MultiDocument\" } },\n  { id: \"Collate\", shape: { type: \"Flow\", shape: \"Collate\" } },\n  { id: \"SummingJunction\", shape: { type: \"Flow\", shape: \"SummingJunction\" } },\n  { id: \"Or\", shape: { type: \"Flow\", shape: \"Or\" } },\n  { id: \"InternalStorage\", shape: { type: \"Flow\", shape: \"InternalStorage\" } },\n  { id: \"Extract\", shape: { type: \"Flow\", shape: \"Extract\" } },\n  { id: \"ManualOperation\", shape: { type: \"Flow\", shape: \"ManualOperation\" } },\n  { id: \"Merge\", shape: { type: \"Flow\", shape: \"Merge\" } },\n  {\n    id: \"OffPageReference\",\n    shape: { type: \"Flow\", shape: \"OffPageReference\" },\n  },\n  {\n    id: \"SequentialAccessStorage\",\n    shape: { type: \"Flow\", shape: \"SequentialAccessStorage\" },\n  },\n  { id: \"Annotation\", shape: { type: \"Flow\", shape: \"Annotation\" } },\n  { id: \"Annotation2\", shape: { type: \"Flow\", shape: \"Annotation2\" } },\n  { id: \"Data\", shape: { type: \"Flow\", shape: \"Data\" } },\n  { id: \"Card\", shape: { type: \"Flow\", shape: \"Card\" } },\n  { id: \"Delay\", shape: { type: \"Flow\", shape: \"Delay\" } },\n];\n\n// Function to create a connector symbol with given properties\nfunction createConnectorSymbol(\n  id,\n  type,\n  targetDecorator = { shape: \"None\" },\n  style = { strokeWidth: 2, strokeColor: \"#757575\" }\n) {\n  const defaultSourcePoint = { x: 0, y: 0 };\n  const defaultTargetPoint = { x: 60, y: 60 };\n  return {\n    id: id,\n    type: type,\n    sourcePoint: defaultSourcePoint,\n    targetPoint: defaultTargetPoint,\n    targetDecorator: targetDecorator,\n    style: style,\n  };\n}\n\n// Initializing the connector symbols for the symbol palette\nconst connectorSymbols = [\n  createConnectorSymbol(\"Orthogonal1\", \"Orthogonal\", {shape: \"Arrow\",\n    style: { strokeColor: \"#757575\", fill: \"#757575\" },}),\n  createConnectorSymbol(\"Orthogonal2\", \"Orthogonal\"),\n  createConnectorSymbol(\"Straight1\", \"Straight\", {shape: \"Arrow\",\n    style: { strokeColor: \"#757575\", fill: \"#757575\" },}),\n  createConnectorSymbol(\"Straight2\", \"Straight\"),\n  createConnectorSymbol(\"Bezier\", \"Bezier\"),\n];\n\n//To get default nodes values for diagram\nfunction getNodeDefaults(node) {\n  if (node.width === undefined) {\n    node.width = 145;\n  }\n  node.style = { fill: \"#357BD2\", strokeColor: \"white\" };\n  for (let i = 0; i < node.annotations.length; i++) {\n    node.annotations[i].style = {\n      color: \"white\",\n      fill: \"transparent\",\n    };\n  }\n  node.ports = getPorts();\n  return node;\n}\n\n//To get default connectors values for diagram\nfunction getConnectorDefaults(connector) {\n  if (connector.id.indexOf(\"connector\") !== -1) {\n    connector.targetDecorator = { shape: \"Arrow\", width: 10, height: 10 };\n  }\n}\n\n//To handle drag events\nfunction dragEnter(args) {\n  let obj = args.element;\n  if (obj && obj.width && obj.height) {\n    let objWidth = obj.width;\n    let objHeight = obj.height;\n    let ratio = 100 / obj.width;\n    obj.width = 100;\n    obj.height *= ratio;\n    if (obj.offsetX) obj.offsetX += (obj.width - objWidth) / 2;\n    if (obj.offsetY) obj.offsetY += (obj.height - objHeight) / 2;\n    obj.style = { fill: \"#357BD2\", strokeColor: \"white\" };\n  }\n}\n\n//To get default values for nodes in symbol palette\nfunction palettegetNodeDefaults(symbol) {\n  symbol.style = { strokeColor: \"#757575\" };\n  if (symbol.id === \"Terminator\" || symbol.id === \"Process\") {\n    symbol.width = 80;\n    symbol.height = 40;\n  } else if (\n    symbol.id === \"Decision\" ||\n    symbol.id === \"Document\" ||\n    symbol.id === \"PreDefinedProcess\" ||\n    symbol.id === \"PaperTap\" ||\n    symbol.id === \"DirectData\" ||\n    symbol.id === \"MultiDocument\" ||\n    symbol.id === \"Data\"\n  ) {\n    symbol.width = 50;\n    symbol.height = 40;\n  } else {\n    symbol.width = 50;\n    symbol.height = 50;\n  }\n}\n\nexport default {\n  components: {\n    \"ejs-diagram\": DiagramComponent,\n    \"ejs-symbolpalette\": SymbolPaletteComponent,\n    \"ejs-uploader\": UploaderComponent,\n    \"ejs-toolbar\": ToolbarComponent,\n    \"e-items\": ItemsDirective,\n    \"e-item\": ItemDirective,\n    \"ejs-splitbutton\": SplitButtonComponent,\n  },\n  data: function () {\n    return {\n      width: \"100%\",\n      height: \"700px\",\n      nodes: nodes,\n      connectors: connectors,\n      snapSettings: {\n        horizontalGridlines: gridlines,\n        verticalGridlines: gridlines,\n      },\n      created: (args) => {\n        addEvents();\n      },\n      getNodeDefaults: (node) => {\n        return getNodeDefaults(node);\n      },\n      getConnectorDefaults: (connector) => {\n        return getConnectorDefaults(connector);\n      },\n      dragEnter: (args) => {\n        return dragEnter(args);\n      },\n      expandMode: \"Multiple\",\n      palettes: [\n        {\n          id: \"flow\",\n          expanded: true,\n          symbols: flowshapes,\n          iconCss: \"shapes\",\n          title: \"Flow Shapes\",\n        },\n        {\n          id: \"connectors\",\n          expanded: true,\n          symbols: connectorSymbols,\n          iconCss: \"shapes\",\n          title: \"Connectors\",\n        },\n      ],\n      palettewidth: \"100%\",\n      paletteheight: \"700px\",\n      symbolHeight: 60,\n      symbolWidth: 60,\n      palettegetNodeDefaults: (symbol) => {\n        return palettegetNodeDefaults(symbol);\n      },\n      symbolMargin: { left: 15, right: 15, top: 15, bottom: 15 },\n      getSymbolInfo: (symbol) => {\n        return { fit: true };\n      },\n\n      //To handle tool bar clicks\n      toolbarclicked: (args) => {\n        let item = args.item.tooltipText;\n        switch (item) {\n          case \"Undo\":\n            diagram.undo();\n            break;\n          case \"Redo\":\n            diagram.redo();\n            break;\n          case \"Lock\":\n            lockObject(args);\n            break;\n          case \"Cut\":\n            diagram.cut();\n            updateToolbarItems([\"Paste\"], false);\n            break;\n          case \"Copy\":\n            diagram.copy();\n            updateToolbarItems([\"Paste\"], false);\n            break;\n          case \"Paste\":\n            diagram.paste();\n            break;\n          case \"Delete\":\n            diagram.remove();\n            break;\n          case \"Select Tool\":\n            diagram.clearSelection();\n            diagram.tool = DiagramTools.Default;\n            break;\n          case \"Text Tool\":\n            diagram.clearSelection();\n            diagram.selectedItems.userHandles = [];\n            diagram.drawingObject = { shape: { type: \"Text\" } };\n            diagram.tool = DiagramTools.ContinuousDraw;\n            break;\n          case \"Pan Tool\":\n            diagram.clearSelection();\n            diagram.tool = DiagramTools.ZoomPan;\n            break;\n          case \"New Diagram\":\n            diagram.clear();\n            historyChange(args);\n            break;\n          case \"Print Diagram\":\n            printDiagram(args);\n            break;\n          case \"Save Diagram\":\n            download(diagram.saveDiagram());\n            break;\n          case \"Open Diagram\":\n            document\n              .getElementsByClassName(\"e-file-select-wrap\")[0]\n              .querySelector(\"button\")\n              .click();\n            break;\n        }\n        diagram.dataBind();\n      },\n      //To enable and disable toolbar items based on selection changes\n      selectionChange: (args) => {\n        if (args.state === \"Changed\") {\n          var selectedItems = diagram.selectedItems.nodes;\n          selectedItems = selectedItems.concat(\n            diagram.selectedItems.connectors\n          );\n          if (selectedItems.length === 0) {\n            updateToolbarItems([\"Cut\",\"Copy\",\"Lock\",\"Delete\",\"orderCommands\",\"rotateObjects\",\"flipObjects\",], true);\n            disableMultiselectedItems();\n          }\n          if (selectedItems.length === 1) {\n            enableItems();\n            disableMultiselectedItems();\n\n            if (\n              selectedItems[0].children !== undefined &&\n              selectedItems[0].children.length > 0\n            ) {\n              updateToolbarItems([\"groupUngroup\"], false);\n            } else {\n              updateToolbarItems([\"groupUngroup\"], true);\n            }\n          }\n\n          if (selectedItems.length > 1) {\n            enableItems();\n            updateToolbarItems([\"alignObjects\", \"distributeObjects\", \"groupUngroup\"],false );\n            if (selectedItems.length > 2) {\n              updateToolbarItems([\"distributeObjects\"], false);\n            } else {\n              updateToolbarItems([\"distributeObjects\"], true);\n            }\n          }\n        }\n      },\n      drawingObject: { type: \"Orthogonal\" },\n      //To export diagram\n      exportImage: function () {\n        return {\n          template: createApp({}).component(\"export\", {\n            template:\n              ' <ejs-splitbutton :items=\"items\" iconCss=\"e-export e-icons\" :select=\"exportOptions\"></ejs-splitbutton>',\n            components: {\n              \"ejs-splitbutton\": SplitButtonComponent,\n            },\n            data() {\n              return {\n                items: [{ text: \"JPG\" }, { text: \"PNG\" }, { text: \"SVG\" }],\n                exportOptions: function (args) {\n                  var exportOptions = {};\n                  exportOptions.format = args.item.text;\n                  exportOptions.mode = \"Download\";\n                  exportOptions.region = \"PageSettings\";\n                  exportOptions.fileName = \"Export\";\n                  exportOptions.pageHeight = 400;\n                  exportOptions.pageWidth = 400;\n                  exportOptions.margin = {left: 0,top: 0, bottom: 0,right: 0};\n                  diagram.exportDiagram(exportOptions);\n                },\n              };\n            },\n          }),\n        };\n      },\n      //To draw given connectors\n      drawConnector: function () {\n        return {\n          template: createApp({}).component(\"drawConnector\", {\n            template:\n              '<ejs-splitbutton :items =\"conTypeItems\" iconCss=\"sf-diagram-icon-orthogonal\" :select=\"onConnectorSelect\"></ejs-splitbutton>',\n            components: {\n              \"ejs-splitbutton\": SplitButtonComponent,\n            },\n            data() {\n              return {\n                conTypeItems: [\n                  { text: \"Straight\", iconCss: \"e-icons e-line\" },\n                  { text: \"Orthogonal\", iconCss: \"sf-diagram-icon-orthogonal\" },\n                  { text: \"Bezier\", iconCss: \"sf-diagram-icon-bezier\" },\n                ],\n                onConnectorSelect: function (args) {\n                  diagram.clearSelection();\n                  diagram.drawingObject = { type: args.item.text };\n                  diagram.tool = DiagramTools.ContinuousDraw;\n                  diagram.selectedItems.userHandles = [];\n                  diagram.dataBind();\n                },\n              };\n            },\n          }),\n        };\n      },\n      //To draw given shapes\n      drawShapes: function () {\n        return {\n          template: createApp({}).component(\"drawShapes\", {\n            template:\n              '<ejs-splitbutton :items=\"shapesItems\" iconCss=\"e-shapes e-icons\" :select=\"onShapesSelect\"></ejs-splitbutton>',\n            components: {\n              \"ejs-splitbutton\": SplitButtonComponent,\n            },\n            data() {\n              return {\n                shapesItems: [\n                  { text: \"Rectangle\", iconCss: \"e-rectangle e-icons\" },\n                  { text: \"Ellipse\", iconCss: \" e-circle e-icons\" },\n                  { text: \"Polygon\", iconCss: \"e-line e-icons\" },\n                ],\n                onShapesSelect: function (args) {\n                  diagram.clearSelection();\n                  diagram.drawingObject = { shape: { shape: args.item.text } };\n                  diagram.tool = DiagramTools.ContinuousDraw;\n                  diagram.selectedItems.userHandles = [];\n                  diagram.dataBind();\n                },\n              };\n            },\n          }),\n        };\n      },\n      //To align selected diagram objects\n      alignObjects: function () {\n        return {\n          template: createApp({}).component(\"alignObjects\", {\n            template:\n              '<ejs-splitbutton :items=\"alignItems\" iconCss=\"sf-diagram-icon-align-center-1\" :select=\"onSelectAlignObjects\"></ejs-splitbutton>',\n            components: {\n              \"ejs-splitbutton\": SplitButtonComponent,\n            },\n            data() {\n              return {\n                alignItems: [\n                  {iconCss: \"sf-diagram-icon-align-left-1\", text: \"Align Left\",},\n                  {iconCss: \"sf-diagram-icon-align-center-1\", text: \"Align Center\",},\n                  { iconCss: \"sf-diagram-icon-align-right-1\",text: \"Align Right\",},\n                  { iconCss: \"sf-diagram-icon-align-top-1\", text: \"Align Top\" },\n                  { iconCss: \"sf-diagram-icon-align-middle-1\",text: \"Align Middle\"},\n                  {iconCss: \"sf-diagram-icon-align-bottom-1\",text: \"Align Bottom\",},\n                ],\n                onSelectAlignObjects: function (args) {\n                  var item = args.item.text;\n                  var alignType = item.replace(\"Align\", \"\");\n                  var alignType1 = alignType.charAt(0).toUpperCase() + alignType.slice(1);\n                  diagram.align(alignType1.trim());\n                },\n              };\n            },\n          }),\n        };\n      },\n      //To distribute selected diagram objects\n      distributeObjects: function () {\n        return {\n          template: createApp({}).component(\"distributeObjects\", {\n            template:\n              '<ejs-splitbutton :items=\"distributeItems\" iconCss=\"sf-diagram-icon-distribute-vertical\" :select=\"onSelectDistributeObjects\"></ejs-splitbutton>',\n            components: {\n              \"ejs-splitbutton\": SplitButtonComponent,\n            },\n            data() {\n              return {\n                distributeItems: [\n                  {iconCss: \"sf-diagram-icon-distribute-vertical\",text: \"Distribute Objects Vertically\"},\n                  {iconCss: \"sf-diagram-icon-distribute-horizontal\",text: \"Distribute Objects Horizontally\" },\n                ],\n                onSelectDistributeObjects: function (args) {\n                  diagram.distribute(args.item.text === \"Distribute Objects Vertically\"? \"BottomToTop\": \"RightToLeft\");\n                },\n              };\n            },\n          }),\n        };\n      },\n      //To order diagram objects.\n      orderCommands: function () {\n        return {\n          template: createApp({}).component(\"orderCommands\", {\n            template:\n              '<ejs-splitbutton :items=\"orderItems\" iconCss=\"e-icons e-order\" :select=\"onSelectOrder\"></ejs-splitbutton>',\n            components: {\n              \"ejs-splitbutton\": SplitButtonComponent,\n            },\n            data() {\n              return {\n                orderItems: [\n                  { iconCss: \"e-icons e-bring-forward\", text: \"Bring Forward\" },\n                  {iconCss: \"e-icons e-bring-to-front\",text: \"Bring To Front\"},\n                  { iconCss: \"e-icons e-send-backward\", text: \"Send Backward\" },\n                  { iconCss: \"e-icons e-send-to-back\", text: \"Send To Back\" },\n                ],\n                onSelectOrder: function (args) {\n                  switch (args.item.text) {\n                    case \"Bring Forward\":\n                      diagram.moveForward();\n                      break;\n                    case \"Bring To Front\":\n                      diagram.bringToFront();\n                      break;\n                    case \"Send Backward\":\n                      diagram.sendBackward();\n                      break;\n                    case \"Send To Back\":\n                      diagram.sendToBack();\n                      break;\n                  }\n                },\n              };\n            },\n          }),\n        };\n      },\n      //To group and ungroup selected diagram objects.\n      groupUngroup: function () {\n        return {\n          template: createApp({}).component(\"groupUngroup\", {\n            template:\n              '<ejs-splitbutton :items=\"groupItems\" iconCss=\"e-icons e-group-1\" :select=\"onSelectGroup\"></ejs-splitbutton>',\n            components: {\n              \"ejs-splitbutton\": SplitButtonComponent,\n            },\n            data() {\n              return {\n                groupItems: [\n                  { text: \"Group\", iconCss: \"e-icons e-group-1\" },\n                  { text: \"Ungroup\", iconCss: \"e-icons e-ungroup-1\" },\n                ],\n                onSelectGroup: function (args) {\n                  if (args.item.text === \"Group\") {\n                    diagram.group();\n                  } else if (args.item.text === \"Ungroup\") {\n                    diagram.unGroup();\n                  }\n                },\n              };\n            },\n          }),\n        };\n      },\n      //To rotate selected diagram objects\n      rotateObjects: function () {\n        return {\n          template: createApp({}).component(\"rotateObjects\", {\n            template:\n              '<ejs-splitbutton :items=\"rotateItems\" iconCss=\"e-icons e-repeat\" :select=\"onSelectRotate\"></ejs-splitbutton>',\n            components: {\n              \"ejs-splitbutton\": SplitButtonComponent,\n            },\n            data() {\n              return {\n                rotateItems: [\n                  {iconCss: \"e-icons e-transform-right\", text: \"Rotate Clockwise\"},\n                  {iconCss: \"e-icons e-transform-left\",text: \"Rotate Counter-Clockwise\"},\n                ],\n                onSelectRotate: function (args) {\n                diagram.rotate(diagram.selectedItems,args.item.text === \"Rotate Clockwise\" ? 90 : -90 );\n                },\n              };\n            },\n          }),\n        };\n      },\n      //To flip selected diagram objects\n      flipObjects: function () {\n        return {\n          template: createApp({}).component(\"flipObjects\", {\n            template:\n              '<ejs-splitbutton :items=\"flipItems\" iconCss=\"e-icons e-flip-horizontal\" :select=\"onSelectFlip\"></ejs-splitbutton>',\n            components: {\n              \"ejs-splitbutton\": SplitButtonComponent,\n            },\n            data() {\n              return {\n                flipItems: [\n                  {iconCss: \"e-icons e-flip-horizontal\",text: \"Flip Horizontal\"},\n                  { iconCss: \"e-icons e-flip-vertical\", text: \"Flip Vertical\" },\n                ],\n                onSelectFlip: function (args) {\n                flipObjects(args.item.text);\n                },\n              };\n            },\n          }),\n        };\n      },\n      //To provide zoom options\n      zoomDiagram: function () {\n        return {\n          template: createApp({}).component(\"zoomDiagram\", {\n            template:\n              '<ejs-splitbutton id=\"btnZoom\" :items=\"zoomMenuItems\" content=\"100%\" :select=\"zoomChange\"></ejs-splitbutton>',\n            components: {\n              \"ejs-splitbutton\": SplitButtonComponent,\n            },\n            data() {\n              return {\n                zoomMenuItems: [\n                  { text: \"Zoom In\" },\n                  { text: \"Zoom Out\" },\n                  { text: \"Zoom to Fit\" },\n                  { text: \"Zoom to 50%\" },\n                  { text: \"Zoom to 100%\" },\n                  { text: \"Zoom to 200%\" },\n                ],\n                zoomChange: function (args) {\n                  var zoomCurrentValue = document.getElementById(\"btnZoom\").ej2_instances[0];\n                  var currentZoom = diagram.scrollSettings.currentZoom;\n                  var zoom = {};\n                  switch (args.item.text) {\n                    case \"Zoom In\":\n                      diagram.zoomTo({ type: \"ZoomIn\", zoomFactor: 0.2 });\n                      zoomCurrentValue.content =(diagram.scrollSettings.currentZoom * 100).toFixed() +\"%\";\n                      break;\n                    case \"Zoom Out\":\n                      diagram.zoomTo({ type: \"ZoomOut\", zoomFactor: 0.2 });\n                      zoomCurrentValue.content =(diagram.scrollSettings.currentZoom * 100).toFixed() +\"%\";\n                      break;\n                    case \"Zoom to Fit\":\n                      zoom.zoomFactor = 1 / currentZoom - 1;\n                      diagram.zoomTo(zoom);\n                      zoomCurrentValue.content = diagram.scrollSettings.currentZoom;\n                      break;\n                    case \"Zoom to 50%\":\n                      if (currentZoom === 0.5) {\n                        currentZoom = 0;\n                        zoom.zoomFactor = 0.5 / currentZoom - 1;\n                        diagram.zoomTo(zoom);\n                      } else {\n                        zoom.zoomFactor = 0.5 / currentZoom - 1;\n                        diagram.zoomTo(zoom);\n                      }\n                      break;\n                    case \"Zoom to 100%\":\n                      if (currentZoom === 1) {\n                        currentZoom = 0;\n                        zoom.zoomFactor = 1 / currentZoom - 1;\n                        diagram.zoomTo(zoom);\n                      } else {\n                        zoom.zoomFactor = 1 / currentZoom - 1;\n                        diagram.zoomTo(zoom);\n                      }\n                      break;\n                    case \"Zoom to 200%\":\n                      if (currentZoom === 2) {\n                        currentZoom = 0;\n                        zoom.zoomFactor = 2 / currentZoom - 1;\n                        diagram.zoomTo(zoom);\n                      } else {\n                        zoom.zoomFactor = 2 / currentZoom - 1;\n                        diagram.zoomTo(zoom);\n                      }\n                      break;\n                  }\n                  zoomCurrentValue.content = Math.round(diagram.scrollSettings.currentZoom * 100) + \" %\";\n                },\n              };\n            },\n          }),\n        };\n      },\n      fileuploadasyncSettings: {\n        saveUrl:\n          \"http://localhost:62728/api/FileUploader/Save\",\n        removeUrl:\n          \"http://localhost:62728/api/FileUploader/Remove\",\n      },\n      fileuploadsuccess: onUploadSuccess,\n      showFile: true,\n\n      // To enable and disable undo/redo button\n      historyChange: (args) => {\n        updateToolbarItems([\"Undo\"],diagram.historyManager.undoStack.length === 0);\n        updateToolbarItems([\"Redo\"],diagram.historyManager.redoStack.length === 0);\n      },\n    };\n  },\n  provide: {\n    diagram: [PrintAndExport],\n  },\n  mounted: function () {\n    diagram = this.$refs.diagramObject.ej2Instances;\n    toolbarEditor = this.$refs.toolbar_diagram.ej2Instances;\n    paletteIcon = this.$refs.paletteIcon.ej2Instances;\n    paletteSpace = this.$refs.paletteSpace.ej2Instances;\n    diagram.fitToPage();\n  },\n};\n\n//Create and add ports for node.\nfunction getPorts() {\n  let ports = [\n    { id: \"port1\", shape: \"Circle\", offset: { x: 0, y: 0.5 } },\n    { id: \"port2\", shape: \"Circle\", offset: { x: 0.5, y: 1 } },\n    { id: \"port3\", shape: \"Circle\", offset: { x: 1, y: 0.5 } },\n    { id: \"port4\", shape: \"Circle\", offset: { x: 0.5, y: 0 } },\n  ];\n  return ports;\n}\n\n//Adds EventListener based on device's viewport width.\nfunction addEvents() {\n  isMobile = window.matchMedia(\"(max-width:550px)\").matches;\n  if (isMobile) {\n    if (paletteIcon) {\n      paletteIcon.addEventListener(\"click\", openPalette, false);\n    }\n  }\n}\n\n//Toggles the visibility of the palette space on mobile devices when the palette icon is clicked.\nfunction openPalette() {\n  isMobile = window.matchMedia(\"(max-width:550px)\").matches;\n  if (isMobile) {\n    if (!paletteSpace.classList.contains(\"sb-mobile-palette-open\")) {\n      paletteSpace.classList.add(\"sb-mobile-palette-open\");\n    } else {\n      paletteSpace.classList.remove(\"sb-mobile-palette-open\");\n    }\n  }\n}\n\n//To disable toolbar items while multiselection.\nfunction disableMultiselectedItems() {\n  updateToolbarItems([\"alignObjects\", \"distributeObjects\", \"groupUngroup\"],true );\n}\n\n//To enable toolbar Items\nfunction enableItems(){\n  updateToolbarItems( [\"Cut\",\"Copy\",\"Lock\",\"Delete\",\"orderCommands\",\"rotateObjects\",\"flipObjects\",],false);\n}\n\n//To Print diagram\nfunction printDiagram(args) {\n  var options = {};\n  options.mode = \"Download\";\n  options.region = \"Content\";\n  options.multiplePage = diagram.pageSettings.multiplePage;\n  options.pageHeight = 400;\n  options.pageWidth = 400;\n  diagram.print(options);\n}\n\n//To Flip diagram objects\nfunction flipObjects(flipType) {\n  var selectedObjects = diagram.selectedItems.nodes.concat(diagram.selectedItems.connectors);\n  for (let i = 0; i < selectedObjects.length; i++) {\n    selectedObjects[i].flip ^=\n      flipType === \"Flip Horizontal\" ? FlipDirection.Horizontal : FlipDirection.Vertical;\n  }\n  diagram.dataBind();\n}\n\nfunction onUploadSuccess(args) {\n  let file1 = args.file;\n  let file = file1.rawFile;\n  let reader = new FileReader();\n  reader.readAsText(file);\n  reader.onloadend = loadDiagram;\n}\n\n//Load the diagraming object.\nfunction loadDiagram(event) {\n  diagram.loadDiagram(event.target.result);\n}\n\n//To save diagram objects\nfunction download(data) {\n  if (window.navigator.msSaveBlob) {\n    var blob = new Blob([data], { type: \"data:text/json;charset=utf-8,\" });\n    window.navigator.msSaveOrOpenBlob(blob, \"Diagram.json\");\n  } else {\n    var dataString = \"data:text/json;charset=utf-8,\" + encodeURIComponent(data);\n    var element = document.createElement(\"a\");\n    element.href = dataString;\n    element.download = \"Diagram.json\";\n    document.body.appendChild(element);\n    element.click();\n    element.remove();\n  }\n}\n\n//To lock and unlock selected diagram objects\nfunction lockObject(args) {\n  let isChecked;\n  for (var i = 0; i < diagram.selectedItems.nodes.length; i++) {\n    var node = diagram.selectedItems.nodes[i];\n    if (node.constraints & NodeConstraints.Drag) {\n      node.constraints = NodeConstraints.PointerEvents | NodeConstraints.Select | NodeConstraints.ReadOnly;\n      isChecked = true;\n    } else {\n      node.constraints = NodeConstraints.Default;\n      isChecked = false;\n    }\n  }\n  for (var j = 0; j < diagram.selectedItems.connectors.length; j++) {\n    var connector = diagram.selectedItems.connectors[j];\n    if (connector.constraints & ConnectorConstraints.Drag) {\n        connector.constraints = ConnectorConstraints.PointerEvents | ConnectorConstraints.Select | ConnectorConstraints.ReadOnly;\n         isChecked = true;\n    } else {\n      connector.constraints = ConnectorConstraints.Default;\n      isChecked = false;\n    }\n  }\n  updateToolbarItems([\"Cut\", \"Copy\", \"Delete\", \"orderCommands\", \"rotateObjects\", \"flipObjects\"],isChecked);\n  diagram.dataBind();\n}\n\n// Enable or disable specific toolbar items\nfunction updateToolbarItems(itemIds, disabled) {\n  itemIds.forEach((itemId) => {\n    const item = toolbarEditor.items.find((item) => item.id === itemId);\n    if (item) {\n      item.disabled = disabled;\n    }\n  });\n}\n</script>","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-diagrams\":\"*\",\"@syncfusion/ej2-vue-diagrams\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-vue-navigations\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-vue-splitbuttons\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-vue-maps\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}