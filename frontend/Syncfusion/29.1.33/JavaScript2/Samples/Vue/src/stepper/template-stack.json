{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <link href=\"https://ej2.syncfusion.com/vue/demos/lib/codemirror.css\" rel=\"stylesheet\" />\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/codemirror.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/css/css.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/xml/xml.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/htmlmixed/htmlmixed.js\" type=\"text/javascript\"></script>\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n    <div id=\"stepper-template\" class=\"control-section\">\n        <div class=\"stepper-template-section\">\n            <ejs-stepper id=\"template-stepper\" :steps=\"stepperTemplate\" linear=\"true\" orientation=\"vertical\"\n                :stepClick=\"(args) => handleStepClick(args)\"\n                template='<span class=\"e-step ${step.iconCss}\"></span><span class=\"e-text-step\">${step.text}</span><br><br><div class=\"stepper-content\"></div>'\n                ref=\"stepper\" :created=\"createDefault\"></ejs-stepper>\n        </div>\n    </div>\n</template>\n<script>\nimport { StepperComponent } from \"@syncfusion/ej2-vue-navigations\";\n\nexport default {\n    components: {\n        'ejs-stepper': StepperComponent\n    },\n    data: function () {\n        return {\n            templateContent: [\n                \"<p>To get started, click the <b>Continue</b> button to move on to the next step.</p><button class='e-btn e-primary step-continue-button'>CONTINUE</button>\",\n                \"<p>This is the second step. To proceed to next step, click <b>Continue</b>; to go back to the previous step, click <b>Back</b> button.</p><button class='e-btn e-primary step-continue-button'>CONTINUE</button><button class='e-btn step-back-button'>BACK</button>\",\n                \"<p>If everything looks correct, click <b>Continue</b> to move on.<br/>If not, you can click <b>Back</b> to revisit the previous step.</p><button class='e-btn e-primary step-continue-button'>CONTINUE</button><button class='e-btn step-back-button'>BACK</button>\",\n                \"<p>Congratulations! You've reached the final step.</p><button class='e-btn e-primary step-finish-button'>FINISH</button><button class='e-btn step-back-button'>BACK</button>\"\n            ],\n            finishContent: \"<p>Congratulations! You've reached the final step.</p><button class='e-btn e-primary step-finish-button'>FINISH</button><button class='e-btn step-back-button'>BACK</button>\",\n            resetContent: \"<p>To start over again with the first step, click <b>Reset</b>.</p><button class='e-btn e-primary step-reset-button'>RESET</button>\",\n            stepperTemplate: [\n                { iconCss: 'e-icons e-check', text: 'Step 1' },\n                { iconCss: 'e-icons e-check', text: 'Step 2' },\n                { iconCss: 'e-icons e-check', text: 'Step 3' },\n                { iconCss: 'e-icons e-check', text: 'Step 4' }\n            ]\n        };\n    },\n    methods: {\n        createDefault: function () {\n            this.$refs.stepper.ej2Instances.activeStep = 1;\n            this.handleContent(this.$refs.stepper.ej2Instances, false);\n            // for initial continue button..\n            this.bindEventListeners(this.$refs.stepper.ej2Instances.activeStep);\n        },\n        handleStepClick: function (args) {\n            this.handleContent(args, args.previousStep > args.activeStep ? true : false);\n        },\n        bindEventListeners: function (activeStep) {\n            let continueBtn = document.querySelector('.step-continue-button');\n            let backBtn = document.querySelector('.step-back-button');\n            let finishBtn = document.querySelector('.step-finish-button');\n\n            const clickHandler = (action, type) => (event) => {\n                event.stopPropagation();\n                this.clickAction(action, type);\n            };\n            switch (activeStep) {\n                case 0:\n                    if(continueBtn) continueBtn.addEventListener('click', clickHandler(false, 'continue'));\n                    break;\n\n                case 1:\n                case 2:\n                    if(continueBtn) continueBtn.addEventListener('click', clickHandler(false, 'continue'));\n                    if(backBtn) backBtn.addEventListener('click', clickHandler(true, 'back'));\n                    break;\n\n                case 3:\n                    if(finishBtn) finishBtn.addEventListener('click', (event) => {\n                        clickHandler(false, 'finish')(event);\n                        let resetBtn = document.querySelector('.step-reset-button');\n                        if(resetBtn) resetBtn.addEventListener('click', clickHandler(false, 'reset'));\n                    });\n                    if(backBtn) backBtn.addEventListener('click', clickHandler(true, 'back'));\n                    break;\n            }\n        },\n        clickAction: function (isBackButton, buttonType) {\n            switch (buttonType) {\n                case 'continue':\n                    this.$refs.stepper.ej2Instances.nextStep();\n                    break;\n                case 'back':\n                    this.$refs.stepper.ej2Instances.previousStep();\n                    break;\n            }\n            this.updateContent(this.$refs.stepper.ej2Instances, isBackButton, buttonType);\n        },\n        updateContent: function (stepperObj, isBackButton, buttonType) {\n            if (buttonType === 'continue' || buttonType === 'back') {\n                this.handleContent(stepperObj, isBackButton);\n            }\n            if (buttonType === 'finish' || buttonType === 'reset') {\n                let activeElement = document.querySelectorAll('.stepper-content');\n                if (buttonType === 'finish') {\n                    activeElement[stepperObj.activeStep].innerHTML = this.resetContent;\n                    stepperObj.steps[stepperObj.activeStep].status = 'completed';\n                }\n                if (buttonType === 'reset') {\n                    activeElement[stepperObj.activeStep].innerHTML = this.finishContent;\n                    activeElement[stepperObj.activeStep].innerHTML = '';\n                    stepperObj.reset();\n                    activeElement[stepperObj.activeStep].innerHTML = this.templateContent[stepperObj.activeStep];\n                }\n            }\n            // for subsequent buttons when navigating..\n            this.bindEventListeners(stepperObj.activeStep);\n        },\n        handleContent: function (args, isBackClicked) {\n            let activeElement = document.querySelectorAll('.stepper-content');\n            activeElement[args.activeStep].innerHTML = this.templateContent[args.activeStep];\n            if (activeElement && !isBackClicked) {\n                activeElement[args.activeStep - 1].innerHTML = '';\n            }\n            if (isBackClicked) {\n                if (activeElement[args.activeStep + 1])\n                    activeElement[args.activeStep + 1].innerHTML = '';\n            }\n        }\n    },\n};\n</script>\n<style>\n    #stepper-template.control-section {\n        min-height: 600px;\n    }\n    .stepper-template-section {\n        min-height: 450px;\n        margin: 0 auto;\n        text-align: center;\n        padding-top: 3%;\n    }\n    #template-stepper button {\n        padding: 5px 8px;\n        margin: 0 10px 0 0;\n    }\n    #template-stepper .e-text-step {\n        padding-left: 12px;\n        font-size: 18px;\n    }\n    #template-stepper .stepper-content {\n        position: absolute;\n        width: 450px;\n        text-align: left;\n        top: 38px;\n        left: 46px;\n        font-size: 15px;\n    }\n    .e-bigger #template-stepper .stepper-content {\n        left: 53px;\n    }\n    #template-stepper .e-step-template .e-step {\n        border-radius: 0px;\n        font-size: 16px;\n    }\n    #template-stepper .e-step-template.e-step-notstarted .e-step {\n        border: 2px solid grey;\n        background: white;\n        color: transparent;\n    }\n    #template-stepper .e-step-template.e-step-completed .e-step,\n    #template-stepper .e-step-template.e-step-inprogress .e-step {\n        background: #63c1a2;\n        color: white;\n    }\n    #template-stepper .e-step-template.e-step-inprogress .e-step {\n        box-shadow: 0 0 0 2px #fff, 0 0 0 4px #52aa86;\n    }\n    #template-stepper .e-step-template.e-step-inprogress .e-step::before {\n        color: transparent;\n    }\n    #template-stepper .e-progressbar-value {\n        background-color: #9adfc8;\n    }\n    @media only screen and (max-width: 960px) {\n        #template-stepper .stepper-content {\n            width: 200px;\n            font-size: 13px;\n        }\n        #stepper-template.control-section {\n            min-height: 620px;\n        }\n        .stepper-template-section {\n            min-height: 500px;\n        }\n    }\n</style>","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-vue-navigations\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-vue-maps\":\"*\",\"@syncfusion/ej2-vue-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-vue-grids\":\"*\",\"@syncfusion/ej2-vue-schedule\":\"*\",\"@syncfusion/ej2-vue-richtexteditor\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-vue-documenteditor\":\"*\",\"@syncfusion/ej2-vue-splitbuttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-vue-pdfviewer\":\"*\",\"@syncfusion/ej2-vue-layouts\":\"*\",\"@syncfusion/ej2-vue-lists\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}