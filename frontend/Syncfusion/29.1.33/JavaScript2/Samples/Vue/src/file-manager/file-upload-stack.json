{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<div>\n    <div class=\"control-section file-upload\">\n        <div id='uploadFileManager' class=\"fileupload\">\n            <ejs-uploader ref=\"uploadObj\" id='defaultfileupload' name=\"UploadFiles\">\n            </ejs-uploader>\n            <ejs-button id=\"openBtn\" v-on:click=\"btnClick\">File Browser</ejs-button>\n        </div>\n        <div id='target' class=\"control-section\">\n            <ejs-dialog ref=\"uploadDialog\" id=\"dialog\" v-bind:visible=\"false\" :header='dialogHeader' :animationSettings='animationSettings' :showCloseIcon='showCloseIcon' :open=\"dialogOpen\" :close=\"dialogClose\" :target='target'\n            :width='dialogWidth'>\n            <div>\n                <ejs-filemanager id=\"filemanager\" :ajaxSettings='ajaxSettings' :contextMenuSettings=\"contextMenuSettings\" :toolbarSettings=\"toolbarSettings\" v-bind:allowMultiSelection=\"false\" :fileOpen=\"onFileOpen\" >\n                </ejs-filemanager>\n            </div>\n            </ejs-dialog>\n        </div>\n    </div>\n</div>\n</template>\n\n<style>\n\n    .file-upload .fileupload {\n        max-width: 500px;\n        margin: auto;\n    }\n    .file-upload #openBtn {\n        position: absolute;\n        top: 28px;\n        left: 43%;\n    }\n    .file-upload #target {\n        height: 550px;\n    }\n    .file-upload #dialog {\n        top: 20px !important;\n        max-height: 500px !important;\n        left: 30px !important;\n    }\n\n    .file-upload #uploadFileManager .e-file-drop, .file-upload #uploadFileManager .e-css.e-btn {\n        display: none;\n    }\n    \n    .tailwind #openBtn,\n    .tailwind-dark #openBtn {\n\t\ttop: 28px;\n\t}\n\t\n\t.bootstrap5 #openBtn,\n    .bootstrap5-dark #openBtn {\n        top: 26px;\n    }\n\n    .bootstrap #openBtn,\n    .bootstrap-dark #openBtn {\n        top: 30px;\n    }\n\n    .fileupload .e-file-select-wrap {\n        padding: 20px 0 20px 20px;\n    }\n</style>\n\n<script>\n    import { UploaderComponent } from '@syncfusion/ej2-vue-inputs';\n    import { ButtonComponent } from \"@syncfusion/ej2-vue-buttons\";\n    import { DialogComponent } from '@syncfusion/ej2-vue-popups';\n    import { FileManagerComponent, NavigationPane, Toolbar, DetailsView } from \"@syncfusion/ej2-vue-filemanager\";\n    /**\n    * File Manager real time use case sample\n     */\n    let hostUrl = 'https://ej2-aspcore-service.azurewebsites.net/';\n\n    export default {\n        components: {\n            'ejs-filemanager': FileManagerComponent,\n            'ejs-uploader': UploaderComponent,\n            'ejs-button': ButtonComponent,\n            'ejs-dialog': DialogComponent\n        },\n        data: function(){\n            return {\n                dialogHeader: 'Select a file',\n                showCloseIcon: true,\n                target: '#target',\n                animationSettings: { effect: 'None' },\n                dialogWidth: '850px',\n                ajaxSettings:  {\n                    url: hostUrl + 'api/FileManager/FileOperations',\n                    getImageUrl: hostUrl + 'api/FileManager/GetImage',\n                    uploadUrl: hostUrl + 'api/FileManager/Upload',\n                    downloadUrl: hostUrl + 'api/FileManager/Download'\n                },\n                toolbarSettings: {items: [\"NewFolder\", \"Upload\", 'Cut', 'Copy', \"Delete\", \"Rename\", \"SortBy\", \"Refresh\", \"Selection\", \"View\", \"Details\"]},\n                contextMenuSettings: {\n                    file: [\"Cut\", \"Copy\", \"|\", \"Delete\", \"Download\", \"Rename\", \"|\", \"Details\"],\n                    visible: true\n                },\n            }\n        },\n        provide: {\n                filemanager: [NavigationPane, DetailsView, Toolbar]\n        },\n        methods:{\n            btnClick: function(event) {\n                this.$refs.uploadDialog.show();\n                let fileObj = document.getElementById('filemanager').ej2_instances[0];\n                fileObj.path = \"/\";\n                fileObj.selectedItems = [];\n                fileObj.refresh();\n            },\n            // Uploader will be hidden, if Dialog is opened\n            dialogOpen: function() {\n                document.getElementById('uploadFileManager').style.display = 'none';\n            },\n            // Uploader will be shown, if Dialog is closed\n            dialogClose: function() {\n                document.getElementById('uploadFileManager').style.display = 'block';\n            },\n            // File Manager's fileOpen event function\n            onFileOpen: function(args) {\n                let file = args.fileDetails;\n                if (file.isFile) {\n                    args.cancel = true;\n                    this.$refs.uploadObj.ej2Instances.files = [{name: file.name, size: file.size, type: file.type }];\n                    this.$refs.uploadDialog.hide();\n                }\n            }\n        }\n    };\n</script>\n","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-vue-popups\":\"*\",\"@syncfusion/ej2-filemanager\":\"*\",\"@syncfusion/ej2-vue-filemanager\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-vue-maps\":\"*\",\"@syncfusion/ej2-vue-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-vue-grids\":\"*\",\"@syncfusion/ej2-vue-schedule\":\"*\",\"@syncfusion/ej2-vue-richtexteditor\":\"*\",\"@syncfusion/ej2-vue-navigations\":\"*\",\"@syncfusion/ej2-vue-documenteditor\":\"*\",\"@syncfusion/ej2-vue-splitbuttons\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}