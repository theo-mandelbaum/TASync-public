{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <link href=\"https://ej2.syncfusion.com/vue/demos/lib/codemirror.css\" rel=\"stylesheet\" />\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/codemirror.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/css/css.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/xml/xml.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/htmlmixed/htmlmixed.js\" type=\"text/javascript\"></script>\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n    <div class=\"control-section\">\n        <div class=\"usecase-speechToText-section e-message\">\n            <div class=\"stt-container\">\n                <!-- Microphone button for Speech-to-Text -->\n                <ejs-speechtotext id=\"speechToText\" ref=\"speechToTextObj\" cssClass=\"usecase-stt-btn\" :buttonSettings='buttonSettings' @transcriptChanged=\"onTranscriptChange\" @onStart=\"onListeningStart\" @onStop=\"onListeningStop\" @onError=\"onErrorHandler\" ></ejs-speechtotext>\n                <span class=\"speech-recognition-status\">Click the mic button to start speaking...</span>\n            </div>\n            <div class=\"transcript-container\">\n                <!-- Transcription output -->\n                <ejs-chatui id=\"transcript-content\" ref=\"chatUIObj\" :showHeader=\"showHeader\" :showFooter=\"showFooter\" :timeStampFormat=\"timeStampFormat\" :autoScrollToBottom=\"autoScrollToBottom\" emptyChatTemplate=\"emptyChatTemplate\" typingUsersTemplate=\"typingIndicatorTemplate\">\n                    <template v-slot:emptyChatTemplate=\"\">\n                        <div class=\"empty-chat\">\n                            <span class=\"e-icons e-multiple-comment\"></span>\n                            No transcript available. Start speaking to generate a transcript.\n                        </div>\n                    </template>\n                    <template v-slot:typingIndicatorTemplate=\"\">\n                        <div class=\"e-typing-indicator \">\n                            <span class=\"e-user-text\">Transcripting</span> \n                            <div class=\"e-indicator-wrapper\">\n                                <span class=\"e-indicator\"></span>\n                                <span class=\"e-indicator\">\n                                </span><span class=\"e-indicator\">\n                                </span>\n                            </div>\n                        </div>\n                    </template>\n                </ejs-chatui>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport { SpeechToTextComponent } from \"@syncfusion/ej2-vue-inputs\";\nimport { ChatUIComponent } from '@syncfusion/ej2-vue-interactive-chat';\n\nexport default {\n    data : function(){\n        return{\n            buttonSettings: {\n                stopIconCss: 'e-icons e-listen-icon'\n            },\n            user: { id: 'testing-user', user: 'Testing User' },\n            msgIdx: -1,\n            isIndicatorVisible: false,\n            showHeader: false,\n            showFooter: false,\n            timeStampFormat: 'MMM d, h:mm a',\n            autoScrollToBottom: true\n        };\n    },\n    components: {\n        \"ejs-speechtotext\": SpeechToTextComponent,\n        \"ejs-chatui\": ChatUIComponent\n    },\n    methods: {\n        onTranscriptChange: function(args) {\n            var chatObj = this.$refs.chatUIObj.ej2Instances;\n            var existingMsg  =  chatObj.messages[this.msgIdx];\n            if(existingMsg ) {\n                chatObj.updateMessage({ text: args.transcript }, existingMsg.id);\n                chatObj.scrollToBottom();\n            } else {\n                var newMsg  = { id: 'msg-' + (this.msgIdx + 1), text: args.transcript, author: this.user };\n                chatObj.addMessage(newMsg);\n            }\n        \n            if (!this.isIndicatorVisible) {\n                chatObj.typingUsers = [this.user];\n                this.isIndicatorVisible = true;\n            }\n        \n            // Final transcript\n            if (!args.isInterimResult) {\n                this.msgIdx++;\n                this.$refs.speechToTextObj.ej2Instances.transcript = '';\n                chatObj.typingUsers = [];\n                this.isIndicatorVisible = false;\n            }\n        },\n        onListeningStart: function(){\n            var sttElement = document.querySelector('#speechToText');\n            this.msgIdx = this.$refs.chatUIObj.ej2Instances.messages.length;\n            sttElement.classList.add('stt-listening-state');\n            this.updateStatus('Listening... Speak now...');\n        },\n        onListeningStop: function(args) {\n            var sttElement = document.querySelector('#speechToText');\n            sttElement.classList.remove('stt-listening-state');\n            this.$refs.chatUIObj.ej2Instances.typingUsers = [];\n            if (args.isInteracted)\n                this.updateStatus('Click the mic button to start speaking...');\n        },\n        onErrorHandler: function(args) {\n            this.updateStatus(args.errorMessage);\n            if (args.error === 'unsupported-browser') {\n                this.$refs.speechToTextObj.ej2Instances.disabled = true;\n            }\n        },\n        updateStatus: function(status) {\n            document.querySelector('.speech-recognition-status').innerText = status;\n        }\n    }\n}\n</script>\n\n<style>\n    .usecase-speechToText-section,\n    .e-bigger .usecase-speechToText-section {\n        width: 90%;\n        height: 55vh;\n        margin: 0 auto;\n        padding: 0;\n        display: flex;\n    }\n\n    .usecase-speechToText-section #transcript-content {\n        border: none;\n        border-top-right-radius: 8px;\n        border-bottom-right-radius: 8px;\n    }\n\n    .usecase-speechToText-section .stt-container {\n        width: 70%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        gap: 40px;\n    }\n\n    .usecase-speechToText-section .e-speech-to-text.usecase-stt-btn {\n        width: 100px;\n        height: 100px;\n        position: relative;\n    }\n\n    .usecase-speechToText-section .usecase-stt-btn .e-btn-icon,\n    .e-bigger .usecase-speechToText-section .usecase-stt-btn .e-btn-icon {\n        font-size: 50px;\n    }\n\n    .usecase-speechToText-section .transcript-container {\n        width: 30%;\n        height: 100%;\n    }\n\n    /* Create wave effect using pseudo-elements */\n    .usecase-stt-btn::before,\n    .usecase-stt-btn::after {\n        content: \"\";\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        width: 100%;\n        height: 100%;\n        border-radius: 50%;\n        background: #9b9b9b;\n        transform: translate(-50%, -50%) scale(1);\n        opacity: 0;\n        pointer-events: none;\n    }\n\n    .usecase-speechToText-section .stt-listening-state::before {\n        animation: stt-wave-ring 1.5s infinite ease-out;\n    }\n\n    .usecase-speechToText-section .stt-listening-state::after {\n        animation: stt-wave-ring 1.5s 0.75s infinite ease-out; /* Slight delay for second wave */\n    }\n\n    @keyframes stt-wave-ring {\n        0% {\n            transform: translate(-50%, -50%) scale(1);\n            opacity: 0.8;\n        }\n        100% {\n            transform: translate(-50%, -50%) scale(2);\n            opacity: 0;\n        }\n    }\n\n    .usecase-speechToText-section .empty-chat {\n        width: 90%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-size: 15px;\n        flex-direction: column;\n        gap: 10px;\n        text-align: center;\n        margin: auto;\n    }\n\n    .usecase-speechToText-section .empty-chat .e-multiple-comment {\n        font-size: 50px;\n    }\n\n    .usecase-speechToText-section #transcript-content.e-chat-ui .e-message-group {\n        max-width: 95%;\n    }\n\n    @media only screen and (max-width: 850px) {\n        .usecase-speechToText-section, \n        .e-bigger .usecase-speechToText-section {\n            flex-direction: column;\n            height: 70vh;\n        }\n        .usecase-speechToText-section .transcript-container {\n            width: 100%;\n            height: 70vh;\n            overflow: scroll;\n        }\n        .usecase-speechToText-section .stt-container {\n            width: 100%;\n            height: 55%;\n        }\n    }\n</style>","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-interactive-chat\":\"*\",\"@syncfusion/ej2-vue-interactive-chat\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-vue-maps\":\"*\",\"@syncfusion/ej2-vue-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-vue-grids\":\"*\",\"@syncfusion/ej2-vue-schedule\":\"*\",\"@syncfusion/ej2-vue-richtexteditor\":\"*\",\"@syncfusion/ej2-vue-navigations\":\"*\",\"@syncfusion/ej2-vue-documenteditor\":\"*\",\"@syncfusion/ej2-vue-splitbuttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-vue-pdfviewer\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}