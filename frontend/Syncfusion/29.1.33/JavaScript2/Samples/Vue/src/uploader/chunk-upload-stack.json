{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <link href=\"https://ej2.syncfusion.com/vue/demos/lib/codemirror.css\" rel=\"stylesheet\" />\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/codemirror.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/css/css.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/xml/xml.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/htmlmixed/htmlmixed.js\" type=\"text/javascript\"></script>\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<div>\n    <div class=\"col-lg-8 control-section uploader chunk\">\n        <div class=\"control_wrapper\">\n            <ejs-uploader id='chunkupload' name=\"UploadFiles\" :autoUpload= \"isAuto\" :asyncSettings= \"path\" ref=\"uploadObj\" :dropArea= \"dropElement\" maxFileSize=104857600\n            :removing= \"onFileRemove\" :pausing= 'onPausing' :resuming= 'onResuming' :chunkFailure= \"onBeforeFailure\">\n            </ejs-uploader>\n        </div>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%;\">\n        <tbody><tr>\n            <td class=\"left-side\">Chunk size :</td>\n                <td>\n                    <div id=\"default\">\n                        <ejs-dropdownlist id=\"chunk-sizes\" :fields = \"fields\" :index = \"currentIndex\" :dataSource = \"items\" :popupHeight= \"popupHeight\" :change= \"change\">\n                        </ejs-dropdownlist>\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n\n</div>\n</template>\n\n<style scoped>\n.chunk .control_wrapper {\n    max-width: 450px;\n    min-width: 245px;\n    margin: auto;\n}\n#chunkupload .e-upload.e-control {\n    position: relative;\n    margin: 15px 0;\n}\n\n.control-section .uploader.col-lg-8 {\n    padding: 20px;\n}\n</style>\n<script>\nimport { UploaderComponent } from '@syncfusion/ej2-vue-inputs';\nimport { FileInfo } from '@syncfusion/ej2-vue-inputs/uploader';\nimport { DropDownListComponent } from \"@syncfusion/ej2-vue-dropdowns\";\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n\nexport default {\n    components: {\n        'ejs-uploader': UploaderComponent,\n        'ejs-dropdownlist': DropDownListComponent\n    },\n    data: function(){\n        return {\n          path:  {\n            saveUrl: 'http://localhost:62728/api/FileUploader/Save',\n            removeUrl: 'http://localhost:62728/api/FileUploader/Remove',\n            chunkSize: 500000\n          },\n\t\t  isAuto: false,\n          dropElement: '.control-fluid',\n          currentIndex: 0,\n          isInteraction: false,\n        items: [\n            { sizeVal: '500000' , sizeTxt: '500 KB' },\n            { sizeVal: '1000000' , sizeTxt: '1 MB' },\n            { sizeVal: '2000000' , sizeTxt: '2 MB' },\n        ],\n        fields: { text: 'sizeTxt', value: 'sizeVal' },\n          popupHeight: 200,\n          change: (args) => {\n            this.$refs.uploadObj.asyncSettings.chunkSize = parseInt(args.itemData.value, 10);\n          }\n        }\n    },\n    methods:{\n        // to update flag variable value for automatic pause and resume\n        onPausing: function(args) {\n            if (args.event !== null && !navigator.onLine) {\n                this.isInteraction = true;\n            } else {\n                this.isInteraction = false;\n            }\n        },\n        // to update flag variable value for automatic pause and resume\n        onResuming: function(args) {\n            if (args.event !== null && !navigator.onLine) {\n                this.isInteraction = true;\n            } else {\n                this.isInteraction = false;\n            }\n        },\n        onFileRemove: function (args) {\n            args.postRawFile = false;\n        },\n        // to prevent triggering chunk-upload failure event and to pause uploading on network failure\n        onBeforeFailure: function (args) {\n            let proxy = this;\n            args.cancel = !this.isInteraction;\n            /* tslint:disable */\n            // interval to check network availability on every 500 milliseconds\n            let clearTimeInterval = setInterval(() => {\n                if (navigator.onLine && !isNullOrUndefined(proxy.$refs.uploadObj.getFilesData()[0]) && proxy.$refs.uploadObj.getFilesData()[0].statusCode == 4) {\n                    proxy.$refs.uploadObj.resume(proxy.$refs.uploadObj.getFilesData());\n                    clearSetInterval();\n                } else {\n                    if (!proxy.isInteraction && !isNullOrUndefined(proxy.$refs.uploadObj.getFilesData()[0]) && proxy.$refs.uploadObj.getFilesData()[0].statusCode == 3) {\n                        proxy.$refs.uploadObj.pause(proxy.$refs.uploadObj.getFilesData());\n                    }\n                }\n            }, 500);\n            // clear Interval after when network is available.\n            function clearSetInterval() {\n                clearInterval(clearTimeInterval);\n            }\n        }\n    }\n}\n</script>","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-vue-inputs/uploader\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-vue-maps\":\"*\",\"@syncfusion/ej2-vue-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-vue-grids\":\"*\",\"@syncfusion/ej2-vue-schedule\":\"*\",\"@syncfusion/ej2-vue-richtexteditor\":\"*\",\"@syncfusion/ej2-vue-navigations\":\"*\",\"@syncfusion/ej2-vue-documenteditor\":\"*\",\"@syncfusion/ej2-vue-splitbuttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-vue-pdfviewer\":\"*\",\"@syncfusion/ej2-vue-layouts\":\"*\",\"@syncfusion/ej2-vue-lists\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}