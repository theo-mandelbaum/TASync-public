{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<div>\n  <div class=\"col-lg-8 control-section\">\n    <div id=\"colorpicker-control\">\n      <h4>Choose a color</h4>\n      <ejs-colorpicker :showButtons=\"showButtonsValue\" :disabled=\"disabledValue\" :modeSwitcher=\"modeSwitcherValue\" id=\"color-picker\" ref=\"colorPicker\" :mode=\"modeValue\" :value=\"hexValue\" :change=\"change\"></ejs-colorpicker>\n    </div>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n            <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n                <tbody>\n                    <tr>\n                        <td style=\"width: 50%\">\n                            <div>Value</div>\n                        </td>\n                        <td style=\"width: 50%\">\n                            <div style=\"max-width: 200px\">\n                                <input ref=\"inputValue\" aria-label=\"Value\" class=\"e-input\" :maxlength=\"9\" value=\"#0db1e7\" type=\"text\" v-on:input=\"onChange\"/>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"width: 50%;padding-top:10px\">\n                            <div>Mode</div>\n                        </td>\n                        <td style=\"width: 50%;padding-top:10px\">\n                            <div style=\"max-width: 200px\">\n                                <ejs-dropdownlist :dataSource=\"items\" value=\"Picker\" :fields=\"fields\" :change=\"modeChange\">\n                                </ejs-dropdownlist>\n                            </div>\n                        </td>\n                    </tr>\n                <tr>\n                    <td style=\"width: 50%;padding-top:15px\">\n                      <div>Disable</div>\n                    </td>\n                    <td style=\"width: 50%;padding-top:15px\">\n                      <ejs-checkbox aria-label=\"Disable\" :change=\"disabled_onChange\"></ejs-checkbox>\n                    </td>\n                </tr>\n                <tr>\n                  <td style=\"width: 50%;padding-top:15px\">\n                    <div>Show Buttons</div>\n                  </td>\n                  <td style=\"width: 50%;padding-top:15px\">\n                    <ejs-checkbox  aria-label=\"Show Buttons\" :checked=\"true\" :change=\"button_onChange\"></ejs-checkbox>\n                  </td>\n                </tr>\n                <tr>\n                    <td style=\"width: 50%;padding-top:15px\">\n                        <div>Mode Switcher</div>\n                    </td>\n                    <td style=\"width: 50%;padding-top:15px\">\n                      <ejs-checkbox aria-label=\"Mode Switcher\" :checked=\"true\" :change=\"mode_onChange\"></ejs-checkbox>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n</template>\n<!-- custom code start -->\n<style scoped>\n    .property-panel-content {\n        padding: 0 10px 10px 0;\n        overflow: auto;\n    }\n    #colorpicker-control {\n        margin: 30px auto;\n        padding-top: 50px;\n        text-align: center;\n    }\n    #colorpicker-control h4 {\n        margin-bottom: 20px;\n    }\n\n    .e-bigger #colorpicker-control h4 {\n        font-size: 20px;\n    }\n</style>\n<!-- custom code end -->\n<script>\nimport { ColorPickerComponent } from \"@syncfusion/ej2-vue-inputs\";\nimport { DropDownListComponent } from \"@syncfusion/ej2-vue-dropdowns\";\nimport { CheckBoxComponent } from \"@syncfusion/ej2-vue-buttons\";\n\nexport default {\n    data: function () {\n        return {\n            hex: '#0db1e7',\n            mode: 'picker',\n            disabled: false,\n            showButtons: true,\n            modeSwitcher: true,\n            items: [\n                { mode: 'Picker' },\n                { mode: 'Palette' }\n            ],\n            fields: { text: 'mode', value: 'mode' }\n        };\n    },\n    components: {\n        'ejs-checkbox': CheckBoxComponent,\n        'ejs-dropdownlist': DropDownListComponent,\n        'ejs-colorpicker': ColorPickerComponent,\n    },\n    computed: {\n        hexValue: {\n            get: function () {\n                return this.hex;\n            },\n            set: function (hex) {\n                this.hex = hex\n            }\n        },\n        modeValue: {\n            get: function () {\n                return this.mode;\n            },\n            set: function (mode) {\n                this.mode = mode\n            }\n        },\n        disabledValue: {\n            get: function () {\n                return this.disabled;\n            },\n            set: function (disabled) {\n                this.disabled = disabled\n            }\n        },\n        modeSwitcherValue: {\n            get: function () {\n                return this.modeSwitcher;\n            },\n            set: function (modeSwitcher) {\n                this.modeSwitcher = modeSwitcher\n            }\n        },\n        showButtonsValue: {\n            get: function () {\n                return this.showButtons;\n            },\n            set: function (showButtons) {\n                this.showButtons = showButtons\n            }\n        }\n    },\n    methods: {\n        onChange: function(args) {\n            const val = args.target.value;\n            // Sets to color picker default color value if user enters the invalid hex code\n            this.hexValue = val && val.length > 2 ? (val[0] !== '#' ? `#${val}` : val) : '#008000';\n        },\n        change: function(args) {\n            this.hexValue = args.currentValue.hex;\n        },\n        modeChange: function(args) {\n            this.modeValue = args.value;\n        },\n        button_onChange: function(args) {\n            this.showButtonsValue = args.checked;\n        },\n        mode_onChange: function(args) {\n            this.modeSwitcherValue = args.checked;\n        },\n        disabled_onChange: function(args) {\n            this.disabledValue = args.checked;\n        }\n    }\n};\n</script>","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}