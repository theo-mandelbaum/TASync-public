{"src/linetemplate.vue":"<template>\n    <div id=\"container\" style='display:block;height:100%, width:100%;'>\n         <ejs-chart class=\"chart-content\" :theme='theme' ref=\"lineInstance\" style='display:block;height:100%, width:100%;' :primaryXAxis='primaryXAxis' :primaryYAxis='primaryYAxis' :chartArea='chartArea'>\n            <e-series-collection>\n                <e-series :dataSource='seriesData' type='Column' xName='x' yName='y' name='Jan' width=2 :marker='marker' > </e-series>\n                <e-series :dataSource='seriesData1' type='Column' xName='x' yName='y' name='Feb' width=2 :marker='marker' fill=\"rgb(239, 183, 202)\"> </e-series>\n                <e-series :dataSource='seriesData2' type='Column' xName='x' yName='y' name='Mar' width=2 :marker='marker' > </e-series>\n            </e-series-collection>\n        </ejs-chart>\n    </div>\n</template>\n<script>\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, ColumnSeries, Category, DataLabel, Tooltip, Legend } from \"@syncfusion/ej2-vue-charts\";\nlet selectedTheme = location.hash.split(\"/\")[1];\nselectedTheme = selectedTheme ? selectedTheme : \"Material\";\nlet theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\");\n\nexport default {\n  components: {\n    'ejs-chart': ChartComponent,\n    'e-series-collection': SeriesCollectionDirective,\n    'e-series': SeriesDirective\n  },\n  data() {\n    return {\n      theme: theme,\n      seriesData: [\n            { x: 'Jan', y: 46 }, { x: 'Feb', y: 27 }, { x: 'Mar', y: 26 }\n              ],\n      seriesData1: [\n            { x: 'Jan', y: 37 }, { x: 'Feb', y: 23 }, { x: 'Mar', y: 18 }\n              ],\n      seriesData2: [\n            { x: 'Jan', y: 38 }, { x: 'Feb', y: 17 }, { x: 'Mar', y: 26 }\n              ],\n         primaryXAxis: {\n            valueType: 'Category', interval: 1, majorGridLines: { width: 0 }\n        },\n        chartArea: { border: { width: 0 } },\n\n      //Initializing Primary Y Axis\n          primaryYAxis:\n        {\n            majorGridLines: { width: 0 },\n            majorTickLines: { width: 0 }, lineStyle: { width: 0 }, labelStyle: { color: 'transparent' }\n        },\n     marker: \n     { dataLabel: \n           { visible: false, position: 'Top', font: { fontWeight: '600', color: '#ffffff' } \n           }\n           \n      },\n    };\n  },\n  provide: {\n    chart: [ColumnSeries, Category, DataLabel, Tooltip, Legend]\n  },\n  mounted(){\n    this.$refs.lineInstance.ej2Instances.height =\"100%\";\n    this.$refs.lineInstance.ej2Instances.width =\"100%\";\n  }\n};\n</script>\n\n<style>\n  .dashboard-dynamic .chart-content, .dashboard-dynamic #container{\n    height: 100%;\n    width:100%;\n  }\n</style>","src/pietemplate.vue":"<template>\n    <div id=\"app\" style='display:block;height:100%; width:100%;'>\n         <ejs-accumulationchart class=\"chart-content\" :theme='theme' ref=\"accumulationInstance\" style='display:block;height:100%; width:100%;' :legendSettings=\"legendSettings\" :tooltip=\"tooltip\"> \n            <e-accumulation-series-collection>\n                <e-accumulation-series :palettes='palettes' :dataSource='seriesData' xName='x' yName='y' innerRadius=\"40%\" :dataLabel=\"dataLabel\"> </e-accumulation-series>\n            </e-accumulation-series-collection>\n        </ejs-accumulationchart>\n    </div>\n</template>\n<script>\nimport { AccumulationChartComponent, AccumulationSeriesCollectionDirective, AccumulationSeriesDirective, PieSeries, AccumulationDataLabel, AccumulationTooltip } from \"@syncfusion/ej2-vue-charts\";\nlet selectedTheme = location.hash.split(\"/\")[1];\nselectedTheme = selectedTheme ? selectedTheme : \"Material\";\nlet theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\");\n\nexport default {\n  components: {\n    'ejs-accumulationchart': AccumulationChartComponent,\n    'e-accumulation-series': AccumulationSeriesDirective,\n    'e-accumulation-series-collection': AccumulationSeriesCollectionDirective\n  },\n  data() {\n    return {\n      theme: theme,\n      seriesData:  [\n        { 'x': 'Jan', y: 12.5, text: 'January' },\n        { 'x': 'Feb', y: 25, text: 'February' },\n        { 'x': 'Mar', y: 50, text: 'March' },\n     ],\n     legendSettings: { visible: false },\n     dataLabel: { visible: true, position: 'Inside', name: 'value'},\n     tooltip: {\n        enable: true, header: '<b>${point.x}</b>', format: 'Composition: <b>${point.y}</b>'\n     },\n     palettes: ['#00bdae', '#357cd2', '#e56691'],\n    };\n  },\n  provide: {\n     accumulationchart: [PieSeries, AccumulationDataLabel, AccumulationTooltip]\n  },\n    mounted(){\n    this.$refs.accumulationInstance.ej2Instances.height =\"100%\";\n    this.$refs.accumulationInstance.ej2Instances.width =\"100%\";\n  }\n};\n</script>\n\n<style>\n  .dashboard-dynamic .chart-content{\n    height: 100%;\n    width:100%;\n  }\n  .dashboard-dynamic #container{\n    width: 100%;\n    height: 100%;\n  }\n</style>","src/splinetemplate.vue":"<template>\n  <div id=\"container\" style='display:block;height:100%, width:100%;'>\n      <ejs-chart class=\"chart-content\" ref=\"splineInstance\" :theme='theme' style='display:block;height:100%, width:100%;' :primaryXAxis='primaryXAxis' :primaryYAxis='primaryYAxis'\n            :chartArea='chartArea' :height='height' :width='width' :border='border'>\n            <e-series-collection>\n                <e-series :dataSource='seriesData' type='SplineArea' xName='x' yName='y' name='Jan' width=2 opacity=0.5 :fill=\"fill0\"></e-series>\n                <e-series :dataSource='seriesData1' type='SplineArea' xName='x' yName='y' name='Feb' width=2 opacity=0.5 :fill=\"fill1\"></e-series>\n            </e-series-collection>\n        </ejs-chart>\n  </div>\n</template>\n\n<script>\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, SplineAreaSeries, Legend, DateTime } from \"@syncfusion/ej2-vue-charts\";\n\nlet selectedTheme = location.hash.split(\"/\")[1];\nselectedTheme = selectedTheme ? selectedTheme : \"Material\";\nlet theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\");\n\nexport default {\n  components: {\n  'ejs-chart': ChartComponent,\n  'e-series': SeriesDirective,\n  'e-series-collection': SeriesCollectionDirective\n  },\n  data: function() {\n    return {\n      theme: theme,\n      seriesData: [\n            { x: new Date(2002, 0, 1), y: 2.2 }, { x: new Date(2003, 0, 1), y: 3.4 },\n            { x: new Date(2004, 0, 1), y: 2.8 }, { x: new Date(2005, 0, 1), y: 1.6 },\n            { x: new Date(2006, 0, 1), y: 2.3 }, { x: new Date(2007, 0, 1), y: 2.5 },\n            { x: new Date(2008, 0, 1), y: 2.9 }, { x: new Date(2009, 0, 1), y: 3.8 },\n            { x: new Date(2010, 0, 1), y: 1.4 }, { x: new Date(2011, 0, 1), y: 3.1 }\n      ],\n      seriesData1: [\n            { x: new Date(2002, 0, 1), y: 2 }, { x: new Date(2003, 0, 1), y: 1.7 },\n            { x: new Date(2004, 0, 1), y: 1.8 }, { x: new Date(2005, 0, 1), y: 2.1 },\n            { x: new Date(2006, 0, 1), y: 2.3 }, { x: new Date(2007, 0, 1), y: 1.6 },\n            { x: new Date(2008, 0, 1), y: 1.5 }, { x: new Date(2009, 0, 1), y: 2.7 },\n            { x: new Date(2010, 0, 1), y: 1.5 }, { x: new Date(2011, 0, 1), y: 2.2 }\n      ],\n      //Initializing Primary X Axis\n       primaryXAxis: {\n            valueType: 'DateTime',\n            labelFormat: 'y',\n            majorGridLines: { width: 0 },\n            intervalType: 'Years',\n            edgeLabelPlacement: 'Shift'\n        },\n      //Initializing Primary Y Axis\n        primaryYAxis: {\n            labelFormat: '{value}%',\n            lineStyle: { width: 0 },\n            majorTickLines: { width: 0 },\n            minorTickLines: { width: 0 }\n        },\n      chartArea: {\n        border: {\n          width: 0\n        }\n      },\n      border: {\n           color: 'transparent'\n        },\n       width :\"100%\",\n       fill1: 'rgb(0, 189, 174)',\n       fill0: 'rgb(239, 183, 202)',\n       height: \"99%\"\n    };\n  },\n  provide: {\n    chart: [SplineAreaSeries, Legend, DateTime]\n  },\n  mounted(){\n    this.$refs.splineInstance.ej2Instances.height =\"100%\";\n    this.$refs.splineInstance.ej2Instances.width =\"100%\";\n  }\n \n}\n</script>\n\n<style>\n  .dashboard-seo .chart-content, .dashboard-dynamic .chart-content{\n    height: 100%;\n    width:100%;\n  }\n</style>","public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<div>\n    <div class=\"control-section dashboard-dynamic\">\n      <div>\n           <div style=\"width:100%;height: 30px;margin-bottom:5px\">\n            <ejs-button style=\"float:right;width:75px;\" id=\"toggleBtn\" ref=\"toggleBtn\" :iconCss='iconCss' cssClass=\"e-outline e-flat e-primary\" isToggle=true v-on:click='toggleClick'>Edit</ejs-button>\n        </div>\n        <div style=\"padding:5px;text-align: end;\">\n            <div class=\"add-widget-button e-control e-btn e-lib\" id=\"dialogBtn\" v-on:click=\"dialogButtonClick($event)\">\n                Add New Widget\n            </div>\n        </div>\n    </div>\n    <ejs-dashboardlayout ref=\"DashbordInstance\" :columns=\"2\" id='edit_dashboard' :allowResizing=\"false\" :allowDragging=\"false\" :cellSpacing=\"spacing\" :resizeStop=\"onPanelResize\">\n         <e-panels>\n                <e-panel :row=\"0\" :col=\"0\" :sizeX=\"1\" :sizeY=\"1\" header=\"<div>Line Chart</div>\" :content=\"line\"></e-panel>\n                <e-panel :row=\"0\" :col=\"1\" :sizeX=\"1\" :sizeY=\"1\" header=\"<div>Pie Chart</div>\" :content=\"pie\"></e-panel>\n                <e-panel :row=\"1\" :col=\"0\" :sizeX=\"2\" :sizeY=\"1\" header=\"<div>Spline Chart</div>\" :content=\"spline\"></e-panel>\n            </e-panels>\n    </ejs-dashboardlayout>   \n <ejs-dialog :header='header' ref=\"dialogObj\" :content='contenttemplateVue'  :showCloseIcon='showCloseIcon' :target='target' :width='width' :visible='false' :isModal='true'></ejs-dialog>\n</div>\n\n</div>\n</template>\n\n<script>\nimport { createApp } from \"vue\";\nimport { DashboardLayoutComponent, PanelsDirective, PanelDirective } from \"@syncfusion/ej2-vue-layouts\";\nimport lineTemplate from \"./linetemplate.vue\";\nimport pieTemplate from \"./pietemplate.vue\";\nimport splineTemplate from \"./splinetemplate.vue\";\nimport { ButtonComponent } from \"@syncfusion/ej2-vue-buttons\";\nimport { DialogComponent } from '@syncfusion/ej2-vue-popups';\n\nexport default {\n    components: {\n      'ejs-dashboardlayout': DashboardLayoutComponent,\n      'e-panel': PanelDirective,\n      'e-panels': PanelsDirective,\n      'ejs-button': ButtonComponent,\n      'ejs-dialog': DialogComponent\n    },\n    data: function() {\n        return {\n          spacing: [10,10],\n          iconCss: 'edit',\n          header:'Add a Content',\n          target:'.control-section',\n          width:'43%',\n          showCloseIcon: true,\n          contenttemplateVue:'<div id=\"dialogcontent\"><div><div id=\"linetemplate\"><p class=\"dialog-text\">Linechart (1x1) </p></div><div id=\"pietemplate\"><p class=\"dialog-text\">Piechart (1x1) </p></div><div id=\"splinetemplate\"><p class=\"dialog-text\">Splinechart (2x1) </p></div></div></div></div>',\n          spline: function () {\n                return { template : createApp({}).component('splineTemplate', splineTemplate) }\n            },\n          pie: function () {\n                return { template : createApp({}).component('pieTemplate', pieTemplate) }\n            },\n          line: function () {\n                return { template : createApp({}).component('lineTemplate', lineTemplate) }\n            },\n        };\n    },\n    methods: {\n         toggleClick: function() {\n              if (this.$refs.toggleBtn.$el.textContent == 'Edit') { \n                    this.$refs.DashbordInstance.$el.allowResizing = true;\n                    this.$refs.DashbordInstance.$el.allowDragging = true;\n                    this.$refs.toggleBtn.$el.textContent = 'Save';\n                    this.iconCss = \"save\";\n                    document.getElementById('dialogBtn').style.display = 'block';\n            } else {\n                this.$refs.DashbordInstance.$el.allowResizing = false;\n                this.$refs.DashbordInstance.$el.allowDragging = false;\n                this.$refs.toggleBtn.$el.textContent = 'Edit';\n                this.iconCss = \"edit\";\n                document.getElementById('dialogBtn').style.display = 'none';\n            }\n        },\n        onPanelResize: function(args) {\n            var dashboardObject = this.$refs.DashbordInstance;\n        if (dashboardObject && args.element && args.element.querySelector('.e-panel-container .e-panel-content div')) {\n            var chartObj = (args.element.querySelector('.e-panel-container .e-panel-content div.e-control')).ej2_instances[0];\n            chartObj.height = '95%';\n            chartObj.width = '100%';\n            chartObj.refresh();\n        }\n        },\n        dialogButtonClick: function() {\n              this.$refs.dialogObj.show();\n              var proxy = this;\n              this.$refs.dialogObj.$el.querySelector('#linetemplate').onclick = function () {\n                   var panel = {\n                       sizeX: 1,\n                       sizeY: 1,\n                       header: '<div>Line Chart</div>',\n                       row: 0,\n                       col:0,\n                       content: proxy.line\n                   }\n                   proxy.$refs.DashbordInstance.addPanel(panel);\n                   proxy.$refs.dialogObj.hide();\n               }\n               this.$refs.dialogObj.$el.querySelector('#pietemplate').onclick = function () {\n                   var panel = {\n                       sizeX: 1,\n                       sizeY: 1,\n                       header: '<div>Pie Chart</div>',\n                       row: 0,\n                       col:0,\n                       content: proxy.pie\n                   }\n                   proxy.$refs.DashbordInstance.addPanel(panel);\n                   proxy.$refs.dialogObj.hide();\n               }\n               this.$refs.dialogObj.$el.querySelector('#splinetemplate').onclick = function () {\n                   var panel = {\n                       sizeX: 2,\n                       sizeY: 1,\n                       header: '<div>Spline Chart</div>',\n                       row: 0,\n                       col:0,\n                       content: proxy.spline\n                   }\n                   proxy.$refs.DashbordInstance.addPanel(panel);\n                   proxy.$refs.dialogObj.hide();\n               }\n        } \n    },\n}\n</script>\n\n<style>\n\n.dashboard-dynamic #dialogBtn {\n    display: none;\n}\n\n.dashboard-dynamic .dialog-text {\n    height: 35px;\n    border: 1px solid #80808029;\n    vertical-align: middle;\n    line-height: 35px;\n    border-radius: 4px;\n    padding-left: 12px;\n    margin-bottom: 5%;\n    cursor: pointer;\n}\n\n@media (max-width: 650px) {\n    .dashboard-dynamic #togglebtn{\n        width: 90px !important;\n    }\n}\n\n.dashboard-dynamic .add-widget-button {\n    padding: 10px;\n    text-align: center;\n    margin-bottom: 10px;\n    cursor: pointer;\n    font-size: 15px;\n}\n\nbody.fluent.e-bigger button#toggleBtn,  body.fluent-dark.e-bigger button#toggleBtn{\n     width : 100px !important;\n     margin: -8px;\n    }\n    \n.dashboard-dynamic #edit_dashboard.e-dashboardlayout.e-control .e-panel:hover span {\n    display: block;\n}\n\n.dashboard-dynamic #edit_dashboard.e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header {\n    border-bottom: 2px solid #e6e9ed !important;\n    height: 35px;\n    padding: 0 15px 0 15px;\n    line-height: 35px;\n}\n\n\n.dashboard-dynamic #edit_dashboard .e-panel-content {\n    height: calc(100% - 37px) !important;\n    overflow: hidden;\n    width:100%;\n}\n\n.dashboard-dynamic #edit_dashboard.e-dashboardlayout.e-control .e-panel,\n.dashboard-dynamic #edit_dashboard.e-dashboardlayout.e-control .e-panel:hover,\n.dashboard-dynamic #edit_dashboard.e-dashboardlayout.e-control .e-panel:active {\n    border: 1px solid #bbb;\n}\n\n.dashboard-dynamic .e-dialog .e-dlg-header-content {\n    border-bottom: none;\n    padding: 18px 18px 18px 20px;\n}\n\n.dashboard-dynamic .edit::before {\n        content: '\\\\e501';\n        font-family: 'e-sb-icons';\n        /* color: #e3165b; */\n        margin-left: -7px;\n        vertical-align: middle;\n    }\n\n.dashboard-dynamic .save::before {\n    content: '\\\\e500';\n    font-family: 'e-sb-icons';\n    /* color: #e3165b; */\n    margin-left: -7px;\n    vertical-align: middle;\n}\n\n\n/* custom code start*/\n@font-face {\n    font-family: 'e-sb-icons';\n    src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMjttR/MAAAEoAAAAVmNtYXDlEOVaAAABjAAAADhnbHlmAM1kuQAAAcwAAAD8aGVhZBRipc8AAADQAAAANmhoZWEIUQQEAAAArAAAACRobXR4DAAAAAAAAYAAAAAMbG9jYQA6AH4AAAHEAAAACG1heHABEQA4AAABCAAAACBuYW1lWD3y/QAAAsgAAAIlcG9zdNvk7cwAAATwAAAANQABAAAEAAAAAFwEAAAAAAAD9AABAAAAAAAAAAAAAAAAAAAAAwABAAAAAQAApr5cCV8PPPUACwQAAAAAANioMG8AAAAA2KgwbwAAAAAD9AP0AAAACAACAAAAAAAAAAEAAAADACwABAAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5QDlAQQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAEAAAAAAAAAgAAAAMAAAAUAAMAAQAAABQABAAkAAAABAAEAAEAAOUB//8AAOUA//8AAAABAAQAAAABAAIAAAAAADoAfgAEAAAAAAP0A/MAAwALABkAIwAAAREhEQEVMzUzFSE1IxEhETMVMxEjESERIxEjERUhESM1IzUhAx79xAEeR0j+m0gB9I9HR/02SEcD6EdI/KcBcf7iAR4CPI+P19f+4gEeSPzuAWb+mgNa/KZHA1lIRwAAAAMAAAAAA/QD9AADAAgAKwAACQEnCQEDJQEnNwcXPwc1Lw8PBgLH/ko2Abb9uT4BGQJC2m0/2z8HBgUFAwMCAQIEBQcICQoLDA0NDw8PEA0NDQwLCwsCkf5KNgG2/l7+5z4CQ9puP9s/CgsLCwwNDQ0QDw8PDQ0MCwoJCAcFBAIBAQEDAwUFBgAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAcAAQABAAAAAAACAAcACAABAAAAAAADAAcADwABAAAAAAAEAAcAFgABAAAAAAAFAAsAHQABAAAAAAAGAAcAKAABAAAAAAAKACwALwABAAAAAAALABIAWwADAAEECQAAAAIAbQADAAEECQABAA4AbwADAAEECQACAA4AfQADAAEECQADAA4AiwADAAEECQAEAA4AmQADAAEECQAFABYApwADAAEECQAGAA4AvQADAAEECQAKAFgAywADAAEECQALACQBIyBlai1pY29uUmVndWxhcmVqLWljb25lai1pY29uVmVyc2lvbiAxLjBlai1pY29uRm9udCBnZW5lcmF0ZWQgdXNpbmcgU3luY2Z1c2lvbiBNZXRybyBTdHVkaW93d3cuc3luY2Z1c2lvbi5jb20AIABlAGoALQBpAGMAbwBuAFIAZQBnAHUAbABhAHIAZQBqAC0AaQBjAG8AbgBlAGoALQBpAGMAbwBuAFYAZQByAHMAaQBvAG4AIAAxAC4AMABlAGoALQBpAGMAbwBuAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBAgEDAQQABHNhdmUEZWRpdAAAAAAA) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n[class^=\"sf-icon-\"],\n[class*=\" sf-icon-\"] {\n    font-family: 'e-sb-icons' !important;\n    speak: none;\n    font-size: 55px;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\n.dashboard-dynamic #edit_dashboard{\n    display: block;\n}\n/* highcontrast style */\n\nbody.highcontrast .dashboard-dynamic #edit_dashboard.e-dashboardlayout.e-control .e-panel {\n    background: #000;\n}\n\nbody.highcontrast .dashboard-dynamic #edit_dashboard.e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header {\n    color: rgba(255, 255, 255, 0.54);\n}\n\n.fabric #togglebtn,\n.fabric-dark #togglebtn,\n.highcontrast #togglebtn {\n    padding:0 13px;\n}\n\n.bootstrap5-dark .dialog-text,\n.highcontrast .dialog-text,\n.tailwind-dark .dialog-text,\n.fabric-dark .dialog-text,\n.bootstrap-dark .dialog-text {\n    border: 1px solid #FFFFFF;\n}\n\n.e-bigger.material3 #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.material3-dark #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.bootstrap5 #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.tailwind #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.tailwind-dark #togglebtn.e-btn .e-btn-icon.e-icon-left {\n    margin-left: -0.2em;\n    width: 1em;\n}\n\n.e-bigger.highcontrast #togglebtn.e-btn .e-btn-icon.e-icon-left {\n    margin-left: -0.5em;\n    width: 1em;\n}\n\n</style>\n","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-vue-layouts\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-vue-popups\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}