{"styles/Grid/filter-menu.css":".select-wrap {\n    padding: 0 0 10px 0;\n    font-family: Roboto;\n    padding: 1em;\n    display: inline-block;\n}\n\n.select-wrap select {\n    height: 28px;\n    width: 100%;\n    border-width: 0 0 2px 0;\n    background: transparent;\n}\n\n.select-wrap select:focus {\n    border-bottom-style: solid;\n    border-color: #ff4081;\n}\n\n.select-wrap select, \n.select-wrap select option {\n    outline: none;\n    font-size: 14px;\n    padding: .2em;\n    height: 30px;\n}\n\n@media (min-width: 480px) and (max-width:639px) {\n    .select-wrap {\n        width: 40%\n    }\n}\n\n@media (min-width:640px) {\n    .select-wrap {\n        width: 25%\n    }\n}\n","public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<div class=\"col-lg-12 control-section\">\n    <div>\n        <div class=\"select-wrap\">\n            <ejs-dropdownlist id='ddlelement' :dataSource='ddldata' value='Menu' :fields='ddlfields' :change=\"onChange\"></ejs-dropdownlist>\n        </div>\n        <ejs-checkbox ref=\"checkbox\" label='Enable OnDemand: ' labelPosition='Before' :disabled='true' :checked=\"false\" :change=\"checkboxOnChange\"></ejs-checkbox>\n\n        <ejs-grid ref='grid' :dataSource=\"getTradeData\" :query=\"query\" :allowPaging='true' :allowFiltering='true' :allowSorting='true' :pageSettings='pageSettings' :filterSettings='filterSettings'>\n            <e-columns>\n                <e-column field='EmployeeID' headerText='Employee ID' width='120' textAlign='Right'></e-column>\n                <e-column field='Employees' headerText='Employee Name' width='150'></e-column>\n                <e-column field='Designation' headerText='Designation' width='130' textAlign='Right'></e-column>\n                <e-column field='CurrentSalary' headerText='CurrentSalary' width='120' format='C2' textAlign='Right'></e-column>\n            </e-columns>\n        </ejs-grid>\n    </div>\n\n\n</div>\n</template>\n\n<style scoped>\n@import \"../styles/Grid/filter-menu.css\";\n</style>\n\n<script lang=\"ts\">\nimport { GridComponent, ColumnDirective, ColumnsDirective, Filter, Page, FilterType, Sort } from \"@syncfusion/ej2-vue-grids\";\nimport { DropDownListComponent, ChangeEventArgs} from \"@syncfusion/ej2-vue-dropdowns\";\nimport { DataManager, Query, UrlAdaptor } from \"@syncfusion/ej2-data\";\nimport { CheckBoxComponent } from \"@syncfusion/ej2-vue-buttons\";\n\nexport default {\n  components: {\n    'ejs-grid': GridComponent,\n    'e-column': ColumnDirective,\n    'e-columns': ColumnsDirective,\n    'ejs-dropdownlist': DropDownListComponent,\n    'ejs-checkbox': CheckBoxComponent\n  },\n  data: () => {\n    return {\n      ddlfields: { text: 'type', value: 'Id' },\n      pageSettings: { pageCount: 5 },\n      filterSettings: { type: 'Menu' },\n      ddldata: [\n        { Id: 'Menu', type: 'Menu' },\n        { Id: 'CheckBox', type: 'Checkbox' },\n        { Id: 'Excel', type: 'Excel' }]\n    };\n  },\n  methods: {\n      onChange: function(e: ChangeEventArgs): void {\n        let checkbox = ((this as any).$refs.checkbox).$el.ej2_instances[0];\n        let grid = ((this as any).$refs.grid).$el.ej2_instances[0];\n        checkbox.checked = false;\n        grid.filterSettings.enableInfiniteScrolling = false;\n        (this as any).filterSettings = {type: <FilterType>e.value};\n        ((this as any).$refs.grid).clearFiltering();\n        if ((this as any).filterSettings.type === 'Excel' || (this as any).filterSettings.type === 'CheckBox') {\n            checkbox.disabled = false;\n        } else {\n            checkbox.disabled = true;\n        }\n    },\n    checkboxOnChange: function(args: any): void {\n        let grid = ((this as any).$refs.grid).$el.ej2_instances[0];\n        grid.filterSettings.enableInfiniteScrolling = args.checked;\n    }\n  },\n  computed: {\n    getTradeData: function () {\n        let SERVICE_URI = \"http://localhost:62728/\";\n        let getTradeData = new DataManager({\n            url: SERVICE_URI + 'api/UrlDataSource',\n            adaptor: new UrlAdaptor()\n        });\n        return getTradeData;\n    },\n    query: function () {\n        let query = new Query().addParams('dataCount', '10000');\n        return query;\n    }\n  },\n  provide: {\n      grid: [Filter, Page, Sort]\n  }\n}\n</script>\n","dependencies":"{\"vue\":\"3.3.4\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-vue-grids\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-vue-maps\":\"*\",\"@syncfusion/ej2-vue-calendars\":\"*\",\"@syncfusion/ej2-vue-schedule\":\"*\",\"@syncfusion/ej2-vue-richtexteditor\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-vue-navigations\":\"*\",\"@syncfusion/ej2-vue-documenteditor\":\"*\",\"@syncfusion/ej2-vue-splitbuttons\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}