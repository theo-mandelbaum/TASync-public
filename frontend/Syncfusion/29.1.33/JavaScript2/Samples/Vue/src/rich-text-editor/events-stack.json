{"public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <link href=\"https://ej2.syncfusion.com/vue/demos/lib/codemirror.css\" rel=\"stylesheet\" />\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/codemirror.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/css/css.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/xml/xml.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/htmlmixed/htmlmixed.js\" type=\"text/javascript\"></script>\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<div>\n  \n<div>\n    <div class=\"col-lg-8 control-section\">\n        <div class=\"content-wrapper\">\n            <ejs-richtexteditor ref=\"eventObj\" :toolbarSettings=\"toolbarSettings\" :fileManagerSettings=\"fileManagerSettings\" :created=\"create\" :actionBegin=\"actionBegin\" :actionComplete=\"actionComplete\" :focus=\"focus\" :blur=\"blur\" :change=\"change\" :toolbarClick=\"toolbarClick\"><p>The Rich Text Editor component is a WYSIWYG (\"what you see is what you get\") editor that provides the best user experience to create and update the content. \n                Users can format their content using standard toolbar commands.</p>\n                <p><b>Key features:</b></p>\n                <ul><li><p>Provides IFRAME and DIV modes</p></li>\n                <li><p>Capable of handling markdown editing.</p></li>\n                <li><p>Contains a modular library to load the necessary functionality on demand.</p></li>\n                <li><p>Provides a fully customizable toolbar.</p></li>\n                <li><p>Provides HTML view to edit the source directly for developers.</p></li>\n                <li><p>Supports third-party library integration.</p></li>\n                <li><p>Allows a preview of modified content before saving it.</p></li>\n                <li><p>Handles images, hyperlinks, video, hyperlinks, uploads, etc.</p></li>\n                <li><p>Contains undo/redo manager.</p></li>\n                <li><p>Creates bulleted and numbered lists.</p></li>\n                </ul></ejs-richtexteditor>\n        </div>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <table title=\"Event Trace\" id=\"property\">\n            <tbody><tr>\n                <td>\n                    <div class=\"eventarea\" style=\"height: 245px;overflow: auto\">\n                        <span class=\"EventLog\" id=\"EventLog\" style=\"word-break: normal;\"></span>\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <div class=\"evtbtn\" style=\"padding-bottom: 10px\">\n                        <ejs-button id=\"clear\" v-on:click=\"onClick\">Clear</ejs-button>\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n</div>\n</template>\n<style scoped>\n    /* custom code start */\n        #EventLog b{\n            color: #018607;\n        }\n          .material3-dark #EventLog b, .fluent-dark #EventLog b, .bootstrap5-dark #EventLog b,.bootstrap5\\.3-dark #EventLog b, .bootstrap-dark #EventLog b, .tailwind-dark #EventLog b, .tailwind3-dark #EventLog b, .highcontrast #EventLog b, .material-dark #EventLog b, .fabric-dark #EventLog b {\n        color: #21A32E;\n    }\n        hr {\n            margin: 1px 10px 1px 0px;\n            border-top: 1px solid #eee;\n        }\n        .sb-header {\n            z-index: 100;\n        }\n    /* custom code end */\n    .control-wrapper {\n        margin: 0 auto;\n    }\n\n    .property-section .right-side {\n        padding-left: 10px;\n    }\n\n    .property-section .left-side {\n        padding: 5px;\n        width: 25%\n    }\n\n    .sb-header {\n        z-index: 100 !important;\n    }\n\n    .sb-content.e-view.hide-header {\n        top: 0 !important;\n    }\n\n    .sb-header.e-view.hide-header {\n        display: none;\n    }\n</style>\n<script>\nimport { Browser, addClass, removeClass } from \"@syncfusion/ej2-base\";\nimport { RichTextEditorComponent, Toolbar, Link, Image, QuickToolbar, HtmlEditor, Table, EmojiPicker, PasteCleanup, Audio, Video, FormatPainter, FileManager } from \"@syncfusion/ej2-vue-richtexteditor\";\nimport { ButtonComponent } from \"@syncfusion/ej2-vue-buttons\";\n\nexport default {\n    components: {\n      'ejs-richtexteditor': RichTextEditorComponent,\n      'ejs-button': ButtonComponent\n    },\n    data: function() {\n        return {\n            toolbarSettings: {\n                items: [\n                'Bold',\n                'Italic',\n                'Underline',\n                'StrikeThrough',\n                'SuperScript',\n                'SubScript',\n                '|',\n                'FontName',\n                'FontSize',\n                'FontColor',\n                'BackgroundColor',\n                '|',\n                'LowerCase',\n                'UpperCase',\n                '|',\n                'Formats',\n                'Alignments',\n                'Blockquote',\n                '|',\n                'NumberFormatList',\n                'BulletFormatList',\n                '|',\n                'Outdent',\n                'Indent',\n                '|',\n                'CreateLink',\n                'Image',\n                'FileManager',\n                'Video',\n                'Audio',\n                'CreateTable',\n                '|',\n                'FormatPainter',\n                'ClearFormat',\n                '|',\n                'EmojiPicker',\n                'Print',\n                '|',\n                'SourceCode',\n                'FullScreen',\n                '|',\n                'Undo',\n                'Redo',\n                ],\n            },\n            fileManagerSettings: {\n                enable: true,\n                path: '/Pictures/Food',\n                ajaxSettings: {\n                url: 'https://ej2-aspcore-service.azurewebsites.net/api/FileManager/FileOperations',\n                getImageUrl:\n                    'https://ej2-aspcore-service.azurewebsites.net/api/FileManager/GetImage',\n                uploadUrl:\n                    'https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Upload',\n                downloadUrl:\n                    'https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Download',\n                },\n            },\n        };\n    },\n    methods: {\n        onClick: function() {\n             document.getElementById('EventLog').innerHTML = '';\n        },\n        create: function() {\n        this.appendElement('Rich Text Editor <b>create</b> event called<hr>');\n        },\n        actionBegin: function(e) {\n        this.appendElement('<b>'+ e.requestType + '</b> action is called<hr>');\n        this.handleFullScreen(e);\n        },\n        actionComplete: function(e) {\n        this.appendElement('<b>'+ e.requestType + '</b> action is completed<hr>');\n        this.actionCompleteHandler(e);\n        },\n        focus: function() {\n        this.appendElement('Rich Text Editor <b>focus</b> event called<hr>');\n        },\n        blur: function() {\n        this.appendElement('Rich Text Editor <b>blur</b> event called<hr>');\n        },\n        change: function() {\n        this.appendElement('Rich Text Editor <b>change</b> event called<hr>');\n        },\n        toolbarClick: function() {\n        this.appendElement('Rich Text Editor <b>toolbar click</b> event called<hr>');\n        },\n        beforeDialogOpen: function() {\n         this.appendElement('Rich Text Editor <b>beforeDialogOpen</b> event called<hr>');\n        },\n        dialogOpen: function() {\n             this.appendElement('Rich Text Editor <b>dialogOpen</b> event called<hr>');\n        },\n\n        dialogClose: function() {\n             this.appendElement('Rich Text Editor <b>dialogClose</b> event called<hr>');\n        },\n\n        beforeQuickToolbarOpen: function() {\n             this.appendElement('Rich Text Editor <b>beforeQuickToolbarOpen</b> event called<hr>');\n        },\n\n        quickToolbarOpen: function() {\n         this.appendElement('Rich Text Editor <b>quickToolbarOpen</b> event called<hr>');\n        },\n\n        quickToolbarClose: function() {\n             this.appendElement('Rich Text Editor <b>quickToolbarClose</b> event called<hr>');\n        },\n\n        imageSelected: function() {\n             this.appendElement('Rich Text Editor <b>imageSelected</b> event called<hr>');\n        },\n\n        imageUploading: function() {\n             this.appendElement('Rich Text Editor <b>imageUploading</b> event called<hr>');\n        },\n\n        imageUploadSuccess: function() {\n             this.appendElement('Rich Text Editor <b>imageUploadSuccess</b> event called<hr>');\n        },\n\n        imageUploadFailed: function() {\n             this.appendElement('Rich Text Editor <b>imageUploadFailed</b> event called<hr>');\n        },\n\n        imageRemoving: function() {\n             this.appendElement('Rich Text Editor <b>imageRemoving</b> event called<hr>');\n        },\n\n        destroyed: function() {\n             this.appendElement('Rich Text Editor <b>destroyed</b> event called<hr>');\n        },\n\n        beforeSanitizeHtml: function() {\n             this.appendElement('Rich Text Editor <b>beforeSanitizeHtml</b> event called<hr>');\n        },\n\n        resizing: function() {\n             this.appendElement('Rich Text Editor <b>resizing</b> event called<hr>');\n        },\n\n        resizeStart: function() {\n             this.appendElement('Rich Text Editor <b>resizeStart</b> event called<hr>');\n        },\n\n        resizeStop: function() {\n             this.appendElement('Rich Text Editor <b>resizeStop</b> event called<hr>');\n        },\n\n        appendElement: function(html) {\n             var span = document.createElement('span');\n             span.innerHTML = html\n             var log = document.getElementById('EventLog');\n             log.insertBefore(span, log.firstChild);\n\n        },\n        handleFullScreen: function(e) {\n        var sbCntEle = document.querySelector('.sb-content.e-view');\n        var sbHdrEle = document.querySelector('.sb-header.e-view');            \n        var leftBar;\n        var transformElement;\n        if (Browser.isDevice) {\n            leftBar = document.querySelector('#right-sidebar');\n            transformElement = document.querySelector('.sample-browser.e-view.e-content-animation');\n        } else {\n            leftBar = document.querySelector('#left-sidebar');\n            transformElement = document.querySelector('#right-pane');\n        }\n        if (e.targetItem === 'Maximize' && sbCntEle != null || sbHdrEle != null) {\n            if (Browser.isDevice && Browser.isIos) {\n                addClass([sbCntEle, sbHdrEle], ['hide-header']);\n            }\n            addClass([leftBar], ['e-close']);\n            removeClass([leftBar], ['e-open']);\n            if (!Browser.isDevice) { transformElement.style.marginLeft = '0px'; }\n            transformElement.style.transform = 'inherit';\n            sbHdrEle.style.cssText = 'z-index: 100 !important;';\n        } else if (e.targetItem === 'Minimize' && sbCntEle != null || sbHdrEle != null) {\n            if (Browser.isDevice && Browser.isIos) {\n                removeClass([sbCntEle, sbHdrEle], ['hide-header']);\n            }\n            removeClass([leftBar], ['e-close']);\n            if (!Browser.isDevice) {\n            addClass([leftBar], ['e-open']);\n            transformElement.style.marginLeft = leftBar.offsetWidth + 'px'; }\n            transformElement.style.transform = 'translateX(0px)';\n        }\n    },\n    actionCompleteHandler: function() {\n        setTimeout(() => { this.$refs.eventObj.ej2Instances.toolbarModule.refreshToolbarOverflow(); }, 400);\n    }\n    },\n    provide:{\n        richtexteditor:[Toolbar, Link, Image, QuickToolbar, HtmlEditor, Table, EmojiPicker, PasteCleanup, Audio, Video, FormatPainter, FileManager]\n    }\n}\n</script>\n","dependencies":"{\"vue\":\"3.3.4\",\"marked\":\"4.3.0\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-vue-richtexteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-vue-maps\":\"*\",\"@syncfusion/ej2-vue-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-vue-grids\":\"*\",\"@syncfusion/ej2-vue-schedule\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-vue-navigations\":\"*\",\"@syncfusion/ej2-vue-documenteditor\":\"*\",\"@syncfusion/ej2-vue-splitbuttons\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-vue-pdfviewer\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}