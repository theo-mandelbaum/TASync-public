{"src/data-source.json":"{\n    \"formatData\": [\n        {\n            \"Id\": \"prompt\",\n            \"format\": \"Prompt\"\n        },\n        {\n            \"Id\": \"plainTextFormatting\",\n            \"format\": \"Plain Text\"\n        },\n        {\n            \"Id\": \"keepFormating\",\n            \"format\": \"Keep Format\"\n        },\n        {\n            \"Id\": \"cleanFormatting\",\n            \"format\": \"Clean Format\"\n        }\n    ],\n    \"saveFormat\": [\n        {\n            \"Id\": \"Blob\",\n            \"format\": \"blob\"\n        },\n        {\n            \"Id\": \"Base64\",\n            \"format\": \"base\"\n        }\n    ],\n    \"enterData\": [\n        {\n            \"text\": \"Create a new <p>\",\n            \"value\": \"P\"\n        },\n        {\n            \"text\": \"Create a new <div>\",\n            \"value\": \"DIV\"\n        },\n        {\n            \"text\": \"Create a new <br>\",\n            \"value\": \"BR\"\n        }\n    ],\n    \"shiftEnterData\": [\n        {\n            \"text\": \"Create a new <br>\",\n            \"value\": \"BR\"\n        },\n        {\n            \"text\": \"Create a new <div>\",\n            \"value\": \"DIV\"\n        },\n        {\n            \"text\": \"Create a new <p>\",\n            \"value\": \"P\"\n        }\n    ],\n    \"emailData\": [\n        {\n            \"Name\": \"Selma Rose\",\n            \"Status\": \"active\",\n            \"Eimg\": \"https://ej2.syncfusion.com/vue/demos/styles/images/Employees/2.png\",\n            \"EmailId\": \"selma@gmail.com\"\n        },\n        {\n            \"Name\": \"Maria\",\n            \"Status\": \"active\",\n            \"Eimg\": \"https://ej2.syncfusion.com/vue/demos/styles/images/Employees/1.png\",\n            \"EmailId\": \"maria@gmail.com\"\n        },\n        {\n            \"Name\": \"Russo Kay\",\n            \"Status\": \"busy\",\n            \"Eimg\": \"https://ej2.syncfusion.com/vue/demos/styles/images/Employees/8.png\",\n            \"EmailId\": \"russo@gmail.com\"\n        },\n        {\n            \"Name\": \"Camden Kate\",\n            \"Status\": \"active\",\n            \"Eimg\": \"https://ej2.syncfusion.com/vue/demos/styles/images/Employees/9.png\",\n            \"EmailId\": \"camden@gmail.com\"\n        },\n        {\n            \"Name\": \"Robert\",\n            \"Status\": \"busy\",\n            \"Eimg\": \"https://ej2.syncfusion.com/vue/demos/styles/images/Employees/10.png\",\n            \"EmailId\": \"robert@gmail.com\"\n        },\n        {\n            \"Name\": \"Garth\",\n            \"Status\": \"active\",\n            \"Eimg\": \"https://ej2.syncfusion.com/vue/demos/styles/images/Employees/3.png\",\n            \"EmailId\": \"garth@gmail.com\"\n        },\n        {\n            \"Name\": \"Andrew James\",\n            \"Status\": \"away\",\n            \"Eimg\": \"https://ej2.syncfusion.com/vue/demos/styles/images/Employees/7.png\",\n            \"EmailId\": \"james@gmail.com\"\n        },\n        {\n            \"Name\": \"Olivia\",\n            \"Status\": \"busy\",\n            \"Eimg\": \"https://ej2.syncfusion.com/vue/demos/styles/images/Employees/5.png\",\n            \"EmailId\": \"olivia@gmail.com\"\n        },\n        {\n            \"Name\": \"Sophia\",\n            \"Status\": \"away\",\n            \"Eimg\": \"https://ej2.syncfusion.com/vue/demos/styles/images/Employees/6.png\",\n            \"EmailId\": \"sophia@gmail.com\"\n        },\n        {\n            \"Name\": \"Margaret\",\n            \"Status\": \"active\",\n            \"Eimg\": \"https://ej2.syncfusion.com/vue/demos/styles/images/Employees/3.png\",\n            \"EmailId\": \"margaret@gmail.com\"\n        },\n        {\n            \"Name\": \"Ursula Ann\",\n            \"Status\": \"active\",\n            \"Eimg\": \"https://ej2.syncfusion.com/vue/demos/styles/images/Employees/dp.png\",\n            \"EmailId\": \"ursula@gmail.com\"\n        },\n        {\n            \"Name\": \"Laura Grace\",\n            \"Status\": \"away\",\n            \"Eimg\": \"https://ej2.syncfusion.com/vue/demos/styles/images/Employees/4.png\",\n            \"EmailId\": \"laura@gmail.com\"\n        },\n        {\n            \"Name\": \"Albert\",\n            \"Status\": \"active\",\n            \"Eimg\": \"https://ej2.syncfusion.com/vue/demos/styles/images/Employees/pic03.png\",\n            \"EmailId\": \"albert@gmail.com\"\n        },\n        {\n            \"Name\": \"William\",\n            \"Status\": \"away\",\n            \"Eimg\": \"https://ej2.syncfusion.com/vue/demos/styles/images/Employees/10.png\",\n            \"EmailId\": \"william@gmail.com\"\n        }\n    ]\n}","public/index.html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title>\r\n        <%= htmlWebpackPlugin.options.title %>\r\n    </title>\r\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <link href=\"https://ej2.syncfusion.com/vue/demos/lib/codemirror.css\" rel=\"stylesheet\" />\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/codemirror.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/css/css.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/xml/xml.js\" type=\"text/javascript\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/htmlmixed/htmlmixed.js\" type=\"text/javascript\"></script>\n</head>\r\n\r\n<body>\r\n    <noscript>\r\n        <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.\r\n        Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <style>\r\n            .control-section\r\n            {\r\n                margin-top: 100px;\r\n            }\r\n    </style>\r\n    <!-- built files will be auto injected -->\r\n</body>\r\n\r\n</html>\r\n","src/App.vue":"<template>\n<div>\n<div class=\"control-section enter-key-sample\">\n    <div class=\"sample-container\">\n        <div class=\"default-section\">\n            <table class=\"api\">\n                <tbody>\n                    <tr>\n                        <td>\n                            <div>\n                                <ejs-dropdownlist ref=\"enterOptionInstance\" :dataSource=\"enterData\" :fields='fields' :popupHeight=\"height\" :change=\"enterChange\" :value='enterValue' :placeholder='enterPlaceHolder' :floatLabelType='floatLabelType'></ejs-dropdownlist>\n                            </div>\n                        </td>\n                        <td>\n                            <div>\n                                <ejs-dropdownlist ref=\"shiftEnterOptionInstance\" :dataSource=\"shiftEnterData\" :fields='fields' :popupHeight=\"height\" :change=\"shiftEnterChange\" :value='shiftEnterValue' :placeholder='shiftEnterPlaceHolder' :floatLabelType='floatLabelType'></ejs-dropdownlist>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <br/>\n            <ejs-richtexteditor ref=\"rteInstance\" :saveInterval=\"saveInterval\" :height=\"height\" :change=\"onChange\" :created=\"onCreate\">\n                <p>In Rich text Editor, the enter key and shift + enter key actions can be customized using the enterKey and shiftEnterKey APIs. And the possible values are as follows:</p><ul><li>P - When 'P' is configured, pressing enter or shift + enter will create a 'p' tag</li><li>DIV - When 'DIV' is configured, pressing enter or shift + enter will create a 'div' tag</li><li>BR - When 'BR' is configured, pressing enter or shift + enter will create a 'br' tag</li></ul>\n            </ejs-richtexteditor>\n            <br/>\n            <label>Code View </label>\n            <div id=\"codeView\" class=\"codeView\"></div>\n        </div>\n    </div>\n</div>\n\n</div>\n</template>\n<style>\n    .api {\n        width: 75%;\n    }\n    .api td {\n        padding-right: 100px;\n        margin-top: 3px;\n    }\n    @media only screen and (max-width: 600px) {\n        .api {\n            width: 100%;\n        }\n        .api td {\n            display: block;\n        }\n    }\n    @media only screen and (min-width: 600px) and (max-width: 1000px) {\n        .api {\n            width: 100%;\n        }\n    }\n    .default-section {\n        padding-left: 20px;\n        padding-right: 20px;\n    }\n    .codeView {\n        border: 1px solid rgba(0,0,0,0.12);\n        height: 200px;\n        width: 100%;\n    }\n    .bootstrap-dark .codeView{\n        border:1px solid rgb(80,80,80);\n    }\n    .highcontrast #codeView {\n        border:1px solid rgb(255,255,255);\n    }\n    .enter-key-sample .CodeMirror {\n        height: 190px;\n    }\n    .codeViewContent {\n        padding-left: 16px;\n    }\n\t.control-section.enter-key-sample .e-popup.e-popup-open.e-dialog {\n        height: 387px !important;\n    }\n    .control-section.enter-key-sample .e-dialog .e-dlg-content {\n        overflow: inherit;\n        overflow-x: inherit;\n    }\n    .bootstrap5\\.3-dark .codeView .CodeMirror {\n        background: rgb(40, 45, 49);\n        color:#fff\n    }\n</style>\n<script>\nimport { RichTextEditorComponent, Toolbar, Link, Image, QuickToolbar, HtmlEditor, PasteCleanup, Table, Video, Audio } from \"@syncfusion/ej2-vue-richtexteditor\";\nimport { DropDownListComponent } from \"@syncfusion/ej2-vue-dropdowns\";\nimport * as data from './data-source.json';\nimport CodeMirror from 'codemirror';\n\nexport default {\n    components: {\n      'ejs-richtexteditor': RichTextEditorComponent,\n      'ejs-dropdownlist': DropDownListComponent\n    },\n    data: function() {\n        return {\n            saveInterval: 1,\n            height: 220,\n            enterPlaceHolder: 'When pressing the enter key',\n            shiftEnterPlaceHolder: 'When pressing the shift + enter key',\n            floatLabelType: 'Always',\n            enterData: data['enterData'],\n            shiftEnterData: data['shiftEnterData'],\n            fields: { text: 'text', value: 'value' }, \n            enterValue: 'P',\n            shiftEnterValue: 'BR'\n        };\n    },\n    methods: {\n        onCreate: function() {\n            this.onChange();\n        },\n        enterChange: function() {\n            if (this.$refs.enterOptionInstance.ej2Instances.value === 'P') {\n                this.$refs.rteInstance.ej2Instances.enterKey = 'P';\n                 this.$refs.rteInstance.ej2Instances.value = `<p>In Rich text Editor, the enter key and shift + enter key actions can be customized using the enterKey and shiftEnterKey APIs. And the possible values are as follows:</p><ul><li>P - When 'P' is configured, pressing enter or shift + enter will create a 'p' tag</li><li>DIV - When 'DIV' is configured, pressing enter or shift + enter will create a 'div' tag</li><li>BR - When 'BR' is configured, pressing enter or shift + enter will create a 'br' tag</li></ul>`;\n            } else if (this.$refs.enterOptionInstance.ej2Instances.value === 'DIV') {\n                this.$refs.rteInstance.ej2Instances.enterKey = 'DIV';\n                this.$refs.rteInstance.ej2Instances.value = `<div>In Rich text Editor, the enter key and shift + enter key actions can be customized using the enterKey and shiftEnterKey APIs. And the possible values are as follows:</div><ul><li>P - When 'P' is configured, pressing enter or shift + enter will create a 'p' tag</li><li>DIV - When 'DIV' is configured, pressing enter or shift + enter will create a 'div' tag</li><li>BR - When 'BR' is configured, pressing enter or shift + enter will create a 'br' tag</li></ul>`;\n            } else if (this.$refs.enterOptionInstance.ej2Instances.value === 'BR') {\n                this.$refs.rteInstance.ej2Instances.enterKey = 'BR';\n                this.$refs.rteInstance.ej2Instances.value = `In Rich text Editor, the enter key and shift + enter key actions can be customized using the enterKey and shiftEnterKey APIs. And the possible values are as follows:<ul><li>P - When 'P' is configured, pressing enter or shift + enter will create a 'p' tag</li><li>DIV - When 'DIV' is configured, pressing enter or shift + enter will create a 'div' tag</li><li>BR - When 'BR' is configured, pressing enter or shift + enter will create a 'br' tag</li></ul>`;\n            }\n            this.onChange();\n        },\n        shiftEnterChange: function() {\n            if (this.$refs.enterOptionInstance.ej2Instances.value === 'BR') {\n                this.$refs.rteInstance.ej2Instances.shiftEnterKey = 'BR';\n            } else if (this.$refs.enterOptionInstance.ej2Instances.value === 'DIV') {\n                this.$refs.rteInstance.ej2Instances.shiftEnterKey = 'DIV';\n            } else if (this.$refs.enterOptionInstance.ej2Instances.value === 'P') {\n                this.$refs.rteInstance.ej2Instances.shiftEnterKey = 'P';\n            }\n        },\n        onChange: function() {\n            var id = this.$refs.rteInstance.ej2Instances.getID() + 'mirror-view';\n            var codeView = document.getElementById('codeView');\n            var mirrorView;\n            if (document.getElementById(id)) {\n                mirrorView = document.getElementById(id);\n                mirrorView.innerHTML = '';\n            } else {\n                mirrorView = document.createElement('div', { className: 'e-content codeViewContent' });\n                mirrorView.id = id;\n                codeView.appendChild(mirrorView);\n            }\n            mirrorView.style.display = 'block';\n            if (this.$refs.rteInstance.ej2Instances.value !== null) {\n                CodeMirror(mirrorView, {\n                    value: this.$refs.rteInstance.ej2Instances.value,\n                    mode: 'text/html',\n                    lineWrapping: true,\n                    readOnly: true\n                });\n            }\n        }\n    },\n    provide:{\n        richtexteditor:[Toolbar, Link, Image, QuickToolbar, HtmlEditor, PasteCleanup, Table, Video, Audio]\n    }\n}\n</script>","dependencies":"{\"vue\":\"3.3.4\",\"marked\":\"4.3.0\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-vue-base\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-vue-richtexteditor\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-vue-dropdowns\":\"*\",\"@syncfusion/ej2-vue-charts\":\"*\",\"@syncfusion/ej2-vue-maps\":\"*\",\"@syncfusion/ej2-vue-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-vue-grids\":\"*\",\"@syncfusion/ej2-vue-schedule\":\"*\",\"@syncfusion/ej2-vue-inputs\":\"*\",\"@syncfusion/ej2-vue-navigations\":\"*\",\"@syncfusion/ej2-vue-documenteditor\":\"*\",\"@syncfusion/ej2-vue-splitbuttons\":\"*\",\"@syncfusion/ej2-vue-buttons\":\"*\",\"@syncfusion/ej2-vue-pdfviewer\":\"*\"}","src/main.js":"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')"}