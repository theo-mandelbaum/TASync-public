/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/document-editor/mail-merge/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/document-editor/mail-merge/index.ts","documenteditor.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/document-editor/mail-merge/data-mail-merge.json":
/*!*****************************************************************!*\
  !*** ./samples/document-editor/mail-merge/data-mail-merge.json ***!
  \*****************************************************************/
/*! exports provided: sfdt, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"sfdt\\\":\\\"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\\\"}\");\n\n//# sourceURL=webpack:///./samples/document-editor/mail-merge/data-mail-merge.json?");

/***/ }),

/***/ "./samples/document-editor/mail-merge/index.ts":
/*!*****************************************************!*\
  !*** ./samples/document-editor/mail-merge/index.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-documenteditor */ \"./node_modules/@syncfusion/ej2-documenteditor/index.js\"), __webpack_require__(/*! ./title-bar */ \"./samples/document-editor/mail-merge/title-bar.ts\"), __webpack_require__(/*! @syncfusion/ej2-lists */ \"./node_modules/@syncfusion/ej2-lists/index.js\"), __webpack_require__(/*! ./data-mail-merge.json */ \"./samples/document-editor/mail-merge/data-mail-merge.json\"), __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_documenteditor_1, title_bar_1, ej2_lists_1, data, ej2_popups_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    var hostUrl = 'https://ej2services.syncfusion.com/production/web-services/api/documenteditor/';\n    var container = new ej2_documenteditor_1.DocumentEditorContainer({ serviceUrl: hostUrl, enableToolbar: true, height: '590px',\n        toolbarItems: [\n            'New', 'Open', 'Separator', 'Undo',\n            'Redo',\n            'Separator',\n            {\n                prefixIcon: 'sf-icon-InsertMergeField',\n                tooltipText: 'Insert Field',\n                text: onWrapText('Insert Field'),\n                id: 'InsertField'\n            },\n            {\n                prefixIcon: 'sf-icon-FinishMerge',\n                tooltipText: 'Merge Document',\n                text: onWrapText('Merge Document'),\n                id: 'MergeDocument'\n            },\n            'Separator',\n            'Image',\n            'Table',\n            'Hyperlink',\n            'Bookmark',\n            'TableOfContents',\n            'Separator',\n            'Header',\n            'Footer',\n            'PageSetup',\n            'PageNumber',\n            'Break',\n            'Separator',\n            'Find',\n            'Separator',\n            'Comments',\n            'TrackChanges',\n            'Separator',\n            'LocalClipboard',\n            'RestrictEditing',\n            'Separator',\n            'FormFields',\n            'UpdateFields',\n        ],\n        documentEditorSettings: { showRuler: true }\n    });\n    ej2_documenteditor_1.DocumentEditorContainer.Inject(ej2_documenteditor_1.Toolbar);\n    container.appendTo('#container');\n    var titleBar = new title_bar_1.TitleBar(document.getElementById('documenteditor_titlebar'), container.documentEditor, true);\n    container.documentEditor.open(JSON.stringify(data));\n    container.documentEditor.documentName = 'Mail Merge';\n    titleBar.updateDocumentTitle();\n    container.documentChange = function () {\n        titleBar.updateDocumentTitle();\n        container.documentEditor.focusIn();\n    };\n    function onWrapText(text) {\n        var content = '';\n        var index = text.lastIndexOf(' ');\n        content = text.slice(0, index);\n        text.slice(index);\n        content += '<div class=\"e-de-text-wrap\">' + text.slice(index) + '</div>';\n        return content;\n    }\n    container.toolbarClick = function (args) {\n        switch (args.item.id) {\n            case 'MergeDocument':\n                mergeDocument();\n                break;\n            case 'InsertField':\n                showInsertFielddialog();\n                break;\n        }\n    };\n    var waitingPopUp;\n    var inActiveDiv;\n    var listData = [\n        {\n            text: 'ProductName',\n            category: 'Drag or click the field to insert.',\n            htmlAttributes: { draggable: true }\n        },\n        {\n            text: 'ShipName',\n            category: 'Drag or click the field to insert.',\n            htmlAttributes: { draggable: true }\n        },\n        {\n            text: 'CustomerID',\n            category: 'Drag or click the field to insert.',\n            htmlAttributes: { draggable: true }\n        },\n        {\n            text: 'Quantity',\n            category: 'Drag or click the field to insert.',\n            htmlAttributes: { draggable: true }\n        },\n        {\n            text: 'UnitPrice',\n            category: 'Drag or click the field to insert.',\n            htmlAttributes: { draggable: true }\n        },\n        {\n            text: 'Discount',\n            category: 'Drag or click the field to insert.',\n            htmlAttributes: { draggable: true }\n        },\n        {\n            text: 'ShipAddress',\n            category: 'Drag or click the field to insert.',\n            htmlAttributes: { draggable: true }\n        },\n        {\n            text: 'ShipCity',\n            category: 'Drag or click the field to insert.',\n            htmlAttributes: { draggable: true }\n        },\n        {\n            text: 'ShipCountry',\n            category: 'Drag or click the field to insert.',\n            htmlAttributes: { draggable: true }\n        },\n        {\n            text: 'OrderId',\n            category: 'Drag or click the field to insert.',\n            htmlAttributes: { draggable: true }\n        },\n        {\n            text: 'OrderDate',\n            category: 'Drag or click the field to insert.',\n            htmlAttributes: { draggable: true }\n        }\n    ];\n    var listDivElement = document.getElementById('listview');\n    var listView = new ej2_lists_1.ListView({\n        dataSource: listData,\n        fields: { tooltip: 'category' },\n        select: onselect\n    });\n    listView.appendTo(listDivElement);\n    document.getElementById('listview').addEventListener('dragstart', function (event) {\n        event.dataTransfer.setData('Text', event.target.innerText);\n        event.target.classList.add('de-drag-target');\n    });\n    function onselect(args) {\n        var fieldName = args.text;\n        listView.selectItem(undefined);\n        insertField(fieldName);\n    }\n    function insertField(fieldName) {\n        var fileName = fieldName.replace(/\\n/g, '').replace(/\\r/g, '').replace(/\\r\\n/g, '');\n        var fieldCode = 'MERGEFIELD  ' + fileName + '  \\\\* MERGEFORMAT ';\n        container.documentEditor.editor.insertField(fieldCode, '«' + fieldName + '»');\n        container.documentEditor.focusIn();\n    }\n    document.getElementById('container').addEventListener('dragover', function (event) {\n        event.preventDefault();\n    });\n    document.getElementById('container').addEventListener('drop', function (e) {\n        var text = e.dataTransfer.getData('Text');\n        container.documentEditor.selection.select({ x: e.offsetX, y: e.offsetY, extend: false });\n        insertField(text);\n    });\n    document.addEventListener('dragend', function (event) {\n        if (event.target.classList.contains('de-drag-target')) {\n            event.target.classList.remove('de-drag-target');\n        }\n    });\n    function showInsertFielddialog() {\n        var instance = this;\n        if (document.getElementById('insert_merge_field') === null || document.getElementById('insert_merge_field') === undefined) {\n            var fieldcontainer = document.createElement('div');\n            fieldcontainer.id = 'insert_merge_field';\n            document.body.appendChild(fieldcontainer);\n            insertFieldDialogObj.appendTo('#insert_merge_field');\n            fieldcontainer.parentElement.style.position = 'fixed';\n            fieldcontainer.style.width = 'auto';\n            fieldcontainer.style.height = 'auto';\n        }\n        insertFieldDialogObj.close = function () { container.documentEditor.focusIn(); };\n        insertFieldDialogObj.beforeOpen = function () { container.documentEditor.focusIn(); };\n        insertFieldDialogObj.show();\n        var fieldNameTextBox = document.getElementById('field_text');\n        fieldNameTextBox.value = '';\n    }\n    function closeFieldDialog() {\n        insertFieldDialogObj.hide();\n        container.documentEditor.focusIn();\n    }\n    var insertFieldDialogObj = new ej2_popups_1.Dialog({\n        header: 'Merge Field',\n        content: '<div class=\"dialogContent\">'\n            + '<label class=\"e-insert-field-label\">Name:</label></br><input type=\"text\" id=\"field_text\" class=\"e-input\" placeholder=\"Type a field to insert eg. FirstName\">'\n            + '</div>',\n        showCloseIcon: true,\n        isModal: true,\n        width: 'auto',\n        height: 'auto',\n        close: closeFieldDialog,\n        buttons: [\n            {\n                'click': function () {\n                    var fieldNameTextBox = document.getElementById('field_text');\n                    var fieldName = fieldNameTextBox.value;\n                    if (fieldName !== '') {\n                        container.documentEditor.editor.insertField('MERGEFIELD ' + fieldName + ' \\\\* MERGEFORMAT');\n                    }\n                    insertFieldDialogObj.hide();\n                    container.documentEditor.focusIn();\n                },\n                buttonModel: {\n                    content: 'Ok',\n                    cssClass: 'e-flat',\n                    isPrimary: true,\n                },\n            },\n            {\n                'click': function () {\n                    insertFieldDialogObj.hide();\n                    container.documentEditor.focusIn();\n                },\n                buttonModel: {\n                    content: 'Cancel',\n                    cssClass: 'e-flat',\n                },\n            },\n        ],\n    });\n    function mergeDocument() {\n        container.documentEditor.saveAsBlob('Docx').then(function (blob) {\n            var exportedDocumment = blob;\n            var fileReader = new FileReader();\n            fileReader.onload = function () {\n                var base64String = fileReader.result;\n                var responseData = {\n                    fileName: container.documentEditor.documentName + '.docx',\n                    documentData: base64String\n                };\n                waitingPopUp = document.getElementById('waiting-popup');\n                inActiveDiv = document.getElementById('popup-overlay');\n                showHideWaitingIndicator(true);\n                var baseUrl = 'https://ej2services.syncfusion.com/production/web-services/api/documenteditor/MailMerge';\n                var httpRequest = new XMLHttpRequest();\n                httpRequest.open('POST', baseUrl, true);\n                httpRequest.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');\n                httpRequest.onreadystatechange = function () {\n                    if (httpRequest.readyState === 4) {\n                        if (httpRequest.status === 200 || httpRequest.status === 304) {\n                            container.documentEditor.open(httpRequest.responseText);\n                        }\n                        else {\n                            ej2_popups_1.DialogUtility.alert({\n                                title: 'Information',\n                                content: 'failure to merge document',\n                                showCloseIcon: true,\n                                closeOnEscape: true,\n                            });\n                        }\n                        showHideWaitingIndicator(false);\n                    }\n                };\n                httpRequest.send(JSON.stringify(responseData));\n            };\n            fileReader.readAsDataURL(blob);\n        });\n    }\n    function showHideWaitingIndicator(show) {\n        inActiveDiv.style.display = show ? 'block' : 'none';\n        waitingPopUp.style.display = show ? 'block' : 'none';\n    }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/document-editor/mail-merge/index.ts?");

/***/ }),

/***/ "./samples/document-editor/mail-merge/title-bar.ts":
/*!*********************************************************!*\
  !*** ./samples/document-editor/mail-merge/title-bar.ts ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\"), __webpack_require__(/*! @syncfusion/ej2-splitbuttons */ \"./node_modules/@syncfusion/ej2-splitbuttons/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_buttons_1, ej2_splitbuttons_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.TitleBar = void 0;\n    var TitleBar = (function () {\n        function TitleBar(element, docEditor, isShareNeeded, isRtl, dialogComponent) {\n            var _this = this;\n            this.initializeTitleBar = function (isShareNeeded) {\n                var downloadText;\n                var downloadToolTip;\n                var printText;\n                var printToolTip;\n                var closeToolTip;\n                var openText;\n                var documentTileText;\n                if (!_this.isRtl) {\n                    downloadText = 'Download';\n                    downloadToolTip = 'Download this document.';\n                    printText = 'Print';\n                    printToolTip = 'Print this document (Ctrl+P).';\n                    closeToolTip = 'Close this document';\n                    openText = 'Open';\n                    documentTileText = 'Document Name. Click or tap to rename this document.';\n                }\n                else {\n                    downloadText = 'تحميل';\n                    downloadToolTip = 'تحميل هذا المستند';\n                    printText = 'طباعه';\n                    printToolTip = 'طباعه هذا المستند (Ctrl + P)';\n                    openText = 'فتح';\n                    documentTileText = 'اسم المستند. انقر أو اضغط لأعاده تسميه هذا المستند';\n                }\n                _this.documentTitle = (0, ej2_base_1.createElement)('label', { id: 'documenteditor_title_name', styles: 'font-weight:400;text-overflow:ellipsis;white-space:pre;overflow:hidden;user-select:none;cursor:text' });\n                var iconCss = 'e-de-padding-right';\n                var btnFloatStyle = 'float:right;';\n                var titleCss = '';\n                if (_this.isRtl) {\n                    iconCss = 'e-de-padding-right-rtl';\n                    btnFloatStyle = 'float:left;';\n                    titleCss = 'float:right;';\n                }\n                _this.documentTitleContentEditor = (0, ej2_base_1.createElement)('div', { id: 'documenteditor_title_contentEditor', className: 'single-line', styles: titleCss });\n                _this.documentTitleContentEditor.appendChild(_this.documentTitle);\n                _this.tileBarDiv.appendChild(_this.documentTitleContentEditor);\n                _this.documentTitleContentEditor.setAttribute('title', documentTileText);\n                var btnStyles = btnFloatStyle + 'background: transparent;box-shadow:none; font-family: inherit;border-color: transparent;'\n                    + 'border-radius: 2px;color:inherit;font-size:12px;text-transform:capitalize;height:28px;font-weight:400;margin-top: 2px;';\n                _this.close = _this.addButton('e-icons e-close e-de-padding-right', \"\", btnStyles, 'de-close', closeToolTip, false);\n                _this.print = _this.addButton('e-de-icon-Print ' + iconCss, printText, btnStyles, 'de-print', printToolTip, false);\n                _this.open = _this.addButton('e-de-icon-Open ' + iconCss, openText, btnStyles, 'de-open', openText, false);\n                var items = [\n                    { text: 'Syncfusion® Document Text (*.sfdt)', id: 'sfdt' },\n                    { text: 'Word Document (*.docx)', id: 'word' },\n                    { text: 'Word Template (*.dotx)', id: 'dotx' },\n                    { text: 'Plain Text (*.txt)', id: 'txt' }\n                ];\n                _this.export = _this.addButton('e-de-icon-Download ' + iconCss, downloadText, btnStyles, 'documenteditor-share', downloadToolTip, true, items);\n                if (!isShareNeeded) {\n                    _this.export.element.style.display = 'none';\n                }\n                else {\n                    _this.open.element.style.display = 'none';\n                }\n                if (_this.dialogComponent == null)\n                    _this.close.element.style.display = 'none';\n            };\n            this.wireEvents = function () {\n                _this.print.element.addEventListener('click', _this.onPrint);\n                _this.close.element.addEventListener('click', _this.onClose);\n                _this.open.element.addEventListener('click', function (e) {\n                    if (e.target.id === 'de-open') {\n                        var fileUpload = document.getElementById('uploadfileButton');\n                        fileUpload.value = '';\n                        fileUpload.click();\n                    }\n                });\n                _this.documentTitleContentEditor.addEventListener('keydown', function (e) {\n                    if (e.keyCode === 13) {\n                        e.preventDefault();\n                        _this.documentTitleContentEditor.contentEditable = 'false';\n                        if (_this.documentTitleContentEditor.textContent === '') {\n                            _this.documentTitleContentEditor.textContent = 'Document1';\n                        }\n                    }\n                });\n                _this.documentTitleContentEditor.addEventListener('blur', function () {\n                    if (_this.documentTitleContentEditor.textContent === '') {\n                        _this.documentTitleContentEditor.textContent = 'Document1';\n                    }\n                    _this.documentTitleContentEditor.contentEditable = 'false';\n                    _this.documentEditor.documentName = _this.documentTitle.textContent;\n                });\n                _this.documentTitleContentEditor.addEventListener('click', function () {\n                    _this.updateDocumentEditorTitle();\n                });\n            };\n            this.updateDocumentEditorTitle = function () {\n                _this.documentTitleContentEditor.contentEditable = 'true';\n                _this.documentTitleContentEditor.focus();\n                window.getSelection().selectAllChildren(_this.documentTitleContentEditor);\n            };\n            this.updateDocumentTitle = function () {\n                if (_this.documentEditor.documentName === '') {\n                    _this.documentEditor.documentName = 'Untitled';\n                }\n                _this.documentTitle.textContent = _this.documentEditor.documentName;\n            };\n            this.onPrint = function () {\n                _this.documentEditor.print();\n            };\n            this.onClose = function () {\n                _this.dialogComponent.hide();\n            };\n            this.onExportClick = function (args) {\n                var value = args.item.id;\n                switch (value) {\n                    case 'word':\n                        _this.save('Docx');\n                        break;\n                    case 'sfdt':\n                        _this.save('Sfdt');\n                        break;\n                    case 'txt':\n                        _this.save('Txt');\n                        break;\n                    case 'dotx':\n                        _this.save('Dotx');\n                        break;\n                }\n            };\n            this.save = function (format) {\n                _this.documentEditor.save(_this.documentEditor.documentName === '' ? 'sample' : _this.documentEditor.documentName, format);\n            };\n            this.tileBarDiv = element;\n            this.documentEditor = docEditor;\n            this.isRtl = isRtl;\n            this.dialogComponent = dialogComponent;\n            this.initializeTitleBar(isShareNeeded);\n            this.wireEvents();\n        }\n        TitleBar.prototype.setTooltipForPopup = function () {\n            document.getElementById('documenteditor-share-popup').querySelectorAll('li')[0].setAttribute('title', 'Download a copy of this document to your computer as an SFDT file.');\n            document.getElementById('documenteditor-share-popup').querySelectorAll('li')[1].setAttribute('title', 'Download a copy of this document to your computer as a DOCX file.');\n            document.getElementById('documenteditor-share-popup').querySelectorAll('li')[2].setAttribute('title', 'Download a copy of this document to your computer as a DOTX file.');\n            document.getElementById('documenteditor-share-popup').querySelectorAll('li')[3].setAttribute('title', 'Download a copy of this document to your computer as a TXT file.');\n        };\n        TitleBar.prototype.addButton = function (iconClass, btnText, styles, id, tooltipText, isDropDown, items) {\n            var _this = this;\n            var button = (0, ej2_base_1.createElement)('button', { id: id, styles: styles });\n            this.tileBarDiv.appendChild(button);\n            button.setAttribute('title', tooltipText);\n            if (isDropDown) {\n                var dropButton = new ej2_splitbuttons_1.DropDownButton({ select: this.onExportClick, items: items, iconCss: iconClass, cssClass: 'e-caret-hide', content: btnText, open: function () { _this.setTooltipForPopup(); } }, button);\n                return dropButton;\n            }\n            else {\n                var ejButton = new ej2_buttons_1.Button({ iconCss: iconClass, content: btnText }, button);\n                return ejButton;\n            }\n        };\n        return TitleBar;\n    }());\n    exports.TitleBar = TitleBar;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/document-editor/mail-merge/title-bar.ts?");

/***/ })

/******/ });