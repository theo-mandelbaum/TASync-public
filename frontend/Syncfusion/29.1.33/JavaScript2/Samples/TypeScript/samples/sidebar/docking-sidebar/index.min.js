/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/sidebar/docking-sidebar/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/sidebar/docking-sidebar/index.ts","navigations.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/sidebar/docking-sidebar/index.ts":
/*!**************************************************!*\
  !*** ./samples/sidebar/docking-sidebar/index.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\"), __webpack_require__(/*! @syncfusion/ej2-lists */ \"./node_modules/@syncfusion/ej2-lists/index.js\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_navigations_1, ej2_lists_1, ej2_base_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(false);\n    var folderEle = '<div class= \"e-folder\"><div class= \"e-folder-name\">JavaScript Documentation</div></div>';\n    var ListData = [\n        { id: \"1\", text: \"Grid\", iconcss: \"sb-icons icon-grid e-sb-icon control-icon\",\n            description: \"The JavaScript DataGrid is a feature-rich component useful for\" +\n                \"displaying data in a tabular format. Its wide range of functionalities\" +\n                \"includes data binding, editing, Excel-like filtering, custom sorting,\" +\n                \"aggregating rows, selection, and support for Excel, CSV, and PDF formats.\" +\n                \"It loads millions of records in just a second. It has flexible editing and intuitive record selection modes.\" +\n                \"Also, it has seamless data exporting options like PDF, CSV, and Excel.\" },\n        { id: \"2\", text: \"Chart\", iconcss: \"sb-icons icon-chart e-sb-icon control-icon\",\n            description: \"The JavaScript Charts is a well-crafted charting component to visualize data.\" +\n                \"It contains a rich UI gallery of 30+ charts and graphs, ranging from line to financial\" +\n                \" that cater to all charting scenarios. Its high performance helps to render large amounts of data quickly.\" +\n                \"It also comes with features such as zooming, panning, tooltip, crosshair, trackball, highlight, and selection\" },\n        { id: \"3\", text: \"Datepicker\", iconcss: \"sb-icons icon-datepicker e-sb-icon control-icon\",\n            description: \"The JavaScript DatePicker is a lightweight and mobile-friendly component that allows\"\n                + \"end-users to enter or select a date value. It has month, year, and decade view options to quickly\" +\n                \"navigate to the desired date. It supports minimum dates, maximum dates, and disabled dates to restrict the date selection.\" +\n                \"It has built-in features such as validation, custom date formats, range restriction, and disable dates to enhance the progressive usage.\" },\n        { id: \"4\", text: \"Dialog\", iconcss: \"sb-icons icon-dialog e-sb-icon control-icon\",\n            description: \"The JavaScript Dialog is a useful user interface (UI) component for informing users\" +\n                \"about critical information, errors, warnings, and questions, as well as confirming decisions and collecting\" +\n                \"input from users. The component has a rich set of built-in features such as action buttons, positioning, animations,\" +\n                \"dragging, resizing, templating, and more with mobile dialog support. The JavaScript dialog provides two different types:\" +\n                \"modal dialogs and non-modal dialogs (modeless) based on interactions.\" },\n        { id: \"5\", text: \"Dropdown List\", iconcss: \"sb-icons icon-dropdownlist e-sb-icon control-icon\",\n            description: \"The JavaScript Dropdown List is a quick replacement of the HTML select tags.\" +\n                \"It has a rich appearance and allows users to select a single value that is non-editable\" +\n                \" from a list of predefined values. It has several out-of-the-box features, such as data binding,\" +\n                \" filtering, grouping, UI customization, accessibility, and preselected values.\" }\n    ];\n    var toolbarObj = new ej2_navigations_1.Toolbar({\n        cssClass: \"dockToolbar\",\n        clicked: ToolbarCliked,\n        items: [\n            { prefixIcon: \"e-tbar-menu-icon tb-icons\", tooltipText: \"Menu\" },\n            { template: folderEle }\n        ]\n    });\n    toolbarObj.appendTo(\"#dockToolbar\");\n    var sidebarObj = new ej2_navigations_1.Sidebar({\n        width: \"220px\",\n        dockSize: \"60px\",\n        target: \".maincontent\",\n        enableDock: true,\n        type: 'Auto'\n    });\n    sidebarObj.appendTo(\"#dockSidebar\");\n    var listObj = new ej2_lists_1.ListView({\n        dataSource: ListData,\n        cssClass: \"e-template-list\",\n        showIcon: true,\n        fields: { id: \"id\", text: \"text\", iconCss: \"iconcss\" },\n        select: OnSelect\n    });\n    listObj.appendTo(\"#dockList\");\n    function ToolbarCliked(args) {\n        if (args.item.tooltipText == \"Menu\") {\n            sidebarObj.toggle();\n        }\n    }\n    function OnSelect(args) {\n        document.getElementById(\"dockContent\").innerHTML = args.data.description;\n    }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/sidebar/docking-sidebar/index.ts?");

/***/ })

/******/ });