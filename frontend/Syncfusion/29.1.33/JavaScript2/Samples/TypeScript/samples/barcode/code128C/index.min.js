/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/barcode/code128C/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/barcode/code128C/index.ts","barcode.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/barcode/code128C/index.ts":
/*!*******************************************!*\
  !*** ./samples/barcode/code128C/index.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-barcode-generator */ \"./node_modules/@syncfusion/ej2-barcode-generator/index.js\"), __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\"), __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\"), __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_barcode_generator_1, ej2_dropdowns_1, ej2_inputs_1, ej2_buttons_1, ej2_inputs_2) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    var barcode;\n    barcode = new ej2_barcode_generator_1.BarcodeGenerator({\n        type: 'Code128C',\n        value: '01234567',\n        width: '200px', height: '150px',\n        mode: 'SVG',\n        invalid: invalidInput,\n    });\n    barcode.appendTo('#barcode');\n    var canShowError = false;\n    var customFn = function (args) {\n        if (canShowError) {\n            return false;\n        }\n        return true;\n    };\n    var options = {\n        rules: {\n            'password': { minLength: [customFn, 'Invalid input'] }\n        },\n        keyup: function () {\n            if (canShowError) {\n                canShowError = false;\n            }\n        },\n        focusout: function (args) {\n            displayText.value = barcode.value = document.getElementById('barcodeValue').value;\n            barcode.dataBind();\n        },\n    };\n    var formObject = new ej2_inputs_1.FormValidator('#form-element', options);\n    function invalidInput(args) {\n        var error = document.getElementById('errorblog');\n        canShowError = true;\n        formObject.validate();\n    }\n    var position = [\n        { type: 'Bottom', text: 'Bottom' },\n        { type: 'Top', text: 'Top' },\n    ];\n    var alignment = [\n        { type: 'Left', text: 'Left' },\n        { type: 'Right', text: 'Right' },\n        { type: 'Center', text: 'Center' },\n    ];\n    function updatePosition(value) {\n        var positionValue = (document.getElementById('textPosition').ej2_instances[0]);\n        barcode.displayText.position = (positionValue.value);\n    }\n    function updateAlignt(value) {\n        var positionValue = (document.getElementById('textAlignment').ej2_instances[0]);\n        barcode.displayText.alignment = (positionValue.value);\n    }\n    var textPosition = new ej2_dropdowns_1.DropDownList({\n        dataSource: position,\n        fields: { value: 'type', text: 'text' }, popupWidth: 150,\n        width: '100%', placeholder: 'select position', index: 0,\n        change: function (args) {\n            updatePosition(args.value.toString());\n        }\n    });\n    textPosition.appendTo('#textPosition');\n    var textAlign = new ej2_dropdowns_1.DropDownList({\n        dataSource: alignment,\n        value: 'Center',\n        fields: { value: 'type', text: 'text' }, popupWidth: 150,\n        width: '100%', placeholder: 'select position', index: 0,\n        change: function (args) {\n            updateAlignt(args.value.toString());\n        }\n    });\n    textAlign.appendTo('#textAlignment');\n    var barcodeValue = new ej2_inputs_1.TextBox({\n        value: '01234567',\n        change: function (args) {\n            barcode.value = args.value.toString();\n            displayText.value = args.value.toString();\n        }\n    });\n    barcodeValue.appendTo('#barcodeValue');\n    var bgColor = new ej2_inputs_2.ColorPicker({\n        value: '#ffffff',\n        change: function (args) {\n            barcode.backgroundColor = args.currentValue.hex;\n        }\n    });\n    bgColor.appendTo('#bgColor');\n    var displayText = new ej2_inputs_1.TextBox({\n        value: '01234567',\n        change: function (args) {\n            barcode.displayText.text = args.value.toString();\n        }\n    });\n    displayText.appendTo('#displayText');\n    var foreColor = new ej2_inputs_2.ColorPicker({\n        value: '#000000',\n        change: function (args) {\n            barcode.foreColor = args.currentValue.hex;\n        }\n    });\n    foreColor.appendTo('#foreColor');\n    var barcodeWidth = new ej2_inputs_1.NumericTextBox({\n        enabled: true, format: '###.##',\n        value: 200, step: 2, min: 150, max: 250,\n        change: function (args) {\n            barcode.width = args.value.toString();\n        }\n    });\n    barcodeWidth.appendTo('#width');\n    var barcodeHeight = new ej2_inputs_1.NumericTextBox({\n        enabled: true, format: '###.##',\n        value: 150, step: 2, min: 100, max: 200,\n        change: function (args) {\n            barcode.height = args.value.toString();\n        }\n    });\n    barcodeHeight.appendTo('#height');\n    var marginLeft = new ej2_inputs_1.NumericTextBox({\n        enabled: true, format: '###.##',\n        value: 10, step: 1,\n        min: -10, max: 30,\n        change: function (args) {\n            barcode.margin.left = args.value;\n        }\n    });\n    marginLeft.appendTo('#marginLeft');\n    var marginRight = new ej2_inputs_1.NumericTextBox({\n        enabled: true, format: '###.##',\n        min: -10, max: 30,\n        value: 10, step: 1,\n        change: function (args) {\n            barcode.margin.right = args.value;\n        }\n    });\n    marginRight.appendTo('#MarginRight');\n    var marginTop = new ej2_inputs_1.NumericTextBox({\n        enabled: true, format: '###.##',\n        value: 10, step: 1,\n        min: -10, max: 30,\n        change: function (args) {\n            barcode.margin.top = args.value;\n        }\n    });\n    marginTop.appendTo('#marginTop');\n    var marginBottom = new ej2_inputs_1.NumericTextBox({\n        enabled: true, format: '###.##',\n        value: 10, step: 1,\n        min: -10, max: 30,\n        change: function (args) {\n            barcode.margin.bottom = args.value;\n        }\n    });\n    marginBottom.appendTo('#MarginBottom');\n    var textVisibility = new ej2_buttons_1.CheckBox({\n        checked: true,\n        change: function (args) {\n            barcode.displayText.visibility = args.checked;\n        }\n    });\n    textVisibility.appendTo('#textVisibility');\n    var svgMode = new ej2_buttons_1.CheckBox({\n        checked: true,\n        change: function (args) {\n            barcode.mode = args.checked ? 'SVG' : 'Canvas';\n        }\n    });\n    svgMode.appendTo('#svgMode');\n    var textmarginLeft = new ej2_inputs_1.NumericTextBox({\n        enabled: true, format: '###.##',\n        value: 40, step: 1, min: 40, max: 60,\n        change: function (args) {\n            barcode.displayText.margin.left = args.value;\n        }\n    });\n    textmarginLeft.appendTo('#TextmarginLeft');\n    var textMarginRight = new ej2_inputs_1.NumericTextBox({\n        enabled: true, format: '###.##',\n        value: 40, step: 1, min: 40, max: 60,\n        change: function (args) {\n            barcode.displayText.margin.right = args.value;\n        }\n    });\n    textMarginRight.appendTo('#TextMarginRight');\n    var textmarginTop = new ej2_inputs_1.NumericTextBox({\n        enabled: true, format: '###.##',\n        value: 0, step: 1, min: -10, max: 20,\n        change: function (args) {\n            barcode.displayText.margin.top = args.value;\n        }\n    });\n    textmarginTop.appendTo('#TextmarginTop');\n    var textMarginBottom = new ej2_inputs_1.NumericTextBox({\n        enabled: true, format: '###.##',\n        value: 0, step: 1, min: -10, max: 20,\n        change: function (args) {\n            barcode.displayText.margin.bottom = args.value;\n        }\n    });\n    textMarginBottom.appendTo('#TextMarginBottom');\n    var downloadButton = new ej2_buttons_1.Button({});\n    downloadButton.appendTo('#downloadBtn9');\n    document.getElementById('downloadBtn9').onclick = function () {\n        barcode.exportImage(\"Barcode\", 'PNG');\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/barcode/code128C/index.ts?");

/***/ })

/******/ });