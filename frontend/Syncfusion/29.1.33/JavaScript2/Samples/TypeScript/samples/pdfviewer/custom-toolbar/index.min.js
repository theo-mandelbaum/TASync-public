/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/pdfviewer/custom-toolbar/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/pdfviewer/custom-toolbar/index.ts","pdfviewer.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/pdfviewer/custom-toolbar/index.ts":
/*!***************************************************!*\
  !*** ./samples/pdfviewer/custom-toolbar/index.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-pdfviewer */ \"./node_modules/@syncfusion/ej2-pdfviewer/index.js\"), __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\"), __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_pdfviewer_1, ej2_navigations_1, ej2_buttons_1, ej2_popups_1, ej2_buttons_2) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_pdfviewer_1.PdfViewer.Inject(ej2_pdfviewer_1.Toolbar, ej2_pdfviewer_1.Annotation, ej2_pdfviewer_1.Magnification, ej2_pdfviewer_1.Navigation, ej2_pdfviewer_1.LinkAnnotation, ej2_pdfviewer_1.BookmarkView, ej2_pdfviewer_1.ThumbnailView, ej2_pdfviewer_1.Print, ej2_pdfviewer_1.TextSearch, ej2_pdfviewer_1.TextSelection, ej2_pdfviewer_1.FormFields, ej2_pdfviewer_1.FormDesigner, ej2_pdfviewer_1.PageOrganizer);\n    var inputTemplate = '<div class=\"\"><input type=\"text\" class=\"e-input-group e-pv-current-page-number\" id=\"currentPage\" /></div>';\n    var ele = '<div class=\"\" style=\"margin:0px 6px\"><span class=\"e-pv-total-page-number\" id=\"totalPage\">of 0</span></div>';\n    var isBookmarkOpen = false;\n    var isBookmarkClick = false;\n    var isBookmarkView = false;\n    var isTextSearchBoxOpen = false;\n    var searchActive = false;\n    var bookmarkPopup;\n    var textSearchPopup;\n    var toolbarObj;\n    var viewer;\n    var currentPageBox;\n    var searchInput;\n    var searchButton;\n    var matchCase = false;\n    var isInkEnabled = false;\n    var treeObj;\n    var data = [\n        {\n            iconCss: 'e-icons e-stamp',\n            items: [\n                {\n                    text: 'Dynamic',\n                    items: [\n                        { text: 'Revised', id: 'Dynamic' },\n                        { text: 'Reviewed', id: 'Dynamic' },\n                        { text: 'Received', id: 'Dynamic' },\n                        { text: 'Confidential', id: 'Dynamic' },\n                        { text: 'Approved', id: 'Dynamic' },\n                        { text: 'Not Approved', id: 'Dynamic' },\n                    ],\n                },\n                {\n                    text: 'Sign Here',\n                    items: [\n                        { text: 'Witness', id: 'Sign Here' },\n                        { text: 'Initial Here', id: 'Sign Here' },\n                        { text: 'Sign Here', id: 'Sign Here' },\n                        { text: 'Accepted', id: 'Sign Here' },\n                        { text: 'Rejected', id: 'Sign Here' }\n                    ],\n                },\n                {\n                    text: 'Standard Business',\n                    items: [\n                        { text: 'Approved', id: 'Standard Business' },\n                        { text: 'Not Approved', id: 'Standard Business' },\n                        { text: 'Draft', id: 'Standard Business' },\n                        { text: 'Final', id: 'Standard Business' },\n                        { text: 'Completed', id: 'Standard Business' },\n                        { text: 'Confidential', id: 'Standard Business' },\n                        { text: 'For Public Release', id: 'Standard Business' },\n                        { text: 'Not For Public Release', id: 'Standard Business' },\n                        { text: 'For Comment', id: 'Standard Business' },\n                        { text: 'Void', id: 'Standard Business' },\n                        { text: 'Preliminary Results', id: 'Standard Business' },\n                        { text: 'Information Only', id: 'Standard Business' }\n                    ],\n                },\n            ],\n        },\n    ];\n    var signMenu = [{\n            iconCss: \"e-icons e-signature\",\n            items: [\n                { text: \"Add Signature\" },\n                { text: \"Add Initial\" },\n            ]\n        }\n    ];\n    function disableInkAnnotation() {\n        if (isInkEnabled) {\n            viewer.annotation.setAnnotationMode(\"None\");\n            isInkEnabled = false;\n        }\n    }\n    function previousClicked(args) {\n        disableInkAnnotation();\n        hidePopups();\n        viewer.navigation.goToPreviousPage();\n        searchActive = true;\n    }\n    function checkSearchActive(args) {\n        if (!searchActive) {\n            viewer.textSearch.clearAllOccurrences();\n        }\n    }\n    function inputChange(args) {\n        viewer.textSearch.clearAllOccurrences();\n        searchActive = false;\n        if (searchInput.value == '') {\n            updateSearchInputIcon(true);\n        }\n    }\n    function hidePopups() {\n        isBookmarkOpen = false;\n        isTextSearchBoxOpen = false;\n        bookmarkPopup.hide();\n        textSearchPopup.hide();\n    }\n    function bookmarkClicked() {\n        textSearchPopup.hide();\n        if (!isBookmarkOpen) {\n            var bookmarkDetails = viewer.bookmark.getBookmarks();\n            if (bookmarkDetails.bookmarks) {\n                if (!isBookmarkView) {\n                    var bookmarks = bookmarkDetails.bookmarks.bookMark;\n                    treeObj = new ej2_navigations_1.TreeView({\n                        fields: {\n                            dataSource: bookmarks,\n                            id: 'Id',\n                            child: 'Child',\n                            text: 'Title',\n                            hasChildren: 'HasChild',\n                        }, nodeSelected: nodeClick\n                    });\n                    isBookmarkView = true;\n                    treeObj.appendTo('#bookmarkview');\n                    ['mouseover', 'keydown'].forEach(function (evt) { return document.getElementById('bookmarkview').addEventListener(evt, function (event) {\n                        setHeight(event.target);\n                    }); });\n                }\n                bookmarkPopup.show();\n                isBookmarkOpen = true;\n                isBookmarkClick = true;\n            }\n            else {\n                toolbarObj.enableItems(document.getElementById('bookmarkButton'), false);\n                isBookmarkOpen = false;\n            }\n        }\n        else {\n            if (!isBookmarkClick) {\n                bookmarkPopup.show();\n                isBookmarkClick = true;\n            }\n            else {\n                bookmarkPopup.hide();\n                isBookmarkClick = false;\n            }\n        }\n    }\n    function nextClicked(args) {\n        disableInkAnnotation();\n        hidePopups();\n        viewer.navigation.goToNextPage();\n    }\n    function searchClicked(args) {\n        disableInkAnnotation();\n        bookmarkPopup.hide();\n        if (!isTextSearchBoxOpen) {\n            textSearchPopup.show();\n        }\n        else {\n            updateSearchInputIcon(true);\n            searchInput.value = '';\n            viewer.textSearch.cancelTextSearch();\n            textSearchPopup.hide();\n        }\n        isTextSearchBoxOpen = !isTextSearchBoxOpen;\n    }\n    function printClicked(args) {\n        disableInkAnnotation();\n        hidePopups();\n        viewer.print.print();\n    }\n    function downloadClicked(args) {\n        disableInkAnnotation();\n        hidePopups();\n        viewer.download();\n    }\n    function pageFitClicked(args) {\n        hidePopups();\n        viewer.magnification.fitToPage();\n        updateZoomButtons();\n        toolbarObj.enableItems(document.getElementById('fitPage'), false);\n    }\n    function zoomInClicked(args) {\n        hidePopups();\n        viewer.magnification.zoomIn();\n        updateZoomButtons();\n    }\n    function zoomOutClicked(args) {\n        hidePopups();\n        viewer.magnification.zoomOut();\n        updateZoomButtons();\n    }\n    function onCurrentPageBoxKeypress(event) {\n        if ((event.which < 48 || event.which > 57) && event.which !== 8 && event.which !== 13) {\n            event.preventDefault();\n            return false;\n        }\n        else {\n            var currentPageNumber = parseInt(currentPageBox.value);\n            if (event.which === 13) {\n                if (currentPageNumber > 0 && currentPageNumber <= viewer.pageCount) {\n                    viewer.navigation.goToPage(currentPageNumber);\n                }\n                else {\n                    currentPageBox.value = viewer.currentPageNumber.toString();\n                }\n            }\n            return true;\n        }\n    }\n    function onCurrentPageBoxClicked() {\n        currentPageBox.select();\n        (currentPageBox).focus();\n    }\n    function readFile(args) {\n        var upoadedFiles = args.target.files;\n        if (args.target.files[0] !== null) {\n            var uploadedFile = upoadedFiles[0];\n            if (uploadedFile) {\n                var reader = new FileReader();\n                var filename_1 = upoadedFiles[0].name;\n                reader.readAsDataURL(uploadedFile);\n                reader.onload = function (e) {\n                    var uploadedFileUrl = e.currentTarget.result;\n                    viewer.documentPath = uploadedFileUrl;\n                    viewer.fileName = filename_1;\n                    viewer.downloadFileName = filename_1;\n                    currentPageBox.value = '1';\n                    document.getElementById('totalPage').textContent = 'of ' + viewer.pageCount;\n                    document.getElementById('bookmarkview').innerHTML = '';\n                    isBookmarkOpen = false;\n                    isBookmarkView = false;\n                };\n            }\n        }\n    }\n    function openDocument(e) {\n        disableInkAnnotation();\n        var textSearchToolbarElement = document.getElementById('textSearchToolbar');\n        if (textSearchToolbarElement !== null && textSearchToolbarElement.style.display === 'block') {\n            textSearchToolbarElement.style.display = 'none';\n        }\n        var formFieldToolbarElement = document.getElementById('formFieldToolbar');\n        if (formFieldToolbarElement !== null && formFieldToolbarElement.style.display === 'block') {\n            formFieldToolbarElement.style.display = 'none';\n            viewer.designerMode = false;\n        }\n        document.getElementById('fileUpload').click();\n    }\n    function updatePageNavigation() {\n        if (viewer.currentPageNumber === 1) {\n            toolbarObj.enableItems(document.getElementById('previousPage'), false);\n            toolbarObj.enableItems(document.getElementById('nextPage'), true);\n        }\n        else if (viewer.currentPageNumber === viewer.pageCount) {\n            toolbarObj.enableItems(document.getElementById('previousPage'), true);\n            toolbarObj.enableItems(document.getElementById('nextPage'), false);\n        }\n        else {\n            toolbarObj.enableItems(document.getElementById('previousPage'), true);\n            toolbarObj.enableItems(document.getElementById('nextPage'), true);\n        }\n    }\n    function updateZoomButtons() {\n        if (viewer.zoomPercentage <= 50) {\n            toolbarObj.enableItems(document.getElementById('zoomIn'), true);\n            toolbarObj.enableItems(document.getElementById('zoomOut'), false);\n            toolbarObj.enableItems(document.getElementById('fitPage'), true);\n        }\n        else if (viewer.zoomPercentage >= 400) {\n            toolbarObj.enableItems(document.getElementById('zoomIn'), false);\n            toolbarObj.enableItems(document.getElementById('zoomOut'), true);\n            toolbarObj.enableItems(document.getElementById('fitPage'), true);\n        }\n        else {\n            toolbarObj.enableItems(document.getElementById('zoomIn'), true);\n            toolbarObj.enableItems(document.getElementById('zoomOut'), true);\n            toolbarObj.enableItems(document.getElementById('fitPage'), true);\n        }\n    }\n    function nodeClick(args) {\n        var bookmarksDetails = viewer.bookmark.getBookmarks();\n        setHeight(args.node);\n        var bookmarksDestination = bookmarksDetails.bookmarksDestination;\n        var bookid = Number(args.nodeData.id);\n        var pageIndex = bookmarksDestination.bookMarkDestination[bookid].PageIndex;\n        var Y = bookmarksDestination.bookMarkDestination[bookid].Y;\n        viewer.bookmark.goToBookmark(pageIndex, Y);\n        return false;\n    }\n    function setHeight(element) {\n        if (treeObj.fullRowSelect) {\n            if (element.classList.contains('e-treeview')) {\n                element = element.querySelector('.e-node-focus').querySelector('.e-fullrow');\n            }\n            else if (element.classList.contains('e-list-parent')) {\n                element = element.querySelector('.e-fullrow');\n            }\n            else if (element.classList.value !== ('e-fullrow') && element.closest('.e-list-item')) {\n                element = element.closest('.e-list-item').querySelector('.e-fullrow');\n            }\n            if (element.nextElementSibling) {\n                element.style.height = element.nextElementSibling.offsetHeight + 'px';\n            }\n        }\n    }\n    function onItemSelect(args) {\n        disableInkAnnotation();\n        var textSearchToolbarElement = document.getElementById('textSearchToolbar');\n        if (textSearchToolbarElement !== null && textSearchToolbarElement.style.display === 'block') {\n            textSearchToolbarElement.style.display = 'none';\n        }\n        var formFieldToolbarElement = document.getElementById('formFieldToolbar');\n        if (formFieldToolbarElement !== null && formFieldToolbarElement.style.display === 'block') {\n            formFieldToolbarElement.style.display = 'none';\n            viewer.designerMode = false;\n        }\n        var stampId = args.element.id;\n        var stampText = args.element.innerText;\n        if (stampId === 'Dynamic' && stampText != null) {\n            if (stampText === 'Revised') {\n                viewer.annotation.setAnnotationMode('Stamp', ej2_pdfviewer_1.DynamicStampItem.Revised);\n            }\n            else if (stampText == 'Reviewed') {\n                viewer.annotation.setAnnotationMode('Stamp', ej2_pdfviewer_1.DynamicStampItem.Reviewed);\n            }\n            else if (stampText == 'Received') {\n                viewer.annotation.setAnnotationMode('Stamp', ej2_pdfviewer_1.DynamicStampItem.Received);\n            }\n            else if (stampText == 'Confidential') {\n                viewer.annotation.setAnnotationMode('Stamp', ej2_pdfviewer_1.DynamicStampItem.Confidential);\n            }\n            else if (stampText == 'Approved') {\n                viewer.annotation.setAnnotationMode('Stamp', ej2_pdfviewer_1.DynamicStampItem.Approved);\n            }\n            else if (stampText == 'Not Approved') {\n                viewer.annotation.setAnnotationMode('Stamp', ej2_pdfviewer_1.DynamicStampItem.NotApproved);\n            }\n        }\n        if (stampId === 'Sign Here' && stampText != null) {\n            if (stampText === 'Witness') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, ej2_pdfviewer_1.SignStampItem.Witness);\n            }\n            else if (stampText == 'Initial Here') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, ej2_pdfviewer_1.SignStampItem.InitialHere);\n            }\n            else if (stampText == 'Sign Here') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, ej2_pdfviewer_1.SignStampItem.SignHere);\n            }\n            else if (stampText == 'Accepted') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, ej2_pdfviewer_1.SignStampItem.Accepted);\n            }\n            else if (stampText == 'Rejected') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, ej2_pdfviewer_1.SignStampItem.Rejected);\n            }\n        }\n        if (stampId === 'Standard Business' && stampText != null) {\n            if (stampText === 'Approved') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_pdfviewer_1.StandardBusinessStampItem.Approved);\n            }\n            else if (stampText == 'Not Approved') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_pdfviewer_1.StandardBusinessStampItem.NotApproved);\n            }\n            else if (stampText == 'Draft') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_pdfviewer_1.StandardBusinessStampItem.Draft);\n            }\n            else if (stampText == 'Final') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_pdfviewer_1.StandardBusinessStampItem.Final);\n            }\n            else if (stampText == 'Completed') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_pdfviewer_1.StandardBusinessStampItem.Completed);\n            }\n            else if (stampText == 'Confidential') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_pdfviewer_1.StandardBusinessStampItem.Confidential);\n            }\n            else if (stampText == 'For Public Release') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_pdfviewer_1.StandardBusinessStampItem.ForPublicRelease);\n            }\n            else if (stampText == 'Not For Public Release') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_pdfviewer_1.StandardBusinessStampItem.NotForPublicRelease);\n            }\n            else if (stampText == 'For Comment') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_pdfviewer_1.StandardBusinessStampItem.ForComment);\n            }\n            else if (stampText == 'Void') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_pdfviewer_1.StandardBusinessStampItem.Void);\n            }\n            else if (stampText == 'Preliminary Results') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_pdfviewer_1.StandardBusinessStampItem.PreliminaryResults);\n            }\n            else if (stampText == 'Information Only') {\n                viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_pdfviewer_1.StandardBusinessStampItem.InformationOnly);\n            }\n        }\n    }\n    function textSelection(e) {\n        disableInkAnnotation();\n        viewer.interactionMode = 'TextSelection';\n        viewer.enableTextSelection = true;\n    }\n    function panMode(e) {\n        disableInkAnnotation();\n        viewer.interactionMode = 'Pan';\n    }\n    function openEditAnnotation(args) {\n        disableInkAnnotation();\n        var textSearchToolbarElement = document.getElementById('textSearchToolbar');\n        if (textSearchToolbarElement !== null && textSearchToolbarElement.style.display === 'block') {\n            textSearchToolbarElement.style.display = 'none';\n        }\n        var formFieldToolbarElement = document.getElementById('formFieldToolbar');\n        if (formFieldToolbarElement !== null && formFieldToolbarElement.style.display === 'block') {\n            formFieldToolbarElement.style.display = 'none';\n            viewer.designerMode = false;\n        }\n        var editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n        if (editAnnotationToolbarElement !== null) {\n            if (editAnnotationToolbarElement.style.display === 'block') {\n                editAnnotationToolbarElement.style.display = 'none';\n            }\n            else {\n                editAnnotationToolbarElement.style.display = 'block';\n            }\n        }\n    }\n    function addEditFormFields(args) {\n        disableInkAnnotation();\n        var formFieldToolbarElement = document.getElementById('formFieldToolbar');\n        if (formFieldToolbarElement !== null) {\n            if (formFieldToolbarElement.style.display === 'block') {\n                formFieldToolbarElement.style.display = 'none';\n                viewer.designerMode = false;\n            }\n            else {\n                formFieldToolbarElement.style.display = 'block';\n                viewer.designerMode = true;\n            }\n        }\n        var editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n        if (editAnnotationToolbarElement !== null && editAnnotationToolbarElement.style.display === 'block') {\n            editAnnotationToolbarElement.style.display = 'none';\n        }\n        var textSearchToolbarElement = document.getElementById('textSearchToolbar');\n        if (textSearchToolbarElement !== null && textSearchToolbarElement.style.display === 'block') {\n            textSearchToolbarElement.style.display = 'none';\n        }\n    }\n    function highlight(args) {\n        disableInkAnnotation();\n        viewer.annotation.setAnnotationMode('Highlight');\n    }\n    function underLine(args) {\n        disableInkAnnotation();\n        viewer.annotation.setAnnotationMode('Underline');\n    }\n    function strikeThrough(args) {\n        disableInkAnnotation();\n        viewer.annotation.setAnnotationMode('Strikethrough');\n    }\n    function addLine(args) {\n        disableInkAnnotation();\n        viewer.annotation.setAnnotationMode('Line');\n    }\n    function addArrow(args) {\n        disableInkAnnotation();\n        viewer.annotation.setAnnotationMode('Arrow');\n    }\n    function addRectangle(args) {\n        disableInkAnnotation();\n        viewer.annotation.setAnnotationMode('Rectangle');\n    }\n    function addCircle(args) {\n        disableInkAnnotation();\n        viewer.annotation.setAnnotationMode('Circle');\n    }\n    function addPoligon(args) {\n        disableInkAnnotation();\n        viewer.annotation.setAnnotationMode('Polygon');\n    }\n    function distance(args) {\n        disableInkAnnotation();\n        viewer.annotation.setAnnotationMode('Distance');\n    }\n    function perimeter(args) {\n        disableInkAnnotation();\n        viewer.annotation.setAnnotationMode('Perimeter');\n    }\n    function area(args) {\n        disableInkAnnotation();\n        viewer.annotation.setAnnotationMode('Area');\n    }\n    function radius(args) {\n        disableInkAnnotation();\n        viewer.annotation.setAnnotationMode('Radius');\n    }\n    function volume(args) {\n        disableInkAnnotation();\n        viewer.annotation.setAnnotationMode('Volume');\n    }\n    function freeText(args) {\n        disableInkAnnotation();\n        viewer.annotation.setAnnotationMode('FreeText');\n    }\n    function ink(args) {\n        if (!isInkEnabled) {\n            viewer.annotation.setAnnotationMode(\"Ink\");\n            isInkEnabled = true;\n        }\n        else {\n            viewer.annotation.setAnnotationMode(\"None\");\n            isInkEnabled = false;\n        }\n    }\n    function textBox(args) {\n        viewer.formDesignerModule.setFormFieldMode('Textbox');\n    }\n    function passWord(args) {\n        viewer.formDesignerModule.setFormFieldMode('Password');\n    }\n    function checkBox(args) {\n        viewer.formDesignerModule.setFormFieldMode('CheckBox');\n    }\n    function radioButton(args) {\n        viewer.formDesignerModule.setFormFieldMode('RadioButton');\n    }\n    function dropDown(args) {\n        viewer.formDesignerModule.setFormFieldMode('DropDown');\n    }\n    function listBox(args) {\n        viewer.formDesignerModule.setFormFieldMode('ListBox');\n    }\n    function searchInputKeypressed(event) {\n        enablePrevButton(true);\n        enableNextButton(true);\n        if (event.which === 13) {\n            searchActive = true;\n            initiateTextSearch();\n            updateSearchInputIcon(false);\n        }\n    }\n    function searchClickHandler() {\n        if (searchButton.classList.contains('e-pv-search-icon')) {\n            viewer.textSearch.cancelTextSearch();\n            initiateTextSearch();\n            updateSearchInputIcon(false);\n        }\n        else if (searchButton.classList.contains('e-pv-search-close')) {\n            searchInput.value = '';\n            updateSearchInputIcon(true);\n            searchInput.focus();\n            viewer.textSearch.cancelTextSearch();\n        }\n    }\n    function initiateTextSearch() {\n        var searchString = searchInput.value;\n        viewer.textSearch.searchText(searchString, matchCase);\n    }\n    function previousSearchClicked() {\n        var searchString = searchInput.value;\n        if (searchString) {\n            viewer.textSearch.searchPrevious();\n        }\n    }\n    function nextSearchClicked() {\n        searchActive = true;\n        var searchString = searchInput.value;\n        if (searchString) {\n            viewer.textSearch.searchNext();\n        }\n    }\n    function checkBoxChanged(args) {\n        if (args.checked) {\n            matchCase = true;\n        }\n        else {\n            matchCase = false;\n        }\n        initiateTextSearch();\n    }\n    function enablePrevButton(isEnable) {\n        var previousSearchButton = document.getElementById('previousSearch');\n        if (isEnable) {\n            previousSearchButton.removeAttribute('disabled');\n        }\n        else {\n            previousSearchButton.disabled = true;\n        }\n    }\n    function enableNextButton(isEnable) {\n        var nextSearchButton = document.getElementById('nextSearch');\n        if (isEnable) {\n            nextSearchButton.removeAttribute('disabled');\n        }\n        else {\n            nextSearchButton.disabled = true;\n        }\n    }\n    function updateSearchInputIcon(isEnable) {\n        if (isEnable) {\n            searchButton.classList.remove('e-pv-search-close');\n            searchButton.classList.add('e-pv-search-icon');\n        }\n        else {\n            searchButton.classList.remove('e-pv-search-icon');\n            searchButton.classList.add('e-pv-search-close');\n        }\n    }\n    function onSignatureClick(event) {\n        var editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n        if (editAnnotationToolbarElement && editAnnotationToolbarElement.style.display === 'block') {\n            if (event.element instanceof HTMLElement) {\n                if (event.element.innerText === 'Add Signature') {\n                    viewer.annotationModule.setAnnotationMode('HandWrittenSignature');\n                }\n                else if (event.element.innerText === 'Add Initial') {\n                    viewer.annotationModule.setAnnotationMode('Initial');\n                }\n            }\n        }\n        var formFieldToolbarElement = document.getElementById('formFieldToolbar');\n        if (formFieldToolbarElement && formFieldToolbarElement.style.display === 'block') {\n            if (event.element instanceof HTMLElement) {\n                if (event.element.innerText === 'Add Signature') {\n                    viewer.formDesignerModule.setFormFieldMode('SignatureField');\n                }\n                else if (event.element.innerText === 'Add Initial') {\n                    viewer.formDesignerModule.setFormFieldMode('InitialField');\n                }\n            }\n        }\n    }\n    toolbarObj = new ej2_navigations_1.Toolbar({\n        items: [\n            { prefixIcon: 'e-icons e-folder', tooltipText: 'Open', id: 'openButton', click: openDocument.bind(this) },\n            { prefixIcon: 'e-icons e-save', tooltipText: 'Save', id: 'save', click: downloadClicked.bind(this) },\n            { prefixIcon: 'e-icons e-chevron-left', id: 'previousPage', tooltipText: 'Previous Page', align: 'Center', click: previousClicked.bind(this) },\n            { prefixIcon: 'e-icons e-chevron-right', id: 'nextPage', tooltipText: 'Next Page', align: 'Center', click: nextClicked.bind(this) },\n            { template: inputTemplate, tooltipText: 'Page Number', align: 'Center' },\n            { template: ele, tooltipText: 'Page Number', align: 'Center' },\n            { type: \"Separator\", tooltipText: \"separator\", align: \"Center\" },\n            { prefixIcon: \"e-icons e-mouse-pointer\", tooltipText: \"Text Selection Tool\", align: \"Center\", click: textSelection.bind(this) },\n            { prefixIcon: \"e-icons e-pan\", tooltipText: \"Pan Mode\", align: \"Center\", click: panMode.bind(this) },\n            { type: \"Separator\", tooltipText: \"separator\", align: \"Center\" },\n            { prefixIcon: \"e-icons e-annotation-edit\", tooltipText: \"Edit Annotations\", align: \"Center\", click: openEditAnnotation.bind(this) },\n            { type: \"Separator\", tooltipText: \"separator\", align: \"Center\" },\n            { prefixIcon: \"e-icons e-split-vertical\", tooltipText: \"Add and Edit Form Fields\", align: \"Center\", click: addEditFormFields.bind(this) },\n            { type: \"Separator\", tooltipText: \"separator\", align: \"Center\" },\n            { prefixIcon: 'e-icons e-search', tooltipText: 'Text Search', align: 'Right', click: searchClicked.bind(this) },\n            { prefixIcon: 'e-icons e-print', tooltipText: 'Print', align: 'Right', click: printClicked.bind(this) }\n        ]\n    });\n    toolbarObj.appendTo('#topToolbar');\n    var editAnnotationToolbarToolbar = new ej2_navigations_1.Toolbar({\n        items: [\n            { prefixIcon: \"e-icons e-highlight-color\", click: highlight.bind(this), tooltipText: \"Highlight\", id: \"highlight\", align: \"Center\" },\n            { prefixIcon: 'e-icons e-underline', click: underLine.bind(this), tooltipText: 'Underline', id: 'underline', align: 'Center' },\n            { prefixIcon: 'e-icons e-strikethrough', click: strikeThrough.bind(this), tooltipText: 'Strikethrough', id: 'strikethrough', align: 'Center' },\n            { type: 'Separator', tooltipText: 'separator', align: 'Center' },\n            { prefixIcon: 'e-icons e-line', click: addLine.bind(this), tooltipText: 'Add Line', id: 'line', align: 'Center' },\n            { prefixIcon: 'e-icons e-arrow-right-up', click: addArrow.bind(this), tooltipText: 'Add Arrow', id: 'arrow', align: 'Center' },\n            { prefixIcon: 'e-icons e-rectangle', click: addRectangle.bind(this), tooltipText: 'Add Rectangle', id: 'rectangle', align: 'Center' },\n            { prefixIcon: 'e-icons e-circle', click: addCircle.bind(this), tooltipText: 'Add Circle', id: 'circle', align: 'Center' },\n            { prefixIcon: 'e-icons e-pentagon', click: addPoligon.bind(this), tooltipText: 'Add Polygon', id: 'polygon', align: 'Center' },\n            { type: 'Separator', tooltipText: 'separator', align: 'Center' },\n            { prefixIcon: 'e-icons e-length', click: distance.bind(this), tooltipText: 'Calibrate Distance', id: 'calibrate_distance', align: 'Center' },\n            { prefixIcon: 'e-icons e-perimeter', click: perimeter.bind(this), tooltipText: 'Calibrate Perimeter', id: 'calibrate_perimeter', align: 'Center' },\n            { prefixIcon: 'e-icons e-area', click: area.bind(this), tooltipText: 'Calibrate Area', id: 'calibrate_area', align: 'Center' },\n            { prefixIcon: 'e-icons e-radius', click: radius.bind(this), tooltipText: 'Calibrate Radius', id: 'calibrate_radius', align: 'Center' },\n            { prefixIcon: 'e-icons e-volume', click: volume.bind(this), tooltipText: 'Calibrate Volume', id: 'calibrate_volume', align: 'Center' },\n            { type: 'Separator', tooltipText: 'separator', align: 'Center' },\n            { prefixIcon: 'e-icons e-text-annotation', click: freeText.bind(this), tooltipText: 'Free Text', id: 'freeText', align: 'Center' },\n            { type: 'Separator', tooltipText: 'separator', align: 'Center' },\n            { prefixIcon: 'e-icons e-stamp', tooltipText: 'Add Stamp', id: 'stamp', align: 'Center', template: \"<div><ul id=\\\"menu\\\"></ul></div>\" },\n            { type: 'Separator', tooltipText: 'separator', align: 'Center' },\n            { id: 'signature', tooltipText: 'Add Signature', align: 'Center', template: \"<div><ul id=\\\"signatureToolbar\\\"></ul></div>\" },\n            { type: 'Separator', tooltipText: 'separator', align: 'Center' },\n            { prefixIcon: 'e-icons e-style', click: ink.bind(this), id: 'ink', tooltipText: 'Ink', align: 'Center' }\n        ]\n    });\n    editAnnotationToolbarToolbar.appendTo('#editAnnotationToolbar');\n    var formFieldToolbar = new ej2_navigations_1.Toolbar({\n        items: [\n            { id: 'textbox', prefixIcon: 'e-icons e-text-form', click: textBox.bind(this), tooltipText: 'Textbox', align: 'Center' },\n            { id: 'password', prefixIcon: 'e-icons e-password', click: passWord.bind(this), tooltipText: 'Password', align: 'Center' },\n            { id: 'checkbox', prefixIcon: 'e-icons e-check-box', click: checkBox.bind(this), tooltipText: 'Checkbox', align: 'Center' },\n            { id: 'radio_button', prefixIcon: 'e-icons e-radio-button', click: radioButton.bind(this), tooltipText: 'Radio Button', align: 'Center' },\n            { id: 'drop_down', prefixIcon: 'e-icons e-drop-down', click: dropDown.bind(this), tooltipText: 'Drop Down', align: 'Center' },\n            { id: 'list_box', prefixIcon: 'e-icons e-list-unordered', click: listBox.bind(this), tooltipText: 'List Box', align: 'Center' },\n            { id: 'formField_signature', tooltipText: 'Add Signature', align: 'Center', template: \"<div><ul id=\\\"formFieldSignatureToolbar\\\"></ul></div>\" }\n        ]\n    });\n    formFieldToolbar.appendTo('#formFieldToolbar');\n    var magnificationToolbar = new ej2_navigations_1.Toolbar({\n        items: [\n            { prefixIcon: 'e-pv-fit-page-icon', id: 'fitPage', tooltipText: 'Fit to page', click: pageFitClicked.bind(this) },\n            { prefixIcon: 'e-icons e-circle-add', id: 'zoomIn', tooltipText: 'Zoom in', click: zoomInClicked.bind(this) },\n            { prefixIcon: 'e-icons e-circle-remove', id: 'zoomOut', tooltipText: 'Zoom out', click: zoomOutClicked.bind(this) },\n        ]\n    });\n    magnificationToolbar.appendTo('#magnificationToolbar');\n    viewer = new ej2_pdfviewer_1.PdfViewer({\n        enableToolbar: false,\n        enableNavigationToolbar: false,\n        enableThumbnail: false,\n        enableAnnotationToolbar: false,\n        enableCommentPanel: false,\n        documentPath: 'https://cdn.syncfusion.com/content/pdf/hive-succinctly.pdf',\n        resourceUrl: 'https://cdn.syncfusion.com/ej2/23.2.6/dist/ej2-pdfviewer-lib'\n    });\n    viewer.appendTo('#pdfViewer');\n    isBookmarkView = false;\n    document.getElementById('fileUpload').addEventListener('change', readFile, false);\n    currentPageBox = document.getElementById('currentPage');\n    currentPageBox.value = '1';\n    searchInput = document.getElementById('searchInput');\n    bookmarkPopup = new ej2_popups_1.Dialog({\n        showCloseIcon: true, header: 'Bookmarks', closeOnEscape: false, isModal: false, target: document.getElementById('pdfViewer'),\n        content: '<div class=\"e-pv-bookmarks\" id=\"bookmarkview\"></div>',\n        buttons: [{\n                buttonModel: {},\n            }], position: { X: 'left', Y: 'top' }, cssClass: 'e-bookmark-popup', beforeClose: function () {\n            isBookmarkOpen = false;\n        }\n    });\n    bookmarkPopup.appendTo('#popup');\n    textSearchPopup = new ej2_popups_1.Dialog({\n        showCloseIcon: false, closeOnEscape: false, isModal: false, target: document.getElementById('pdfViewer'),\n        buttons: [{\n                buttonModel: {},\n            }], position: { X: 'right', Y: 'top' }, cssClass: 'e-text-search-popup',\n    });\n    textSearchPopup.appendTo('#textSearchBox');\n    var previousSearch = new ej2_buttons_1.Button({ iconCss: 'e-icons e-chevron-left' });\n    previousSearch.appendTo('#previousSearch');\n    var nextSearch = new ej2_buttons_1.Button({ iconCss: 'e-icons e-chevron-right' });\n    nextSearch.appendTo('#nextSearch');\n    var matchCaseCheck = new ej2_buttons_1.CheckBox({ label: 'Match case', change: checkBoxChanged });\n    matchCaseCheck.appendTo('#matchCase');\n    viewer.pageChange = function (args) {\n        currentPageBox.value = viewer.currentPageNumber.toString();\n        updatePageNavigation();\n    };\n    viewer.documentLoad = function (args) {\n        document.getElementById('totalPage').textContent = 'of ' + viewer.pageCount;\n        updatePageNavigation();\n    };\n    var switchObj = new ej2_buttons_2.Switch({ value: 'Standalone Rendering', checked: true });\n    switchObj.appendTo('#checked');\n    switchObj.change = function (args) {\n        if (args.checked) {\n            viewer.serviceUrl = '';\n        }\n        else {\n            viewer.serviceUrl = 'https://ej2services.syncfusion.com/production/web-services/api/pdfviewer';\n        }\n        viewer.dataBind();\n        viewer.load(viewer.documentPath, null);\n    };\n    new ej2_navigations_1.Menu({ items: data, select: onItemSelect, showItemOnClick: true }, \"#menu\");\n    new ej2_navigations_1.Menu({ items: signMenu, select: onSignatureClick, showItemOnClick: true }, \"#signatureToolbar\");\n    new ej2_navigations_1.Menu({ items: signMenu, select: onSignatureClick, showItemOnClick: true }, \"#formFieldSignatureToolbar\");\n    searchButton = document.getElementById('searchBtn');\n    document.addEventListener('click', checkSearchActive);\n    searchInput.addEventListener('focus', function () { searchInput.parentElement.classList.add('e-input-focus'); });\n    searchInput.addEventListener('blur', function () { searchInput.parentElement.classList.remove('e-input-focus'); });\n    searchInput.addEventListener('keypress', searchInputKeypressed);\n    searchInput.addEventListener('input', inputChange);\n    document.getElementById('previousSearch').addEventListener('click', previousSearchClicked);\n    document.getElementById('nextSearch').addEventListener('click', nextSearchClicked);\n    currentPageBox.addEventListener('keypress', onCurrentPageBoxKeypress);\n    currentPageBox.addEventListener('click', onCurrentPageBoxClicked);\n    searchButton.addEventListener('click', searchClickHandler);\n    document.getElementById('e-dropdown-btn-item_63').addEventListener('click', onSignatureClick);\n    document.getElementById('e-dropdown-btn-item_65').addEventListener('click', onSignatureClick);\n    bookmarkPopup.hide();\n    textSearchPopup.hide();\n    enableNextButton(false);\n    enablePrevButton(false);\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/pdfviewer/custom-toolbar/index.ts?");

/***/ })

/******/ });