/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/pdfviewer/custom-context-menu/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/pdfviewer/custom-context-menu/index.ts","pdfviewer.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/pdfviewer/custom-context-menu/index.ts":
/*!********************************************************!*\
  !*** ./samples/pdfviewer/custom-context-menu/index.ts ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-pdfviewer */ \"./node_modules/@syncfusion/ej2-pdfviewer/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_pdfviewer_1, ej2_buttons_1, ej2_buttons_2) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_pdfviewer_1.PdfViewer.Inject(ej2_pdfviewer_1.Toolbar, ej2_pdfviewer_1.Magnification, ej2_pdfviewer_1.Navigation, ej2_pdfviewer_1.LinkAnnotation, ej2_pdfviewer_1.BookmarkView, ej2_pdfviewer_1.ThumbnailView, ej2_pdfviewer_1.Print, ej2_pdfviewer_1.TextSelection, ej2_pdfviewer_1.TextSearch, ej2_pdfviewer_1.Annotation, ej2_pdfviewer_1.FormFields, ej2_pdfviewer_1.FormDesigner, ej2_pdfviewer_1.PageOrganizer);\n    var viewer = new ej2_pdfviewer_1.PdfViewer();\n    viewer.documentPath = \"https://cdn.syncfusion.com/content/pdf/pdf-succinctly.pdf\";\n    viewer.resourceUrl = \"https://cdn.syncfusion.com/ej2/23.2.6/dist/ej2-pdfviewer-lib\";\n    var menuItems = [\n        {\n            text: 'Search In Google',\n            id: 'search_in_google',\n            iconCss: 'e-icons e-de-ctnr-find'\n        },\n        {\n            text: 'Lock Annotation',\n            iconCss: 'e-icons e-lock',\n            id: 'lock_annotation'\n        },\n        {\n            text: 'Unlock Annotation',\n            iconCss: 'e-icons e-unlock',\n            id: 'unlock_annotation'\n        },\n        {\n            text: 'Lock Form Fields',\n            iconCss: 'e-icons e-lock',\n            id: 'read_only_true'\n        },\n        {\n            text: 'Unlock Form Fields',\n            iconCss: 'e-icons e-unlock',\n            id: 'read_only_false'\n        },\n    ];\n    var switchObj = new ej2_buttons_1.Switch({ value: 'Standalone Rendering', checked: true });\n    switchObj.appendTo('#checked');\n    switchObj.change = function (args) {\n        if (args.checked) {\n            viewer.serviceUrl = '';\n        }\n        else {\n            viewer.serviceUrl = 'https://ej2services.syncfusion.com/production/web-services/api/pdfviewer';\n        }\n        viewer.dataBind();\n        viewer.load(viewer.documentPath, null);\n    };\n    viewer.appendTo('#pdfViewer');\n    viewer.documentLoad = function (args) {\n        viewer.addCustomMenu(menuItems, false, false);\n    };\n    viewer.customContextMenuSelect = function (args) {\n        switch (args.id) {\n            case 'search_in_google':\n                for (var i = 0; i < viewer.textSelectionModule.selectionRangeArray.length; i++) {\n                    var content = viewer.textSelectionModule.selectionRangeArray[i].textContent;\n                    if ((viewer.textSelectionModule.isTextSelection) && (/\\S/.test(content))) {\n                        window.open('http://google.com/search?q=' + content);\n                    }\n                }\n                break;\n            case 'lock_annotation':\n                lockAnnotations(args);\n                break;\n            case 'unlock_annotation':\n                unlockAnnotations(args);\n                break;\n            case 'read_only_true':\n                setReadOnlyTrue(args);\n                break;\n            case 'read_only_false':\n                setReadOnlyFalse(args);\n                break;\n            case 'formfield properties':\n                break;\n            default:\n                break;\n        }\n    };\n    viewer.customContextMenuBeforeOpen = function (args) {\n        for (var i = 0; i < args.ids.length; i++) {\n            var search = document.getElementById(args.ids[i]);\n            if (search) {\n                search.style.display = 'none';\n                if (args.ids[i] === 'search_in_google' && (viewer.textSelectionModule) && viewer.textSelectionModule.isTextSelection) {\n                    search.style.display = 'block';\n                }\n                else if (args.ids[i] === \"lock_annotation\" || args.ids[i] === \"unlock_annotation\") {\n                    var isLockOption = args.ids[i] === \"lock_annotation\";\n                    for (var j = 0; j < viewer.selectedItems.annotations.length; j++) {\n                        var selectedAnnotation = viewer.selectedItems.annotations[j];\n                        if (selectedAnnotation && selectedAnnotation.annotationSettings) {\n                            var shouldDisplay = (isLockOption && !selectedAnnotation.annotationSettings.isLock) ||\n                                (!isLockOption && selectedAnnotation.annotationSettings.isLock);\n                            search.style.display = shouldDisplay ? 'block' : 'none';\n                        }\n                    }\n                }\n                else if ((args.ids[i] === \"read_only_true\" || args.ids[i] === \"read_only_false\") && viewer.selectedItems.formFields.length !== 0) {\n                    var isReadOnlyOption = args.ids[i] === \"read_only_true\";\n                    for (var k = 0; k < viewer.selectedItems.formFields.length; k++) {\n                        var selectedFormFields = viewer.selectedItems.formFields[k];\n                        if (selectedFormFields) {\n                            var selectedFormField = viewer.selectedItems.formFields[k].isReadonly;\n                            var displayMenu = (isReadOnlyOption && !selectedFormField) || (!isReadOnlyOption && selectedFormField);\n                            search.style.display = displayMenu ? 'block' : 'none';\n                        }\n                    }\n                }\n                else if (args.ids[i] === 'formfield properties' && viewer.selectedItems.formFields.length !== 0) {\n                    search.style.display = 'block';\n                }\n            }\n        }\n    };\n    function lockAnnotations(args) {\n        for (var i = 0; i < viewer.annotationCollection.length; i++) {\n            if (viewer.annotationCollection[i].uniqueKey === viewer.selectedItems.annotations[0].id) {\n                viewer.annotationCollection[i].annotationSettings.isLock = true;\n                viewer.annotationCollection[i].isCommentLock = true;\n                viewer.annotation.editAnnotation(viewer.annotationCollection[i]);\n            }\n            args.cancel = false;\n        }\n    }\n    function unlockAnnotations(args) {\n        for (var i = 0; i < viewer.annotationCollection.length; i++) {\n            if (viewer.annotationCollection[i].uniqueKey === viewer.selectedItems.annotations[0].id) {\n                viewer.annotationCollection[i].annotationSettings.isLock = false;\n                viewer.annotationCollection[i].isCommentLock = false;\n                viewer.annotation.editAnnotation(viewer.annotationCollection[i]);\n            }\n            args.cancel = false;\n        }\n    }\n    function setReadOnlyTrue(args) {\n        var selectedFormFields = viewer.selectedItems.formFields;\n        for (var i = 0; i < selectedFormFields.length; i++) {\n            var selectedFormField = selectedFormFields[i];\n            if (selectedFormField) {\n                viewer.formDesignerModule.updateFormField(selectedFormField, {\n                    isReadOnly: true,\n                });\n            }\n            args.cancel = false;\n        }\n    }\n    function setReadOnlyFalse(args) {\n        var selectedFormFields = viewer.selectedItems.formFields;\n        for (var i = 0; i < selectedFormFields.length; i++) {\n            var selectedFormField = selectedFormFields[i];\n            if (selectedFormField) {\n                viewer.formDesignerModule.updateFormField(selectedFormField, {\n                    isReadOnly: false,\n                });\n            }\n            args.cancel = false;\n        }\n    }\n    var defaultCheckBoxObj = new ej2_buttons_2.CheckBox({\n        change: contextmenuHelper,\n        cssClass: 'multiline',\n    });\n    defaultCheckBoxObj.appendTo('#hide-default-context-menu');\n    var positionCheckBoxObj = new ej2_buttons_2.CheckBox({\n        change: contextmenuHelper,\n        cssClass: 'multiline',\n    });\n    positionCheckBoxObj.appendTo('#show-custom-menu-bottom');\n    function contextmenuHelper(args) {\n        viewer.addCustomMenu(menuItems, defaultCheckBoxObj.checked, positionCheckBoxObj.checked);\n    }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/pdfviewer/custom-context-menu/index.ts?");

/***/ })

/******/ });