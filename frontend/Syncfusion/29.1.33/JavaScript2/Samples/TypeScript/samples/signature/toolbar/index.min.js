/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/signature/toolbar/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/signature/toolbar/index.ts","inputs.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/signature/toolbar/index.ts":
/*!********************************************!*\
  !*** ./samples/signature/toolbar/index.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\"), __webpack_require__(/*! @syncfusion/ej2-splitbuttons */ \"./node_modules/@syncfusion/ej2-splitbuttons/index.js\"), __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_navigations_1, ej2_buttons_1, ej2_splitbuttons_1, ej2_inputs_1, ej2_base_2, ej2_dropdowns_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    var signature = new ej2_inputs_1.Signature({\n        maxStrokeWidth: 2,\n        change: function () {\n            if (!this.isEmpty()) {\n                var saveBtn = (0, ej2_base_2.getComponent)(document.getElementById(\"save-option\"), 'split-btn');\n                clearButton();\n                saveBtn.disabled = false;\n            }\n            updateUndoRedo();\n        }\n    });\n    signature.appendTo('#signature');\n    var items = [\n        {\n            text: 'Png'\n        },\n        {\n            text: 'Jpeg'\n        },\n        {\n            text: 'Svg'\n        }\n    ];\n    var toolbarObj = new ej2_navigations_1.Toolbar({\n        width: '100%',\n        items: [\n            { text: 'Undo', prefixIcon: 'e-icons e-undo', tooltipText: 'Undo (Ctrl + Z)' },\n            { text: 'Redo', prefixIcon: 'e-icons e-redo', tooltipText: 'Redo (Ctrl + Y)' },\n            { type: 'Separator' },\n            { tooltipText: 'Save (Ctrl + S)', type: 'Button', template: '<button id=\"save-option\"></button>' },\n            { type: 'Separator' },\n            { tooltipText: 'Stroke Color', type: 'Input', template: '<input id=\"stroke-color\" type=\"color\"/>' },\n            { type: 'Separator' },\n            { tooltipText: 'Background Color', type: 'Input', template: '<input id=\"bg-color\" type=\"color\"/>' },\n            { type: 'Separator' },\n            { tooltipText: 'Stroke Width', type: 'Input', template: '<input id=\"stroke-width\" type=\"text\"/>' },\n            { type: 'Separator' },\n            { text: 'Clear', prefixIcon: 'e-sign-icons e-clear', tooltipText: 'Clear' },\n            { tooltipText: 'Disabled', type: 'Input', template: new ej2_buttons_1.CheckBox({ label: 'Disabled', checked: false, change: disabledChange }), align: 'Right' }\n        ],\n        created: function () {\n            var ddl = new ej2_dropdowns_1.DropDownList({\n                dataSource: [1, 2, 3, 4, 5],\n                width: '60',\n                value: 2,\n                change: function (args) {\n                    signature.maxStrokeWidth = args.value;\n                }\n            });\n            ddl.appendTo('#stroke-width');\n            new ej2_splitbuttons_1.SplitButton({ iconCss: 'e-sign-icons e-save', content: 'Save', items: items, select: onSelect, disabled: true }, '#save-option');\n            var strokeColor = new ej2_inputs_1.ColorPicker({\n                modeSwitcher: false,\n                columns: 4,\n                presetColors: {\n                    'custom': ['#000000', '#e91e63', '#e91e63', '#9c27b0', '#673ab7', '#2196f3', '#03a9f4', '#00bcd4',\n                        '#009688', '#8bc34a', '#cddc39', '#ffeb3b']\n                },\n                beforeTileRender: function (args) {\n                    args.element.classList.add('e-circle-palette');\n                    args.element.appendChild((0, ej2_base_2.createElement)('span', { className: 'e-circle-selection' }));\n                },\n                showButtons: false, mode: 'Palette', cssClass: 'e-stroke-color', change: strokeColorChanged\n            });\n            strokeColor.appendTo('#stroke-color');\n            var bgColor = new ej2_inputs_1.ColorPicker({\n                modeSwitcher: false,\n                columns: 4,\n                presetColors: {\n                    'custom': ['#ffffff', '#f44336', '#e91e63', '#9c27b0', '#673ab7', '#2196f3', '#03a9f4', '#00bcd4',\n                        '#009688', '#8bc34a', '#cddc39', '#ffeb3b']\n                },\n                beforeTileRender: function (args) {\n                    args.element.classList.add('e-circle-palette');\n                    args.element.appendChild((0, ej2_base_2.createElement)('span', { className: 'e-circle-selection' }));\n                },\n                showButtons: false, mode: 'Palette', cssClass: 'e-bg-color', noColor: true, change: bgColorChanged\n            });\n            bgColor.appendTo('#bg-color');\n            (0, ej2_base_2.addClass)([strokeColor.element.nextElementSibling.querySelector('.e-selected-color')], 'e-sign-icons');\n            (0, ej2_base_2.addClass)([bgColor.element.nextElementSibling.querySelector('.e-selected-color')], 'e-sign-icons');\n            clearButton();\n            var toolbarlItems = document.querySelectorAll('.e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-tbtn-txt');\n            for (var i = 0; i < toolbarlItems.length; i++) {\n                if (toolbarlItems[i].children[0].classList.contains('e-undo')) {\n                    var undoButton = (0, ej2_base_2.getComponent)(toolbarlItems[i], 'btn');\n                    undoButton.disabled = true;\n                }\n                if (toolbarlItems[i].children[0].classList.contains('e-redo')) {\n                    var redoButton = (0, ej2_base_2.getComponent)(toolbarlItems[i], 'btn');\n                    redoButton.disabled = true;\n                }\n            }\n        },\n        clicked: function (args) {\n            var saveBtn = (0, ej2_base_2.getComponent)(document.getElementById(\"save-option\"), 'split-btn');\n            if (signature.disabled && args.item.tooltipText != 'Disabled') {\n                return;\n            }\n            switch (args.item.tooltipText) {\n                case 'Undo (Ctrl + Z)':\n                    if (signature.canUndo()) {\n                        signature.undo();\n                        updateUndoRedo();\n                        updateSaveBtn();\n                    }\n                    break;\n                case 'Redo (Ctrl + Y)':\n                    if (signature.canRedo()) {\n                        signature.redo();\n                        updateUndoRedo();\n                        updateSaveBtn();\n                    }\n                    break;\n                case 'Clear':\n                    signature.clear();\n                    if (signature.isEmpty()) {\n                        clearButton();\n                        saveBtn.disabled = true;\n                    }\n                    break;\n            }\n        }\n    });\n    toolbarObj.appendTo('#toolbar');\n    function disabledChange(args) {\n        signature.disabled = args.checked;\n    }\n    function updateSaveBtn() {\n        var saveBtn = (0, ej2_base_2.getComponent)(document.getElementById(\"save-option\"), 'split-btn');\n        if (signature.isEmpty()) {\n            saveBtn.disabled = true;\n        }\n    }\n    function onSelect(args) {\n        signature.save(args.item.text, 'Signature');\n    }\n    document.getElementById('save-option').onclick = function () {\n        signature.save();\n    };\n    function strokeColorChanged(args) {\n        if (signature.disabled) {\n            return;\n        }\n        var selElem = this.element.nextElementSibling.querySelector('.e-selected-color');\n        selElem.style.borderBottomColor = args.currentValue.rgba;\n        signature.strokeColor = args.currentValue.rgba;\n    }\n    function bgColorChanged(args) {\n        if (signature.disabled) {\n            return;\n        }\n        var selElem = this.element.nextElementSibling.querySelector('.e-selected-color');\n        signature.backgroundColor = args.currentValue.rgba;\n        selElem.style.borderBottomColor = args.currentValue.rgba;\n    }\n    function clearButton() {\n        var tlItems = document.querySelectorAll('.e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-tbtn-txt');\n        for (var i = 0; i < tlItems.length; i++) {\n            if (tlItems[i].children[0].classList.contains('e-clear')) {\n                var clrBtn = (0, ej2_base_2.getComponent)(tlItems[i], 'btn');\n                if (signature.isEmpty()) {\n                    clrBtn.disabled = true;\n                }\n                else {\n                    clrBtn.disabled = false;\n                }\n            }\n        }\n    }\n    function updateUndoRedo() {\n        var undoButton;\n        var redoButton;\n        var tlItems = document.querySelectorAll('.e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-tbtn-txt');\n        for (var i = 0; i < tlItems.length; i++) {\n            if (tlItems[i].children[0].classList.contains('e-undo')) {\n                undoButton = (0, ej2_base_2.getComponent)(tlItems[i], 'btn');\n            }\n            if (tlItems[i].children[0].classList.contains('e-redo')) {\n                redoButton = (0, ej2_base_2.getComponent)(tlItems[i], 'btn');\n            }\n        }\n        if (signature.canUndo()) {\n            undoButton.disabled = false;\n        }\n        else {\n            undoButton.disabled = true;\n        }\n        if (signature.canRedo()) {\n            redoButton.disabled = false;\n        }\n        else {\n            redoButton.disabled = true;\n        }\n    }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/signature/toolbar/index.ts?");

/***/ })

/******/ });