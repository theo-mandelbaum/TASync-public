/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/tab/drag-and-drop/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/tab/drag-and-drop/index.ts","navigations.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/tab/drag-and-drop/index.ts":
/*!********************************************!*\
  !*** ./samples/tab/drag-and-drop/index.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-charts */ \"./node_modules/@syncfusion/ej2-charts/index.js\"), __webpack_require__(/*! @syncfusion/ej2-schedule */ \"./node_modules/@syncfusion/ej2-schedule/index.js\"), __webpack_require__(/*! @syncfusion/ej2-grids */ \"./node_modules/@syncfusion/ej2-grids/index.js\"), __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\"), __webpack_require__(/*! @syncfusion/ej2-calendars */ \"./node_modules/@syncfusion/ej2-calendars/index.js\"), __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\"), __webpack_require__(/*! @syncfusion/ej2-data */ \"./node_modules/@syncfusion/ej2-data/index.js\"), __webpack_require__(/*! @syncfusion/ej2-richtexteditor */ \"./node_modules/@syncfusion/ej2-richtexteditor/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_navigations_1, ej2_base_2, ej2_charts_1, ej2_schedule_1, ej2_grids_1, ej2_dropdowns_1, ej2_calendars_1, ej2_inputs_1, ej2_data_1, ej2_richtexteditor_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_schedule_1.Schedule.Inject(ej2_schedule_1.Day, ej2_schedule_1.Week, ej2_schedule_1.WorkWeek, ej2_schedule_1.Month, ej2_schedule_1.Agenda);\n    ej2_richtexteditor_1.RichTextEditor.Inject(ej2_richtexteditor_1.Toolbar, ej2_richtexteditor_1.Link, ej2_richtexteditor_1.Image, ej2_richtexteditor_1.HtmlEditor, ej2_richtexteditor_1.QuickToolbar);\n    ej2_charts_1.Chart.Inject(ej2_charts_1.LineSeries, ej2_charts_1.Category);\n    var data = [\n        { text: 'Dropdown List', id: 'list-01' },\n        { text: 'DatePicker', id: 'list-02' },\n        { text: 'Calendar', id: 'list-03' },\n        { text: 'File Upload', id: 'list-04' },\n        { text: 'Rich Text Editor', id: 'list-05' }\n    ];\n    var rteObj;\n    var chartObj;\n    var scheduleObj;\n    var draggedItemHeader;\n    var i = 0;\n    function renderComponents() {\n        var tabObj = new ej2_navigations_1.Tab({\n            created: onTabCreate,\n            dragArea: '#TabContainer',\n            selected: selectedTab,\n            onDragStart: onTabDragStart,\n            dragged: onDraggedTab,\n            allowDragAndDrop: true,\n            items: [\n                {\n                    header: { 'text': 'Grid' },\n                    content: '#Grid'\n                },\n                {\n                    header: { 'text': 'Chart' },\n                    content: '#Chart'\n                },\n                {\n                    header: { 'text': 'Schedule' },\n                    content: '#Schedule'\n                }\n            ],\n        });\n        tabObj.appendTo('#draggableTab');\n        var treeViewObj = new ej2_navigations_1.TreeView({\n            fields: { dataSource: data, id: 'id', text: 'text' },\n            allowDragAndDrop: true,\n            dragArea: '#TabContainer',\n            nodeDragStop: onNodeDragStop,\n            nodeDragging: onNodeDrag,\n            cssClass: 'treeview-external-drag-tab'\n        });\n        treeViewObj.appendTo('#ListView');\n        function onTabCreate() {\n            var tabElement = document.getElementById('draggableTab');\n            if (!(0, ej2_base_2.isNullOrUndefined)(tabElement)) {\n                tabElement.querySelector('.e-tab-header').classList.add('e-droppable');\n                tabElement.querySelector('.e-content').classList.add('tab-content');\n            }\n        }\n        function selectedTab(args) {\n            if (tabObj.items[args.selectedIndex].header.text === 'Rich Text Editor') {\n                rteObj.refreshUI();\n            }\n            if (tabObj.items[args.selectedIndex].header.text === 'Schedule') {\n                scheduleObj.refresh();\n            }\n            if (tabObj.items[args.selectedIndex].header.text === 'Chart') {\n                chartObj.refresh();\n            }\n        }\n        function onTabDragStart(args) {\n            draggedItemHeader = tabObj.items[args.index].header.text;\n        }\n        function onDraggedTab(args) {\n            var dragTabIndex = Array.prototype.indexOf.call(tabObj.element.querySelectorAll('.e-toolbar-item'), args.draggedItem);\n            var dropNode = args.target.closest('#ListView .e-list-item');\n            if (dropNode != null && !args.target.closest('#draggableTab .e-toolbar-item')) {\n                args.cancel = true;\n                var dropContainer = (document.querySelector('.treeview-external-drag-tab')).querySelectorAll('.e-list-item');\n                var dropIndex = Array.prototype.indexOf.call(dropContainer, dropNode);\n                var newNode = [{ id: 'list' + i, text: draggedItemHeader }];\n                tabObj.removeTab(dragTabIndex);\n                treeViewObj.addNodes(newNode, 'Treeview', dropIndex);\n            }\n        }\n        function onNodeDragStop(args) {\n            var dropElement = args.target.closest('#draggableTab .e-toolbar-item');\n            if (dropElement != null) {\n                var tabElement = document.querySelector('#draggableTab');\n                var itemPosition = (((args.event.type.indexOf('touch') > -1) ? args.event.changedTouches[0].clientX\n                    : args.event.clientX) < dropElement.getBoundingClientRect().left + dropElement.offsetWidth / 2) ? 0 : 1;\n                var dropItemIndex = [].slice.call(tabElement.querySelectorAll('.e-toolbar-item')).indexOf(dropElement) + itemPosition;\n                var tabContent = void 0;\n                var content = '';\n                switch (args.draggedNodeData.text) {\n                    case 'Dropdown List':\n                        tabContent = (0, ej2_base_2.createElement)('input', { id: 'DropdownList' });\n                        content = tabContent.id;\n                        tabContent.setAttribute('type', 'text');\n                        tabContent.setAttribute('tabindex', '1');\n                        document.querySelector('#external').appendChild(tabContent);\n                        renderDropdownList();\n                        break;\n                    case 'DatePicker':\n                        tabContent = (0, ej2_base_2.createElement)('input', { id: 'DatePicker' });\n                        content = tabContent.id;\n                        tabContent.setAttribute('type', 'text');\n                        document.querySelector('#external').appendChild(tabContent);\n                        renderDatePicker();\n                        break;\n                    case 'Calendar':\n                        tabContent = (0, ej2_base_2.createElement)('div', { id: 'Calendar' });\n                        content = tabContent.id;\n                        document.querySelector('#external').appendChild(tabContent);\n                        renderCalendar();\n                        break;\n                    case 'File Upload':\n                        tabContent = (0, ej2_base_2.createElement)('input', { id: 'FileUpload' });\n                        content = tabContent.id;\n                        tabContent.setAttribute('type', 'file');\n                        tabContent.setAttribute('name', 'UploadFiles');\n                        document.querySelector('#external').appendChild(tabContent);\n                        renderUploader();\n                        break;\n                    case 'Rich Text Editor':\n                        tabContent = (0, ej2_base_2.createElement)('div', { id: 'RichTextEditor' });\n                        content = tabContent.id;\n                        var rteContent = document.querySelector('#rte').cloneNode(true);\n                        if (!(0, ej2_base_2.isNullOrUndefined)(rteContent)) {\n                            tabContent.appendChild(rteContent);\n                        }\n                        document.querySelector('#external').appendChild(tabContent);\n                        renderRichTextEditor();\n                        break;\n                    case 'Grid':\n                        tabContent = (0, ej2_base_2.createElement)('div', { id: 'Grid' });\n                        content = tabContent.id;\n                        document.querySelector('#external').appendChild(tabContent);\n                        renderGrid();\n                        document.querySelector('#Grid').classList.add('Grid');\n                        break;\n                    case 'Chart':\n                        tabContent = (0, ej2_base_2.createElement)('div', { id: 'Chart' });\n                        content = tabContent.id;\n                        document.querySelector('#external').appendChild(tabContent);\n                        renderChart();\n                        document.querySelector('#Chart').classList.add('Chart');\n                        break;\n                    case 'Schedule':\n                        tabContent = (0, ej2_base_2.createElement)('div', { id: 'Schedule' });\n                        content = tabContent.id;\n                        document.querySelector('#external').appendChild(tabContent);\n                        renderSchedule();\n                        break;\n                }\n                var newTabItem = [{\n                        header: { 'text': args.draggedNodeData.text.toString() },\n                        content: (document.querySelector('.' + content))\n                    }];\n                tabObj.addTab(newTabItem, dropItemIndex);\n                treeViewObj.removeNodes([args.draggedNode]);\n            }\n            args.cancel = true;\n        }\n        function onNodeDrag(args) {\n            if (!(0, ej2_base_2.isNullOrUndefined)(args.target.closest('.tab-content'))) {\n                args.dropIndicator = 'e-no-drop';\n            }\n            else if (!(0, ej2_base_2.isNullOrUndefined)(args.target.closest('#draggableTab .e-tab-header'))) {\n                args.dropIndicator = 'e-drop-in';\n            }\n        }\n    }\n    function renderGrid() {\n        var gridData = [\n            {\n                OrderID: 10248, CustomerID: 'VINET', EmployeeID: 5, OrderDate: new Date(8364186e5),\n                ShipName: 'Vins et alcools Chevalier', ShipCity: 'Reims', ShipAddress: '59 rue de l Abbaye',\n                ShipRegion: 'CJ', ShipPostalCode: '51100', ShipCountry: 'France', Freight: 32.38, Verified: !0\n            },\n            {\n                OrderID: 10249, CustomerID: 'TOMSP', EmployeeID: 6, OrderDate: new Date(836505e6),\n                ShipName: 'Toms Spezialitäten', ShipCity: 'Münster', ShipAddress: 'Luisenstr. 48',\n                ShipRegion: 'CJ', ShipPostalCode: '44087', ShipCountry: 'Germany', Freight: 11.61, Verified: !1\n            },\n            {\n                OrderID: 10250, CustomerID: 'HANAR', EmployeeID: 4, OrderDate: new Date(8367642e5),\n                ShipName: 'Hanari Carnes', ShipCity: 'Rio de Janeiro', ShipAddress: 'Rua do Paço, 67',\n                ShipRegion: 'RJ', ShipPostalCode: '05454-876', ShipCountry: 'Brazil', Freight: 65.83, Verified: !0\n            },\n            {\n                OrderID: 10251, CustomerID: 'VICTE', EmployeeID: 3, OrderDate: new Date(8367642e5),\n                ShipName: 'Victuailles en stock', ShipCity: 'Lyon', ShipAddress: '2, rue du Commerce',\n                ShipRegion: 'CJ', ShipPostalCode: '69004', ShipCountry: 'France', Freight: 41.34, Verified: !0\n            },\n            {\n                OrderID: 10252, CustomerID: 'SUPRD', EmployeeID: 2, OrderDate: new Date(8368506e5),\n                ShipName: 'Suprêmes délices', ShipCity: 'Charleroi', ShipAddress: 'Boulevard Tirou, 255',\n                ShipRegion: 'CJ', ShipPostalCode: 'B-6000', ShipCountry: 'Belgium', Freight: 51.3, Verified: !0\n            }\n        ];\n        var gridObj = new ej2_grids_1.Grid({\n            dataSource: gridData,\n            columns: [\n                { field: 'OrderID', headerText: 'Order ID', textAlign: 'Right', width: 120, type: 'number' },\n                { field: 'CustomerID', width: 140, headerText: 'Customer ID', type: 'string' },\n                { field: 'Freight', headerText: 'Freight', textAlign: 'Right', width: 120, format: 'C' },\n                { field: 'OrderDate', headerText: 'Order Date', width: 140, format: 'yMd' }\n            ]\n        });\n        gridObj.appendTo('#Grid');\n    }\n    function renderChart() {\n        var chartData = [\n            { month: 'Jan', sales: 35 }, { month: 'Feb', sales: 28 },\n            { month: 'Mar', sales: 34 }, { month: 'Apr', sales: 32 },\n            { month: 'May', sales: 40 }, { month: 'Jun', sales: 32 },\n            { month: 'Jul', sales: 35 }, { month: 'Aug', sales: 55 },\n            { month: 'Sep', sales: 38 }, { month: 'Oct', sales: 30 },\n            { month: 'Nov', sales: 25 }, { month: 'Dec', sales: 32 }\n        ];\n        chartObj = new ej2_charts_1.Chart({\n            primaryXAxis: {\n                valueType: 'Category'\n            },\n            series: [{\n                    dataSource: chartData,\n                    xName: 'month',\n                    yName: 'sales',\n                    type: 'Line'\n                }]\n        });\n        chartObj.appendTo('#Chart');\n    }\n    function renderSchedule() {\n        var dataManager = new ej2_data_1.DataManager({\n            url: 'https://ej2services.syncfusion.com/production/web-services/api/schedule',\n            adaptor: new ej2_data_1.ODataV4Adaptor,\n            crossDomain: true\n        });\n        scheduleObj = new ej2_schedule_1.Schedule({\n            height: 350,\n            cssClass: 'Schedule',\n            currentView: 'Month',\n            readonly: true,\n            eventSettings: { dataSource: dataManager }\n        });\n        scheduleObj.appendTo('#Schedule');\n    }\n    function renderDropdownList() {\n        var sportsData = ['Badminton', 'Cricket', 'Football', 'Golf', 'Tennis'];\n        var dropDownListObj = new ej2_dropdowns_1.DropDownList({\n            width: 200,\n            placeholder: 'Select a game',\n            cssClass: 'DropdownList',\n            dataSource: sportsData\n        });\n        dropDownListObj.appendTo('#DropdownList');\n    }\n    function renderDatePicker() {\n        var datepickerObj = new ej2_calendars_1.DatePicker({\n            cssClass: 'DatePicker',\n            placeholder: 'Enter date',\n            width: 200\n        });\n        datepickerObj.appendTo('#DatePicker');\n    }\n    function renderCalendar() {\n        var calendarObj = new ej2_calendars_1.Calendar({\n            cssClass: 'Calendar',\n        });\n        calendarObj.appendTo('#Calendar');\n    }\n    function renderUploader() {\n        var uploadObj = new ej2_inputs_1.Uploader({\n            cssClass: 'FileUpload',\n            autoUpload: false\n        });\n        uploadObj.appendTo('#FileUpload');\n    }\n    function renderRichTextEditor() {\n        rteObj = new ej2_richtexteditor_1.RichTextEditor({\n            cssClass: 'RichTextEditor',\n            toolbarSettings: {\n                items: ['Bold', 'Italic', 'Underline', 'StrikeThrough',\n                    'FontName', 'FontSize', 'FontColor', 'BackgroundColor',\n                    'LowerCase', 'UpperCase']\n            }\n        });\n        rteObj.appendTo('#RichTextEditor');\n    }\n    renderGrid();\n    renderChart();\n    renderSchedule();\n    renderComponents();\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/tab/drag-and-drop/index.ts?");

/***/ })

/******/ });