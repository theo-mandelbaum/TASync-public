/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/tab/wizard/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/tab/wizard/index.ts","navigations.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/tab/wizard/index.ts":
/*!*************************************!*\
  !*** ./samples/tab/wizard/index.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\"), __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\"), __webpack_require__(/*! @syncfusion/ej2-calendars */ \"./node_modules/@syncfusion/ej2-calendars/index.js\"), __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\"), __webpack_require__(/*! @syncfusion/ej2-grids */ \"./node_modules/@syncfusion/ej2-grids/index.js\"), __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_popups_1, ej2_navigations_1, ej2_calendars_1, ej2_inputs_1, ej2_grids_1, ej2_dropdowns_1, ej2_base_2) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    var tabObj;\n    var availTrainGrid;\n    var ticketDetailGrid;\n    var endPoint;\n    var journeyDate;\n    var ticketType;\n    var startPoint;\n    var alertDlg;\n    var today = new Date();\n    var locations;\n    var selectedTrain;\n    var quota = [\n        { id: '1', text: 'Business Class' },\n        { id: '2', text: 'Economy Class' },\n        { id: '3', text: 'Common Class' }\n    ];\n    var gender = [\n        { id: '1', text: 'Male' },\n        { id: '2', text: 'Female' }\n    ];\n    var berths = [\n        { id: '1', text: 'Upper' },\n        { id: '2', text: 'Lower' },\n        { id: '3', text: 'Middle' },\n        { id: '4', text: 'Window' },\n        { id: '5', text: 'Aisle' }\n    ];\n    var cities = [\n        { name: 'Chicago', fare: 300 },\n        { name: 'San Francisco', fare: 125 },\n        { name: 'Los Angeles', fare: 175 },\n        { name: 'Seattle', fare: 250 },\n        { name: 'Florida', fare: 150 }\n    ];\n    function renderComponents() {\n        tabObj = new ej2_navigations_1.Tab({ heightAdjustMode: 'None', height: 'auto', showCloseButton: false,\n            selecting: tabSelecting,\n            items: [\n                { header: { 'text': 'New Booking' }, content: '#booking' },\n                { header: { 'text': 'Train List' }, content: '#selectTrain', disabled: true },\n                { header: { 'text': 'Add Passenger' }, content: '#details', disabled: true },\n                { header: { 'text': 'Make Payment' }, content: '#confirm', disabled: true }\n            ]\n        });\n        tabObj.appendTo('#tab_wizard');\n        startPoint = new ej2_dropdowns_1.DropDownList({\n            width: '100%', dataSource: cities, floatLabelType: 'Auto', placeholder: 'From',\n            fields: { text: 'name', value: 'name' }\n        });\n        startPoint.appendTo('#startPoint');\n        endPoint = new ej2_dropdowns_1.DropDownList({\n            width: '100%', dataSource: cities, floatLabelType: 'Auto', placeholder: 'To',\n            fields: { text: 'name', value: 'name' }\n        });\n        endPoint.appendTo('#endPoint');\n        journeyDate = new ej2_calendars_1.DatePicker({\n            width: '100%', floatLabelType: 'Auto', placeholder: 'Journey Date', min: new Date(today.getTime()),\n            max: new Date(today.getTime() + 60 * 24 * 60 * 60 * 1000),\n            value: new Date(),\n        });\n        journeyDate.appendTo('#journey_date');\n        ticketType = new ej2_dropdowns_1.DropDownList({\n            dataSource: quota, placeholder: 'Ticket Type', floatLabelType: 'Auto', fields: { text: 'text', value: 'text' }\n        });\n        ticketType.appendTo('#ticket_type');\n        alertDlg = new ej2_popups_1.Dialog({\n            header: 'Success', width: 250, isModal: true, visible: false, showCloseIcon: true,\n            content: 'Your payment was successfully processed', target: document.getElementById('dialog_target'), created: dlgCreated\n        });\n        alertDlg.appendTo('#alertDialog');\n        alertDlg.hide();\n        availTrainGrid = new ej2_grids_1.Grid({\n            width: '100%',\n            columns: [\n                { field: 'TrainNo', headerText: 'Train No', width: 120, type: 'number' },\n                { field: 'Name', width: 140, headerText: 'Name' },\n                { field: 'Departure', headerText: 'Departure', width: 120 },\n                { field: 'Arrival', headerText: 'Arrival', width: 140 },\n                { field: 'Availability', headerText: 'Availability', width: 140, type: 'number' }\n            ],\n            rowSelected: trainSelected\n        });\n        availTrainGrid.appendTo('#availableTrain');\n        var age1 = new ej2_inputs_1.NumericTextBox({ min: 1, max: 100, value: 18, format: 'n0', showSpinButton: false });\n        age1.appendTo('#pass_age1');\n        var age2 = new ej2_inputs_1.NumericTextBox({ min: 1, max: 100, value: 18, format: 'n0', showSpinButton: false });\n        age2.appendTo('#pass_age2');\n        var age3 = new ej2_inputs_1.NumericTextBox({ min: 1, max: 100, value: 18, format: 'n0', showSpinButton: false });\n        age3.appendTo('#pass_age3');\n        var gender1 = new ej2_dropdowns_1.DropDownList({\n            dataSource: gender, text: 'Male', fields: { text: 'text', value: 'text' }\n        });\n        gender1.appendTo('#pass_gender1');\n        var gender2 = new ej2_dropdowns_1.DropDownList({\n            dataSource: gender, text: 'Male', fields: { text: 'text', value: 'text' }\n        });\n        gender2.appendTo('#pass_gender2');\n        var gender3 = new ej2_dropdowns_1.DropDownList({\n            dataSource: gender, text: 'Male', fields: { text: 'text', value: 'text' }\n        });\n        gender3.appendTo('#pass_gender3');\n        var berth1 = new ej2_dropdowns_1.DropDownList({\n            dataSource: berths, placeholder: 'Optional', fields: { text: 'text', value: 'text' }\n        });\n        berth1.appendTo('#pass_berth1');\n        var berth2 = new ej2_dropdowns_1.DropDownList({\n            dataSource: berths, placeholder: 'Optional', fields: { text: 'text', value: 'text' }\n        });\n        berth2.appendTo('#pass_berth2');\n        var berth3 = new ej2_dropdowns_1.DropDownList({\n            dataSource: berths, placeholder: 'Optional', fields: { text: 'text', value: 'text' }\n        });\n        berth3.appendTo('#pass_berth3');\n        ticketDetailGrid = new ej2_grids_1.Grid({\n            width: '100%',\n            columns: [\n                { field: 'TrainNo', headerText: 'Train No', width: 120, type: 'number' },\n                { field: 'PassName', width: 140, headerText: 'Name' },\n                { field: 'Gender', headerText: 'Gender', width: 120 },\n                { field: 'Berth', headerText: 'Berth', width: 140 }\n            ],\n        });\n        ticketDetailGrid.appendTo('#ticketDetailGrid');\n        document.getElementById('searchNext').onclick = function (e) { tabNavigations(e); };\n        document.getElementById('bookTickets').onclick = function (e) { tabNavigations(e); };\n        document.getElementById('confirmTickets').onclick = function (e) { tabNavigations(e); };\n        document.getElementById('makePayment').onclick = function (e) { tabNavigations(e); };\n        document.getElementById('goToSearch').onclick = function (e) { tabNavigations(e); };\n        document.getElementById('goBackToBook').onclick = function (e) { tabNavigations(e); };\n        document.getElementById('goBackDetails').onclick = function (e) { tabNavigations(e); };\n    }\n    function tabSelecting(e) {\n        if (e.isSwiped) {\n            e.cancel = true;\n        }\n    }\n    function dlgCreated() {\n        alertDlg.buttons = [{\n                buttonModel: { content: 'Ok', isPrimary: true },\n                click: (function () {\n                    alertDlg.hide();\n                    for (var i = 1; i <= 3; i++) {\n                        var name_1 = document.getElementById('pass_name' + i);\n                        var berthSelected = document.getElementById('pass_berth' + i);\n                        var age = document.getElementById('pass_age' + i);\n                        var gender_1 = document.getElementById('pass_gender' + i);\n                        name_1.value = '';\n                        age.value = 18;\n                        gender_1.value = 'Male';\n                        berthSelected.value = '';\n                    }\n                    tabObj.enableTab(0, true);\n                    tabObj.enableTab(1, false);\n                    tabObj.enableTab(2, false);\n                    tabObj.enableTab(3, false);\n                    tabObj.select(0);\n                })\n            }];\n    }\n    function tabNavigations(args) {\n        switch (args.target.id) {\n            case 'searchNext':\n                if (!(0, ej2_base_2.isNullOrUndefined)(startPoint.value) && !(0, ej2_base_2.isNullOrUndefined)(endPoint.value) &&\n                    !(0, ej2_base_2.isNullOrUndefined)(ticketType.value) && !(0, ej2_base_2.isNullOrUndefined)(journeyDate.value)) {\n                    if (!(0, ej2_base_2.isNullOrUndefined)(startPoint.value) && startPoint.value === endPoint.value) {\n                        document.getElementById('err1').innerText = '* Arrival point can\\'t be same as Departure';\n                    }\n                    else {\n                        tabObj.enableTab(1, true);\n                        tabObj.enableTab(0, false);\n                        filterTrains(args);\n                        document.getElementById('err1').innerText = '';\n                        document.getElementById('err2').innerText = '';\n                    }\n                }\n                else {\n                    document.getElementById('err1').innerText = '* Please fill all the details before proceeding';\n                }\n                break;\n            case 'bookTickets':\n                if (availTrainGrid.getSelectedRecords() === undefined || availTrainGrid.getSelectedRecords().length === 0) {\n                    document.getElementById('err2').innerText = '* Select your convenient train';\n                }\n                else {\n                    tabObj.enableTab(2, true);\n                    tabObj.enableTab(1, false);\n                    document.getElementById('err2').innerText = '';\n                }\n                break;\n            case 'confirmTickets':\n                var name_2 = document.getElementById('pass_name1');\n                var age = document.getElementById('pass_age1');\n                var gender_2 = document.getElementById('pass_gender1');\n                if (name_2.value === '' || age.value === '' || gender_2.value === '') {\n                    document.getElementById('err3').innerText = '* Please enter passenger details';\n                }\n                else {\n                    tabObj.enableTab(3, true);\n                    tabObj.enableTab(2, false);\n                    document.getElementById('err3').innerText = '';\n                    finalizeDetails(args);\n                }\n                break;\n            case 'makePayment':\n                alertDlg.show();\n                break;\n            case 'goToSearch':\n                selectedTrain = [];\n                tabObj.enableTab(0, true);\n                tabObj.select(0);\n                tabObj.enableTab(1, false);\n                break;\n            case 'goBackToBook':\n                tabObj.enableTab(1, true);\n                tabObj.select(1);\n                tabObj.enableTab(2, false);\n                break;\n            case 'goBackDetails':\n                tabObj.enableTab(2, true);\n                tabObj.select(2);\n                tabObj.enableTab(3, false);\n                break;\n        }\n    }\n    function filterTrains(args) {\n        var result = [];\n        var fromCity = startPoint.text;\n        var toCity = endPoint.text;\n        var count = Math.floor((Math.random() * 3) + 2);\n        for (var i = 0; i < count; i++) {\n            var details = [];\n            details.TrainNo = Math.floor((Math.random() * 20) + 19000);\n            details.Name = 'Train ' + i;\n            details.Departure = fromCity;\n            details.Arrival = toCity;\n            details.Availability = Math.floor((Math.random() * 20) + 20);\n            result.push(details);\n        }\n        availTrainGrid.dataSource = result;\n    }\n    function finalizeDetails(args) {\n        var reserved = [];\n        var passCount = 0;\n        for (var i = 1; i <= 3; i++) {\n            var name_3 = document.getElementById('pass_name' + i);\n            var berthSelected = document.getElementById('pass_berth' + i);\n            var gender_3 = document.getElementById('pass_gender' + i);\n            if (name_3.value !== '') {\n                var details = [];\n                var berth = berthSelected.value;\n                details.TrainNo = selectedTrain.TrainNo.toString();\n                details.PassName = name_3.value;\n                details.Gender = gender_3.value;\n                details.Berth = (berth === '') ? 'Any' : berth;\n                reserved.push(details);\n                passCount++;\n            }\n            var calcFare = 0;\n            for (var i_1 = 0; i_1 < cities; i_1++) {\n                if (startPoint.value === cities[i_1].name) {\n                    calcFare = calcFare + cities[i_1].fare;\n                }\n                if (endPoint.value === cities[i_1].name) {\n                    calcFare = calcFare + cities[i_1].fare;\n                }\n            }\n            var displayAmt = document.getElementById('amount');\n            if (ticketType.value === 'Economy Class') {\n                displayAmt.innerText = 'Total payable amount: $' + passCount * (300 + calcFare);\n            }\n            else if (ticketType.value === 'Business Class') {\n                displayAmt.innerText = 'Total payable amount: $' + passCount * (500 + calcFare);\n            }\n            else if (ticketType.value === 'Common Class') {\n                displayAmt.innerText = 'Total payable amount: $' + passCount * (150 + calcFare);\n            }\n        }\n        ticketDetailGrid.dataSource = reserved;\n    }\n    function trainSelected(args) {\n        selectedTrain = args.data;\n    }\n    renderComponents();\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/tab/wizard/index.ts?");

/***/ })

/******/ });