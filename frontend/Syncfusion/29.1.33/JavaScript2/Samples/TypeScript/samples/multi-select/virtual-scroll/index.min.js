/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/multi-select/virtual-scroll/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/multi-select/virtual-scroll/index.ts","dropdown.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/multi-select/virtual-scroll/index.ts":
/*!******************************************************!*\
  !*** ./samples/multi-select/virtual-scroll/index.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\"), __webpack_require__(/*! @syncfusion/ej2-data */ \"./node_modules/@syncfusion/ej2-data/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_dropdowns_1, ej2_buttons_1, ej2_data_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_dropdowns_1.MultiSelect.Inject(ej2_dropdowns_1.VirtualScroll);\n    ej2_dropdowns_1.MultiSelect.Inject(ej2_dropdowns_1.CheckBoxSelection);\n    var records = [];\n    for (var i = 1; i <= 150; i++) {\n        var item = {};\n        item.id = 'id' + i;\n        item.text = \"Item \".concat(i);\n        var randomGroup = Math.floor(Math.random() * 4) + 1;\n        switch (randomGroup) {\n            case 1:\n                item.group = 'Group A';\n                break;\n            case 2:\n                item.group = 'Group B';\n                break;\n            case 3:\n                item.group = 'Group C';\n                break;\n            case 4:\n                item.group = 'Group D';\n                break;\n            default:\n                break;\n        }\n        records.push(item);\n    }\n    var localObj = new ej2_dropdowns_1.MultiSelect({\n        dataSource: records,\n        mode: 'Box',\n        enableVirtualization: true,\n        popupHeight: '200px',\n        allowFiltering: true,\n        allowCustomValue: true,\n        showDropDownIcon: true,\n        hideSelectedItem: true,\n        closePopupOnSelect: true,\n        fields: { text: 'text', value: 'id' },\n        placeholder: 'e.g. Item 1'\n    });\n    localObj.appendTo('#local');\n    var remoteObj = new ej2_dropdowns_1.MultiSelect({\n        dataSource: new ej2_data_1.DataManager({\n            url: 'https://ej2services.syncfusion.com/production/web-services/api/VirtualDropdownData',\n            adaptor: new ej2_data_1.UrlAdaptor,\n            crossDomain: true\n        }),\n        fields: { text: 'OrderID', value: 'OrderID' },\n        enableVirtualization: true,\n        allowFiltering: true,\n        mode: 'Delimiter',\n        allowCustomValue: true,\n        hideSelectedItem: true,\n        closePopupOnSelect: true,\n        showDropDownIcon: true,\n        popupHeight: '200px',\n        placeholder: 'OrderID'\n    });\n    remoteObj.appendTo('#remote');\n    var databindObj = new ej2_dropdowns_1.MultiSelect({\n        dataSource: records,\n        fields: { text: 'text', value: 'id' },\n        enableVirtualization: true,\n        popupHeight: '200px',\n        mode: 'Default',\n        value: ['id10', 'id50', 'id100', \"custom\"],\n        allowFiltering: true,\n        allowCustomValue: true,\n        hideSelectedItem: true,\n        closePopupOnSelect: true,\n        showDropDownIcon: true,\n        placeholder: 'e.g. Item 1'\n    });\n    databindObj.appendTo('#databind');\n    var groupObj = new ej2_dropdowns_1.MultiSelect({\n        dataSource: records,\n        enableVirtualization: true,\n        popupHeight: '200px',\n        mode: 'CheckBox',\n        allowFiltering: true,\n        allowCustomValue: true,\n        showDropDownIcon: true,\n        enableSelectionOrder: false,\n        fields: { groupBy: 'group', text: 'text', value: 'id' },\n        placeholder: 'e.g. Item 1'\n    });\n    groupObj.appendTo('#group');\n    var templateObj = new ej2_dropdowns_1.MultiSelect({\n        dataSource: records,\n        enableVirtualization: true,\n        popupHeight: '200px',\n        mode: 'Default',\n        allowFiltering: true,\n        allowCustomValue: true,\n        hideSelectedItem: true,\n        closePopupOnSelect: true,\n        showDropDownIcon: true,\n        headerTemplate: '<div class=\"header\"><span style=\"margin-left:17px\">Items Info</span></div>',\n        itemTemplate: '<div class=\"ename\" style=\"height: 40px\"> ${text} </div>',\n        valueTemplate: '<div class=\"name\"> ${text} </div>',\n        fields: { text: 'text', value: 'id' },\n        placeholder: 'e.g. Item 1'\n    });\n    templateObj.appendTo('#template');\n    var checkBoxObj = new ej2_buttons_1.CheckBox({\n        checked: true,\n        label: 'AllowFiltering',\n        change: function (args) {\n            localObj.allowFiltering = args.checked;\n            remoteObj.allowFiltering = args.checked;\n            databindObj.allowFiltering = args.checked;\n            groupObj.allowFiltering = args.checked;\n            templateObj.allowFiltering = args.checked;\n        }\n    });\n    checkBoxObj.appendTo('#filter');\n    checkBoxObj = new ej2_buttons_1.CheckBox({\n        checked: true,\n        label: 'AllowCustomValue',\n        change: function (args) {\n            localObj.allowCustomValue = args.checked;\n            remoteObj.allowCustomValue = args.checked;\n            databindObj.allowCustomValue = args.checked;\n            groupObj.allowCustomValue = args.checked;\n            templateObj.allowCustomValue = args.checked;\n        }\n    });\n    checkBoxObj.appendTo('#custom');\n    checkBoxObj = new ej2_buttons_1.CheckBox({\n        checked: true,\n        label: 'HideSelectedItem',\n        change: function (args) {\n            localObj.hideSelectedItem = args.checked;\n            remoteObj.hideSelectedItem = args.checked;\n            databindObj.hideSelectedItem = args.checked;\n            templateObj.hideSelectedItem = args.checked;\n        }\n    });\n    checkBoxObj.appendTo('#hide');\n    checkBoxObj = new ej2_buttons_1.CheckBox({\n        checked: true,\n        label: 'ClosePopupOnSelect',\n        change: function (args) {\n            localObj.closePopupOnSelect = args.checked;\n            remoteObj.closePopupOnSelect = args.checked;\n            databindObj.closePopupOnSelect = args.checked;\n            templateObj.closePopupOnSelect = args.checked;\n        }\n    });\n    checkBoxObj.appendTo('#close');\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/multi-select/virtual-scroll/index.ts?");

/***/ })

/******/ });