/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/treemap/election/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/treemap/election/index.ts","treemap.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/treemap/election/index.ts":
/*!*******************************************!*\
  !*** ./samples/treemap/election/index.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-treemap */ \"./node_modules/@syncfusion/ej2-treemap/index.js\"), __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\"), __webpack_require__(/*! ./treemap-data/election-data */ \"./samples/treemap/election/treemap-data/election-data.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_treemap_1, ej2_dropdowns_1, election_data_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_treemap_1.TreeMap.Inject(ej2_treemap_1.TreeMapTooltip, ej2_treemap_1.TreeMapLegend);\n    var prevTime;\n    var curTime;\n    var treemapload = function (args) {\n        var theme = location.hash.split('/')[1];\n        theme = theme ? theme : 'Material';\n        args.treemap.theme = ((theme.charAt(0).toUpperCase() +\n            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5'));\n    };\n    var treemap = new ej2_treemap_1.TreeMap({\n        load: treemapload,\n        resize: function (args) {\n            if (args.currentSize.width > args.currentSize.height && args.treemap.legendSettings.position === 'Auto') {\n                treemap.legendSettings.orientation = 'Vertical';\n                if (treemap.legendSettings.mode === 'Interactive') {\n                    treemap.legendSettings.height = '70%';\n                    treemap.legendSettings.width = '10';\n                }\n                else {\n                    treemap.legendSettings.height = '';\n                    treemap.legendSettings.width = '';\n                }\n            }\n            else {\n                treemap.legendSettings.orientation = 'Horizontal';\n                if (treemap.legendSettings.mode === 'Interactive') {\n                    treemap.legendSettings.height = '10';\n                    treemap.legendSettings.width = '';\n                }\n                else {\n                    treemap.legendSettings.height = '';\n                    treemap.legendSettings.width = '';\n                }\n            }\n        },\n        titleSettings: {\n            text: 'US Presidential election result - 2016',\n            textStyle: { size: '15px', fontFamily: 'Segoe UI' }\n        },\n        dataSource: election_data_1.electionData,\n        weightValuePath: 'Population',\n        tooltipSettings: {\n            visible: true,\n            format: '<b>${Winner}</b><br>State : ${State}<br>Trump : ${Trump} %<br>Clinton : ${Clinton} %',\n            textStyle: {\n                fontFamily: 'Segoe UI'\n            }\n        },\n        legendSettings: {\n            visible: true,\n            position: 'Top',\n            shape: 'Rectangle',\n            textStyle: {\n                fontFamily: 'Segoe UI'\n            }\n        },\n        format: 'n',\n        useGroupingSeparator: true,\n        rangeColorValuePath: 'WinPercentage',\n        equalColorValuePath: 'Winner',\n        leafItemSettings: {\n            labelPath: 'State',\n            fill: '#6699cc',\n            labelStyle: {\n                fontFamily: 'Segoe UI'\n            },\n            border: { color: 'white', width: 0.5 },\n            colorMapping: [\n                {\n                    value: 'Trump', color: '#D84444'\n                },\n                {\n                    value: 'Clinton', color: '#316DB5'\n                }\n            ]\n        },\n    });\n    treemap.appendTo('#container');\n    var mode = new ej2_dropdowns_1.DropDownList({\n        index: 0,\n        placeholder: 'Select legend type',\n        width: '100%',\n        change: function () {\n            treemap.legendSettings.mode = mode.value;\n            if (mode.value === 'Interactive') {\n                if (treemap.legendSettings.orientation === 'Horizontal' || treemap.legendSettings.orientation === 'None') {\n                    treemap.legendSettings.height = '10';\n                    treemap.legendSettings.width = '';\n                }\n                else {\n                    treemap.legendSettings.height = '70%';\n                    treemap.legendSettings.width = '10';\n                }\n            }\n            else {\n                treemap.legendSettings.height = '';\n                treemap.legendSettings.width = '';\n            }\n            treemap.refresh();\n        }\n    });\n    mode.appendTo('#layoutMode');\n    var legendPosition = new ej2_dropdowns_1.DropDownList({\n        index: 0,\n        placeholder: 'Legend Position',\n        width: '100%',\n        change: function () {\n            treemap.legendSettings.position = legendPosition.value;\n            if (legendPosition.value === 'Left' || legendPosition.value === 'Right') {\n                treemap.legendSettings.orientation = 'Vertical';\n                if (treemap.legendSettings.mode === 'Interactive') {\n                    treemap.legendSettings.height = '70%';\n                    treemap.legendSettings.width = '10';\n                }\n                else {\n                    treemap.legendSettings.height = '';\n                    treemap.legendSettings.width = '';\n                }\n            }\n            else if (legendPosition.value === 'Auto') {\n                if (treemap.availableSize.width > treemap.availableSize.height) {\n                    treemap.legendSettings.orientation = 'Vertical';\n                    if (treemap.legendSettings.mode === 'Interactive') {\n                        treemap.legendSettings.height = '70%';\n                        treemap.legendSettings.width = '10';\n                    }\n                    else {\n                        treemap.legendSettings.height = '';\n                        treemap.legendSettings.width = '';\n                    }\n                }\n                else {\n                    treemap.legendSettings.orientation = 'Horizontal';\n                    if (treemap.legendSettings.mode === 'Interactive') {\n                        treemap.legendSettings.height = '10';\n                        treemap.legendSettings.width = '';\n                    }\n                    else {\n                        treemap.legendSettings.height = '';\n                        treemap.legendSettings.width = '';\n                    }\n                }\n            }\n            else {\n                treemap.legendSettings.orientation = 'Horizontal';\n                if (treemap.legendSettings.mode === 'Interactive') {\n                    treemap.legendSettings.height = '10';\n                    treemap.legendSettings.width = '';\n                }\n            }\n            treemap.refresh();\n        }\n    });\n    legendPosition.appendTo('#legendPosition');\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/treemap/election/index.ts?");

/***/ }),

/***/ "./samples/treemap/election/treemap-data/election-data.ts":
/*!****************************************************************!*\
  !*** ./samples/treemap/election/treemap-data/election-data.ts ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.electionData = void 0;\n    exports.electionData = [\n        { State: \"Alabama\", Trump: 62.9, Clinton: 34.6, WinPercentage: 62.9, Winner: \"Trump\", Population: 4780127 },\n        { State: \"Alaska\", Trump: 52.9, Clinton: 37.7, WinPercentage: 52.9, Winner: \"Trump\", Population: 710249 },\n        { State: \"Arkansas\", Trump: 60.6, Clinton: 33.7, WinPercentage: 60.6, Winner: \"Trump\", Population: 2915958 },\n        { State: \"Arizona\", Trump: 49.5, Clinton: 45.4, WinPercentage: 49.5, Winner: \"Trump\", Population: 6392307 },\n        { State: \"California\", Trump: 32.8, Clinton: 61.6, WinPercentage: 61.6, Winner: \"Clinton\", Population: 37252895 },\n        { State: \"Colorado\", Trump: 47.3, Clinton: 44.4, WinPercentage: 47.3, Winner: \"Trump\", Population: 5029324 },\n        { State: \"Connecticut\", Trump: 41.2, Clinton: 54.5, WinPercentage: 54.5, Winner: \"Clinton\", Population: 3574118 },\n        { State: \"Delaware\", Trump: 53.4, Clinton: 41.9, WinPercentage: 53.4, Winner: \"Trump\", Population: 897936 },\n        { State: \"District of Columbia\", Trump: 4.1, Clinton: 92.8, WinPercentage: 92.8, Winner: \"Clinton\", Population: 693972 },\n        { State: \"Florida\", Trump: 49.1, Clinton: 47.8, WinPercentage: 49.1, Winner: \"Trump\", Population: 18804623 },\n        { State: \"Georgia\", Trump: 51.3, Clinton: 45.6, WinPercentage: 51.3, Winner: \"Trump\", Population: 9688681 },\n        { State: \"Hawaii\", Trump: 62.2, Clinton: 30, WinPercentage: 62.2, Winner: \"Trump\", Population: 1360301 },\n        { State: \"Idaho\", Trump: 59.2, Clinton: 27.6, WinPercentage: 59.2, Winner: \"Trump\", Population: 1567652 },\n        { State: \"Illinois\", Trump: 55.4, Clinton: 39.4, WinPercentage: 55.4, Winner: \"Trump\", Population: 12831549 },\n        { State: \"Indiana\", Trump: 57.2, Clinton: 37.9, WinPercentage: 57.2, Winner: \"Trump\", Population: 6484229 },\n        { State: \"Iowa\", Trump: 51.8, Clinton: 42.2, WinPercentage: 51.8, Winner: \"Trump\", Population: 3046869 },\n        { State: \"Kansas\", Trump: 57.2, Clinton: 36.2, WinPercentage: 57.2, Winner: \"Trump\", Population: 2853132, },\n        { State: \"Kentucky\", Trump: 62.5, Clinton: 32.7, WinPercentage: 62.5, Winner: \"Trump\", Population: 4339349 },\n        { State: \"Louisiana\", Trump: 58.1, Clinton: 38.4, WinPercentage: 58.1, Winner: \"Trump\", Population: 4533479 },\n        { State: \"Maine\", Trump: 45.2, Clinton: 47.9, WinPercentage: 47.9, Winner: \"Clinton\", Population: 1328361 },\n        { State: \"Maryland\", Trump: 35.3, Clinton: 60.5, WinPercentage: 60.5, Winner: \"Clinton\", Population: 5773785 },\n        { State: \"Massachusetts\", Trump: 33.5, Clinton: 60.8, WinPercentage: 60.8, Winner: \"Clinton\", Population: 6547817 },\n        { State: \"Michigan\", Trump: 47.6, Clinton: 47.3, WinPercentage: 47.6, Winner: \"Trump\", Population: 9884129 },\n        { State: \"Minnesota\", Trump: 45.4, Clinton: 46.9, WinPercentage: 46.9, Winner: \"Trump\", Population: 5303925 },\n        { State: \"Mississippi\", Trump: 58.3, Clinton: 39.7, WinPercentage: 58.3, Winner: \"Trump\", Population: 2968103 },\n        { State: \"Missouri\", Trump: 57.1, Clinton: 38.0, WinPercentage: 57.1, Winner: \"Trump\", Population: 5988927 },\n        { State: \"Montana\", Trump: 56.5, Clinton: 36.0, WinPercentage: 56.5, Winner: \"Trump\", Population: 989417 },\n        { State: \"Nebraska\", Trump: 60.3, Clinton: 34.0, WinPercentage: 60.3, Winner: \"Trump\", Population: 1826341 },\n        { State: \"Nevada\", Trump: 45.5, Clinton: 47.9, WinPercentage: 47.9, Winner: \"Clinton\", Population: 2700691 },\n        { State: \"New Hampshire\", Trump: 47.2, Clinton: 47.6, WinPercentage: 47.6, Winner: \"Clinton\", Population: 1316466 },\n        { State: \"New Jersey\", Trump: 41.8, Clinton: 55.0, WinPercentage: 55, Winner: \"Clinton\", Population: 8791936 },\n        { State: \"New Mexico\", Trump: 40.0, Clinton: 48.3, WinPercentage: 48.3, Winner: \"Clinton\", Population: 2059192 },\n        { State: \"New York\", Trump: 37.5, Clinton: 58.8, WinPercentage: 58.8, Winner: \"Clinton\", Population: 19378087 },\n        { State: \"North Carolina\", Trump: 50.5, Clinton: 46.7, WinPercentage: 50.5, Winner: \"Trump\", Population: 9535692 },\n        { State: \"North Dakota\", Trump: 64.1, Clinton: 27.8, WinPercentage: 64.1, Winner: \"Trump\", Population: 672591 },\n        { State: \"Ohio\", Trump: 52.1, Clinton: 43.5, WinPercentage: 52.5, Winner: \"Trump\", Population: 11536725 },\n        { State: \"Oklahoma\", Trump: 65.3, Clinton: 28.9, WinPercentage: 65.3, Winner: \"Trump\", Population: 3751616 },\n        { State: \"Oregon\", Trump: 41.1, Clinton: 51.7, WinPercentage: 51.7, Winner: \"Clinton\", Population: 3831073 },\n        { State: \"Pennsylvania\", Trump: 48.8, Clinton: 47.6, WinPercentage: 48.8, Winner: \"Trump\", Population: 12702887 },\n        { State: \"Rhode Island\", Trump: 39.8, Clinton: 55.4, WinPercentage: 55.4, Winner: \"Clinton\", Population: 1052931 },\n        { State: \"South Carolina\", Trump: 54.9, Clinton: 40.8, WinPercentage: 54.9, Winner: \"Trump\", Population: 4625401 },\n        { State: \"South Dakota\", Trump: 61.5, Clinton: 31.7, WinPercentage: 61.5, Winner: \"Trump\", Population: 814191 },\n        { State: \"Tennessee\", Trump: 61.1, Clinton: 34.9, WinPercentage: 61.1, Winner: \"Trump\", Population: 6346275 },\n        { State: \"Texas\", Trump: 52.6, Clinton: 43.4, WinPercentage: 52.6, Winner: \"Trump\", Population: 25146105 },\n        { State: \"Utah\", Trump: 45.9, Clinton: 27.8, WinPercentage: 45.9, Winner: \"Trump\", Population: 2763888, },\n        { State: \"Vermont\", Trump: 39.7, Clinton: 61.1, WinPercentage: 61.1, Winner: \"Clinton\", Population: 625745 },\n        { State: \"Virginia\", Trump: 45.0, Clinton: 49.9, WinPercentage: 49.9, Winner: \"Clinton\", Population: 8001045 },\n        { State: \"Washington\", Trump: 4.1, Clinton: 92.8, WinPercentage: 92.8, Winner: \"Clinton\", Population: 6724543 },\n        { State: \"Wisconsin\", Trump: 68.7, Clinton: 26.5, WinPercentage: 68.7, Winner: \"Trump\", Population: 5687289 },\n        { State: \"West Virginia\", Trump: 47.9, Clinton: 46.9, WinPercentage: 47.9, Winner: \"Clinton\", Population: 1853011 },\n        { State: \"Wyoming\", Trump: 70.1, Clinton: 22.5, WinPercentage: 70.1, Winner: \"Trump\", Population: 583767 }\n    ];\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/treemap/election/treemap-data/election-data.ts?");

/***/ })

/******/ });