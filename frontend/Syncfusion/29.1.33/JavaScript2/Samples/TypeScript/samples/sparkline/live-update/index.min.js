/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/sparkline/live-update/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/sparkline/live-update/index.ts","charts.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/sparkline/live-update/index.ts":
/*!************************************************!*\
  !*** ./samples/sparkline/live-update/index.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-charts/index */ \"./node_modules/@syncfusion/ej2-charts/index.js\"), __webpack_require__(/*! ./theme-color */ \"./samples/sparkline/live-update/theme-color.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, index_1, theme_color_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.sparkload = void 0;\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    var sparkload = function (args) {\n        (0, theme_color_1.loadSparkLineTheme)(args);\n    };\n    exports.sparkload = sparkload;\n    var spark = new index_1.Sparkline({\n        height: '130px',\n        width: '90%', load: exports.sparkload,\n        axisSettings: {\n            minY: 0, maxY: 150\n        },\n        containerArea: {\n            background: 'white',\n            border: {\n                color: '#dcdfe0',\n                width: 2\n            }\n        },\n        border: {\n            color: '#0358a0',\n            width: 1\n        },\n        fill: '#e8f2fc',\n        type: 'Area',\n        valueType: 'Numeric',\n        dataSource: [\n            { x: 0, yval: 50 },\n            { x: 1, yval: 30 },\n            { x: 2, yval: 20 },\n            { x: 3, yval: 30 },\n            { x: 4, yval: 50 },\n            { x: 5, yval: 40 },\n            { x: 6, yval: 20 },\n            { x: 7, yval: 10 },\n            { x: 8, yval: 30 },\n            { x: 9, yval: 10 },\n            { x: 10, yval: 40 },\n            { x: 11, yval: 50 },\n            { x: 12, yval: 10 },\n            { x: 13, yval: 30 },\n            { x: 14, yval: 50 },\n            { x: 15, yval: 20 },\n            { x: 16, yval: 10 },\n            { x: 17, yval: 40 },\n            { x: 18, yval: 30 },\n            { x: 19, yval: 40 }\n        ],\n        xName: 'x', yName: 'yval'\n    });\n    spark.appendTo('#spark-container1');\n    spark.dataSource = spark.dataSource;\n    var temp1 = spark.dataSource.length - 1;\n    function update() {\n        if (spark.element.className.indexOf('e-sparkline') > -1) {\n            var value = ((Math.random() * 100) + 5) % 50;\n            spark.dataSource.push({ x: ++temp1, yval: value });\n            spark.dataSource.shift();\n            spark.refresh();\n            var cpu = document.getElementById('cpu');\n            if (cpu) {\n                cpu.innerHTML = ((value / 150) * 100).toFixed(0) + '% ' + ((value * 3) / 100).toFixed(2) + 'GHz';\n            }\n        }\n    }\n    var time = window.setInterval(update, 500);\n    var spark1 = new index_1.Sparkline({\n        height: '130px',\n        width: '90%', load: exports.sparkload,\n        lineWidth: 1,\n        axisSettings: {\n            minY: 4, maxY: 8\n        },\n        containerArea: {\n            background: 'white',\n            border: {\n                color: '#dcdfe0',\n                width: 2\n            }\n        },\n        border: {\n            color: '#b247c6',\n            width: 1\n        },\n        type: 'Area',\n        fill: '\t#f5e8fc',\n        valueType: 'Numeric',\n        dataSource: [\n            { x: 0, yval: 6.05 },\n            { x: 1, yval: 6.03 },\n            { x: 2, yval: 6.02 },\n            { x: 3, yval: 6.07 },\n            { x: 4, yval: 6.05 },\n            { x: 5, yval: 6.09 },\n            { x: 6, yval: 6.08 },\n            { x: 7, yval: 6.01 },\n            { x: 8, yval: 6.03 },\n            { x: 9, yval: 6.01 },\n            { x: 10, yval: 6.07 },\n            { x: 11, yval: 6.05 },\n            { x: 12, yval: 6.01 },\n            { x: 13, yval: 6.06 },\n            { x: 14, yval: 6.05 },\n            { x: 15, yval: 6.03 },\n            { x: 16, yval: 6.01 },\n            { x: 17, yval: 6.09 },\n            { x: 18, yval: 6.06 },\n            { x: 19, yval: 6.05 }\n        ],\n        xName: 'x', yName: 'yval'\n    });\n    spark1.appendTo('#spark-container2');\n    spark1.dataSource = spark1.dataSource;\n    var temp2 = spark1.dataSource.length - 1;\n    function update1() {\n        if (spark1.element.className.indexOf('e-sparkline') > -1) {\n            var value = Math.random();\n            if (value > 0.6) {\n                value = 6 + (value / 10);\n            }\n            else {\n                value = 6 - (value / 10);\n            }\n            spark1.dataSource.push({ x: ++temp2, yval: value });\n            spark1.dataSource.shift();\n            spark1.refresh();\n            var memory = document.getElementById('memory');\n            var gb = parseFloat(value.toString().replace('0', '')).toFixed(1);\n            if (memory) {\n                memory.innerHTML = gb + '/15.8 GB (' + ((value / 15.8) * 100).toFixed(0) + '%)';\n            }\n        }\n    }\n    var time1 = window.setInterval(update1, 500);\n    var spark2 = new index_1.Sparkline({\n        height: '130px',\n        width: '90%', load: exports.sparkload,\n        lineWidth: 1,\n        axisSettings: {\n            minY: 0, maxY: 130\n        },\n        containerArea: {\n            background: 'white',\n            border: {\n                color: '#dcdfe0',\n                width: 2\n            }\n        },\n        border: {\n            color: '#27ad66',\n            width: 1\n        },\n        type: 'Area',\n        fill: '#e0f9d1',\n        valueType: 'Numeric',\n        dataSource: [\n            { x: 0, yval: 50 },\n            { x: 1, yval: 30 },\n            { x: 2, yval: 20 },\n            { x: 3, yval: 70 },\n            { x: 4, yval: 50 },\n            { x: 5, yval: 20 },\n            { x: 6, yval: 80 },\n            { x: 7, yval: 10 },\n            { x: 8, yval: 30 },\n            { x: 9, yval: 10 },\n            { x: 10, yval: 70 },\n            { x: 11, yval: 50 },\n            { x: 12, yval: 10 },\n            { x: 13, yval: 60 },\n            { x: 14, yval: 50 },\n            { x: 15, yval: 30 },\n            { x: 16, yval: 10 },\n            { x: 17, yval: 20 },\n            { x: 18, yval: 60 },\n            { x: 19, yval: 50 }\n        ],\n        xName: 'x', yName: 'yval'\n    });\n    spark2.appendTo('#spark-container3');\n    spark2.dataSource = spark2.dataSource;\n    var temp3 = spark2.dataSource.length - 1;\n    function update2() {\n        if (spark2.element.className.indexOf('e-sparkline') > -1) {\n            var value = ((Math.random() * 100) + 5) % 80;\n            spark2.dataSource.push({ x: ++temp3, yval: value });\n            spark2.dataSource.shift();\n            spark2.refresh();\n            var disk = document.getElementById('disk');\n            if (disk) {\n                disk.innerHTML = value.toFixed(0) + '%';\n            }\n        }\n    }\n    var time2 = window.setInterval(update2, 500);\n    var spark3 = new index_1.Sparkline({\n        height: '130px',\n        width: '90%', load: exports.sparkload,\n        lineWidth: 1,\n        axisSettings: {\n            minY: 0, maxY: 120\n        },\n        containerArea: {\n            background: 'white',\n            border: {\n                color: '#dcdfe0',\n                width: 2\n            }\n        },\n        border: {\n            color: '#AA907A',\n            width: 1\n        },\n        type: 'Area',\n        fill: '#F2D8C7',\n        valueType: 'Numeric',\n        dataSource: [\n            { x: 0, yval: 50 },\n            { x: 1, yval: 30 },\n            { x: 2, yval: 20 },\n            { x: 3, yval: 70 },\n            { x: 4, yval: 50 },\n            { x: 5, yval: 20 },\n            { x: 6, yval: 80 },\n            { x: 7, yval: 10 },\n            { x: 8, yval: 30 },\n            { x: 9, yval: 10 },\n            { x: 10, yval: 70 },\n            { x: 11, yval: 50 },\n            { x: 12, yval: 10 },\n            { x: 13, yval: 60 },\n            { x: 14, yval: 50 },\n            { x: 15, yval: 30 },\n            { x: 16, yval: 10 },\n            { x: 17, yval: 20 },\n            { x: 18, yval: 60 },\n            { x: 19, yval: 50 }\n        ],\n        xName: 'x', yName: 'yval'\n    });\n    spark3.appendTo('#spark-container4');\n    spark3.dataSource = spark3.dataSource;\n    var temp4 = spark3.dataSource.length - 1;\n    function update4() {\n        if (spark3.element.className.indexOf('e-sparkline') > -1) {\n            var value = ((Math.random() * 100) + 5) % 80;\n            spark3.dataSource.push({ x: ++temp3, yval: value });\n            spark3.dataSource.shift();\n            spark3.refresh();\n            var net = document.getElementById('net');\n            if (net) {\n                net.innerHTML = 'R: ' + value.toFixed(0) + 'Kbps';\n            }\n        }\n    }\n    var time4 = window.setInterval(update4, 500);\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/sparkline/live-update/index.ts?");

/***/ }),

/***/ "./samples/sparkline/live-update/theme-color.ts":
/*!******************************************************!*\
  !*** ./samples/sparkline/live-update/theme-color.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.loadSparkLineTheme = void 0;\n    function loadSparkLineTheme(args) {\n        var theme = location.hash.split('/')[1];\n        theme = theme ? theme : 'Tailwind3';\n        args.sparkline.theme = (theme.charAt(0).toUpperCase() + theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    exports.loadSparkLineTheme = loadSparkLineTheme;\n    ;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/sparkline/live-update/theme-color.ts?");

/***/ })

/******/ });