/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/diagram/bpmn-editor/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/diagram/bpmn-editor/index.ts","diagrams.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/diagram/bpmn-editor/index.ts":
/*!**********************************************!*\
  !*** ./samples/diagram/bpmn-editor/index.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-diagrams */ \"./node_modules/@syncfusion/ej2-diagrams/index.js\"), __webpack_require__(/*! ./script/diagram-common */ \"./samples/diagram/bpmn-editor/script/diagram-common.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_diagrams_1, diagram_common_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_diagrams_1.Diagram.Inject(ej2_diagrams_1.BpmnDiagrams, ej2_diagrams_1.UndoRedo, ej2_diagrams_1.DiagramContextMenu);\n    ej2_diagrams_1.SymbolPalette.Inject(ej2_diagrams_1.BpmnDiagrams);\n    var diagram;\n    var createBpmnEventNode = function (id, offsetX, offsetY, eventType, annotationContent) {\n        if (annotationContent === void 0) { annotationContent = ''; }\n        var node = {\n            id: id,\n            width: 40,\n            height: 40,\n            offsetX: offsetX,\n            offsetY: offsetY,\n            shape: { type: 'Bpmn', shape: 'Event', event: { event: eventType } }\n        };\n        if (annotationContent) {\n            node.annotations = [{\n                    id: \"\".concat(id, \"Label\"),\n                    content: annotationContent,\n                    style: { fill: 'white', color: 'black' },\n                    verticalAlignment: 'Top',\n                    margin: { top: 20 }\n                }];\n        }\n        return node;\n    };\n    var createBpmnEventNodeWithMargin = function (id, marginX, marginY, eventType, trigger) {\n        var node = {\n            id: id,\n            width: 30,\n            height: 30,\n            shape: { type: 'Bpmn', shape: 'Event', event: { event: eventType, trigger: trigger } },\n            margin: { left: marginX, top: marginY }\n        };\n        return node;\n    };\n    var createBpmnActivity = function (id, fill, content, left, top, width, height, taskType, loop, compensation) {\n        if (taskType === void 0) { taskType = 'Service'; }\n        return ({\n            id: id,\n            style: { fill: fill },\n            width: width,\n            height: height,\n            shape: {\n                type: 'Bpmn', shape: 'Activity',\n                activity: { activity: 'Task', task: { type: taskType, loop: loop, compensation: compensation } },\n            },\n            annotations: [{\n                    id: \"\".concat(id, \"Label2\"), content: content, offset: { x: 0.5, y: 0.6 },\n                    style: { color: 'white' }\n                }],\n            margin: { left: left, top: top },\n        });\n    };\n    var nodes = [\n        createBpmnEventNode('start', 35, 230, 'Start'),\n        createBpmnEventNode('hazardEnd', 305, 420, 'End', 'Hazard'),\n        createBpmnEventNode('cancelledEnd', 545, 420, 'End', 'Cancelled'),\n        createBpmnEventNode('end', 665, 230, 'End'),\n        createBpmnEventNodeWithMargin('processesStart', 40, 80, 'Start'),\n        createBpmnActivity('service', '#6FAAB0', 'Book hotel', 110, 20, 95, 70, 'Service', 'ParallelMultiInstance'),\n        createBpmnEventNodeWithMargin('compensation', 170, 100, 'Intermediate', 'Compensation'),\n        createBpmnActivity('processesTask', '#F6B53F', 'Charge credit card', 290, 20, 95, 70, 'Service'),\n        createBpmnEventNodeWithMargin('error', 350, 100, 'Intermediate', 'Error'),\n        createBpmnEventNodeWithMargin('processesEnd', 440, 80, 'End'),\n        createBpmnActivity('user', '#E94649', 'Cancel hotel reservation', 240, 160, 90, 80, 'User', 'None', true),\n        createBpmnEventNodeWithMargin('subProcessesEnd', 440, 210, 'End'),\n        {\n            id: 'subProcess',\n            width: 520,\n            height: 250,\n            offsetX: 355,\n            offsetY: 230,\n            constraints: ej2_diagrams_1.NodeConstraints.Default | ej2_diagrams_1.NodeConstraints.AllowDrop,\n            shape: {\n                shape: 'Activity', type: 'Bpmn',\n                activity: {\n                    activity: 'SubProcess', subProcess: {\n                        type: 'Transaction', collapsed: false,\n                        processes: ['processesStart', 'service', 'compensation', 'processesTask',\n                            'error', 'processesEnd', 'user', 'subProcessesEnd']\n                    }\n                }\n            }\n        },\n    ];\n    var createConnector = function (id, sourceID, targetID, annotationContent, sourcePortID, additionalProps) {\n        if (annotationContent === void 0) { annotationContent = \"\"; }\n        if (sourcePortID === void 0) { sourcePortID = \"\"; }\n        if (additionalProps === void 0) { additionalProps = {}; }\n        return (__assign(__assign({ id: id, sourceID: sourceID, targetID: targetID, sourcePortID: sourcePortID, type: \"Orthogonal\" }, (annotationContent && {\n            annotations: [{\n                    id: \"\".concat(id, \"Label\"),\n                    content: annotationContent,\n                    offset: 0.50,\n                    style: { fill: 'white' }\n                }]\n        })), additionalProps));\n    };\n    var connectors = [\n        createConnector('connector1', 'start', 'subProcess'),\n        createConnector('connector2', 'subProcess', 'end', '', 'success'),\n        createConnector('connector3', 'subProcess', 'hazardEnd', 'Booking system failure', 'failure', {\n            segments: [{ type: 'Orthogonal', length: 50, direction: 'Bottom' }]\n        }),\n        createConnector('connector4', 'subProcess', 'cancelledEnd', '', 'cancel', {\n            segments: [{ type: 'Orthogonal', length: 50, direction: 'Bottom' }]\n        }),\n        createConnector('connector5', 'processesStart', 'service'),\n        createConnector('connector6', 'service', 'processesTask'),\n        createConnector('connector7', 'processesTask', 'processesEnd'),\n        createConnector('connector8', 'compensation', 'user', '', '', {\n            shape: { type: 'Bpmn', flow: 'Association', association: 'Directional' },\n            style: { strokeDashArray: '2,2' },\n            segments: [{ type: 'Orthogonal', length: 30, direction: 'Bottom' }, { type: 'Orthogonal', length: 80, direction: 'Right' }]\n        }),\n        createConnector('connector9', 'error', 'subProcessesEnd', 'Cannot charge card', '', {\n            segments: [{ type: 'Orthogonal', length: 50, direction: 'Bottom' }]\n        })\n    ];\n    var getShapeDetails = function (type, subType) {\n        switch (type) {\n            case 'Event':\n                return { event: { event: subType } };\n            case 'Activity':\n                if (subType === 'Task') {\n                    return { activity: { activity: subType } };\n                }\n                else if (subType === 'Transaction') {\n                    return {\n                        activity: {\n                            activity: 'SubProcess',\n                            subProcess: {\n                                type: subType,\n                                transaction: {\n                                    cancel: { visible: false },\n                                    failure: { visible: false },\n                                    success: { visible: false }\n                                }\n                            }\n                        }\n                    };\n                }\n                else if (subType === 'Service') {\n                    return { activity: { activity: 'Task', task: { type: subType } } };\n                }\n                break;\n            case 'Gateway':\n                return { gateway: { type: 'Exclusive' } };\n            case 'DataObject':\n                return { dataObject: { collection: false, type: 'None' } };\n            default:\n                return {};\n        }\n    };\n    var createBpmnShape = function (id, width, height, type, subType) { return ({\n        id: id,\n        width: width,\n        height: height,\n        shape: __assign({ type: 'Bpmn', shape: type }, getShapeDetails(type, subType))\n    }); };\n    var bpmnShapes = [\n        createBpmnShape('Start', 35, 35, 'Event', 'Start'),\n        createBpmnShape('NonInterruptingIntermediate', 35, 35, 'Event', 'NonInterruptingIntermediate'),\n        createBpmnShape('End', 35, 35, 'Event', 'End'),\n        createBpmnShape('Task', 35, 35, 'Activity', 'Task'),\n        createBpmnShape('Transaction', 35, 35, 'Activity', 'Transaction'),\n        createBpmnShape('Task_Service', 35, 35, 'Activity', 'Service'),\n        createBpmnShape('Gateway', 35, 35, 'Gateway', ''),\n        createBpmnShape('DataObject', 35, 35, 'DataObject', ''),\n        {\n            id: 'subProcess',\n            width: 520,\n            height: 250,\n            offsetX: 355,\n            offsetY: 230,\n            constraints: ej2_diagrams_1.NodeConstraints.Default | ej2_diagrams_1.NodeConstraints.AllowDrop,\n            shape: {\n                shape: 'Activity',\n                type: 'Bpmn',\n                activity: {\n                    activity: 'SubProcess',\n                    subProcess: {\n                        type: 'Transaction',\n                        collapsed: false,\n                        processes: [],\n                        transaction: {\n                            cancel: { visible: false },\n                            failure: { visible: false },\n                            success: { visible: false }\n                        }\n                    }\n                }\n            }\n        },\n    ];\n    var baseConnector = {\n        sourcePoint: { x: 0, y: 0 },\n        targetPoint: { x: 40, y: 40 },\n        targetDecorator: { style: { strokeColor: '#757575', fill: '#757575' }, shape: \"Arrow\" },\n        style: { strokeColor: '#757575', strokeWidth: 2 }\n    };\n    var connectorSymbols = [\n        __assign(__assign({}, baseConnector), { id: 'Link1', type: 'Orthogonal' }),\n        __assign(__assign({}, baseConnector), { id: 'Link2', type: 'Orthogonal', style: __assign(__assign({}, baseConnector.style), { strokeDashArray: '4 4' }) }),\n        __assign(__assign({}, baseConnector), { id: 'Link3', type: 'Straight' }),\n        {\n            id: 'link4',\n            sourcePoint: { x: 0, y: 0 },\n            targetPoint: { x: 40, y: 40 },\n            type: 'Orthogonal',\n            targetDecorator: { style: { strokeColor: '#757575', fill: '#757575' } },\n            shape: { type: 'Bpmn', flow: 'Association', association: 'Directional' },\n            style: { strokeDashArray: '2,2', strokeColor: '#757575' },\n        },\n    ];\n    var contextMenu = {\n        show: true,\n        items: [\n            {\n                text: 'Ad-Hoc',\n                id: 'Adhoc',\n                items: [\n                    { text: 'None', iconCss: 'e-adhocs e-bpmn-event e-bpmn-icons e-None', id: 'AdhocNone' },\n                    { iconCss: 'e-adhocs e-bpmn-icons e-adhoc', text: 'Ad-Hoc', id: 'AdhocAdhoc' }\n                ]\n            },\n            {\n                text: 'Loop',\n                id: 'Loop',\n                items: [\n                    { text: 'None', iconCss: 'e-loop e-bpmn-icons e-None', id: 'LoopNone' },\n                    { text: 'Standard', iconCss: 'e-loop e-bpmn-icons e-Loop', id: 'Standard' },\n                    { text: 'Parallel Multi-Instance', iconCss: 'e-loop e-bpmn-icons e-ParallelMI', id: 'ParallelMultiInstance' },\n                    { text: 'Sequence Multi-Instance', iconCss: 'e-loop e-bpmn-icons e-SequentialMI', id: 'SequenceMultiInstance' }\n                ]\n            },\n            {\n                text: 'Compensation',\n                id: 'taskCompensation',\n                items: [\n                    { text: 'None', iconCss: 'e-compensation e-bpmn-icons e-None', id: 'CompensationNone' },\n                    { iconCss: 'e-compensation e-bpmn-icons e-Compensation', text: 'Compensation', id: 'CompensationCompensation' }\n                ]\n            },\n            {\n                text: 'Activity-Type',\n                id: 'Activity-Type',\n                items: [\n                    { text: 'Collapsed sub-process', iconCss: 'e-bpmn-icons e-SubProcess', id: 'CollapsedSubProcess' },\n                    { iconCss: 'e-bpmn-icons e-Task', text: 'Expanded sub-process', id: 'ExpandedSubProcess' }\n                ]\n            },\n            {\n                text: 'Boundry',\n                id: 'Boundry',\n                items: [\n                    { text: 'Default', iconCss: 'e-boundry e-bpmn-icons e-Default', id: 'Default' },\n                    { text: 'Call', iconCss: 'e-boundry e-bpmn-icons e-Call', id: 'BoundryCall' },\n                    { text: 'Event', iconCss: 'e-boundry e-bpmn-icons e-Event', id: 'BoundryEvent' }\n                ]\n            },\n            {\n                text: 'Data Object',\n                id: 'DataObject',\n                items: [\n                    { text: 'None', iconCss: 'e-data e-bpmn-icons e-None', id: 'DataObjectNone' },\n                    { text: 'Input', iconCss: 'e-data e-bpmn-icons e-DataInput', id: 'Input' },\n                    { text: 'Output', iconCss: 'e-data e-bpmn-icons e-DataOutput', id: 'Output' }\n                ]\n            },\n            {\n                text: 'Collection',\n                id: 'collection',\n                items: [\n                    { text: 'None', iconCss: 'e-collection e-bpmn-icons e-None', id: 'collectionNone' },\n                    { text: 'Collection', iconCss: 'e-collection e-bpmn-icons e-ParallelMI', id: 'Collectioncollection' }\n                ]\n            },\n            {\n                text: 'Call',\n                id: 'DeftCall',\n                items: [\n                    { text: 'None', iconCss: 'e-call e-bpmn-icons e-None', id: 'CallNone' },\n                    { text: 'Call', iconCss: 'e-call e-bpmn-icons e-CallActivity', id: 'CallCall' }\n                ]\n            },\n            {\n                text: 'Trigger Result',\n                id: 'TriggerResult',\n                items: [\n                    { text: 'None', id: 'TriggerNone', iconCss: 'e-trigger e-bpmn-icons e-None' },\n                    { text: 'Message', id: 'Message', iconCss: 'e-trigger e-bpmn-icons e-InMessage' },\n                    { text: 'Multiple', id: 'Multiple', iconCss: 'e-trigger e-bpmn-icons e-InMultiple' },\n                    { text: 'Parallel', id: 'Parallel', iconCss: 'e-trigger e-bpmn-icons e-InParallelMultiple' },\n                    { text: 'Signal', id: 'Signal', iconCss: 'e-trigger e-bpmn-icons e-InSignal' },\n                    { text: 'Timer', id: 'Timer', iconCss: 'e-trigger e-bpmn-icons e-InTimer' },\n                    { text: 'Cancel', id: 'Cancel', iconCss: 'e-trigger e-bpmn-icons e-CancelEnd' },\n                    { text: 'Escalation', id: 'Escalation', iconCss: 'e-trigger e-bpmn-icons e-InEscalation' },\n                    { text: 'Error', id: 'Error', iconCss: 'e-trigger e-bpmn-icons e-InError' },\n                    { text: 'Compensation', id: 'triggerCompensation', iconCss: 'e-trigger e-bpmn-icons e-InCompensation' },\n                    { text: 'Terminate', id: 'Terminate', iconCss: 'e-trigger e-bpmn-icons e-TerminateEnd' },\n                    { text: 'Conditional', id: 'Conditional', iconCss: 'e-trigger e-bpmn-icons e-InConditional' },\n                    { text: 'Link', id: 'Link', iconCss: 'e-trigger e-bpmn-icons e-ThrowLinkin' }\n                ]\n            },\n            {\n                text: 'Event Type',\n                id: 'EventType',\n                items: [\n                    { text: 'Start', id: 'Start', iconCss: 'e-event e-bpmn-icons e-NoneStart' },\n                    { text: 'Intermediate', id: 'Intermediate', iconCss: 'e-event e-bpmn-icons e-InterruptingNone' },\n                    { text: 'NonInterruptingStart', id: 'NonInterruptingStart', iconCss: 'e-event e-bpmn-icons e-Noninterruptingstart' },\n                    { text: 'ThrowingIntermediate', id: 'ThrowingIntermediate', iconCss: 'e-event e-bpmn-icons e-ThrowingIntermediate' },\n                    { text: 'NonInterruptingIntermediate', id: 'NonInterruptingIntermediate', iconCss: 'e-event e-bpmn-icons e-NoninterruptingIntermediate' },\n                    { text: 'End', id: 'End', iconCss: 'e-event e-bpmn-icons e-NoneEnd' }\n                ]\n            },\n            {\n                text: 'Task Type',\n                id: 'TaskType',\n                items: [\n                    { text: 'None', id: 'TaskNone', iconCss: 'e-task e-bpmn-icons e-None' },\n                    { text: 'Service', id: 'Service', iconCss: 'e-task e-bpmn-icons e-ServiceTask' },\n                    { text: 'BusinessRule', id: 'BusinessRule', iconCss: 'e-task e-bpmn-icons e-BusinessRule' },\n                    { text: 'InstantiatingReceive', id: 'InstantiatingReceive', iconCss: 'e-task e-bpmn-icons e-InstantiatingReceive' },\n                    { text: 'Manual', id: 'Manual', iconCss: 'e-task e-bpmn-icons e-ManualCall' },\n                    { text: 'Receive', id: 'Receive', iconCss: 'e-task e-bpmn-icons e-InMessage' },\n                    { text: 'Script', id: 'Script', iconCss: 'e-task e-bpmn-icons e-ScriptCall' },\n                    { text: 'Send', id: 'Send', iconCss: 'e-task e-bpmn-icons e-OutMessage' },\n                    { text: 'User', id: 'User', iconCss: 'e-task e-bpmn-icons e-UserCall' },\n                ]\n            },\n            {\n                text: 'GateWay',\n                id: 'GateWay',\n                iconCss: 'e-bpmn-icons e-Gateway',\n                items: [\n                    { text: 'None', id: 'GatewayNone', iconCss: 'e-gate e-bpmn-icons e-None' },\n                    { text: 'Exclusive', iconCss: 'e-gate e-bpmn-icons e-ExclusiveGatewayWithMarker', id: 'Exclusive' },\n                    { text: 'Inclusive', iconCss: 'e-gate e-bpmn-icons e-InclusiveGateway', id: 'Inclusive' },\n                    { text: 'Parallel', iconCss: 'e-gate e-bpmn-icons e-ParallelGateway', id: 'GatewayParallel' },\n                    { text: 'Complex', iconCss: 'e-gate e-bpmn-icons e-ComplexGateway', id: 'Complex' },\n                    { text: 'EventBased', iconCss: 'e-gate e-bpmn-icons e-EventBasedGateway', id: 'EventBased' },\n                    { text: 'ExclusiveEventBased', iconCss: 'e-gate e-bpmn-icons e-ExclusiveEventBased', id: 'ExclusiveEventBased' },\n                    { text: 'ParallelEventBased', iconCss: 'e-gate e-bpmn-icons e-ParallelEventBasedGatewaytostart', id: 'ParallelEventBased' }\n                ]\n            }\n        ],\n        showCustomMenuOnly: true,\n    };\n    function dragEnter(args) {\n        var node = args.element;\n        if (node instanceof ej2_diagrams_1.Node) {\n            var bpmnShape = node.shape;\n            if (!bpmnShape.activity.subProcess.collapsed) {\n                var transaction = bpmnShape.activity.subProcess.transaction;\n                transaction.cancel.visible = true;\n                transaction.failure.visible = true;\n                transaction.success.visible = true;\n            }\n            else {\n                var ratio = 100 / node.width;\n                var oldWidth = node.width;\n                var oldHeight = node.height;\n                node.width = 100;\n                node.height *= ratio;\n                node.offsetX += (node.width - oldWidth) / 2;\n                node.offsetY += (node.height - oldHeight) / 2;\n            }\n        }\n    }\n    function contextMenuClick(args) {\n        if (diagram.selectedItems.nodes.length > 0) {\n            var bpmnShape = diagram.selectedItems.nodes[0].shape;\n            if (args.item.iconCss) {\n                if (args.item.iconCss.indexOf('e-adhocs') > -1) {\n                    bpmnShape.activity.subProcess.adhoc = args.item.id === 'AdhocNone' ? false : true;\n                }\n                if (args.item.iconCss.indexOf('e-event') > -1) {\n                    bpmnShape.event.event = args.item.id;\n                }\n                if (args.item.iconCss.indexOf('e-trigger') > -1) {\n                    bpmnShape.event.trigger = args.item.text;\n                }\n                if (args.item.iconCss.indexOf('e-loop') > -1) {\n                    var loop = (args.item.id === 'LoopNone') ? 'None' : args.item.id;\n                    if (bpmnShape.activity.activity === 'Task') {\n                        bpmnShape.activity.task.loop = loop;\n                    }\n                    if (bpmnShape.activity.activity === 'SubProcess') {\n                        bpmnShape.activity.subProcess.loop = loop;\n                    }\n                }\n                if (args.item.iconCss.indexOf('e-compensation') > -1) {\n                    var compensation = (args.item.id === 'CompensationNone') ? false : true;\n                    if (bpmnShape.activity.activity === 'Task') {\n                        bpmnShape.activity.task.compensation = compensation;\n                    }\n                    if (bpmnShape.activity.activity === 'SubProcess') {\n                        bpmnShape.activity.subProcess.compensation = compensation;\n                    }\n                }\n                if (args.item.iconCss.indexOf('e-call') > -1) {\n                    var compensation = (args.item.id === 'CallNone') ? false : true;\n                    if (bpmnShape.activity.activity === 'Task') {\n                        bpmnShape.activity.task.call = compensation;\n                    }\n                }\n                if (args.item.iconCss.indexOf('e-boundry') > -1) {\n                    var call = args.item.id;\n                    if (args.item.id !== 'Default') {\n                        call = (args.item.id === 'BoundryEvent') ? 'Event' : 'Call';\n                    }\n                    bpmnShape.activity.subProcess.boundary = call;\n                }\n                if (args.item.iconCss.indexOf('e-data') > -1) {\n                    var call = args.item.id === 'DataObjectNone' ? 'None' : args.item.id;\n                    bpmnShape.dataObject.type = call;\n                }\n                if (args.item.iconCss.indexOf('e-collection') > -1) {\n                    var call = (args.item.id === 'Collectioncollection') ? true : false;\n                    bpmnShape.dataObject.collection = call;\n                }\n                if (args.item.iconCss.indexOf('e-task') > -1) {\n                    var task = args.item.id === 'TaskNone' ? 'None' : args.item.id;\n                    if (bpmnShape.activity.activity === 'Task') {\n                        bpmnShape.activity.task.type = task;\n                    }\n                }\n                if (args.item.iconCss.indexOf('e-gate') > -1) {\n                    var task = args.item.id.replace('Gateway', '');\n                    if (bpmnShape.shape === 'Gateway') {\n                        bpmnShape.gateway.type = task;\n                    }\n                }\n            }\n            if (args.item.id === 'CollapsedSubProcess' || args.item.id === 'ExpandedSubProcess') {\n                if (args.item.id === 'ExpandedSubProcess') {\n                    bpmnShape.activity.activity = 'SubProcess';\n                    bpmnShape.activity.subProcess.collapsed = false;\n                }\n                else {\n                    bpmnShape.activity.activity = 'SubProcess';\n                    bpmnShape.activity.subProcess.collapsed = true;\n                }\n            }\n            diagram.dataBind();\n        }\n    }\n    function getSymbolDefaults(symbol) {\n        symbol.style.strokeColor = '#757575';\n    }\n    function contextMenuOpen(args) {\n        var hiddenId = [];\n        if (args.element.className !== 'e-menu-parent e-ul ') {\n            hiddenId = ['Adhoc', 'Loop', 'taskCompensation', 'Activity-Type', 'Boundry', 'DataObject',\n                'collection', 'DeftCall', 'TriggerResult', 'EventType', 'TaskType', 'GateWay'];\n        }\n        if (diagram.selectedItems.nodes.length) {\n            for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var bpmnShape = diagram.selectedItems.nodes[0].shape;\n                if (bpmnShape.shape !== 'DataObject' && bpmnShape.shape !== 'Gateway') {\n                    if (item.text === 'Ad-Hoc') {\n                        if (bpmnShape.activity.activity === 'SubProcess') {\n                            hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                        }\n                    }\n                    if (item.text === 'Loop' || item.text === 'Compensation' || item.text === 'Activity-Type') {\n                        if (bpmnShape.shape === 'Activity') {\n                            hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                        }\n                    }\n                    if (item.text === 'Boundry') {\n                        if (bpmnShape.activity.activity === 'SubProcess') {\n                            hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                        }\n                    }\n                }\n                if (item.text === 'Data Object') {\n                    if (bpmnShape.shape === 'DataObject') {\n                        hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                    }\n                }\n                if (item.text === 'Collection') {\n                    if (bpmnShape.shape === 'DataObject') {\n                        hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                    }\n                }\n                if (item.text === 'Call') {\n                    if (bpmnShape.shape === 'Activity' && bpmnShape.activity.activity === 'Task') {\n                        hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                    }\n                }\n                if (item.text === 'Trigger Result') {\n                    if ((bpmnShape.shape === 'Event')) {\n                        hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                    }\n                }\n                if (item.text === 'Event Type') {\n                    if ((bpmnShape.shape === 'Event')) {\n                        hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                    }\n                }\n                if (item.text === 'Task Type') {\n                    if ((bpmnShape.shape === 'Activity')\n                        && (bpmnShape.activity.activity === 'Task')) {\n                        hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                    }\n                }\n                if (item.text === 'GateWay') {\n                    if ((bpmnShape.shape === 'Gateway')) {\n                        hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                    }\n                }\n                if (args.parentItem && args.parentItem.id === 'TriggerResult' && bpmnShape.shape === 'Event') {\n                    if (item.text !== 'None' && (item.text === bpmnShape.event.event || item.text === bpmnShape.event.trigger)) {\n                        hiddenId.push(item.id);\n                    }\n                    if (bpmnShape.event.event === 'Start') {\n                        if (item.text === 'Cancel' || item.text === 'Terminate' || item.text === 'Link') {\n                            hiddenId.push(item.id);\n                        }\n                    }\n                    if (bpmnShape.event.event === 'NonInterruptingStart' || item.text === 'Link') {\n                        if (item.text === 'Cancel' || item.text === 'Terminate' || item.text === 'Compensation' ||\n                            item.text === 'Error' || item.text === 'None') {\n                            hiddenId.push(item.id);\n                        }\n                    }\n                    if (bpmnShape.event.event === 'Intermediate') {\n                        if (item.text === 'Terminate') {\n                            hiddenId.push(item.id);\n                        }\n                    }\n                    if (bpmnShape.event.event === 'NonInterruptingIntermediate') {\n                        if (item.text === 'Cancel' || item.text === 'Terminate' || item.text === 'Compensation' ||\n                            item.text === 'Error' || item.text === 'None' || item.text === 'Link') {\n                            hiddenId.push(item.id);\n                        }\n                    }\n                    if (bpmnShape.event.event === 'ThrowingIntermediate') {\n                        if (item.text === 'Cancel' || item.text === 'Terminate' || item.text === 'Timer' || item.text === 'Error' ||\n                            item.text === 'None' || item.text === 'Pareller' || item.text === 'Conditional') {\n                            hiddenId.push(item.id);\n                        }\n                    }\n                    if (bpmnShape.event.event === 'End') {\n                        if (item.text === 'Parallel' || item.text === 'Timer' || item.text === 'Conditional' || item.text === 'Link') {\n                            hiddenId.push(item.id);\n                        }\n                    }\n                }\n                if (args.parentItem && args.parentItem.id === 'EventType' && bpmnShape.shape === 'Event') {\n                    if (item.text === bpmnShape.event.event) {\n                        hiddenId.push(item.id);\n                    }\n                }\n            }\n        }\n        args.hiddenItems = hiddenId;\n    }\n    diagram = new ej2_diagrams_1.Diagram({\n        width: '100%', height: '445px', nodes: nodes, connectors: connectors,\n        contextMenuSettings: contextMenu,\n        contextMenuOpen: contextMenuOpen,\n        contextMenuClick: contextMenuClick,\n        snapSettings: { constraints: 0 },\n        dragEnter: dragEnter\n    });\n    diagram.appendTo('#diagram');\n    diagram.fitToPage({ mode: 'Width' });\n    var palette = new ej2_diagrams_1.SymbolPalette({\n        expandMode: 'Multiple', symbolMargin: { left: 15, right: 15, top: 15, bottom: 15 }, symbolHeight: 60, symbolWidth: 60,\n        palettes: [\n            { id: 'Bpmn', expanded: true, symbols: bpmnShapes, iconCss: 'shapes', title: 'BPMN Shapes' },\n            { id: 'Connector', expanded: true, symbols: connectorSymbols, iconCss: 'shapes', title: 'Connectors' },\n        ],\n        width: '100%', height: '471px', getNodeDefaults: getSymbolDefaults\n    });\n    palette.appendTo('#symbolpalette');\n    (0, diagram_common_1.addEvents)();\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/diagram/bpmn-editor/index.ts?");

/***/ }),

/***/ "./samples/diagram/bpmn-editor/script/diagram-common.ts":
/*!**************************************************************!*\
  !*** ./samples/diagram/bpmn-editor/script/diagram-common.ts ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.openPalette = exports.addEvents = void 0;\n    var isMobile;\n    function addEvents() {\n        isMobile = window.matchMedia('(max-width:550px)').matches;\n        if (isMobile) {\n            var paletteIcon = document.getElementById('palette-icon');\n            if (paletteIcon) {\n                paletteIcon.addEventListener('click', openPalette, false);\n            }\n        }\n    }\n    exports.addEvents = addEvents;\n    function openPalette() {\n        var paletteSpace = document.getElementById('palette-space');\n        isMobile = window.matchMedia('(max-width:550px)').matches;\n        if (isMobile) {\n            if (!paletteSpace.classList.contains('sb-mobile-palette-open')) {\n                paletteSpace.classList.add('sb-mobile-palette-open');\n            }\n            else {\n                paletteSpace.classList.remove('sb-mobile-palette-open');\n            }\n        }\n    }\n    exports.openPalette = openPalette;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/diagram/bpmn-editor/script/diagram-common.ts?");

/***/ })

/******/ });