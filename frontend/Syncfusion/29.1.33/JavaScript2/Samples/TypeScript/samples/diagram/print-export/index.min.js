/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/diagram/print-export/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/diagram/print-export/index.ts","diagrams.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/diagram/print-export/index.ts":
/*!***********************************************!*\
  !*** ./samples/diagram/print-export/index.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-diagrams */ \"./node_modules/@syncfusion/ej2-diagrams/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\"), __webpack_require__(/*! @syncfusion/ej2-splitbuttons */ \"./node_modules/@syncfusion/ej2-splitbuttons/index.js\"), __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_diagrams_1, ej2_buttons_1, ej2_splitbuttons_1, ej2_navigations_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_diagrams_1.Diagram.Inject(ej2_diagrams_1.PrintAndExport);\n    var diagram;\n    var checkBoxObj;\n    function getConnectorDefaults(connector) {\n        connector.style.strokeColor = '#6d6d6d';\n        return connector;\n    }\n    function exportDiagram(args) {\n        var exportOptions = {};\n        exportOptions.format = args.item.text;\n        exportOptions.mode = 'Download';\n        exportOptions.region = 'PageSettings';\n        exportOptions.multiplePage = checkBoxObj.checked;\n        exportOptions.fileName = 'Export';\n        exportOptions.margin = { left: 0, top: 0, bottom: 0, right: 0 };\n        diagram.exportDiagram(exportOptions);\n    }\n    function toolbarClick(args) {\n        if (args.item.text === 'Print') {\n            var printOptions = {};\n            printOptions.mode = 'Data';\n            printOptions.region = 'PageSettings';\n            printOptions.multiplePage = checkBoxObj.checked;\n            printOptions.margin = { left: 0, top: 0, bottom: 0, right: 0 };\n            diagram.print(printOptions);\n        }\n    }\n    var nodes = [\n        {\n            id: 'sourceNode1', width: 100, height: 50, offsetX: 120, offsetY: 100,\n            style: { strokeColor: '#868686', fill: '#d5f5d5' },\n            annotations: [{ content: 'Source Document', margin: { left: 15, right: 15, bottom: 15, top: 15 } }]\n        },\n        {\n            id: 'censusNode2', width: 100, height: 75, offsetX: 120, offsetY: 200,\n            shape: { type: 'Basic', shape: 'Diamond' },\n            style: { strokeColor: '#8f908f', fill: '#e2f3fa' },\n            annotations: [{ content: 'Census Record', margin: { left: 15, right: 15, bottom: 15, top: 15 } }]\n        },\n        {\n            id: 'booksNode3', width: 100, height: 75, offsetX: 120, offsetY: 325,\n            shape: { type: 'Basic', shape: 'Diamond' },\n            style: { strokeColor: '#8f908f', fill: '#e2f3fa' },\n            annotations: [{ content: 'Books and Magazine' }]\n        },\n        {\n            id: 'recordNode4', width: 125, height: 50, offsetX: 320, offsetY: 200,\n            style: { strokeColor: '#868686', fill: '#d5f5d5' },\n            annotations: [{ content: 'Record Template' }]\n        },\n        {\n            id: 'traditionalNode5', width: 125, height: 50, offsetX: 320, offsetY: 325,\n            style: { strokeColor: '#868686', fill: '#d5f5d5' },\n            annotations: [{ content: 'Traditional Template' }]\n        },\n        {\n            id: 'nontraditionalNode6', width: 135, height: 50, offsetX: 120, offsetY: 425,\n            style: { strokeColor: '#a8a8a8', fill: '#faebee' },\n            annotations: [{ content: 'Nontraditional' }]\n        },\n        {\n            id: 'Radial1', width: 125, height: 50, offsetX: 850, offsetY: 225,\n            shape: { type: 'Basic', shape: 'Ellipse' },\n            style: { strokeColor: '#a8a8a8', fill: '#fef0db' },\n            annotations: [{ content: 'Health Fitness', }]\n        },\n        {\n            id: 'Radial2', width: 125, height: 75, offsetX: 850, offsetY: 100,\n            shape: { type: 'Basic', shape: 'Ellipse' },\n            style: { strokeColor: '#a8a8a8', fill: '#faebee' },\n            annotations: [{ content: 'Diet' }]\n        },\n        {\n            id: 'Radial3', width: 125, height: 75, offsetX: 1025, offsetY: 175,\n            shape: { type: 'Basic', shape: 'Ellipse' },\n            style: { strokeColor: '#a8a8a8', fill: '#faebee' },\n            annotations: [{ content: 'Flexibility' }]\n        },\n        {\n            id: 'Radial4', width: 125, height: 75, offsetX: 1000, offsetY: 350,\n            shape: { type: 'Basic', shape: 'Ellipse' },\n            style: { strokeColor: '#a8a8a8', fill: '#faebee' },\n            annotations: [{ content: 'Muscular Endurance' }]\n        },\n        {\n            id: 'Radial5', width: 125, height: 75, offsetX: 675, offsetY: 175,\n            shape: { type: 'Basic', shape: 'Ellipse' },\n            style: { strokeColor: '#a8a8a8', fill: '#faebee' },\n            annotations: [{ content: 'Cardiovascular Strength' }]\n        },\n        {\n            id: 'Radial6', width: 125, height: 75, offsetX: 770, offsetY: 350,\n            shape: { type: 'Basic', shape: 'Ellipse' },\n            style: { strokeColor: '#a8a8a8', fill: '#faebee' },\n            annotations: [{ content: 'Muscular Strength' }]\n        },\n    ];\n    var connectors = [\n        { id: 'flowChartConnector1', sourceID: 'sourceNode1', targetID: 'censusNode2' },\n        {\n            id: 'flowChartConnector2', sourceID: 'censusNode2', targetID: 'booksNode3',\n            annotations: [{ content: 'No', style: { fill: 'White' } }]\n        },\n        {\n            id: 'flowChartConnector3', sourceID: 'booksNode3', targetID: 'nontraditionalNode6',\n            annotations: [{ content: 'No', style: { fill: 'White' } }]\n        },\n        {\n            id: 'flowChartConnector4', sourceID: 'censusNode2', targetID: 'recordNode4',\n            annotations: [{ content: 'Yes', style: { fill: 'White' } }]\n        },\n        {\n            id: 'flowChartConnector5', sourceID: 'booksNode3', targetID: 'traditionalNode5',\n            annotations: [{ content: 'Yes', style: { fill: 'White' } }]\n        },\n        { id: 'RadialConnector1', sourceID: 'Radial1', targetID: 'Radial2', annotations: [{ content: 'Yes', style: { fill: 'White' } }] },\n        { id: 'RadialConnector2', sourceID: 'Radial1', targetID: 'Radial3', annotations: [{ content: 'Yes', style: { fill: 'White' } }] },\n        { id: 'RadialConnector3', sourceID: 'Radial1', targetID: 'Radial4', annotations: [{ content: 'Yes', style: { fill: 'White' } }] },\n        { id: 'RadialConnector4', sourceID: 'Radial1', targetID: 'Radial5', annotations: [{ content: 'Yes', style: { fill: 'White' } }] },\n        { id: 'RadialConnector5', sourceID: 'Radial1', targetID: 'Radial6', annotations: [{ content: 'Yes', style: { fill: 'White' } }] },\n    ];\n    diagram = new ej2_diagrams_1.Diagram({\n        width: '100%', height: '580px', nodes: nodes, connectors: connectors,\n        snapSettings: { constraints: ej2_diagrams_1.SnapConstraints.None },\n        pageSettings: { width: 550, height: 500, multiplePage: true },\n        getConnectorDefaults: getConnectorDefaults\n    });\n    checkBoxObj = new ej2_buttons_1.CheckBox({\n        checked: false, label: 'Multiple Page',\n    });\n    var items = [\n        { text: 'JPG' }, { text: 'PNG' }, { text: 'SVG' }\n    ];\n    var btnObj = new ej2_splitbuttons_1.DropDownButton({\n        items: items, iconCss: 'e-ddb-icons e-export', content: 'Export',\n        select: exportDiagram\n    });\n    var toolbarObj = new ej2_navigations_1.Toolbar({\n        clicked: toolbarClick,\n        items: [\n            {\n                type: 'Input', text: 'Export', template: '<button id=\"custombtn\" style=\"width:100%;\"></button>'\n            },\n            {\n                type: 'Button', text: 'Print', prefixIcon: 'e-diagram-icons e-diagram-print',\n            },\n            {\n                type: 'Input', template: checkBoxObj\n            },\n        ]\n    });\n    toolbarObj.appendTo('#toolbar_default');\n    btnObj.appendTo('#custombtn');\n    diagram.appendTo('#diagram');\n    diagram.fitToPage({ mode: 'Width' });\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/diagram/print-export/index.ts?");

/***/ })

/******/ });