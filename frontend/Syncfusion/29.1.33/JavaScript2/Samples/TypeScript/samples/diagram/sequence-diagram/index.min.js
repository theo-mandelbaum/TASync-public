/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/diagram/sequence-diagram/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/diagram/sequence-diagram/index.ts","diagrams.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/diagram/sequence-diagram/index.ts":
/*!***************************************************!*\
  !*** ./samples/diagram/sequence-diagram/index.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-diagrams */ \"./node_modules/@syncfusion/ej2-diagrams/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_diagrams_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_diagrams_1.Diagram.Inject(ej2_diagrams_1.UndoRedo);\n    function createTextNode(id, width, height, offsetX, offsetY, content, fill, bold) {\n        return {\n            id: id,\n            width: width,\n            height: height,\n            offsetX: offsetX,\n            offsetY: offsetY,\n            shape: { type: \"Text\", content: content },\n            style: { fill: fill, bold: bold }\n        };\n    }\n    function createPort(id, offsetX, offsetY) {\n        return {\n            id: id,\n            offset: { x: offsetX, y: offsetY },\n            visibility: ej2_diagrams_1.PortVisibility.Hidden,\n        };\n    }\n    function createBasicNode(id, width, height, offsetX, offsetY, ports) {\n        return {\n            id: id,\n            shape: { type: 'Basic', shape: 'Rectangle' },\n            width: width,\n            height: height,\n            offsetX: offsetX,\n            offsetY: offsetY,\n            style: { fill: 'orange', strokeColor: 'orange' },\n            ports: ports,\n        };\n    }\n    function createConnector(id, sourceX, sourceY, targetX, targetY) {\n        return {\n            id: id,\n            type: 'Straight',\n            sourcePoint: { x: sourceX, y: sourceY },\n            targetPoint: { x: targetX, y: targetY },\n            targetDecorator: { shape: 'None' },\n            style: { strokeColor: '#A5A6A7' }\n        };\n    }\n    function createArrowConnector(id, sourceID, sourcePortID, targetID, targetPortID) {\n        return {\n            id: id,\n            type: 'Straight',\n            sourceID: sourceID,\n            sourcePortID: sourcePortID,\n            targetID: targetID,\n            targetPortID: targetPortID,\n        };\n    }\n    var nodes = [\n        createTextNode('employee', 100, 60, 100, 100, 'Employee', 'transparent', true),\n        createTextNode('teamLead', 100, 60, 350, 100, 'Team Lead', 'transparent', true),\n        createTextNode('dashboard', 100, 60, 600, 100, 'Dashboard', 'transparent', true),\n        createTextNode('manager', 100, 60, 850, 100, 'Manager', 'transparent', true),\n        createTextNode('leaveRequest', 100, 60, 225, 250, 'Leave Request', 'transparent', false),\n        createTextNode('leaveApproval', 100, 60, 225, 484, 'Leave Approval', 'transparent', false),\n        createTextNode('checkEmplyeeAvail', 175, 30, 470, 345, 'Check Employee availability and task status', 'transparent', false),\n        createTextNode('forwardLeaveMssg', 150, 30, 600, 420, 'Forward Leave Request', 'transparent', false),\n        createTextNode('noObjection', 150, 30, 600, 460, 'No Objection', 'transparent', false),\n        createBasicNode('employeeNode', 10, 250, 100, 350, [\n            createPort('p1', 1, 0.05),\n            createPort('p2', 1, 0.97),\n        ]),\n        createBasicNode('teamLeadNode', 10, 190, 350, 320, [\n            createPort('p1', 0, 0.07),\n            createPort('p2', 1, 0.92),\n            createPort('p3', 1, 0.5),\n        ]),\n        createBasicNode('dashboardNode', 10, 25, 600, 320, [\n            createPort('p1', 0, 0.5),\n        ]),\n        createBasicNode('managerNode', 10, 50, 850, 420, [\n            createPort('p1', 0, 0.1),\n            createPort('p2', 0, 0.9),\n        ])\n    ];\n    var connectors = [\n        createConnector('employeeCon1', 100, 120, 100, 225),\n        createConnector('employeeCon2', 100, 475, 100, 600),\n        createConnector('teamLeanCon1', 350, 120, 350, 225),\n        createConnector('teamLeanCon2', 350, 415, 350, 600),\n        createConnector('dashboardCon1', 600, 120, 600, 307),\n        createConnector('dashboardCon2', 600, 333, 600, 600),\n        createConnector('managerCon1', 850, 120, 850, 395),\n        createConnector('managerCon2', 850, 445, 850, 600),\n        createArrowConnector('empToTeamLead', 'employeeNode', 'p1', 'teamLeadNode', 'p1'),\n        createArrowConnector('teamLeadToDash', 'teamLeadNode', 'p3', 'dashboardNode', 'p1'),\n        createArrowConnector('teamLeadToManager', 'teamLeadNode', 'p2', 'managerNode', 'p1'),\n        {\n            id: 'teamLeadToEmp',\n            type: 'Straight',\n            sourcePoint: { x: 350, y: 465 },\n            style: { strokeDashArray: '4 4' },\n            targetID: 'employeeNode',\n            targetPortID: 'p2',\n        },\n        {\n            id: 'managerToTeamLead',\n            type: 'Straight',\n            sourceID: 'managerNode',\n            sourcePortID: 'p2',\n            targetPoint: { x: 350, y: 440 },\n            style: { strokeDashArray: '4 4' },\n        },\n    ];\n    function getConnectorDefaults(connector) {\n        connector.targetDecorator.style = { fill: '#489ECC', strokeColor: '#489ECC' };\n        if (connector.targetDecorator.shape === 'Arrow') {\n            connector.style = { strokeColor: '#489ECC', strokeWidth: 2 };\n        }\n    }\n    var diagram = new ej2_diagrams_1.Diagram({\n        width: '100%',\n        height: '700px',\n        nodes: nodes,\n        tool: ej2_diagrams_1.DiagramTools.ZoomPan,\n        connectors: connectors,\n        snapSettings: { constraints: 0 },\n        getConnectorDefaults: getConnectorDefaults,\n    });\n    diagram.appendTo('#diagram');\n    diagram.fitToPage();\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/diagram/sequence-diagram/index.ts?");

/***/ })

/******/ });