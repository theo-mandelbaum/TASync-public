/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/diagram/getting-started-node/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/diagram/getting-started-node/index.ts","diagrams.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/diagram/getting-started-node/index.ts":
/*!*******************************************************!*\
  !*** ./samples/diagram/getting-started-node/index.ts ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-diagrams */ \"./node_modules/@syncfusion/ej2-diagrams/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_diagrams_1, ej2_buttons_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_diagrams_1.Diagram.Inject(ej2_diagrams_1.UndoRedo);\n    var diagram;\n    var element;\n    function getNodeDefaults(obj) {\n        obj.width = 100;\n        obj.height = 100;\n        obj.shape = { type: 'Basic', shape: 'Ellipse' };\n        obj.style = { fill: '#37909A', strokeColor: '#024249' };\n        obj.annotations[0].margin = { left: 10, right: 10 };\n        obj.annotations[0].style = { color: 'white', fill: 'none', strokeColor: 'none' };\n        return obj;\n    }\n    function getConnectorDefaults(connector) {\n        connector.targetDecorator.style = { fill: '#024249', strokeColor: '#024249' };\n        return { style: { strokeColor: '#024249', strokeWidth: 2 } };\n    }\n    function setNodeConstraints(args) {\n        for (var i = 0; i < diagram.nodes.length; i++) {\n            var node = diagram.nodes[i];\n            if (element.checked) {\n                node.constraints |= ej2_diagrams_1.NodeConstraints.AspectRatio;\n            }\n            else {\n                node.constraints &= ~ej2_diagrams_1.NodeConstraints.AspectRatio;\n            }\n            diagram.dataBind();\n        }\n    }\n    function setLockConstraints(args) {\n        for (var i = 0; i < diagram.nodes.length; i++) {\n            var node = diagram.nodes[i];\n            if (args.checked) {\n                node.constraints &= ~(ej2_diagrams_1.NodeConstraints.Resize |\n                    ej2_diagrams_1.NodeConstraints.Rotate |\n                    ej2_diagrams_1.NodeConstraints.Drag |\n                    ej2_diagrams_1.NodeConstraints.Delete);\n                node.constraints |= ej2_diagrams_1.NodeConstraints.ReadOnly;\n            }\n            else {\n                node.constraints |= ej2_diagrams_1.NodeConstraints.Default & ~ej2_diagrams_1.NodeConstraints.ReadOnly;\n            }\n        }\n        for (var i = 0; i < diagram.connectors.length; i++) {\n            var connector = diagram.connectors[i];\n            if (args.checked) {\n                connector.constraints &= ~(ej2_diagrams_1.ConnectorConstraints.DragSourceEnd |\n                    ej2_diagrams_1.ConnectorConstraints.DragTargetEnd |\n                    ej2_diagrams_1.ConnectorConstraints.Drag |\n                    ej2_diagrams_1.ConnectorConstraints.Delete);\n                connector.constraints |= ej2_diagrams_1.ConnectorConstraints.ReadOnly;\n            }\n            else {\n                connector.constraints |= ej2_diagrams_1.ConnectorConstraints.Default & ~ej2_diagrams_1.ConnectorConstraints.ReadOnly;\n            }\n        }\n        diagram.dataBind();\n    }\n    function applyNodeStyle(node, width, array, con, type) {\n        node.style.fill = '#37909A';\n        node.style.strokeWidth = width;\n        node.style.strokeColor = '#024249';\n        node.style.strokeDashArray = array;\n        if (type === 'None' || !type) {\n            node.style.gradient.type = 'None';\n        }\n        else {\n            var gradient = {\n                cx: 50, cy: 50, fx: 50, fy: 50,\n                stops: [{ color: '#00555b', offset: 0 },\n                    { color: '#37909A', offset: 90 }],\n                type: 'Radial'\n            };\n            node.style.gradient = gradient;\n        }\n        if (con & ej2_diagrams_1.NodeConstraints.Shadow) {\n            node.shadow = { angle: 45, distance: 15, opacity: 0.3, color: 'grey' };\n            node.constraints |= con;\n        }\n        else {\n            node.constraints &= con;\n        }\n        diagram.dataBind();\n    }\n    var nodes = [\n        { id: 'sdlc', offsetX: 300, offsetY: 288, annotations: [{ content: 'SDLC' }] },\n        { id: 'support', offsetX: 150, offsetY: 250, annotations: [{ content: 'Support' }] },\n        { id: 'analysis', offsetX: 300, offsetY: 150, annotations: [{ content: 'Analysis' }] },\n        { id: 'design', offsetX: 450, offsetY: 250, annotations: [{ content: 'Design' }] },\n        { id: 'implement', offsetX: 400, offsetY: 400, annotations: [{ content: 'implement' }] },\n        { id: 'deploy', offsetX: 200, offsetY: 400, annotations: [{ content: 'Deploy' }] }\n    ];\n    var connections = [\n        { id: 'connector1', sourceID: 'analysis', targetID: 'design' },\n        { id: 'connector2', sourceID: 'design', targetID: 'implement' },\n        { id: 'connector3', sourceID: 'implement', targetID: 'deploy' },\n        { id: 'connector4', sourceID: 'deploy', targetID: 'support' },\n        { id: 'connector5', sourceID: 'support', targetID: 'analysis' }\n    ];\n    diagram = new ej2_diagrams_1.Diagram({\n        width: '100%', height: '645px', nodes: nodes, connectors: connections,\n        getNodeDefaults: getNodeDefaults,\n        getConnectorDefaults: getConnectorDefaults,\n        snapSettings: { constraints: ej2_diagrams_1.SnapConstraints.None },\n        created: created,\n        selectionChange: function () {\n            if (diagram.selectedItems.nodes.length > 1 || diagram.selectedItems.connectors.length > 0) {\n                element.disabled = true;\n            }\n            else {\n                element.disabled = false;\n            }\n        }\n    });\n    diagram.appendTo('#diagram');\n    function created() {\n        diagram.fitToPage({ mode: 'Width' });\n    }\n    document.getElementById('appearance').onclick = function (args) {\n        var target = args.target;\n        var selectedElement = document.getElementsByClassName('e-selected-style');\n        if (selectedElement.length) {\n            selectedElement[0].classList.remove('e-selected-style');\n        }\n        if (target.className === 'image-pattern-style') {\n            for (var i = 0; i < diagram.nodes.length; i++) {\n                var node = diagram.nodes[i];\n                switch (target.id) {\n                    case 'preview0':\n                        applyNodeStyle(node, 0, '', ~ej2_diagrams_1.NodeConstraints.Shadow, 'None');\n                        break;\n                    case 'preview1':\n                        applyNodeStyle(node, 2, '', ~ej2_diagrams_1.NodeConstraints.Shadow, 'None');\n                        break;\n                    case 'preview2':\n                        applyNodeStyle(node, 2, '5 5', ~ej2_diagrams_1.NodeConstraints.Shadow, 'None');\n                        break;\n                    case 'preview3':\n                        applyNodeStyle(node, 2, '5 5', ~ej2_diagrams_1.NodeConstraints.Shadow, 'Radial');\n                        break;\n                    case 'preview4':\n                        applyNodeStyle(node, 2, '5 5', ej2_diagrams_1.NodeConstraints.Shadow, 'None');\n                        break;\n                }\n                target.classList.add('e-selected-style');\n            }\n        }\n    };\n    element = new ej2_buttons_1.CheckBox({ checked: false, label: 'Aspect ratio', change: setNodeConstraints });\n    element.appendTo('#aspectRatio');\n    var lockElement = new ej2_buttons_1.CheckBox({ checked: false, label: 'Lock', change: setLockConstraints });\n    lockElement.appendTo('#lock');\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/diagram/getting-started-node/index.ts?");

/***/ })

/******/ });