/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/circular-gauge/data-sample/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/circular-gauge/data-sample/index.ts","circulargauge.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/circular-gauge/data-sample/data-sample-gauge.ts":
/*!*****************************************************************!*\
  !*** ./samples/circular-gauge/data-sample/data-sample-gauge.ts ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-circulargauge */ \"./node_modules/@syncfusion/ej2-circulargauge/index.js\"), __webpack_require__(/*! @syncfusion/ej2-circulargauge */ \"./node_modules/@syncfusion/ej2-circulargauge/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_circulargauge_1, ej2_circulargauge_2) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.gauge3 = exports.gauge2 = exports.gauge1 = void 0;\n    ej2_circulargauge_1.CircularGauge.Inject(ej2_circulargauge_2.Annotations);\n    function gauge1() {\n        var gauge1 = new ej2_circulargauge_1.CircularGauge({\n            background: 'transparent',\n            axes: [{\n                    annotations: [{\n                            description: 'Positive arrow',\n                            content: '#germany',\n                            angle: 180, zIndex: '1',\n                            radius: '30%'\n                        }, {\n                            description: 'Germany',\n                            content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:inherit\">Germany</div>',\n                            angle: 180, zIndex: '1',\n                            radius: '65%'\n                        }],\n                    startAngle: 230,\n                    endAngle: 130,\n                    majorTicks: { width: 0 },\n                    lineStyle: { width: 0 },\n                    minorTicks: { width: 0 },\n                    labelStyle: { format: 'positive {value}', font: { size: '0' } },\n                    ranges: [{\n                            start: 0, end: 50,\n                            startWidth: 15, endWidth: 15,\n                            color: '#EC121C'\n                        }, {\n                            start: 50, end: 100,\n                            startWidth: 15, endWidth: 15,\n                            color: '#45EA0C'\n                        }],\n                    pointers: [{\n                            value: 75, radius: '60%',\n                            animation: { enable: false },\n                            color: '#777777', pointerWidth: 5,\n                            cap: {\n                                radius: 6,\n                                border: { width: 0 },\n                                color: '#777777'\n                            },\n                            needleTail: {\n                                length: '25%',\n                                color: '#777777'\n                            }\n                        }]\n                }],\n            load: function (args) {\n                var selectedTheme = location.hash.split('/')[1];\n                selectedTheme = selectedTheme ? selectedTheme : 'Material';\n                args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() +\n                    selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            }\n        });\n        return gauge1;\n    }\n    exports.gauge1 = gauge1;\n    function gauge2() {\n        var gauge2 = new ej2_circulargauge_1.CircularGauge({\n            background: 'transparent',\n            axes: [{\n                    annotations: [{\n                            description: ' Positive arrow ',\n                            content: '#usa',\n                            angle: 180, zIndex: '1',\n                            radius: '30%'\n                        }, {\n                            description: 'USA',\n                            content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:inherit\">USA</div>',\n                            angle: 180, zIndex: '1',\n                            radius: '65%'\n                        }],\n                    startAngle: 230,\n                    endAngle: 130,\n                    majorTicks: { width: 0 },\n                    lineStyle: { width: 0 },\n                    minorTicks: { width: 0 },\n                    labelStyle: { format: 'positive {value} ', font: { size: '0' } },\n                    ranges: [{\n                            start: 0, end: 50,\n                            startWidth: 15, endWidth: 15,\n                            color: '#EC121C'\n                        }, {\n                            start: 50, end: 100,\n                            startWidth: 15, endWidth: 15,\n                            color: '#45EA0C'\n                        }],\n                    pointers: [{\n                            value: 60, radius: '60%',\n                            animation: { enable: false },\n                            color: '#777777', pointerWidth: 5,\n                            cap: {\n                                radius: 6,\n                                border: { width: 0 },\n                                color: '#777777'\n                            },\n                            needleTail: {\n                                length: '25%',\n                                color: '#777777'\n                            }\n                        }]\n                }],\n            load: function (args) {\n                var selectedTheme = location.hash.split('/')[1];\n                selectedTheme = selectedTheme ? selectedTheme : 'Material';\n                args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() +\n                    selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            }\n        });\n        return gauge2;\n    }\n    exports.gauge2 = gauge2;\n    function gauge3() {\n        var gauge3 = new ej2_circulargauge_1.CircularGauge({\n            background: 'transparent',\n            axes: [{\n                    annotations: [{\n                            description: 'Negative arrow',\n                            content: '#uk',\n                            angle: 180, zIndex: '1',\n                            radius: '30%'\n                        }, {\n                            description: 'UK',\n                            content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:inherit\">UK</div>',\n                            angle: 180, zIndex: '1',\n                            radius: '65%'\n                        }],\n                    startAngle: 230,\n                    endAngle: 130,\n                    majorTicks: { width: 0 },\n                    lineStyle: { width: 0 },\n                    minorTicks: { width: 0 },\n                    labelStyle: { format: 'negative {value}', font: { size: '0' } },\n                    ranges: [{\n                            start: 0, end: 50,\n                            startWidth: 15, endWidth: 15,\n                            color: '#EC121C'\n                        }, {\n                            start: 50, end: 100,\n                            startWidth: 15, endWidth: 15,\n                            color: '#45EA0C'\n                        }],\n                    pointers: [{\n                            value: 25, radius: '60%',\n                            animation: { enable: false },\n                            color: '#777777', pointerWidth: 5,\n                            cap: {\n                                radius: 6,\n                                border: { width: 0 },\n                                color: '#777777'\n                            },\n                            needleTail: {\n                                length: '25%',\n                                color: '#777777'\n                            }\n                        }]\n                }],\n            load: function (args) {\n                var selectedTheme = location.hash.split('/')[1];\n                selectedTheme = selectedTheme ? selectedTheme : 'Material';\n                args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() +\n                    selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            }\n        });\n        return gauge3;\n    }\n    exports.gauge3 = gauge3;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/circular-gauge/data-sample/data-sample-gauge.ts?");

/***/ }),

/***/ "./samples/circular-gauge/data-sample/index.ts":
/*!*****************************************************!*\
  !*** ./samples/circular-gauge/data-sample/index.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-circulargauge */ \"./node_modules/@syncfusion/ej2-circulargauge/index.js\"), __webpack_require__(/*! ./data-sample-gauge */ \"./samples/circular-gauge/data-sample/data-sample-gauge.ts\"), __webpack_require__(/*! @syncfusion/ej2-grids */ \"./node_modules/@syncfusion/ej2-grids/index.js\"), __webpack_require__(/*! @syncfusion/ej2-data */ \"./node_modules/@syncfusion/ej2-data/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_circulargauge_1, data_sample_gauge_1, ej2_grids_1, ej2_data_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    var orderData = [\n        {\n            'Country': 'Germany',\n            'Sales': 500,\n            'Target': 400,\n            'vsTarget': 300\n        }, {\n            'Country': 'USA',\n            'Sales': 1000,\n            'Target': 600,\n            'vsTarget': 360\n        }, {\n            'Country': 'UK',\n            'Sales': 600,\n            'Target': 700,\n            'vsTarget': -100\n        }\n    ];\n    var germany = new ej2_circulargauge_1.CircularGauge((0, data_sample_gauge_1.gauge1)(), '#container1');\n    var usa = new ej2_circulargauge_1.CircularGauge((0, data_sample_gauge_1.gauge2)(), '#container2');\n    var uk = new ej2_circulargauge_1.CircularGauge((0, data_sample_gauge_1.gauge3)(), '#container3');\n    var data = new ej2_data_1.DataManager(orderData).executeLocal(new ej2_data_1.Query().take(15));\n    var grid = new ej2_grids_1.Grid({\n        dataSource: data,\n        columns: [\n            { field: 'Country', headerText: 'Country', width: 80 },\n            { field: 'Sales', headerText: 'Sales $', width: 80 },\n            { field: 'Target', headerText: 'Target $', width: 80 },\n            { field: 'vsTarget', headerText: 'vs Target', width: 80 }\n        ]\n    });\n    grid.appendTo('#container5');\n    var toolTipInterval1 = setInterval(function () {\n        if (document.getElementById('container5')) {\n            var value1 = Math.round(Math.random() * (90 - 55) + 55);\n            var value2 = Math.round(Math.random() * (75 - 60) + 60);\n            var value3 = Math.round(Math.random() * (40 - 10) + 10);\n            var gridData1 = 4 * value1;\n            var gridData2 = 6 * value2;\n            var gridData3 = 7 * value3;\n            var orderData_1 = [\n                {\n                    'Country': 'Germany',\n                    'Sales': 500,\n                    'Target': 400,\n                    'vsTarget': gridData1\n                }, {\n                    'Country': 'USA',\n                    'Sales': 1000,\n                    'Target': 600,\n                    'vsTarget': gridData2\n                }, {\n                    'Country': 'UK',\n                    'Sales': 600,\n                    'Target': 700,\n                    'vsTarget': -gridData3\n                }\n            ];\n            var data_1 = new ej2_data_1.DataManager(orderData_1).executeLocal(new ej2_data_1.Query().take(3));\n            grid.dataSource = data_1;\n            grid.refresh();\n            germany.axes[0].pointers[0].animation.enable = true;\n            usa.axes[0].pointers[0].animation.enable = true;\n            uk.axes[0].pointers[0].animation.enable = true;\n            germany.setPointerValue(0, 0, value1);\n            usa.setPointerValue(0, 0, value2);\n            uk.setPointerValue(0, 0, value3);\n            germany.setAnnotationValue(0, 0, '#germany');\n            usa.setAnnotationValue(0, 0, '#usa');\n            uk.setAnnotationValue(0, 0, '#uk');\n        }\n        else {\n            clearInterval(toolTipInterval1);\n        }\n    }, 2000);\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/circular-gauge/data-sample/index.ts?");

/***/ })

/******/ });