/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/dashboard-layout/analytics-dashboard/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/dashboard-layout/analytics-dashboard/index.ts","layouts.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/dashboard-layout/analytics-dashboard/expense-data.ts":
/*!**********************************************************************!*\
  !*** ./samples/dashboard-layout/analytics-dashboard/expense-data.ts ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var expenseData = [\n        {\n            'UniqueId': 'T100003',\n            'DateTime': new Date(1488359820000),\n            'Category': 'Food',\n            'PaymentMode': 'Cash',\n            'TransactionType': 'Expense',\n            'Description': 'Confederate cush',\n            'Amount': '900',\n            'MonthShort': 'Mar',\n            'MonthFull': 'March, 2017',\n            'FormattedDate': '03/01/2017 08:53 PM',\n            'Device': 'Tablet'\n        }, {\n            'UniqueId': 'T100004',\n            'DateTime': new Date(1491038220000),\n            'Category': 'Transportation',\n            'PaymentMode': 'Credit Card',\n            'TransactionType': 'Expense',\n            'Description': 'Public and other transportation',\n            'Amount': '1200',\n            'MonthShort': 'Apr',\n            'MonthFull': 'April, 2017',\n            'FormattedDate': '04/01/2017 10:44 AM',\n            'Device': 'Desktop'\n        }, {\n            'UniqueId': 'T100005',\n            'DateTime': new Date(1493630220000),\n            'Category': 'Transportation',\n            'PaymentMode': 'Cash',\n            'TransactionType': 'Expense',\n            'Description': 'Public and other transportation',\n            'Amount': '600',\n            'MonthShort': 'May',\n            'MonthFull': 'May, 2017',\n            'FormattedDate': '05/01/2017 03:25 PM',\n            'Device': 'Mobile'\n        },\n    ];\n    exports.default = expenseData;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/dashboard-layout/analytics-dashboard/expense-data.ts?");

/***/ }),

/***/ "./samples/dashboard-layout/analytics-dashboard/index.ts":
/*!***************************************************************!*\
  !*** ./samples/dashboard-layout/analytics-dashboard/index.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-layouts */ \"./node_modules/@syncfusion/ej2-layouts/index.js\"), __webpack_require__(/*! @syncfusion/ej2-charts */ \"./node_modules/@syncfusion/ej2-charts/index.js\"), __webpack_require__(/*! @syncfusion/ej2-charts */ \"./node_modules/@syncfusion/ej2-charts/index.js\"), __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\"), __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\"), __webpack_require__(/*! @syncfusion/ej2-charts */ \"./node_modules/@syncfusion/ej2-charts/index.js\"), __webpack_require__(/*! @syncfusion/ej2-maps */ \"./node_modules/@syncfusion/ej2-maps/index.js\"), __webpack_require__(/*! @syncfusion/ej2-charts */ \"./node_modules/@syncfusion/ej2-charts/index.js\"), __webpack_require__(/*! ./expense-data */ \"./samples/dashboard-layout/analytics-dashboard/expense-data.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_layouts_1, ej2_charts_1, ej2_charts_2, ej2_navigations_1, ej2_dropdowns_1, ej2_charts_3, ej2_maps_1, ej2_charts_4, expense_data_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_charts_1.Chart.Inject(ej2_charts_2.SplineAreaSeries, ej2_charts_1.DateTime, ej2_charts_1.Legend);\n    ej2_charts_3.AccumulationChart.Inject(ej2_charts_3.AccumulationLegend, ej2_charts_3.PieSeries, ej2_charts_3.AccumulationTooltip, ej2_charts_3.AccumulationDataLabel);\n    ej2_charts_1.Chart.Inject(ej2_charts_2.SplineAreaSeries, ej2_charts_1.DateTime, ej2_charts_1.Legend);\n    ej2_charts_1.Chart.Inject(ej2_charts_1.LineSeries, ej2_charts_1.DateTime, ej2_charts_1.Legend, ej2_charts_1.Tooltip);\n    ej2_maps_1.Maps.Inject(ej2_maps_1.Zoom, ej2_charts_1.Legend, ej2_maps_1.MapsTooltip);\n    ej2_charts_1.Chart.Inject(ej2_charts_4.ColumnSeries, ej2_charts_4.DataLabel, ej2_charts_4.Category, ej2_charts_1.Legend, ej2_charts_1.Tooltip);\n    var dashboard = new ej2_layouts_1.DashboardLayout({\n        columns: 6,\n        cellSpacing: [5, 5],\n        cellAspectRatio: 100 / 85,\n        panels: [\n            {\n                'sizeX': 2, 'sizeY': 1, 'row': 0, 'col': 0,\n                content: '#card1'\n            },\n            {\n                'sizeX': 2, 'sizeY': 1, 'row': 0, 'col': 2,\n                content: '#card2'\n            },\n            {\n                'sizeX': 2, 'sizeY': 1, 'row': 0, 'col': 4,\n                content: '#card3'\n            },\n            {\n                'sizeX': 2, 'sizeY': 2, 'row': 1, 'col': 0,\n                header: '<div>Active Visitors</div>', content: '<div id=\"pie\"></div>'\n            },\n            {\n                'sizeX': 2, 'sizeY': 2, 'row': 1, 'col': 2,\n                header: '<div>Regional Map</div>', content: '<div id=\"map\"></div>'\n            },\n            {\n                'sizeX': 2, 'sizeY': 2, 'row': 1, 'col': 4,\n                header: '<div>Visitors by Type</div>', content: '<div id=\"colChart\"></div>'\n            },\n            {\n                'sizeX': 4, 'sizeY': 2, 'row': 3, 'col': 2,\n                header: '<div>Traffic History</div>', content: '<div id=\"visitorsChart\"></div>'\n            },\n            {\n                'sizeX': 2, 'sizeY': 2, 'row': 3, 'col': 0,\n                header: '<div>Usage Statistics</div>', content: '<div id=\"pieChart\"></div>'\n            },\n        ]\n    });\n    dashboard.appendTo('#editLayout');\n    var sidebarInstance = new ej2_navigations_1.Sidebar({\n        type: 'Over',\n        dockSize: '60px',\n        enableDock: true,\n        target: '#target',\n        closeOnDocumentClick: true\n    });\n    sidebarInstance.appendTo('#dockSidebar');\n    var atcObj = new ej2_dropdowns_1.AutoComplete({\n        placeholder: 'Search Here',\n        width: '215px'\n    });\n    atcObj.appendTo('#search');\n    var centerTitle = document.createElement('div');\n    centerTitle.innerHTML = 'Active <br> users  &nbsp';\n    centerTitle.style.position = 'absolute';\n    centerTitle.style.visibility = 'hidden';\n    setTimeout(function () {\n        var pie = new ej2_charts_3.AccumulationChart({\n            enableSmartLabels: true,\n            selectionMode: 'Point',\n            series: [\n                {\n                    dataSource: expense_data_1.default,\n                    xName: 'Device', yName: 'Amount', startAngle: 0,\n                    endAngle: 360, innerRadius: '35%',\n                    radius: '100%',\n                    dataLabel: {\n                        visible: true, position: 'Inside',\n                        name: 'text',\n                        font: { color: 'white', fontWeight: '600', size: '14px' }\n                    }, name: 'Revenue',\n                    palettes: ['#357cd2', '#00bdae', '#e36593'],\n                }\n            ],\n            legendSettings: {\n                visible: false, toggleVisibility: false,\n                position: 'Right', height: '28%', width: '44%'\n            },\n            animationComplete: function (args) {\n                centerTitle.style.fontSize = getFontSize(args.accumulation.initialClipRect.width);\n                var rect = centerTitle.getBoundingClientRect();\n                centerTitle.style.top = (args.accumulation.origin.y - rect.height / 2) + 'px';\n                centerTitle.style.left = (args.accumulation.origin.x - rect.width / 2) + 'px';\n                centerTitle.style.visibility = 'visible';\n                var points = args.accumulation.visibleSeries[0].points;\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (point.labelPosition === 'Outside' && point.labelVisible) {\n                        var label = document.getElementById('pie_datalabel_Series_0_text_' + point.index);\n                        label.setAttribute('fill', 'black');\n                    }\n                }\n            },\n            textRender: function (args) {\n                args.series.dataLabel.font.size = getFontSize(pie.initialClipRect.width);\n                pie.animateSeries = true;\n            },\n            tooltip: {\n                enable: true,\n                header: '<b>${point.x}</b>',\n                format: 'Composition : <b>${point.y}%</b>'\n            },\n            width: '100%',\n            height: '100%',\n            load: function (args) {\n                var selectedTheme = location.hash.split('/')[1];\n                selectedTheme = selectedTheme ? selectedTheme : 'Material';\n                args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() +\n                    selectedTheme.slice(1)).replace(/-dark/i, 'Dark');\n            }\n        });\n        pie.appendTo('#pie');\n        document.getElementById('pie').appendChild(centerTitle);\n        pie.refresh();\n        function getFontSize(width) {\n            if (width > 300) {\n                return '13px';\n            }\n            else if (width > 250) {\n                return '13px';\n            }\n            else {\n                return '13px';\n            }\n        }\n        var linechartObj = new ej2_charts_1.Chart({\n            primaryXAxis: {\n                valueType: 'DateTime',\n                labelFormat: 'MMM',\n                majorGridLines: { width: 0 },\n                intervalType: 'Months',\n                edgeLabelPlacement: 'Shift'\n            },\n            chartArea: {\n                border: {\n                    width: 0\n                }\n            },\n            primaryYAxis: {\n                maximum: 4, interval: 1,\n                labelFormat: '{value}',\n                lineStyle: { width: 0 },\n                majorTickLines: { width: 0 },\n                minorTickLines: { width: 0 }\n            },\n            legendSettings: { visible: false },\n            width: '100%',\n            height: '100%',\n            series: [\n                {\n                    dataSource: [\n                        { x: new Date(2002, 0, 1), y: 2.1 }, { x: new Date(2003, 0, 1), y: 3.5 },\n                        { x: new Date(2004, 0, 1), y: 2.7 }, { x: new Date(2005, 0, 1), y: 1.7 },\n                        { x: new Date(2006, 0, 1), y: 2.2 }, { x: new Date(2007, 0, 1), y: 2.6 },\n                        { x: new Date(2008, 0, 1), y: 2.9 }, { x: new Date(2009, 0, 1), y: 3.7 },\n                        { x: new Date(2010, 0, 1), y: 1.4 }, { x: new Date(2011, 0, 1), y: 3.2 }\n                    ],\n                    fill: 'rgb(239, 183, 202)',\n                    opacity: 0.5,\n                    name: 'Jan', xName: 'x', yName: 'y', type: 'SplineArea',\n                    border: { color: 'transparent' },\n                },\n                {\n                    dataSource: [\n                        { x: new Date(2002, 0, 1), y: 2 }, { x: new Date(2003, 0, 1), y: 1.7 },\n                        { x: new Date(2004, 0, 1), y: 1.9 }, { x: new Date(2005, 0, 1), y: 2.3 },\n                        { x: new Date(2006, 0, 1), y: 2.3 }, { x: new Date(2007, 0, 1), y: 1.6 },\n                        { x: new Date(2008, 0, 1), y: 1.5 }, { x: new Date(2009, 0, 1), y: 2.7 },\n                        { x: new Date(2010, 0, 1), y: 1.5 }, { x: new Date(2011, 0, 1), y: 2.2 }\n                    ],\n                    opacity: 0.5,\n                    name: 'Feb', xName: 'x', yName: 'y', type: 'SplineArea',\n                    border: { color: 'transparent' },\n                    fill: 'rgb(0, 189, 174)'\n                }\n            ],\n            load: function (args) {\n                var selectedTheme = location.hash.split('/')[1];\n                selectedTheme = selectedTheme ? selectedTheme : 'Material';\n                args.chart.theme = (selectedTheme.charAt(0).toUpperCase() +\n                    selectedTheme.slice(1)).replace(/-dark/i, 'Dark');\n            }\n        });\n        linechartObj.appendTo('#visitorsChart');\n        linechartObj.refresh();\n        var columnChartObj = new ej2_charts_1.Chart({\n            primaryXAxis: {\n                valueType: 'Category', interval: 1, majorGridLines: { width: 0 }\n            },\n            chartArea: { border: { width: 0 } },\n            width: '100%',\n            height: '100%',\n            margin: { top: 30 },\n            primaryYAxis: {\n                majorGridLines: { width: 0 },\n                majorTickLines: { width: 0 }, lineStyle: { width: 0 }, labelStyle: { color: 'transparent' }\n            },\n            series: [\n                {\n                    type: 'Column', xName: 'x', width: 2, yName: 'y', name: 'Desktop',\n                    dataSource: [{ x: 'Jan', y: 46 }, { x: 'Feb', y: 27 }, { x: 'Mar', y: 26 }],\n                    marker: { dataLabel: { visible: false, position: 'Top', font: { fontWeight: '600', color: '#ffffff' } } },\n                },\n                {\n                    type: 'Column', xName: 'x', width: 2, yName: 'y', name: 'Mobile',\n                    dataSource: [{ x: 'Jan', y: 37 }, { x: 'Feb', y: 23 }, { x: 'Mar', y: 18 }],\n                    marker: { dataLabel: { visible: false, position: 'Top', font: { fontWeight: '600', color: '#ffffff' } } },\n                    fill: '#e36593',\n                },\n                {\n                    type: 'Column', xName: 'x', width: 2, yName: 'y', name: 'Tablet',\n                    dataSource: [{ x: 'Jan', y: 38 }, { x: 'Feb', y: 17 }, { x: 'Mar', y: 26 }],\n                    marker: { dataLabel: { visible: false, position: 'Top', font: { fontWeight: '600', color: '#ffffff' } } }\n                }\n            ],\n            legendSettings: { visible: false },\n            load: function (args) {\n                var selectedTheme = location.hash.split('/')[1];\n                selectedTheme = selectedTheme ? selectedTheme : 'Material';\n                args.chart.theme = (selectedTheme && selectedTheme.indexOf('fabric') > -1) ? 'Fabric' : 'Material';\n                args.chart.theme = (selectedTheme.charAt(0).toUpperCase() +\n                    selectedTheme.slice(1)).replace(/-dark/i, 'Dark');\n            }\n        });\n        columnChartObj.appendTo('#colChart');\n        columnChartObj.refresh();\n    }, 10);\n    var maps = new ej2_maps_1.Maps({\n        height: '100%',\n        width: '100%',\n        zoomSettings: {\n            enable: false\n        },\n        legendSettings: {\n            visible: false\n        },\n        layers: [\n            {\n                shapeData: new ej2_maps_1.MapAjax('./src/dashboard-layout/worldmap.json'),\n                shapePropertyPath: 'continent',\n                shapeDataPath: 'continent',\n                dataSource: new ej2_maps_1.MapAjax('./src/dashboard-layout/datasource.json'),\n                shapeSettings: {\n                    colorValuePath: 'color',\n                },\n                markerSettings: [\n                    {\n                        visible: true,\n                        dataSource: [\n                            { latitude: 37.6276571, longitude: -122.4276688, name: 'San Bruno' },\n                            { latitude: 33.5302186, longitude: -117.7418381, name: 'Laguna Niguel' },\n                            { latitude: 40.7424509, longitude: -74.0081468, name: 'New York' },\n                            { latitude: -23.5268201, longitude: -46.6489927, name: 'Bom Retiro' },\n                            { latitude: 43.6533855, longitude: -79.3729994, name: 'Toronto' },\n                            { latitude: 48.8773406, longitude: 2.3299627, name: 'Paris' },\n                            { latitude: 52.4643089, longitude: 13.4107368, name: 'Berlin' },\n                            { latitude: 19.1555762, longitude: 72.8849595, name: 'Mumbai' },\n                            { latitude: 35.6628744, longitude: 139.7345469, name: 'Minato' },\n                            { latitude: 51.5326602, longitude: -0.1262422, name: 'London' }\n                        ],\n                        shape: 'Image',\n                        imageUrl: 'https://ej2.syncfusion.com/demos/https://ej2.syncfusion.com/demos/src/maps/images/ballon.png',\n                        height: 20,\n                        width: 20,\n                        offset: {\n                            y: -10,\n                            x: 0\n                        },\n                        tooltipSettings: {\n                            visible: true,\n                            valuePath: 'name'\n                        },\n                        animationDuration: 0\n                    },\n                ]\n            },\n        ],\n        load: function (args) {\n            var theme = location.hash.split('/')[1];\n            theme = theme ? theme : 'Material';\n            args.maps.theme = (theme.charAt(0).toUpperCase() + theme.slice(1)).replace(/-dark/i, 'Dark');\n        }\n    });\n    maps.appendTo('#map');\n    setTimeout(function () {\n        var pieChart = new ej2_charts_3.AccumulationChart({\n            series: [\n                {\n                    dataSource: [\n                        { 'x': 'Desktop', y: 37, text: '60%' }, { 'x': 'Mobile', y: 17, text: '10%' },\n                        { 'x': 'Tablet', y: 19, text: '20%' }\n                    ],\n                    dataLabel: {\n                        visible: true, position: 'Inside', name: 'text', font: { fontWeight: '600' }\n                    },\n                    radius: '100%', xName: 'x', yName: 'y', startAngle: 0, endAngle: 360, innerRadius: '0%',\n                    explode: true, name: 'Usage', explodeOffset: '10%', explodeIndex: 2\n                }\n            ],\n            center: { x: '50%', y: '50%' },\n            enableSmartLabels: true,\n            legendSettings: { visible: false },\n            width: '100%',\n            height: '100%',\n            load: function (args) {\n                var selectedTheme = location.hash.split('/')[1];\n                selectedTheme = selectedTheme ? selectedTheme : 'Material';\n                args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() +\n                    selectedTheme.slice(1)).replace(/-dark/i, 'Dark');\n            }\n        });\n        pieChart.appendTo('#pieChart');\n        pieChart.refresh();\n    }, 10);\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/dashboard-layout/analytics-dashboard/index.ts?");

/***/ })

/******/ });