/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/treemap/color-mapping/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/treemap/color-mapping/index.ts","treemap.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/treemap/color-mapping/index.ts":
/*!************************************************!*\
  !*** ./samples/treemap/color-mapping/index.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-treemap */ \"./node_modules/@syncfusion/ej2-treemap/index.js\"), __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\"), __webpack_require__(/*! ./treemap-data/color */ \"./samples/treemap/color-mapping/treemap-data/color.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_treemap_1, ej2_dropdowns_1, ej2_buttons_1, color_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_treemap_1.TreeMap.Inject(ej2_treemap_1.TreeMapTooltip, ej2_treemap_1.TreeMapLegend);\n    var prevTime;\n    var curTime;\n    var treemapload = function (args) {\n        var theme = location.hash.split('/')[1];\n        theme = theme ? theme : 'Material';\n        args.treemap.theme = ((theme.charAt(0).toUpperCase() +\n            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5'));\n    };\n    var treemap = new ej2_treemap_1.TreeMap({\n        load: treemapload,\n        titleSettings: {\n            text: 'Top 10 largest islands in the World',\n            textStyle: { size: '15px', fontFamily: 'Segoe UI' }\n        },\n        format: 'n',\n        useGroupingSeparator: true,\n        rangeColorValuePath: 'Area',\n        dataSource: color_1.colorMappingData,\n        legendSettings: {\n            visible: true,\n            position: 'Bottom',\n            mode: 'Interactive',\n            height: '10',\n            title: {\n                text: 'Area'\n            },\n            textStyle: {\n                fontFamily: 'Segoe UI'\n            },\n            titleStyle: {\n                fontFamily: 'Segoe UI'\n            }\n        },\n        tooltipSettings: {\n            visible: true,\n            format: 'Name: ${Name}<br>Area: ${Area} per square kms<br>Continent: ${Location}',\n            opacity: 0.8,\n            textStyle: {\n                fontFamily: 'Segoe UI'\n            }\n        },\n        weightValuePath: 'Area',\n        leafItemSettings: {\n            labelPath: 'Name',\n            border: { color: 'white', width: 0.5 },\n            labelStyle: {\n                fontFamily: 'Segoe UI'\n            },\n            colorMapping: [\n                { from: 100000, to: 250000, label: '0.1M - 0.25M', color: '#547C84' },\n                { from: 250000, to: 550000, label: '0.25M - 0.55M', color: '#37AFAB' },\n                { from: 550000, to: 750000, label: '0.55M - 0.75M', color: '#A4D6AD' },\n                { from: 750000, to: 2250000, label: '0.75M - 2M', color: '#DEEBAE' },\n                { to: null, from: null, color: 'null' },\n                { to: null, from: null, color: 'null' },\n            ]\n        },\n    });\n    treemap.appendTo('#default-container');\n    var opacity;\n    var highlightCheckBox = new ej2_buttons_1.CheckBox({\n        change: opacity, checked: false\n    }, '#opacity');\n    document.getElementById('minopacity').onpointermove = document.getElementById('minopacity').ontouchmove =\n        document.getElementById('minopacity').onchange = function () {\n            if (highlightCheckBox.checked && !highlightCheckBox.disabled) {\n                var slider = document.getElementById('minopacity');\n                var minOpacity = parseFloat(slider.value);\n                treemap.leafItemSettings.colorMapping[0].minOpacity = minOpacity;\n                treemap.leafItemSettings.colorMapping[1].minOpacity = minOpacity;\n                treemap.refresh();\n            }\n        };\n    document.getElementById('maxopacity').onpointermove = document.getElementById('maxopacity').ontouchmove =\n        document.getElementById('maxopacity').onchange = function () {\n            if (highlightCheckBox.checked && !highlightCheckBox.disabled) {\n                var slider = document.getElementById('maxopacity');\n                var maxOpacity = parseFloat(slider.value);\n                treemap.leafItemSettings.colorMapping[0].maxOpacity = maxOpacity;\n                treemap.leafItemSettings.colorMapping[1].maxOpacity = maxOpacity;\n                treemap.refresh();\n            }\n        };\n    highlightCheckBox.change = opacity = function (e) {\n        var minOpacity = document.getElementById('minopacity');\n        var maxOpacity = document.getElementById('maxopacity');\n        if (e.checked) {\n            document.getElementById('text2').style.display = 'block';\n            document.getElementById('input2').style.display = 'block';\n            document.getElementById('text3').style.display = 'block';\n            document.getElementById('input3').style.display = 'block';\n            treemap.leafItemSettings.colorMapping[0].minOpacity = parseFloat(minOpacity.value);\n            treemap.leafItemSettings.colorMapping[0].maxOpacity = parseFloat(maxOpacity.value);\n            treemap.leafItemSettings.colorMapping[1].minOpacity = parseFloat(minOpacity.value);\n            treemap.leafItemSettings.colorMapping[1].maxOpacity = parseFloat(maxOpacity.value);\n            minOpacity.disabled = false;\n            maxOpacity.disabled = false;\n        }\n        else {\n            document.getElementById('text2').style.display = 'none';\n            document.getElementById('input2').style.display = 'none';\n            document.getElementById('text3').style.display = 'none';\n            document.getElementById('input3').style.display = 'none';\n            treemap.leafItemSettings.colorMapping[0].minOpacity = null;\n            treemap.leafItemSettings.colorMapping[0].maxOpacity = null;\n            treemap.leafItemSettings.colorMapping[1].minOpacity = null;\n            treemap.leafItemSettings.colorMapping[1].maxOpacity = null;\n            minOpacity.disabled = true;\n            maxOpacity.disabled = true;\n        }\n        treemap.refresh();\n    };\n    var sampleValue = new ej2_dropdowns_1.DropDownList({\n        index: 0,\n        placeholder: 'Range ColorMaping',\n        width: '100%',\n        change: function () {\n            var element = sampleValue.value.toString();\n            if (element === 'RangeColorMapping') {\n                document.getElementById('text1').style.display = 'none';\n                document.getElementById('input1').style.display = 'none';\n                document.getElementById('text2').style.display = 'none';\n                document.getElementById('input2').style.display = 'none';\n                document.getElementById('text3').style.display = 'none';\n                document.getElementById('input3').style.display = 'none';\n                treemap.rangeColorValuePath = 'Area';\n                treemap.leafItemSettings.colorMapping[2].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[2].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[1].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[1].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[4].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[4].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[3].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[3].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[5].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[5].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[0].from = 100000;\n                treemap.leafItemSettings.colorMapping[0].to = 250000;\n                treemap.leafItemSettings.colorMapping[0].value = null;\n                treemap.leafItemSettings.colorMapping[0].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[0].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[1].value = null;\n                treemap.leafItemSettings.colorMapping[2].value = null;\n                treemap.leafItemSettings.colorMapping[0].label = '0.1M - 0.25M';\n                treemap.leafItemSettings.colorMapping[0].color = '#547C84';\n                treemap.leafItemSettings.colorMapping[1].from = 250000;\n                treemap.leafItemSettings.colorMapping[1].to = 500000;\n                treemap.leafItemSettings.colorMapping[1].label = '0.25M - 0.50M';\n                treemap.leafItemSettings.colorMapping[1].color = '#37AFAB';\n                treemap.leafItemSettings.colorMapping[2].from = 500000;\n                treemap.leafItemSettings.colorMapping[2].to = 750000;\n                treemap.leafItemSettings.colorMapping[2].label = '0.5M - 0.75M';\n                treemap.leafItemSettings.colorMapping[2].color = '#A4D6AD';\n                treemap.leafItemSettings.colorMapping[2].value = null;\n                treemap.leafItemSettings.colorMapping[3].from = 750000;\n                treemap.leafItemSettings.colorMapping[3].to = 2200000;\n                treemap.leafItemSettings.colorMapping[3].label = '0.75M - 2M';\n                treemap.leafItemSettings.colorMapping[3].color = '#DEEBAE';\n                treemap.leafItemSettings.colorMapping[4].from = null;\n                treemap.leafItemSettings.colorMapping[3].value = null;\n                treemap.leafItemSettings.colorMapping[4].to = null;\n                treemap.leafItemSettings.colorMapping[4].label = null;\n                treemap.leafItemSettings.colorMapping[4].value = null;\n                treemap.leafItemSettings.colorMapping[4].color = null;\n                treemap.leafItemSettings.colorMapping[5].to = null;\n                treemap.leafItemSettings.colorMapping[5].label = null;\n                treemap.leafItemSettings.colorMapping[5].value = null;\n                treemap.leafItemSettings.colorMapping[5].color = null;\n                treemap.leafItemSettings.colorMapping[5].from = null;\n                treemap.legendSettings.title.text = 'Area';\n                treemap.refresh();\n            }\n            else if (element === 'EqualColorMapping') {\n                document.getElementById('text1').style.display = 'none';\n                document.getElementById('input1').style.display = 'none';\n                document.getElementById('text2').style.display = 'none';\n                document.getElementById('input2').style.display = 'none';\n                document.getElementById('text3').style.display = 'none';\n                document.getElementById('input3').style.display = 'none';\n                treemap.rangeColorValuePath = null;\n                treemap.leafItemSettings.colorMapping[0].from = null;\n                treemap.leafItemSettings.colorMapping[0].to = null;\n                treemap.leafItemSettings.colorMapping[0].label = null;\n                treemap.leafItemSettings.colorMapping[1].label = null;\n                treemap.leafItemSettings.colorMapping[2].label = null;\n                treemap.leafItemSettings.colorMapping[3].label = null;\n                treemap.leafItemSettings.colorMapping[4].label = null;\n                treemap.leafItemSettings.colorMapping[0].value = 'North America';\n                treemap.leafItemSettings.colorMapping[0].color = '#DEEBAE';\n                treemap.leafItemSettings.colorMapping[1].from = null;\n                treemap.leafItemSettings.colorMapping[1].to = null;\n                treemap.leafItemSettings.colorMapping[1].value = 'Oceania';\n                treemap.leafItemSettings.colorMapping[1].color = '#A4D6AD';\n                treemap.leafItemSettings.colorMapping[2].from = null;\n                treemap.leafItemSettings.colorMapping[2].to = null;\n                treemap.leafItemSettings.colorMapping[2].value = 'Asia';\n                treemap.leafItemSettings.colorMapping[2].color = '#37AFAB';\n                treemap.leafItemSettings.colorMapping[3].from = null;\n                treemap.leafItemSettings.colorMapping[3].to = null;\n                treemap.leafItemSettings.colorMapping[3].value = 'Africa';\n                treemap.leafItemSettings.colorMapping[3].color = '#547C84';\n                treemap.leafItemSettings.colorMapping[4].from = null;\n                treemap.leafItemSettings.colorMapping[4].to = null;\n                treemap.leafItemSettings.colorMapping[4].value = 'Europe';\n                treemap.leafItemSettings.colorMapping[4].color = '#CEBF93';\n                treemap.leafItemSettings.colorMapping[0].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[0].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[1].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[1].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[2].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[2].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[3].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[3].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[4].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[4].maxOpacity = null;\n                treemap.equalColorValuePath = 'Location';\n                treemap.legendSettings.title.text = 'Continent';\n                treemap.refresh();\n            }\n            else if (element === 'DesaturationColorMapping') {\n                document.getElementById('text1').style.display = 'block';\n                document.getElementById('input1').style.display = 'block';\n                treemap.rangeColorValuePath = 'Area';\n                treemap.equalColorValuePath = null;\n                var minOpacity = document.getElementById('minopacity');\n                var maxOpacity = document.getElementById('maxopacity');\n                treemap.leafItemSettings.colorMapping[2].from = null;\n                treemap.leafItemSettings.colorMapping[2].to = null;\n                treemap.leafItemSettings.colorMapping[1].from = null;\n                treemap.leafItemSettings.colorMapping[1].to = null;\n                treemap.leafItemSettings.colorMapping[1].label = null;\n                treemap.leafItemSettings.colorMapping[3].from = null;\n                treemap.leafItemSettings.colorMapping[3].to = null;\n                treemap.leafItemSettings.colorMapping[0].from = 100000;\n                treemap.leafItemSettings.colorMapping[0].to = 2230800;\n                treemap.leafItemSettings.colorMapping[0].label = '0.1M - 2M';\n                treemap.leafItemSettings.colorMapping[0].value = null;\n                treemap.leafItemSettings.colorMapping[1].value = null;\n                treemap.leafItemSettings.colorMapping[2].value = null;\n                treemap.leafItemSettings.colorMapping[3].value = null;\n                treemap.leafItemSettings.colorMapping[2].color = null;\n                treemap.leafItemSettings.colorMapping[1].color = null;\n                treemap.leafItemSettings.colorMapping[3].color = null;\n                treemap.leafItemSettings.colorMapping[0].color = ['#F0D6AD', '#19547B'];\n                if (highlightCheckBox.checked) {\n                    document.getElementById('text2').style.display = 'block';\n                    document.getElementById('input2').style.display = 'block';\n                    document.getElementById('text3').style.display = 'block';\n                    document.getElementById('input3').style.display = 'block';\n                    treemap.leafItemSettings.colorMapping[0].minOpacity = parseFloat(minOpacity.value);\n                    treemap.leafItemSettings.colorMapping[0].maxOpacity = parseFloat(maxOpacity.value);\n                }\n                else {\n                    treemap.leafItemSettings.colorMapping[0].minOpacity = null;\n                    treemap.leafItemSettings.colorMapping[0].maxOpacity = null;\n                }\n                treemap.legendSettings.title.text = 'Area';\n                treemap.refresh();\n            }\n        }\n    });\n    sampleValue.appendTo('#colorMapping');\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/treemap/color-mapping/index.ts?");

/***/ }),

/***/ "./samples/treemap/color-mapping/treemap-data/color.ts":
/*!*************************************************************!*\
  !*** ./samples/treemap/color-mapping/treemap-data/color.ts ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.colorMappingData = void 0;\n    exports.colorMappingData = [\n        { Name: \"Greenland\", Area: 2130800, Population: 56483, Location: \"North America\" },\n        { Name: \"New Guinea\", Area: 785753, Population: 1306940, Location: \"Oceania\" },\n        { Name: \"Borneo\", Area: 743330, Population: 19804064, Location: \"Asia\" },\n        { Name: \"Madagascar\", Area: 587713, Population: 22005222, Location: \"Africa\" },\n        { Name: \"Baffin Island\", Area: 507451, Population: 10745, Location: \"North America\" },\n        { Name: \"Sumatra\", Area: 443066, Population: 50000000, Location: \"Asia\" },\n        { Name: \"Honshu\", Area: 225800, Population: 103000000, Location: \"Asia\" },\n        { Name: \"Victoria Island\", Area: 217291, Population: 1875, Location: \"North America\" },\n        { Name: \"Great Britain\", Area: 209331, Population: 60800000, Location: \"Europe\" },\n        { Name: \"Ellesmere Island\", Area: 183965, Population: 146, Location: \"North America\" }\n    ];\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/treemap/color-mapping/treemap-data/color.ts?");

/***/ })

/******/ });