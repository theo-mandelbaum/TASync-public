/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/uploader/custom-file-list/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/uploader/custom-file-list/index.ts","inputs.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/uploader/custom-file-list/index.ts":
/*!****************************************************!*\
  !*** ./samples/uploader/custom-file-list/index.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\"), __webpack_require__(/*! @syncfusion/ej2-popups */ \"./node_modules/@syncfusion/ej2-popups/index.js\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_inputs_1, ej2_popups_1, ej2_base_2) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    var dropElement = document.getElementsByClassName('control-fluid')[0];\n    var filesDetails = [];\n    var filesList = [];\n    var uploadObj = new ej2_inputs_1.Uploader({\n        asyncSettings: {\n            saveUrl: 'https://ej2services.syncfusion.com/production/web-services/api/FileUploader/Save',\n            removeUrl: 'https://ej2services.syncfusion.com/production/web-services/api/FileUploader/Remove'\n        }, dropArea: dropElement, selected: onFileSelect, progress: onFileUpload, success: onUploadSuccess,\n        failure: onUploadFailed, removing: onFileRemove,\n    });\n    uploadObj.appendTo('#fileupload');\n    document.getElementById('browse').onclick = function () {\n        document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();\n        return false;\n    };\n    document.getElementById('clearbtn').onclick = function () {\n        if (!(0, ej2_base_2.isNullOrUndefined)(document.getElementById('dropArea').querySelector('.upload-list-root'))) {\n            uploadObj.element.value = '';\n            (0, ej2_base_2.detach)(document.getElementById('dropArea').querySelector('.upload-list-root'));\n            filesDetails = [];\n            filesList = [];\n        }\n    };\n    var parentElement;\n    var proxy;\n    var progressbarContainer;\n    function onFileSelect(args) {\n        if ((0, ej2_base_2.isNullOrUndefined)(document.getElementById('dropArea').querySelector('.upload-list-root'))) {\n            parentElement = (0, ej2_base_2.createElement)('div', { className: 'upload-list-root' });\n            parentElement.appendChild((0, ej2_base_2.createElement)('ul', { className: 'ul-element' }));\n            document.getElementById('dropArea').appendChild(parentElement);\n        }\n        for (var i = 0; i < args.filesData.length; i++) {\n            var fileName = args.filesData[i].name;\n            for (var j = 0; j < filesDetails.length; j++) {\n                if (filesDetails[j].name === fileName) {\n                    args.filesData.splice(i, 1);\n                    --i;\n                    j = filesDetails.length;\n                }\n            }\n        }\n        for (var i = 0; i < args.filesData.length; i++) {\n            formSelectedData(args.filesData[i], this);\n        }\n        filesDetails = filesDetails.concat(args.filesData);\n        this.upload(args.filesData, true);\n        args.cancel = true;\n    }\n    function formSelectedData(selectedFiles, proxy) {\n        var liEle = (0, ej2_base_2.createElement)('li', { className: 'file-lists', attrs: { 'data-file-name': selectedFiles.name } });\n        liEle.appendChild((0, ej2_base_2.createElement)('span', { className: 'file-name ', innerHTML: selectedFiles.name }));\n        liEle.appendChild((0, ej2_base_2.createElement)('span', { className: 'file-size ', innerHTML: proxy.bytesToSize(selectedFiles.size) }));\n        if (selectedFiles.statusCode === '1') {\n            progressbarContainer = (0, ej2_base_2.createElement)('span', { className: 'progress-bar-container' });\n            progressbarContainer.appendChild((0, ej2_base_2.createElement)('progress', { className: 'progress', attrs: { value: '0', max: '100' } }));\n            liEle.appendChild(progressbarContainer);\n        }\n        else {\n            liEle.querySelector('.file-name').classList.add('upload-fails');\n        }\n        var closeIconContainer = (0, ej2_base_2.createElement)('span', { className: 'e-icons close-icon-container' });\n        ej2_base_2.EventHandler.add(closeIconContainer, 'click', removeFiles, proxy);\n        liEle.appendChild(closeIconContainer);\n        document.querySelector('.ul-element').appendChild(liEle);\n        filesList.push(liEle);\n    }\n    function onFileUpload(args) {\n        var li = document.getElementById('dropArea').querySelector('[data-file-name=\"' + args.file.name + '\"]');\n        ej2_base_2.EventHandler.remove(li.querySelector('.close-icon-container'), 'click', removeFiles);\n        var progressValue = Math.round((args.e.loaded / args.e.total) * 100);\n        if (!isNaN(progressValue)) {\n            li.getElementsByTagName('progress')[0].value = progressValue;\n        }\n    }\n    function onUploadSuccess(args) {\n        var _this = this;\n        var spinnerElement = document.getElementById('dropArea');\n        var li = document.getElementById('dropArea').querySelector('[data-file-name=\"' + args.file.name + '\"]');\n        if (!(0, ej2_base_2.isNullOrUndefined)(li.querySelector('.progress-bar-container'))) {\n            (0, ej2_base_2.detach)(li.querySelector('.progress-bar-container'));\n        }\n        if (args.operation === 'upload') {\n            li.querySelector('.file-name').classList.add('upload-success');\n            li.querySelector('.close-icon-container').classList.add('delete-icon');\n            li.querySelector('.close-icon-container').onclick = function () {\n                generateSpinner(_this.uploadWrapper);\n            };\n            li.querySelector('.close-icon-container').onkeydown = function (e) {\n                if (e.keyCode === 13) {\n                    generateSpinner(e.target.closest('.e-upload'));\n                }\n            };\n        }\n        if (args.operation === 'remove') {\n            filesDetails.splice(filesList.indexOf(li), 1);\n            filesList.splice(filesList.indexOf(li), 1);\n            (0, ej2_base_2.detach)(li);\n            (0, ej2_popups_1.hideSpinner)(spinnerElement);\n            (0, ej2_base_2.detach)(spinnerElement.querySelector('.e-spinner-pane'));\n        }\n        ej2_base_2.EventHandler.add(li.querySelector('.close-icon-container'), 'click', removeFiles, this);\n    }\n    function generateSpinner(targetElement) {\n        (0, ej2_popups_1.createSpinner)({ target: targetElement, width: '25px' });\n        (0, ej2_popups_1.showSpinner)(targetElement);\n    }\n    function onUploadFailed(args) {\n        var li = document.getElementById('dropArea').querySelector('[data-file-name=\"' + args.file.name + '\"]');\n        ej2_base_2.EventHandler.add(li.querySelector('.close-icon-container'), 'click', removeFiles, this);\n        li.querySelector('.file-name ').classList.add('upload-fails');\n        if (args.operation === 'upload') {\n            (0, ej2_base_2.detach)(li.querySelector('.progress-bar-container'));\n        }\n    }\n    function removeFiles(args) {\n        if (!(0, ej2_base_2.isNullOrUndefined)(args.currentTarget)) {\n            if (filesDetails[filesList.indexOf(args.currentTarget.parentElement)].statusCode === '2') {\n                this.remove(filesDetails[filesList.indexOf(args.currentTarget.parentElement)]);\n            }\n            else {\n                onFileRemove(args);\n            }\n        }\n    }\n    function onFileRemove(args) {\n        if (!(0, ej2_base_2.isNullOrUndefined)(args.currentTarget)) {\n            if (filesDetails[filesList.indexOf(args.currentTarget.parentElement)].statusCode !== '2') {\n                (0, ej2_base_2.detach)(args.currentTarget.parentElement);\n            }\n        }\n        args.postRawFile = false;\n    }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/uploader/custom-file-list/index.ts?");

/***/ })

/******/ });