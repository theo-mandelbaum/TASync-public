/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/maps/dynamic-marker/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/maps/dynamic-marker/index.ts","maps.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/maps/dynamic-marker/index.ts":
/*!**********************************************!*\
  !*** ./samples/maps/dynamic-marker/index.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-maps */ \"./node_modules/@syncfusion/ej2-maps/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\"), __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_maps_1, ej2_buttons_1, ej2_dropdowns_1, ej2_buttons_2) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_maps_1.Maps.Inject(ej2_maps_1.Marker, ej2_maps_1.NavigationLine, ej2_maps_1.Zoom);\n    var markerCheck = true;\n    var lineCheck;\n    var connectLineCheck;\n    var navigationLines = [];\n    var latitude = [];\n    var longitude = [];\n    var maps = new ej2_maps_1.Maps({\n        zoomSettings: {\n            enable: true\n        },\n        layers: [\n            {\n                urlTemplate: 'https://tile.openstreetmap.org/level/tileX/tileY.png'\n            },\n        ],\n        load: function (args) {\n            var theme = location.hash.split('/')[1];\n            theme = theme ? theme : 'Material';\n            args.maps.theme = (theme.charAt(0).toUpperCase() +\n                theme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n        },\n        click: function (args) {\n            if (markerCheck) {\n                addMarker(args);\n            }\n            if (lineCheck && !connectLineCheck) {\n                addLine(args, widthCheck['value']);\n            }\n            if (connectLineCheck) {\n                addLine(args, widthCheck['value'], true);\n            }\n            if (markerCheck || lineCheck || connectLineCheck) {\n                maps.refresh();\n                if (togglebtn.disabled && (maps.layers[0].markerSettings['length'] ||\n                    maps.layers[0].navigationLineSettings['length'])) {\n                    togglebtn.disabled = false;\n                }\n            }\n        }\n    });\n    maps.appendTo('#container');\n    var markerCheckBox = new ej2_buttons_2.CheckBox({\n        change: function (e) {\n            markerCheck = e.checked;\n            markerShape.enabled = e.checked;\n        }, checked: true\n    }, '#marker');\n    var lineCheckBox = new ej2_buttons_2.CheckBox({\n        change: function (e) {\n            lineCheck = e.checked;\n            if (e.checked) {\n                connectlineCheckBox.disabled = false;\n                connectlineCheckBox.checked = false;\n                widthCheck['disabled'] = false;\n            }\n            else {\n                connectLineCheck = e.checked;\n                emptySavedLinePositions();\n                connectlineCheckBox.disabled = true;\n                connectlineCheckBox.checked = false;\n                widthCheck['disabled'] = true;\n            }\n        }\n    }, '#line');\n    var connectlineCheckBox = new ej2_buttons_2.CheckBox({\n        disabled: true,\n        change: function (e) {\n            connectLineCheck = e.checked;\n            if (!e.checked) {\n                emptySavedLinePositions();\n            }\n        }\n    }, '#connect');\n    var markerShape = new ej2_dropdowns_1.DropDownList({\n        index: 0,\n        placeholder: 'Select marker shape',\n        width: '100%'\n    });\n    markerShape.appendTo('#type');\n    var widthCheck = document.getElementById('width');\n    var togglebtn = new ej2_buttons_1.Button({\n        cssClass: 'e-info',\n        isPrimary: true,\n        disabled: true\n    });\n    togglebtn.appendTo('#togglebtn');\n    document.getElementById('togglebtn').onclick = function () {\n        maps.layers[0].markerSettings = [];\n        maps.layers[0].navigationLineSettings = [];\n        navigationLines = [];\n        emptySavedLinePositions();\n        togglebtn.disabled = true;\n    };\n    var emptySavedLinePositions = function () {\n        latitude = [];\n        longitude = [];\n    };\n    var addMarker = function (args) {\n        if (args['latitude'] !== null && args['longitude'] !== null) {\n            var layerIndex = (args.target.indexOf('_LayerIndex_') !== -1) ?\n                parseFloat(args.target.split('_LayerIndex_')[1].split('_')[0]) : 0;\n            var marker = void 0;\n            var dynamicMarker = maps.layersCollection[layerIndex].markerSettings;\n            dynamicMarker.push(new ej2_maps_1.MarkerSettings(maps, 'markerSettings', marker));\n            var markerIndex = dynamicMarker.length - 1;\n            dynamicMarker[markerIndex].visible = true;\n            dynamicMarker[markerIndex].dataSource = [\n                { latitude: args['latitude'], longitude: args['longitude'], name: 'dynamicmarker' }\n            ];\n            dynamicMarker[markerIndex].animationDuration = 0;\n            dynamicMarker[markerIndex].fill = '#DB4537';\n            dynamicMarker[markerIndex].shape = (markerShape.value !== 'Image') ? markerShape.value : 'Image';\n            dynamicMarker[markerIndex].height = (markerShape.value !== 'Image') ? 12 : 20;\n            dynamicMarker[markerIndex].width = (markerShape.value !== 'Image') ? 12 : 20;\n            dynamicMarker[markerIndex].imageUrl = (markerShape.value !== 'Image') ? '' : 'https://ej2.syncfusion.com/demos/src/maps/images/ballon.png';\n        }\n    };\n    var addLine = function (lineArgs, lineWidth, connectiveLine) {\n        if (lineArgs.latitude != null && lineArgs.longitude != null) {\n            latitude.push(lineArgs.latitude);\n            longitude.push(lineArgs.longitude);\n        }\n        if (latitude.length >= 2) {\n            navigationLines.push({\n                'visible': true,\n                'latitude': [latitude[(latitude.length - 2)], latitude[(latitude.length - 1)]],\n                'longitude': [longitude[(longitude.length - 2)], longitude[(longitude.length - 1)]],\n                'angle': 0,\n                'color': 'blue',\n                'width': (lineWidth > 5) ? 5 : (((5 >= lineWidth) && (lineWidth >= 1)) ? lineWidth : 1)\n            });\n            maps.layers[0].navigationLineSettings = navigationLines;\n            if (!connectiveLine) {\n                emptySavedLinePositions();\n            }\n        }\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/maps/dynamic-marker/index.ts?");

/***/ })

/******/ });