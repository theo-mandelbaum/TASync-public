/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/chart/series-animation/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/chart/series-animation/index.ts","charts.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/chart/series-animation/index.ts":
/*!*************************************************!*\
  !*** ./samples/chart/series-animation/index.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-charts */ \"./node_modules/@syncfusion/ej2-charts/index.js\"), __webpack_require__(/*! ./theme-color */ \"./samples/chart/series-animation/theme-color.ts\"), __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_charts_1, theme_color_1, ej2_navigations_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_charts_1.Chart.Inject(ej2_charts_1.LineSeries, ej2_charts_1.SplineSeries, ej2_charts_1.ColumnSeries, ej2_charts_1.SplineAreaSeries, ej2_charts_1.BarSeries, ej2_charts_1.BubbleSeries, ej2_charts_1.ScatterSeries, ej2_charts_1.StepLineSeries, ej2_charts_1.RangeColumnSeries, ej2_charts_1.Category, ej2_charts_1.DataLabel, ej2_charts_1.Highlight);\n    var splinedata = shuffleArray([\n        { x: '1', y: 30 },\n        { x: '2', y: 10 },\n        { x: '3', y: 80 },\n        { x: '4', y: 20 },\n        { x: '5', y: 30, },\n        { x: '6', y: 5 },\n        { x: '7', y: 69 },\n        { x: '8', y: 15 },\n        { x: '9', y: 60 },\n        { x: '10', y: 70 }\n    ]);\n    var linedata = shuffleArray([\n        { x: '1', y: 10 },\n        { x: '2', y: 30 },\n        { x: '3', y: 80 },\n        { x: '4', y: 20 },\n        { x: '5', y: 30, },\n        { x: '6', y: 40 },\n        { x: '7', y: 69 },\n        { x: '8', y: 15 },\n        { x: '9', y: 60 },\n        { x: '10', y: 70 }\n    ]);\n    var columndata = shuffleArray([\n        { x: '1', y: 90 },\n        { x: '2', y: 10 },\n        { x: '3', y: 50 },\n        { x: '4', y: 20 },\n        { x: '5', y: 30, },\n        { x: '6', y: 70 },\n        { x: '7', y: 9 }\n    ]);\n    var areadata = shuffleArray([\n        { x: '1', y: 10 },\n        { x: '2', y: 20 },\n        { x: '3', y: 80 },\n        { x: '4', y: 15 },\n        { x: '5', y: 30, },\n        { x: '6', y: 40 },\n        { x: '7', y: 69 },\n        { x: '8', y: 15 }\n    ]);\n    var bardata = shuffleArray([\n        { x: '1', y: 90 },\n        { x: '2', y: 10 },\n        { x: '3', y: 50 },\n        { x: '4', y: 20 },\n        { x: '5', y: 30, },\n        { x: '6', y: 70 },\n        { x: '7', y: 9 }\n    ]);\n    var rangecolumndata = [\n        { x: '1', low: 30, high: 60 },\n        { x: '2', low: 42, high: 73 },\n        { x: '3', low: 35, high: 80 },\n        { x: '4', low: 20, high: 50 },\n        { x: '5', low: 30, high: 80 },\n        { x: '6', low: 10, high: 40 },\n        { x: '7', low: 15, high: 69 }\n    ];\n    var steplinedata = shuffleArray([\n        { x: '1', y: 10 },\n        { x: '2', y: 30 },\n        { x: '3', y: 80 },\n        { x: '4', y: 20 },\n        { x: '5', y: 30, },\n        { x: '6', y: 40 },\n        { x: '7', y: 69 },\n        { x: '8', y: 15 },\n        { x: '9', y: 60 },\n        { x: '10', y: 70 }\n    ]);\n    var bubbledata = shuffleArray([\n        { x: '1.5', y: 80, size: 5 },\n        { x: '2', y: 60, size: 10 },\n        { x: '3', y: 70, size: 8 },\n        { x: '4', y: 13, size: 6 },\n        { x: '5', y: 30, size: 9 },\n        { x: '6', y: 20, size: 7 },\n        { x: '6.5', y: 40, size: 11 }\n    ]);\n    function shuffleArray(array) {\n        var _a;\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            _a = [array[j], array[i]], array[i] = _a[0], array[j] = _a[1];\n        }\n        return array;\n    }\n    ;\n    var scatterdata = shuffleArray([\n        { x: '1', y: 15, y1: 10 },\n        { x: '1.25', y: 35, y1: 20 },\n        { x: '1.5', y: 60, y1: 50 },\n        { x: '1.75', y: 25, y1: 15 },\n        { x: '2', y: 25, y1: 35 },\n        { x: '2.25', y: 30, y1: 30 },\n        { x: '2.5', y: 45, y1: 30 },\n        { x: '2.75', y: 40, y1: 20 },\n        { x: '3', y: 30, y1: 45 },\n        { x: '3.25', y: 55, y1: 35 },\n        { x: '3.5', y: 65, y1: 20 },\n        { x: '3.75', y: 40, y1: 50 },\n        { x: '4', y: 40, y1: 60 },\n        { x: '4.25', y: 60, y1: 25 },\n        { x: '4.5', y: 15, y1: 25 },\n        { x: '4.75', y: 75, y1: 55 },\n        { x: '5', y: 50, y1: 40 },\n        { x: '5.25', y: 45, y1: 30 },\n        { x: '5.5', y: 20, y1: 15 },\n        { x: '5.75', y: 65, y1: 35 },\n        { x: '6', y: 65, y1: 65 },\n        { x: '6.25', y: 35, y1: 50 },\n        { x: '6.5', y: 70, y1: 35 },\n        { x: '6.75', y: 50, y1: 40 },\n        { x: '7', y: 25, y1: 60 },\n        { x: '7.25', y: 60, y1: 45 },\n        { x: '7.5', y: 45, y1: 20 },\n        { x: '7.75', y: 30, y1: 15 },\n        { x: '8', y: 60, y1: 50 },\n        { x: '8.25', y: 25, y1: 35 },\n        { x: '8.5', y: 30, y1: 10 },\n        { x: '8.75', y: 45, y1: 25 },\n        { x: '9', y: 75, y1: 45 },\n        { x: '9.25', y: 40, y1: 50 },\n        { x: '9.5', y: 20, y1: 15 },\n        { x: '9.75', y: 30, y1: 40 },\n        { x: '10', y: 60, y1: 25 }\n    ]);\n    var scatterdata1 = shuffleArray([\n        { x: '1', y: 60, y1: 45 },\n        { x: '1.25', y: 40, y1: 30 },\n        { x: '1.5', y: 25, y1: 10 },\n        { x: '1.75', y: 15, y1: 50 },\n        { x: '2', y: 15, y1: 65 },\n        { x: '2.25', y: 35, y1: 50 },\n        { x: '2.5', y: 40, y1: 30 },\n        { x: '2.75', y: 60, y1: 25 },\n        { x: '3', y: 65, y1: 25 },\n        { x: '3.25', y: 30, y1: 15 },\n        { x: '3.5', y: 20, y1: 60 },\n        { x: '3.75', y: 50, y1: 40 },\n        { x: '4', y: 50, y1: 35 },\n        { x: '4.25', y: 55, y1: 50 },\n        { x: '4.5', y: 75, y1: 15 },\n        { x: '4.75', y: 45, y1: 60 },\n        { x: '5', y: 45, y1: 50 },\n        { x: '5.25', y: 35, y1: 30 },\n        { x: '5.5', y: 30, y1: 20 },\n        { x: '5.75', y: 55, y1: 40 },\n        { x: '6', y: 70, y1: 55 },\n        { x: '6.25', y: 60, y1: 25 },\n        { x: '6.5', y: 15, y1: 40 },\n        { x: '6.75', y: 40, y1: 15 },\n        { x: '7', y: 30, y1: 25 },\n        { x: '7.25', y: 60, y1: 35 },\n        { x: '7.5', y: 60, y1: 35 },\n        { x: '7.75', y: 25, y1: 15 },\n        { x: '8', y: 25, y1: 10 },\n        { x: '8.25', y: 50, y1: 30 },\n        { x: '8.5', y: 45, y1: 65 },\n        { x: '8.75', y: 55, y1: 20 },\n        { x: '9', y: 50, y1: 60 },\n        { x: '9.25', y: 30, y1: 45 },\n        { x: '9.5', y: 10, y1: 20 },\n        { x: '9.75', y: 40, y1: 35 },\n        { x: '10', y: 55, y1: 15 }\n    ]);\n    var scatterdata2 = shuffleArray([\n        { x: '1', y: 70, y1: 25 },\n        { x: '1.25', y: 55, y1: 40 },\n        { x: '1.5', y: 45, y1: 40 },\n        { x: '1.75', y: 30, y1: 45 },\n        { x: '2', y: 20, y1: 55 },\n        { x: '2.25', y: 30, y1: 45 },\n        { x: '2.5', y: 10, y1: 35 },\n        { x: '2.75', y: 25, y1: 15 },\n        { x: '3', y: 50, y1: 20 },\n        { x: '3.25', y: 60, y1: 30 },\n        { x: '3.5', y: 25, y1: 60 },\n        { x: '3.75', y: 50, y1: 45 },\n        { x: '4', y: 30, y1: 15 },\n        { x: '4.25', y: 55, y1: 20 },\n        { x: '4.5', y: 65, y1: 75 },\n        { x: '4.75', y: 45, y1: 35 },\n        { x: '5', y: 60, y1: 45 },\n        { x: '5.25', y: 35, y1: 10 },\n        { x: '5.5', y: 15, y1: 30 },\n        { x: '5.75', y: 30, y1: 60 },\n        { x: '6', y: 55, y1: 50 },\n        { x: '6.25', y: 25, y1: 45 },\n        { x: '6.5', y: 35, y1: 10 },\n        { x: '6.75', y: 20, y1: 30 },\n        { x: '7', y: 40, y1: 65 },\n        { x: '7.25', y: 30, y1: 45 },\n        { x: '7.5', y: 30, y1: 60 },\n        { x: '7.75', y: 45, y1: 30 },\n        { x: '8', y: 60, y1: 45 },\n        { x: '8.25', y: 50, y1: 40 },\n        { x: '8.5', y: 20, y1: 25 },\n        { x: '8.75', y: 70, y1: 15 },\n        { x: '9', y: 75, y1: 15 },\n        { x: '9.25', y: 30, y1: 50 },\n        { x: '9.5', y: 50, y1: 35 },\n        { x: '9.75', y: 55, y1: 20 },\n        { x: '10', y: 15, y1: 70 }\n    ]);\n    var scatterdata3 = shuffleArray([\n        { x: '1', y: 20, y1: 30 },\n        { x: '1.25', y: 30, y1: 20 },\n        { x: '1.5', y: 35, y1: 60 },\n        { x: '1.75', y: 40, y1: 30 },\n        { x: '2', y: 55, y1: 20 },\n        { x: '2.25', y: 45, y1: 35 },\n        { x: '2.5', y: 60, y1: 45 },\n        { x: '2.75', y: 25, y1: 30 },\n        { x: '3', y: 45, y1: 15 },\n        { x: '3.25', y: 50, y1: 45 },\n        { x: '3.5', y: 50, y1: 35 },\n        { x: '3.75', y: 15, y1: 40 },\n        { x: '4', y: 15, y1: 70 },\n        { x: '4.25', y: 45, y1: 55 },\n        { x: '4.5', y: 75, y1: 10 },\n        { x: '4.75', y: 60, y1: 25 },\n        { x: '5', y: 30, y1: 55 },\n        { x: '5.25', y: 45, y1: 35 },\n        { x: '5.5', y: 60, y1: 25 },\n        { x: '5.75', y: 40, y1: 45 },\n        { x: '6', y: 10, y1: 50 },\n        { x: '6.25', y: 20, y1: 65 },\n        { x: '6.5', y: 65, y1: 40 },\n        { x: '6.75', y: 30, y1: 30 },\n        { x: '7', y: 25, y1: 65 },\n        { x: '7.25', y: 35, y1: 40 },\n        { x: '7.5', y: 20, y1: 45 },\n        { x: '7.75', y: 60, y1: 50 },\n        { x: '8', y: 35, y1: 60 },\n        { x: '8.25', y: 25, y1: 45 },\n        { x: '8.5', y: 30, y1: 15 },\n        { x: '8.75', y: 50, y1: 70 },\n        { x: '9', y: 45, y1: 75 },\n        { x: '9.25', y: 20, y1: 35 },\n        { x: '9.5', y: 40, y1: 50 },\n        { x: '9.75', y: 45, y1: 30 },\n        { x: '10', y: 50, y1: 25 }\n    ]);\n    var scatterdata4 = shuffleArray([\n        { x: '1', y: 50, y1: 60 },\n        { x: '1.25', y: 45, y1: 55 },\n        { x: '1.5', y: 15, y1: 30 },\n        { x: '1.75', y: 55, y1: 20 },\n        { x: '2', y: 60, y1: 45 },\n        { x: '2.25', y: 55, y1: 35 },\n        { x: '2.5', y: 55, y1: 20 },\n        { x: '2.75', y: 30, y1: 50 },\n        { x: '3', y: 70, y1: 50 },\n        { x: '3.25', y: 25, y1: 35 },\n        { x: '3.5', y: 30, y1: 35 },\n        { x: '3.75', y: 45, y1: 60 },\n        { x: '4', y: 65, y1: 15 },\n        { x: '4.25', y: 20, y1: 70 },\n        { x: '4.5', y: 25, y1: 75 },\n        { x: '4.75', y: 35, y1: 25 },\n        { x: '5', y: 40, y1: 60 },\n        { x: '5.25', y: 50, y1: 30 },\n        { x: '5.5', y: 20, y1: 10 },\n        { x: '5.75', y: 35, y1: 40 },\n        { x: '6', y: 35, y1: 45 },\n        { x: '6.25', y: 30, y1: 25 },\n        { x: '6.5', y: 30, y1: 70 },\n        { x: '6.75', y: 60, y1: 20 },\n        { x: '7', y: 45, y1: 25 },\n        { x: '7.25', y: 40, y1: 35 },\n        { x: '7.5', y: 20, y1: 55 },\n        { x: '7.75', y: 50, y1: 40 },\n        { x: '8', y: 50, y1: 40 },\n        { x: '8.25', y: 35, y1: 55 },\n        { x: '8.5', y: 60, y1: 35 },\n        { x: '8.75', y: 30, y1: 60 },\n        { x: '9', y: 10, y1: 65 },\n        { x: '9.25', y: 25, y1: 50 },\n        { x: '9.5', y: 40, y1: 50 },\n        { x: '9.75', y: 30, y1: 25 },\n        { x: '10', y: 65, y1: 30 },\n    ]);\n    var splineIntervalId;\n    var lineIntervalId;\n    var columnIntervalId;\n    var areaIntervalId;\n    var barIntervalId;\n    var rangeIntervalId;\n    var stepLineIntervalId;\n    var scatterIntervalId;\n    var bubbleIntervalId;\n    var tabObj = new ej2_navigations_1.Tab({ heightAdjustMode: 'None', overflowMode: 'Scrollable', height: '500px', headerPlacement: 'Top',\n        selected: tabSelected,\n        items: [\n            { header: { 'text': 'Line' }, content: '#lineCharts' },\n            { header: { 'text': 'Column' }, content: '#columnCharts' },\n            { header: { 'text': 'Spline' }, content: '#splineCharts' },\n            { header: { 'text': 'Area' }, content: '#areaCharts' },\n            { header: { 'text': 'Bar' }, content: '#barCharts' },\n            { header: { 'text': 'Bubble' }, content: '#bubbleCharts' },\n            { header: { 'text': 'Scatter' }, content: '#scatterCharts' },\n            { header: { 'text': 'Step line' }, content: '#stepLineCharts' },\n            { header: { 'text': 'Range column' }, content: '#rangeCharts' },\n        ]\n    });\n    tabObj.appendTo('#element');\n    function tabSelected(e) {\n        var chartIds = [\n            'lineCharts',\n            'columnCharts',\n            'splineCharts',\n            'areaCharts',\n            'barCharts',\n            'bubbleCharts',\n            'scatterCharts',\n            'stepLineCharts',\n            'rangeCharts'\n        ];\n        chartIds.forEach(function (id, index) {\n            if (index === e.selectedIndex) {\n                var chartElement = document.getElementById(id);\n                if (chartElement) {\n                    var chart = chartElement.ej2_instances[0];\n                    chart.refresh();\n                }\n            }\n        });\n    }\n    var splineChart = new ej2_charts_1.Chart({\n        primaryXAxis: {\n            valueType: 'Category',\n            majorGridLines: { width: 0 },\n            majorTickLines: { width: 0 },\n            minorTickLines: { width: 0 }\n        },\n        primaryYAxis: {\n            labelFormat: '{value}',\n            maximum: 100,\n            minimum: 0,\n            edgeLabelPlacement: 'Shift',\n            lineStyle: { width: 0 },\n            majorTickLines: { width: 0 }\n        },\n        chartArea: { border: { width: 0 } },\n        width: '100%',\n        loaded: splineLoaded,\n        load: splineLoad,\n        series: [{\n                dataSource: splinedata,\n                xName: 'x',\n                yName: 'y',\n                type: 'Spline',\n                width: 2.5,\n                marker: { visible: true, height: 8, width: 8, dataLabel: { visible: true, position: 'Outer' } },\n                animation: { enable: true }\n            }]\n    });\n    splineChart.appendTo('#splineCharts');\n    var lineChart = new ej2_charts_1.Chart({\n        primaryXAxis: {\n            valueType: 'Category',\n            majorGridLines: { width: 0 },\n            majorTickLines: { width: 0 },\n            minorTickLines: { width: 0 }\n        },\n        primaryYAxis: {\n            labelFormat: '{value}',\n            maximum: 100,\n            minimum: 0,\n            edgeLabelPlacement: 'Shift',\n            lineStyle: { width: 0 },\n            majorTickLines: { width: 0 }\n        },\n        chartArea: { border: { width: 0 } },\n        width: '100%',\n        loaded: lineLoaded,\n        load: lineLoad,\n        series: [{\n                dataSource: linedata,\n                xName: 'x',\n                yName: 'y',\n                type: 'Line',\n                width: 2.5,\n                marker: { visible: true, height: 8, width: 8, dataLabel: { visible: true, position: 'Outer' } },\n                animation: { enable: true }\n            }]\n    });\n    lineChart.appendTo('#lineCharts');\n    var columnCharts = new ej2_charts_1.Chart({\n        primaryXAxis: {\n            valueType: 'Category',\n            majorGridLines: { width: 0 },\n            majorTickLines: { width: 0 },\n            minorTickLines: { width: 0 }\n        },\n        primaryYAxis: {\n            labelFormat: '{value}',\n            maximum: 100,\n            minimum: 0,\n            edgeLabelPlacement: 'Shift',\n            lineStyle: { width: 0 },\n            majorTickLines: { width: 0 }\n        },\n        chartArea: { border: { width: 0 } },\n        width: '100%',\n        loaded: columnLoaded,\n        load: columnLoad,\n        series: [{\n                dataSource: columndata,\n                xName: 'x',\n                yName: 'y',\n                type: 'Column',\n                marker: { visible: false, dataLabel: { visible: true, position: 'Outer' } },\n                animation: { enable: true },\n                cornerRadius: { topLeft: 4, topRight: 4 }\n            }]\n    });\n    columnCharts.appendTo('#columnCharts');\n    var areaChart = new ej2_charts_1.Chart({\n        primaryXAxis: {\n            valueType: 'Category',\n            majorGridLines: { width: 0 },\n            majorTickLines: { width: 0 },\n            minorTickLines: { width: 0 }\n        },\n        primaryYAxis: {\n            labelFormat: '{value}',\n            maximum: 100,\n            minimum: 0,\n            edgeLabelPlacement: 'Shift',\n            lineStyle: { width: 0 },\n            majorTickLines: { width: 0 }\n        },\n        chartArea: { border: { width: 0 } },\n        width: '100%',\n        loaded: areaLoaded,\n        load: areaLoad,\n        series: [{\n                dataSource: areadata,\n                xName: 'x',\n                yName: 'y',\n                type: 'SplineArea',\n                marker: { visible: false, dataLabel: { visible: true, position: 'Outer' } },\n                animation: { enable: true }\n            }]\n    });\n    areaChart.appendTo('#areaCharts');\n    var barChart = new ej2_charts_1.Chart({\n        primaryXAxis: {\n            valueType: 'Category',\n            majorGridLines: { width: 0 },\n            majorTickLines: { width: 0 },\n            minorTickLines: { width: 0 }\n        },\n        primaryYAxis: {\n            labelFormat: '{value}',\n            maximum: 100,\n            minimum: 0,\n            edgeLabelPlacement: 'Shift',\n            lineStyle: { width: 0 },\n            majorTickLines: { width: 0 }\n        },\n        chartArea: { border: { width: 0 } },\n        width: '100%',\n        loaded: barLoaded,\n        load: barLoad,\n        series: [{\n                dataSource: bardata,\n                xName: 'x',\n                yName: 'y',\n                type: 'Bar',\n                marker: { visible: false, dataLabel: { visible: true, position: 'Outer' } },\n                animation: { enable: true },\n                cornerRadius: { bottomRight: 4, topRight: 4 }\n            }]\n    });\n    barChart.appendTo('#barCharts');\n    var bubbleChart = new ej2_charts_1.Chart({\n        primaryXAxis: {\n            minimum: 1,\n            maximum: 7,\n            interval: 1,\n            majorGridLines: { width: 0 },\n            majorTickLines: { width: 0 }\n        },\n        primaryYAxis: {\n            minimum: 0,\n            maximum: 100,\n            lineStyle: { width: 0 },\n            majorTickLines: { width: 0 }\n        },\n        chartArea: { border: { width: 0 } },\n        pointRender: theme_color_1.bubblePointRender,\n        loaded: bubbleLoaded,\n        load: bubbleLoad,\n        legendSettings: { visible: false },\n        series: [{\n                dataSource: bubbledata,\n                type: 'Bubble',\n                border: { width: 2 },\n                xName: 'x',\n                yName: 'y',\n                size: 'size',\n                animation: { enable: true }\n            }]\n    });\n    bubbleChart.appendTo('#bubbleCharts');\n    var scatterChart = new ej2_charts_1.Chart({\n        primaryXAxis: {\n            minimum: 1,\n            interval: 1,\n            maximum: 10,\n            majorGridLines: { width: 0 },\n            majorTickLines: { width: 0 },\n            edgeLabelPlacement: 'Shift'\n        },\n        primaryYAxis: {\n            majorTickLines: { width: 0 },\n            lineStyle: { width: 0 },\n            minimum: 0,\n            maximum: 80,\n            interval: 10,\n            rangePadding: 'None'\n        },\n        chartArea: { border: { width: 0 } },\n        loaded: scatterLoaded,\n        load: scatterLoad,\n        series: [\n            {\n                dataSource: scatterdata,\n                xName: 'x',\n                yName: 'y',\n                type: 'Scatter',\n                marker: { visible: false, width: 8, height: 8, shape: 'Circle' },\n                animation: { enable: true }\n            },\n            {\n                dataSource: scatterdata,\n                xName: 'x',\n                yName: 'y1',\n                type: 'Scatter',\n                marker: { visible: false, width: 8, height: 8, shape: 'Circle' },\n                animation: { enable: true }\n            }\n        ]\n    });\n    scatterChart.appendTo('#scatterCharts');\n    var rangeChart = new ej2_charts_1.Chart({\n        primaryXAxis: {\n            valueType: 'Category',\n            majorGridLines: { width: 0 },\n            majorTickLines: { width: 0 },\n            minorTickLines: { width: 0 }\n        },\n        primaryYAxis: {\n            labelFormat: '{value}',\n            maximum: 100,\n            minimum: 0,\n            edgeLabelPlacement: 'Shift',\n            lineStyle: { width: 0 },\n            majorTickLines: { width: 0 }\n        },\n        chartArea: { border: { width: 0 } },\n        width: '100%',\n        loaded: rangeLoaded,\n        load: rangeLoad,\n        series: [{\n                dataSource: rangecolumndata,\n                xName: 'x',\n                high: 'high',\n                low: 'low',\n                type: 'RangeColumn',\n                columnSpacing: 0.1,\n                marker: { visible: false, dataLabel: { visible: true, position: 'Outer' } },\n                animation: { enable: true },\n                cornerRadius: { bottomRight: 4, bottomLeft: 4, topRight: 4, topLeft: 4 }\n            }]\n    });\n    rangeChart.appendTo('#rangeCharts');\n    var stepLineChart = new ej2_charts_1.Chart({\n        primaryXAxis: {\n            valueType: 'Category',\n            majorGridLines: { width: 0 },\n            majorTickLines: { width: 0 },\n            minorTickLines: { width: 0 }\n        },\n        primaryYAxis: {\n            labelFormat: '{value}',\n            maximum: 100,\n            minimum: 0,\n            edgeLabelPlacement: 'Shift',\n            lineStyle: { width: 0 },\n            majorTickLines: { width: 0 }\n        },\n        chartArea: { border: { width: 0 } },\n        width: '100%',\n        loaded: stepLoaded,\n        load: stepLoad,\n        series: [{\n                dataSource: steplinedata,\n                xName: 'x',\n                yName: 'y',\n                width: 2.5,\n                type: 'StepLine',\n                marker: { visible: false },\n                animation: { enable: true }\n            }]\n    });\n    stepLineChart.appendTo('#stepLineCharts');\n    function splineLoaded(args) {\n        var chart = document.getElementById('splineCharts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    function splineClearInterval() {\n        if (splineIntervalId) {\n            clearInterval(splineIntervalId);\n            splineIntervalId = null;\n        }\n    }\n    function splineLoad(args) {\n        (0, theme_color_1.loadChartTheme)(args);\n        splineClearInterval();\n        splineIntervalId = setInterval(function () {\n            var container = document.getElementById('splineCharts');\n            if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n                var newData = splinedata.map(function (item) {\n                    var min = 10;\n                    var max = 90;\n                    var value = Math.floor(Math.random() * (max - min + 1)) + min;\n                    return { x: item.x, y: value };\n                });\n                if (args.chart.series.length > 0) {\n                    args.chart.series[0].setData(newData, 1400);\n                }\n            }\n            else {\n                splineClearInterval();\n            }\n        }, 2000);\n    }\n    ;\n    function generateRandomValues(item) {\n        var min = 10;\n        var max = 95;\n        var value = Math.floor(Math.random() * (max - min + 1)) + min;\n        return { x: item.x, y: value };\n    }\n    ;\n    function generateRandomBubbleData(item) {\n        var minYValue = 5;\n        var maxYValue = 95;\n        var randomYValue = Math.random() * (maxYValue - minYValue) + minYValue;\n        var minSize = 3.5;\n        var maxSize = 9.5;\n        var randomSize = Math.random() * (maxSize - minSize) + minSize;\n        return __assign(__assign({}, item), { y: randomYValue, size: randomSize });\n    }\n    ;\n    function lineLoaded(args) {\n        var chart = document.getElementById('lineCharts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    function lineClearInterval() {\n        if (lineIntervalId) {\n            clearInterval(lineIntervalId);\n            lineIntervalId = null;\n        }\n    }\n    function lineLoad(args) {\n        (0, theme_color_1.loadChartTheme)(args);\n        lineClearInterval();\n        lineIntervalId = setInterval(function () {\n            var container = document.getElementById('lineCharts');\n            if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n                var newData = linedata.map(generateRandomValues);\n                if (args.chart.series.length > 0) {\n                    args.chart.series[0].setData(newData, 1400);\n                }\n            }\n            else {\n                lineClearInterval();\n            }\n        }, 2000);\n    }\n    ;\n    function columnLoaded(args) {\n        var chart = document.getElementById('columnCharts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    function columnClearInterval() {\n        if (columnIntervalId) {\n            clearInterval(columnIntervalId);\n            columnIntervalId = null;\n        }\n    }\n    function columnLoad(args) {\n        (0, theme_color_1.loadChartTheme)(args);\n        columnClearInterval();\n        columnIntervalId = setInterval(function () {\n            var container = document.getElementById('columnCharts');\n            if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n                var newData = columndata.map(generateRandomValues);\n                if (args.chart.series.length > 0) {\n                    args.chart.series[0].setData(newData, 1400);\n                }\n            }\n            else {\n                columnClearInterval();\n            }\n        }, 2000);\n    }\n    ;\n    function areaLoaded(args) {\n        var chart = document.getElementById('areaCharts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    function areaClearInterval() {\n        if (areaIntervalId) {\n            clearInterval(areaIntervalId);\n            areaIntervalId = null;\n        }\n    }\n    function areaLoad(args) {\n        (0, theme_color_1.loadChartTheme)(args);\n        areaClearInterval();\n        areaIntervalId = setInterval(function () {\n            var container = document.getElementById('areaCharts');\n            if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n                var newData = areadata.map(generateRandomValues);\n                if (args.chart.series.length > 0) {\n                    args.chart.series[0].setData(newData, 1400);\n                }\n            }\n            else {\n                areaClearInterval();\n            }\n        }, 2000);\n    }\n    ;\n    function barLoaded(args) {\n        var chart = document.getElementById('barCharts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    function barClearInterval() {\n        if (barIntervalId) {\n            clearInterval(barIntervalId);\n            barIntervalId = null;\n        }\n    }\n    function barLoad(args) {\n        (0, theme_color_1.loadChartTheme)(args);\n        barClearInterval();\n        barIntervalId = setInterval(function () {\n            var container = document.getElementById('barCharts');\n            if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n                var newData = bardata.map(generateRandomValues);\n                if (args.chart.series.length > 0) {\n                    args.chart.series[0].setData(newData, 1400);\n                }\n            }\n            else {\n                barClearInterval();\n            }\n        }, 2000);\n    }\n    ;\n    function rangeLoaded(args) {\n        var chart = document.getElementById('rangeCharts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    function rangeClearInterval() {\n        if (rangeIntervalId) {\n            clearInterval(rangeIntervalId);\n            rangeIntervalId = null;\n        }\n    }\n    function rangeLoad(args) {\n        (0, theme_color_1.loadChartTheme)(args);\n        rangeClearInterval();\n        rangeIntervalId = setInterval(function () {\n            var container = document.getElementById('rangeCharts');\n            if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n                var newData = rangecolumndata.map(function (item) {\n                    var highMin = 50;\n                    var highMax = 95;\n                    var lowMin = 5;\n                    var lowMax = 45;\n                    var highValue = Math.floor(Math.random() * (highMax - highMin + 1)) + highMin;\n                    var lowValue = Math.floor(Math.random() * (lowMax - lowMin + 1)) + lowMin;\n                    return { x: item.x, high: highValue, low: lowValue };\n                });\n                if (args.chart.series.length > 0) {\n                    args.chart.series[0].setData(newData, 1400);\n                }\n            }\n            else {\n                rangeClearInterval();\n            }\n        }, 2000);\n    }\n    ;\n    function stepLoaded(args) {\n        var chart = document.getElementById('stepLineCharts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    function stepLineClearInterval() {\n        if (stepLineIntervalId) {\n            clearInterval(stepLineIntervalId);\n            stepLineIntervalId = null;\n        }\n    }\n    function stepLoad(args) {\n        (0, theme_color_1.loadChartTheme)(args);\n        stepLineClearInterval();\n        stepLineIntervalId = setInterval(function () {\n            var container = document.getElementById('stepLineCharts');\n            if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n                var newData = steplinedata.map(generateRandomValues);\n                if (args.chart.series.length > 0) {\n                    args.chart.series[0].setData(newData, 1400);\n                }\n            }\n            else {\n                stepLineClearInterval();\n            }\n        }, 2000);\n    }\n    ;\n    function scatterLoaded(args) {\n        var chart = document.getElementById('scatterCharts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    function scatterClearInterval() {\n        if (scatterIntervalId) {\n            clearInterval(scatterIntervalId);\n            scatterIntervalId = null;\n        }\n    }\n    function scatterLoad(args) {\n        (0, theme_color_1.loadChartTheme)(args);\n        var index = 1;\n        var datasets = [scatterdata, scatterdata1, scatterdata2, scatterdata3, scatterdata4];\n        scatterClearInterval();\n        scatterIntervalId = setInterval(function () {\n            var container = document.getElementById('scatterCharts');\n            if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n                var scatterDataSource = datasets[index % datasets.length];\n                index++;\n                args.chart.series[0].setData(scatterDataSource, 2000);\n                args.chart.series[1].setData(scatterDataSource, 2000);\n            }\n            else {\n                scatterClearInterval();\n            }\n        }, 2000);\n    }\n    ;\n    function bubbleClearInterval() {\n        if (bubbleIntervalId) {\n            clearInterval(bubbleIntervalId);\n            bubbleIntervalId = null;\n        }\n    }\n    function bubbleLoad(args) {\n        (0, theme_color_1.loadChartTheme)(args);\n        bubbleClearInterval();\n        bubbleIntervalId = setInterval(function () {\n            var container = document.getElementById('bubbleCharts');\n            if (container && container.children.length > 0 && container.id === args.chart.element.id) {\n                if (args.chart.series.length > 0) {\n                    var newBubbleData = bubbledata.map(generateRandomBubbleData);\n                    newBubbleData = shuffleArray(newBubbleData);\n                    args.chart.series[0].setData(newBubbleData, 1400);\n                }\n            }\n            else {\n                bubbleClearInterval();\n            }\n        }, 2000);\n    }\n    ;\n    function bubbleLoaded(args) {\n        var chart = document.getElementById('bubbleCharts');\n        chart.setAttribute('title', '');\n    }\n    ;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/chart/series-animation/index.ts?");

/***/ }),

/***/ "./samples/chart/series-animation/theme-color.ts":
/*!*******************************************************!*\
  !*** ./samples/chart/series-animation/theme-color.ts ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.pieLegendPointRender = exports.roundedColumnPointRender = exports.piePatternPointrender = exports.overViewPointrender = exports.funnelPointRender = exports.loadAccumulationChartTheme = exports.loadChartTheme = exports.roundedCornnerPointRender = exports.donutPointRender = exports.pointRender = exports.bubblePointRender = exports.keyBootstrapdarkColors = exports.keyBootstrap4Colors = exports.keyFabricDark = exports.pointFluent2DarkColors = exports.pointFluent2HighContrastColors = exports.pointFluent2Colors = exports.pointMaterial3DarkColors = exports.pointMaterial3Colors = exports.pointBootstrap5DarkColors = exports.pointBootstrap5Colors = exports.pointTailwind3DarkColors = exports.pointTailwind3Colors = exports.pointTailwindDarkColors = exports.pointTailwindColors = exports.pointFluentDarkColors = exports.pointMaterialDarkColors = exports.pointFluentColors = exports.pointHighContrastColors = exports.pointBootstrapColors = exports.pointFabricColors = exports.pointMaterialColors = exports.bubbleFluent2DarkColors = exports.bubbleFluent2HighContrastColors = exports.bubbleFluent2Colors = exports.bubbleMaterial3DarkColors = exports.bubbleMaterial3Colors = exports.bubbleBootstrap5DarkColors = exports.bubbleBootstrap5Colors = exports.bubbleTailwind3DarkColors = exports.bubbleTailwind3Colors = exports.bubbleTailwindDarkColors = exports.bubbleTailwindColors = exports.bubbleFluentDarkColors = exports.bubbleMaterialDarkColors = exports.bubbleFluentColors = exports.bubbleHighContrastColors = exports.bubbleBootstrapColors = exports.bubbleFabricColors = exports.bubbleMaterialColors = exports.fluent2DarkColors = exports.fluent2HighContrastColors = exports.fluent2Colors = exports.fluentDarkColors = exports.fluentColors = exports.highContrastColors = exports.bootstrap5Colors = exports.bootstrapColors = exports.fabricColors = exports.materialColors = void 0;\n    exports.materialColors = [\"#00bdae\", \"#404041\", \"#357cd2\", \"#e56590\", \"#f8b883\", \"#70ad47\", \"#dd8abd\", \"#7f84e8\", \"#7bb4eb\",\n        \"#ea7a57\", \"#404041\", \"#00bdae\"];\n    exports.fabricColors = [\"#4472c4\", \"#ed7d31\", \"#ffc000\", \"#70ad47\", \"#5b9bd5\",\n        \"#c1c1c1\", \"#6f6fe2\", \"#e269ae\", \"#9e480e\", \"#997300\", \"#4472c4\", \"#70ad47\", \"#ffc000\", \"#ed7d31\"];\n    exports.bootstrapColors = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\",\n        \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\", \"#b91c52\"];\n    exports.bootstrap5Colors = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545',\n        '#FFC107', '#198754', '#0DCAF0', '#FD7E14', '#6610F2'];\n    exports.highContrastColors = [\"#79ECE4\", \"#E98272\", \"#DFE6B6\", \"#C6E773\", \"#BA98FF\",\n        \"#FA83C3\", \"#00C27A\", \"#43ACEF\", \"#D681EF\", \"#D8BC6E\"];\n    exports.fluentColors = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n        \"#7D39C0\"];\n    exports.fluentDarkColors = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n        \"#7D39C0\"];\n    exports.fluent2Colors = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n        \"#C19C00\"];\n    exports.fluent2HighContrastColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n        \"#0B6A0B\", \"#C19C00\"];\n    exports.fluent2DarkColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n        \"#0B6A0B\", \"#C19C00\"];\n    exports.bubbleMaterialColors = [\"rgba(0, 189, 174, 0.5)\", \"rgba(64, 64, 65, 0.5)\", \"rgba(53, 124, 210, 0.5)\", \"rgba(229, 101, 144, 0.5)\", \"rgba(248, 184, 131, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(221, 138, 189, 0.5)\",\n        \"rgba(127, 132, 232, 0.5)\", \"rgba(123, 180, 235, 0.5)\", \"rgba(234, 122, 87, 0.5)\", \"rgba(64, 64, 65, 0.5)\", \"rgba(0, 189, 174, 0.5)\"];\n    exports.bubbleFabricColors = [\"rgba(68, 114, 196, 0.5)\", \"rgba(237, 125, 49, 0.5)\", \"rgba(255, 192, 0, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(91, 155, 213, 0.5)\", \"rgba(193, 193, 193, 0.5)\", \"rgba(111, 111, 226, 0.5)\",\n        \"rgba(226, 105, 174, 0.5)\", \"rgba(158, 72, 14, 0.5)\", \"rgba(153, 115, 0, 0.5)\", \"rgba(68, 114, 196, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(255, 192, 0, 0.5)\", \"rgba(237, 125, 49, 0.5)\"];\n    exports.bubbleBootstrapColors = [\"rgba(161, 110, 229, 0.5)\", \"rgba(247, 206, 105, 0.5)\", \"rgba(85, 165, 194, 0.5)\", \"rgba(125, 223, 30, 0.5)\", \"rgba(255, 110, 166, 0.5)\", \"rgba(121, 83, 172, 0.5)\",\n        \"rgba(185, 155, 79, 0.5)\", \"rgba(64, 124, 146, 0.5)\", \"rgba(94, 167, 22, 0.5)\", \"rgba(185, 28, 82, 0.5)\"];\n    exports.bubbleHighContrastColors = [\"rgba(121, 236, 228, 0.5)\", \"rgba(233, 130, 114, 0.5)\", \"rgba(223, 230, 182, 0.5)\", \"rgba(198, 231, 115, 0.5)\", \"rgba(186, 152, 255, 0.5)\", \"rgba(250, 131, 195, 0.5)\", \"rgba(0, 194, 122, 0.5)\",\n        \"rgba(67, 172, 239, 0.5)\", \"rgba(214, 129, 239, 0.5)\", \"rgba(216, 188, 110, 0.5)\"];\n    exports.bubbleFluentColors = [\"rgba(26, 201, 230, 0.5)\", \"rgba(218, 76, 178, 0.5)\", \"rgba(237, 187, 64, 0.5)\", \"rgba(175, 75, 207, 0.5)\", \"rgba(255, 114, 102, 0.5)\", \"rgba(27, 213, 101, 0.5)\", \"rgba(238, 153, 61, 0.5)\",\n        \"rgba(88, 135, 255, 0.5)\", \"rgba(236, 84, 141, 0.5)\", \"rgba(125, 57, 192, 0.5)\"];\n    exports.bubbleMaterialDarkColors = [\"rgba(158, 203, 8, 0.5)\", \"rgba(86, 174, 255, 0.5)\", \"rgba(197, 122, 255, 0.5)\", \"rgba(97, 234, 169, 0.5)\", \"rgba(235, 187, 62, 0.5)\", \"rgba(244, 92, 92, 0.5)\", \"rgba(138, 119, 255, 0.5)\",\n        \"rgba(99, 199, 255, 0.5)\", \"rgba(255, 132, 176, 0.5)\", \"rgba(247, 201, 40, 0.5)\"];\n    exports.bubbleFluentDarkColors = [\"rgba(26, 201, 230, 0.5)\", \"rgba(218, 76, 178, 0.5)\", \"rgba(237, 187, 64, 0.5)\", \"rgba(175, 75, 207, 0.5)\", \"rgba(255, 114, 102, 0.5)\", \"rgba(27, 213, 101, 0.5)\", \"rgba(238, 153, 61, 0.5)\",\n        \"rgba(88, 135, 255, 0.5)\", \"rgba(236, 84, 141, 0.5)\", \"rgba(125, 57, 192, 0.5)\"];\n    exports.bubbleTailwindColors = [\"rgba(90, 97, 246, 0.5)\", \"rgba(101, 163, 13, 0.5)\", \"rgba(51, 65, 85, 0.5)\", \"rgba(20, 184, 166, 0.5)\", \"rgba(139, 92, 246, 0.5)\", \"rgba(3, 105, 161, 0.5)\", \"rgba(249, 115, 22, 0.5)\",\n        \"rgba(147, 51, 234, 0.5)\", \"rgba(245, 158, 11, 0.5)\", \"rgba(21, 128, 61, 0.5)\"];\n    exports.bubbleTailwindDarkColors = [\"rgba(139, 92, 246, 0.5)\", \"rgba(34, 211, 238, 0.5)\", \"rgba(248, 113, 113, 0.5)\", \"rgba(74, 222, 128, 0.5)\", \"rgba(232, 121, 249, 0.5)\", \"rgba(252, 211, 77, 0.5)\", \"rgba(249, 115, 22, 0.5)\",\n        \"rgba(45, 212, 191, 0.5)\", \"rgba(244, 114, 182, 0.5)\", \"rgba(16, 185, 129, 0.5)\"];\n    exports.bubbleTailwind3Colors = [\"rgba(47, 64, 116, 0.5)\", \"rgba(3, 180, 180, 0.5)\", \"rgba(13, 114, 222, 0.5)\", \"rgba(255, 87, 51, 0.5)\", \"rgba(214, 51, 132, 0.5)\", \"rgba(243, 156, 18, 0.5)\", \"rgba(239, 41, 31, 0.5)\", \"rgba(145, 200, 34, 0.5)\", \"rgba(47, 64, 116, 0.5)\", \"rgba(3, 180, 180, 0.5)\"];\n    exports.bubbleTailwind3DarkColors = [\"rgba(128, 41, 241, 0.5)\", \"rgba(26, 188, 156, 0.5)\", \"rgba(13, 114, 222, 0.5)\", \"rgba(255, 87, 51, 0.5)\", \"rgba(214, 51, 132, 0.5)\", \"rgba(243, 156, 18, 0.5)\", \"rgba(239, 41, 31, 0.5)\", \"rgba(145, 200, 34, 0.5)\", \"rgba(128, 41, 241, 0.5)\", \"rgba(26, 188, 156, 0.5)\"];\n    exports.bubbleBootstrap5Colors = ['rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)', 'rgba(255, 193, 7, 0.5)', 'rgba(25, 135, 84, 0.5)', 'rgba(13, 202, 240, 0.5)', 'rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)'];\n    exports.bubbleBootstrap5DarkColors = ['rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)', 'rgba(255, 193, 7, 0.5)', 'rgba(25, 135, 84, 0.5)', 'rgba(13, 202, 240, 0.5)', 'rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)'];\n    exports.bubbleMaterial3Colors = [\"rgba(99, 85, 199, 0.5)\", \"rgba(0, 174, 224, 0.5)\", \"rgba(255, 180, 0, 0.5)\", \"rgba(247, 82, 63, 0.5)\", \"rgba(150, 60, 112, 0.5)\", \"rgba(253, 116, 0, 0.5)\", \"rgba(75, 224, 188, 0.5)\", \"rgba(33, 150, 245, 0.5)\", \"rgba(222, 61, 138, 0.5)\", \"rgba(22, 47, 136, 0.5)\"];\n    exports.bubbleMaterial3DarkColors = [\"rgba(78, 170, 255, 0.5)\", \"rgba(250, 78, 171, 0.5)\", \"rgba(255, 245, 0, 0.5)\", \"rgba(23, 234, 88, 0.5)\", \"rgba(56, 255, 231, 0.5)\", \"rgba(255, 158, 69, 0.5)\", \"rgba(179, 243, 47, 0.5)\", \"rgba(185, 60, 228, 0.5)\", \"rgba(252, 86, 100, 0.5)\", \"rgba(155, 85, 255, 0.5)\"];\n    exports.bubbleFluent2Colors = [\"rgba(98, 0, 238, 0.5)\", \"rgba(9, 175, 116, 0.5)\", \"rgba(0, 118, 229, 0.5)\", \"rgba(203, 53, 135, 0.5)\", \"rgba(231, 145, 15, 0.5)\", \"rgba(3, 100, 222, 0.5)\", \"rgba(102, 205, 21, 0.5)\", \"rgba(243, 169, 60, 0.5)\",\n        \"rgba(16, 124, 16, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\n    exports.bubbleFluent2HighContrastColors = [\"rgba(155, 180, 73, 0.5)\", \"rgba(42, 114, 213, 0.5)\", \"rgba(67, 183, 134, 0.5)\", \"rgba(63, 87, 154, 0.5)\", \"rgba(88, 78, 198, 0.5)\", \"rgba(232, 95, 156, 0.5)\", \"rgba(110, 122, 137, 0.5)\", \"rgba(234, 98, 102, 0.5)\",\n        \"rgba(11, 106, 11, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\n    exports.bubbleFluent2DarkColors = [\"rgba(155, 180, 73, 0.5)\", \"rgba(42, 114, 213, 0.5)\", \"rgba(67, 183, 134, 0.5)\", \"rgba(63, 87, 154, 0.5)\", \"rgba(88, 78, 198, 0.5)\", \"rgba(232, 95, 156, 0.5)\", \"rgba(110, 122, 137, 0.5)\", \"rgba(234, 98, 102, 0.5)\",\n        \"rgba(11, 106, 11, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\n    exports.pointMaterialColors = [\"#00bdae\", \"#404041\", \"#357cd2\", \"#e56590\", \"#f8b883\", \"#70ad47\", \"#dd8abd\", \"#7f84e8\", \"#7bb4eb\",\n        \"#ea7a57\", \"#404041\", \"#00bdae\"];\n    exports.pointFabricColors = [\"#4472c4\", \"#ed7d31\", \"#ffc000\", \"#70ad47\", \"#5b9bd5\", \"#c1c1c1\", \"#6f6fe2\", \"#e269ae\", \"#9e480e\",\n        \"#997300\", \"#4472c4\", \"#70ad47\", \"#ffc000\", \"#ed7d31\"];\n    exports.pointBootstrapColors = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\", \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\",\n        \"#b91c52\"];\n    exports.pointHighContrastColors = [\"#79ECE4\", \"#E98272\", \"#DFE6B6\", \"#C6E773\", \"#BA98FF\", \"#FA83C3\", \"#00C27A\", \"#43ACEF\", \"#D681EF\",\n        \"#D8BC6E\"];\n    exports.pointFluentColors = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n        \"#7D39C0\"];\n    exports.pointMaterialDarkColors = [\"#9ECB08\", \"#56AEFF\", \"#C57AFF\", \"#61EAA9\", \"#EBBB3E\", \"#F45C5C\", \"#8A77FF\", \"#63C7FF\", \"#FF84B0\",\n        \"#F7C928\"];\n    exports.pointFluentDarkColors = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n        \"#7D39C0\"];\n    exports.pointTailwindColors = [\"#5A61F6\", \"#65A30D\", \"#334155\", \"#14B8A6\", \"#8B5CF6\", \"#0369A1\", \"#F97316\", \"#9333EA\", \"#F59E0B\", \"#15803D\"];\n    exports.pointTailwindDarkColors = [\"#8B5CF6\", \"#22D3EE\", \"#F87171\", \"#4ADE80\", \"#E879F9\", \"#FCD34D\", \"#F97316\", \"#2DD4BF\", \"#F472B6\", \"#10B981\"];\n    exports.pointTailwind3Colors = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#2F4074', '#03B4B4'];\n    exports.pointTailwind3DarkColors = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#8029F1', '#1ABC9C'];\n    exports.pointBootstrap5Colors = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545', '#FFC107', '#198754', '#0DCAF0', '#FD7E14', '#6610F2',];\n    exports.pointBootstrap5DarkColors = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545', '#FFC107', '#198754', '#0DCAF0', '#FD7E14', '#6610F2',];\n    exports.pointMaterial3Colors = [\"#6355C7\", \"#00AEE0\", \"#FFB400\", \"#F7523F\", \"#963C70\", \"#FD7400\", \"#4BE0BC\", \"#2196F5\", \"#DE3D8A\", \"#162F88\"];\n    exports.pointMaterial3DarkColors = [\"#4EAAFF\", \"#FA4EAB\", \"#FFF500\", \"#17EA58\", \"#38FFE7\", \"#FF9E45\", \"#B3F32F\", \"#B93CE4\", \"#FC5664\", \"#9B55FF\"];\n    exports.pointFluent2Colors = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n        \"#C19C00\"];\n    exports.pointFluent2HighContrastColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n        \"#0B6A0B\", \"#C19C00\"];\n    exports.pointFluent2DarkColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n        \"#0B6A0B\", \"#C19C00\"];\n    exports.keyFabricDark = [\"#4472C4\", \"#ED7D31\", \"#FFC000\", \"#70AD47\"];\n    exports.keyBootstrap4Colors = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6', '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\n    exports.keyBootstrapdarkColors = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\", \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\", \"#b91c52\"];\n    var bubblePointRender = function (args) {\n        var selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n        if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n            args.fill = exports.bubbleFabricColors[args.point.index % 10];\n            args.border.color = exports.pointFabricColors[args.point.index % 10];\n            ;\n        }\n        else if (selectedTheme === 'material-dark') {\n            args.fill = exports.bubbleMaterialDarkColors[args.point.index % 10];\n            args.border.color = exports.pointMaterialDarkColors[args.point.index % 10];\n            ;\n        }\n        else if (selectedTheme === 'material') {\n            args.fill = exports.bubbleMaterialColors[args.point.index % 10];\n            args.border.color = exports.pointMaterialColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'bootstrap5-dark') {\n            args.fill = exports.bubbleBootstrap5DarkColors[args.point.index % 10];\n            args.border.color = exports.pointBootstrap5DarkColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'bootstrap5') {\n            args.fill = exports.bubbleBootstrap5Colors[args.point.index % 10];\n            args.border.color = exports.pointBootstrap5Colors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'bootstrap') {\n            args.fill = exports.bubbleBootstrapColors[args.point.index % 10];\n            args.border.color = exports.pointBootstrapColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'bootstrap4') {\n            args.fill = exports.bubbleBootstrapColors[args.point.index % 10];\n            args.border.color = exports.pointBootstrapColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'bootstrap-dark') {\n            args.fill = exports.bubbleBootstrapColors[args.point.index % 10];\n            args.border.color = exports.pointBootstrapColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'highcontrast') {\n            args.fill = exports.bubbleHighContrastColors[args.point.index % 10];\n            args.border.color = exports.pointHighContrastColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'fluent-dark') {\n            args.fill = exports.bubbleFluentDarkColors[args.point.index % 10];\n            args.border.color = exports.pointFluentDarkColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'fluent') {\n            args.fill = exports.bubbleFluentColors[args.point.index % 10];\n            args.border.color = exports.pointFluentColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'tailwind-dark') {\n            args.fill = exports.bubbleTailwindDarkColors[args.point.index % 10];\n            args.border.color = exports.pointTailwindDarkColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'tailwind') {\n            args.fill = exports.bubbleTailwindColors[args.point.index % 10];\n            args.border.color = exports.pointTailwindColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'material3') {\n            args.fill = exports.bubbleMaterial3Colors[args.point.index % 10];\n            args.border.color = exports.pointMaterial3Colors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'material3-dark') {\n            args.fill = exports.bubbleMaterial3DarkColors[args.point.index % 10];\n            args.border.color = exports.pointMaterial3DarkColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'fluent2') {\n            args.fill = exports.bubbleFluent2Colors[args.point.index % 10];\n            args.border.color = exports.pointFluent2Colors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'fluent2-highcontrast') {\n            args.fill = exports.bubbleFluent2HighContrastColors[args.point.index % 10];\n            args.border.color = exports.pointFluent2HighContrastColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'fluent2-dark') {\n            args.fill = exports.bubbleFluent2DarkColors[args.point.index % 10];\n            args.border.color = exports.pointFluent2DarkColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'tailwind3-dark') {\n            args.fill = exports.bubbleTailwind3DarkColors[args.point.index % 10];\n            args.border.color = exports.pointTailwind3DarkColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'tailwind3') {\n            args.fill = exports.bubbleTailwind3Colors[args.point.index % 10];\n            args.border.color = exports.pointTailwind3Colors[args.point.index % 10];\n        }\n    };\n    exports.bubblePointRender = bubblePointRender;\n    var pointRender = function (args) {\n        var selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n        if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n            args.fill = exports.pointFabricColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'material-dark') {\n            args.fill = exports.pointMaterialDarkColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'material') {\n            args.fill = exports.pointMaterialColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'bootstrap5-dark') {\n            args.fill = exports.pointBootstrap5DarkColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'bootstrap5') {\n            args.fill = exports.pointBootstrap5Colors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'bootstrap') {\n            args.fill = exports.pointBootstrapColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'bootstrap4') {\n            args.fill = exports.pointBootstrapColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'bootstrap-dark') {\n            args.fill = exports.pointBootstrapColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'highcontrast') {\n            args.fill = exports.pointHighContrastColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'fluent-dark') {\n            args.fill = exports.pointFluentDarkColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'fluent') {\n            args.fill = exports.pointFluentColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'tailwind-dark') {\n            args.fill = exports.pointTailwindDarkColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'tailwind') {\n            args.fill = exports.pointTailwindColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'material3') {\n            args.fill = exports.pointMaterial3Colors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'fluent2') {\n            args.fill = exports.pointFluent2Colors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n            args.fill = exports.pointFluent2HighContrastColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'material3-dark') {\n            args.fill = exports.pointMaterial3DarkColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'tailwind3-dark') {\n            args.fill = exports.pointTailwind3DarkColors[args.point.index % 10];\n        }\n        else if (selectedTheme === 'tailwind3') {\n            args.fill = exports.pointTailwind3Colors[args.point.index % 10];\n        }\n    };\n    exports.pointRender = pointRender;\n    var seriesColor = ['#FFE066', \"#FAB666\", \"#F68F6A\", \"#F3646A\", \"#CC555A\", \"#9C4649\"];\n    var donutPointRender = function (args) {\n        var selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n        if (selectedTheme === 'fluent') {\n            args.fill = seriesColor[args.point.index % 10];\n        }\n        else if (selectedTheme === 'bootstrap5') {\n            args.fill = seriesColor[args.point.index % 10];\n        }\n        if (selectedTheme.indexOf('dark') > -1) {\n            if (selectedTheme.indexOf('material') > -1) {\n                args.border.color = '#303030';\n            }\n            else if (selectedTheme.indexOf('bootstrap5') > -1) {\n                args.border.color = '#212529';\n            }\n            else if (selectedTheme.indexOf('bootstrap') > -1) {\n                args.border.color = '#1A1A1A';\n            }\n            else if (selectedTheme.indexOf('fabric') > -1) {\n                args.border.color = '#201f1f';\n            }\n            else if (selectedTheme.indexOf('fluent') > -1) {\n                args.border.color = '#252423';\n            }\n            else if (selectedTheme.indexOf('bootstrap') > -1) {\n                args.border.color = '#1A1A1A';\n            }\n            else if (selectedTheme.indexOf('tailwind') > -1) {\n                args.border.color = '#1F2937';\n            }\n            else {\n                args.border.color = '#222222';\n            }\n        }\n        else if (selectedTheme.indexOf('highcontrast') > -1) {\n            args.border.color = '#000000';\n        }\n        else if (selectedTheme.indexOf('fluent2') > -1) {\n            args.fill = seriesColor[args.point.index % 10];\n        }\n        else {\n            args.border.color = '#FFFFFF';\n        }\n    };\n    exports.donutPointRender = donutPointRender;\n    var roundedCornnerPointRender = function (args) {\n        var selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n        if (selectedTheme.indexOf('dark') > -1) {\n            if (selectedTheme.indexOf('material') > -1) {\n                args.border.color = '#303030';\n            }\n            else if (selectedTheme.indexOf('bootstrap5') > -1) {\n                args.border.color = '#212529';\n            }\n            else if (selectedTheme.indexOf('bootstrap') > -1) {\n                args.border.color = '#1A1A1A';\n            }\n            else if (selectedTheme.indexOf('fabric') > -1) {\n                args.border.color = '#201f1f';\n            }\n            else if (selectedTheme.indexOf('fluent') > -1) {\n                args.border.color = '#252423';\n            }\n            else if (selectedTheme.indexOf('bootstrap') > -1) {\n                args.border.color = '#1A1A1A';\n            }\n            else if (selectedTheme.indexOf('tailwind') > -1) {\n                args.border.color = '#1F2937';\n            }\n            else {\n                args.border.color = '#222222';\n            }\n        }\n        else if (selectedTheme.indexOf('highcontrast') > -1) {\n            args.border.color = '#000000';\n        }\n        else {\n            args.border.color = '#FFFFFF';\n        }\n    };\n    exports.roundedCornnerPointRender = roundedCornnerPointRender;\n    function loadChartTheme(args) {\n        var selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n        var theme;\n        if (args) {\n            theme = args.chart.theme = (selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        }\n        else {\n            theme = (selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        }\n        return theme;\n    }\n    exports.loadChartTheme = loadChartTheme;\n    ;\n    function loadAccumulationChartTheme(args) {\n        var selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n        args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        return selectedTheme;\n    }\n    exports.loadAccumulationChartTheme = loadAccumulationChartTheme;\n    ;\n    var funnelPointRender = function (args) {\n        var selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n        if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n            args.fill = exports.pointFabricColors[0];\n        }\n        else if (selectedTheme === 'material-dark') {\n            args.fill = exports.pointMaterialDarkColors[0];\n            ;\n        }\n        else if (selectedTheme === 'material') {\n            args.fill = exports.pointMaterialColors[0];\n        }\n        else if (selectedTheme === 'bootstrap5-dark') {\n            args.fill = exports.pointBootstrap5DarkColors[0];\n        }\n        else if (selectedTheme === 'bootstrap5') {\n            args.fill = exports.pointBootstrap5Colors[0];\n        }\n        else if (selectedTheme === 'bootstrap') {\n            args.fill = exports.pointBootstrapColors[0];\n        }\n        else if (selectedTheme === 'bootstrap4') {\n            args.fill = exports.pointBootstrapColors[0];\n        }\n        else if (selectedTheme === 'bootstrap-dark') {\n            args.fill = exports.pointBootstrapColors[0];\n        }\n        else if (selectedTheme === 'highcontrast') {\n            args.fill = exports.pointHighContrastColors[0];\n        }\n        else if (selectedTheme === 'fluent-dark') {\n            args.fill = exports.pointFluentDarkColors[0];\n        }\n        else if (selectedTheme === 'fluent') {\n            args.fill = exports.pointFluentColors[0];\n        }\n        else if (selectedTheme === 'tailwind-dark') {\n            args.fill = exports.pointTailwindDarkColors[0];\n        }\n        else if (selectedTheme === 'tailwind') {\n            args.fill = exports.pointTailwindColors[0];\n        }\n        else if (selectedTheme === 'material3-dark') {\n            args.fill = exports.pointMaterial3DarkColors[0];\n        }\n        else if (selectedTheme === 'material3') {\n            args.fill = exports.pointMaterial3Colors[0];\n        }\n        else if (selectedTheme === 'fluent2') {\n            args.fill = exports.pointFluent2Colors[0];\n        }\n        else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n            args.fill = exports.pointFluent2HighContrastColors[0];\n        }\n        else if (selectedTheme === 'tailwind3-dark') {\n            args.fill = exports.pointTailwind3DarkColors[0];\n        }\n        else if (selectedTheme === 'tailwind3') {\n            args.fill = exports.pointTailwind3Colors[0];\n        }\n        ;\n    };\n    exports.funnelPointRender = funnelPointRender;\n    var overViewPointrender = function (args) {\n        var layoutColor;\n        var selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n        if (selectedTheme.indexOf('dark') > -1) {\n            if (selectedTheme.indexOf('material') > -1) {\n                args.border.color = '#303030';\n                layoutColor = '#303030';\n            }\n            else if (selectedTheme.indexOf('bootstrap5') > -1) {\n                args.border.color = '#212529';\n                layoutColor = '#212529';\n            }\n            else if (selectedTheme.indexOf('bootstrap') > -1) {\n                args.border.color = '#1A1A1A';\n                layoutColor = '#1A1A1A';\n            }\n            else if (selectedTheme.indexOf('fabric') > -1) {\n                args.border.color = '#201f1f';\n                layoutColor = '#201f1f';\n            }\n            else if (selectedTheme.indexOf('fluent') > -1) {\n                args.border.color = '#252423';\n                layoutColor = '#252423';\n            }\n            else if (selectedTheme.indexOf('bootstrap') > -1) {\n                args.border.color = '#1A1A1A';\n                layoutColor = '#1A1A1A';\n            }\n            else if (selectedTheme.indexOf('tailwind') > -1) {\n                args.border.color = '#1F2937';\n                layoutColor = '#1F2937';\n            }\n            else {\n                args.border.color = '#222222';\n                layoutColor = '#222222';\n            }\n        }\n        else if (selectedTheme.indexOf('highcontrast') > -1) {\n            args.border.color = '#000000';\n            layoutColor = '#000000';\n        }\n        else if (selectedTheme.indexOf('fluent2-highcontrast') > -1) {\n            args.border.color = '#000000';\n            layoutColor = '#000000';\n        }\n        else {\n            args.border.color = '#FFFFFF';\n            layoutColor = '#FFFFFF';\n        }\n        if ((selectedTheme.indexOf('highcontrast') > -1 || selectedTheme.indexOf('dark') > -1) && document.getElementById('defaultLayout')) {\n            var el = document.getElementById('header1');\n            el.style.setProperty('color', '#F3F2F1');\n            var el1 = document.getElementById('header2');\n            el1.style.setProperty('color', '#F3F2F1');\n            var el2 = document.getElementById('header3');\n            el2.style.setProperty('color', '#F3F2F1');\n        }\n        if (document.getElementById('defaultLayout')) {\n            var element = document.getElementById('layout_0template');\n            element.style.setProperty('background', layoutColor);\n            var elementBody = document.getElementById('linechart');\n            elementBody.style.setProperty('background', layoutColor);\n            var element1 = document.getElementById('layout_1template');\n            element1.style.setProperty('background', layoutColor);\n            var element1Body = document.getElementById('pie');\n            element1Body.style.setProperty('background', layoutColor);\n            var element2 = document.getElementById('layout_2template');\n            element2.style.setProperty('background', layoutColor);\n            var element2Body = document.getElementById('chart');\n            element2Body.style.setProperty('background', layoutColor);\n        }\n    };\n    exports.overViewPointrender = overViewPointrender;\n    var piePatternPointrender = function (args) {\n        if (args.point.index == 0) {\n            args.pattern = 'DiagonalBackward';\n        }\n        else if (args.point.index == 1) {\n            args.pattern = 'DiagonalForward';\n        }\n        else if (args.point.index == 2) {\n            args.pattern = 'HorizontalStripe';\n        }\n        else if (args.point.index == 3) {\n            args.pattern = 'VerticalStripe';\n        }\n        else if (args.point.index == 4) {\n            args.pattern = 'HorizontalDash';\n        }\n        var selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n        if (selectedTheme.indexOf('dark') > -1) {\n            if (selectedTheme.indexOf('material') > -1) {\n                args.border.color = '#303030';\n            }\n            else if (selectedTheme.indexOf('bootstrap5') > -1) {\n                args.border.color = '#212529';\n            }\n            else if (selectedTheme.indexOf('bootstrap') > -1) {\n                args.border.color = '#1A1A1A';\n            }\n            else if (selectedTheme.indexOf('fabric') > -1) {\n                args.border.color = '#201f1f';\n            }\n            else if (selectedTheme.indexOf('fluent') > -1) {\n                args.border.color = '#252423';\n            }\n            else if (selectedTheme.indexOf('bootstrap') > -1) {\n                args.border.color = '#1A1A1A';\n            }\n            else if (selectedTheme.indexOf('tailwind') > -1) {\n                args.border.color = '#1F2937';\n            }\n            else {\n                args.border.color = '#222222';\n            }\n        }\n        else if (selectedTheme.indexOf('highcontrast') > -1) {\n            args.border.color = '#000000';\n        }\n        else if (selectedTheme.indexOf('fluent2-highcontrast') > -1) {\n            args.border.color = '#000000';\n        }\n        else {\n            args.border.color = '#FFFFFF';\n        }\n    };\n    exports.piePatternPointrender = piePatternPointrender;\n    var roundedColumnPointRender = function (args) {\n        var selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n        if (selectedTheme && selectedTheme.indexOf('fabric-dark') > -1) {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"f9fafb\";\n        }\n        else if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"grey\";\n        }\n        else if (selectedTheme === 'material-dark') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"f9fafb\";\n        }\n        else if (selectedTheme === 'material') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"grey\";\n        }\n        else if (selectedTheme === 'bootstrap5-dark') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"#f9fafb\";\n        }\n        else if (selectedTheme === 'bootstrap5') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"grey\";\n        }\n        else if (selectedTheme === 'bootstrap-dark') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"f9fafb\";\n        }\n        else if (selectedTheme === 'bootstrap') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"grey\";\n        }\n        else if (selectedTheme === 'highcontrast') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"#f9fafb\";\n        }\n        else if (selectedTheme === 'fluent-dark') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"#f9fafb\";\n        }\n        else if (selectedTheme === 'fluent') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"grey\";\n        }\n        else if (selectedTheme === 'tailwind-dark') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"#f9fafb\";\n        }\n        else if (selectedTheme === 'tailwind') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"grey\";\n        }\n        else if (selectedTheme === 'tailwind3-dark') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"#f9fafb\";\n        }\n        else if (selectedTheme === 'tailwind3') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"grey\";\n        }\n        else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"#f9fafb\";\n        }\n        else if (selectedTheme === 'fluent2') {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"grey\";\n        }\n        else {\n            if (args.series.yName == \"Rate\")\n                args.fill = \"grey\";\n        }\n    };\n    exports.roundedColumnPointRender = roundedColumnPointRender;\n    var pieLegendPointRender = function (args) {\n        var selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n        if (selectedTheme === 'fluent2') {\n            args.fill = exports.fluent2Colors[args.point.index % 10];\n        }\n    };\n    exports.pieLegendPointRender = pieLegendPointRender;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/chart/series-animation/theme-color.ts?");

/***/ })

/******/ });