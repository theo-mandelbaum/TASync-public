/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/diagram/tooltip-sample/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/diagram/tooltip-sample/index.ts","diagrams.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/diagram/tooltip-sample/index.ts":
/*!*************************************************!*\
  !*** ./samples/diagram/tooltip-sample/index.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-diagrams */ \"./node_modules/@syncfusion/ej2-diagrams/index.js\"), __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\"), __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_diagrams_1, ej2_dropdowns_1, ej2_inputs_1, ej2_buttons_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_diagrams_1.Diagram.Inject(ej2_diagrams_1.BpmnDiagrams);\n    var diagram;\n    var nodes = [\n        {\n            id: 'node1', width: 60, height: 60, offsetX: 35, offsetY: 120,\n            annotations: [{ content: 'Customer query', offset: { x: 0.5, y: 1 }, margin: { top: 15 } }],\n            tooltip: { content: 'Queries from the customer' },\n            shape: { type: 'Bpmn', shape: 'Event', event: { event: 'Start', trigger: 'Message' } }\n        },\n        {\n            id: 'node2', width: 75, height: 70, offsetX: 140, offsetY: 120,\n            annotations: [{ content: 'Enough details?', offset: { x: 0.50, y: 0.50 } }],\n            tooltip: { content: 'Whether the provided information is enough?' }, shape: { type: 'Bpmn', shape: 'Gateway' }\n        },\n        {\n            id: 'node3', width: 60, height: 50, offsetX: 270, offsetY: 120,\n            annotations: [{ content: 'Analyse', offset: { x: 0.50, y: 0.50 } }],\n            tooltip: { content: 'Analysing the query' },\n            shape: { type: 'Bpmn', shape: 'Activity', activity: { activity: 'Task' } },\n        },\n        {\n            id: 'node4', width: 75, height: 70, offsetX: 370, offsetY: 120, shape: {\n                type: 'Bpmn', shape: 'Gateway',\n                gateway: { type: 'Exclusive' }\n            },\n            tooltip: { content: 'proceed to validate?' },\n        },\n        {\n            id: 'node5', width: 75, height: 70, offsetX: 570, offsetY: 120,\n            annotations: [{ content: 'Validate', offset: { x: 0.50, y: 0.50 } }],\n            tooltip: { content: 'Whether the reported/requested bug/feature is valid?' }, shape: { type: 'Bpmn', shape: 'Gateway' }\n        },\n        {\n            id: 'node6', width: 60, height: 60, offsetX: 720, offsetY: 120,\n            tooltip: { content: 'Send the invalid message to customer' },\n            shape: { type: 'Bpmn', shape: 'Event', event: { event: 'End', trigger: 'Message' } }\n        },\n        {\n            id: 'node7', width: 60, height: 50, offsetX: 140, offsetY: 280,\n            annotations: [{ content: 'Request', offset: { x: 0.50, y: 0.50 }, margin: { top: 5 } }],\n            tooltip: { content: 'Requesting for more information' },\n            shape: { type: 'Bpmn', shape: 'Activity', activity: { activity: 'Task', task: { type: 'Send' } } }\n        },\n        {\n            id: 'node8', width: 60, height: 60, offsetX: 370, offsetY: 280,\n            tooltip: { content: 'Share the User Guide/Knowledge Base link' },\n            shape: { type: 'Bpmn', shape: 'Event', event: { event: 'Start', trigger: 'Message' } }\n        },\n        {\n            id: 'node9', width: 70, height: 50, offsetX: 570, offsetY: 280,\n            annotations: [{ content: 'Log bug/feature', offset: { x: 0.50, y: 0.50 } }], tooltip: { content: 'Log the bug/feature' },\n            shape: { type: 'Bpmn', shape: 'Activity', activity: { activity: 'Task' } }\n        },\n        {\n            id: 'node10', width: 75, height: 55, offsetX: 390, offsetY: 430,\n            annotations: [{ content: 'Implement', offset: { x: 0.50, y: 0.50 } }], tooltip: { content: 'Fix the bug/Add the feature' },\n            shape: {\n                type: 'Bpmn', shape: 'Activity', activity: {\n                    activity: 'SubProcess', subProcess: {\n                        collapsed: false,\n                        events: [{ event: 'Intermediate', trigger: 'Timer', offset: { x: 0.5, y: 1 }, width: 25, height: 25 }]\n                    }\n                }\n            }\n        },\n        {\n            id: 'node11', width: 60, height: 60, offsetX: 265, offsetY: 430, tooltip: { content: 'Provide the solution' },\n            shape: { type: 'Bpmn', shape: 'Event', event: { event: 'End', trigger: 'Message' } }\n        },\n        {\n            id: 'node12', width: 60, height: 60, offsetX: 720, offsetY: 430, tooltip: { content: 'Share the task details' },\n            shape: { type: 'Bpmn', shape: 'Event', event: { event: 'End', trigger: 'Message' } }\n        },\n        {\n            id: 'node13', width: 60, height: 60, offsetX: 570, offsetY: 430, shape: {\n                type: 'Bpmn', shape: 'Gateway',\n                gateway: { type: 'Parallel' }\n            },\n            tooltip: { content: 'can log?' },\n        },\n    ];\n    var connectors = [\n        { id: 'connector1', sourceID: 'node1', targetID: 'node2' },\n        { id: 'connector2', sourceID: 'node2', targetID: 'node3' },\n        { id: 'connector3', sourceID: 'node3', targetID: 'node4' },\n        {\n            id: 'connector4', sourceID: 'node4', targetID: 'node5',\n            annotations: [{ content: 'Feature/Bug', offset: 0.5, style: { fill: 'white', textWrapping: 'Wrap' } }]\n        },\n        {\n            id: 'connector5', sourceID: 'node5', targetID: 'node6',\n            annotations: [{ content: 'Invalid', offset: 0.5, style: { fill: 'white' } }]\n        },\n        { id: 'connector6', sourceID: 'node2', targetID: 'node7' },\n        {\n            id: 'connector7', sourceID: 'node4', targetID: 'node8',\n            annotations: [{ content: 'How to?', offset: 0.5, style: { fill: 'white' } }]\n        },\n        { id: 'connector8', sourceID: 'node5', targetID: 'node9' },\n        { id: 'connector9', sourceID: 'node13', targetID: 'node12' },\n        {\n            id: 'connector10', sourceID: 'node7', targetID: 'node3', type: 'Orthogonal',\n            segments: [{ type: 'Orthogonal', length: 100, direction: 'Right' }, { type: 'Orthogonal', length: 100, direction: 'Top' }]\n        },\n        { id: 'connector11', sourceID: 'node13', targetID: 'node10' },\n        { id: 'connector12', sourceID: 'node10', targetID: 'node11' },\n        { id: 'connector13', sourceID: 'node9', targetID: 'node13' },\n    ];\n    function getcontent() {\n        var tooltipContent = document.createElement('div');\n        tooltipContent.innerHTML =\n            '<div style=\"border-width:1px;\"><span> Tooltip !!! </span> </div>';\n        return tooltipContent;\n    }\n    function getConnectorDefaults(connector, diagram) {\n        connector.type = 'Orthogonal';\n        connector.style = { strokeWidth: 2 };\n        return connector;\n    }\n    function getNodeDefaults(obj) {\n        obj.offsetX += 0.5;\n        obj.offsetY += 0.5;\n        obj.constraints = ej2_diagrams_1.NodeConstraints.Default | ej2_diagrams_1.NodeConstraints.Tooltip;\n        obj.style = { strokeWidth: 2 };\n        return obj;\n    }\n    diagram = new ej2_diagrams_1.Diagram({\n        width: '100%', height: '560px', connectors: connectors, nodes: nodes,\n        getConnectorDefaults: getConnectorDefaults,\n        getNodeDefaults: getNodeDefaults,\n        snapSettings: { constraints: ej2_diagrams_1.SnapConstraints.None },\n        tooltip: {\n            content: getcontent(), position: 'TopLeft', relativeMode: 'Object',\n            animation: { open: { effect: 'FadeZoomIn', delay: 100 }, close: { effect: 'FadeZoomOut', delay: 100 } }\n        }\n    });\n    diagram.appendTo('#diagram');\n    var modevalue = [\n        { type: 'Object', text: 'Object' },\n        { type: 'Mouse', text: 'Mouse' },\n    ];\n    var positionValue = [\n        { type: 'TopLeft', text: 'Top Left' },\n        { type: 'TopCenter', text: 'Top Center' },\n        { type: 'TopRight', text: 'Top Right' },\n        { type: 'BottomLeft', text: 'Bottom Left' },\n        { type: 'BottomCenter', text: 'Bottom Center' },\n        { type: 'BottomRight', text: 'Bottom Right' },\n        { type: 'LeftTop', text: 'Left Top' },\n        { type: 'LeftCenter', text: 'Left Center' },\n        { type: 'LeftBottom', text: 'Left Bottom' },\n        { type: 'RightTop', text: 'Right Top' },\n        { type: 'RightCenter', text: 'Right Center' },\n        { type: 'RightBottom', text: 'Right Bottom' },\n    ];\n    var effectValue = [\n        { type: 'FadeIn', text: 'Fade In' },\n        { type: 'FadeOut', text: 'Fade Out' },\n        { type: 'FadeZoomIn', text: 'Fade Zoom In' },\n        { type: 'FadeZoomOut', text: 'Fade Zoom Out' },\n        { type: 'FlipXDownIn', text: 'FlipX Down In' },\n        { type: 'FlipXDownOut', text: 'FlipX Down Out' },\n        { type: 'FlipXUpIn', text: 'FlipX Up In' },\n        { type: 'FlipXUpOut', text: 'FlipX Up Out' },\n        { type: 'FlipYLeftIn', text: 'FlipY Left In' },\n        { type: 'FlipYLeftOut', text: 'FlipY Left Out' },\n        { type: 'FlipYRightIn', text: 'FlipY Right In' },\n        { type: 'FlipYRightOut', text: 'FlipY Right Out' },\n        { type: 'ZoomIn', text: 'Zoom In' },\n        { type: 'ZoomOut', text: 'Zoom Out' },\n        { type: 'None', text: 'None' },\n    ];\n    var mode = new ej2_dropdowns_1.DropDownList({\n        dataSource: modevalue,\n        fields: { value: 'type', text: 'text' }, popupWidth: 150,\n        width: '100%', placeholder: 'select a font type', index: 0,\n        change: function () {\n            if (mode.value === 'Mouse') {\n                diagram.tooltip.relativeMode = 'Mouse';\n            }\n            else {\n                diagram.tooltip.relativeMode = 'Object';\n            }\n        }\n    });\n    mode.appendTo('#mode');\n    var position = new ej2_dropdowns_1.DropDownList({\n        dataSource: positionValue,\n        fields: { value: 'type', text: 'text' }, popupWidth: 150,\n        width: '100%', placeholder: 'select a font type', index: 0,\n        change: function (args) {\n            var nodes = diagram.nodes;\n            for (var i = 0; i < nodes.length; i++) {\n                if (nodes[i].tooltip) {\n                    nodes[i].tooltip.position = args.value;\n                    diagram.dataBind();\n                }\n            }\n        }\n    });\n    position.appendTo('#position');\n    var effect = new ej2_dropdowns_1.DropDownList({\n        dataSource: effectValue,\n        fields: { value: 'type', text: 'text' }, popupWidth: 150,\n        width: '100%', placeholder: 'select a effect type', index: 0,\n        change: function (args) {\n            diagram.tooltip.animation.open.effect = args.value;\n            diagram.tooltip.animation.close.effect = args.value;\n        }\n    });\n    effect.appendTo('#effect');\n    var animation = new ej2_inputs_1.NumericTextBox({\n        format: '###.##',\n        change: function (args) {\n            diagram.tooltip.animation.close.duration = args.value;\n            diagram.tooltip.animation.open.duration = args.value;\n        }\n    });\n    animation.appendTo('#duration');\n    diagram.fitToPage({ mode: 'Width' });\n    var stickyMode = new ej2_buttons_1.CheckBox({\n        checked: false,\n        change: isStickyChange\n    });\n    stickyMode.appendTo('#checked');\n    function isStickyChange(args) {\n        for (var i = 0; i < diagram.nodes.length; i++) {\n            if (args.checked) {\n                diagram.tooltipObject.isSticky = true;\n            }\n            else {\n                diagram.tooltipObject.isSticky = false;\n            }\n            diagram.dataBind();\n        }\n    }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/diagram/tooltip-sample/index.ts?");

/***/ })

/******/ });