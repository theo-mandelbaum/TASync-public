/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/diagram/symbol-palette/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/diagram/symbol-palette/index.ts","diagrams.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/diagram/symbol-palette/index.ts":
/*!*************************************************!*\
  !*** ./samples/diagram/symbol-palette/index.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-diagrams */ \"./node_modules/@syncfusion/ej2-diagrams/index.js\"), __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\"), __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_diagrams_1, ej2_dropdowns_1, ej2_buttons_1, ej2_inputs_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    var palette;\n    var flowShapes = [\n        { id: 'Terminator', shape: { type: 'Flow', shape: 'Terminator' } },\n        { id: 'Process', shape: { type: 'Flow', shape: 'Process' } },\n        { id: 'Sort', shape: { type: 'Flow', shape: 'Sort' } },\n        { id: 'Document', shape: { type: 'Flow', shape: 'Document' } },\n        { id: 'PreDefinedProcess', shape: { type: 'Flow', shape: 'PreDefinedProcess' } },\n        { id: 'PaperTap', shape: { type: 'Flow', shape: 'PaperTap' } },\n        { id: 'DirectData', shape: { type: 'Flow', shape: 'DirectData' } },\n        { id: 'SequentialData', shape: { type: 'Flow', shape: 'SequentialData' } },\n    ];\n    var basicShapes = [\n        { id: 'Rectangle', shape: { type: 'Basic', shape: 'Rectangle' } },\n        { id: 'Ellipse', shape: { type: 'Basic', shape: 'Ellipse' } },\n        { id: 'Parallelogram', shape: { type: 'Basic', shape: 'Parallelogram' } },\n        { id: 'Triangle', shape: { type: 'Basic', shape: 'Triangle' } },\n        { id: 'Hexagon', shape: { type: 'Basic', shape: 'Hexagon' } },\n        { id: 'Pentagon', shape: { type: 'Basic', shape: 'Pentagon' } },\n        { id: 'Cylinder', shape: { type: 'Basic', shape: 'Cylinder' } },\n        { id: 'Star', shape: { type: 'Basic', shape: 'Star' } }\n    ];\n    var connectorSymbols = [\n        {\n            id: 'Link1', type: 'Orthogonal', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 40, y: 40 },\n        },\n        {\n            id: 'link3', type: 'Orthogonal', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 40, y: 40 },\n            targetDecorator: { shape: 'None' }\n        },\n        {\n            id: 'Link21', type: 'Straight', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 40, y: 40 },\n        },\n        {\n            id: 'link23', type: 'Straight', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 40, y: 40 },\n            targetDecorator: { shape: 'None' }\n        },\n        {\n            id: 'link33', type: 'Bezier', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 40, y: 40 },\n            targetDecorator: { shape: 'None' }\n        },\n    ];\n    function getNodeDefaults(symbol) {\n        if (symbol.id === 'Terminator' || symbol.id === 'Process') {\n            symbol.width = 80;\n            symbol.height = 40;\n        }\n        else if (symbol.id === 'Document' || symbol.id === 'PreDefinedProcess' ||\n            symbol.id === 'PaperTap' || symbol.id === 'DirectData') {\n            symbol.width = 50;\n            symbol.height = 40;\n        }\n        symbol.style = { strokeWidth: 2, strokeColor: '#757575' };\n        return symbol;\n    }\n    function getConnectorDefaults(symbol) {\n        symbol.style.strokeWidth = 2;\n        symbol.style.strokeColor = '#757575';\n        symbol.targetDecorator.style.strokeColor = '#757575';\n        symbol.targetDecorator.style.fill = '#757575';\n        return symbol;\n    }\n    function getSymbolInfo(symbol) {\n        return { fit: true };\n    }\n    function onAnimationChange(args) {\n        palette.enableAnimation = args.checked;\n    }\n    function onItemTextChange(args) {\n        if (args.checked) {\n            palette.getSymbolInfo = function (symbol) {\n                if (symbol.text !== undefined) {\n                    return { description: { text: symbol.text, overflow: 'Wrap' } };\n                }\n                return { description: { text: symbol.id } };\n            };\n        }\n        else {\n            palette.getSymbolInfo = function (symbol) {\n                return { description: { text: '' } };\n            };\n        }\n        palette.dataBind();\n    }\n    function onHeaderIconChange(args) {\n        for (var i = 0; i < palette.palettes.length; i++) {\n            if (args.checked) {\n                if (i === 0) {\n                    palette.palettes[i].iconCss = 'e-ddb-icons e-basic';\n                }\n                else if (i === 1) {\n                    palette.palettes[i].iconCss = 'e-ddb-icons e-flow';\n                }\n                else if (i === 2) {\n                    palette.palettes[i].iconCss = 'e-ddb-icons e-connector';\n                }\n            }\n            else {\n                palette.palettes[i].iconCss = '';\n            }\n        }\n    }\n    palette = new ej2_diagrams_1.SymbolPalette({\n        expandMode: 'Multiple', allowDrag: false,\n        palettes: [\n            { id: 'flow', expanded: true, symbols: flowShapes, iconCss: 'e-ddb-icons e-basic', title: 'Flow Shapes' },\n            { id: 'basic', expanded: true, symbols: basicShapes, iconCss: 'e-ddb-icons e-flow', title: 'Basic Shapes' },\n            { id: 'connectors', expanded: true, symbols: connectorSymbols, iconCss: 'e-ddb-icons e-connector', title: 'Connectors' }\n        ], enableAnimation: true,\n        width: '100%', height: '500px', symbolHeight: 80, symbolWidth: 80,\n        getNodeDefaults: getNodeDefaults, getConnectorDefaults: getConnectorDefaults, getSymbolInfo: getSymbolInfo,\n        symbolMargin: { left: 15, right: 15, top: 15, bottom: 15 }\n    });\n    palette.appendTo('#symbolpalette');\n    var animation = new ej2_buttons_1.CheckBox({\n        checked: true,\n        change: onAnimationChange\n    });\n    palette.dataBind();\n    animation.appendTo('#animation');\n    var expand = new ej2_dropdowns_1.DropDownList({\n        index: 1,\n        change: function () {\n            palette.expandMode = expand.value;\n            palette.dataBind();\n        }\n    });\n    expand.appendTo('#expand');\n    var size = new ej2_inputs_1.NumericTextBox({\n        value: 80, min: 60,\n        max: 100, width: 120,\n        step: 5,\n        format: '##.##',\n        change: function () {\n            palette.symbolHeight = size.value;\n            palette.symbolWidth = size.value;\n        }\n    });\n    palette.dataBind();\n    size.appendTo('#size');\n    var itemtext = new ej2_buttons_1.CheckBox({\n        change: onItemTextChange\n    });\n    itemtext.appendTo('#itemtext');\n    var headericon = new ej2_buttons_1.CheckBox({\n        checked: true,\n        change: onHeaderIconChange\n    });\n    palette.dataBind();\n    headericon.appendTo('#headericon');\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/diagram/symbol-palette/index.ts?");

/***/ })

/******/ });