/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/diagram/getting-started-annotation/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/diagram/getting-started-annotation/index.ts","diagrams.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/diagram/getting-started-annotation/index.ts":
/*!*************************************************************!*\
  !*** ./samples/diagram/getting-started-annotation/index.ts ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-diagrams */ \"./node_modules/@syncfusion/ej2-diagrams/index.js\"), __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\"), __webpack_require__(/*! @syncfusion/ej2-buttons */ \"./node_modules/@syncfusion/ej2-buttons/index.js\"), __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_diagrams_1, ej2_dropdowns_1, ej2_buttons_1, ej2_inputs_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    var diagram;\n    function selectionChange(arg) {\n        if (arg.state === 'Changed') {\n            var selectedElement = document.getElementsByClassName('e-selected-style');\n            if (selectedElement.length) {\n                selectedElement[0].classList.remove('e-selected-style');\n            }\n            if (arg.newValue[0]) {\n                var node = arg.newValue[0];\n                var annotations = node.annotations;\n                var offset = annotations[0].offset;\n                if (offset.x === 0 && offset.y === 0) {\n                    updateAnnotationPosition('left');\n                }\n                else if (offset.x === 1 && offset.y === 0) {\n                    updateAnnotationPosition('right');\n                }\n                else if (offset.x === 0 && offset.y === 1) {\n                    updateAnnotationPosition('bottomLeft');\n                }\n                else if (offset.x === 1 && offset.y === 1) {\n                    updateAnnotationPosition('bottomRight');\n                }\n                else if (offset.x === 0.5 && offset.y === 0.5) {\n                    updateAnnotationPosition('center');\n                }\n                else if (offset.x === 0.5 && offset.y === 1) {\n                    updateAnnotationPosition('bottomCenter');\n                }\n            }\n            enableOptions(arg);\n        }\n    }\n    function getNodeDefaults(obj) {\n        obj.width = 130;\n        obj.height = 50;\n        obj.style = { fill: '#D5EDED', strokeColor: '#7DCFC9', strokeWidth: 1 };\n        obj.shape = { cornerRadius: 5 };\n        return obj;\n    }\n    function getConnectorDefaults(obj) {\n        obj.type = 'Orthogonal';\n        obj.constraints = ej2_diagrams_1.ConnectorConstraints.None;\n        return obj;\n    }\n    function updateAnnotation(value, fontSize, fontFamily) {\n        for (var i = 0; i < diagram.selectedItems.nodes.length; i++) {\n            var node = diagram.selectedItems.nodes[i];\n            var annotationStyle = node.annotations[0].style;\n            if (value === 'fontsize') {\n                annotationStyle.fontSize = fontSize;\n            }\n            else if (value === 'underline') {\n                annotationStyle.textDecoration =\n                    annotationStyle.textDecoration === 'Underline' ? 'None' : 'Underline';\n            }\n            else if (value === 'fontfamily') {\n                annotationStyle.fontFamily = fontFamily;\n            }\n            else if (value === 'bold') {\n                annotationStyle.bold = !annotationStyle.bold;\n            }\n            else if (value === 'italic') {\n                annotationStyle.italic = !annotationStyle.italic;\n            }\n            else if (value === 'template') {\n                if (fontFamily === 'none') {\n                    node.annotations[0].template = '';\n                    node.annotations[0].width = undefined;\n                    node.annotations[0].height = undefined;\n                }\n                else {\n                    node.annotations[0].width = 25;\n                    node.annotations[0].height = 25;\n                    node.annotations[0].template =\n                        '<img src=\"//ej2.syncfusion.com/demos/src/diagram/Images/annotation/' + fontFamily + '.svg\" style=\"width:100%;height:100%\" />';\n                }\n            }\n            else if (value === 'interaction') {\n                node.annotations[0].constraints = node.annotations[0].constraints ^ ej2_diagrams_1.AnnotationConstraints.Interaction;\n            }\n            diagram.dataBind();\n        }\n    }\n    function updateAnnotationPosition(id) {\n        var target = document.getElementById(id);\n        for (var i = 0; i < diagram.selectedItems.nodes.length; i++) {\n            var node = diagram.selectedItems.nodes[i];\n            for (var j = 0; j < node.annotations.length; j++) {\n                var annotation = node.annotations[j];\n                switch (target.id) {\n                    case 'left':\n                        setAnnotationPosition(annotation, 0, 0, 'Top', 'Left', target);\n                        break;\n                    case 'right':\n                        setAnnotationPosition(annotation, 1, 0, 'Top', 'Right', target);\n                        break;\n                    case 'bottomLeft':\n                        setAnnotationPosition(annotation, 0, 1, 'Bottom', 'Left', target);\n                        break;\n                    case 'bottomRight':\n                        setAnnotationPosition(annotation, 1, 1, 'Bottom', 'Right', target);\n                        break;\n                    case 'center':\n                        setAnnotationPosition(annotation, 0.5, .5, 'Center', 'Center', target);\n                        break;\n                    case 'bottomCenter':\n                        setAnnotationPosition(annotation, 0.5, 1, 'Top', 'Center', target);\n                        break;\n                }\n            }\n        }\n    }\n    function setAnnotationPosition(annotation, offsetX, offsetY, verticalAlignment, horizontalAlignment, target) {\n        annotation.offset.x = offsetX;\n        annotation.offset.y = offsetY;\n        annotation.verticalAlignment = verticalAlignment;\n        annotation.horizontalAlignment = horizontalAlignment;\n        if (verticalAlignment === 'Top' && horizontalAlignment === 'Left') {\n            annotation.margin = { left: 3, top: 3 };\n        }\n        else if (verticalAlignment === 'Top' && horizontalAlignment === 'Right') {\n            annotation.margin = { right: 3, top: 3 };\n        }\n        else if (verticalAlignment === 'Bottom' && horizontalAlignment === 'Left') {\n            annotation.margin = { left: 3, bottom: 3 };\n        }\n        else if (verticalAlignment === 'Bottom' && horizontalAlignment === 'Right') {\n            annotation.margin = { right: 3, bottom: 3 };\n        }\n        target.classList.add('e-selected-style');\n    }\n    function enableOptions(arg) {\n        var appearance = document.getElementById('propertypanel');\n        var selectedElement = document.getElementsByClassName('e-remove-selection');\n        if (arg.newValue) {\n            if (arg.newValue[0] instanceof ej2_diagrams_1.Node) {\n                if (selectedElement.length) {\n                    selectedElement[0].classList.remove('e-remove-selection');\n                }\n            }\n            else {\n                if (!appearance.classList.contains('e-remove-selection')) {\n                    appearance.classList.add('e-remove-selection');\n                }\n            }\n        }\n    }\n    var bounds = document.getElementsByClassName('content-wrapper')[0].getBoundingClientRect();\n    var centerX = (bounds.width / 2);\n    var nodes = [\n        {\n            id: 'industry', offsetX: centerX, offsetY: 250,\n            annotations: [{ content: 'Industry Competitors' }]\n        },\n        {\n            id: 'potential', offsetX: centerX, offsetY: 110,\n            annotations: [{ content: 'Potential Entrants' }]\n        },\n        {\n            id: 'suplier', offsetX: centerX - 190, offsetY: 250,\n            annotations: [{ content: 'Suppliers' }]\n        },\n        {\n            id: 'substitutes', offsetX: centerX, offsetY: 390,\n            annotations: [{ content: 'Substitutes' }]\n        },\n        {\n            id: 'buyers', offsetX: centerX + 190, offsetY: 250,\n            annotations: [{ content: 'Buyers' }]\n        }\n    ];\n    var connectors = [\n        {\n            id: 'connector1', sourceID: 'potential', targetID: 'industry'\n        }, {\n            id: 'connector2', sourceID: 'suplier', targetID: 'industry'\n        }, {\n            id: 'connector3', sourceID: 'substitutes', targetID: 'industry',\n        }, {\n            id: 'connector4', sourceID: 'buyers', targetID: 'industry'\n        }, {\n            id: 'connector5', sourceID: 'potential', targetID: 'buyers',\n            segments: [{ direction: 'Right', type: 'Orthogonal', length: 60 }], targetDecorator: { shape: 'None' }\n        }, {\n            id: 'connector6', sourceID: 'buyers', targetID: 'substitutes',\n            segments: [{ direction: 'Bottom', type: 'Orthogonal', length: 100 }], targetDecorator: { shape: 'None' }\n        }, {\n            id: 'connector7', targetID: 'suplier', sourceID: 'substitutes',\n            segments: [{ direction: 'Left', type: 'Orthogonal', length: 60 }], targetDecorator: { shape: 'None' }\n        }, {\n            id: 'connector9', sourceID: 'suplier', targetID: 'potential',\n            segments: [{ direction: 'Top', type: 'Orthogonal', length: 100 }], targetDecorator: { shape: 'None' }\n        }\n    ];\n    diagram = new ej2_diagrams_1.Diagram({\n        width: '100%', height: '565px', nodes: nodes, connectors: connectors,\n        selectionChange: selectionChange,\n        getNodeDefaults: getNodeDefaults,\n        getConnectorDefaults: getConnectorDefaults,\n        snapSettings: { constraints: ej2_diagrams_1.SnapConstraints.None }\n    });\n    diagram.appendTo('#diagram');\n    diagram.select([diagram.nodes[0]]);\n    var bold = new ej2_buttons_1.Button({ iconCss: 'e-ddb-icons e-bold' });\n    bold.appendTo('#bold');\n    bold.element.onclick = function () { updateAnnotation('bold'); };\n    var italic = new ej2_buttons_1.Button({\n        iconCss: 'e-ddb-icons e-italic'\n    });\n    italic.appendTo('#italic');\n    italic.element.onclick = function () { updateAnnotation('italic'); };\n    var underLine = new ej2_buttons_1.Button({\n        iconCss: 'e-ddb-icons e-underline'\n    });\n    underLine.appendTo('#underline');\n    underLine.element.onclick = function () { updateAnnotation('underline'); };\n    var fontSize = new ej2_inputs_1.NumericTextBox({\n        value: 12, min: 1, max: 16, width: '100%',\n        format: '##.##', step: 2,\n        change: function (args) {\n            updateAnnotation('fontsize', args.value);\n        }\n    });\n    fontSize.appendTo('#fontSize');\n    fontSize.dataBind();\n    var fontColor = new ej2_inputs_1.ColorPicker({\n        value: '#000', change: function (arg) {\n            for (var i = 0; i < diagram.selectedItems.nodes.length; i++) {\n                var node = diagram.selectedItems.nodes[i];\n                node.annotations[0].style.color = arg.currentValue.rgba;\n            }\n        }\n    });\n    fontColor.appendTo('#fontcolor');\n    var fontType = [\n        { type: 'Arial', text: 'Arial' },\n        { type: 'Aharoni', text: 'Aharoni' },\n        { type: 'Bell MT', text: 'Bell MT' },\n        { type: 'Fantasy', text: 'Fantasy' },\n        { type: 'Times New Roman', text: 'Times New Roman' },\n        { type: 'Segoe UI', text: 'Segoe UI' },\n        { type: 'Verdana', text: 'Verdana' }\n    ];\n    var templateList = [\n        { value: 'none', text: 'None' },\n        { value: 'industry', text: 'Industry Competitors' },\n        { value: 'suppliers', text: 'Suppliers' },\n        { value: 'potential', text: 'Potential Entrants' },\n        { value: 'buyers', text: 'Buyers' },\n        { value: 'substitutes', text: 'Substitutes' }\n    ];\n    var fontFamily = new ej2_dropdowns_1.DropDownList({\n        dataSource: fontType,\n        fields: { value: 'type', text: 'text' }, popupWidth: 150,\n        width: '100%', placeholder: 'select a font type', index: 0,\n        change: function (args) {\n            updateAnnotation('fontfamily', null, args.value.toString());\n        }\n    });\n    fontFamily.appendTo('#fontfamily');\n    var template = new ej2_dropdowns_1.DropDownList({\n        dataSource: templateList,\n        fields: { value: 'value', text: 'text' }, popupWidth: 200,\n        width: '100%', placeholder: 'select a template', index: 0,\n        change: function (args) {\n            updateAnnotation('template', null, args.value.toString());\n        }\n    });\n    template.appendTo('#template');\n    var labelConstraints = new ej2_buttons_1.CheckBox({\n        checked: false,\n        label: 'Label interaction',\n        change: function (args) {\n            updateAnnotation('interaction', null, null);\n        }\n    });\n    labelConstraints.appendTo('#labelConstraints');\n    document.getElementById('appearance').onclick = function (args) {\n        var target = args.target;\n        var selectedElement = document.getElementsByClassName('e-selected-style');\n        if (selectedElement.length) {\n            selectedElement[0].classList.remove('e-selected-style');\n        }\n        if (target.className === 'image-pattern-style') {\n            updateAnnotationPosition(target.id);\n        }\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/diagram/getting-started-annotation/index.ts?");

/***/ })

/******/ });