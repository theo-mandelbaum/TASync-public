/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/diagram/grouping-and-ordering/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/diagram/grouping-and-ordering/index.ts","diagrams.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/diagram/grouping-and-ordering/index.ts":
/*!********************************************************!*\
  !*** ./samples/diagram/grouping-and-ordering/index.ts ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\"), __webpack_require__(/*! @syncfusion/ej2-diagrams */ \"./node_modules/@syncfusion/ej2-diagrams/index.js\"), __webpack_require__(/*! @syncfusion/ej2-inputs */ \"./node_modules/@syncfusion/ej2-inputs/index.js\"), __webpack_require__(/*! @syncfusion/ej2-dropdowns */ \"./node_modules/@syncfusion/ej2-dropdowns/index.js\"), __webpack_require__(/*! @syncfusion/ej2-navigations */ \"./node_modules/@syncfusion/ej2-navigations/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_diagrams_1, ej2_inputs_1, ej2_dropdowns_1, ej2_navigations_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    (0, ej2_base_1.enableRipple)(window.ripple);\n    ej2_diagrams_1.Diagram.Inject(ej2_diagrams_1.UndoRedo);\n    var diagram;\n    var toolbarEditor;\n    var drawingNode;\n    var createNode = function (id, offsetX, offsetY, width, height, shape, annotations, cornerRadius) {\n        if (annotations === void 0) { annotations = []; }\n        if (cornerRadius === void 0) { cornerRadius = 0; }\n        return ({\n            id: id,\n            offsetX: offsetX,\n            offsetY: offsetY,\n            width: width,\n            height: height,\n            shape: { type: \"Basic\", shape: shape, cornerRadius: cornerRadius },\n            annotations: annotations,\n        });\n    };\n    var createGroupNode = function (id, children, padding, annotations) { return ({\n        id: id,\n        children: children,\n        padding: padding,\n        annotations: annotations\n    }); };\n    var nodes = [\n        createNode('Diamond', 350, 250, 100, 100, 'Diamond', [{ content: 'Decision' }]),\n        createNode('ellipse', 150, 250, 100, 60, 'Ellipse', [{ content: 'Start/Stop' }]),\n        createNode('rectangle', 150, 400, 100, 60, 'Rectangle', [{ content: 'Process' }]),\n        createNode('node1', 150, 100, 100, 55, 'Rectangle'),\n        createNode('node2', 350, 100, 90, 55, 'Rectangle', [], 5),\n        createGroupNode('group', ['node1', 'node2'], { left: 10, right: 10, top: 10, bottom: 10 }, [{ content: 'Group 1' }])\n    ];\n    var createBasicShape = function (id, shape) { return ({\n        id: id,\n        shape: { type: \"Basic\", shape: shape },\n        style: { strokeWidth: 2 }\n    }); };\n    var basicShapes = [\n        createBasicShape('Rectangle', 'Rectangle'),\n        createBasicShape('Ellipse', 'Ellipse'),\n        createBasicShape('Hexagon', 'Hexagon'),\n        createBasicShape('Parallelogram', 'Parallelogram'),\n        createBasicShape('Triangle', 'Triangle'),\n        createBasicShape('Plus', 'Plus'),\n        createBasicShape('Star', 'Star'),\n        createBasicShape('Pentagon', 'Pentagon'),\n        createBasicShape('Heptagon', 'Heptagon'),\n        createBasicShape('Octagon', 'Octagon'),\n        createBasicShape('Trapezoid', 'Trapezoid'),\n        createBasicShape('Decagon', 'Decagon'),\n        createBasicShape('RightTriangle', 'RightTriangle'),\n        createBasicShape('Cylinder', 'Cylinder'),\n        createBasicShape('Diamond', 'Diamond')\n    ];\n    var handles = [\n        {\n            name: 'Clone',\n            pathData: 'M0,2.4879999 L0.986,2.4879999 0.986,9.0139999 6.9950027,9.0139999 6.9950027,10 0.986,10 C0.70400238,10 0.47000122,9.9060001 0.28100207,9.7180004 0.09400177,9.5300007 0,9.2959995 0,9.0139999 z M3.0050011,0 L9.0140038,0 C9.2960014,0 9.5300026,0.093999863 9.7190018,0.28199956 9.906002,0.47000027 10,0.70399952 10,0.986 L10,6.9949989 C10,7.2770004 9.906002,7.5160007 9.7190018,7.7110004 9.5300026,7.9069996 9.2960014,8.0049992 9.0140038,8.0049992 L3.0050011,8.0049992 C2.7070007,8.0049992 2.4650002,7.9069996 2.2770004,7.7110004 2.0890007,7.5160007 1.9950027,7.2770004 1.9950027,6.9949989 L1.9950027,0.986 C1.9950027,0.70399952 2.0890007,0.47000027 2.2770004,0.28199956 2.4650002,0.093999863 2.7070007,0 3.0050011,0 z',\n            tooltip: { content: 'Clone' },\n            visible: true,\n            offset: 1,\n            side: 'Bottom',\n            margin: { top: 0, bottom: 0, left: 0, right: 0 },\n        },\n        {\n            name: 'Delete',\n            pathData: 'M0.54700077,2.2130003 L7.2129992,2.2130003 7.2129992,8.8800011 C7.2129992,9.1920013 7.1049975,9.4570007 6.8879985,9.6739998 6.6709994,9.8910007 6.406,10 6.0939997,10 L1.6659999,10 C1.3539997,10 1.0890004,9.8910007 0.87200136,9.6739998 0.65500242,9.4570007 0.54700071,9.1920013 0.54700077,8.8800011 z M2.4999992,0 L5.2600006,0 5.8329986,0.54600048 7.7599996,0.54600048 7.7599996,1.6660004 0,1.6660004 0,0.54600048 1.9270014,0.54600048 z',\n            tooltip: { content: 'Delete' },\n            visible: true,\n            offset: 0,\n            side: 'Bottom',\n            margin: { top: 0, bottom: 0, left: 0, right: 0 },\n        },\n        {\n            name: 'Draw',\n            pathData: 'M3.9730001,0 L8.9730001,5.0000007 3.9730001,10.000001 3.9730001,7.0090005 0,7.0090005 0,2.9910006 3.9730001,2.9910006 z',\n            tooltip: { content: 'Draw' },\n            visible: true,\n            offset: 0.5,\n            side: 'Right',\n            margin: { top: 0, bottom: 0, left: 0, right: 0 },\n        },\n    ];\n    function selectionChange(args) {\n        if (args.state === 'Changed') {\n            var selectedItems = diagram.selectedItems.nodes;\n            selectedItems = selectedItems.concat(diagram.selectedItems.connectors);\n            var toolbarItemIds = ['Group', 'UnGroup', 'BringForward', 'BringToFront', 'SendBackward', 'SendToBack', 'FontStyle', 'FontSize', 'Bold', 'Italic', 'Underline', 'FontColor'];\n            if (selectedItems.length === 0) {\n                updateToolbarItems(toolbarItemIds, true);\n            }\n            else if (selectedItems.length === 1) {\n                enableToolbarItems();\n                disableToolbarItemsForMultiSelection(selectedItems);\n                var isGroup = selectedItems[0].children !== undefined && selectedItems[0].children.length > 0;\n                updateToolbarItems(['UnGroup'], !isGroup);\n            }\n            else if (selectedItems.length > 1) {\n                enableToolbarItems();\n                updateToolbarItems(['Group'], false);\n                updateToolbarItems(['UnGroup'], true);\n                disableToolbarItemsForMultiSelection(selectedItems);\n            }\n            if (args.newValue.length > 0 && args.newValue[0] instanceof ej2_diagrams_1.Node) {\n                diagram.selectedItems = {\n                    constraints: ej2_diagrams_1.SelectorConstraints.All | ej2_diagrams_1.SelectorConstraints.UserHandle,\n                    userHandles: handles,\n                };\n                if (diagram.selectedItems.nodes.length > 0) {\n                    drawingNode = diagram.selectedItems.nodes[diagram.selectedItems.nodes.length - 1];\n                }\n            }\n            else {\n                diagram.selectedItems = {\n                    constraints: ej2_diagrams_1.SelectorConstraints.All & ~ej2_diagrams_1.SelectorConstraints.UserHandle,\n                };\n            }\n        }\n    }\n    function updateToolbarItems(itemIds, disabled) {\n        itemIds.forEach(function (itemId) {\n            var item = toolbarEditor.items.find(function (item) { return item.id === itemId; });\n            if (item) {\n                item.disabled = disabled;\n            }\n        });\n    }\n    function enableToolbarItems() {\n        updateToolbarItems(['BringForward', 'BringToFront', 'SendBackward', 'SendToBack'], false);\n    }\n    function disableToolbarItemsForMultiSelection(selectedItems) {\n        var annotationRelatedItems = ['FontStyle', 'FontSize', 'Bold', 'Italic', 'Underline', 'FontColor'];\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (selectedItems[i].annotations[0] !== undefined) {\n                updateToolbarItems(annotationRelatedItems, false);\n            }\n            else {\n                updateToolbarItems(annotationRelatedItems, true);\n            }\n        }\n    }\n    function userHandleClick(args) {\n        switch (args.element.name) {\n            case 'Delete':\n                diagram.remove();\n                break;\n            case 'Clone':\n                diagram.paste(diagram.selectedItems.selectedObjects);\n                break;\n            case 'Draw':\n                var drawingObject = diagram.drawingObject;\n                drawingObject.shape = {};\n                drawingObject.type = drawingObject.type || 'Orthogonal';\n                drawingObject.sourceID = drawingNode.id;\n                diagram.dataBind();\n                break;\n        }\n    }\n    function updateAnnotationValue(value, fontSize, fontFamily) {\n        for (var i = 0; i < diagram.selectedItems.nodes.length; i++) {\n            var node = diagram.selectedItems.nodes[i];\n            for (var j = 0; j < node.annotations.length; j++) {\n                var annotationStyle = node.annotations[j].style;\n                if (value === 'fontsize') {\n                    annotationStyle.fontSize = fontSize;\n                }\n                else if (value === 'fontfamily') {\n                    annotationStyle.fontFamily = fontFamily.toString();\n                }\n                else if (value === 'bold') {\n                    annotationStyle.bold = !annotationStyle.bold;\n                }\n                else if (value === 'italic') {\n                    annotationStyle.italic = !annotationStyle.italic;\n                }\n                else if (value === 'underline') {\n                    annotationStyle.textDecoration = annotationStyle.textDecoration === 'None' ? 'Underline' : 'None';\n                }\n            }\n        }\n        diagram.dataBind();\n    }\n    function handleToolbarClick(args) {\n        switch (args.item.tooltipText) {\n            case 'Group':\n                diagram.group();\n                updateToolbarItems(['Group'], true);\n                updateToolbarItems(['UnGroup'], false);\n                break;\n            case 'UnGroup':\n                diagram.unGroup();\n                break;\n            case 'Bring Forward':\n                diagram.moveForward();\n                break;\n            case 'Bring To Front':\n                diagram.bringToFront();\n                break;\n            case 'Send Backward':\n                diagram.sendBackward();\n                break;\n            case 'Send To Back':\n                diagram.sendToBack();\n                break;\n            case 'Bold':\n                updateAnnotationValue('bold', args.value, null);\n                break;\n            case 'Italic':\n                updateAnnotationValue('italic', args.value, null);\n                break;\n            case 'Underline':\n                updateAnnotationValue('underline', args.value, null);\n                break;\n        }\n        diagram.dataBind();\n    }\n    diagram = new ej2_diagrams_1.Diagram({\n        width: '100%',\n        height: 500,\n        nodes: nodes,\n        rulerSettings: { showRulers: true },\n        drawingObject: { type: 'Orthogonal' },\n        onUserHandleMouseDown: userHandleClick,\n        selectionChange: selectionChange,\n    });\n    diagram.appendTo('#diagram');\n    var palette = new ej2_diagrams_1.SymbolPalette({\n        expandMode: 'Multiple',\n        symbolMargin: { left: 5, right: 5, top: 5, bottom: 10 },\n        symbolHeight: 50,\n        symbolWidth: 50,\n        palettes: [\n            {\n                id: 'basicShapes',\n                expanded: true,\n                symbols: basicShapes,\n                iconCss: 'e-ddb-icons e-flow',\n                title: 'Basic Shapes',\n            },\n        ],\n        width: '100%',\n        height: '100%',\n    });\n    palette.appendTo('#symbolpalette');\n    var fontTypeList = [\n        { type: 'Arial', text: 'Arial' },\n        { type: 'Aharoni', text: 'Aharoni' },\n        { type: 'Bell MT', text: 'Bell MT' },\n        { type: 'Fantasy', text: 'Fantasy' },\n        { type: 'Times New Roman', text: 'Times New Roman' },\n        { type: 'Segoe UI', text: 'Segoe UI' },\n        { type: 'Verdana', text: 'Verdana' },\n    ];\n    var fontFamily = new ej2_dropdowns_1.DropDownList({\n        dataSource: fontTypeList,\n        fields: { value: 'type', text: 'text' },\n        popupWidth: 150,\n        width: '100%',\n        placeholder: 'select a font type',\n        index: 0,\n        change: function (args) {\n            updateAnnotationValue('fontfamily', null, args.value.toString());\n        },\n    });\n    fontFamily.appendTo('#fontfamily');\n    var fontSize = new ej2_inputs_1.NumericTextBox({\n        value: 12,\n        min: 1,\n        max: 30,\n        width: '110px',\n        format: '##.##',\n        step: 2,\n        change: function (args) {\n            updateAnnotationValue('fontsize', args.value);\n        },\n    });\n    fontSize.appendTo('#fontSize');\n    var fontColor = new ej2_inputs_1.ColorPicker({\n        mode: 'Palette',\n        value: '#000',\n        change: function (arg) {\n            diagram.selectedItems.nodes.forEach(function (node) {\n                node.annotations.forEach(function (annotation) {\n                    annotation.style.color = arg.currentValue.rgba;\n                });\n            });\n            diagram.dataBind();\n        },\n    });\n    fontColor.appendTo('#fontColor');\n    toolbarEditor = new ej2_navigations_1.Toolbar({\n        clicked: handleToolbarClick,\n        items: [\n            {\n                id: 'Group',\n                type: 'Button',\n                tooltipText: 'Group',\n                prefixIcon: 'e-icons e-group-1',\n                disabled: true\n            },\n            {\n                id: 'UnGroup',\n                type: 'Button',\n                tooltipText: 'UnGroup',\n                prefixIcon: 'e-icons e-ungroup-1',\n                disabled: true\n            },\n            { id: 'Separator1', type: 'Separator' },\n            {\n                id: 'BringForward',\n                type: 'Button',\n                tooltipText: 'Bring Forward',\n                prefixIcon: 'e-icons e-bring-forward',\n                disabled: true\n            },\n            {\n                id: 'BringToFront',\n                type: 'Button',\n                tooltipText: 'Bring To Front',\n                prefixIcon: 'e-icons e-bring-to-front',\n                disabled: true\n            },\n            {\n                id: 'SendBackward',\n                type: 'Button',\n                tooltipText: 'Send Backward',\n                prefixIcon: 'e-icons e-send-backward',\n                disabled: true\n            },\n            {\n                id: 'SendToBack',\n                type: 'Button',\n                tooltipText: 'Send To Back',\n                prefixIcon: 'e-icons e-send-to-back',\n                disabled: true\n            },\n            {\n                id: 'Separator2', type: 'Separator',\n                template: '<div style=\"margin-left:1px;\"></div>'\n            },\n            {\n                id: 'FontStyle',\n                type: 'Input',\n                tooltipText: 'Font Style',\n                align: 'Left',\n                template: fontFamily,\n                disabled: true\n            },\n            {\n                id: 'Separator3', type: 'Separator',\n                template: '<div style=\"margin-left:5px;\"></div>'\n            },\n            {\n                id: 'FontSize',\n                type: 'Input',\n                tooltipText: 'Font Size',\n                align: 'Left',\n                template: fontSize,\n                disabled: true,\n            },\n            {\n                id: 'Bold',\n                type: 'Button',\n                tooltipText: 'Bold',\n                prefixIcon: 'e-icons e-bold',\n                disabled: true,\n                cssClass: 'tb-item-start'\n            },\n            {\n                id: 'Italic',\n                type: 'Button',\n                tooltipText: 'Italic',\n                prefixIcon: 'e-icons e-italic',\n                disabled: true,\n                cssClass: 'tb-item-middle'\n            },\n            {\n                id: 'Underline',\n                type: 'Button',\n                tooltipText: 'Underline',\n                prefixIcon: 'e-icons e-underline',\n                disabled: true,\n                cssClass: 'tb-item-end'\n            },\n            {\n                id: 'FontColor',\n                type: 'Input',\n                tooltipText: 'Font Color',\n                align: 'Left',\n                template: fontColor,\n                disabled: true\n            },\n        ],\n    });\n    toolbarEditor.appendTo('#toolbarEditor');\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./samples/diagram/grouping-and-ordering/index.ts?");

/***/ })

/******/ });