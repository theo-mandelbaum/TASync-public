{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div class=\"control-section\">\n        <div id=\"container\"></div>   \n    </div>\n    \n    \n    \n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-compression\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-file-utils\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-maps\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}// custom code start\n\n// custom code end\n/**\n * Osm with legend sample\n */\nimport { Maps, Marker, MapsTooltip, MapsTheme, Legend, ILoadEventArgs, Zoom } from '@syncfusion/ej2-maps';\nMaps.Inject(Marker, MapsTooltip, Zoom, Legend);\n\n\n    // custom code start\n    \n    // custom code end\n    let maps: Maps = new Maps({\n        load: (args: ILoadEventArgs) => {\n            // custom code start\n            let theme: string = location.hash.split('/')[1];\n            theme = theme ? theme : 'Material';\n            args.maps.theme = <MapsTheme>(theme.charAt(0).toUpperCase() +\n            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i,Â  'Contrast').replace(/5.3/i, '5');\n            // custom code end\n        },\n        titleSettings: {\n            text: 'Top 10 populated cities in the World',\n            textStyle: {\n                size: '16px',\n                fontFamily: 'inherit'\n            }\n        },\n        zoomSettings: {\n            enable: true,\n            zoomFactor: 2\n        },\n        format: 'n',\n        useGroupingSeparator: true,\n        legendSettings: {\n            visible: true,\n            position: 'Float',\n            location: {\n                x: 10,\n                y: 262\n            },\n            height:'170px',\n            type: 'Markers',\n            background: '#E6E6E6',\n            textStyle: {\n                color: '#000000',\n                fontFamily: 'inherit'\n            },\n        },        \n        layers: [\n            {\n                urlTemplate:'https://tile.openstreetmap.org/level/tileX/tileY.png',\n                markerSettings: [\n                    {\n                        visible: true,\n                        legendText: 'name',\n                        shape: 'Circle',\n                        width: 15,\n                        height: 15,\n                        colorValuePath: 'color',\n                        tooltipSettings: {\n                            visible: true,\n                            valuePath: 'population',\n                            format: 'City Name: ${name} <br> Population: ${population} million',\n                            textStyle: {\n                                fontFamily: 'inherit'\n                            }\n                        },\n                        dataSource: [\n                            { name: 'Tokyo', latitude: 35.6805245924747, longitude: 139.76770396213337, population: 37435191, color:'#2EB6C8'},\n                            { name: 'Delhi', latitude: 28.644800, longitude: 77.216721, population: 29399141, color:'#4A97F4'},\n                            { name: 'Shanghai', latitude: 31.224361, longitude: 121.469170, population: 26317104, color:'#498082'},\n                            { name: 'Sao Paulo', latitude: -23.550424484747914, longitude: -46.646471636488315, population: 21846507, color:'#FB9E67'},\n                            { name: 'Mexico City', latitude: 19.427402397418774, longitude: -99.131123716666, population: 21671908, color:'#8F9DE3'},\n                            { name: 'Cairo ', latitude: 30.033333, longitude: 31.233334, population: 20484965, color:'#7B9FB0'},\n                            { name: 'Dhaka', latitude: 23.777176, longitude: 90.399452, population: 20283552, color:'#4DB647'},\n                            { name: 'Mumbai', latitude: 19.08492049646163, longitude: 72.87449446319248, population: 20185064, color:'#30BEFF'},\n                            { name: 'Beijing', latitude: 39.90395970055848, longitude: 116.38831272088059, population: 20035455, color:'#Ac72AD'},\n                            { name: 'Osaka', latitude: 34.69024500601642, longitude: 135.50746225677142, population: 19222665, color:'#EFE23E'}\n                        ]\n                    }\n                        \n                ]\n            }\n        ]\n    });\n    maps.appendTo('#container');\n"}