{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-12 control-section\">\n    <div id=\"wrapper\">\n        <input id=\"daterangepicker\" type=\"text\"><br><br>\n    </div>\n</div>\n\n\n<!-- custom code start -->\n<style>\n    #wrapper {\n        max-width: 246px;\n        margin: 30px auto;\n        padding-top: 50px;\n    }\n</style>\n<!-- custom code end-->\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-calendars\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { DateRangePicker } from '@syncfusion/ej2-calendars';\n/**\n * DateRangePicker Presets sample\n */\n\n    \n    let start: Date = new Date(new Date(new Date().setDate(new Date().getDate() - (new Date().getDay() + 7) % 7)).toDateString());\n    let daterangepicker: DateRangePicker = new DateRangePicker({\n        placeholder: \"Select a range\",\n        presets: [\n            {\n                label: 'This Week',\n                start: start,\n                end: new Date(new Date(new Date().setDate(start.getDate() + 6)).toDateString())\n            },\n            {\n                label: 'This Month',\n                start: new Date(new Date(new Date().setDate(1)).toDateString()),\n                end: new Date(new Date(new Date(new Date().setMonth(new Date().getMonth() + 1)).setDate(0)).toDateString())\n            },\n            {\n                label: 'Last Month',\n                start: new Date(new Date(new Date(new Date().setMonth(new Date().getMonth() - 1)).setDate(1)).toDateString()),\n                end: new Date(new Date(new Date().setDate(0)).toDateString())\n            },\n            {\n                label: 'Last Year',\n                start: new Date(new Date(new Date().getFullYear() - 1, 0, 1).toDateString()),\n                end: new Date(new Date(new Date().getFullYear() - 1, 11, 31).toDateString())\n            }\n        ]\n    });\n    daterangepicker.appendTo('#daterangepicker');\n    var labelsByLanguage:any = {\n        en: ['This Week', 'This Month', 'Last Month', 'Last Year'],\n        de: ['Diese Woche', 'Dieser Monat', 'Letzter Monat', 'Letztes Jahr'],\n        'fr-CH': ['Cette semaine', 'Ce mois-ci', 'Le mois dernier', 'L\\'année dernière'],\n        ar: ['هذا الأسبوع', 'هذا الشهر', 'الشهر الماضي', 'السنة الماضية'],\n        zh: ['本周', '本月', '上个月', '去年'],\n    };\n    const cultureElement = document.getElementById(\"sb-setting-culture_hidden\") || null;\n\n    if (cultureElement) {\n        cultureElement.addEventListener('change', function(event) {\n            var selectedLanguage = (event.target as HTMLSelectElement).value;\n            updatePresetLabels(selectedLanguage);\n        });\n    }\n\n    function updatePresetLabels(languageCode: string): void {\n        const newLabels = labelsByLanguage[languageCode] || labelsByLanguage['en'];\n    \n        for (let index = 0; index < daterangepicker.presets.length; index++) {\n            if (index >= newLabels.length) break; // Prevent out-of-bounds\n            daterangepicker.presets[index].label = newLabels[index];\n        }\n    \n        daterangepicker.refresh();\n    }\n\n"}