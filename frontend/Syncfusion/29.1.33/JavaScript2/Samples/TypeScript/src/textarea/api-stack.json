{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div id=\"textarea-api\" class=\"col-lg-8 control-section api\">\n    <div class=\"content-wrapper\">\n        <div class=\"api-row\">\n            <textarea id=\"api\"></textarea>\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section\">\n    <table id=\"property\" title=\"Properties\" class=\"api-property\">\n\n        <tbody><tr>\n            <td class=\"left-side\"> Rows </td>\n            <td><input id=\"rows\" maxlength=\"2\"></td>\n        </tr>\n        <tr>\n            <td class=\"left-side\"> Columns </td>\n            <td><input id=\"cols\" maxlength=\"2\"></td>\n        </tr>\n        <tr>\n            <td class=\"left-side\">Enable</td>\n            <td><input type=\"checkbox\" id=\"enabled\"></td>\n        </tr>\n        <tr>\n            <td class=\"left-side\">Read only</td>\n            <td><input type=\"checkbox\" id=\"readonly\"></td>\n        </tr>\n        <tr>\n            <td class=\"left-side\"> MaxLength </td>\n            <td><input id=\"maxlength\" maxlength=\"3\"></td>\n        </tr>\n        <tr>\n            <td class=\"left-side\"> Value </td>\n            <td>\n                <input type=\"text\" id=\"value\" placeholder=\"Enter a value\">\n            </td>\n        </tr>\n        <tr>\n            <td class=\"left-side\">Show clear icon</td>\n            <td><input type=\"checkbox\" id=\"clearicon\"></td>\n        </tr>\n    </tbody></table>\n</div>\n\n\n<style>\n    .content-wrapper div.api-row {\n        margin: 30px 150px;\n    }\n\n    .api-property .left-side {\n        font-size: 14px;\n        padding: 8px;\n    }\n\n    .api-property.property-panel-table div.api {\n        padding-left: 0px;\n    }\n\n    #textarea-api .e-multi-line-input {\n        max-width: 100%;\n    }\n</style>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { TextArea } from  '@syncfusion/ej2-inputs';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { NumericTextBox, TextBox, ChangedEventArgs } from '@syncfusion/ej2-inputs';\n\n/**\n *   TextArea Api sample\n */\n\n    \n    let textareaObj: TextArea = new TextArea({\n        placeholder: 'Enter your comments',\n        floatLabelType: 'Auto'\n    });\n    textareaObj.appendTo('#api');\n    // initialize check box component\n    let enabledCheckBox: CheckBox = new CheckBox({\n        checked: true,\n        cssClass: 'api',\n        change: (args: any) => {\n            textareaObj.enabled = args.checked;\n        }\n    });\n    enabledCheckBox.appendTo('#enabled');\n    let readonlyCheckBox: CheckBox = new CheckBox({\n        checked: false,\n        cssClass: 'api',\n        change: (args: any) => {\n            textareaObj.readonly = args.checked;\n        }\n    });\n    readonlyCheckBox.appendTo('#readonly');\n    let showClearIcon: CheckBox = new CheckBox({\n        checked: false,\n        cssClass: 'api',\n        change: (args: any) => {\n            textareaObj.showClearButton = args.checked;\n        }\n    });\n    showClearIcon.appendTo('#clearicon');\n    //initialize numeric textbox\n    let rows: NumericTextBox = new NumericTextBox({\n        format: '##',\n        min: 1,\n        max: 10,\n        value: 2,\n        change: (args: any) => {\n            textareaObj.rows = args.value;\n        }\n    });\n    rows.appendTo('#rows');\n    let cols: NumericTextBox = new NumericTextBox({\n        format: '##',\n        min: 5,\n        max: 40,\n        value: 20,\n        change: (args: any) => {\n            textareaObj.cols = args.value;\n        }\n    });\n    cols.appendTo('#cols');\n    let maxLength: NumericTextBox = new NumericTextBox({\n        format: '##',\n        value: -1,\n        change: (args: any) => {\n            textareaObj.maxLength = args.value;\n        }\n    });\n    maxLength.appendTo('#maxlength');\n    // initialize textbox component\n    let value: TextBox = new TextBox({\n        value: '',\n        placeholder: 'Enter a value',\n        change: (args: ChangedEventArgs) => {\n            textareaObj.value = args.value;\n        }\n    });\n    value.appendTo('#value');\n"}