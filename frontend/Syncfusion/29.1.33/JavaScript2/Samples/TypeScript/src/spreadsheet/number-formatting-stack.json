{"number-formatting-data.json":"{\n    \"numberFormatData\": [\n        {\n            \"Item Code\": \"I231\",\n            \"Item Name\": \"Chinese Combo Noodle\",\n            \"Quantity\": 2,\n            \"Rate\": 125,\n            \"Amount\": \"=PRODUCT(C4,D4)\"\n        },\n        {\n            \"Item Code\": \"I245\",\n            \"Item Name\": \"Chinese Combo Rice\",\n            \"Quantity\": 3,\n            \"Rate\": 125,\n            \"Amount\": \"=PRODUCT(C5,D5)\"\n        },\n        {\n            \"Item Code\": \"I237\",\n            \"Item Name\": \"Amritsari Chola\",\n            \"Quantity\": 2,\n            \"Rate\": 225,\n            \"Amount\": \"=PRODUCT(C6,D6)\"\n        },\n        {\n            \"Item Code\": \"I291\",\n            \"Item Name\": \"Asian Mixed Entree Platt\",\n            \"Quantity\": 3,\n            \"Rate\": 165,\n            \"Amount\": \"=PRODUCT(C7,D7)\"\n        },\n        {\n            \"Item Code\": \"I268\",\n            \"Item Name\": \"Chinese Combo Chicken\",\n            \"Quantity\": 3,\n            \"Rate\": 125,\n            \"Amount\": \"=PRODUCT(C8,D8)\"\n        },\n        {\n            \"Item Code\": \"I251\",\n            \"Item Name\": \"Chivas Regal\",\n            \"Quantity\": 1,\n            \"Rate\": 325,\n            \"Amount\": \"=PRODUCT(C9,D9)\"\n        },\n        {\n            \"Item Code\": \"I256\",\n            \"Item Name\": \"Chicken Drumsticks\",\n            \"Quantity\": 2,\n            \"Rate\": 180,\n            \"Amount\": \"=PRODUCT(C10,D10)\"\n        },\n        {\n            \"Item Code\": \"I232\",\n            \"Item Name\": \"Manchow Soup\",\n            \"Quantity\": 2,\n            \"Rate\": 160,\n            \"Amount\": \"=PRODUCT(C11,D11)\"\n        },\n        {\n            \"Item Code\": \"I290\",\n            \"Item Name\": \"Schezuan Chicken\",\n            \"Quantity\": 3,\n            \"Rate\": 180,\n            \"Amount\": \"=PRODUCT(C12,D12)\"\n        },\n        {\n            \"Item Code\": \"I229\",\n            \"Item Name\": \"Manchow Soup\",\n            \"Quantity\": 2,\n            \"Rate\": 125,\n            \"Amount\": \"=PRODUCT(C13,D13)\"\n        },\n        {\n            \"Item Code\": \"I239\",\n            \"Item Name\": \"Jw Black Lable\",\n            \"Quantity\": 2,\n            \"Rate\": 175,\n            \"Amount\": \"=PRODUCT(C14,D14)\"\n        }\n    ]\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div id=\"spreadsheet\"></div>\n</div>\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-charts\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-grids\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-spreadsheet\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { Spreadsheet, SheetModel, getFormatFromType } from '@syncfusion/ej2-spreadsheet';\nimport * as dataSource from './number-formatting-data.json';\n\n/**\n * Number Format.\n */\n// custom code start\n/* tslint:disable:max-func-body-length */\n// custom code end\n\n    \n    let sheet: SheetModel[] = [{\n        name: 'Restaurant Invoice',\n        rows: [\n            {\n                cells: [\n                    { value: 'Customer Name' },\n                    { value: 'Cristi Espinos' },\n                    { index: 3, value: 'Waiter Name' },\n                    { value: 'Raye Whines' },\n                ], height: 30\n            }, {\n                cells: [\n                    { value: 'Table No.' },\n                    { value: '8' },\n                    { index: 3, value: 'Date' },\n                    { value: '5-7-2019' },\n                ], height: 30\n            }, {\n                index: 14, cells: [\n                    { index: 1, value: 'Subtotal:' },\n                    { index: 4, formula: '=SUBTOTAL(9,E4:E14)', format: '$#,##0.00' }\n                ],\n            },\n            {\n                cells: [\n                    { index: 1, value: 'Discount (8%):' },\n                    { index: 4, formula: '=PRODUCT(8,E15)/100', format: '$#,##0.00' }\n                ],\n            },\n            {\n                cells: [\n                    { index: 1, value: 'Total Amount:', style: { fontWeight: 'bold' } },\n                    {\n                        index: 4, formula: '=SUM(E15-E16)',\n                        format: getFormatFromType('Accounting'), style: { fontWeight: 'bold' }\n                    },\n                ],\n            }\n        ],\n        columns: [{ width: 120 }, { width: 180 }, { width: 100 }, { width: 120 }, { width: 120 }],\n        selectedRange: 'E17',\n        ranges: [{\n            dataSource: (dataSource as any).numberFormatData,\n            startCell: 'A3'\n        }]\n    }];\n\n    //Initialize Spreadsheet component.\n    let spreadsheet: Spreadsheet = new Spreadsheet({\n        sheets: sheet,\n        showRibbon: false,\n        showFormulaBar: false,\n        created: (): void => {\n            spreadsheet.cellFormat({ fontWeight: 'bold' }, 'A1:E2');\n            spreadsheet.cellFormat({ textAlign: 'center', fontWeight: 'bold' }, 'A3:E3');\n            spreadsheet.cellFormat({ textAlign: 'center' }, 'A4:A14');\n            spreadsheet.cellFormat({ textAlign: 'center' }, 'C4:C14');\n            spreadsheet.cellFormat({ backgroundColor: '#F9FBE7' }, 'A4:E15');\n            spreadsheet.cellFormat({ backgroundColor: '#1E88E5', color: '#F5F5F5' }, 'A1:E2');\n            spreadsheet.cellFormat({ backgroundColor: '#BBDEFB' }, 'A3:E3');\n            spreadsheet.cellFormat({ backgroundColor: '#B3E5FC' }, 'A15:E17');\n            // Apply format to the specified range in the active sheet.\n            spreadsheet.numberFormat('$#,##0.00', 'D4:E14');\n            spreadsheet.numberFormat('$#,##0.00', 'E15:E17');\n            spreadsheet.numberFormat('[Red][<=350]$#,##0.00;[Blue][>350]$#,##0.00', 'E4:E14');\n        }\n    });\n    //Render initialized Spreadsheet component.\n    spreadsheet.appendTo('#spreadsheet');\n\n// custom code start\n/* tslint:enable:max-func-body-length */\n// custom code end\n"}