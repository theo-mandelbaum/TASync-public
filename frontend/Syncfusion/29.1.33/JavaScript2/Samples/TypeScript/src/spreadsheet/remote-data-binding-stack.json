{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div id=\"spreadsheet\"></div>\n</div>\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-charts\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-grids\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-spreadsheet\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { DataManager, ODataAdaptor } from '@syncfusion/ej2-data';\nimport { Spreadsheet } from '@syncfusion/ej2-spreadsheet';\n\n/**\n * Remote data binding sample\n */\n\n    \n\n    //Custom code to handle data\n    class CustomAdaptor extends ODataAdaptor {\n        public processResponse(): Object {\n            let result: Object[] = [];\n            let original: { result: Object[], count: number } = super.processResponse.apply(this, arguments);\n            original.result.forEach((item: { SNo: number }, idx: number) => {\n                result[idx] = {};\n                Object.keys(item).forEach((key: string) => {\n                    if (['OrderID', 'CustomerID', 'ShipName', 'ShipCity', 'ShipCountry'].indexOf(key) > -1) {\n                        result[idx][key] = item[key];\n                    }\n                });\n            });\n            return { result: result, count: original.count };\n        }\n    }\n\n    //Initialize DataManager\n    let data: DataManager = new DataManager({\n        // Remote service url\n        url: 'http://localhost:62728/api/Orders',\n        adaptor: new CustomAdaptor,\n        crossDomain: true\n    });\n\n    //Initialize Spreadsheet component\n    let spreadsheet: Spreadsheet = new Spreadsheet({\n        sheets: [{\n                name: 'Shipment Details',\n                rows: [{\n                    cells: [{ value: 'Order ID' }, { value: 'Customer Name' }, { value: 'Ship Name' },\n                    { value: 'Ship City' }, { value: 'Ship Country' }]\n                }],\n                ranges: [{ dataSource: data, showFieldAsHeader: false, startCell: 'A2' }],\n                columns: [{ width: 100 }, { width: 130 }, { width: 150 }, { width: 200 }, { width: 180 }]\n            }],\n        openUrl: 'http://localhost:62728/api/spreadsheet/open',\n        saveUrl: 'http://localhost:62728/api/spreadsheet/save',\n        created: (): void => {\n            //Apply style to a range\n            spreadsheet.cellFormat({ fontWeight: 'bold', textAlign: 'center' }, 'A1:G1');\n        }\n    });\n\n    //Render initialized Spreadsheet component\n    spreadsheet.appendTo('#spreadsheet');\n\n"}