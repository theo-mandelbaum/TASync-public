{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div id=\"spreadsheet\"></div>\n</div>\n\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-calendars\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-charts\": \"*\",\n  \"@syncfusion/ej2-grids\": \"*\",\n  \"@syncfusion/ej2-spreadsheet\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { TextBox } from '@syncfusion/ej2-inputs';\nimport { RadioButton } from '@syncfusion/ej2-buttons';\nimport { DatePicker } from '@syncfusion/ej2-calendars';\n\nimport { DropDownList, MultiSelect } from '@syncfusion/ej2-dropdowns';\nimport { Spreadsheet, CellRenderEventArgs, BeforeSelectEventArgs } from '@syncfusion/ej2-spreadsheet';\n\n/**\n * Cell template\n */\n// custom code start\n/* tslint:disable:max-func-body-length */\n// custom code end\n\n    \n\n    //Initialize Spreadsheet component\n    let spreadsheet: Spreadsheet = new Spreadsheet({\n        showRibbon: false,\n        enableContextMenu: false,\n        showFormulaBar: false,\n        cssClass: 'e-custom-spreadsheet',\n        allowOpen: false,\n        allowSave: false,\n        allowPrint: false,\n        allowEditing: false,\n        selectionSettings: {\n        mode: 'None'\n        },\n        scrollSettings: {\n            isFinite: true\n        },\n        sheets: [{\n            rowCount: 40,\n            showGridLines: false,\n            name: 'Registration Form',\n            rows: [{\n                height: 55,\n                cells: [{\n                    index: 1,\n                    value: 'Interview Registration Form',\n                    style: {\n                        fontSize: '12pt',\n                        fontWeight: 'bold',\n                        textAlign: 'center',\n                        verticalAlign: 'middle',\n                        textDecoration: 'underline'\n                    }\n                }]\n            }, {\n                height: 45,\n                cells: [{\n                    index: 1,\n                    value: 'Name'\n                }],\n            }, {\n                height: 45,\n                cells: [{\n                    index: 1,\n                    value: 'Date of Birth:'\n                }]\n            }, {\n                height: 45,\n                cells: [{\n                    index: 1,\n                    value: 'Gender:'\n                }]\n            }, {\n                height: 45,\n                cells: [{\n                    index: 1,\n                    value: 'Year of Experience:'\n                }]\n            }, {\n                height: 45,\n                cells: [{\n                    index: 1,\n                    value: 'Areas of Interest:'\n                }]\n            }, {\n                height: 45,\n                cells: [{\n                    index: 1,\n                    value: 'Mobile Number:'\n                }]\n            }, {\n                height: 45,\n                cells: [{\n                    index: 1,\n                    value: 'Email:'\n                }]\n            }, {\n                height: 82,\n                cells: [{\n                    index: 1,\n                    value: 'Address:'\n                }]\n            }],\n            columns: [{\n                index: 1,\n                width: 190\n            }, {\n                width: 350\n            }],\n            ranges: [{\n                template: '<input />',\n                address: 'C2:C3'\n            }, {\n                template: '<div style=\"padding-left: 2px\"><input type=\"radio\" name=\"gender\" value=\"male\" /><input type=\"radio\" name=\"gender\" value=\"female\"/></div>',\n                address: 'C4'\n            }, {\n                template: '<input />',\n                address: 'C5:C8'\n            }, {\n                template: '<textarea rows=\"3\"/>',\n                address: 'C9'\n            }, {\n                template: '<button class=\"e-btn e-flat\" style=\"float:right\">Add</button>',\n                address: 'C11'\n            }]\n        }],\n        beforeCellRender: (args: CellRenderEventArgs) => {\n            //Initializing input components before cell rendering\n            if (spreadsheet.activeSheetIndex === 0) {\n                let target: HTMLInputElement = args.element.firstElementChild as HTMLInputElement;\n                switch (args.address) {\n                    case 'B1':\n                        (args.element as HTMLTableCellElement).colSpan = 2;\n                        break;\n                    case 'C2':\n                        new TextBox({ placeholder: 'Name' }, target);\n                        break;\n                    case 'C3':\n                        new DatePicker({ placeholder: 'DOB',  }, target);\n                        break;\n                    case 'C4':\n                        new RadioButton({ label: 'Male' }, args.element.firstElementChild.firstElementChild as HTMLInputElement);\n                        new RadioButton({ label: 'Female' }, args.element.firstElementChild.lastElementChild as HTMLInputElement);\n                        break;\n                    case 'C5':\n                        let experience: string[] =  ['0 - 1 year', '1 - 3 years', '3 - 5 years', '5 - 10 years'];\n                        new DropDownList(\n                            { placeholder: 'Experience', dataSource: experience},  target );\n                        break;\n                    case 'C6':\n                        let languages: string[] = ['JAVA', 'C#', 'SQL'];\n                        new MultiSelect(\n                            { showClearButton: false, placeholder: 'Areas of Interest', dataSource: languages }, target);\n                        break;\n                    case 'C7':\n                        new TextBox({ placeholder: 'Mobile Number' }, target);\n                        break;\n                    case 'C8':\n                        new TextBox({ placeholder: 'Email'}, target);\n                        break;\n                    case 'C9':\n                        new TextBox({ placeholder: 'Address' }, target);\n                        break;\n                }\n            }\n        },\n        created: () => {\n            //Applies format to specified range\n            spreadsheet.cellFormat({ fontWeight: 'bold' }, 'B2:B9');\n            spreadsheet.cellFormat({ verticalAlign: 'middle' }, 'B2:C9');\n        },\n        contextMenuBeforeOpen: (): void => {\n            spreadsheet.enableContextMenuItems(['Duplicate'], false, false);\n        }\n    });\n    //Render initialized Spreadsheet component\n    spreadsheet.appendTo('#spreadsheet');\n\n// custom code start\n/* tslint:enable:max-func-body-length */\n// custom code end\n"}