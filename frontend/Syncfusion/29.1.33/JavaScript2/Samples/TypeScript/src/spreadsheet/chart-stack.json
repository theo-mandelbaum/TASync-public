{"chart-data.json":"{\n    \"GDPData\": [\n        {\n            \"Country\": \"USA\",\n            \"Year 2017\": \"18.00\",\n            \"Year 2018\": \"20.40\",\n            \"Year 2019\": \"21.42\",\n            \"Year 2020\": \"19.48\"\n        },\n        {\n            \"Country\": \"China\",\n            \"Year 2017\": \"11.00\",\n            \"Year 2018\": \"14.00\",\n            \"Year 2019\": \"14.32\",\n            \"Year 2020\": \"12.23\"\n        },\n        {\n            \"Country\": \"Japan\",\n            \"Year 2017\": \"4.4\",\n            \"Year 2018\": \"5.10\",\n            \"Year 2019\": \"5.08\",\n            \"Year 2020\": \"4.87\"\n        },\n        {\n            \"Country\": \"Germany\",\n            \"Year 2017\": \"3.3\",\n            \"Year 2018\": \"4.20\",\n            \"Year 2019\": \"3.84\",\n            \"Year 2020\": \"3.69\"\n        },\n        {\n            \"Country\": \"India\",\n            \"Year 2017\": \"2.00\",\n            \"Year 2018\": \"2.85\",\n            \"Year 2019\": \"2.87\",\n            \"Year 2020\": \"2.65\"\n        },\n        {\n            \"Country\": \"UK\",\n            \"Year 2017\": \"2.90\",\n            \"Year 2018\": \"2.94\",\n            \"Year 2019\": \"2.82\",\n            \"Year 2020\": \"2.63\"\n        },\n        {\n            \"Country\": \"France\",\n            \"Year 2017\": \"2.40\",\n            \"Year 2018\": \"2.93\",\n            \"Year 2019\": \"2.71\",\n            \"Year 2020\": \"2.58\"\n        }\n    ]\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div class=\"control-wrapper\">\n        <div id=\"spreadsheet\"></div>\n    </div>\n</div>\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-charts\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-grids\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-spreadsheet\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { Spreadsheet, getFormatFromType } from '@syncfusion/ej2-spreadsheet';\nimport * as dataSource from './chart-data.json';\n\n/**\n * Chart\n */\n// custom code start\n/* tslint:disable:max-func-body-length */\n// custom code end\n\n    \n\n    //Initialize Spreadsheet component.\n    let spreadsheet: Spreadsheet = new Spreadsheet({\n        sheets: [\n            {\n                name: 'GDP',\n                ranges: [{ dataSource:  (dataSource as any).GDPData , startCell: 'A3' }],\n                rows: [\n                    {\n                        height: 30,\n                        cells: [\n                            {\n                                value: 'Gross Domestic Product (in trillions)',\n                                style: {\n                                    backgroundColor: '#e56590', color: '#fff',\n                                    fontWeight: 'bold', textAlign: 'center', verticalAlign: 'middle'\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        cells: [\n                            { index: 6, chart: [{ type: 'Column', range: 'A3:E10' }] }\n                        ]\n                    }\n                ],\n                columns: [\n                    { width: 80 }, { width: 75 }, { width: 75 }, { width: 75 }, { width: 75 }\n                ]\n            }\n        ],\n        openUrl: 'http://localhost:62728/api/spreadsheet/open',\n        saveUrl: 'http://localhost:62728/api/spreadsheet/save',\n        created: () => {\n             // Formatting cells dynamically using cellFormat method\n             spreadsheet.cellFormat({ backgroundColor: '#e56590', color: '#fff', fontWeight: 'bold', textAlign: 'center' }, 'A3:E3');\n             // Applying currency format to the specified range.\n             spreadsheet.numberFormat('$#,##0.00', 'B4:E10');\n             // Merging the cells from A1 to E1\n             spreadsheet.merge('A1:E1');\n        }\n    });\n    //Render initialized Spreadsheet component\n    spreadsheet.appendTo('#spreadsheet');\n\n// custom code start\n/* tslint:enable:max-func-body-length */\n// custom code end\n"}