{"data-validation-data.json":"{\n    \"grossPay\" : [\n        {\n            \"Employee ID\": \"1001\",\n            \"Employee Name\": \"Vin Disel\",\n            \"Date\": \"04-05-2021\",\n            \"Weekday\": \"Mon\",\n            \"Time In\": \"8:00 AM\",\n            \"Time Out\": \"10:00 PM\",\n            \"Hours Worked\": \"14\",\n            \"Basic Salary (30/hour)\": \"=G4*30\",\n            \"Gross Pay With Overtime(15/hour)\": \"=Sum(H4 + ((G4-8)*15))\"\n        },{\n            \"Employee ID\": \"1002\",\n            \"Employee Name\": \"Steve\",\n            \"Date\": \"04-06-2021\",\n            \"Weekday\": \"Tue\",\n            \"Time In\": \"8:00 AM\",\n            \"Time Out\": \"6:00 PM\",\n            \"Hours Worked\": \"10\",\n            \"Basic Salary (30/hour)\": \"=G5*30\",\n            \"Gross Pay With Overtime(15/hour)\": \"=Sum(H5 + ((G5-8)*15))\"\n        },\n        {\n            \"Employee ID\": \"1003\",\n            \"Employee Name\": \"Paul Waulker\",\n            \"Date\": \"04-06-2021\",\n            \"Weekday\": \"Tue\",\n            \"Time In\": \"11:00 AM\",\n            \"Time Out\": \"4:00 PM\",\n            \"Hours Worked\": \"9\",\n            \"Basic Salary (30/hour)\": \"=G6*30\",\n            \"Gross Pay With Overtime(15/hour)\": \"=Sum(H6 + ((G6-8)*15))\"\n        },\n        {\n            \"Employee ID\": \"1004\",\n            \"Employee Name\": \"John\",\n            \"Date\": \"04-08-2021\",\n            \"Weekday\": \"Thu\",\n            \"Time In\": \"8:00 AM\",\n            \"Time Out\": \"4:00 PM\",\n            \"Hours Worked\": \"8\",\n            \"Basic Salary (30/hour)\": \"=G7*30\",\n            \"Gross Pay With Overtime(15/hour)\": \"=Sum(H7 + ((G7-8)*15))\"\n        },\n        {\n            \"Employee ID\": \"1005\",\n            \"Employee Name\": \"Sam\",\n            \"Date\": \"04-09-2021\",\n            \"Weekday\": \"Fri\",\n            \"Time In\": \"7:00 AM\",\n            \"Time Out\": \"6:00 PM\",\n            \"Hours Worked\": \"11\",\n            \"Basic Salary (30/hour)\": \"=G8*30\",\n            \"Gross Pay With Overtime(15/hour)\": \"=Sum(H8 + ((G8-8)*15))\"\n        },\n        {\n            \"Employee ID\": \"1006\",\n            \"Employee Name\": \"Chistoper\",\n            \"Date\": \"04-12-2021\",\n            \"Weekday\": \"Mon\",\n            \"Time In\": \"10:00 AM\",\n            \"Time Out\": \"6:00 PM\",\n            \"Hours Worked\": \"8\",\n            \"Basic Salary (30/hour)\": \"=G9*30\",\n            \"Gross Pay With Overtime(15/hour)\": \"=Sum(H9 + ((G9-8)*15))\"\n        },\n        {\n            \"Employee ID\": \"1007\",\n            \"Employee Name\": \"Adrew\",\n            \"Date\": \"04-13-2021\",\n            \"Weekday\": \"Tue\",\n            \"Time In\": \"10:00 AM\",\n            \"Time Out\": \"7:00 PM\",\n            \"Hours Worked\": \"9\",\n            \"Basic Salary (30/hour)\": \"=G10*30\",\n            \"Gross Pay With Overtime(15/hour)\": \"=Sum(H10 + ((G10-8)*15))\"\n        },\n        {\n            \"Employee ID\": \"1004\",\n            \"Employee Name\": \"John\",\n            \"Date\": \"04-14-2021\",\n            \"Weekday\": \"Wed\",\n            \"Time In\": \"8:00 AM\",\n            \"Time Out\": \"4:00 PM\",\n            \"Hours Worked\": \"8\",\n            \"Basic Salary (30/hour)\": \"=G11*30\",\n            \"Gross Pay With Overtime(15/hour)\": \"=Sum(H11 + ((G11-8)*15))\"\n        },\n        {\n            \"Employee ID\": \"1009\",\n            \"Employee Name\": \"Bravo\",\n            \"Date\": \"04-14-2021\",\n            \"Weekday\": \"Wed\",\n            \"Time In\": \"11:00 AM\",\n            \"Time Out\": \"8:00 PM\",\n            \"Hours Worked\": \"9\",\n            \"Basic Salary (30/hour)\": \"=G12*30\",\n            \"Gross Pay With Overtime(15/hour)\": \"=Sum(H12 + ((G12-8)*15))\"\n        },\n        {\n            \"Employee ID\": \"1002\",\n            \"Employee Name\": \"Steve\",\n            \"Date\": \"04-15-2021\",\n            \"Weekday\": \"Thu\",\n            \"Time In\": \"9:00 AM\",\n            \"Time Out\": \"8:00 PM\",\n            \"Hours Worked\": \"11\",\n            \"Basic Salary (30/hour)\": \"=G13*30\",\n            \"Gross Pay With Overtime(15/hour)\": \"=Sum(H13 + ((G13-8)*15))\"\n        }\n    ]\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div id=\"spreadsheet\"></div>\n</div>\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-charts\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-grids\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-spreadsheet\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { SheetModel, Spreadsheet } from '@syncfusion/ej2-spreadsheet';\nimport * as dataSource from './data-validation-data.json';\n\n/**\n * Data Validation sample\n */\n// custom code start\n/* tslint:disable:max-func-body-length */\n// custom code end\n\n    \n\n    //Initialize Spreadsheet component.\n    let sheet: SheetModel[] = [\n        {\n            ranges: [{\n                dataSource: (dataSource as any).grossPay,\n                startCell: 'A3'\n                },\n            ],\n            name: 'Gross Pay',\n            rows: [{\n                        cells: [{ value: 'Gross Pay Calculation',\n                        style: { fontSize: '20pt', fontWeight : 'bold', textAlign: 'center', backgroundColor: '#B3FFB3',\n                        verticalAlign: 'middle'} }]\n                    },\n                    {\n                        index: 13,\n                        cells: [{\n                            index: 7, value: 'Total Gross',\n                            style: { border: '1px solid #A6A6A6', textAlign: 'center', verticalAlign: 'middle', fontWeight: 'bold'} },\n                        {\n                            index: 8, formula: '=Sum(I4:I13)', format: '$#,##0.00',\n                            style: { border: '1px solid #A6A6A6', textAlign: 'center', verticalAlign: 'middle', fontWeight: 'bold'}\n                        }]\n                    }\n            ],\n            columns: [\n                { width: 88,  }, { width: 120 }, { width: 106 }, { width: 98 }, { width: 110 },\n                { width: 110 }, { width: 110 }, { width: 98}, { width: 130}\n            ]\n        }  ];\n\n    //Initialize the SpreadSheet control\n    let spreadsheet: Spreadsheet = new Spreadsheet({\n        sheets: sheet,\n        created: () => {\n            spreadsheet.merge('A1:I2');\n            spreadsheet.setBorder({ border: '1px solid #A6A6A6' }, 'A1:I13');\n            spreadsheet.cellFormat({ textAlign: 'center', verticalAlign: 'middle'}, 'A3:I13');\n            spreadsheet.cellFormat({ backgroundColor: '#B3FFB3', fontWeight : 'bold'}, 'A3:I3');\n            spreadsheet.numberFormat('$#,##0.00', 'H4:I13');\n            spreadsheet.numberFormat('m/d/yyyy', 'C4:C13');\n            spreadsheet.wrap('H3:I3');\n            //Add Data validation to range.\n            spreadsheet.addDataValidation({ type: 'WholeNumber', operator: 'LessThan', value1: '9', ignoreBlank: false }, 'G4:G13');\n            spreadsheet.addDataValidation({ type: 'TextLength', operator: 'GreaterThan', value1: '3', ignoreBlank: false }, 'B4:B13');\n            spreadsheet.addDataValidation({ type: 'Time', operator: 'GreaterThan', value1: '8:00:00 AM', ignoreBlank: false  }, 'E4:E13');\n            spreadsheet.addDataValidation({ type: 'Time', operator: 'LessThan', value1: '6:00:00 PM', ignoreBlank: false  }, 'F4:F13');\n            spreadsheet.addDataValidation({ type: 'List', value1: 'Mon, Tue, Wed, Thu, Fri', ignoreBlank: false  }, 'D4:D13');\n            spreadsheet.addDataValidation({ type: 'WholeNumber', operator: 'LessThan', value1: '=H5', ignoreBlank: false }, 'I4:I13');\n            //Highlight Invalid Data.\n            spreadsheet.addInvalidHighlight('G4:G13');\n            spreadsheet.addInvalidHighlight('I4:I13');\n        }\n    });\n\n    spreadsheet.appendTo('#spreadsheet');\n\n// custom code start\n/* tslint:enable:max-func-body-length */\n// custom code end\n"}