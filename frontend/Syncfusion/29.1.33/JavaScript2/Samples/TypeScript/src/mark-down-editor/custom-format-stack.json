{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div class=\"sample-container\">\n        <div class=\"default-section\">\n            <div id=\"defaultRTE\">\n                The sample is configured with customized markdown syntax using the __formatter__ property. Type the content and click the toolbar item to view customized markdown syntax. For an unordered list, you need to add a plus sign before the word (e.g., + list1). Or To make a phrase bold, you need to add two underscores before and after the phrase (e.g., __this text is bold__).\n            </div>\n        </div>\n    </div>\n</div>\n</div>\n\n\n\n\n\n<style>\n    .e-richtexteditor textarea.e-content {\n        float: left;\n    }\n\n    .e-richtexteditor .e-rte-content {\n        overflow: hidden;\n    }\n\n    .e-icon-btn.e-active .e-md-preview::before {\n        content: '\\e350';\n    }\n\n    .e-icon-btn .e-md-preview::before {\n        content: '\\e345';\n    }\n\n    .bootstrap4 .e-icon-btn.e-active .e-md-preview::before {\n        content: '\\e790';\n    }\n\n    .bootstrap4 .e-icon-btn .e-md-preview::before {\n        content: '\\e787';\n    }\n\n    .tailwind .e-icon-btn.e-active .e-md-preview::before,\n    .tailwind-dark .e-icon-btn.e-active .e-md-preview::before,\n    .tailwind3 .e-icon-btn.e-active .e-md-preview::before,\n    .tailwind3-dark .e-icon-btn.e-active .e-md-preview::before,\n    .fluent .e-icon-btn.e-active .e-md-preview::before,\n    .fluent-dark .e-icon-btn.e-active .e-md-preview::before,\n    .fluent2 .e-icon-btn.e-active .e-md-preview::before,\n    .fluent2-dark .e-icon-btn.e-active .e-md-preview::before,\n    .fluent2-highcontrast .e-icon-btn.e-active .e-md-preview::before,\n    .bootstrap5 .e-icon-btn.e-active .e-md-preview::before,\n    .bootstrap5\\.3 .e-icon-btn.e-active .e-md-preview::before,\n    .bootstrap5\\.3-dark .e-icon-btn.e-active .e-md-preview::before,\n    .bootstrap5-dark .e-icon-btn.e-active .e-md-preview::before,\n    .material3 .e-icon-btn.e-active .e-md-preview::before,\n    .material3-dark .e-icon-btn.e-active .e-md-preview::before {\n        content: '\\e80e';\n    }\n\n    .tailwind .e-icon-btn .e-md-preview::before,\n    .tailwind-dark .e-icon-btn .e-md-preview::before,\n    .tailwind3 .e-icon-btn .e-md-preview::before,\n    .tailwind3-dark .e-icon-btn .e-md-preview::before,\n    .bootstrap5 .e-icon-btn .e-md-preview::before,\n    .bootstrap5\\.3 .e-icon-btn .e-md-preview::before,\n    .bootstrap5\\.3-dark .e-icon-btn .e-md-preview::before,\n    .bootstrap5-dark .e-icon-btn .e-md-preview::before,\n    .fluent .e-icon-btn .e-md-preview::before,\n    .fluent-dark .e-icon-btn .e-md-preview::before,\n    .fluent2 .e-icon-btn .e-md-preview::before,\n    .fluent2-dark .e-icon-btn .e-md-preview::before,\n    .fluent2-highcontrast .e-icon-btn .e-md-preview::before,\n    .material3 .e-icon-btn .e-md-preview::before,\n    .material3-dark .e-icon-btn .e-md-preview::before {\n        content: '\\e7de';\n    }\n\n    .e-rte-content .e-content {\n        float: right;\n        width: 50%;\n        overflow: auto;\n        height: inherit;\n        padding: 8px;\n    }\n\n    .e-rte-content .e-content.e-pre-source {\n        width: 100%;\n    }\n</style>\n\n</body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-filemanager\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-richtexteditor\": \"*\",\n  \"@syncfusion/ej2-icons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\n/**\n * Rich Text Editor Markdown Sample\n */\nimport { RichTextEditor, Toolbar, Link, Image, MarkdownFormatter, MarkdownEditor} from '@syncfusion/ej2-richtexteditor';\nimport { createElement, KeyboardEventArgs } from '@syncfusion/ej2-base';\nRichTextEditor.Inject(Toolbar, Link, Image, MarkdownEditor);\nimport Marked from 'marked';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n\n\nlet textArea: HTMLTextAreaElement;\nlet mdPreview: HTMLElement;\nlet mdsource: HTMLElement;\nlet tooltipObj: Tooltip;\n\n\n\n    \n\n    let defaultRTE: RichTextEditor = new RichTextEditor({\n        height: '260px',\n        placeholder : \"Enter your text here...\",\n        toolbarSettings: {\n            items: ['Bold', 'Italic', 'StrikeThrough', '|',\n                'Formats', 'Blockquote', 'OrderedList', 'UnorderedList', '|',\n                'CreateLink', 'Image', '|',\n                {\n                    template:\n                      '<button id=\"preview-code\" class=\"e-tbar-btn e-control e-btn e-icon-btn\" aria-label=\"Preview Code\">' +\n                      '<span class=\"e-btn-icon e-icons e-md-preview\"></span></button>'\n                }, 'Undo', 'Redo']\n           \n        },\n        editorMode: 'Markdown',\n        formatter: new MarkdownFormatter({\n            listTags: { 'OL': '2. ', 'UL': '+ ' },\n            formatTags: {\n                'Blockquote': '> '\n            },\n            selectionTags: {'Bold': '__',  'Italic': '_'}\n        }),\n        created: () => {\n            tooltipObj = new Tooltip({\n                content: \"Preview\",  \n                target: \"#preview-code\"  \n              });\n            tooltipObj.appendTo(\"#preview-code\");\n            mdPreview = document.getElementById('MD_Preview');\n            textArea = defaultRTE.contentModule.getEditPanel() as HTMLTextAreaElement;\n            textArea.addEventListener('keyup', (e: KeyboardEventArgs) => {\n                MarkDownConversion();\n            });\n            mdsource = document.getElementById('preview-code');\n            mdsource.addEventListener('click', (e: MouseEvent) => {\n                fullPreview();\n            });\n        }\n    });\n    defaultRTE.appendTo('#defaultRTE');\n    function MarkDownConversion(): void {\n        if (mdsource.classList.contains('e-active')) {\n            let id: string = defaultRTE.getID() + 'html-view';\n            let htmlPreview: HTMLElement = defaultRTE.element.querySelector('#' + id);\n            htmlPreview.innerHTML = Marked.marked((defaultRTE.contentModule.getEditPanel() as HTMLTextAreaElement).value);\n        }\n    }\n    function fullPreview(): void {\n        let id: string = defaultRTE.getID() + 'html-preview';\n        let htmlPreview: HTMLElement = defaultRTE.element.querySelector('#' + id);\n        if (mdsource.classList.contains('e-active')) {\n            mdsource.classList.remove('e-active');\n            defaultRTE.enableToolbarItem(defaultRTE.toolbarSettings.items as string[]);\n            textArea.style.display = 'block';\n            htmlPreview.style.display = 'none';\n            tooltipObj.content = \"Preview\";\n        } else {\n            mdsource.classList.add('e-active');\n            defaultRTE.disableToolbarItem(defaultRTE.toolbarSettings.items as string[]);\n            if (!htmlPreview) {\n                htmlPreview = createElement('div', { className: 'e-content e-pre-source' });\n                htmlPreview.id = id;\n                textArea.parentNode.appendChild(htmlPreview);\n            }\n            textArea.style.display = 'none';\n            htmlPreview.style.display = 'block';\n            tooltipObj.content = \"Codeview\";\n            htmlPreview.innerHTML = Marked.marked((defaultRTE.contentModule.getEditPanel() as HTMLTextAreaElement).value);\n        }\n    }\n\n"}