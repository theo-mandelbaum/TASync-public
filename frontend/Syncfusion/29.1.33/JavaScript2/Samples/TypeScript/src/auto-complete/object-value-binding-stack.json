{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-8 control-section\">\n    <div class=\"control-wrapper\">\n        <div id=\"default\" style=\"padding-top:75px;\">\n            <input type=\"text\" id=\"object\" tabindex=\"0\">\n        </div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\">\n    <textarea id=\"value\" class=\"auto-dropdowns\" title=\"Properties\" style=\"width: 100%; margin-top:90px; height: 60px; background-color: inherit;\" readonly=\"\">Selected value : </textarea>\n</div>\n\n\n\n\n\n<!-- custom code start -->\n\n<style>\n    .control-wrapper {\n        margin: 0 auto;\n        width: 250px;\n    }\n\n    .property-section .right-side {\n        padding-left: 10px;\n    }\n    \n    .fluent-dark .auto-dropdowns,\n    .fluent2-dark .auto-dropdowns,\n    .material-dark .auto-dropdowns,\n    .material3-dark .auto-dropdowns,\n    .bootstrap-dark .auto-dropdowns,\n    .bootstrap5-dark .auto-dropdowns,\n    .bootstrap5.3-dark .auto-dropdowns,\n    .highcontrast .auto-dropdowns,\n    .fluent2-highcontrast .auto-dropdowns {\n        background: #1f1f1f;\n    }\n\n    .property-section .left-side {\n        padding: 5px;\n        width: 25%\n    }\n</style>\n<!-- custom code end-->\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\n/**\n * AutoComplete Object Value Binding Sample\n */\nimport { AutoComplete } from '@syncfusion/ej2-dropdowns';\n\nlet records: { [key: string]: Object }[] = [];\n\nfor (let i = 1; i <= 150; i++) {\n    let item: { [key: string]: Object } = {};\n    item.id = 'id' + i;\n    item.text = `Item ${i}`;\n\n    // Generate a random number between 1 and 4 to determine the group\n    const randomGroup = Math.floor(Math.random() * 4) + 1;\n    switch (randomGroup) {\n        case 1:\n            item.group = 'Group A';\n            break;\n        case 2:\n            item.group = 'Group B';\n            break;\n        case 3:\n            item.group = 'Group C';\n            break;\n        case 4:\n            item.group = 'Group D';\n            break;\n        default:\n            break;\n    }\n    records.push(item);\n}\n\n\n\n    \n\n    // Initialize DropDownList component\n    let listObj: AutoComplete = new AutoComplete({\n        //set the local data to dataSource property\n        dataSource: records,\n        // set the placeholder to DropDownList input element\n        placeholder: 'Select a Item',\n        allowObjectBinding: true,\n        fields: { value: 'text' },\n        // set the height of the popup element\n        popupHeight: '200px',\n        // bind the change event\n        change: () => { valueChange();  }\n    });\n    listObj.appendTo('#object');\n    // call the change event's function after initialized the component.\n    valueChange();\n\n    function valueChange(): void {\n        let value: Element = document.getElementById('value');\n        // update the text and value property values in property panel based on selected item in DropDownList\n        value.innerHTML = \"Selected value : \"  + JSON.stringify(listObj.value);\n    }\n"}