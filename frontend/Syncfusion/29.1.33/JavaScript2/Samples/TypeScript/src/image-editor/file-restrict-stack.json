{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-12 control-section\">\n    <div style=\"text-align: center;\">\n        <div class=\"e-img-editor-dropdown-container\">\n            <label>Size As</label>\n            <br>\n            <button id=\"dropdownbtn\"></button>\n        </div>\n        <div class=\"e-img-editor-numeric-textbox-container\">\n            <label>Minimum Size</label>\n            <br>\n            <input id=\"minFileSize\" type=\"text\">\n        </div>\n        <div class=\"e-img-editor-numeric-textbox-container\">\n            <label>Maximum Size</label>\n            <br>\n            <input id=\"maxFileSize\" type=\"text\">\n        </div>\n        <div class=\"e-img-editor-dropdown-container\">\n            <label>Allowed Extensions</label><br>\n            <input type=\"text\" id=\"allowedExtensions\">\n        </div>\n    </div>\n    <div class=\"e-img-editor-sample\">\n        <div id=\"imageeditor\" class=\"row\">\n        </div>\n    </div>\n</div>\n\n\n\n\n\n<style>\n    .e-image-editor {\n        margin: 0 auto;\n    }\n\t    \n    .e-img-editor-sample {\n        height: 80vh;\n        width: 100%;\n        margin-top: 18px;\n    }\n\t\n\t@media only screen and (max-width: 700px) {\n        .e-img-editor-sample {\n            height: 75vh;\n            width: 100%;\n        }\n    }\n\t\n\t.control-wrapper {\n\t\theight: 100%;\n\t}\n\n    .e-img-editor-numeric-textbox-container, .e-img-editor-dropdown-container {\n        display: inline-block;\n        margin-right: 30px;\n        text-align: left;\n    }\n\n    #dropdownbtn {\n        font-weight: 400;\n    }\n\n    @media only screen and (max-width: 700px) {\n        .e-img-editor-dropdown-container,\n        .e-img-editor-numeric-textbox-container {\n            display: block;\n            margin-right: 0;\n            margin-bottom: 20px;\n            text-align: center;\n        }\n    }\n</style>\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-image-editor\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { ImageEditor } from '@syncfusion/ej2-image-editor';\nimport { CheckBoxSelection, MultiSelect } from '@syncfusion/ej2-dropdowns';\nimport { NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\nMultiSelect.Inject(CheckBoxSelection);\n\n\n/**\n * Default image editor sample\n */\n// tslint:disable-next-line\n\n    \n    // File extensions data\n    const fileExtensionsList = [\n        { Name: \"JPEG\", Value: \".jpeg\" },\n        { Name: \"JPG\", Value: \".jpg\" },\n        { Name: \"PNG\", Value: \".png\" },\n        { Name: \"SVG\", Value: \".svg\" },\n        { Name: \"WebP\", Value: \".webp\" }\n    ];\n\n    // Initial values\n    let minFileSize = 1; // 1 KB\n    let maxFileSize = 100; // 100 KB\n    let allowedExtensions = \".jpeg, .jpg, .png, .svg, .webp\";\n    let units: { text: string }[] = [{ text: 'KB' }, { text: 'MB' }];\n    let defaultUnit: string = 'KB';\n\n    let minFileNumeric: NumericTextBox = new NumericTextBox({\n        width: '150px',\n        value: minFileSize,\n        min: 1,\n        change: function (args: any) {\n            minFileSize = args.value;\n            updateUploadSettings();\n        }\n    });\n    minFileNumeric.appendTo('#minFileSize');\n\n\n    let maxFileNumeric: NumericTextBox = new NumericTextBox({\n        width: '150px',\n        value: maxFileSize,\n        min: 1,\n        change: function (args: any) {\n            maxFileSize = args.value;\n            updateUploadSettings();\n        }\n    });\n    maxFileNumeric.appendTo('#maxFileSize');\n\n    // initialize MultiSelect component\n    let msObject: MultiSelect = new MultiSelect({\n        dataSource: fileExtensionsList,\n        width: '210px',\n        fields: { text: 'Name', value: 'Value' },\n        mode: 'CheckBox',\n        showSelectAll: true,\n        value: allowedExtensions.split(', '),\n        change: function (args: any) {\n            if (args.value.length === 0) {\n                allowedExtensions = \".jpeg, .jpg, .png, .svg, .webp\";\n              } else {\n                allowedExtensions = args.value.join(', ');\n              }\n            updateUploadSettings();\n        }\n    });\n    // render initialized MultiSelect\n    msObject.appendTo('#allowedExtensions');\n\n    // Initialize Image Editor\n    let imageEditorObj: ImageEditor = new ImageEditor({\n        uploadSettings: {\n            minFileSize: minFileSize,\n            maxFileSize: maxFileSize,\n            allowedExtensions: allowedExtensions\n        },\n        created: function () {\n            updateUploadSettings();\n        }\n    });\n    imageEditorObj.appendTo('#imageeditor');\n\n    // Update Image Editor Upload Settings\n    function updateUploadSettings() {\n        imageEditorObj.uploadSettings = {\n            minFileSize: convertToBytes(minFileSize),\n            maxFileSize: convertToBytes(maxFileSize),\n            allowedExtensions: allowedExtensions\n        };\n        imageEditorObj.update();\n    }\n\n    const drpDownBtn = new DropDownButton({\n        content: defaultUnit,\n        items: units,\n        select: ({ item }: { item: { text: string } }) => updateUnit(item.text),\n        beforeItemRender: ({ item, element }: { item: { text: string }, element: HTMLElement }) => {\n            if (item.text === defaultUnit) element.classList.add('e-selected');\n        }\n    });\n    drpDownBtn.appendTo('#dropdownbtn');\n    \n    function updateUnit(unit: string): void {\n        drpDownBtn.content = defaultUnit = unit;\n        updateUploadSettings();\n    }\n    \n    function convertToBytes(value: number): number {\n        return value * (defaultUnit === 'MB' ? 1024 * 1024 : 1024);\n    }\n\n"}