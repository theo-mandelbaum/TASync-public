{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-8 control-section\">\n    <div class=\"control-wrapper\">\n        <div class=\"sample-container\">\n            <div class=\"default-section\">\n                <div id=\"defaultRTE\">\n                    <p>Rich Text Editor is a WYSIWYG editing control that will reduce the effort for users while trying to express their formatting word content as HTML or Markdown format.</p>\n                    <p><b>APIâ€™s:</b></p>\n                    <ul>\n                        <li><p>maxLength - allows restricting the maximum length to be entered.</p></li>\n                        <li><p>readOnly - allows to change it as a non-editable state.</p></li>\n                        <li><p>enabled - enable or disable the RTE control.</p></li>\n                        <li><p>enableHtmlEncode - Get the encoded string value through value property and source code panel</p></li>\n                        <li><p>getValue - get the value of RTE.</p></li>\n                        <li><p>getSelection - get the selected text of RTE.</p></li>\n                        <li><p>selectAll - select all content in RTE.</p></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\">\n    <div id=\"property\" title=\"Properties\">\n        <table id=\"property\" title=\"Properties\">\n            <tbody>\n                <tr>\n                    <td>\n                        <div>Maximum Length </div>\n                    </td>\n                    <td>\n                        <div>\n                            <input id=\"maxlength\" type=\"text\" class=\"form-control\" value=\"1000\">\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <div>ReadOnly </div>\n                    </td>\n                    <td>\n                        <div style=\"padding-left: 0;padding-top: 0\">\n                            <input type=\"checkbox\" id=\"readonly\" checked=\"false\" aria-label=\"Readonly\">\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <div>Enabled </div>\n                    </td>\n                    <td>\n                        <div style=\"padding-left: 0;padding-top: 0\">\n                            <input type=\"checkbox\" id=\"enable\" checked=\"true\" aria-label=\"Enabled\">\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <div>Enable Html Encode </div>\n                    </td>\n                    <td>\n                        <div style=\"padding-left: 0;padding-top: 0\">\n                            <input type=\"checkbox\" id=\"enablehtml\" checked=\"false\" aria-label=\"Enable Html Encode\">\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>\n                        <div>\n                            <button id=\"getVal\" class=\"btn btn-default\">Get Value</button>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>\n                        <div>\n                            <button id=\"selectHtml\" class=\"btn btn-default\">Get Selection</button>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>\n                        <div>\n                            <button id=\"selectall\" class=\"btn btn-default\">Select All </button>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n\n\n\n\n<style>\n    .bootstrap-dark button#getVal,\n    .fluent-dark button#getVal,\n    .bootstrap5-dark button#getVal,\n    .bootstrap5\\.3-dark button#getVal,\n    .tailwind-dark button#getVal,\n    .tailwind3-dark button#getVal,\n    .highcontrast button#getVal,\n    .material3-dark button#getVal {\n        color: #FFFFFF;\n        background: #000000;\n    }\n\n    .bootstrap-dark button#selectHtml,\n    .fluent-dark button#selectHtml,\n    .bootstrap5-dark button#selectHtml,\n    .bootstrap5\\.3-dark button#selectHtml,\n    .tailwind-dark button#selectHtml,\n    .tailwind3-dark button#selectHtml,\n    .highcontrast button#selectHtml,\n    .material3-dark button#selectHtml {\n        color: #FFFFFF;\n        background: #000000;\n    }\n    \n    .bootstrap-dark button#selectall,\n    .fluent-dark button#selectall,\n    .bootstrap5-dark button#selectall,\n    .bootstrap5\\.3-dark button#selectall,\n    .tailwind-dark button#selectall,\n    .tailwind3-dark button#selectall,\n    .highcontrast button#selectall,\n    .material3-dark button#selectall {\n        color: #FFFFFF;\n        background: #000000;\n    }\n</style>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-filemanager\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-richtexteditor\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\n/**\n * Rich Text Editor API sample\n */\nimport { RichTextEditor, Toolbar, Link, Image, Count, HtmlEditor, QuickToolbar, PasteCleanup, Table, Video, Audio } from '@syncfusion/ej2-richtexteditor';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { NumericTextBox, ChangeEventArgs } from '@syncfusion/ej2-inputs';\nRichTextEditor.Inject(Toolbar, Link, Image, Count, HtmlEditor, QuickToolbar, PasteCleanup, Table, Video, Audio);\n\n\n    \n\n    let defaultAPI: RichTextEditor = new RichTextEditor({\n        showCharCount: true,\n        maxLength: 1000,\n    });\n    defaultAPI.appendTo('#defaultRTE');\n\n    let maxLength: NumericTextBox = new NumericTextBox({\n        value: 1000,\n        min: 555,\n        max: 2000,\n        placeholder : \"Maximum Length\",\n        format: 'n0',\n        change: (e: ChangeEventArgs) => {\n            defaultAPI.maxLength = maxLength.value;\n        }\n    });\n    maxLength.appendTo('#maxlength');\n    let readonly: CheckBox = new CheckBox({\n        // set false for disable the checked state at initial rendering\n        checked: false,\n        // bind change event\n        change: (args: ChangeEventArgs) => {\n            defaultAPI.readonly = (args as any).checked;\n        }\n    });\n    readonly.appendTo('#readonly');\n    let enable: CheckBox = new CheckBox({\n        // set true for enable the checked state at initial rendering\n        checked: true,\n        // bind change event\n        change: (args: ChangeEventArgs) => {\n            defaultAPI.enabled = (args as any).checked;\n        }\n    });\n    enable.appendTo('#enable');\n    let enablehtml: CheckBox = new CheckBox({\n        // set false for disable the checked state at initial rendering\n        checked: false,\n        // bind change event\n        change: (args: ChangeEventArgs) => {\n            defaultAPI.enableHtmlEncode = (args as any).checked;\n        }\n    });\n    enablehtml.appendTo('#enablehtml');\n    document.getElementById('getVal').onclick = () => {\n        alert(defaultAPI.value);\n    };\n    document.getElementById('selectHtml').onclick = () => {\n        alert(defaultAPI.getSelection());\n    };\n    document.getElementById('selectall').onclick = () => {\n        defaultAPI.selectAll();\n    };\n\n"}