{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section e-rte-quick-tbar-section\">\n    <div class=\"sample-container\">\n        <div class=\"default-section\">\n            <div id=\"defaultRTE\"> </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n<style>\n    .e-rte-quick-popup .e-rte-quick-toolbar .e-roatate-left::before {\n        content: \"\\e76e\";\n    }\n\n    .e-rte-quick-popup .e-rte-quick-toolbar .e-roatate-right::before {\n        content: \"\\e726\";\n    }\n</style>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-filemanager\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-richtexteditor\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\n/**\n * Rich Text Editor default sample\n */\nimport { RichTextEditor, Toolbar, Link, Image, created, QuickToolbar, HtmlEditor, PasteCleanup, Table, Video, Audio } from '@syncfusion/ej2-richtexteditor';\nRichTextEditor.Inject(Toolbar, Link, Image, QuickToolbar, HtmlEditor, PasteCleanup, Table, Video, Audio);\n\n\n    \n\n    let defaultRTE: RichTextEditor = new RichTextEditor({\n        quickToolbarSettings: {\n            image: [\n                 'Replace', 'Align', 'Caption', 'Remove', 'InsertLink', '|', 'Display', 'AltText', 'Dimension',\n                {\n                    tooltipText: 'Rotate Left',\n                    template: '<button class=\"e-tbar-btn e-btn\" id=\"roatateLeft\"><span class=\"e-btn-icon e-icons e-roatate-left\"></span>'\n                },\n                {\n                    tooltipText: 'Rotate Right',\n                    template: '<button class=\"e-tbar-btn e-btn\" id=\"roatateRight\"><span class=\"e-btn-icon e-icons e-roatate-right\"></span>'\n                }\n            ]\n        },\n        created: oncreate\n    });\n    defaultRTE.appendTo('#defaultRTE');\n\n    function oncreate(): void {\n        document.getElementById('rteImageID').onclick = (e: Event) => {\n            let rotateLeft: HTMLElement = document.getElementById('roatateLeft');\n            let rotateRight: HTMLElement = document.getElementById('roatateRight');\n            rotateLeft.onclick = (e: Event) => {\n                let imgEle: HTMLElement = document.getElementById('rteImageID');\n                let transform: number = Math.abs(parseInt(imgEle.style.transform.split('(')[1].split(')')[0], 10));\n                imgEle.style.transform = 'rotate(-' + (transform + 90) + 'deg)';\n            };\n            rotateRight.onclick = (e: Event) => {\n                let imgEle: HTMLElement = document.getElementById('rteImageID');\n                let transform: number = parseInt(imgEle.style.transform.split('(')[1].split(')')[0], 10);\n                imgEle.style.transform = 'rotate(' + (transform + 90) + 'deg)';\n            };\n        };\n    }\n\n"}