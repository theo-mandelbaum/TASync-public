{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div id=\"mailMergeEditor\"></div>\n    <button class=\"e-control e-lib e-btn e-formats-tbar-btn e-rte-elements e-tbar-btn\" tabindex=\"-1\" id=\"merge_data\" style=\"width: 100%\">\n        <span style=\"display: inline-flex\"><span class=\"e-tbar-btn-text\">Merge Data</span>\n        </span>\n    </button>\n    <button class=\"e-rte-dropdown-btn e-control e-dropdown-btn e-lib e-btn e-rte-dropdown-popup e-rte-dropdown-items e-formats-tbar-btn e-rte-elements e-tbar-btn\" id=\"insertField\"></button>\n    <div id=\"mentionField\"></div>\n</div>\n\n\n\n\n<style>\n    .tailwind3 #merge_data,\n    .tailwind3-dark #merge_data {\n        font-weight:400;\n    }\n</style>\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-filemanager\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-richtexteditor\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\n/**\n * Rich Text Editor mail merge sample\n */\nimport {\n    RichTextEditor,\n    Toolbar,\n    Link,\n    Image,\n    HtmlEditor,\n    QuickToolbar,\n    Table,\n    PasteCleanup,\n    ActionCompleteEventArgs,\n    ActionBeginEventArgs,\n} from '@syncfusion/ej2-richtexteditor';\nimport { DropDownButton, MenuEventArgs } from '@syncfusion/ej2-splitbuttons';\nimport { Mention } from '@syncfusion/ej2-dropdowns';\n\nRichTextEditor.Inject(\n    Toolbar,\n    Link,\n    Image,\n    HtmlEditor,\n    QuickToolbar,\n    Table,\n    PasteCleanup\n);\n\n\n    \n\n    const rteValue: string = `<p>Dear <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{FirstName}}</span></span> <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{LastName}}</span></span>,</p>\n<p>We are thrilled to have you with us! Your unique promotional code for this month is: <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{PromoCode}}</span></span>.</p>\n<p>Your current subscription plan is: <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{SubscriptionPlan}}</span></span>.</p>\n<p>Your customer ID is: <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{CustomerID}}</span></span>.</p>\n<p>Your promotional code expires on: <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{ExpirationDate}}</span></span>.</p>\n<p>Feel free to browse our latest offerings and updates. If you need any assistance, don't hesitate to contact us at <a href=\"mailto:{{SupportEmail}}\"><span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{SupportEmail}}</span></span></a> or call us at <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{SupportPhoneNumber}}</span></span>.</p>\n<p>Best regards,<br>The <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{CompanyName}}</span></span> Team</p>`;\n\n    const textToValueMap: { [key: string]: string } = {\n        'First Name': 'FirstName',\n        'Last Name': 'LastName',\n        'Support Email': 'SupportEmail',\n        'Company Name': 'CompanyName',\n        'Promo Code': 'PromoCode',\n        'Support Phone Number': 'SupportPhoneNumber',\n        'Customer ID': 'CustomerID',\n        'Expiration Date': 'ExpirationDate',\n        'Subscription Plan': 'SubscriptionPlan',\n    };\n\n    const dropdownContent: string = ` <span style=\"display:inline-flex;\">\n    <span class=\"e-rte-dropdown-btn-text\">Insert Field</span>\n    </span>`;\n\n    const mergeData: any = [\n        { text: 'First Name', value: 'FirstName' },\n        { text: 'Last Name', value: 'LastName' },\n        { text: 'Support Email', value: 'SupportEmail' },\n        { text: 'Company Name', value: 'CompanyName' },\n        { text: 'Promo Code', value: 'PromoCode' },\n        { text: 'Support Phone Number', value: 'SupportPhoneNumber' },\n        { text: 'Customer ID', value: 'CustomerID' },\n        { text: 'Expiration Date', value: 'ExpirationDate' },\n        { text: 'Subscription Plan', value: 'SubscriptionPlan' },\n    ];\n\n    const placeholderData: { [key: string]: string } = {\n        FirstName: 'John',\n        LastName: 'Doe',\n        PromoCode: 'ABC123',\n        SubscriptionPlan: 'Premium',\n        CustomerID: '123456',\n        ExpirationDate: '2024-12-31',\n        SupportEmail: 'support@example.com',\n        SupportPhoneNumber: '+1-800-555-5555',\n        CompanyName: 'Example Inc.',\n    };\n\n    function onActionBegin(args: ActionBeginEventArgs) {\n        if (\n            args.requestType === 'EnterAction' &&\n            mentionObj.element.classList.contains('e-popup-open')\n        ) {\n            args.cancel = true;\n        }\n    }\n\n    function actionCompleteHandler(e: ActionCompleteEventArgs): void {\n        if (e.requestType === 'SourceCode') {\n            mailMergeEditor.getToolbar().querySelector('#merge_data').parentElement.classList.add('e-overlay');\n            mailMergeEditor.getToolbar().querySelector('#insertField').parentElement.classList.add('e-overlay');\n        } else if (e.requestType === 'Preview') {\n            mailMergeEditor.getToolbar().querySelector('#merge_data').parentElement.classList.remove('e-overlay');\n            mailMergeEditor.getToolbar().querySelector('#insertField').parentElement.classList.remove('e-overlay');\n        }\n    }\n\n    function onItemSelect(args: MenuEventArgs): void {\n        if (args.item.text != null) {\n            const value = textToValueMap[args.item.text];\n            const trimmedValue = value.trim();\n            mailMergeEditor.formatter.editorManager.nodeSelection.restore();\n            mailMergeEditor.executeCommand(\n                'insertHTML',\n                `<span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{${trimmedValue}}}</span></span>&nbsp;`,\n                { undo: true }\n            );\n        }\n    }\n\n    function onClickHandler(args: any): void {\n        if (mailMergeEditor) {\n            let editorContent = mailMergeEditor.value;\n            let mergedContent = replacePlaceholders(editorContent, placeholderData);\n            if ((mailMergeEditor as any).formatter.getUndoRedoStack().length === 0) {\n                (mailMergeEditor as any).formatter.saveData();\n            }\n            mailMergeEditor.value = mergedContent;\n            (mailMergeEditor as any).formatter.saveData();\n        } else {\n            console.log('MailMergeEditor is not initialized.');\n        }\n    }\n\n    function replacePlaceholders(\n        template: string,\n        data: { [key: string]: string }\n    ): string {\n        return template.replace(/{{\\s*(\\w+)\\s*}}/g, (match, key) => {\n            const value = data[key.trim()];\n            const result = value !== undefined ? value : match;\n            return result;\n        });\n    }\n\n    const mailMergeEditor: RichTextEditor = new RichTextEditor({\n        value: rteValue,\n        toolbarSettings: {\n            items: [\n                'Bold',\n                'Italic',\n                'Underline',\n                '|',\n                'Formats',\n                'Alignments',\n                'OrderedList',\n                'UnorderedList',\n                '|',\n                'CreateLink',\n                'Image',\n                'CreateTable',\n                '|',\n                { tooltipText: 'Merge Data', template: '#merge_data' },\n                { tooltipText: 'Insert Field', template: '#insertField' },\n                'SourceCode',\n                '|',\n                'Undo',\n                'Redo',\n            ],\n        },\n        actionBegin: onActionBegin,\n        actionComplete: actionCompleteHandler,\n        saveInterval: 1,\n    });\n    mailMergeEditor.appendTo('#mailMergeEditor');\n\n    let insertField: DropDownButton = new DropDownButton({\n        items: [\n            { text: 'First Name' },\n            { text: 'Last Name' },\n            { text: 'Support Email' },\n            { text: 'Company Name' },\n            { text: 'Promo Code' },\n            { text: 'Support Phone Number' },\n            { text: 'Customer ID' },\n            { text: 'Expiration Date' },\n            { text: 'Subscription Plan' },\n        ],\n        content: dropdownContent,\n        select: onItemSelect,\n    });\n    insertField.appendTo('#insertField');\n    document.getElementById('merge_data')?.addEventListener('click', onClickHandler);\n\n    const mentionObj: Mention = new Mention({\n        dataSource: mergeData,\n        target: '#mailMergeEditor',\n        mentionChar: '{{',\n        fields: { text: 'text' },\n        allowSpaces: true,\n        popupWidth: '250px',\n        popupHeight: '200px',\n        displayTemplate: '<span> {{${value}}} </span>',\n    });\n    mentionObj.appendTo('#mentionField');\n\n\n"}