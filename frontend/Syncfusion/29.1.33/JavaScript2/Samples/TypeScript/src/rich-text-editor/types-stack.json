{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-8 control-section\">\n    <div class=\"sample-container\">\n        <div class=\"default-section\">\n            <div id=\"defaultRTE\">\n                <p>The Rich Text Editor is a WYSIWYG (\"what you see is what you get\") editor useful to create and edit content and return the valid HTML markup or markdown of the content</p>\n        \n                <p><b>Toolbar</b></p>\n                    \n                <ol>\n                    <li>\n                        <p>The Toolbar contains commands to align the text, insert a link, insert an image, insert list, undo/redo operations, HTML view, etc </p>\n                    </li>\n                    <li>\n                        <p>The Toolbar is fully customizable </p>\n                    </li>\n                </ol>\n                    \n                <p><b>Links</b></p>\n                <ol>\n                    <li>\n                        <p>You can insert a hyperlink with its corresponding dialog </p> \n                    </li>\n                    <li>\n                        <p>Attach a hyperlink to the displayed text. </p>\n                    </li>\n                    <li>\n                        <p>Customize the quick toolbar based on the hyperlink </p>\n                    </li>\n                </ol>\n                    \n                <p><b>Validation</b></p>\n                <ul>\n                    <li>\n                        <p>The editorâ€™s content can be validated on form submission by applying validation rules and validation message</p>\n                    </li>\n                </ul>\n                    \n                <p><b>Locale.</b></p><p></p>\n                <ul>\n                    <li>\n                        <p>The editor provides an option to localize its static strings to adapt the editor to a local language.</p>\n                    </li>\n                </ul>\n                    \n                <p><b>Image.</b></p><p></p>\n                <ol>\n                    <li>\n                        <p>Allows you to insert images from an online source as well as the local computer </p>\n                    </li>\n                    <li>\n                        <p>You can upload an image </p>\n                    </li>\n                    <li>\n                        <p>Provides an option to customize the quick toolbar for an image </p>\n                    </li>\n                </ol>\n                <img alt=\"Logo\" style=\"width:300px\" src=\"//npmci.syncfusion.com/development/demos/src/rich-text-editor/images/RTEImage-Feather.png\">\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section\">\n    <div id=\"property\" title=\"Properties\">\n        <table id=\"property\" title=\"Properties\">\n            <tbody>\n                <tr>\n                    <td>\n                        <div style=\"width: 200px\">\n                            <select id=\"types\" class=\"form-control\">\n                            <option value=\"1\">Expand</option>\n                            <option value=\"2\">Multi Row</option>\n                            <option value=\"3\">Scrollable</option>\n                        </select>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <div>\n                            <input type=\"checkbox\" id=\"float\" checked=\"false\">\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n\n\n\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-filemanager\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-richtexteditor\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-icons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}/**\n * Rich Text Editor expand toolbar sample\n */\nimport { RichTextEditor, Toolbar, Link, Image, ToolbarType, HtmlEditor, QuickToolbar, EmojiPicker, PasteCleanup, Audio ,Video, FormatPainter, Table } from '@syncfusion/ej2-richtexteditor';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { CheckBox, ChangeEventArgs } from '@syncfusion/ej2-buttons';\nimport { addClass, removeClass, Browser } from '@syncfusion/ej2-base';\nRichTextEditor.Inject(Toolbar, Link, Image, HtmlEditor, QuickToolbar, EmojiPicker, PasteCleanup, Audio ,Video, FormatPainter, Table);\n\n\n    let options: Object = {\n        floatingToolbarOffset: 0,\n        toolbarSettings: {\n            type: ToolbarType.Expand,\n            enableFloating: false,\n            items: ['Bold', 'Italic', 'Underline', 'StrikeThrough', 'SuperScript', 'SubScript', '|',\n                'FontName', 'FontSize', 'FontColor', 'BackgroundColor', '|',\n                'LowerCase', 'UpperCase', '|',\n                'Formats', 'Alignments', 'Blockquote', '|', 'NumberFormatList', 'BulletFormatList', '|',\n                'Outdent', 'Indent', '|', 'CreateLink', 'Image', 'Video', 'Audio', 'CreateTable', '|', 'FormatPainter', 'ClearFormat',\n                '|', 'EmojiPicker', 'Print', '|',\n                'SourceCode', 'FullScreen', '|', 'Undo', 'Redo']\n        },\n        actionBegin: handleFullScreen,\n        actionComplete: actionCompleteHandler\n    };\n\n    let defaultRTE: RichTextEditor = new RichTextEditor(options);\n    defaultRTE.appendTo('#defaultRTE');\n\n    let dropdownInstance: DropDownList = new DropDownList({\n        placeholder: 'Types',\n        floatLabelType: 'Auto',\n        change: onChange,\n        index: 0\n    });\n    dropdownInstance.appendTo('#types');\n\n    let float: CheckBox = new CheckBox({\n        // set false for enable the checked state at initial rendering\n        checked: false,\n        label: 'Enable Floating',\n        // bind change event\n        change: (args: ChangeEventArgs) => {\n            defaultRTE.toolbarSettings.enableFloating = (args as any).checked;\n            defaultRTE.dataBind();\n        }\n    });\n    float.appendTo('#float');\n\n    function onChange(): void {\n        /*Apply selected format to the component*/\n        switch (dropdownInstance.value) {\n            case '1':\n                defaultRTE.toolbarSettings.type = ToolbarType.Expand;\n                defaultRTE.toolbarSettings.enableFloating = float.checked;\n                break;\n            case '2':\n                defaultRTE.toolbarSettings.type = ToolbarType.MultiRow;\n                defaultRTE.toolbarSettings.enableFloating = float.checked;\n                break;\n            case '3':\n                defaultRTE.toolbarSettings.type = ToolbarType.Scrollable;\n                defaultRTE.toolbarSettings.enableFloating = float.checked;\n                break;\n        }\n        defaultRTE.dataBind();\n    }\n    function handleFullScreen(e: any): void {\n        let sbCntEle: HTMLElement = document.querySelector('.sb-content.e-view');\n        let sbHdrEle: HTMLElement = document.querySelector('.sb-header.e-view');\n        let leftBar: HTMLElement;\n        let transformElement: HTMLElement;\n        if (Browser.isDevice) {\n            leftBar = document.querySelector('#right-sidebar');\n            transformElement = document.querySelector('.sample-browser.e-view.e-content-animation');\n        } else {\n            leftBar = document.querySelector('#left-sidebar');\n            transformElement = document.querySelector('#right-pane');\n        }\n        if (e.targetItem === 'Maximize') {\n            if (Browser.isDevice && Browser.isIos) {\n                addClass([sbCntEle, sbHdrEle], ['hide-header']);\n            }\n            addClass([leftBar], ['e-close']);\n            removeClass([leftBar], ['e-open']);\n            if (!Browser.isDevice) { transformElement.style.marginLeft = '0px'; }\n            transformElement.style.transform = 'inherit';\n        } else if (e.targetItem === 'Minimize') {\n            if (Browser.isDevice && Browser.isIos) {\n                removeClass([sbCntEle, sbHdrEle], ['hide-header']);\n            }\n            removeClass([leftBar], ['e-close']);\n            if (!Browser.isDevice) {\n            addClass([leftBar], ['e-open']);\n            transformElement.style.marginLeft = leftBar.offsetWidth + 'px'; }\n            transformElement.style.transform = 'translateX(0px)';\n        }\n    }\n\n    function actionCompleteHandler(): void {\n    setTimeout(() => {  this.toolbarModule.refreshToolbarOverflow();       }, 400);\n    }\n\n"}