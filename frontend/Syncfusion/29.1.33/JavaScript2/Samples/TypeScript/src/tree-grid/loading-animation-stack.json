{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-9 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"TreeGrid\">\n        </div>\n    </div>\n</div>\n\n\n\n<div class=\"col-lg-3 property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n        <tbody><tr style=\"height: 50px\">\n            <td>\n                <div>Indicator Type</div>\n            </td>\n            <td style=\"width: 70%;padding-right: 10px\">\n                <div id=\"columnddl\">\n                    <input type=\"text\" tabindex=\"1\" id=\"animation\">\n                </div>\n            </td>\n        </tr>\n    </tbody></table>\n</div>\n\n\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-grids\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-treegrid\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { TreeGrid, Page, Selection, Sort } from '@syncfusion/ej2-treegrid';\r\nimport { DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\r\nimport { DropDownList, ChangeEventArgs } from '@syncfusion/ej2-dropdowns';\r\n\r\nTreeGrid.Inject(Page, Selection, Sort);\r\n\r\n/**\r\n * Loading animation sample\r\n */\r\n\r\n    let loadingeffects: { [key: string]: Object }[] = [\r\n        { id: 'Shimmer', type: 'Shimmer' },\r\n        { id: 'Spinner', type: 'Spinner' }\r\n    ];\r\n    let data = new DataManager({\r\n        url: 'http://localhost:62728/api/SelfReferenceData',\r\n        adaptor: new WebApiAdaptor(),\r\n        crossDomain: true\r\n    });\r\n    let treegrid: TreeGrid = new TreeGrid(\r\n        {\r\n            dataSource: data,\r\n            hasChildMapping: 'isParent',\r\n            idMapping: 'TaskID',\r\n            parentIdMapping: 'ParentItem',\r\n            height: 400,\r\n            treeColumnIndex: 1,\r\n            allowPaging: true,\r\n            allowSorting: true,\r\n            loadingIndicator: { indicatorType: 'Shimmer' },\r\n            columns: [\r\n                { field: 'TaskID', headerText: 'Task ID', width: 120, textAlign: 'Right' },\r\n                { field: 'TaskName', headerText: 'Task Name', width: 240, textAlign: 'Left' },\r\n                { field: 'StartDate', headerText: 'Start Date', width: 140, textAlign: 'Right', type: 'date', format: 'yMd' },\r\n                { field: 'Duration', headerText: 'Duration', width: 130, textAlign: 'Right' },\r\n                { field: 'Progress', headerText: 'Progress', width: 130 },\r\n            ],\r\n            pageSettings: { pageCount: 3 }\r\n        });\r\n    treegrid.appendTo('#TreeGrid');\r\n\r\n    let dropDownFilterType: DropDownList = new DropDownList({\r\n        dataSource: loadingeffects,\r\n        fields: { text: 'type', value: 'id' },\r\n        width: '125px',\r\n        value: 'Shimmer',\r\n        change: (e: ChangeEventArgs) => {\r\n            if (dropDownFilterType.value === 'Shimmer') {\r\n                treegrid.loadingIndicator.indicatorType = 'Shimmer';\r\n            } else {\r\n                treegrid.loadingIndicator.indicatorType = 'Spinner';\r\n            }\r\n            treegrid.refresh();\r\n        }\r\n    });\r\n    dropDownFilterType.appendTo('#animation');\r\n\r\n"}