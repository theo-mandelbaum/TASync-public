{"treemap-data/economics.ts":"// custom code start\n//tslint:disable\n// custom code end\nexport let economicsData: Object[] =[\n    {State:\"United States\", GDP:17946, percentage:11.08, Rank:1},\t \n    {State:\"China\", GDP:10866, percentage: 28.42, Rank:2},\t \n    {State:\"Japan\", GDP:4123, percentage:-30.78, Rank:3},\t \n    {State:\"Germany\", GDP:3355, percentage:-5.19, Rank:4},\t \n    {State:\"United Kingdom\", GDP:2848, percentage:8.28, Rank:5},\t \n    {State:\"France\", GDP:2421, percentage:-9.69, Rank:6},\t \n    {State:\"India\", GDP:2073, percentage:13.65, Rank:7},\t \n    {State:\"Italy\", GDP:1814, percentage:-12.45, Rank:8},\t \n    {State:\"Brazil\", GDP:1774, percentage:-27.88, Rank:9},\t \n    {State:\"Canada\", GDP:1550, percentage:-15.02, Rank:10}\t \n];","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n\n<main>\n    <div class=\"col-lg-9 control-section\">\n        <div id=\"layout-container\" align=\"center\"></div>\n        <!-- source link -->\n        <div style=\"float: right; margin-right: 10px;\">Source:\n            <a href=\" https://www.reinisfischer.com/top-10-largest-economies-world-gdp-nominal-2015\" target=\"_blank\">www.reinisfischer.com</a>\n        </div>\n    </div>\n    <!-- property panel -->\n    <div class=\"col-lg-3 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%; margin-left: -10px;\" role=\"none\">\n            <colgroup>\n                <col span=\"1\" style=\"width: 50%;\">\n                <col span=\"1\" style=\"width: 50%;\">\n           </colgroup> \n           <tbody>\n           <tr style=\"height: 50px\">\n                    <td>\n                        <div>Layout Type</div>\n                    </td>\n                    <td>\n                        <div>\n                        <select name=\"selectIndex\" autocomplete=\"off\" id=\"layoutMode\">\n                            <option value=\"Squarified\" selected=\"\">Squarified</option>\n                            <option value=\"SliceAndDiceHorizontal\">Horizontal</option>\n                            <option value=\"SliceAndDiceVertical\">Vertical</option>\n                            <option value=\"SliceAndDiceAuto\">Auto</option>\n                        </select>\n                        </div>\n                    </td>\n                </tr>\n                <tr style=\"height: 50px\">\n                    <td>\n                        <div>Render Direction</div>\n                    </td>\n                    <td>\n                        <div>\n                            <select name=\"selectIndex\" id=\"highlightMode\">\n                                <option value=\"TopLeftBottomRight\" selected=\"\">TopLeftBottomRight</option>\n                                <option value=\"TopRightBottomLeft\">TopRightBottomLeft</option>\n                                <option value=\"BottomLeftTopRight\">BottomLeftTopRight</option>\n                                <option value=\"BottomRightTopLeft\">BottomRightTopLeft</option>\n                            </select>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    \n    \n    \n    \n</main>\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-compression\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-file-utils\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-treemap\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-icons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}/**\n * layout sample.\n */\n// custom code start\n\n//tslint:disable\n// custom code end\nimport { TreeMap, TreeMapTooltip, LayoutMode, TreeMapAjax, RenderingMode } from '@syncfusion/ej2-treemap';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { economicsData } from './treemap-data/economics';\nTreeMap.Inject(TreeMapTooltip);\nimport { TreeMapTheme, ILoadEventArgs } from '@syncfusion/ej2-treemap';\nimport { EmitType } from '@syncfusion/ej2-base';\n//tslint:disable\n\n    // custom code start\n    \n    // custom code end\n    let treemapload: EmitType<ILoadEventArgs> = (args: ILoadEventArgs) => {\n        // custom code start\n        let theme: string = location.hash.split('/')[1];\n        theme = theme ? theme : 'Material';\n        args.treemap.theme = <TreeMapTheme>((theme.charAt(0).toUpperCase() +\n        theme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i,Â 'Contrast').replace(/5.3/i, '5'));\n        // custom code end\n    };\n    let treemap: TreeMap = new TreeMap({\n        load: treemapload,\n        // To config title for treemap \n        titleSettings: {\n            text: 'Top 10 countries by GDP Nominal - 2015',\n            textStyle: {size: '15px', fontFamily: 'Segoe UI'}\n        },\n        dataSource: economicsData,\n        weightValuePath: 'GDP',\n        // To config tooltip for treemap \n        tooltipSettings: {\n            visible: true,\n            format: '${State}<br>Rank : ${Rank}',\n            textStyle: {\n                fontFamily: 'Segoe UI'\n            }\n\n        },\n        rangeColorValuePath: 'GDP',\n        // To config leafitem customization for treemap\n        leafItemSettings: {\n            labelPath: 'State',\n            labelFormat: '${State}<br>$${GDP} Trillion<br>(${percentage} %)',\n            labelStyle: {\n                color: '#000000',\n                fontFamily: 'Segoe UI'\n            },\n            border: {\n                color: '#000000',\n                width: 0.5\n            },\n            colorMapping: [\n                {\n                    from: 1550,\n                    to: 17946,\n                    color: '#9cbb59',\n                    minOpacity: 0.7,\n                    maxOpacity: 1,\n                }\n            ]\n        },\n    });\n    treemap.appendTo('#layout-container');\n    // Treemap layout types\n    let layoutMode: DropDownList = new DropDownList({\n        index: 0,\n        placeholder: 'Select layoutMode type',\n        width: '100%',\n        change: () => {\n            treemap.layoutType = <LayoutMode>layoutMode.value;\n            treemap.refresh();\n        }\n    });\n    layoutMode.appendTo('#layoutMode');\n    // Selection type (TopLeftBottomRight, TopRightBottomLeft, BottomLeftTopRight, BottomRightTopLeft)\n    let highlightMode: DropDownList = new DropDownList({\n        index: 0,\n        placeholder: 'Select Rendering Direction',\n        width: '100%',\n        change: () => {\n            treemap.renderDirection = <RenderingMode>highlightMode.value;\n            treemap.refresh();\n        }\n    });\n    highlightMode.appendTo('#highlightMode');\n\n"}