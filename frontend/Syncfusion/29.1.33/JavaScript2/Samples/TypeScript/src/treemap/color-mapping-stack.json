{"treemap-data/color.ts":"// custom code start\n//tslint:disable\n// custom code end\nexport let colorMappingData: object[] = [\n    {Name: \"Greenland\", Area: 2130800, Population: 56483, Location: \"North America\" },\n    {Name: \"New Guinea\", Area:785753, Population: 1306940, Location: \"Oceania\"},\n    {Name: \"Borneo\", Area:743330, Population: 19804064, Location:\"Asia\" },\n    {Name: \"Madagascar\", Area: 587713, Population: 22005222, Location: \"Africa\"},\n    {Name: \"Baffin Island\", Area:507451, Population:10745, Location: \"North America\" },\n    {Name: \"Sumatra\", Area: 443066, Population:50000000, Location: \"Asia\"},\n    {Name: \"Honshu\", Area:225800, Population: 103000000, Location: \"Asia\"},\n    {Name: \"Victoria Island\", Area:217291, Population: 1875, Location: \"North America\"},\n    {Name: \"Great Britain\", Area:209331, Population:60800000, Location:\"Europe\" },\n    {Name: \"Ellesmere Island\", Area: 183965, Population: 146, Location: \"North America\"}\n]","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    \n    <div class=\"col-lg-9 control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"default-container\"></div>\n        </div>\n    </div>\n    <!-- property panel -->\n    <div class=\"col-lg-3 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%;\" role=\"none\">\n            <colgroup>\n                <col span=\"1\" style=\"width: 50%;\">\n                <col span=\"1\" style=\"width: 50%;\">\n             </colgroup>\n             <tbody>\n             <tr style=\"height: 50px\">\n                    <td>\n                        <div class=\"property-text\" style=\"width: 92%;\">Color Mapping Type</div>\n                    </td>\n                    <td>\n                        <div class=\"property-text\">\n                        <select autocomplete=\"off\" id=\"colorMapping\">\n                            <option value=\"RangeColorMapping\" selected=\"\">Range</option>\n                            <option value=\"EqualColorMapping\">Equal</option>\n                            <option value=\"DesaturationColorMapping\">Desaturation</option>\n                        </select>\n                    </div>\n                    </td>\n                </tr>\n                <tr style=\"height: 50px\">\n                    <td>\n                        <div id=\"text1\" class=\"property-text\" style=\"display: none; width: 99%;\"> Change Opacity</div>\n                    </td>\n                    <td>\n                        <div id=\"input1\" class=\"property-text\" style=\"display: none; margin-top: -10px; margin-left: -10px\">\n                            <input type=\"checkbox\" id=\"opacity\">\n                        </div>\n                    </td>\n                </tr>\n                <tr style=\"height: 50px\">\n                    <td>\n                        <div id=\"text2\" style=\"display: none;\" class=\"property-text\">Min Opacity</div>\n                    </td>\n                    <td>\n                        <div id=\"input2\" style=\"display: none;\" class=\"property-text\">\n                            <input type=\"range\" id=\"minopacity\" step=\"0.1\" value=\"0.5\" min=\"0\" max=\"1\" style=\"width:100%;\">\n                        </div>\n                    </td>\n                </tr>\n                <tr style=\"height: 50px\">\n                    <td>\n                        <div class=\"property-text\" id=\"text3\" style=\"display: none;\">Max Opacity</div>\n                    </td>\n                    <td>\n                        <div id=\"input3\" class=\"property-text\" style=\"display: none;\">\n                            <input type=\"range\" id=\"maxopacity\" step=\"0.1\" value=\"1\" min=\"0\" max=\"1\" style=\"width:100%;\">\n                        </div>\n                    </td>\n                </tr>\n                </tbody>\n        </table>\n    </div>\n    <!-- tooltip template -->\n    <div id=\"template\" style=\"display:none\">\n        <div class=\"toolback\">\n                    <div class=\"listing2\">\n                        <center>\n                            ${Name}                                            \n                        </center>\n                    </div>\n                    <hr style=\"margin-top: 2px;margin-bottom:5px;border:0.5px solid #DDDDDD\">\n                    <div>\n                        <center>  <span class=\"listing1\">Area : </span><span class=\"listing2\">${Area}</span></center>\n                    </div> \n                    <div>\n                        <center>  <span class=\"listing1\">Continent : </span><span style=\"display:inline-block;\" class=\"listing2\">${Location}</span> </center>\n                    </div>\n        </div>\n    </div>\n    \n    \n        <style>\n            .toolback {\n                border-radius: 4px;\n                border: 1px #abb9c6;\n                opacity: 90%;\n                background: rgba(53, 63, 76, 0.90);\n                box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.40);\n                padding-bottom: 10px;\n                padding-top: 10px;\n                padding-left: 10px;\n                padding-right: 10px;\n                width: 170px;\n            }\n            .listing1 {\n                 font-size:13px;\n                 color:#cccccc\n            }\n            .listing2 {\n                 font-size:13px;\n                 color:#ffffff;\n                 font-weight: 500;\n            } \n            div.property-text {\n                padding-left: 0px; padding-top: 0px;\n            }\n\n            .e-view.fluent2 #property .e-checkbox-wrapper .e-icons, .e-view.fluent2-dark #property .e-checkbox-wrapper .e-icons {\n                margin-left: 0px;\n            }\n            .fluent2-highcontrast #property .e-checkbox-wrapper .e-icons {\n                margin-left: 0px;\n            }\n         </style>\n</main>\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-compression\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-file-utils\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-treemap\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-icons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}/**\n * Color Mapping sample\n */\n// custom code start\n//tslint:disable:max-func-body-length\n/* tslint:disable:no-string-literal */\n\n// custom code end\nimport { TreeMap, TreeMapTooltip, TreeMapLegend, TreeMapAjax } from '@syncfusion/ej2-treemap';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { CheckBox, ChangeEventArgs as CheckBoxChangeEvents } from '@syncfusion/ej2-buttons';\nTreeMap.Inject(TreeMapTooltip, TreeMapLegend);\nimport { TreeMapTheme, ILoadEventArgs } from '@syncfusion/ej2-treemap';\nimport { colorMappingData } from './treemap-data/color';\nimport { EmitType } from '@syncfusion/ej2-base';\nlet prevTime: Date; let curTime: Date;\n\n    // custom code start\n    \n    // custom code end\n    let treemapload: EmitType<ILoadEventArgs> = (args: ILoadEventArgs) => {\n        // custom code start\n        let theme: string = location.hash.split('/')[1];\n        theme = theme ? theme : 'Material';\n        args.treemap.theme = <TreeMapTheme>((theme.charAt(0).toUpperCase() +\n            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5'));\n        // custom code end\n    };\n    let treemap: TreeMap = new TreeMap({\n        load: treemapload,\n        titleSettings: {\n            text: 'Top 10 largest islands in the World',\n            textStyle: { size: '15px', fontFamily: 'Segoe UI' }\n        },\n        format: 'n',\n        useGroupingSeparator: true,\n        rangeColorValuePath: 'Area',\n        dataSource: colorMappingData,\n        legendSettings: {\n            visible: true,\n            position: 'Bottom',\n            mode: 'Interactive',\n            height: '10',\n            title: {\n                text: 'Area'\n            },\n            textStyle: {\n                fontFamily: 'Segoe UI'\n            },\n            titleStyle: {\n                fontFamily: 'Segoe UI'\n            }\n        },\n        tooltipSettings: {\n            visible: true,\n            format: 'Name: ${Name}<br>Area: ${Area} per square kms<br>Continent: ${Location}',\n            opacity: 0.8,\n            textStyle: {\n                fontFamily: 'Segoe UI'\n            }\n        },\n        weightValuePath: 'Area',\n        leafItemSettings: {\n            labelPath: 'Name',\n            border: { color: 'white', width: 0.5 },\n            labelStyle: {\n                fontFamily: 'Segoe UI'\n            },\n            colorMapping: [\n                { from: 100000, to: 250000, label: '0.1M - 0.25M', color: '#547C84' },\n                { from: 250000, to: 550000, label: '0.25M - 0.55M', color: '#37AFAB' },\n                { from: 550000, to: 750000, label: '0.55M - 0.75M', color: '#A4D6AD' },\n                { from: 750000, to: 2250000, label: '0.75M - 2M', color: '#DEEBAE' },\n                { to: null, from: null,  color: 'null' },\n                { to: null, from: null,  color: 'null' },\n            ]\n        },\n    });\n    treemap.appendTo('#default-container');\n    let opacity: EmitType<CheckBoxChangeEvents>;\n    let highlightCheckBox: CheckBox = new CheckBox(\n    {\n        change: opacity, checked: false\n    },\n    '#opacity');\n    document.getElementById('minopacity').onpointermove = document.getElementById('minopacity').ontouchmove =\n    document.getElementById('minopacity').onchange = () => {\n        if (highlightCheckBox.checked && !highlightCheckBox.disabled) {\n            let slider: HTMLInputElement = document.getElementById('minopacity') as HTMLInputElement;\n            let minOpacity: number = parseFloat(slider.value);\n            treemap.leafItemSettings.colorMapping[0].minOpacity = minOpacity;\n            treemap.leafItemSettings.colorMapping[1].minOpacity = minOpacity;\n            treemap.refresh();\n        }\n    };\n    document.getElementById('maxopacity').onpointermove = document.getElementById('maxopacity').ontouchmove =\n    document.getElementById('maxopacity').onchange = () => {\n        if (highlightCheckBox.checked && !highlightCheckBox.disabled) {\n            let slider: HTMLInputElement = document.getElementById('maxopacity') as HTMLInputElement;\n            let maxOpacity: number = parseFloat(slider.value);\n            treemap.leafItemSettings.colorMapping[0].maxOpacity = maxOpacity;\n            treemap.leafItemSettings.colorMapping[1].maxOpacity = maxOpacity;\n            treemap.refresh();\n        }\n    };\n    highlightCheckBox.change = opacity = (e: CheckBoxChangeEvents) => {\n        let minOpacity: HTMLInputElement = document.getElementById('minopacity') as HTMLInputElement;\n        let maxOpacity: HTMLInputElement = document.getElementById('maxopacity') as HTMLInputElement;\n        if (e.checked) {\n            document.getElementById('text2').style.display = 'block';\n            document.getElementById('input2').style.display = 'block';\n            document.getElementById('text3').style.display = 'block';\n            document.getElementById('input3').style.display = 'block';\n            treemap.leafItemSettings.colorMapping[0].minOpacity = parseFloat(minOpacity.value);\n            treemap.leafItemSettings.colorMapping[0].maxOpacity = parseFloat(maxOpacity.value);\n            treemap.leafItemSettings.colorMapping[1].minOpacity = parseFloat(minOpacity.value);\n            treemap.leafItemSettings.colorMapping[1].maxOpacity = parseFloat(maxOpacity.value);\n            minOpacity.disabled = false;\n            maxOpacity.disabled = false;\n        } else {\n            document.getElementById('text2').style.display = 'none';\n            document.getElementById('input2').style.display = 'none';\n            document.getElementById('text3').style.display = 'none';\n            document.getElementById('input3').style.display = 'none';\n            treemap.leafItemSettings.colorMapping[0].minOpacity = null;\n            treemap.leafItemSettings.colorMapping[0].maxOpacity = null;\n            treemap.leafItemSettings.colorMapping[1].minOpacity = null;\n            treemap.leafItemSettings.colorMapping[1].maxOpacity = null;\n            minOpacity.disabled = true;\n            maxOpacity.disabled = true;\n        }\n        treemap.refresh();\n    };\n    let sampleValue: DropDownList = new DropDownList({\n        index: 0,\n        placeholder: 'Range ColorMaping',\n        width: '100%',\n        change: () => {\n            let element: string = sampleValue.value.toString();\n            if (element === 'RangeColorMapping') {\n                document.getElementById('text1').style.display = 'none';\n                document.getElementById('input1').style.display = 'none';\n                document.getElementById('text2').style.display = 'none';\n                document.getElementById('input2').style.display = 'none';\n                document.getElementById('text3').style.display = 'none';\n                document.getElementById('input3').style.display = 'none';\n                treemap.rangeColorValuePath = 'Area';\n                treemap.leafItemSettings.colorMapping[2].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[2].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[1].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[1].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[4].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[4].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[3].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[3].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[5].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[5].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[0].from = 100000;\n                treemap.leafItemSettings.colorMapping[0].to = 250000;\n                treemap.leafItemSettings.colorMapping[0].value = null;\n                treemap.leafItemSettings.colorMapping[0].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[0].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[1].value = null;\n                treemap.leafItemSettings.colorMapping[2].value = null;\n                treemap.leafItemSettings.colorMapping[0].label = '0.1M - 0.25M';\n                treemap.leafItemSettings.colorMapping[0].color = '#547C84';\n                treemap.leafItemSettings.colorMapping[1].from = 250000;\n                treemap.leafItemSettings.colorMapping[1].to = 500000;\n                treemap.leafItemSettings.colorMapping[1].label = '0.25M - 0.50M';\n                treemap.leafItemSettings.colorMapping[1].color = '#37AFAB';\n                treemap.leafItemSettings.colorMapping[2].from = 500000;\n                treemap.leafItemSettings.colorMapping[2].to = 750000;\n                treemap.leafItemSettings.colorMapping[2].label = '0.5M - 0.75M';\n                treemap.leafItemSettings.colorMapping[2].color = '#A4D6AD';\n                treemap.leafItemSettings.colorMapping[2].value = null;\n                treemap.leafItemSettings.colorMapping[3].from = 750000;\n                treemap.leafItemSettings.colorMapping[3].to = 2200000;\n                treemap.leafItemSettings.colorMapping[3].label = '0.75M - 2M';\n                treemap.leafItemSettings.colorMapping[3].color = '#DEEBAE';\n                treemap.leafItemSettings.colorMapping[4].from = null;\n                treemap.leafItemSettings.colorMapping[3].value = null;\n                treemap.leafItemSettings.colorMapping[4].to = null;\n                treemap.leafItemSettings.colorMapping[4].label = null;\n                treemap.leafItemSettings.colorMapping[4].value = null;\n                treemap.leafItemSettings.colorMapping[4].color = null;\n                treemap.leafItemSettings.colorMapping[5].to = null;\n                treemap.leafItemSettings.colorMapping[5].label = null;\n                treemap.leafItemSettings.colorMapping[5].value = null;\n                treemap.leafItemSettings.colorMapping[5].color = null;\n                treemap.leafItemSettings.colorMapping[5].from = null;\n                treemap.legendSettings.title.text = 'Area';\n                treemap.refresh();\n            } else if (element === 'EqualColorMapping') {\n                document.getElementById('text1').style.display = 'none';\n                document.getElementById('input1').style.display = 'none';\n                document.getElementById('text2').style.display = 'none';\n                document.getElementById('input2').style.display = 'none';\n                document.getElementById('text3').style.display = 'none';\n                document.getElementById('input3').style.display = 'none';\n                treemap.rangeColorValuePath = null;\n                treemap.leafItemSettings.colorMapping[0].from = null;\n                treemap.leafItemSettings.colorMapping[0].to = null;\n                treemap.leafItemSettings.colorMapping[0].label = null;\n                treemap.leafItemSettings.colorMapping[1].label = null;\n                treemap.leafItemSettings.colorMapping[2].label = null;\n                treemap.leafItemSettings.colorMapping[3].label = null;\n                treemap.leafItemSettings.colorMapping[4].label = null;\n                treemap.leafItemSettings.colorMapping[0].value = 'North America';\n                treemap.leafItemSettings.colorMapping[0].color = '#DEEBAE';\n                treemap.leafItemSettings.colorMapping[1].from = null;\n                treemap.leafItemSettings.colorMapping[1].to = null;\n                treemap.leafItemSettings.colorMapping[1].value = 'Oceania';\n                treemap.leafItemSettings.colorMapping[1].color = '#A4D6AD';\n                treemap.leafItemSettings.colorMapping[2].from = null;\n                treemap.leafItemSettings.colorMapping[2].to = null;\n                treemap.leafItemSettings.colorMapping[2].value = 'Asia';\n                treemap.leafItemSettings.colorMapping[2].color = '#37AFAB';\n                treemap.leafItemSettings.colorMapping[3].from = null;\n                treemap.leafItemSettings.colorMapping[3].to = null;\n                treemap.leafItemSettings.colorMapping[3].value = 'Africa';\n                treemap.leafItemSettings.colorMapping[3].color = '#547C84';\n                treemap.leafItemSettings.colorMapping[4].from = null;\n                treemap.leafItemSettings.colorMapping[4].to = null;\n                treemap.leafItemSettings.colorMapping[4].value = 'Europe';\n                treemap.leafItemSettings.colorMapping[4].color = '#CEBF93';\n                treemap.leafItemSettings.colorMapping[0].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[0].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[1].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[1].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[2].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[2].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[3].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[3].maxOpacity = null;\n                treemap.leafItemSettings.colorMapping[4].minOpacity = null;\n                treemap.leafItemSettings.colorMapping[4].maxOpacity = null;\n                treemap.equalColorValuePath = 'Location';\n                treemap.legendSettings.title.text = 'Continent';\n                treemap.refresh();\n            }else if (element === 'DesaturationColorMapping') {\n                document.getElementById('text1').style.display = 'block';\n                document.getElementById('input1').style.display = 'block';\n                treemap.rangeColorValuePath = 'Area';\n                treemap.equalColorValuePath = null;\n                let minOpacity: HTMLInputElement = document.getElementById('minopacity') as HTMLInputElement;\n                let maxOpacity: HTMLInputElement = document.getElementById('maxopacity') as HTMLInputElement;\n                treemap.leafItemSettings.colorMapping[2].from = null;\n                treemap.leafItemSettings.colorMapping[2].to = null;\n                treemap.leafItemSettings.colorMapping[1].from = null;\n                treemap.leafItemSettings.colorMapping[1].to = null;\n                treemap.leafItemSettings.colorMapping[1].label = null;\n                treemap.leafItemSettings.colorMapping[3].from = null;\n                treemap.leafItemSettings.colorMapping[3].to = null;\n                treemap.leafItemSettings.colorMapping[0].from = 100000;\n                treemap.leafItemSettings.colorMapping[0].to = 2230800;\n                treemap.leafItemSettings.colorMapping[0].label = '0.1M - 2M';\n                treemap.leafItemSettings.colorMapping[0].value = null;\n                treemap.leafItemSettings.colorMapping[1].value = null;\n                treemap.leafItemSettings.colorMapping[2].value = null;\n                treemap.leafItemSettings.colorMapping[3].value = null;\n                treemap.leafItemSettings.colorMapping[2].color = null;\n                treemap.leafItemSettings.colorMapping[1].color = null;\n                treemap.leafItemSettings.colorMapping[3].color = null;\n                treemap.leafItemSettings.colorMapping[0].color = ['#F0D6AD', '#19547B'];\n                if (highlightCheckBox.checked) {\n                    document.getElementById('text2').style.display = 'block';\n                    document.getElementById('input2').style.display = 'block';\n                    document.getElementById('text3').style.display = 'block';\n                    document.getElementById('input3').style.display = 'block';\n                    treemap.leafItemSettings.colorMapping[0].minOpacity = parseFloat(minOpacity.value);\n                    treemap.leafItemSettings.colorMapping[0].maxOpacity = parseFloat(maxOpacity.value);\n                } else {\n                    treemap.leafItemSettings.colorMapping[0].minOpacity = null;\n                    treemap.leafItemSettings.colorMapping[0].maxOpacity = null;\n                }\n                treemap.legendSettings.title.text = 'Area';\n                treemap.refresh();\n            }\n        }\n    });\n    sampleValue.appendTo('#colorMapping');\n"}