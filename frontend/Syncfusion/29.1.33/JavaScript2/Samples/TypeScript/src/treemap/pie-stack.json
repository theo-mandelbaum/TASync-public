{"treemap-data/continent-data.ts":"// custom code start\n//tslint:disable\n// custom code end\nexport let continentData: object[] = \n[\n    { Continent: \"Africa\", Gender: \"Male\", Population: 518636010, Id: \"AfricaMale\", PieHeight: \"90px\", PieWidth: \"90px\" },\n    { Continent: \"Africa\", Gender: \"Female\", Population: 519058499, Id: \"AfricaFemale\", PieHeight: \"90px\", PieWidth: \"90px\" },\n    { Continent: \"Asia\", Gender: \"Male\", Population: 2131947122, Id: \"AsiaMale\", PieHeight: \"160px\", PieWidth: \"160px\" },\n    { Continent: \"Asia\", Gender: \"Female\", Population: 2043385632, Id: \"AsiaFemale\", PieHeight: \"160px\", PieWidth: \"160px\" },\n    { Continent: \"Europe\", Gender: \"Male\", Population: 353542772, Id: \"EuropeMale\", PieHeight: \"90px\", PieWidth: \"90px\" },\n    { Continent: \"Europe\", Gender: \"Female\", Population: 380686199, Id: \"EuropeFemale\", PieHeight: \"90px\", PieWidth: \"90px\" },\n    { Continent: \"North America\", Gender: \"Male\", Population: 171213918, Id: \"NorthAmericaMale\", PieHeight: \"60px\", PieWidth: \"60px\" },\n    { Continent: \"North America\", Gender: \"Female\", Population: 176175064, Id: \"NorthAmericaFemale\", PieHeight: \"60px\", PieWidth: \"60px\" },\n    { Continent: \"Oceania\", Gender: \"Male\", Population: 176995465, Id: \"OceniaMale\", PieHeight: \"60px\", PieWidth: \"60px\" },\n    { Continent: \"Oceania\", Gender: \"Female\", Population: 174631245, Id: \"OceniaFemale\", PieHeight: \"60px\", PieWidth: \"60px\" },\n    { Continent: \"South America\", Gender: \"Male\", Population: 197745352, Id: \"SouthAmericaMale\", PieHeight: \"60px\", PieWidth: \"60px\" },\n    { Continent: \"South America\", Gender: \"Female\", Population: 190045352, Id: \"SouthAmericaFemale\", PieHeight: \"60px\", PieWidth: \"60px\" }\n]","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div class=\"control-section\">\n        <div id=\"container\" align:'center'=\"\"></div>\n    </div>\n    <!-- source link -->\n    <div style=\"float: right; margin-right: 10px;\">Source:\n        <a href=\" http://en.worldstat.info/Asia/\" target=\"_blank\">en.worldstat.info</a>\n    </div>\n    \n    \n    \n</main>\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-compression\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-file-utils\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-treemap\": \"*\",\n  \"@syncfusion/ej2-calendars\": \"*\",\n  \"@syncfusion/ej2-excel-export\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-charts\": \"*\",\n  \"@syncfusion/ej2-icons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}/**\n * Pie sample\n */\n// custom code start\n\n//tslint:disable\n// custom code end\nimport { TreeMap, ILoadedEventArgs, IResizeEventArgs, TreeMapTooltip, TreeMapAjax } from '@syncfusion/ej2-treemap';\nimport { AccumulationChart, PieSeries, DataLabel, AccumulationTooltip} from '@syncfusion/ej2-charts';\nimport { continentData } from './treemap-data/continent-data';\nAccumulationChart.Inject(AccumulationChart, PieSeries, DataLabel, AccumulationTooltip);\nTreeMap.Inject(TreeMapTooltip);\nimport { TreeMapTheme, ILoadEventArgs, ITreeMapTooltipRenderEventArgs } from '@syncfusion/ej2-treemap';\nimport { EmitType } from '@syncfusion/ej2-base';\nlet chartCollection: AccumulationChart[] = [];\nlet count: number = 0;\n\n    // custom code start\n    \n    let treemapload: EmitType<ILoadEventArgs> = (args: ILoadEventArgs) => {        \n        let theme: string = location.hash.split('/')[1];\n        theme = theme ? theme : 'Material';\n        args.treemap.theme = <TreeMapTheme>((theme.charAt(0).toUpperCase() +\n        theme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i,Â 'Contrast').replace(/5.3/i, '5'));\n    };\n    // custom code end\n    let treemap: TreeMap = new TreeMap({\n        // custom code start\n        load: treemapload,\n        // custom code end\n        // AccumulationChart rendering\n        loaded: (args: ILoadedEventArgs) => {\n            let template: Element = document.getElementById(args.treemap.element.id + '_Label_Template_Group');\n            if (template) {\n                for (let i: number = 0; i < template.childElementCount; i++) {\n                    AccumulationChartRender((<Element>template.childNodes[i].childNodes[0]).id);\n                }\n                count = 0;\n            }\n        },\n        // chart size changes\n        resize: (args: IResizeEventArgs) => {\n            for (let i: number = 0; i < chartCollection.length; i++) {\n                chartCollection[i].destroy();\n            }\n        },\n        //show the tooltip in Level one\n        tooltipRendering: (args: ITreeMapTooltipRenderEventArgs) => {\n            //tslint:disable-next-line\n            if (args.item['groupIndex'] !== 1 ) {\n                args.cancel = true;\n            }\n        },\n        tooltipSettings: {\n            visible: true,\n            format: ' ${Gender} : ${Population}',\n            textStyle: {\n                fontFamily: 'Segoe UI'\n            }\n        },\n        titleSettings: {\n            text: 'Population of the continents based on gender and age group - 2011',\n            textStyle: { size: '15px', fontFamily: 'Segoe UI' }\n        },\n        format: 'n', useGroupingSeparator: true,\n        dataSource: continentData,\n        weightValuePath: 'Population',\n        leafItemSettings: {\n            labelPath: 'Gender',\n            fill: '#A1317D',\n            showLabels: false,\n            labelStyle: {\n                fontFamily: 'Segoe UI'\n            },\n            border: { color: 'black', width: 0.5 },\n            labelFormat: '${Gender} : ${Population}',\n            templatePosition: 'Center',\n            labelTemplate: '<div style=\"height:{{:PieHeight}};width:{{:PieWidth}};\" id ={{:Id}}></div>',\n        },\n        levels: [\n            {\n                groupPath: 'Continent', fill: '#7E2361', border: { color: 'black', width: 1, },\n                headerAlignment: 'Center', groupGap: 0, headerStyle: { size: '14px'}\n            }\n        ]\n    });\n    treemap.appendTo('#container');\n\n\n// custom code start\n/* tslint:disable:no-string-literal */\n// custom code end\nexport function AccumulationChartRender(id: string): void {\n    let chartData: object = getData();\n    let dataSource: object[] = chartData['data'];\n    let name: string = chartData['name'];\n    let chart: AccumulationChart = new AccumulationChart({\n        background: 'transparent',\n        tooltip: {\n            enable: true,\n            format: '${point.x} : ${point.y}%'\n        },\n        legendSettings: {\n            visible: false\n        },\n        series: [\n            {\n                explode: true,\n                explodeIndex: 0,\n                explodeOffset: '20%',\n                name: name,\n                palettes: ['#1E1E1E', '#00BDAE', '#FFFFFF'],\n                dataSource: dataSource,\n                dataLabel: {\n                    visible: false\n                },\n                type: 'Pie',\n                xName: 'x',\n                yName: 'y'\n            }\n        ]\n    });\n    chart.appendTo('#' + id);\n    chartCollection.push(chart);\n}\n\nexport function getData(): object {\n    let dataSource: object[];\n    let dataName: string;\n    if (count === 0) {\n        dataSource = [\n            { 'x': '0-15 years', y: 40.8 }, { 'x': '15-64 years', y: 56.2 },\n            { 'x': 'Above 64 years', y: 3.0 }\n        ];\n        dataName = 'Asia';\n    } else if (count === 1) {\n        dataSource = [\n            { 'x': '0-15 years', y: 15.5 }, { 'x': '15-64 years', y: 12.9 },\n            { 'x': 'Above 64 years', y: 41.4 }\n        ];\n        dataName = 'Asia';\n    } else if (count === 2) {\n        dataSource = [\n            { 'x': '0-15 years', y: 25.1 }, { 'x': '15-64 years', y: 67.8 },\n            { 'x': 'Above 64 years', y: 7.1 }\n        ];\n        dataName = 'Africa';\n    } else if (count === 3) {\n        dataSource = [\n            { 'x': '0-15 years', y: 15.3 }, { 'x': '15-64 years', y: 68.4 },\n            { 'x': 'Above 64 years', y: 16.3 }\n        ];\n        dataName = 'Africa';\n    } else if (count === 4) {\n        dataSource = [\n            { 'x': '0-15 years', y: 22.8 }, { 'x': '15-64 years', y: 65.9 },\n            { 'x': 'Above 64 years', y: 11.4 }\n        ];\n        dataName = 'Europe';\n    } else if (count === 5) {\n        dataSource = [\n            { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n            { 'x': 'Above 64 years', y: 7.1 }\n        ];\n        dataName = 'Europe';\n    } else if (count === 6) {\n        dataSource = [\n            { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n            { 'x': 'Above 64 years', y: 7.1 }\n        ];\n        dataName = 'South America';\n    } else if (count === 7) {\n        dataSource = [\n            { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n            { 'x': 'Above 64 years', y: 7.1 }\n        ];\n        dataName = 'South America';\n    } else if (count === 8) {\n        dataSource = [\n            { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n            { 'x': 'Above 64 years', y: 7.1 }\n        ];\n        dataName = 'Oceania';\n    } else if (count === 9) {\n        dataSource = [\n            { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n            { 'x': 'Above 64 years', y: 7.1 }\n        ];\n        dataName = 'Oceania';\n    } else if (count === 10) {\n        dataSource = [\n            { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n            { 'x': 'Above 64 years', y: 7.1 }\n        ];\n        dataName = 'North America';\n    } else if (count === 11) {\n        dataSource = [\n            { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n            { 'x': 'Above 64 years', y: 7.1 }\n        ];\n        dataName = 'North America';\n    } else if (count === 12) {\n        dataSource = [\n            { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n            { 'x': 'Above 64 years', y: 7.1 }\n        ];\n        dataName = 'South America';\n    }\n    count++;\n    return new Object({ name: dataName, data: dataSource });\n}\n"}