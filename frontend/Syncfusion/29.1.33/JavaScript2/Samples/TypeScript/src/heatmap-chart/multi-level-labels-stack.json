{"multi-level-label-data.json":"\n{\n    \"multiLevelLabelData\": [\n        [52, 65, 67, 45, 37, 52,32, 76, 60, 64, 82, 91],\n        [68, 52, 63, 51, 30, 51,51, 81, 70, 60, 88, 80],\n        [60, 50, 42, 53, 66, 70,41, 69, 76, 74, 86, 97],\n        [66, 64, 46, 40, 47, 41, 45, 76, 83, 69, 92,84],\n        [65, 42, 58, 32, 36, 44,49, 79, 83, 69, 83, 93],\n        [54, 46, 61, 46, 40, 39,41, 69, 61, 84, 84, 87],\n        [48, 46, 61, 47, 49, 41,41, 67, 78, 83, 98, 87],\n        [69, 52, 41, 44, 41, 52,46, 71, 63, 84, 83, 91],\n        [50, 59, 44, 43, 27, 42,26, 64, 76, 65, 81, 86],\n        [47, 49, 66, 53, 50, 34,31, 79, 78, 79, 89, 95],\n        [61, 40, 62, 26, 34, 54,56, 74, 83, 78, 95, 98]\n       ]\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div class=\"control-section\">\n        <div id=\"container\"> </div>\n    </div>\n    \n    \n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-compression\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-file-utils\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-heatmap\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { HeatMap, Tooltip, ILoadedEventArgs, ICellEventArgs, HeatMapTheme, ITooltipEventArgs } from '@syncfusion/ej2-heatmap';\nimport * as data from './multi-level-label-data.json';\nHeatMap.Inject(Tooltip);\n// custom code start\n\n\n// custom code end\n\n    let heatmap: HeatMap = new HeatMap({\n        titleSettings: {\n            text: 'Product wise Monthly sales revenue for a e-commerce website',\n            textStyle: {\n                size: '15px', fontWeight: '500', fontStyle: 'Normal', fontFamily: 'inherit'\n            }\n        },\n        xAxis: {\n            labels: ['Laptop', 'Mobile', 'Gaming', 'Cosmetics', 'Fragrance', 'Watches', 'Handbags', 'Apparel',\n                'Kitchenware', 'Furniture', 'Home Decor'],\n            border: {\n                width: 1,\n                type: 'Rectangle',\n                color: '#a19d9d'\n            },\n            textStyle: {\n                color: 'black',\n                fontFamily: 'inherit'\n            },\n            multiLevelLabels: [\n                {\n                    border: { type: 'Rectangle', color: '#a19d9d' },\n                    textStyle: {\n                        color: 'black',\n                        fontWeight: 'Bold',\n                        fontFamily: 'inherit'\n                    },\n                    categories: [\n                        { start: 0, end: 2, text: 'Electronics', },\n                        { start: 3, end: 4, text: 'Beauty and personal care', },\n                        { start: 5, end: 7, text: 'Fashion', },\n                        { start: 8, end: 10, text: 'Household', },\n                    ]\n                },\n            ]\n        },\n        yAxis: {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            border: {\n                width: 0\n            },\n            textStyle: {\n                color: 'black',\n                fontFamily: 'inherit'\n            },\n            isInversed: true,\n            multiLevelLabels: [\n                {\n                    border: { type: 'Brace', color: '#a19d9d' },\n                    textStyle: {\n                        color: 'black',\n                        fontWeight: 'Bold',\n                        fontFamily: 'inherit'\n                    },\n                    categories: [\n                        { start: 0, end: 2, text: 'Q1' },\n                        { start: 3, end: 5, text: 'Q2' },\n                        { start: 6, end: 8, text: 'Q3' },\n                        { start: 9, end: 11, text: 'Q4' }\n                    ]\n                },\n            ]\n        }, paletteSettings: {\n            palette: [{ color: '#F0ADCE' },\n            { color: '#19307B' }\n            ]\n        },\n        legendSettings: {\n            visible: false\n        },\n        cellRender: (args: ICellEventArgs) => {\n            args.displayText = '$ ' + (args.value as number / 10) + 'K';\n        },\n        tooltipRender: (args: ITooltipEventArgs) => {\n            args.content = [args.xLabel + ' | ' + args.yLabel + ' : $ ' + (args.value as number / 10) + 'K'];\n        },\n        tooltipSettings:{\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        cellSettings: {\n            border: {\n                width: 0\n            },\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        dataSource: (data as any).multiLevelLabelData,\n        load: (args: ILoadedEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.heatmap.theme = <HeatMapTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            selectedTheme = selectedTheme.toLowerCase();\n            \n            if (selectedTheme.indexOf('dark') > -1 || selectedTheme.indexOf('highcontrast') > -1 ) {\n                args.heatmap.xAxis.textStyle.color = 'White';\n                args.heatmap.yAxis.textStyle.color = 'White';\n                args.heatmap.xAxis.multiLevelLabels[0].textStyle.color = 'White';\n                args.heatmap.yAxis.multiLevelLabels[0].textStyle.color = 'White';\n            } else {\n                args.heatmap.xAxis.textStyle.color = 'Black';\n                args.heatmap.yAxis.textStyle.color = 'Black';\n                args.heatmap.xAxis.multiLevelLabels[0].textStyle.color = 'Black';\n                args.heatmap.yAxis.multiLevelLabels[0].textStyle.color = 'Black';\n            }\n            // custom code end\n        },\n    });\n    heatmap.appendTo('#container');\n"}