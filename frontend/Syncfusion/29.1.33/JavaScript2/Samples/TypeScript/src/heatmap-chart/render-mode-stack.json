{"render-mode-data.json":"\n{\n    \"renderModeData\":  [\n        [7.6, 5.9, -3.7, 2.2, 8.9, 6.0, 14.2, 6.1, -3.2, 4.2],\n        [3.9, 1.9, 2.6, 14.2, 2.3, 3.5, -2.8, 2.7, 4.2, 3.9],\n        [9.2, 3.4, 5.2, 14.5, 1.0, -5.9, -0.2, -1.7, -3.3, 4.6],\n        [-2.3, 7.2, -3.2, 15.1, 2.7, 2.9, 3.9, -1.2, 8.2, 6.0],\n        [-1.8, 5.0, -3.5, 3.2, 2.5, -1.8, 14.7, 3.0, 8.8, -3.3],\n        [-2.5, 3.4, 4.2, -1.9, 7.5, 4.6, 2.4, 10.9, 8.0, -3.0],\n        [7.1, 2.5, 7.9, 7.4, 15.2, 7.0, 5.8, -2.3, -3.9, -4.1],\n        [4.7, 3.3, 14.3, 5.5, 3.0, -3.5, -5.3, -6.8, -2.3, 5.7],\n        [2.2, 13.8, 3.0, -2.2, 3.8, 14.2, 3.7, 4.0, -4.9, 7.8],\n        [4.3, 15.3, 3.1, 1.7, 4.2, -3.6, 2.3, -3.2, 10.7, 2.3],\n        [-2.3, 3.4, 6.1, -1.3, 13.3, 3.7, -1.7, 8.2, 7.6, 4.1]\n    ]\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div>\n        <div class=\"col-md-8 control-section\">\n            <div class=\"content-wrapper\">\n                <div id=\"container\" style=\"width:92%\"></div>\n            </div>\n        </div>\n        <div class=\"col-md-4 property-section\">\n            <table id=\"property\" title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                <tbody>\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 60%\">\n                            <div>Rendering Mode:</div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div class=\"row\">\n                                <input id=\"svg\" type=\"radio\">\n                            </div>\n                            <div class=\"row\">\n                                <input id=\"canvas\" type=\"radio\">\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    \n    \n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-compression\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-file-utils\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-heatmap\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { HeatMap, Legend, Tooltip, Adaptor, ILoadedEventArgs, HeatMapTheme } from '@syncfusion/ej2-heatmap';\nimport { RadioButton } from '@syncfusion/ej2-buttons';\nimport * as data from './render-mode-data.json';\nHeatMap.Inject(Tooltip, Legend, Adaptor);\n// custom code start\n\n\n// custom code end\n\n    let heatmap: HeatMap = new HeatMap({\n        titleSettings: {\n            text: 'Net Migration Rate of Northern Europe From 1965 to 2015',\n            textStyle: {\n                size: '15px',\n                fontWeight: '500',\n                fontStyle: 'Normal',\n                fontFamily: 'inherit'\n            }\n        },\n        xAxis: {\n            labels: ['Channel Isl', 'Denmark', 'Estonia', 'Finland',\n                'Iceland', 'Ireland', 'Latvia', 'Lithuania', 'Norway', 'Sweden', 'UK'],\n            labelRotation: -90,\n            labelIntersectAction: 'None',\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        yAxis: {\n            labels: ['1965-1970', '1970-1975', '1975-1980', '1980-1985', '1985-1990',\n                '1990-1995', '1995-2000', '2000-2005', '2005-2010', '2010-2015'],\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        dataSource: (data as any).renderModeData,\n        paletteSettings: {\n            palette: [{ color: '#C06C84' },\n            { color: '#355C7D' }\n            ],\n        },\n        renderingMode: 'SVG',\n        cellSettings: {\n            border: {\n                width: 0\n            },\n            showLabel: false,\n            format: '{value} %'\n        },\n        legendSettings: {\n            position: 'Bottom',\n            width: '200px',\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        tooltipSettings:{\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        load: (args: ILoadedEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.heatmap.theme = <HeatMapTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            // custom code end\n        },\n    });\n    heatmap.appendTo('#container');\n\n    let svgRadioButton: RadioButton = new RadioButton({\n        label: 'SVG', name: 'renderingmode',\n        change: () => { valueXChange(); }, value: 'SVG', checked: true\n    });\n    svgRadioButton.appendTo('#svg');\n\n    let canvasradioButton: RadioButton = new RadioButton({\n        label: 'Canvas', name: 'renderingmode',\n        change: () => { valueXChange(); }, value: 'Canvas'\n    });\n    canvasradioButton.appendTo('#canvas');\n\n    function valueXChange(): void {\n        heatmap.renderingMode = svgRadioButton.checked ? 'SVG' : 'Canvas';\n        if (heatmap.renderingMode === 'Canvas') {\n            heatmap.titleSettings.textStyle.fontFamily = 'Segoe UI';\n            heatmap.xAxis.textStyle.fontFamily = 'Segoe UI';\n            heatmap.yAxis.textStyle.fontFamily = 'Segoe UI';\n            heatmap.legendSettings.textStyle.fontFamily = 'Segoe UI';\n            heatmap.cellSettings.textStyle.fontFamily = 'Segoe UI';\n        } else {\n            heatmap.titleSettings.textStyle.fontFamily = 'inherit';\n            heatmap.xAxis.textStyle.fontFamily = 'inherit';\n            heatmap.yAxis.textStyle.fontFamily = 'inherit';\n            heatmap.legendSettings.textStyle.fontFamily = 'inherit';\n            heatmap.cellSettings.textStyle.fontFamily = 'inherit';\n        }\n    }\n"}