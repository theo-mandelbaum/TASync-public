{"default-data.json":"{\n    \"defaultData\": [\n        [73, 39, 89, 39, 94, 55],\n        [93, 58, 53, 38, 26, 68],\n        [99, 28, 22, 0, 66, 90],\n        [14, 46, 97, 69, 69, 3],\n        [7, 16, 47, 47, 88, 6],\n        [41, 55, 73, 23, 3, 79],\n        [56, 69, 21, 86, 13, 33],\n        [45, 7, 53, 81, 95, 79],\n        [60, 77, 74, 68, 88, 51],\n        [25, 100, 10, 12, 78, 14],\n        [25, 56, 55, 58, 12, 82],\n        [74, 33, 88, 23, 86, 59]\n       ]\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div class=\"control-section\">\n        <div id=\"container\"> </div>\n    </div>\n    \n    \n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-compression\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-file-utils\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-heatmap\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { HeatMap, Legend, Tooltip, ILoadedEventArgs, HeatMapTheme } from '@syncfusion/ej2-heatmap';\nimport * as data from './default-data.json';\nHeatMap.Inject(Tooltip, Legend);\n// custom code start\n\n\n// custom code end\n\n    let heatmap: HeatMap = new HeatMap({\n        titleSettings: {\n            text: 'Sales Revenue per Employee (in 1000 US$)',\n            textStyle: {\n                size: '15px',\n                fontWeight: '500',\n                fontStyle: 'Normal',\n                fontFamily: 'inherit'\n            }\n        },\n        xAxis: {\n            labels: ['Nancy', 'Andrew', 'Janet', 'Margaret', 'Steven', 'Michael', 'Robert', 'Laura', 'Anne', 'Paul', 'Karin', 'Mario'],\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        yAxis: {\n            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        legendSettings:{\n            textStyle: {\n                 fontFamily: 'inherit'\n             }\n         },\n        tooltipSettings:{\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        cellSettings:{\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        dataSource: (data as any).defaultData,\n        load: (args: ILoadedEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.heatmap.theme = <HeatMapTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    heatmap.appendTo('#container');\n"}