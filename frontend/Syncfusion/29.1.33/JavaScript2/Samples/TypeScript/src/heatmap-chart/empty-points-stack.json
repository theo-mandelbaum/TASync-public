{"empty-point-data-source.json":"\n{\n    \"emptyPointDataSource\":[[8, 5, 2, 6, 8, 2, 9, 3, 7, 8, 7, 6],\n        [5, null, 4, 9, 10, null, 11, 7, 3, 7, 8, null],\n        [8, 7, 2, null, 5, 3, null, 2, 1, 8, null, 4],\n        [10, 2, null, 4, 5, null, 1, 10, 5, 2, 1, null],\n        [1, 2, 9, 4, null, 5, 1, null, 12, 1, null, 4],\n        [4, null, 3, 5, 2, null, null, null, 5, null, 1, 3],\n        [null, null, 4, 10, null, 5, 11, 2, 8, 1, null, 1],\n        [1, 4, null, 4, 5, null, 1, 3, null, 1, null, 3],\n        [null, 2, 1, 4, null, 5, 1, null, 2, 1, null, 2],\n        [1, null, 4, null, null, 2, null, 5, 1, 5, 2, 1],\n        [1, null, 2, 1, 5, null, null, null, 5, 2, 1, null]\n    ]\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div class=\"control-section\">\n        <div id=\"container\"> </div>\n    </div>\n    \n    \n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-compression\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-file-utils\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-heatmap\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { HeatMap, Legend, Tooltip, ILoadedEventArgs, ITooltipEventArgs, HeatMapTheme } from '@syncfusion/ej2-heatmap';\nimport * as data from './empty-point-data-source.json';\nHeatMap.Inject(Tooltip, Legend);\n// custom code start\n\n\n// custom code end\n\n    let heatmap: HeatMap = new HeatMap({\n        titleSettings: {\n            text: 'Defective Count per 1000 Products from a Manufacturing Unit',\n            textStyle: {\n                size: '15px',\n                fontWeight: '500',\n                fontStyle: 'Normal',\n                fontFamily: 'inherit'\n            }\n        },\n        xAxis: {\n            labels: ['2007', '2008', '2009', '2010', '2011',\n                '2012', '2013', '2014', '2015', '2016', '2017'],\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        yAxis: {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n                'Jun', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n\n        }, cellSettings: {\n            border: {\n                width: '0',\n                color: 'white'\n            },\n            showLabel: true,\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        paletteSettings: {\n            palette: [{ color: 'rgb(172, 213, 242)' },\n            { color: 'rgb(127, 168, 201)' },\n            { color: 'rgb(82, 123, 160)' },\n            { color: 'rgb(37, 78, 119)' },\n            ],\n            type: 'Gradient'\n        },\n        legendSettings: {\n            position: 'Bottom',\n            width: '250px',\n            showLabel: true,\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        tooltipSettings:{\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        tooltipRender: (args: ITooltipEventArgs) => {\n            args.content = [args.yLabel + ' | ' + args.xLabel + ' : ' + args.value + ' defective units'];\n        },\n        load: (args: ILoadedEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.heatmap.theme = <HeatMapTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            // custom code end\n        },\n        dataSource: (data as any).emptyPointDataSource,\n    });\n    heatmap.appendTo('#container');\n"}