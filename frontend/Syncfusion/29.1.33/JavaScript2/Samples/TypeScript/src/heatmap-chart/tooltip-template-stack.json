{"default-table-data-source.json":"\n{\n    \"defaultTableDataSource\":[\n        [0.72, 0.71, 0.71, 0.67, 0.72, 0.53, 0.53, 0.56, 0.58, 0.56],\n        [2.28, 2.29, 2.09, 1.84, 1.64, 1.49, 1.49, 1.39, 1.32, 1.23],\n        [2.02, 2.17, 2.30, 2.39, 2.36, 2.52, 2.62, 2.57, 2.57, 2.74],\n        [3.21, 3.26, 3.45, 3.47, 3.42, 3.34, 3.14, 2.83, 2.64, 2.61],\n        [3.22, 3.13, 3.04, 2.95, 2.69, 2.49, 2.27, 2.18, 2.06, 1.87],\n        [3.30, 3.39, 3.40, 3.48, 3.60, 3.67, 3.73, 3.79, 3.79, 4.07],\n        [5.80, 5.74, 5.64, 5.44, 5.18, 5.08, 5.07, 5.00, 5.35, 5.47],\n        [6.91, 7.40, 8.13, 8.80, 9.04, 9.24, 9.43, 9.35, 9.49, 9.69]\n    ]\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div class=\"control-section\">\n        <div id=\"container\"></div>  \n    </div>\n    \n    \n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-compression\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-file-utils\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-heatmap\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { HeatMap, Legend, Tooltip, Adaptor, ILoadedEventArgs, ITooltipEventArgs, HeatMapTheme } from '@syncfusion/ej2-heatmap';\nimport * as data from './default-table-data-source.json';\nHeatMap.Inject(Tooltip, Legend, Adaptor);\n// custom code start\n\n\n// custom code end\n\n    let heatmap: HeatMap = new HeatMap({\n        titleSettings: {\n            text: 'Crude Oil Production of Non-OPEC Countries (in Million barrels per day)',\n            textStyle: {\n                size: '15px',\n                fontWeight: '500',\n                fontStyle: 'Normal',\n                fontFamily: 'inherit'\n            }\n        },\n        xAxis: {\n            labels: ['Canada', 'China', 'Egypt', 'Mexico', 'Norway', 'Russia', 'UK', 'USA'],\n            labelRotation: 45,\n            labelIntersectAction: 'None',\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        yAxis: {\n            labels: ['2000', '2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010'],\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        dataSource: (data as any).defaultTableDataSource,\n        cellSettings: {\n            border: {\n                width: 0\n            },\n            format: '{value} M',\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        legendSettings: {\n            visible: false,\n        },\n        tooltipSettings: {\n            fill: '#265259',\n            textStyle: {\n                color: '#FFFFFF',\n                size: '12px',\n                fontFamily: 'inherit'\n            },\n            border: {\n                width: 1,\n                color: '#98BABF'\n            },\n            template: '<div style=\" border-radius: 5px;fontFamily: inherit; padding-left: 10px;padding-right: 10px;padding-bottom: 6px;padding-top: 6px;background:#000000; border: 1px #919191;\" ><span style=\"color:white\">In ${yLabel}, the ${xLabel} produced ${value} million barrels per day.<span></div>'   \n        },\n        paletteSettings: {\n            palette: [{ value: 0, color: '#C2E7EC' },\n            { value: 0.6, color: '#AEDFE6' },\n            { value: 0.75, color: '#9AD7E0' },\n            { value: 1, color: '#86CFDA' },\n            { value: 1.5, color: '#72C7D4' },\n            { value: 2, color: '#5EBFCE' },\n            { value: 2.5, color: '#4AB7C8' },\n            { value: 3, color: '#36AFC2' },\n            { value: 3.5, color: '#309DAE' },\n            { value: 5, color: '#2B8C9B' },\n            { value: 5.5, color: '#257A87' },\n            { value: 6, color: '#206974' },\n            { value: 8, color: '#1B5761' },\n            { value: 9, color: '#15464D' },\n            { value: 9.5, color: '#000000' },\n            ],\n            type: 'Fixed'\n        },\n        load: (args: ILoadedEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.heatmap.theme = <HeatMapTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    heatmap.appendTo('#container');\n"}