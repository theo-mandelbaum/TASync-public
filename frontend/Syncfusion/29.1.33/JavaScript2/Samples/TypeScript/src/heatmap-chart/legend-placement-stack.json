{"legend-sample-data.json":"\n{\n    \"legendSampleData\":[\n        [10, 8, 7, 7, 10, 14, 17, 18, 18, 17, 16, 15],\n        [10, 8, 7, 6, 8, 13, 15, 17, 17, 17, 15, 12],\n        [12, 10, 8, 7, 7, 10, 15, 18, 20, 21, 20, 17],\n        [11, 9, 8, 7, 7, 12, 16, 18, 19, 19, 17, 15],\n        [15, 15, 15, 15, 16, 20, 22, 21, 21, 21, 19, 18],\n        [13, 13, 12, 12, 12, 15, 18, 21, 22, 21, 19, 16],\n        [11, 10, 9, 9, 10, 12, 14, 16, 17, 17, 16, 14]\n    ]\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div>\n        <div class=\"col-md-8 control-section\">\n            <div class=\"content-wrapper\">\n                <div id=\"container\" style=\"width:92%;\"></div>\n            </div>\n        </div>\n        <div class=\"col-md-4 property-section\">\n            <table id=\"property\" title=\"Properties\" style=\"width: 100%;margin-left: -10px;\" role=\"none\">\n                <tbody>\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 60%\">\n                            <div>Legend Position:</div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div>\n                                <select id=\"LegendPosition\"> \n                                    <option value=\"Left\">Left</option>\n                                    <option value=\"Right\">Right</option>\n                                    <option value=\"Top\">Top</option>\n                                    <option value=\"Bottom\">Bottom</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    \n    \n    \n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-compression\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-file-utils\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-heatmap\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { HeatMap, Legend, Tooltip, Adaptor, ILoadedEventArgs, ITooltipEventArgs, HeatMapTheme } from '@syncfusion/ej2-heatmap';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as data from './legend-sample-data.json';\nHeatMap.Inject(Tooltip, Legend, Adaptor);\n// custom code start\n\n\n// custom code end\n\n    let heatmap: HeatMap = new HeatMap({\n        titleSettings: {\n            text: 'Hourly Weather Forecast (in Celsius)',\n            textStyle: {\n                size: '15px',\n                fontWeight: '500',\n                fontStyle: 'Normal',\n                fontFamily: 'inherit'\n            }\n        },\n        xAxis: {\n            labels: ['London', 'Berlin', 'Madrid', 'Paris', 'Rome', 'Lisbon', 'Dublin'],\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        yAxis: {\n            labels: ['12AM', '2AM', '4AM', '6AM', '8AM', '10AM', '12PM',\n                '2PM', '4PM', '6PM', '8PM', '10PM'],\n                textStyle: {\n                    fontFamily: 'inherit'\n                }\n        },\n        cellSettings: {\n            showLabel: false,\n            format: '{value} C'\n        },\n        tooltipSettings:{\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        dataSource: (data as any).legendSampleData,\n        paletteSettings: {\n            palette: [{ value: 0, color: '#6EB5D0' },\n            { value: 10, color: '#7EDCA2' },\n            { value: 19, color: '#DCD57E' },\n            { value: 22, color: '#DCD57E' }\n            ]\n        },\n        legendSettings: {\n            position: 'Bottom',\n            labelFormat: '{value}\\xB0 C',\n            title: {\n              text: 'Celsius',\n              textStyle: {\n                fontFamily: 'inherit'\n            }\n            },\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        },\n        tooltipRender: (args: ITooltipEventArgs) => {\n            args.content = [args.xLabel + ' | ' + args.yLabel + ' : ' + args.value + '\\xB0 C'];\n        },\n        load: (args: ILoadedEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.heatmap.theme = <HeatMapTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    heatmap.appendTo('#container');\n\n    let legentListObj: DropDownList = new DropDownList({\n        index: 3,\n        popupHeight: '200px',\n        change: () => { valueXChange(); }\n    });\n    legentListObj.appendTo('#LegendPosition');\n\n    function valueXChange(): void {\n        heatmap.legendSettings.position = legentListObj.value.toString() === 'Right' ?\n            'Right' : legentListObj.value.toString() === 'Bottom' ?\n                'Bottom' : legentListObj.value.toString() === 'Left' ?\n                    'Left' : legentListObj.value.toString() === 'Top' ? 'Top' : null;\n    }\n"}