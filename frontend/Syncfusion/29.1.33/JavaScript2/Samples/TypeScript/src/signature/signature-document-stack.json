{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-12 control-section\">\n    <div id=\"target\">\n        <div id=\"dialog\">\n\n        </div>\n    </div>\n    <div id=\"container\">\n        <form>\n            <div class=\"paragraph\">\n                <p>Dear <b>Peter Parker</b>,</p><br>\n\n                <p>Good day! </p><br>\n\n                <p class=\"para\">I am writing this letter to express my gratefulness and appreciation for agreeing to rent me your property \n                at <b>Street 11, Avenue 6, Wales</b>. As per our previous discussion regarding the house rental, I am required \n                to make a security deposit of <b>$4000</b> and pay an amount of <b>$3500</b> as rent on the first of every month.</p>\n                <br>\n                \n                <p class=\"para\">Attached to this letter packet is a copy of the signed house rental agreement, indicating alters and \n                conditions of my stay in your property. This agreement and my rental stay are valid for <b>1 year</b>, as per our \n                previous conversation.</p><br>\n                \n                <p class=\"para\">Please do not hesitate to contact me if there are any changes to be made to the agreement. I look forward \n                to hearing from you. Thank you</p><br>\n                \n                Regards,<br><br>\n                <div id=\"signature-control\">\n                    <canvas id=\"signature\" height=\"50\" width=\"200\"></canvas>\n                </div>\n                <br>\n            </div>\n          </form>\n          <button class=\"e-btn e-send-btn\" id=\"sendButton\">Send</button>\n    </div>\n</div>\n\n\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-icons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\r\nimport { Dialog } from '@syncfusion/ej2-popups';\r\nimport { TextBox } from '@syncfusion/ej2-inputs';\r\nimport { Signature } from '@syncfusion/ej2-inputs';\r\nimport { Tab, SelectEventArgs } from '@syncfusion/ej2-navigations';\r\nimport { getComponent } from '@syncfusion/ej2-base';\r\nimport { Uploader, RemovingEventArgs, SelectedEventArgs } from '@syncfusion/ej2-inputs';\r\n\r\n/**\r\n * Signature Usecase sample\r\n */\r\n\r\n// tslint:disable-next-line\r\n\r\n    \r\n    let signfontStyle: any = [{ FontName: 'Brush Script MT' }, { FontName: 'Helvetica' }, { FontName: 'Times New Roman' },\r\n    { FontName: 'Open Sans' }];\r\n    let signature: Signature = new Signature({ isReadOnly: true });\r\n    signature.appendTo('#signature');\r\n\r\n    let dialog: Dialog = new Dialog({\r\n        header: 'Signature',\r\n        cssClass: 'e-sign-dlg',\r\n        showCloseIcon: true,\r\n        content: '<div id=\"element\"></div>',\r\n        target: document.body,\r\n        width: '570px',\r\n        visible: false,\r\n        open: openDialog,\r\n        position: {\r\n            X: 'center',\r\n            Y: '100'\r\n        },\r\n        footerTemplate: '<div class=\"e-disclaimer\">I understand that this is a legal representation of my signature</div>' +\r\n        '<button class=\"e-btn e-btn-clear\" style=\"float: left;\" id=\"btnClear\">Clear</button>' +\r\n        '<button class=\"e-btn e-btn-cancel\" id=\"btnCancel\">Cancel</button>' +\r\n        '<button class=\"e-btn e-btn-create e-primary\" id=\"btnCreate\">Save & Use</button>'\r\n    });\r\n    dialog.appendTo('#dialog');\r\n\r\n    function openDialog(): void {\r\n        let tabElem: HTMLElement = document.getElementById('element') as HTMLElement;\r\n        if (!tabElem.classList.contains('e-control')) {\r\n            let tabObj: Tab = new Tab({\r\n                selected: (args: SelectEventArgs): void => {\r\n                    handleSelectEvent(args);\r\n                },\r\n                items: [\r\n                    {\r\n                        header: { 'text': 'Type' },\r\n                        content: '<div id=\"type_appearance\"><input id=\"signtext_box\" type=\"text\"/><div id=\"type_content\"></div></div>'\r\n                    },\r\n                    {\r\n                        header: { 'text': 'Draw' },\r\n                        content: '<div id=\"draw_appearance\"><canvas id=\"main_signature\" style=\"width:100%;\" height=197></canvas></div>'\r\n                    },\r\n                    {\r\n                        header: { 'text': 'Upload' },\r\n                        content: '<div id=\"upload_appearance\"><input id=\"file_upload\" type=\"file\"/>' +\r\n                        '<div id=\"upload_content\" style=\"display: none;\"><canvas id=\"upload_signature\" height=203 style=\"width:100%;\">' +\r\n                        '</canvas></div></div>'\r\n                    }\r\n                ],\r\n            });\r\n            tabObj.appendTo('#element');\r\n            document.getElementById('btnClear').addEventListener('click', clearHandler);\r\n            document.getElementById('btnCancel').addEventListener('click', cancelHandler);\r\n            document.getElementById('btnCreate').addEventListener('click', createHandler);\r\n            typeContent();\r\n        }\r\n    }\r\n\r\n    function drawContent(): void {\r\n        let canvasElem: HTMLCanvasElement = document.getElementById('main_signature') as HTMLCanvasElement;\r\n        if (canvasElem.classList.contains('e-control')) {\r\n            signature = getComponent(canvasElem, 'signature');\r\n\r\n        } else {\r\n            signature = new Signature({ change: signChange });\r\n            signature.appendTo('#main_signature');\r\n        }\r\n        document.getElementById('btnClear').innerText = 'CLEAR';\r\n        refreshFooter(signature);\r\n    }\r\n\r\n    function typeContent(): void {\r\n        let inputElem: HTMLInputElement = document.getElementById('signtext_box') as HTMLInputElement;\r\n        if (inputElem.classList.contains('e-control')) {\r\n            for (let i: number = 0; i < signfontStyle.length; i++) {\r\n                signature = getComponent(document.getElementById('font_signature' + (i + 1)), 'signature');\r\n                signature.draw(inputElem.value, signfontStyle[i].FontName);\r\n            }\r\n        } else {\r\n            let inputobj: any = new TextBox({\r\n                placeholder: 'Your name',\r\n                value: 'Signature',\r\n                input: inputHanlder\r\n            });\r\n            inputobj.appendTo('#signtext_box');\r\n            let fontDiv: HTMLElement = document.getElementById('type_content');\r\n            let fontSignature: HTMLCanvasElement; let tableElem: HTMLTableElement;\r\n            let divElem: HTMLElement;\r\n            let trElem: HTMLTableRowElement; let tdElem: HTMLTableCellElement;\r\n            tableElem = document.createElement('table');\r\n            for (let i: number = 1; i <= signfontStyle.length; i++) {\r\n                if (i % 2 === 1) {\r\n                    trElem = document.createElement('tr');\r\n                }\r\n                tdElem = document.createElement('td');\r\n                divElem = document.createElement('div');\r\n                fontSignature = document.createElement('canvas');\r\n                fontSignature.id = 'font_signature' + i + '';\r\n                fontSignature.style.height = '100%';\r\n                fontSignature.style.width = '100%';\r\n                divElem.classList.add('e-font-sign');\r\n                divElem.appendChild(fontSignature);\r\n                tdElem.appendChild(divElem); trElem.appendChild(tdElem);\r\n                if (i % 2 === 0) {\r\n                    tableElem.appendChild(trElem);\r\n                }\r\n                if (i === 1) {\r\n                    divElem.classList.add('e-selected-item');\r\n                }\r\n            }\r\n            fontDiv.appendChild(tableElem);\r\n        }\r\n        for (let i: number = 0; i < signfontStyle.length; i++) {\r\n            signature = new Signature({isReadOnly: true, change: signChange});\r\n            signature.appendTo('#font_signature' + (i + 1));\r\n            signature.draw(inputElem.value, signfontStyle[i].FontName);\r\n            signature.element.parentElement.addEventListener('click', fontClickHandler);\r\n        }\r\n        document.getElementById('btnClear').innerText = 'CLEAR';\r\n        refreshFooter(signature);\r\n    }\r\n\r\n    function uploadContent(): void {\r\n        let uploadElem: HTMLInputElement = document.getElementById('file_upload') as HTMLInputElement;\r\n        let canvasElem: HTMLCanvasElement = document.getElementById('upload_signature') as HTMLCanvasElement;\r\n        if (!uploadElem.classList.contains('e-control')) {\r\n            let uploadObj: Uploader = new Uploader({\r\n                asyncSettings: {\r\n                    saveUrl: 'https://ej2.syncfusion.com/services/api/uploadbox/Save',\r\n                    removeUrl: 'https://ej2.syncfusion.com/services/api/uploadbox/Remove'\r\n                },\r\n                removing: onFileRemove,\r\n                selected: onSelect\r\n            });\r\n            uploadObj.appendTo('#file_upload');\r\n        }\r\n        if (canvasElem.classList.contains('e-control')) {\r\n            signature = getComponent(canvasElem, 'signature');\r\n            refreshFooter(signature);\r\n        }\r\n        document.getElementById('btnClear').innerText = 'REMOVE';\r\n        refreshFooter(signature);\r\n    }\r\n\r\n    function clearHandler(): void {\r\n        let activeItem: HTMLElement = document.querySelector('.e-dlg-content .e-item.e-active') as HTMLElement;\r\n        if (activeItem.querySelectorAll('#draw_appearance').length) {\r\n            signature = getComponent(document.getElementById('main_signature'), 'signature');\r\n            signature.clear();\r\n        } else if (activeItem.querySelectorAll('#type_appearance').length) {\r\n            (document.getElementById('signtext_box') as HTMLInputElement).value = '';\r\n            for (let i: number = 0; i < signfontStyle.length; i++) {\r\n                signature = getComponent(document.getElementById('font_signature' + (i + 1)), 'signature');\r\n                signature.clear();\r\n            }\r\n        } else {\r\n            signature = getComponent(document.getElementById('upload_signature'), 'signature');\r\n            signature.destroy();\r\n            document.getElementById('upload_content').style.display = 'none';\r\n            (document.querySelector('#upload_appearance .e-upload') as HTMLElement).style.display = 'block';\r\n        }\r\n        document.getElementById('btnClear').classList.add('e-disabled');\r\n        document.getElementById('btnCreate').classList.add('e-disabled');\r\n    }\r\n\r\n    function cancelHandler(): void {\r\n        dialog.hide();\r\n    }\r\n\r\n    function createHandler(): void {\r\n        signature = getComponent(document.getElementById('signature'), 'signature');\r\n        let activeItem: HTMLElement = document.querySelector('.e-dlg-content .e-item.e-active') as HTMLElement;\r\n        if (activeItem.querySelectorAll('#draw_appearance').length) {\r\n            let signature1: Signature = getComponent(document.getElementById('main_signature'), 'signature');\r\n            signature.load(signature1.getSignature(), signature1.element.width, signature1.element.height);\r\n        } else if (activeItem.querySelectorAll('#type_appearance').length) {\r\n            let signature1: Signature = getComponent(document.querySelector('.e-selected-item .e-signature') as HTMLElement, 'signature');\r\n            signature.load(signature1.getSignature(), signature1.element.width, signature1.element.height);\r\n        }\r\n        dialog.hide();\r\n    }\r\n\r\n    function signChange(): void {\r\n        document.getElementById('btnClear').classList.remove('e-disabled');\r\n        document.getElementById('btnCreate').classList.remove('e-disabled');\r\n    }\r\n\r\n    function onFileRemove(args: RemovingEventArgs) : void {\r\n        args.postRawFile = false;\r\n    }\r\n\r\n    function onSelect(args: SelectedEventArgs) : void {\r\n        document.getElementById('upload_content').style.display = 'block';\r\n        (document.querySelector('#upload_appearance .e-upload') as HTMLElement).style.display = 'none';\r\n        let signature: Signature = new Signature({change: signChange});\r\n        signature.appendTo('#upload_signature');\r\n        refreshFooter(signature);\r\n    }\r\n\r\n    function handleSelectEvent(e: SelectEventArgs): void {\r\n        if (e.selectedIndex === 0) {\r\n            typeContent();\r\n        } else if (e.selectedIndex === 1) {\r\n            drawContent();\r\n        } else if (e.selectedIndex === 2) {\r\n            uploadContent();\r\n        }\r\n    }\r\n\r\n    function refreshFooter(signature: Signature): void {\r\n        if (signature.isEmpty()) {\r\n            document.getElementById('btnClear').classList.add('e-disabled');\r\n            document.getElementById('btnCreate').classList.add('e-disabled');\r\n        } else {\r\n            document.getElementById('btnClear').classList.remove('e-disabled');\r\n            document.getElementById('btnCreate').classList.remove('e-disabled');\r\n        }\r\n    }\r\n\r\n    function inputHanlder(): void {\r\n        let canvasElem: HTMLCanvasElement; let signPad: Signature;\r\n        let textBox: any = document.getElementById('signtext_box');\r\n        for (let i: number = 0; i < signfontStyle.length; i++) {\r\n            canvasElem = document.getElementById('font_signature' + ( i + 1)) as HTMLCanvasElement;\r\n            signPad = getComponent(canvasElem, 'signature');\r\n            signPad.draw(textBox.value, signfontStyle[i].FontName);\r\n        }\r\n        if (!signPad.isEmpty()) {\r\n            document.getElementById('btnClear').classList.remove('e-disabled');\r\n            document.getElementById('btnCreate').classList.remove('e-disabled');\r\n        }\r\n    }\r\n\r\n    function fontClickHandler(args: any): void {\r\n        let fontColl: NodeListOf<HTMLElement> = document.querySelectorAll('.e-font-sign');\r\n        for (let i: number = 0; i < fontColl.length; i++) {\r\n            fontColl[i].classList.remove('e-selected-item');\r\n        }\r\n        args.currentTarget.classList.add('e-selected-item');\r\n    }\r\n\r\n    document.getElementById('signature-control').onclick = (): void => {\r\n        dialog.show();\r\n    };\r\n\r\n    document.getElementById('sendButton').onclick = (): void => {\r\n        let canvasElem: HTMLCanvasElement = document.getElementById('signature') as HTMLCanvasElement;\r\n        let signPad: Signature = getComponent(canvasElem, 'signature');\r\n        if (signPad.isEmpty()) {\r\n            canvasElem.classList.add('e-selected-item');\r\n        } else {\r\n            canvasElem.classList.remove('e-selected-item');\r\n            signPad.clear();\r\n        }\r\n    };\r\n"}