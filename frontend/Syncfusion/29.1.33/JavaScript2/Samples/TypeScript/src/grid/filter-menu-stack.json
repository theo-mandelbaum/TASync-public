{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-9 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"Grid\">\n        </div>\n    </div>\n</div>\n\n\n<template>\n    <tr class=\"infinite-row\">\n        <td style=\"width: 30%\"><div>Enable OnDemand: </div></td>\n        <td style=\"width: 70%;padding-right: 10px\"><div><input type=\"checkbox\" tabindex=\"0\" id=\"dataloadtype\"></div></td>\n    </tr>\n</template>\n<div class=\"col-lg-3 property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n        <tbody><tr>\n            <td style=\"width: 30%\">\n                <div>Filter Type</div>\n            </td>\n            <td style=\"width: 70%;padding-right: 10px\">\n                <div>\n                    <input type=\"text\" tabindex=\"0\" id=\"filterType\">\n                </div>\n            </td>\n        </tr>\n\n    </tbody></table>\n</div>\n\n\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-calendars\": \"*\",\n  \"@syncfusion/ej2-compression\": \"*\",\n  \"@syncfusion/ej2-excel-export\": \"*\",\n  \"@syncfusion/ej2-file-utils\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"@syncfusion/ej2-grids\": \"*\",\n  \"@syncfusion/ej2/buttons\": \"*\",\n  \"@syncfusion/ej2/base\": \"*\",\n  \"@syncfusion/ej2/data\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { DropDownList, ChangeEventArgs } from '@syncfusion/ej2-dropdowns';\nimport { Grid, Filter, Page, Selection, FilterType, Sort } from '@syncfusion/ej2-grids';\nimport { CheckBox } from '@syncfusion/ej2/buttons';\nimport { remove } from '@syncfusion/ej2/base';\nimport { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2/data';\n\nGrid.Inject(Filter, Page, Selection, Sort);\n\n/**\n * Filtering sample\n */\n\n    \n    let filtertype: { [key: string]: Object }[] = [\n        { id: 'Menu', type: 'Menu' },\n        { id: 'CheckBox', type: 'CheckBox' },\n        { id: 'Excel', type: 'Excel' }\n    ];\n    const urlapi: DataManager = new DataManager({\n        url: 'http://localhost:62728/api/UrlDataSource',\n        adaptor: new UrlAdaptor()\n    });\n    let grid: Grid = new Grid(\n        {\n            dataSource: urlapi,\n            query: new Query().addParams('dataCount', '10000'),\n            allowPaging: true,\n            allowFiltering: true,\n            allowSorting: true,\n            filterSettings: { type: 'Menu' },\n            columns: [\n                { field: 'EmployeeID', headerText: 'Employee ID', isPrimaryKey: true, width: '120' },\n                { field: 'Employees', headerText: 'Employee Name', width: '150' },\n                { field: 'Designation', headerText: 'Designation', width: '130' },\n                {\n                    field: 'CurrentSalary', headerText: 'Current Salary', format: 'C2',\n                    textAlign: 'Right', width: '120'\n                },\n            ],\n            pageSettings: { pageCount: 5 }\n        });\n    grid.appendTo('#Grid');\n\n    let dropDownFilterType: DropDownList = new DropDownList({\n        dataSource: filtertype,\n        fields: { text: 'type', value: 'id' },\n        value: 'Menu',\n        change: (e: ChangeEventArgs) => {\n            let dropSelectedValue: FilterType = <FilterType>e.value;\n            grid.filterSettings.type = dropSelectedValue;\n            grid.clearFiltering();\n            let propertyTbody: HTMLElement = document.querySelector('#property tbody') as HTMLElement;\n            if (dropSelectedValue === 'Excel' || dropSelectedValue === 'CheckBox') {\n                if (propertyTbody.children.length < 2) {\n                    let temp: HTMLTemplateElement = document.getElementsByTagName(\"template\")[0];\n                    var cloneTemplate: any = temp.content.cloneNode(true);\n                    propertyTbody.appendChild(cloneTemplate.querySelector(\"tr.infinite-row\"));\n                    const enableInfiniteLoad: CheckBox = new CheckBox({\n                        change: (e: any) => {\n                            grid.filterSettings.enableInfiniteScrolling = e.checked;\n                        }\n                    });\n                    enableInfiniteLoad.appendTo('#dataloadtype');\n                } else {\n                    const enableInfiniteLoad: CheckBox = document.getElementById('dataloadtype')['ej2_instances'][0] as CheckBox;\n                    enableInfiniteLoad.checked = false;\n                    grid.filterSettings.enableInfiniteScrolling = false;\n                }\n            } else {\n                grid.filterSettings.enableInfiniteScrolling = false;\n                remove(document.querySelector('#property tbody tr.infinite-row'));\n            }\n        }\n    });\n    dropDownFilterType.appendTo('#filterType');\n\n"}