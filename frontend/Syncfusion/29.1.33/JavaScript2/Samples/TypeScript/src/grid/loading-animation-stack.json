{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-9 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"Grid\">\n        </div>\n    </div>\n</div>\n\n\n\n<div class=\"col-lg-3 property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n        <tbody><tr>\n            <td style=\"width: 30%\">\n                <div>Indicator Type</div>\n            </td>\n            <td style=\"width: 70%;padding-right: 10px\">\n                <div>\n                    <input type=\"text\" tabindex=\"0\" id=\"animation\">\n                </div>\n            </td>  \n        </tr>\n    </tbody></table>\n</div>\n\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-calendars\": \"*\",\n  \"@syncfusion/ej2-compression\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-excel-export\": \"*\",\n  \"@syncfusion/ej2-file-utils\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-grids\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { Grid, Page, Selection, Sort, Filter } from '@syncfusion/ej2-grids';\nimport { DataManager, UrlAdaptor, Query } from '@syncfusion/ej2-data';\nimport { DropDownList, ChangeEventArgs } from '@syncfusion/ej2-dropdowns';\n\nGrid.Inject(Page, Selection, Sort, Filter);\n\n/**\n * Loading animation sample\n */\n\n    \n    let loadingeffects: { [key: string]: Object }[] = [\n        { id: 'Shimmer', type: 'Shimmer' },\n        { id: 'Spinner', type: 'Spinner' }\n    ];\n    let data: Object = new DataManager({\n        url: 'http://localhost:62728/api/UrlDataSource',\n        adaptor: new UrlAdaptor,\n    });\n    let grid: Grid = new Grid(\n        {\n            dataSource: data,\n            allowPaging: true,\n            query: new Query().addParams('dataCount', '1000'),\n            allowFiltering: true,\n            allowSorting: true,\n            loadingIndicator: { indicatorType: 'Shimmer' },\n            columns: [\n                { field: 'EmployeeID', headerText: 'Employee ID', width: 130,  textAlign: 'Right' },\n                { field: 'Employees', headerText: 'Employee Name', width: 150 },\n                { field: 'Designation', headerText: 'Designation', width: 130 },\n                { field: 'CurrentSalary', headerText: 'Current Salary', format: \"C2\", textAlign: 'Right', width: 140 }\n            ],\n            pageSettings: { pageCount: 3 }\n        });\n    grid.appendTo('#Grid');\n\n    let dropDownFilterType: DropDownList = new DropDownList({\n        dataSource: loadingeffects,\n        fields: { text: 'type', value: 'id' },\n        value: 'Shimmer',\n        change: (e: ChangeEventArgs) => {\n            if (dropDownFilterType.value === 'Shimmer') {\n                grid.loadingIndicator.indicatorType = 'Shimmer';\n                grid.refresh();\n            } else {\n                grid.loadingIndicator.indicatorType = 'Spinner';\n                grid.refresh();\n            }\n        }\n    });\n    dropDownFilterType.appendTo('#animation');\n\n"}