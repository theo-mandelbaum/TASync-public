{"script/diagram-common.ts":"/**\n * script for mobile symbol-palette\n */\n\n\nlet isMobile: boolean;\n\nexport function addEvents(): void {\n    isMobile = window.matchMedia('(max-width:550px)').matches;\n    if (isMobile) {\n        let paletteIcon: HTMLElement = document.getElementById('palette-icon');\n        if (paletteIcon) {\n            paletteIcon.addEventListener('click', openPalette, false);\n        }\n    }\n}\n\nexport function openPalette(): void {\n    let paletteSpace: HTMLElement = document.getElementById('palette-space');\n    isMobile = window.matchMedia('(max-width:550px)').matches;\n    if (isMobile) {\n        if (!paletteSpace.classList.contains('sb-mobile-palette-open')) {\n            paletteSpace.classList.add('sb-mobile-palette-open');\n        } else {\n            paletteSpace.classList.remove('sb-mobile-palette-open');\n        }\n    }\n}\n","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<link id=\"change_themes\" href=\"../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Bootstrap5_Diagram_Builder/style.css\" rel=\"stylesheet\" type=\"text/css\">\n<div class=\"control-section\">\n    <link href=\"https://ej2.syncfusion.com/javascript/demos/src/diagram/styles/diagram-common.css\" rel=\"stylesheet\">\n    <style>\n        /* These styles are used for toolbar icons*/\n       @font-face {\n            font-family: 'e-ddb-icons';\n            src: url(data:application/x-font-ttf;charset=utf-8;base64,) format('truetype');\n            font-weight: normal;\n            font-style: normal;\n        }\n\n        @font-face {\n        font-family: 'Bootstrap5 Diagram Builder';\n        src:\n        url(data:application/x-font-ttf;charset=utf-8;base64,) format('truetype');\n        font-weight: normal;\n        font-style: normal;\n        }\n\n        [class^=\"sf-icon-\"], [class*=\" sf-icon-\"] {\n        font-family: 'Bootstrap5 Diagram Builder' !important;\n        /* speak: none; */\n        font-size: 55px;\n        font-style: normal;\n        font-weight: normal;\n        font-variant: normal;\n        text-transform: none;\n        line-height: 1;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        }\n\n        .sf-icon-align-left-1:before { content: \"\\e8bc\"; }\n        .sf-icon-align-middle-1:before { content: \"\\e8bd\"; }\n        .sf-icon-align-right-1:before { content: \"\\e8be\"; }\n        .sf-icon-align-top-1:before { content: \"\\e8bf\"; }\n        .sf-icon-align-center-1:before { content: \"\\e8c0\"; }\n        .sf-icon-align-bottom-1:before { content: \"\\e8c1\"; }\n        .sf-icon-distribute-vertical:before { content: \"\\e8c2\"; }\n        .sf-icon-distribute-horizontal:before { content: \"\\e8c3\"; }\n        .sf-icon-elipse:before { content: \"\\e8c4\"; }\n        .sf-icon-line-1:before { content: \"\\e8c5\"; }\n        .sf-icon-orthogonal:before { content: \"\\e8c6\"; }\n        .sf-icon-bezier:before { content: \"\\e8c7\"; }\n        .sf-icon-same-width:before { content: \"\\e8c8\"; }\n        .sf-icon-same-height:before { content: \"\\e8c9\"; }\n        .sf-icon-same-size:before { content: \"\\e8ca\"; }\n    \n        .e-ddb-icons {\n            font-family: 'e-ddb-icons';\n            speak: none;\n            font-size: 16px;\n            font-style: normal;\n            font-weight: normal;\n            font-variant: normal;\n            text-transform: none;\n            line-height: 1;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n        }\n        /* Icon css in dropdown */\n        .e-basic::before {\n            content: \"\\e726\";\n        }\n    \n        .e-flow::before {\n            content: \"\\e724\";\n        }\n    \n        .e-connector::before {\n            content: \"\\e725\";\n        }\n        .e-export::before {\n                content: \"\\e711\";\n        }\n        .material .e-export::before {\n                content: \"\\e706\";\n        }\n        .bootstrap .e-export::before {\n                content: \"\\e71e\";\n        }\n        \n        .e-file-select-wrap {\n                display: none;\n            }\n            /* Toolbar width */\n            .db-toolbar-editor{\n                width: 100%;\n            }\n            /* symbolpalette width */\n            #symbolpalette{\n                width: 90%;\n            }\n             /* Overall div width */\n            .main{\n                width: 100%;\n            }\n            .diagram-upload-file{\n                display: none;\n            }\n    </style>\n         <div class=\"main\">\n            <div class=\"diagram-upload-file\"><input type=\"file\" id=\"fileupload\" name=\"UploadFiles\">\n            </div>\n            <div class=\"db-toolbar-editor\">\n                <div class=\"db-toolbar-container\">\n                    <div id=\"toolbarEditor\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"sb-mobile-palette-bar\">\n                <div id=\"palette-icon\" role=\"button\" class=\"e-ddb-icons1 e-toggle-palette\"></div>\n            </div>\n            <div id=\"palette-space\" class=\"sb-mobile-palette\">\n                <div id=\"symbolpalette\"></div>\n            </div>\n            <div id=\"diagram-space\" class=\"sb-mobile-diagram\">\n                <div id=\"diagram\"></div>\n            </div>\n        </div>\n</div>\n\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-diagrams\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\n/**\n * Default FlowShape sample\n */\n\nimport {\n  Diagram, NodeModel, UndoRedo, ConnectorModel, PointPortModel, SymbolPalette,\n  SymbolInfo, IDragEnterEventArgs, GridlinesModel, PaletteModel, FlowShapes, Node, PrintAndExport, FlipDirection\n} from '@syncfusion/ej2-diagrams';\nimport { addEvents } from './script/diagram-common';\nimport { ConnectorConstraints, DiagramTools, IExportOptions, IScrollChangeEventArgs, ISelectionChangeEventArgs, NodeConstraints } from '@syncfusion/ej2-diagrams';\nimport { Uploader } from '@syncfusion/ej2-inputs';\nimport { Toolbar } from '@syncfusion/ej2-navigations';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\n//import { openPalette, closePalette, getClassList } from './styles/html-class';\nDiagram.Inject(UndoRedo, PrintAndExport);\n\n\n//Create and add ports for node.\nfunction getPorts(): PointPortModel[] {\n  let ports: PointPortModel[] = [\n    { id: 'port1', shape: 'Circle', offset: { x: 0, y: 0.5 } },\n    { id: 'port2', shape: 'Circle', offset: { x: 0.5, y: 1 } },\n    { id: 'port3', shape: 'Circle', offset: { x: 1, y: .5 } },\n    { id: 'port4', shape: 'Circle', offset: { x: .5, y: 0 } }\n  ];\n  return ports;\n}\n\n//Sets the default values of a connector\nfunction getConnectorDefaults(obj: ConnectorModel): ConnectorModel {\n  if (obj.id.indexOf('connector') !== -1) {\n    obj.targetDecorator = { shape: 'Arrow', width: 10, height: 10 };\n  }\n  return obj;\n}\n\n//Sets the default values of a node\nfunction getNodeDefaults(node: NodeModel): NodeModel {\n  if (node.width === undefined) {\n    node.width = 145;\n  }\n  node.style = { fill: '#357BD2', strokeColor: 'white' };\n  for (let i: number = 0; i < node.annotations.length; i++) {\n    node.annotations[i].style = {\n      color: 'white',\n      fill: 'transparent',\n    };\n  }\n  //Set ports\n  node.ports = getPorts();\n  return node;\n}\n\n//Sets the Node style for DragEnter element.\nfunction dragEnter(args: IDragEnterEventArgs): void {\n  let obj: NodeModel = args.element as NodeModel;\n  if (obj instanceof Node) {\n    let objWidth: number = obj.width;\n    let objHeight: number = obj.height;\n    let ratio: number = 100 / obj.width;\n    obj.width = 100;\n    obj.height *= ratio;\n    obj.offsetX += (obj.width - objWidth) / 2;\n    obj.offsetY += (obj.height - objHeight) / 2;\n    obj.style = { fill: '#357BD2', strokeColor: 'white' };\n  }\n}\n\n//To set default values for elements in symbol palette.\nfunction getSymbolDefaults(symbol: NodeModel): void {\n  symbol.style = { strokeColor: '#757575' };\n  if (symbol.id === 'Terminator' || symbol.id === 'Process' || symbol.id === 'Delay') {\n    symbol.width = 80;\n    symbol.height = 40;\n  } else if (symbol.id === 'Decision' || symbol.id === 'Document' || symbol.id === 'PreDefinedProcess' ||\n    symbol.id === 'PaperTap' || symbol.id === 'DirectData' || symbol.id === 'MultiDocument' || symbol.id === 'Data') {\n    symbol.width = 50;\n    symbol.height = 40;\n  } else {\n    symbol.width = 50;\n    symbol.height = 50;\n  }\n}\n\nfunction getSymbolInfo(symbol: NodeModel): SymbolInfo {\n  return { fit: true };\n}\n\n\n// tslint:disable-next-line:max-func-body-length\n\n  \n  const Window: any = window.location.href\n  if (Window) {\n    if (Window.includes('bootstrap5')) {\n      (document.getElementById('change_themes') as any).href = '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Bootstrap5_Diagram_Builder/style.css';\n    }\n    else if (Window.includes('bootstrap4')) {\n      (document.getElementById('change_themes') as any).href = '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/bootstrap4_Diagram_Builder/style.css';\n    }\n    else if (Window.includes('bootstrap')) {\n      (document.getElementById('change_themes') as any).href = '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Bootstrap_Diagram_Builder/style.css';\n    }\n    else if (Window.includes('material3')) {\n      (document.getElementById('change_themes') as any).href = '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Material3_Diagram_Builder/style.css';\n    }\n    else if (Window.includes('material')) {\n      (document.getElementById('change_themes') as any).href = '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Material_Diagram_Builder/style.css';\n    }\n    else if (Window.includes('fabric')) {\n      (document.getElementById('change_themes') as any).href = '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/fabric_Diagram_Builder/style.css';\n    }\n    else if (Window.includes('fluent')) {\n      (document.getElementById('change_themes') as any).href = '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Fluent_Diagram_Builder/style.css';\n    }\n    else if (Window.includes('tailwind')) {\n      (document.getElementById('change_themes') as any).href = '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Tailwind_Diagram_Builder/style.css';\n    }\n    else if (Window.includes('highcontrast')) {\n      (document.getElementById('change_themes') as any).href = '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/HighContrast_Diagram_Builder/style.css';\n    }\n    else if (Window.includes('fusion')) {\n      (document.getElementById('change_themes') as any).href = '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Fusion_Diagram_Builder/style.css';\n    }\n  }\n\n  let interval: number[] = [\n    1, 9, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75\n  ];\n  let gridlines: GridlinesModel = { lineColor: '#e0e0e0', lineIntervals: interval };\n\n  let bounds: ClientRect = document.getElementById('diagram-space').getBoundingClientRect();\n  let centerX: number = bounds.width / 2;\n\n  // Function to create a node with given properties\n  function createNode(id: string, height: number, offsetX: number, offsetY: number, shape: FlowShapes,\n    annotationContent: string, annotationMargin?: { left: number; right: number }): NodeModel {\n    const node: NodeModel = {\n      id: id,\n      height: height,\n      offsetX: offsetX,\n      offsetY: offsetY,\n      shape: { type: 'Flow', shape: shape },\n      annotations: [{ content: annotationContent, margin: annotationMargin }]\n    };\n    return node;\n  }\n\n  // Initializing the nodes for the diagram\n  const nodes: NodeModel[] = [\n    createNode('NewIdea', 60, centerX - 50, 80, 'Terminator', 'Place Order'),\n    createNode('Meeting', 60, centerX - 50, 160, 'Process', 'Start Transaction'),\n    createNode('BoardDecision', 60, centerX - 50, 240, 'Process', 'Verification'),\n    createNode('Project', 60, centerX - 50, 330, 'Decision', 'Credit card valid?'),\n    createNode('End', 60, centerX - 50, 430, 'Decision', 'Funds available?'),\n    createNode('Payment_method', 60, centerX - 50 + 230, 330, 'Process', 'Enter payment method'),\n    createNode('transaction_entered', 60, centerX - 50, 630, 'Terminator', 'Log transaction'),\n    createNode('Reconcile_entries', 60, centerX - 50 + 180, 630, 'Process', 'Reconcile the entries'),\n    createNode('transaction_completed', 60, centerX - 50, 530, 'Process', 'Complete Transaction'),\n    createNode('Data', 45, centerX - 50 - 190, 530, 'Data', 'Send e-mail', { left: 25, right: 25 }),\n    createNode('Database', 70, centerX - 50 + 175, 530, 'DirectData', 'Customer Database', { left: 25, right: 25 })\n  ];\n\n  //Initializes the connector for the diagram\n  let connectors: ConnectorModel[] = [\n    { id: 'connector1', sourceID: 'NewIdea', targetID: 'Meeting' },\n    { id: 'connector2', sourceID: 'Meeting', targetID: 'BoardDecision' },\n    { id: 'connector3', sourceID: 'BoardDecision', targetID: 'Project' },\n    { id: 'connector4', sourceID: 'Project', annotations: [{ content: 'Yes', style: { fill: 'white' } }], targetID: 'End' },\n    {\n      id: 'connector5', sourceID: 'End',\n      annotations: [{ content: 'Yes', style: { fill: 'white' } }], targetID: 'transaction_completed'\n    },\n    { id: 'connector6', sourceID: 'transaction_completed', targetID: 'transaction_entered' },\n    { id: 'connector7', sourceID: 'transaction_completed', targetID: 'Data' },\n    { id: 'connector8', sourceID: 'transaction_completed', targetID: 'Database' },\n    { id: 'connector9', sourceID: 'Payment_method', targetID: 'Meeting', type: 'Orthogonal', segments: [{ direction: 'Top', type: 'Orthogonal', length: 120 }] },\n    {\n      id: 'connector10', sourceID: 'End', annotations: [{ content: 'No', style: { fill: 'white' } }], type: 'Orthogonal',\n      targetID: 'Payment_method', segments: [{ direction: 'Right', type: 'Orthogonal', length: 100 }]\n    },\n    { id: 'connector11', sourceID: 'Project', annotations: [{ content: 'No', style: { fill: 'white' } }], targetID: 'Payment_method' },\n    { id: 'connector12', style: { strokeDashArray: '2,2' }, sourceID: 'transaction_entered', targetID: 'Reconcile_entries' }\n  ];\n\n  let rotateItems: any = [\n    { iconCss: 'e-icons e-transform-right', text: 'Rotate Clockwise' },\n    { iconCss: 'e-icons e-transform-left', text: 'Rotate Counter-Clockwise' }\n  ];\n  let flipItems: any = [\n    { iconCss: 'e-icons e-flip-horizontal', text: 'Flip Horizontal' },\n    { iconCss: 'e-icons e-flip-vertical', text: 'Flip Vertical' }\n  ];\n  let alignItems: any = [\n    { iconCss: 'sf-icon-align-left-1', text: 'Align Left', },\n    { iconCss: 'sf-icon-align-center-1', text: 'Align Center' },\n    { iconCss: 'sf-icon-align-right-1', text: 'Align Right' },\n    { iconCss: 'sf-icon-align-top-1', text: 'Align Top' },\n    { iconCss: 'sf-icon-align-middle-1', text: 'Align Middle' },\n    { iconCss: 'sf-icon-align-bottom-1', text: 'Align Bottom' },\n  ];\n  let distributeItems: any = [\n    { iconCss: 'sf-icon-distribute-vertical', text: 'Distribute Objects Vertically', },\n    { iconCss: 'sf-icon-distribute-horizontal', text: 'Distribute Objects Horizontally', },\n  ];\n  let orderItems: any = [\n    { iconCss: 'e-icons e-bring-forward', text: 'Bring Forward' },\n    { iconCss: 'e-icons e-bring-to-front', text: 'Bring To Front' },\n    { iconCss: 'e-icons e-send-backward', text: 'Send Backward' },\n    { iconCss: 'e-icons e-send-to-back', text: 'Send To Back' }\n  ];\n  let zoomMenuItems: any = [\n    { text: 'Zoom In' }, { text: 'Zoom Out' }, { text: 'Zoom to Fit' }, { text: 'Zoom to 50%' },\n    { text: 'Zoom to 100%' }, { text: 'Zoom to 200%' },\n  ];\n  let conTypeItems: any = [\n    { text: 'Straight', iconCss: 'e-icons e-line' },\n    { text: 'Orthogonal', iconCss: 'sf-icon-orthogonal' },\n    { text: 'Bezier', iconCss: 'sf-icon-bezier' }\n  ];\n  let shapesItems: any = [\n    { text: 'Rectangle', iconCss: 'e-rectangle e-icons' },\n    { text: 'Ellipse', iconCss: ' e-circle e-icons' },\n    { text: 'Polygon', iconCss: 'e-line e-icons' }\n  ];\n  let exportItems: any = [\n    { text: 'JPG' }, { text: 'PNG' }, { text: 'SVG' }\n  ];\n  let groupItems: any = [\n    { text: 'Group', iconCss: 'e-icons e-group-1' }, { text: 'Ungroup', iconCss: 'e-icons e-ungroup-1' }\n  ];\n\n\n\n  //Initializes diagram control\n  let diagram: Diagram = new Diagram({\n    width: '100%', height: '700px', nodes: nodes, connectors: connectors,\n    drawingObject: {},\n    selectionChange: selectionChange,\n    historyChange: historyChange,\n    tool: DiagramTools.Default,\n    snapSettings: { horizontalGridlines: gridlines, verticalGridlines: gridlines },\n    scrollChange: function (args: IScrollChangeEventArgs) {\n      if (args.panState !== 'Start') {\n        let zoomCurrentValue: any = (document.getElementById(\"btnZoomIncrement\") as any).ej2_instances[0];\n        zoomCurrentValue.content = Math.round(diagram.scrollSettings.currentZoom * 100) + ' %';\n      }\n    },\n    getNodeDefaults: getNodeDefaults,\n    getConnectorDefaults: getConnectorDefaults,\n    dragEnter: dragEnter,\n  });\n  diagram.appendTo('#diagram');\n\n  //Initialize Toolbar component.\n  let toolbarObj: Toolbar = new Toolbar({\n    clicked: function (args: any) { toolbarClick(args); },\n    created: function (args) {\n      if (diagram !== undefined) {\n        let conTypeBtn: DropDownButton = new DropDownButton({\n          items: conTypeItems, iconCss: 'e-ddb-icons e-connector e-icons',\n          select: function (args) { onConnectorSelect(args); }\n        });\n        conTypeBtn.appendTo('#conTypeBtn');\n\n        let btnZoomIncrement: DropDownButton = new DropDownButton({\n          items: zoomMenuItems, content: Math.round(diagram.scrollSettings.currentZoom * 100) + ' %', select: zoomChange,\n        });\n        btnZoomIncrement.appendTo('#btnZoomIncrement');\n\n        let shapesBtn: DropDownButton = new DropDownButton({\n          items: shapesItems, iconCss: 'e-shapes e-icons',\n          select: function (args) { onShapesSelect(args); }\n        });\n        shapesBtn.appendTo('#shapesBtn');\n\n        let exportBtn: DropDownButton = new DropDownButton({\n          items: exportItems, iconCss: 'e-ddb-icons e-export', select: function (args) { onselectExport(args); },\n        });\n        exportBtn.appendTo('#exportBtn');\n\n        let groupBtn: DropDownButton = new DropDownButton({\n          items: groupItems, iconCss: 'e-icons e-group-1', select: function (args) { onSelectGroup(args); }\n        });\n        groupBtn.appendTo('#groupBtn');\n\n        let alignBtn: DropDownButton = new DropDownButton({\n          items: alignItems, iconCss: 'sf-icon-align-center-1', select: function (args) { onSelectAlignObjects(args); }\n        });\n        alignBtn.appendTo('#alignBtn');\n\n        let distributeBtn: DropDownButton = new DropDownButton({\n          items: distributeItems, iconCss: 'sf-icon-distribute-vertical', select: function (args) { onSelectDistributeObjects(args); }\n        });\n        distributeBtn.appendTo('#distributeBtn');\n\n        let orderBtn: DropDownButton = new DropDownButton({\n          items: orderItems, iconCss: 'e-icons e-order', select: function (args) { onSelectOrder(args); }\n        });\n        orderBtn.appendTo('#orderBtn');\n\n        let rotateBtn: DropDownButton = new DropDownButton({\n          items: rotateItems, iconCss: 'e-icons e-repeat', select: function (args) { onSelectRotate(args); }\n        });\n        rotateBtn.appendTo('#rotateBtn');\n\n        let flipBtn: DropDownButton = new DropDownButton({\n          items: flipItems, iconCss: 'e-icons e-flip-horizontal', select: function (args) { onSelectFlip(args); }\n        });\n        flipBtn.appendTo('#flipBtn');\n        refreshOverflow();\n      }\n\n    },\n    items: toolbarItems(),\n    overflowMode: 'Scrollable',\n    width: '100%'\n  });\n\n  toolbarObj.appendTo('#toolbarEditor');\n\n  function refreshOverflow() {\n    setTimeout(() => {\n      toolbarObj.refreshOverflow();\n\n    }, 100);\n  }\n\n  //Initializes toolbar Items.\n  function toolbarItems() {\n    let items: any = [\n      { prefixIcon: 'e-icons e-circle-add', tooltipText: 'New Diagram', id: 'New_Diagram' },\n      { prefixIcon: 'e-icons e-folder-open', tooltipText: 'Open Diagram', id: 'Open_diagram' },\n      { prefixIcon: 'e-icons e-save', tooltipText: 'Save Diagram', id: 'Save' },\n      { prefixIcon: 'e-print e-icons', tooltipText: 'Print Diagram', id: 'Print' },\n      { type: 'Input', tooltipText: 'Export Diagram', template: '<button id=\"exportBtn\" style=\"width:100%;\"></button>', id: 'Export' },\n\n      { type: 'Separator' },\n\n      { disabled: true, prefixIcon: 'e-cut e-icons', tooltipText: 'Cut', cssClass: 'tb-item-middle tb-item-lock-category', id: 'Cut' },\n      { disabled: true, prefixIcon: 'e-copy e-icons', tooltipText: 'Copy', cssClass: 'tb-item-middle tb-item-lock-category', id: 'Copy' },\n      { prefixIcon: 'e-icons e-paste', tooltipText: 'Paste', disabled: true, id: 'Paste' },\n      { type: 'Separator' },\n\n      { disabled: true, prefixIcon: 'e-icons e-undo tb-icons', tooltipText: 'Undo', cssClass: 'tb-item-start tb-item-undo', id: 'Undo' },\n      { disabled: true, prefixIcon: 'e-icons e-redo tb-icons', tooltipText: 'Redo', cssClass: 'tb-item-end tb-item-redo', id: 'Redo' },\n\n      { type: 'Separator', },\n\n      { prefixIcon: 'e-pan e-icons', tooltipText: 'Pan Tool', cssClass: 'tb-item-start pan-item', id: 'Pan_tool' },\n      { prefixIcon: 'e-mouse-pointer e-icons', tooltipText: 'Select Tool', cssClass: 'tb-item-middle tb-item-selected', id: 'Select_tool' },\n      { tooltipText: 'Draw Connectors', template: '<button id=\"conTypeBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle', id: 'Draw_con' },\n      { tooltipText: 'Draw Shapes', template: '<button id=\"shapesBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle', id: 'Draw_shapes' },\n      { prefixIcon: 'e-caption e-icons', tooltipText: 'Text Tool', cssClass: 'tb-item-end', id: 'Text_tool' },\n\n      { type: 'Separator', },\n\n      { disabled: true, prefixIcon: 'e-icons e-lock', tooltipText: 'Lock', cssClass: 'tb-item-middle tb-item-lock-category', id: 'Lock' },\n      { disabled: true, prefixIcon: 'e-trash e-icons', tooltipText: 'Delete', cssClass: 'tb-item-middle tb-item-lock-category', id: 'Delete' },\n\n      { type: 'Separator', align: 'Center' },\n\n      { disabled: true, type: 'Input', tooltipText: 'Align Objects', template: '<button id=\"alignBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle  tb-item-align-category', id: 'Align_objects' },\n      { disabled: true, type: 'Input', tooltipText: 'Distribute Objects', template: '<button id=\"distributeBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle tb-item-space-category', id: 'Distribute_objects' },\n\n      { type: 'Separator', },\n\n      { disabled: true, type: 'Input', tooltipText: 'Order Commands', template: '<button id=\"orderBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle tb-item-lock-category', id: 'Order' },\n\n      { type: 'Separator' },\n\n      { disabled: true, type: 'Input', tooltipText: 'Group/Ungroup', template: '<button id=\"groupBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle tb-item-align-category', id: 'Group' },\n\n      { type: 'Separator' },\n\n      { disabled: true, type: 'Input', tooltipText: 'Rotate', template: '<button id=\"rotateBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle tb-item-lock-category', id: 'Rotate' },\n\n      { type: 'Separator' },\n\n      { disabled: true, type: 'Input', tooltipText: 'Flip', template: '<button id=\"flipBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle tb-item-lock-category', id: 'Flip' },\n\n      { type: 'Separator' },\n\n      { cssClass: 'tb-item-end tb-zoom-dropdown-btn', template: '<button id=\"btnZoomIncrement\"></button>', id: 'Zoom' },\n    ];\n    return items;\n  }\n\n\n  //To handle toolbar click\n  function toolbarClick(args: any) {\n    let item = args.item.tooltipText;\n    switch (item) {\n      case 'Undo':\n        diagram.undo();\n        break;\n      case 'Redo':\n        diagram.redo();\n        break;\n      case 'Lock':\n        lockObject(args);\n        break;\n      case 'Cut':\n        diagram.cut();\n        updateToolbarItems([\"Paste\"], false);\n        break;\n      case 'Copy':\n        diagram.copy();\n        updateToolbarItems([\"Paste\"], false);\n        break;\n      case 'Paste':\n        diagram.paste();\n        break;\n      case 'Delete':\n        diagram.remove();\n        break;\n      case 'Select Tool':\n        diagram.clearSelection();\n        diagram.tool = DiagramTools.Default;\n        break;\n      case 'Text Tool':\n        diagram.clearSelection();\n        diagram.selectedItems.userHandles = [];\n        diagram.drawingObject = { shape: { type: 'Text' } };\n        diagram.tool = DiagramTools.ContinuousDraw;\n        break;\n      case 'Pan Tool':\n        diagram.clearSelection();\n        diagram.tool = DiagramTools.ZoomPan;\n        break;\n      case 'New Diagram':\n        diagram.clear();\n        historyChange(args);\n        break;\n      case 'Print Diagram':\n        printDiagram(args);\n        break;\n      case 'Save Diagram':\n        download(diagram.saveDiagram());\n        break;\n      case 'Open Diagram':\n        document\n          .getElementsByClassName('e-file-select-wrap')[0]\n          .querySelector('button')\n          .click();\n        break;\n    }\n    diagram.dataBind();\n  }\n  //To enable and disable the toolbar items based on selection.\n  function selectionChange(args: ISelectionChangeEventArgs) {\n    if (args.state === 'Changed') {\n      let selectedItems: any = diagram.selectedItems.nodes;\n      selectedItems = selectedItems.concat(\n        (diagram.selectedItems as any).connectors\n      );\n      if (selectedItems.length === 0) {\n\n        updateToolbarItems(['Cut', 'Copy', 'Lock', 'Delete', 'Order', 'Rotate', 'Flip'], true);\n        disableMultiselectedItems();\n      }\n      if (selectedItems.length === 1) {\n        enableItems();\n        disableMultiselectedItems();\n        if (selectedItems[0].children !== undefined && selectedItems[0].children.length > 0) {\n          updateToolbarItems([\"Group\"], false);\n        }\n        else {\n          updateToolbarItems([\"Group\"], true);\n        }\n      }\n\n      if (selectedItems.length > 1) {\n        enableItems();\n        updateToolbarItems(['Align_objects', 'Group','Distribute_objects'],false );\n        //To enable distribute objcets when selected items length is greater than 2\n        if (selectedItems.length > 2) {\n          updateToolbarItems(['Distribute_objects'], false);\n        }\n        else {\n          updateToolbarItems(['Distribute_objects'], true);\n        }\n      }\n    }\n  }\n\n  //To enable and disable undo/redo button.\n  function historyChange(args: any) {\n    updateToolbarItems(['Undo'], diagram.historyManager.undoStack.length === 0);\n    updateToolbarItems(['Redo'], diagram.historyManager.redoStack.length === 0);\n  }\n\n\n  let uploadObject: Uploader = new Uploader({\n    asyncSettings: {\n      saveUrl: 'http://localhost:62728/api/FileUploader/Save',\n      removeUrl: 'http://localhost:62728/api/FileUploader/Remove'\n    }, success: onUploadSuccess, showFileList: false\n  });\n  uploadObject.appendTo('#fileupload');\n\n  // Set up print options and initiate printing of the diagram.\n  function printDiagram(args: any) {\n    let options: IExportOptions = {};\n    options.mode = 'Download';\n    options.region = 'Content';\n    options.multiplePage = diagram.pageSettings.multiplePage;\n    options.pageHeight = diagram.pageSettings.height;\n    options.pageWidth = diagram.pageSettings.width;\n    diagram.print(options);\n  }\n\n  //To enable toolbar items.\n  function enableItems() {\n    updateToolbarItems( ['Cut', 'Copy', 'Lock', 'Delete', 'Order', 'Rotate', 'Flip'],false);\n  }\n\n  //To disable toolbar items while multiselection.\n  function disableMultiselectedItems() {\n    updateToolbarItems(['Align_objects', 'Distribute_objects', 'Group'],true );\n  }\n\n  //To handle selection of connectors.\n  function onConnectorSelect(args: any) {\n    diagram.clearSelection();\n    diagram.drawingObject = { type: args.item.text };\n    diagram.tool = DiagramTools.ContinuousDraw;\n    diagram.selectedItems.userHandles = [];\n    diagram.dataBind();\n  }\n\n  //To handle selection of shapes.\n  function onShapesSelect(args: any) {\n    diagram.clearSelection();\n    diagram.drawingObject = { shape: { shape: args.item.text } };\n    diagram.tool = DiagramTools.ContinuousDraw;\n    diagram.selectedItems.userHandles = [];\n    diagram.dataBind();\n  }\n\n  //Export the diagraming object based on the format.\n  function onselectExport(args: any) {\n    let exportOptions: IExportOptions = {};\n    exportOptions.format = args.item.text;\n    exportOptions.mode = 'Download';\n    exportOptions.region = 'PageSettings';\n    exportOptions.fileName = 'Export';\n    exportOptions.margin = { left: 0, top: 0, bottom: 0, right: 0 };\n    diagram.exportDiagram(exportOptions);\n  }\n\n  //To perform group and ungroup diagram objects.\n  function onSelectGroup(args: any) {\n    if (args.item.text === 'Group') {\n      diagram.group();\n    }\n    else if (args.item.text === 'Ungroup') {\n      diagram.unGroup();\n    }\n  }\n\n  //To align selelcted diagram objects.\n  function onSelectAlignObjects(args: any) {\n    let item: any = args.item.text;\n    let alignType = item.replace('Align', '');\n    let alignType1 = alignType.charAt(0).toUpperCase() + alignType.slice(1);\n    diagram.align(alignType1.trim());\n  }\n\n  //To distribute selected objects horizontally and vertically.\n  function onSelectDistributeObjects(args: any) {\n    diagram.distribute(args.item.text === 'Distribute Objects Vertically' ? 'BottomToTop' : 'RightToLeft');\n  }\n\n  //To execute order commands\n  function onSelectOrder(args: any) {\n    switch (args.item.text) {\n      case 'Bring Forward':\n        diagram.moveForward();\n        break;\n      case 'Bring To Front':\n        diagram.bringToFront();\n        break;\n      case 'Send Backward':\n        diagram.sendBackward();\n        break;\n      case 'Send To Back':\n        diagram.sendToBack();\n        break;\n    }\n  }\n\n  //To rotate the selected objects.\n  function onSelectRotate(args: any) {\n    diagram.rotate(diagram.selectedItems, args.item.text === 'Rotate Clockwise' ? 90 : -90);\n  }\n\n  //To flip diagram objects\n  function onSelectFlip(args: any) {\n    flipObjects(args.item.text);\n  }\n\n  // To flip diagram objects\n  function flipObjects(flipType: any) {\n    let selectedObjects = diagram.selectedItems.nodes.concat((diagram.selectedItems as any).connectors);\n    for (let i: number = 0; i < selectedObjects.length; i++) {\n      selectedObjects[i].flip ^= flipType === 'Flip Horizontal' ? FlipDirection.Horizontal : FlipDirection.Vertical;\n    }\n    diagram.dataBind();\n  }\n\n  //set up uploaded file and call loadDiagram\n  function onUploadSuccess(args: any) {\n    let file = args.file;\n    let rawFile = file.rawFile;\n    let reader = new FileReader();\n    reader.readAsText(rawFile);\n    reader.onloadend = loadDiagram;\n  }\n  function loadDiagram(event: any) {\n    diagram.loadDiagram(event.target.result);\n  }\n\n  //Function to download the diagram.\n  function download(data: any) {\n    if ((window.navigator as any).msSaveBlob) {\n      let blob: Blob = new Blob([data], { type: 'data:text/json;charset=utf-8,' });\n      (window.navigator as any).msSaveOrOpenBlob(blob, 'Diagram.json');\n    }\n    else {\n      let dataString = 'data:text/json;charset=utf-8,' + encodeURIComponent(data);\n      let element = document.createElement('a');\n      element.href = dataString;\n      element.download = 'Diagram.json';\n      document.body.appendChild(element);\n      element.click();\n      element.remove();\n    }\n  }\n\n  // To lock the selected diagram object.\n  function lockObject(args: any) {\n    let isChecked;\n    for (let i: number = 0; i < diagram.selectedItems.nodes.length; i++) {\n      let node = diagram.selectedItems.nodes[i];\n      if (node.constraints & NodeConstraints.Drag) {\n        node.constraints = NodeConstraints.PointerEvents | NodeConstraints.Select | NodeConstraints.ReadOnly;\n        isChecked = true;\n      } else {\n        node.constraints = NodeConstraints.Default;\n        isChecked = false;\n      }\n    }\n    for (let j: number = 0; j < diagram.selectedItems.connectors.length; j++) {\n      let connector = diagram.selectedItems.connectors[j];\n      if (connector.constraints & ConnectorConstraints.Drag) {\n        connector.constraints = ConnectorConstraints.PointerEvents | ConnectorConstraints.Select | ConnectorConstraints.ReadOnly;\n        isChecked = true;\n      } else {\n        connector.constraints = ConnectorConstraints.Default;\n        isChecked = false;\n      }\n    }\n  updateToolbarItems([\"Cut\", \"Copy\", \"Delete\", \"Order\", \"Rotate\", \"Flip\"],isChecked);\n  diagram.dataBind();\n  }\n  \n\n  // Enable or disable specific toolbar items\n  function updateToolbarItems(itemIds :string[], disabled: boolean) {\n    itemIds.forEach((itemId) => {\n      const item = toolbarObj.items.find((item) => item.id === itemId);\n      if (item) {\n        item.disabled = disabled;\n      }\n    });\n  }\n\n  // To perform zoom operation.\n  function zoomChange(args: any) {\n    let zoomCurrentValue: any = (document.getElementById(\"btnZoomIncrement\") as any).ej2_instances[0];\n    let currentZoom: any = diagram.scrollSettings.currentZoom;\n    let zoom: any = {};\n    switch (args.item.text) {\n      case 'Zoom In':\n        diagram.zoomTo({ type: 'ZoomIn', zoomFactor: 0.2 });\n        zoomCurrentValue.content = (diagram.scrollSettings.currentZoom * 100).toFixed() + '%';\n        break;\n      case 'Zoom Out':\n        diagram.zoomTo({ type: 'ZoomOut', zoomFactor: 0.2 });\n        zoomCurrentValue.content = (diagram.scrollSettings.currentZoom * 100).toFixed() + '%';\n        break;\n      case 'Zoom to Fit':\n        zoom.zoomFactor = 1 / currentZoom - 1;\n        diagram.zoomTo(zoom);\n        zoomCurrentValue.content = diagram.scrollSettings.currentZoom;\n        break;\n      case 'Zoom to 50%':\n        if (currentZoom === 0.5) {\n          currentZoom = 0;\n          zoom.zoomFactor = (0.5 / currentZoom) - 1;\n          diagram.zoomTo(zoom);\n        }\n        else {\n          zoom.zoomFactor = (0.5 / currentZoom) - 1;\n          diagram.zoomTo(zoom);\n        }\n        break;\n      case 'Zoom to 100%':\n        if (currentZoom === 1) {\n          currentZoom = 0;\n          zoom.zoomFactor = (1 / currentZoom) - 1;\n          diagram.zoomTo(zoom);\n        }\n        else {\n          zoom.zoomFactor = (1 / currentZoom) - 1;\n          diagram.zoomTo(zoom);\n        }\n        break;\n      case 'Zoom to 200%':\n        if (currentZoom === 2) {\n          currentZoom = 0;\n          zoom.zoomFactor = (2 / currentZoom) - 1;\n          diagram.zoomTo(zoom);\n        }\n        else {\n          zoom.zoomFactor = (2 / currentZoom) - 1;\n          diagram.zoomTo(zoom);\n        }\n        break;\n    }\n\n    zoomCurrentValue.content = Math.round(diagram.scrollSettings.currentZoom * 100) + ' %';\n\n  }\n\n  //Function to get flowshapes.\n  function getFlowShape(id: string, shapeType: FlowShapes): NodeModel {\n    let flowshape: NodeModel = { id: id, shape: { type: 'Flow', shape: shapeType } };\n    return flowshape;\n  }\n  //Initialize the flowshapes for the symbol palatte\n  let flowShapes: NodeModel[] = [\n    getFlowShape('Terminator', 'Terminator'),\n    getFlowShape('Process', 'Process'),\n    getFlowShape('Decision', 'Decision'),\n    getFlowShape('Document', 'Document'),\n    getFlowShape('PreDefinedProcess', 'PreDefinedProcess'),\n    getFlowShape('PaperTap', 'PaperTap'),\n    getFlowShape('DirectData', 'DirectData'),\n    getFlowShape('SequentialData', 'SequentialData'),\n    getFlowShape('Sort', 'Sort'),\n    getFlowShape('MultiDocument', 'MultiDocument'),\n    getFlowShape('Collate', 'Collate'),\n    getFlowShape('Or', 'Or'),\n    getFlowShape('Extract', 'Extract'),\n    getFlowShape('Merge', 'Merge'),\n    getFlowShape('OffPageReference', 'OffPageReference'),\n    getFlowShape('SequentialAccessStorage', 'SequentialAccessStorage'),\n    getFlowShape('Annotation', 'Annotation'),\n    getFlowShape('Annotation2', 'Annotation2'),\n    getFlowShape('Data', 'Data'),\n    getFlowShape('Card', 'Card'),\n    getFlowShape('Delay', 'Delay'),\n  ];\n\n  //Initializes connector symbols for the symbol palette\n  let connectorSymbols: ConnectorModel[] = [\n    {\n      id: 'Link1', type: 'Orthogonal', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 60, y: 60 },\n      targetDecorator: { shape: 'Arrow', style: { strokeColor: '#757575', fill: '#757575' } },\n      style: { strokeWidth: 1, strokeColor: '#757575' }\n    },\n    {\n      id: 'link2', type: 'Orthogonal', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 60, y: 60 },\n      style: { strokeWidth: 1, strokeColor: '#757575' }, targetDecorator: { shape: 'None' }\n    },\n    {\n      id: 'Link3', type: 'Straight', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 60, y: 60 },\n      targetDecorator: { shape: 'Arrow', style: { strokeColor: '#757575', fill: '#757575' } },\n      style: { strokeWidth: 1, strokeColor: '#757575' }\n    },\n    {\n      id: 'link4', type: 'Straight', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 60, y: 60 },\n      style: { strokeWidth: 1, strokeColor: '#757575' }, targetDecorator: { shape: 'None' }\n    },\n    {\n      id: 'link5', type: 'Bezier', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 60, y: 60 },\n      style: { strokeWidth: 1, strokeColor: '#757575' }, targetDecorator: { shape: 'None' }\n    },\n  ];\n\n  let palettes: PaletteModel[] = [\n    { id: 'flow', expanded: true, symbols: flowShapes, iconCss: 'e-ddb-icons e-flow', title: 'Flow Shapes' },\n    { id: 'connectors', expanded: true, symbols: connectorSymbols, iconCss: 'e-ddb-icons e-connector', title: 'Connectors' }\n  ];\n\n  //Initializes the symbol palette\n  let palette: SymbolPalette = new SymbolPalette({\n    expandMode: 'Multiple', palettes: palettes,\n    width: '100%', height: '700px', symbolHeight: 60, symbolWidth: 60,\n    symbolMargin: { left: 15, right: 15, top: 15, bottom: 15 },\n    enableSearch: true,\n    getNodeDefaults: getSymbolDefaults, getSymbolInfo: getSymbolInfo\n  });\n  palette.appendTo('#symbolpalette');\n\n  addEvents();\n\n"}