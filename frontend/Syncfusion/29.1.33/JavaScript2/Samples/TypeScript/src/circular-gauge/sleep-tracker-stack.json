{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div class=\"control-section\">\n        <div id=\"gauge\"></div>\n    </div>\n    \n    \n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-circulargauge\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { CircularGauge, ILoadedEventArgs, GaugeTheme, IAxisLabelRenderEventArgs, Annotations } from '@syncfusion/ej2-circulargauge';\nCircularGauge.Inject(Annotations);\n// custom code start\n\n\n// custom code end\n\n    let circulargauge: CircularGauge = new CircularGauge({\n        background:'transparent',\n        axes: [{\n            radius: '70%',\n            startAngle: 0,\n            endAngle: 0,\n            minimum: 0,\n            maximum: 12,\n            majorTicks: {\n                offset: 4,\n                width: 2,\n                height: 12,\n                interval: 1\n            },\n            lineStyle: { width: 0 },\n            minorTicks: {\n                offset: 4,\n                width: 1,\n                height: 7,\n                interval: 0.2\n            },\n            labelStyle: {\n                font: {\n                    fontFamily: 'inherit'\n                },\n                hiddenLabel: 'First'\n            },\n            pointers: [{\n                value: 4.7,\n                radius: '97%',\n                type: 'Marker',\n                markerShape: 'Image',\n                markerWidth: 28,\n                markerHeight: 28,\n                imageUrl: '//npmci.syncfusion.com/development/demos/src/circular-gauge/images/sun-icon.png',\n                animation: {\n                    enable: false\n                },\n            },\n            {\n                value: 9,\n                radius: '98%',\n                type: 'Marker',\n                markerShape: 'Image',\n                markerWidth: 28,\n                markerHeight: 28,\n                imageUrl: '//npmci.syncfusion.com/development/demos/src/circular-gauge/images/moon-icon.png',\n                animation: {\n                    enable: false,\n                },\n            }\n            ],\n            ranges: [{\n                start: 0, end: 4.7, startWidth: 4, endWidth: 4, color: '#6453D0'\n            }, {\n                start: 12, end: 9, startWidth: 4, endWidth: 4, color: '#6453D0'\n            },\n            {\n                start: 4.7, end: 9, startWidth: 4, endWidth: 4, color: '#d7d3ed'\n            }],\n            annotations: [{\n                description:'Mon, 5 Apr',\n                content: '<div style=\"font-size:15px;border-radius: 20px;border: 2px solid gray;padding: 5px 4px 5px;width: 93%;text-align: center;margin-left: 67px;\">Mon, 5 Apr</div>',\n                angle: 342, radius: '129%', zIndex: '1'\n            },\n            {\n                description:'07 hrs 43 mins',\n                content: '<div style=\"font-size:15px;margin-left:25px\">07 hrs 43 mins</div>',\n                angle: 185,\n                radius: '120%',\n                zIndex: '1'\n            },\n            {\n                description:'Sleep time',\n                content: '<div style=\"font-size:15px;margin-left: 34px;\">Sleep Time</div>',\n                angle: 185,\n                radius: '140%',\n                zIndex: '1'\n            },\n            {\n                description:'4 Apr 9:00 PM',\n                content: '<div style=\"color:#6453D0;font-size:15px;margin-top: 54px;margin-left:28px\"><p style=\"text-align: center;\">4 Apr</p><p style=\"margin-top: -10px;\">9:00 PM</p></div>',\n                angle: 285,\n                radius: '60%',\n                zIndex: '1'\n            },\n            {\n                description:'-',\n                content: '<div style=\"color:#6453D0;margin-top: -8px;\"> - </div>',\n                angle: 0,\n                radius: '0%',\n                zIndex: '1'\n            },\n            {\n                description:'5 Apr 4:43 AM',\n                content: '<div style=\"color:#6453D0;font-size:15px;margin-left: -15px;margin-top: 56px;\"><p style=\"text-align: center;\">5 Apr </p><p style=\"margin-top: -10px;\">4:43 AM</p></div>',\n                angle: 70,\n                radius: '50%',\n                zIndex: '1'\n            },\n            ]\n        }],\n        load: (args: ILoadedEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            // custom code end\n        },\n        axisLabelRender(args: IAxisLabelRenderEventArgs): void {\n            if (args.value == 3 || args.value == 6 || args.value == 9 || args.value == 12) {\n                args.text = args.value.toString();\n            }\n            else {\n                args.text = \"\";\n            }\n        }\n    });\n    circulargauge.appendTo('#gauge');\n"}