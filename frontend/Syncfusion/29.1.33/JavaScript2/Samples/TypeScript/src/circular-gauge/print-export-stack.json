{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div>\n        <div class=\"col-md-8 control-section\">\n            <div class=\"control-section\">\n                <div id=\"gauge\"></div>\n            </div>\n        </div>\n        <!-- property panel-->\n        <div class=\"col-md-4 property-section\">\n            <br>\n            <table id=\"property\" title=\"Properties\" style=\"width: 100%; margin-left:-10px\" role=\"none\">\n                <tbody>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div style=\"font-size: 14px;\"> Export Type </div>\n                        </td>\n                        <td>\n                            <div>\n                                <select id=\"type\">\n                                    <option value=\"JPEG\" selected=\"\">JPEG</option>\n                                    <option value=\"PNG\">PNG</option>\n                                    <option value=\"SVG\">SVG</option>\n                                    <option value=\"PDF\">PDF</option>\n                                </select>\n                                \n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div style=\"font-size: 14px;\"> File Name </div>\n                        </td>\n                        <td>\n                            <div style=\"margin-top: 0px;\">\n                                <input value=\"Circular Gauge\" type=\"text\" id=\"fileName\">\n                            </div>\n                        </td>\n                    </tr>\n                    <tr id=\"button-control\" style=\"height: 70px\" align=\"center\">\n                        <td align=\"right\" style=\"padding-right: 2%;\">\n                            <div>\n                                <button id=\"export\">Export</button>\n                            </div>\n                        </td>\n                        <td align=\"left\" style=\"padding-left: 5%;\">\n                            <div>\n                                <button id=\"print\">Print</button>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        \n        \n        \n</div></main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-circulargauge\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { CircularGauge, ILoadedEventArgs, GaugeTheme, ExportType, Print, ImageExport, PdfExport } from '@syncfusion/ej2-circulargauge';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { TextBox } from '@syncfusion/ej2-inputs';\nCircularGauge.Inject(Print, ImageExport, PdfExport);\n// custom code start\n\n\n// custom code end\n\n    let circulargauge: CircularGauge = new CircularGauge({\n        allowPrint: true,\n        allowImageExport: true,\n        allowPdfExport: true,\n        background:'transparent',\n        axes: [{\n            radius: '80%',\n            startAngle: 0,\n            endAngle: 0,\n            direction: 'AntiClockWise',\n            majorTicks: {\n                position: 'Outside',\n                width: 1,\n                height: 25,\n                interval: 10,\n                useRangeColor: true\n            },\n            lineStyle: { width: 0 },\n            minorTicks: {\n                position: 'Outside',\n                width: 1,\n                height: 8,\n                interval: 2,\n                useRangeColor: true\n            },\n            ranges: [\n                {\n                    start: 0, end: 32,\n                    radius: '90%',\n                    startWidth: 10, endWidth: 35,\n                    color: '#F8A197',\n                },\n                {\n                    start: 32, end: 70,\n                    radius: '90%',\n                    startWidth: 10, endWidth: 35,\n                    color: '#C45072',\n                },\n                {\n                    start: 70, end: 100,\n                    radius: '90%',\n                    startWidth: 10, endWidth: 35,\n                    color: '#1B679F',\n                }],\n            labelStyle: {\n                font: {\n                    color: '#424242',\n                    fontFamily: 'inherit',\n                    size: '12px',\n                    fontWeight: 'Regular'\n                },\n                hiddenLabel: 'Last',\n                offset: 2,\n                position: 'Outside',\n                useRangeColor: true\n            },\n            pointers: []\n        }],\n        load: (args: ILoadedEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    circulargauge.appendTo('#gauge');\n\n    let mode: DropDownList = new DropDownList({\n        index: 0,\n        width: '100%'\n    });\n    mode.appendTo('#type');\n    let exportGauge: Button = new Button({\n        isPrimary: true\n    });\n    exportGauge.appendTo('#export');\n    let fileText: TextBox = new TextBox({\n        value: 'Circular Gauge',\n        width: '100%'\n    });\n    fileText.appendTo('#fileName');\n\n    document.getElementById('export').onclick = () => {\n        let fileName: string = fileText.value;\n        circulargauge.export(<ExportType>mode.value, fileName);\n    };\n    let printGauge: Button = new Button({\n        isPrimary: true\n    });\n    printGauge.appendTo('#print');\n    document.getElementById('print').onclick = () => {\n        circulargauge.print();\n    };\n"}