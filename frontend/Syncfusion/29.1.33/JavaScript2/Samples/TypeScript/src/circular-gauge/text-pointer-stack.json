{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div class=\"control-section\">\n        <div id=\"gauge\"></div>\n    </div>\n    \n    \n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-circulargauge\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { CircularGauge, ILoadedEventArgs, GaugeTheme } from '@syncfusion/ej2-circulargauge';\n// custom code start\n\n\n// custom code end\n\n    let circulargauge: CircularGauge = new CircularGauge({\n        centerY: '75%',\n        background: 'transparent',\n        axes: [{\n            radius: '120%',\n            startAngle: 270,\n            endAngle: 90,\n            minimum: 0,\n            maximum: 120,\n            rangeGap: 3,\n            majorTicks: {\n                width: 0\n            },\n            lineStyle: { width: 0 },\n            minorTicks: {\n                width: 0\n            },\n            labelStyle: {\n                font: {\n\n                    size: '0px'\n                },\n                offset: -5\n            },\n            pointers: [{\n                value: 82,\n                radius: '60%',\n                pointerWidth: 10,\n                needleStartWidth: 1,\n                needleEndWidth: 1,\n                cap: {\n                    radius: 0\n                },\n                animation: {\n                    enable: true,\n                },\n                textStyle: {\n                    fontFamily: 'inherit',\n                    size: '18px'\n                }\n            },\n            {\n                value: 20,\n                radius: '85%',\n                text: 'Poor',\n                pointerWidth: 10,\n                type: 'Marker',\n                markerShape: 'Text',\n                cap: {\n                    radius: 0\n                },\n                color: 'transparent',\n                animation: {\n                    enable: false,\n                },\n                textStyle: {\n                    fontFamily: 'inherit',\n                    size: '18px'\n                },\n                needleTail:\n                {\n                    length: '0%'\n                }\n            },\n            {\n                value: 60,\n                radius: '85%',\n                text: 'Average',\n                pointerWidth: 10,\n                type: 'Marker',\n                markerShape: 'Text',\n                cap: {\n                    radius: 0\n                },\n                color: 'transparent',\n                animation: {\n                    enable: false,\n                },\n                textStyle: {\n                    fontFamily: 'inherit',\n                    size: '18px'\n                }\n            },\n            {\n                value: 100,\n                radius: '85%',\n                text: 'Good',\n                pointerWidth: 10,\n                type: 'Marker',\n                markerShape: 'Text',\n                cap: {\n                    radius: 0\n                },\n                color: 'transparent',\n                animation: {\n                    enable: false,\n                },\n                textStyle: {\n                    fontFamily: 'inherit',\n                    size: '18px'\n                }\n            },\n            ],\n            ranges: [{\n                start: 0,\n                end: 20,\n                radius: '80%',\n                startWidth: 85,\n                endWidth: 85,\n                color: '#dd3800'\n            },\n            {\n                start: 20.5,\n                end: 40,\n                radius: '80%',\n                startWidth: 85,\n                endWidth: 85,\n                color: '#ff4100'\n            },\n            {\n                start: 40.5,\n                end: 60,\n                radius: '80%',\n                startWidth: 85,\n                endWidth: 85,\n                color: '#ffba00'\n            },\n            {\n                start: 60.5,\n                end: 80,\n                radius: '80%',\n                startWidth: 85,\n                endWidth: 85,\n                color: '#ffdf10'\n            },\n            {\n                start: 80.5,\n                end: 100,\n                radius: '80%',\n                startWidth: 85,\n                endWidth: 85,\n                color: '#8be724'\n            },\n            {\n                start: 100.5,\n                end: 120,\n                radius: '80%',\n                startWidth: 85,\n                endWidth: 85,\n                color: '#64be00'\n            }\n            ]\n        }],\n        load: function (args) {\n            // custom code start\n            var selectTheme = location.hash.split('/')[1];\n            selectTheme = selectTheme ? selectTheme : 'Material';\n            args.gauge.theme = (selectTheme.charAt(0).toUpperCase() +\n                selectTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    circulargauge.appendTo('#gauge');\n"}