{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div id=\"range-main-container\">\n        <div class=\"col-md-8 control-section\">\n            <div class=\"content-wrapper\">\n                <div id=\"legend-container\"></div>\n            </div>\n        </div>\n        <br>\n        <div class=\"col-md-4 property-section\">\n            <table id=\"property\" title=\"Properties\" style=\"width: 100%; margin-left:-10px\" role=\"none\">\n                <colgroup>\n                    <col span=\"1\" style=\"width: 60%;\">\n                    <col span=\"1\" style=\"width: 40%;\">\n                </colgroup>\n                <tbody>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div id=\"enablelegend\" style=\"font-size: 14px;\">Show legend </div>\n                        </td>\n                        <td>\n                            <div id=\"checkbox1\" style=\"padding-top: 0px;margin-left: -8px;\">\n                                <input type=\"checkbox\" id=\"enable\">\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div id=\"togglelegend\" style=\"width: 80%; font-size: 14px;\">Show range when the legend item is toggled</div>\n                        </td>\n                        <td>\n                            <div id=\"checkbox2\" style=\"padding-top: 0px;margin-left: -8px;\">\n                                <input type=\"checkbox\" id=\"toggle\">\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div style=\"font-size: 14px;\"> Position </div>\n                        </td>\n                        <td>\n                            <div style=\"width: 100%\">\n                                <select id=\"position\" class=\"form-control\">\n                                    <option value=\"Bottom\" selected=\"true\">Bottom</option>\n                                    <option value=\"Top\">Top</option>\n                                    <option value=\"Left\">Left</option>\n                                    <option value=\"Right\">Right</option>\n                                    <option value=\"Auto\">Auto</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div style=\"font-size: 14px;\"> Alignment </div>\n                        </td>\n                        <td>\n                            <div style=\"width: 100%\">\n                                <select id=\"alignment\" class=\"form-control\">\n                                    <option value=\"Center\" selected=\"true\">Center</option>\n                                    <option value=\"Far\">Far</option>\n                                    <option value=\"Near\">Near</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div style=\"font-size: 14px;\"> Shape </div>\n                        </td>\n                        <td>\n                            <div style=\"width: 100%\">\n                                <select id=\"shape\" class=\"form-control\">\n                                    <option value=\"Circle\" selected=\"true\">Circle</option>\n                                    <option value=\"Rectangle\">Rectangle</option>\n                                    <option value=\"Triangle\">Triangle</option>\n                                    <option value=\"Diamond\">Diamond</option>\n                                    <option value=\"InvertedTriangle\">Inverted triangle</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <style>\n        #checkbox1 {\n            margin-top: 2px;\n        }\n        \n        .e-view.fluent2 #checkbox1 , .e-view.fluent2-dark #checkbox1,\n        .e-view.fluent2 #checkbox2 , .e-view.fluent2-dark #checkbox2 {\n            padding-left: 1px;  \n        }\n        .fluent2-highcontrast #checkbox1 {\n            padding-left: 1px;\n        }\n        .fluent2-highcontrast #checkbox2 {\n            padding-left: 1px;\n        }\n    </style>\n    \n    \n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-circulargauge\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-icons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { CircularGauge, Annotations, Legend, Alignment, GaugeShape, LegendPosition, ILoadedEventArgs, GaugeTheme } from '@syncfusion/ej2-circulargauge';\nimport { CheckBox, ChangeEventArgs as CheckBoxChangeEvents } from '@syncfusion/ej2-buttons';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { EmitType } from '@syncfusion/ej2-base';\nCircularGauge.Inject(Annotations, Legend);\n// custom code start\n\n\n// custom code end\n\n    let circulargauge: CircularGauge = new CircularGauge({\n        title: 'Measure of wind speed in Km/h',\n        background:'transparent',\n        titleStyle: {\n            fontFamily: 'inherit'\n        },\n        legendSettings: {\n            visible: true,\n            position: 'Bottom',\n            textStyle: {\n                fontFamily: 'inherit',\n                size: '12px'\n            }\n        },\n        axes: [{\n            lineStyle: { width: 2 },\n            labelStyle: {\n                position: 'Inside', useRangeColor: false,\n                font: { fontFamily: 'inherit' }\n            }, majorTicks: { height: 16, color: '#9E9E9E', interval: 20 }, minorTicks: { height: 8, interval: 10 },\n            startAngle: 210, endAngle: 150, minimum: 0, maximum: 120, radius: '80%',\n            ranges: [\n                { start: 0, end: 5, color: '#ccffff', radius: '110%', legendText: 'Light air' },\n                { start: 5, end: 11, color: '#99ffff', radius: '110%', legendText: 'Light breeze' },\n                { start: 11, end: 19, color: '#99ff99', radius: '110%', legendText: 'Gentle breeze' },\n                { start: 19, end: 28, color: '#79ff4d', radius: '110%', legendText: 'Moderate breeze' },\n                { start: 28, end: 49, color: '#c6ff1a', radius: '110%', legendText: 'Strong breeze' },\n                { start: 49, end: 74, color: '#e6ac00', radius: '110%', legendText: 'Gale' },\n                { start: 74, end: 102, color: '#ff6600', radius: '110%', legendText: 'Storm' },\n                { start: 102, end: 120, color: '#ff0000', radius: '110%', legendText: 'Hurricane force' },\n            ],\n            pointers: [{\n                animation: { enable: true },\n                value: 70, radius: '60%', pointerWidth: 8,\n                cap: { radius: 7 }, needleTail: { length: '18%' }\n            }]\n        }],\n        load: (args: ILoadedEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    circulargauge.appendTo('#legend-container');\n\n    let showLegendVisible: EmitType<CheckBoxChangeEvents>;\n    let showLegendVisibleCheckBox: CheckBox = new CheckBox(\n        {\n            change: showLegendVisible,\n            checked: true\n        },\n        '#enable');\n\n        showLegendVisibleCheckBox.change = showLegendVisible = (e: CheckBoxChangeEvents) => {\n        let boolean: boolean = e.checked;\n        circulargauge.legendSettings.visible = boolean;\n        circulargauge.refresh();\n    }\n    document.getElementById('alignment').onchange = (e: Event) => {\n        let alignment: string = (e.target as HTMLSelectElement).value;\n        circulargauge.legendSettings.alignment = alignment as Alignment;\n    };\n    document.getElementById('shape').onchange = (e: Event) => {\n        let shape: string = (e.target as HTMLSelectElement).value;\n        circulargauge.legendSettings.shape = shape as GaugeShape;\n    };\n    document.getElementById('position').onchange = (e: Event) => {\n        let position: string = (e.target as HTMLSelectElement).value;\n        circulargauge.legendSettings.position = position as LegendPosition;\n    \n\n    let toggelLegend: EmitType<CheckBoxChangeEvents>;\n    let toggelLegendCheckBox: CheckBox = new CheckBox(\n        {\n            change: toggelLegend,\n            checked: true\n        },\n        '#toggle');\n\n        toggelLegendCheckBox.change = toggelLegend = (e: CheckBoxChangeEvents) => {\n        let boolean: boolean = e.checked;\n        circulargauge.legendSettings.toggleVisibility = boolean;\n        circulargauge.refresh();\n    }\n\n    let labelPosition = new DropDownList({\n        index: 0, width: '100%',\n        change: () => {\n            circulargauge.legendSettings.alignment = <Alignment>labelPosition.value.toString();\n            circulargauge.refresh();\n        }\n    });\n    labelPosition.appendTo('#alignment');\n\n    let labelPosition1 = new DropDownList({\n        index: 0, width: '100%',\n        change: () => {\n            circulargauge.legendSettings.shape = <GaugeShape>labelPosition1.value.toString();\n            circulargauge.refresh();\n        }\n    });\n    labelPosition1.appendTo('#shape');\n\n    let labelPosition2 = new DropDownList({\n        index: 0, width: '100%',\n        change: () => {\n            circulargauge.legendSettings.position = <LegendPosition>labelPosition2.value.toString();\n            circulargauge.refresh();\n        }\n    });\n    labelPosition2.appendTo('#position');\n}"}