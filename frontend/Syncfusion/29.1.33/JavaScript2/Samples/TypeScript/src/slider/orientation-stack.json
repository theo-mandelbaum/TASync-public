{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-8 control-section\">\n    <div class=\"content-wrapper\">\n        <table class=\"slider_table\">\n            <tbody><tr>\n                <td>\n                    <div class=\"sliderwrap\">\n                        <div id=\"default\"></div>\n                    </div>\n                </td>\n                <td>\n                    <div class=\"sliderwrap\">\n                        <div id=\"minrange\"></div>\n                    </div>\n                </td>\n                <td>\n                    <div class=\"sliderwrap\">\n                        <div id=\"range\"></div>\n                    </div>\n                </td>\n                <td>\n                    <div class=\"sliderwrap\">\n                        <div id=\"reversible\"></div>\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section\">\n    <table id=\"property\" title=\"Properties\">\n        <tbody>\n            <tr>\n                <td style=\"width: 50%\">\n                    <div id=\"ticksLabel\" class=\"userselect\">Ticks</div>\n                </td>\n                <td style=\"width: 50%;padding-right: 10px\">\n                    <div style=\"padding-left: 0;padding-top: 0\">\n                        <input id=\"ticks\" type=\"checkbox\" aria-labelledby=\"ticksLabel\">\n                    </div>\n                </td>\n            </tr>\n\n            <tr id=\"slider-showon\">\n                <td style=\"width: 50%\">\n                    <div id=\"tooltipLabel\" class=\"userselect\">Tooltip</div>\n                </td>\n                <td style=\"width: 50%;padding-right: 10px\">\n                    <div style=\"padding-left: 0;padding-top: 0\">\n                        <input id=\"tooltip\" type=\"checkbox\" aria-labelledby=\"tooltipLabel\">\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n\n\n\n\n<style>\n    .content-wrapper {\n        width: 80%;\n        margin: 0 auto;\n        min-width: 185px;\n    }\n\n    .sliderwrap {\n        height: 375px;\n        margin-top: 10px;\n        width: 60%;\n        margin: auto;\n    }\n\n    .e-bigger .content-wrapper {\n        width: 80%;\n    }\n\n    .sliderwrap .e-lbl {\n        display: block;\n        font-size: 11px;\n        font-weight: 500;\n        margin-top: 15px;\n        margin-left: -10px;\n    }\n\n    .sliderwrap:last-child .e-lbl {\n        margin-left: -2px;\n    }\n\n    .slider_table td {\n        text-align: center;\n    }\n\n    .slider_table {\n        border: 0;\n        width: 100%\n    }\n</style>\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { Slider, TicksDataModel, TooltipDataModel } from '@syncfusion/ej2-inputs';\nimport { CheckBox, ChangeEventArgs } from '@syncfusion/ej2-buttons';\n\n/**\n * Orientation sample\n */\n\n\n    \n    // Initialize Slider component\n    let defaultObj: Slider = new Slider({\n        // Set the value for slider\n        value: 30,\n        // Set the slider orientation\n        orientation: 'Vertical',\n        // Set the slider ticks\n        ticks: { placement: 'Before', largeStep: 20, smallStep: 5, showSmallTicks: true },\n        // Set the slider tooltip\n        tooltip:  { isVisible : true, placement: 'Before' }\n    });\n    defaultObj.appendTo('#default');\n\n    // Initialize Slider component\n    let minRangeObj: Slider = new Slider({\n        // Set the value for slider\n        value: 30,\n        // Set the type to render minRange slider\n        type: 'MinRange',\n        // Set the slider orientation\n        orientation: 'Vertical',\n        // Set the slider ticks\n        ticks: { placement: 'Before', largeStep: 20, smallStep: 5, showSmallTicks: true },\n        // Set the slider tooltip\n        tooltip:  { isVisible : true, placement: 'Before' }\n    });\n    minRangeObj.appendTo('#minrange');\n\n    // Initialize Slider component\n    let rangeObj: Slider = new Slider({\n        // Set the values for slider\n        value: [30, 70],\n        // Set the type to render range slider\n        type: 'Range',\n        // Set the slider orientation\n        orientation: 'Vertical',\n        // Set the slider ticks\n        ticks: { placement: 'Before', largeStep: 20, smallStep: 5, showSmallTicks: true },\n        // Set the slider tooltip\n        tooltip:  { isVisible : true, placement: 'Before' }\n    });\n    rangeObj.appendTo('#range');\n\n    // Initialize Slider component\n    let reverseObj : Slider = new Slider({\n        // Set the values for slider\n        value: [30, 70],\n        // Set maximum value to min property\n        min:100,\n        // Set Minimum value to max property\n        max:0,\n        // Set the type to render range slider\n        type: 'Range',\n        // Set the slider orientation\n        orientation: 'Vertical',\n        // Set the slider ticks\n        ticks: { placement: 'Before', largeStep: 20, smallStep: 5, showSmallTicks: true },\n        // Set the slider tooltip\n        tooltip:  { isVisible : true, placement: 'Before' }\n    });\n    reverseObj.appendTo('#reversible');\n\n    // Initialize Checkbox components\n    let enableTicks: CheckBox = new CheckBox({ checked: true, change: enableDisableTicks });\n    enableTicks.appendTo('#ticks');\n\n    let enableTooltip: CheckBox = new CheckBox({ checked: true, change: enableDisableTooltip });\n    enableTooltip.appendTo('#tooltip');\n\n    // Array of slider objects\n    let sliders : Slider[] = [defaultObj, minRangeObj, rangeObj, reverseObj];\n\n    // Checkbox change handlers\n    function enableDisableTicks(args: ChangeEventArgs): void {\n        sliders.forEach((slider: Slider) => {\n            // Assigning ticks values to each slider\n            slider.ticks.placement = args.checked ? 'Before' : 'None';\n        });\n    }\n\n    function enableDisableTooltip(args: ChangeEventArgs): void {\n        sliders.forEach((slider: Slider) => {\n            // Assigning tooltip values to each slider\n            slider.tooltip.isVisible = args.checked;\n        });\n    }\n\n    if (document.getElementById('right-pane')) {\n        document.getElementById('right-pane').addEventListener('scroll', onScroll);\n    }\n\n    // Handler used to reposition the tooltip on page scroll\n    function onScroll(): void {\n        let slider: Slider[] = [minRangeObj, defaultObj, rangeObj];\n        slider.forEach((slider: any) => {\n            // Refreshing each slider tooltip object position\n            slider.refreshTooltip(slider.tooltipTarget);\n        });\n    }\n"}