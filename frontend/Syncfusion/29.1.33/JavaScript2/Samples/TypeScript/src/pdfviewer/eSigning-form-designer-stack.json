{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n\n<div>\n  <div class=\"e-pv-e-sign control-section\">\n    <div class=\"content-wrapper\">\n      <div id=\"e-pv-e-sign-toolbar_template\">\n      </div>\n      <div id=\"e-pv-e-sign-layout\" style=\"position: relative;\">\n        <div id=\"e-pv-e-sign-defaultSidebar_user\">\n          <div class=\"content-wrapper\" style=\"margin: 5px;\">\n            <div style=\"font-weight: 500; font-size: 16px; width: 43px; height: 24px; margin: 15px 10px 5px;\">\n                Fields\n            </div>\n            <div id=\"e-pv-e-sign-user-field\" style=\"width: 190px;\">\n              <div class=\"e-pv-e-sign-user-dropdown\" style=\"width: 190px;\"> \n                <input id=\"userMenu\" width=\"200px\">\n              </div>\n            </div>\n            <div style=\"display: flex;margin-left: 4px;\">\n                <button class=\"e-pv-e-sign-form-field-property\" id=\"Signature\">\n                  <i class=\"e-icons e-signature\"></i>\n                  <span style=\"font-size: 11px; margin-top: 6px;\">Signature</span>\n                </button>\n                <button class=\"e-pv-e-sign-form-field-property\" id=\"initialBtn\">\n                  <i class=\"e-icons e-font-name\"></i>\n                  <span style=\"font-size: 11px; margin-top: 6px;\">Initial</span>\n                </button>\n                \n            </div>\n            <div style=\"display: flex;margin-left: 4px;\">\n              <button class=\"e-pv-e-sign-form-field-property\" id=\"textBoxBtn\">\n                <i class=\"e-icons e-text-form\"></i>\n                <span style=\"font-size: 11px; margin-top: 6px;\">Textbox</span>\n              </button>\n              <button class=\"e-pv-e-sign-form-field-property\" id=\"passwordBtn\">\n                <i class=\"e-icons e-password\"></i>\n                <span style=\"font-size: 11px; margin-top: 6px;\">Password</span>\n              </button>\n                \n            </div>\n            <div style=\"display: flex;margin-left: 4px;\">\n              <button class=\"e-pv-e-sign-form-field-property\" id=\"checkBoxBtn\">\n                <i class=\"e-icons e-check-box\"></i>\n                <span style=\"font-size: 11px; margin-top: 6px;\">Checkbox</span>\n              </button>\n              <button class=\"e-pv-e-sign-form-field-property\" id=\"radioBtn\">\n                <i class=\"e-icons e-radio-button\"></i>\n                <span style=\"font-size: 11px; margin-top: 6px;\">Radio</span>\n              </button>\n              \n            </div>\n            <div style=\"display: flex;margin-left: 4px;\">\n              <button class=\"e-pv-e-sign-form-field-property\" id=\"dropDownBtn\">\n                <i class=\"e-icons e-drop-down\"></i>\n                <span style=\"font-size: 11px; margin-top: 6px;\">Dropdown</span>\n              </button>\n              <button class=\"e-pv-e-sign-form-field-property\" id=\"listBoxBtn\">\n                <i class=\"e-icons e-list-unordered\"></i>\n                  <span style=\"font-size: 11px; margin-top: 6px;\">List</span>\n              </button>\n              \n            </div>\n          </div>\n        </div>\n        <div id=\"e-pv-e-sign-pdfViewer-div\">\n          <div id=\"pdfViewer\" style=\"height: 640px; display: block\"></div>\n        </div>\n        <div id=\"e-pv-e-sign-toolbar_template-mob\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n\n\n<style>\n .e-pv-e-sign-form-field-property{\n    width: 72px;\n    height: 72px;\n    margin: 9px;\n    border: 1px solid lightgrey!important;\n    border-radius: 8px;\n    display: grid;\n    place-content: center;\n}\n\n.e-pv-e-sign.control-section{\n  margin-top: 0px !important;\n}\n\n  #e-pv-e-sign-user-field {\n    color: #222933;\n    font-family: Heebo, open sans, 'sans-serif', -apple-system,\n      BlinkMacSystemFont;\n    display: flex;\n    position: relative;\n    border: 1px solid lightgrey;\n    border-radius: 8px;\n    height: 40px;\n    margin-bottom: 20px;\n  }\n\n  .e-pv-e-sign-user-dropdown> :first-child {\n    border: none !important;\n    margin-left: 1px;\n  }\n\n  .e-pv-e-sign-user-dropdown .e-input-group:not(.e-float-icon-left):not(.e-float-input).e-input-focus::before,\n  .e-pv-e-sign-user-dropdown .e-input-group:not(.e-float-icon-left):not(.e-float-input).e-input-focus::after {\n    width: 0px !important;\n  }\n\n  .e-pv-e-sign-empImage {\n    max-height: 35px;\n    margin-top: 7px;\n    margin-left: 4px;\n    border-radius: 50%;\n  }\n\n  #e-pv-e-sign-defaultSidebar_user{\n    height:638px;\n    position: absolute;\n    box-shadow: 0px 2px 3px 1px rgba(0, 0, 0, 0.15), 0px 1px 2px 0px rgba(0, 0, 0, 0.30);\n  }\n\n  #e-pv-e-sign-toolbar_template{\n    box-shadow: 0px 2px 3px 1px rgba(0, 0, 0, 0.15), 0px 1px 2px 0px rgba(0, 0, 0, 0.30);\n  }  \n\n  #e-pv-e-sign-toolbar_template.e-toolbar .e-toolbar-items .e-toolbar-left .e-toolbar-item:first-child{\n    margin-left: 0px !important;\n    padding: 0px !important;\n  }\n\n  #e-pv-e-sign-toolbar_template,\n  #e-pv-e-sign-toolbar_template-mob {\n    z-index: 1001;\n    width: 100% !important;\n    height: 48px !important;\n    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15), 0px 1px 2px 0px rgba(0, 0, 0, 0.30);\n  }\n\n  #e-pv-e-sign-toolbar_template-mob {\n    z-index: 1 !important;\n  }\n\n  #e-pv-e-sign-download {\n    width: 115px;\n    height: 32px;\n    flex-shrink: 0;\n    border-radius: 16px;\n    border: 1px solid var(--Color-variables-outline, #79747E);\n  }\n#e-pv-e-sign-toolbar_template-mob .e-toolbar-items\n  {\n    width: 100%;\n    justify-content: space-between;\n  }\n</style>\n</body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-drawings\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-inplace-editor\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-pdf\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-pdfviewer\": \"*\",\n  \"@syncfusion/ej2-icons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { PdfViewer, Toolbar, Magnification, Navigation, LinkAnnotation, BookmarkView, ThumbnailView, Print, TextSelection, TextSearch, Annotation, FormFields, FormDesigner, PageOrganizer, PdfViewerModel, FormFieldAddArgs } from '@syncfusion/ej2-pdfviewer';\nimport { DropDownList, ChangeEventArgs } from '@syncfusion/ej2-dropdowns';\nimport { Sidebar } from '@syncfusion/ej2-navigations';\nimport { Button, ClickEventArgs } from '@syncfusion/ej2-buttons';\nimport { Toolbar as EJToolbar, ItemModel } from '@syncfusion/ej2-navigations';\nimport { Draggable, Browser } from '@syncfusion/ej2-base';\n\nPdfViewer.Inject(Toolbar, Magnification, Navigation, LinkAnnotation, BookmarkView, ThumbnailView, Print, TextSelection, TextSearch, Annotation, FormFields, FormDesigner, PageOrganizer);\n\n/**\n * Default PdfViewer sample\n */\n\n  \n\n  let currentUser: string = 'andrew@mycompany.com';\n  let zoomFactor: number;\n  let currentUserColorId: string = 'ff0000';\n  let currentFieldType: any;\n  let userColor: string = '#eff7ef';\n  let isDropped: boolean = false;\n  let defaultFieldWidth: number = 200;\n  let defaultFieldHeight: number = 24;\n  let checkBoxFieldSize: number = 20;\n  let radioFieldSize: number = 20;\n  let SignatureFieldSize: number = 66;\n  let ListFieldSize: number = 66;\n  var defaultZoomFactor = false;\n  let isMobile: boolean = Browser.isDevice;\n  let viewer: PdfViewer = new PdfViewer({\n    documentPath: 'https://cdn.syncfusion.com/content/PDFViewer/Fill+and+Sign.pdf',\n    resourceUrl: 'https://cdn.syncfusion.com/ej2/27.2.2/dist/ej2-pdfviewer-lib',\n    documentLoad: documentLoaded,\n    pageClick: pageClick\n  });\n\n  viewer.enableFormFieldsValidation = true;\n  viewer.showNotificationDialog = false;\n  viewer.enableToolbar = false;\n  viewer.enableNavigationToolbar = false;\n  viewer.enableAnnotationToolbar =false;\n  viewer.downloadFileName = 'eSign_designMode.pdf';\n  viewer.zoomMode = \"FitToPage\";\n  viewer.appendTo('#pdfViewer');\n\n  let toolbarItems: ItemModel[] = [\n    {\n      type: 'Input',\n      align: 'Left',\n      template: \"<div id='e-pv-e-sign-user-field-mob' style='width: 200px;'><div class='e-pv-e-sign-user-dropdown' style='width: 200px;'> <input id='userMenuMob' width='200px'></input></div></div>\",\n    },\n    {\n      prefixIcon: 'e-icons e-download',\n      text: 'Download',\n      align: 'Right',\n      tooltipText: 'Save',\n      id: 'e-pv-e-sign-download',\n      click: downloadClicked.bind(this),\n    },\n  ];\n\n  let toolbarObj: EJToolbar = new EJToolbar({\n    cssClass: 'template',\n    items: toolbarItems,\n  });\n  toolbarObj.appendTo('#e-pv-e-sign-toolbar_template');\n\n  interface UserDetails {\n    Name: string;\n    Eimg: string;\n    Mail: string;\n    fieldIds: any[];\n  }\n\n  let userDetails: any = [\n    {\n      Name: 'Andrew Fuller',\n      Eimg: 'profile1',\n      Mail: 'andrew@mycompany.com',\n      fieldIds: [],\n    },\n    {\n      Name: 'Anne Dodsworth',\n      Eimg: 'profile2',\n      Mail: 'anne@mycompany.com',\n      fieldIds: [],\n    },\n  ];\n\n  function getBorderColor(email: string): string {\n    return email === 'andrew@mycompany.com' ? 'red' : 'green';\n  }\n\n  let listObj: DropDownList = new DropDownList({\n    dataSource: userDetails,\n    fields: { text: 'Mail', value: 'Eimg' },\n    index: 0,\n    width: '187px',\n    popupWidth: '190px',\n    itemTemplate: function (data: UserDetails) {\n      return `\n            <div style=\"display:flex;\">\n                <img class=\"empImage\" style=\"border: 1px solid ${getBorderColor(data.Mail)};border-radius:50%;margin-top:2px\" src=\"//npmci.syncfusion.com/development/demos/src/pdfviewer/images/employees/${data.Eimg}.png\" height=\"32px\" width=\"32px\" alt=\"employee\" />\n                <div>\n                    <div class=\"ename\" style=\"font-size:12px;height:16px;\">${data.Name}</div>\n                    <div class=\"mail\" style=\"font-size:10px;\">${data.Mail}</div>\n                </div>\n            </div>`;\n    },\n    valueTemplate: function (data: UserDetails) {\n      return `\n            <div style=\"display:flex;margin: 2px;\">\n                <img class=\"value\" style=\"border: 1px solid ${getBorderColor(data.Mail)}; border-radius:50%;\" src=\"//npmci.syncfusion.com/development/demos/src/pdfviewer/images/employees/${data.Eimg}.png\" height=\"32px\" width=\"32px\" alt=\"employee\" />\n                <div>\n                    <div class=\"name\" style=\"font-size:12px;margin-left: 12px;\">${data.Name}</div>\n                    <div class=\"mail\" style=\"font-size:10px;margin-left: 12px;\">${data.Mail}</div>\n                </div>\n            </div>`;\n    }\n  });\n  listObj.appendTo('#userMenu');\n\n  let listObjMob: DropDownList = new DropDownList({\n    dataSource: userDetails,\n    fields: { text: 'Mail', value: 'Eimg' },\n    index: 0,\n    width: '187px',\n    popupWidth: '190px',\n    itemTemplate: function (data: UserDetails) {\n      return `\n          <div style=\"display:flex;\">\n              <img class=\"empImage\" style=\"border: 1px solid ${getBorderColor(data.Mail)};border-radius:50%;margin-top:2px\" src=\"//npmci.syncfusion.com/development/demos/src/pdfviewer/images/employees/${data.Eimg}.png\" height=\"32px\" width=\"32px\" alt=\"employee\" />\n              <div>\n                  <div class=\"ename\" style=\"font-size:12px;height:16px;\">${data.Name}</div>\n                  <div class=\"mail\" style=\"font-size:10px;\">${data.Mail}</div>\n              </div>\n          </div>`;\n    },\n    valueTemplate: function (data: UserDetails) {\n      return `\n          <div style=\"display:flex;margin: 2px;\">\n              <img class=\"value\" style=\"border: 1px solid ${getBorderColor(data.Mail)}; border-radius:50%;\" src=\"//npmci.syncfusion.com/development/demos/src/pdfviewer/images/employees/${data.Eimg}.png\" height=\"32px\" width=\"32px\" alt=\"employee\" />\n              <div>\n                  <div class=\"name\" style=\"font-size:12px;margin-left: 12px;\">${data.Name}</div>\n                  <div class=\"mail\" style=\"font-size:10px;margin-left: 12px;\">${data.Mail}</div>\n              </div>\n          </div>`;\n    }\n  });\n  listObjMob.appendTo('#userMenuMob');\n\n  let toolbarMobObj: EJToolbar = new EJToolbar({\n    overflowMode: 'Scrollable',\n    cssClass: 'template',\n    items: [\n      { id: 'signature', prefixIcon: 'e-icons e-signature', click: signature.bind(this) },\n      { id: 'initial', prefixIcon: 'e-icons e-font-name', click: initial.bind(this) },\n      { id: 'textBox', prefixIcon: 'e-icons e-text-form', click: textBox.bind(this) },\n      { id: 'password', prefixIcon: 'e-icons e-password', click: password.bind(this) },\n      { id: 'checkBox', prefixIcon: 'e-icons e-check-box', click: checkBox.bind(this) },\n      { id: 'radioButton', prefixIcon: 'e-icons e-radio-button', click: radioBtn.bind(this) },\n      { id: 'dropDown', prefixIcon: 'e-icons e-drop-down', click: dropDown.bind(this) },\n      { id: 'listBox', prefixIcon: 'e-icons e-list-unordered', click: listBox.bind(this) }\n    ],\n  });\n  toolbarMobObj.appendTo('#e-pv-e-sign-toolbar_template-mob');\n\n  let sideObj: Sidebar = new Sidebar({\n    width: \"200px\",\n    enableGestures: false\n  });\n  sideObj.appendTo(\"#e-pv-e-sign-defaultSidebar_user\");\n\n  const layout = document.getElementById('e-pv-e-sign-layout');\n  const sidebar = document.getElementById('e-pv-e-sign-defaultSidebar_user');\n  const dropdown = document.getElementById('e-pv-e-sign-user-field-mob');\n  const viewerDiv = document.getElementById('e-pv-e-sign-pdfViewer-div');\n  const downloadElement = document.getElementById(\"e-pv-e-sign-download\");\n  const toolbarElementMob = document.getElementById(\"e-pv-e-sign-toolbar_template-mob\");\n  if (isMobile) {\n    layout.style.display = 'block';\n    dropdown.style.display = 'block';\n    toolbarElementMob.style.display = 'block';\n    sidebar.style.display = 'none';\n    viewerDiv.style.width = '100%';\n    downloadElement.style.border = 'none';\n    downloadElement.style.width = '40px';\n    downloadElement.removeChild(downloadElement.lastChild);\n  } else {\n    layout.style.display = 'flex';\n    dropdown.style.display = 'none';\n    toolbarElementMob.style.display = 'none';\n    sidebar.style.display = 'block';\n    viewerDiv.style.width = 'calc(100% - 200px)';\n    downloadElement.style.width = '115px';\n    downloadElement.style.width = '1px solid #C4C7C5';\n  }\n\n\n  let textboxBtn: Button = new Button({ cssClass: 'e-outline' });\n  textboxBtn.appendTo('#textBoxBtn');\n\n  let passwordBtn: Button = new Button({ cssClass: 'e-outline' });\n  passwordBtn.appendTo('#passwordBtn');\n\n  let checkboxBtn: Button = new Button({ cssClass: 'e-outline' });\n  checkboxBtn.appendTo('#checkBoxBtn');\n\n  let radioButton: Button = new Button({ cssClass: 'e-outline' });\n  radioButton.appendTo('#radioBtn');\n\n  let dropDownBtn: Button = new Button({ cssClass: 'e-outline' });\n  dropDownBtn.appendTo('#dropDownBtn');\n\n  let listBoxBtn: Button = new Button({ cssClass: 'e-outline' });\n  listBoxBtn.appendTo('#listBoxBtn');\n\n  let signatureBtn: Button = new Button({ cssClass: 'e-outline' });\n  signatureBtn.appendTo('#Signature');\n\n  let initialBtn: Button = new Button({ cssClass: 'e-outline' });\n  initialBtn.appendTo('#initialBtn');\n\n  listObj.change = function (args: any) {\n    currentUser = args.itemData.Mail;\n  };\n\n  listObjMob.change = function (args: any) {\n    currentUser = args.itemData.Mail;\n  };\n  function signature(args: ClickEventArgs) {\n    viewer.formDesignerModule.setFormFieldMode('SignatureField');\n  }\n  function initial(args: ClickEventArgs) {\n    viewer.formDesignerModule.setFormFieldMode('InitialField');\n  }\n  function textBox(args: ClickEventArgs) {\n    viewer.formDesignerModule.setFormFieldMode('Textbox');\n  }\n\n  function password(args: ClickEventArgs) {\n    viewer.formDesignerModule.setFormFieldMode('Password');\n  }\n\n  function checkBox(args: ClickEventArgs) {\n    viewer.formDesignerModule.setFormFieldMode('CheckBox');\n  }\n\n  function radioBtn(args: ClickEventArgs) {\n    viewer.formDesignerModule.setFormFieldMode('RadioButton');\n  }\n\n  function dropDown(args: ClickEventArgs) {\n    viewer.formDesignerModule.setFormFieldMode('DropDown');\n  }\n\n  function listBox(args: ClickEventArgs) {\n    viewer.formDesignerModule.setFormFieldMode('ListBox');\n  }\n\n  function documentLoaded(): void {\n    defaultZoomFactor = true;\n    viewer.designerMode = true;\n    initializeDraggable(textboxBtn.element, 'Textbox');\n    initializeDraggable(signatureBtn.element, 'SignatureField');\n    initializeDraggable(passwordBtn.element, 'Password');\n    initializeDraggable(checkboxBtn.element, 'CheckBox');\n    initializeDraggable(radioButton.element, 'RadioButton');\n    initializeDraggable(dropDownBtn.element, 'DropDown');\n    initializeDraggable(listBoxBtn.element, 'ListBox');\n    initializeDraggable(initialBtn.element, 'InitialField');\n    defaultZoomFactor = false;\n  }\n  document.getElementById(\"textBoxBtn\").onclick = function (e: any) {\n    console.log(e);\n    if (e?.originalEvent?.sourceCapabilities?.firesTouchEvents || e?.sourceCapabilities?.firesTouchEvents)\n      viewer.formDesignerModule.setFormFieldMode('Textbox');\n\n  };\n  document.getElementById(\"passwordBtn\").onclick = function (e: any) {\n    if (e?.originalEvent?.sourceCapabilities?.firesTouchEvents || e?.sourceCapabilities?.firesTouchEvents)\n      viewer.formDesignerModule.setFormFieldMode('Password');\n  };\n\n  document.getElementById(\"checkBoxBtn\").onclick = function (e: any) {\n    if (e?.originalEvent?.sourceCapabilities?.firesTouchEvents || e?.sourceCapabilities?.firesTouchEvents)\n      viewer.formDesignerModule.setFormFieldMode('CheckBox');\n  };\n\n  document.getElementById(\"radioBtn\").onclick = function (e: any) {\n    if (e?.originalEvent?.sourceCapabilities?.firesTouchEvents || e?.sourceCapabilities?.firesTouchEvents)\n      viewer.formDesignerModule.setFormFieldMode('RadioButton');\n  };\n\n  document.getElementById(\"dropDownBtn\").onclick = function (e: any) {\n    if (e?.originalEvent?.sourceCapabilities?.firesTouchEvents || e?.sourceCapabilities?.firesTouchEvents)\n      viewer.formDesignerModule.setFormFieldMode('DropDown');\n  };\n\n  document.getElementById(\"listBoxBtn\").onclick = function (e: any) {\n    if (e?.originalEvent?.sourceCapabilities?.firesTouchEvents || e?.sourceCapabilities?.firesTouchEvents)\n      viewer.formDesignerModule.setFormFieldMode('ListBox');\n  };\n\n  document.getElementById(\"Signature\").onclick = function (e: any) {\n    if (e?.originalEvent?.sourceCapabilities?.firesTouchEvents || e?.sourceCapabilities?.firesTouchEvents)\n      viewer.formDesignerModule.setFormFieldMode('SignatureField');\n  };\n\n  document.getElementById(\"initialBtn\").onclick = function (e: any) {\n    if (e?.originalEvent?.sourceCapabilities?.firesTouchEvents || e?.sourceCapabilities?.firesTouchEvents)\n      viewer.formDesignerModule.setFormFieldMode('InitialField');\n  };\n\n  function initializeDraggable(element: HTMLElement, fieldType: string): void {\n    let cloneElement: HTMLElement;\n    new Draggable(element, {\n      helper: (e: any): HTMLElement => {\n        if (e.sender.type == \"mousemove\") {\n          cloneElement = document.createElement('div');\n          zoomFactor = viewer.viewerBase.getZoomFactor();\n          cloneElement.style.width = (defaultFieldWidth * zoomFactor) + 'px';\n          cloneElement.style.height = (defaultFieldHeight * zoomFactor) + 'px';\n          cloneElement.style.borderRadius = '0';\n\n          switch (fieldType) {\n            case 'SignatureField':\n            case 'InitialField':\n              cloneElement.style.height = (SignatureFieldSize * zoomFactor) + 'px';\n              break;\n            case 'CheckBox':\n              cloneElement.style.height = (checkBoxFieldSize * zoomFactor) + 'px';\n              cloneElement.style.width = (checkBoxFieldSize * zoomFactor) + 'px';\n              break;\n            case 'RadioButton':\n              cloneElement.style.height = (radioFieldSize * zoomFactor) + 'px';\n              cloneElement.style.width = (radioFieldSize * zoomFactor) + 'px';\n              cloneElement.style.borderRadius = '50%';\n              break;\n            case 'ListBox':\n              cloneElement.style.height = (ListFieldSize * zoomFactor) + 'px';\n              break;\n          }\n\n          cloneElement.style.backgroundColor = currentUser === 'andrew@mycompany.com' ? '#ffefef' : '#eff7ef';\n          cloneElement.style.zIndex = '10001';\n          cloneElement.style.position = 'absolute';\n          cloneElement.style.pointerEvents = 'none';\n          document.body.appendChild(cloneElement);\n          return cloneElement;\n        }\n        else {\n          return null;\n        }\n      },\n      drag: (e: any): void => {\n        e.event.preventDefault();\n      },\n      dragStart: (e: any): void => {\n        currentFieldType = fieldType;\n        isDropped = true;\n        getCursorAtPosition(fieldType);\n      },\n      dragStop: (e: any): void => {\n        if (e.helper && e.helper.parentNode) {\n          e.helper.parentNode.removeChild(e.helper);\n        }\n        isDropped = false;\n      },\n      clone: true,\n      cursorAt: getCursorAtPosition(fieldType),\n      enableTailMode: true,\n    } as any);\n  }\n\n  function getCursorAtPosition(fieldType: string): { left: number, top: number } {\n    if (defaultZoomFactor) {\n      zoomFactor = 1;\n    } else {\n      zoomFactor = viewer.viewerBase.getZoomFactor();\n    }\n\n    let left: number, top: number;\n    let scaledWidth = defaultFieldWidth * zoomFactor;\n    let scaledHeight = defaultFieldHeight * zoomFactor;\n\n    switch (fieldType) {\n      case 'CheckBox':\n      case 'RadioButton':\n        scaledWidth = checkBoxFieldSize * zoomFactor;\n        scaledHeight = checkBoxFieldSize * zoomFactor;\n        left = 0;\n        top = (checkBoxFieldSize / 2) * zoomFactor - (scaledHeight / 2);\n        break;\n      case 'ListBox':\n        scaledHeight = ListFieldSize * zoomFactor;\n        left = 90;\n        top = (ListFieldSize / 2) * zoomFactor - (scaledHeight / 2);\n        break;\n      case 'SignatureField':\n      case 'InitialField':\n        scaledHeight = SignatureFieldSize * zoomFactor;\n        left = 90;\n        top = (SignatureFieldSize / 2) * zoomFactor - (scaledHeight / 2);\n        break;\n      default:\n        scaledHeight = defaultFieldHeight * zoomFactor;\n        left = 90;\n        top = (defaultFieldHeight / 2) * zoomFactor - (scaledHeight / 2);\n        break;\n    }\n\n    left = left / zoomFactor - (scaledWidth / 2);\n    return { left: left, top: top };\n  }\n\n  function pageClick(args: { x: number, y: number }): void {\n    if (isDropped) {\n      isDropped = false;\n      let width = defaultFieldWidth;\n      let height = defaultFieldHeight;\n\n      switch (currentFieldType) {\n        case 'Textbox':\n          height = defaultFieldHeight;\n          break;\n        case 'SignatureField':\n        case 'InitialField':\n          height = SignatureFieldSize;\n          break;\n        case 'Password':\n          break;\n        case 'CheckBox':\n        case 'RadioButton':\n          width = checkBoxFieldSize;\n          height = checkBoxFieldSize;\n          break;\n        case 'ListBox':\n          height = ListFieldSize;\n          break;\n      }\n\n      viewer.formDesignerModule.addFormField(currentFieldType, { bounds: { X: args.x, Y: args.y, Width: width, Height: height } } as any);\n    }\n  }\n  function downloadClicked(args: any): void {\n    viewer.download();\n  }\n\n  viewer.formFieldAdd = function (args: FormFieldAddArgs) {\n    userColor = currentUser === 'andrew@mycompany.com' ? '#ffefef' : '#eff7ef';\n    let author = currentUser === 'andrew@mycompany.com' ? 'andrew' : 'anne';\n    viewer.formDesigner.updateFormField(args.field.id, { customData: { author }, backgroundColor: userColor } as any);\n\n    let currentUserDetails = userDetails.find((userDetail: { Mail: string; }) => userDetail.Mail === currentUser);\n    if (currentUserDetails) {\n      let currentFormField = viewer.formFieldCollections.find(formField => formField.id === args.field.id);\n      if (currentFormField) {\n        currentUserDetails.fieldIds.push(currentFormField);\n      }\n    }\n    let signIcons = document.querySelectorAll('[id*=\"signIcon\"]');\n    signIcons.forEach(element => {\n      if (viewer.zoomPercentage < 65) {\n        (element as any).style.fontSize = '5px'\n      } else if (viewer.zoomPercentage <= 85 && viewer.zoomPercentage > 65) {\n        (element as any).style.fontSize = \"7px\";\n      }\n    });\n  };\n"}