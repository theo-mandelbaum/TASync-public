{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div class=\"content-wrapper\">\n        <div class=\"flex-container\">\n            <label class=\"switchLabel\" for=\"checked\">Standalone PDF Viewer</label>\n            <div class=\"e-message render-mode-info\">\n                <span class=\"e-msg-icon render-mode-info-icon\" title=\"Turn OFF to render the PDF Viewer as server-backed\"></span>\n            </div>\n            <input cssclass=\"buttonSwitch\" id=\"checked\" change=\"change\" type=\"checkbox\">\n        </div>\n        <div id=\"topToolbar\" style=\"top:0px\"></div>\n        <div id=\"magnificationToolbar\"></div>\n        <div id=\"editAnnotationToolbar\" style=\"display: none;\"></div>\n        <div id=\"formFieldToolbar\" style=\"display: none;\"></div>\n        <div id=\"SignatureToolbar\" style=\"display: none;\">\n            <div class=\"e-dropdown-popup\" id=\"container_annotation_signature-popup\" data-ripple=\"true\" style=\"z-index: 1111;\">\n                <ul role=\"menu\" tabindex=\"0\">\n                    <li id=\"e-dropdown-btn-item_63\" role=\"menuitem\" tabindex=\"-1\" aria-label=\"ADD SIGNATURE\" style=\"width: 206px; display: flex; flex-direction: column; height: auto; align-items: center; background: transparent; cursor: default;\">\n                      <button class=\"e-control e-btn e-lib e-outline e-primary\" style=\"width: auto; height: 36px;\">Add Signature</button>\n                    </li>\n                    <li class=\"e-separator\" id=\"e-dropdown-btn-item_64\" role=\"menuitem\" tabindex=\"-1\" aria-label=\"separator\" style=\"margin: 8px 0;\"></li>\n                    <li id=\"e-dropdown-btn-item_65\" role=\"menuitem\" tabindex=\"-1\" aria-label=\"ADD INITIAL\" style=\"width: 206px; display: flex; flex-direction: column; height: auto; align-items: center; background: transparent; cursor: default;\">\n                      <button class=\"e-control e-btn e-lib e-outline e-primary\" style=\"width: auto; height: 36px;\">Add Initial</button>\n                    </li>\n                  </ul>\n            </div>\n          </div>\n        <div id=\"pdfViewer\" style=\"height:640px; width:100%;\"></div>\n        <input type=\"file\" id=\"fileUpload\" accept=\".pdf\" style=\"display:block;visibility:hidden;width:0;height:0;\">\n        <div id=\"popup\"></div>\n        <div id=\"textSearchBox\" style=\"left: 60% !important;\">\n            <div id=\"searchContainer\">\n                <span class=\"e-input-group e-custom-search-input\">\n                    <input type=\"text\" id=\"searchInput\" placeholder=\"Find in document\" class=\"e-input\">\n                    <span class=\"e-input-group-icon e-pv-search-icon\" id=\"searchBtn\"></span>\n                </span>\n                <button id=\"previousSearch\" class=\"search-button\" style=\"margin-left:5px\"></button>\n                <button id=\"nextSearch\" class=\"search-button\"></button>\n            </div>\n            <div id=\"matchCaseContainer\" style=\"margin-top:8px\">\n                <input id=\"matchCase\" type=\"checkbox\">\n            </div>\n        </div>\n    </div>\n</div>\n\n\n  \n  \n\n<style>\n      @font-face {\n        font-family: \"e-icons\";\n        font-style: normal;\n        font-weight: normal;\n        src: url(data:application/x-font-ttf;charset=utf-8;base64,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ZWd1bGFyY3VzdG9tLXRvb2xiYXJbMTkwOF1jdXN0b20tdG9vbGJhclsxOTA4XVZlcnNpb24gMS4wY3VzdG9tLXRvb2xiYXJbMTkwOF1Gb250IGdlbmVyYXRlZCB1c2luZyBTeW5jZnVzaW9uIE1ldHJvIFN0dWRpb3d3dy5zeW5jZnVzaW9uLmNvbQAgAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBSAGUAZwB1AGwAYQByAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBjAHUAcwB0AG8AbQAtAHQAbwBvAGwAYgBhAHIAWwAxADkAMAA4AF0AVgBlAHIAcwBpAG8AbgAgADEALgAwAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBGAG8AbgB0ACAAZwBlAG4AZQByAGEAdABlAGQAIAB1AHMAaQBuAGcAIABTAHkAbgBjAGYAdQBzAGkAbwBuACAATQBlAHQAcgBvACAAUwB0AHUAZABpAG8AdwB3AHcALgBzAHkAbgBjAGYAdQBzAGkAbwBuAC4AYwBvAG0AAAAAAgAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAQIBAwEEAQUBBgEHAQgBCQEKAQsBDAENAQ4BDwAIVG9wLWljb24LZG93bi1hcnJvdzIKUFZfWm9vbW91dAlQVl9ab29taW4LUFZfRG93bmxvYWQLUFZfQm9va21hcmsJUFZfU2VhcmNoCFBWX1ByaW50C1BWX1ByZXZpb3VzB1BWX05leHQIUFZfQ2xvc2UMUFZfRml0VG9QYWdlB1BWX09wZW4AAA==) format('truetype');\n    }\n    #magnificationToolbar {\n        background: transparent;\n        height: auto;\n        min-height: 56px;\n        width: 200px;\n        border: none;\n        position: absolute;\n        z-index: 1001;\n        top: calc(100% - 125px);\n        left: calc(100% - 125px);\n        transform: rotate(90deg);\n    }\n\n    div#magnificationToolbar.e-toolbar .e-toolbar-items {\n        background: transparent;\n    }\n\n    #magnificationToolbar.e-toolbar .e-tbar-btn {\n        border-radius: 50%;\n        min-height: 34px;\n        min-width: 34px;\n        border: 1px solid #c8c8c8;\n        transform: rotate(90deg);\n    }\n\n    #topToolbar {\n        top: 0px;\n        z-index: 1001;\n    }\n   \n    .e-bookmark-popup {\n        height: 300px;\n        max-width: 300px;\n    }\n\n    .e-text-search-popup {\n        height: 104px;\n        max-width: 367px;\n    }\n    .e-pv-fit-page-icon::before {\n      content: '\\e91b';\n      font-family: \"e-icons\";\n    }\n    .e-text-search-popup .e-footer-content button.e-btn, .e-bookmark-popup .e-footer-content button.e-btn {\n        padding: 0;\n        border: 0;\n    }\n\n    .e-custom-search-input {\n        width: 225px;\n    }\n\n    .e-text-search-popup .e-footer-content, .e-bookmark-popup .e-footer-content {\n        padding: 0;\n        height: 0;\n    }\n\n    .search-button, .search-button:disabled, .search-button:focus, .search-button:hover  {\n        background: transparent;\n        box-shadow: none;\n        border: 0px;\n    }\n\n    #popup .e-dlg-content {\n        padding-left: 0;\n        padding-bottom: 0;\n    }\n\n    .e-pv-bookmarks {\n        min-width: 234px;\n    }\n\n    .e-pv-current-page-number {\n        width: 46px;\n        height: 28px;\n        text-align: center;\n    }\n\n    .material .e-pv-current-page-number {\n        border-width: 1px;\n    }\n\n    /* style for slider button*/\n    \n    .flex-container {\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n    }\n\n    .render-mode-info {\n        background: none;\n        border: none;\n        padding-left: 0px;\n    }\n\n    .render-mode-info .render-mode-info-icon {\n        height: 16px;\n        width: 16px;\n    }\n\n    .switchLabel {\n        font-family: \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", sans-serif;        \n        font-weight: 400;\n        line-height: 20px;\n        letter-spacing: 0.24px;\n        text-align: right;\n        font-size: 14px;\n        margin-bottom: 3px;\n    }\n\n    .render-mode-info .render-mode-info-icon::before {\n        line-height: normal;\n    }\n\n    .buttonSwitch {\n        Width: 40px;\n        Height: 24px;\n    }\n\n</style>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-drawings\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-inplace-editor\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-pdf\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-pdfviewer\": \"*\",\n  \"@syncfusion/ej2-icons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport {\n    PdfViewer, Toolbar, Magnification, Navigation, LinkAnnotation, BookmarkView, ThumbnailView, Print,Annotation,FormDesigner, \n     PageOrganizer, FormFields,\n    PageChangeEventArgs, LoadEventArgs, TextSearch, TextSelection, SignStampItem, StandardBusinessStampItem, DynamicStampItem,\n} from '@syncfusion/ej2-pdfviewer';\nimport { Toolbar as Tool, TreeView, NodeSelectEventArgs,Menu,MenuItemModel } from '@syncfusion/ej2-navigations';\nimport { ClickEventArgs, Button, CheckBox, ChangeEventArgs } from '@syncfusion/ej2-buttons';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { Switch } from '@syncfusion/ej2-buttons';\nimport { select } from '@syncfusion/ej2-base';\n\nPdfViewer.Inject(Toolbar,Annotation, Magnification, Navigation, LinkAnnotation, BookmarkView, ThumbnailView, Print, TextSearch, TextSelection, FormFields,FormDesigner, PageOrganizer);\n\n/**\n * Default PdfViewer sample\n */\n\nlet inputTemplate: string = '<div class=\"\"><input type=\"text\" class=\"e-input-group e-pv-current-page-number\" id=\"currentPage\" /></div>';\nlet ele: string = '<div class=\"\" style=\"margin:0px 6px\"><span class=\"e-pv-total-page-number\" id=\"totalPage\">of 0</span></div>';\nlet isBookmarkOpen: boolean = false;\nlet isBookmarkClick: boolean = false;\nlet isBookmarkView: boolean = false;\nlet isTextSearchBoxOpen: boolean = false;\nlet searchActive: boolean = false;\nlet bookmarkPopup: Dialog;\nlet textSearchPopup: Dialog;\nlet toolbarObj: Tool;\nlet viewer: PdfViewer;\nlet currentPageBox: HTMLElement;\nlet searchInput: HTMLElement;\nlet searchButton: HTMLElement;\nlet matchCase: boolean = false;\nlet isInkEnabled: boolean = false;\nlet treeObj: TreeView;\nconst data: MenuItemModel[] = [\n  {\n        iconCss: 'e-icons e-stamp',\n        items: [\n            {\n                text: 'Dynamic',\n                items: [\n                    { text: 'Revised', id: 'Dynamic' },\n                    { text: 'Reviewed', id: 'Dynamic' },\n                    { text: 'Received', id: 'Dynamic' },\n                    { text: 'Confidential', id: 'Dynamic' },\n                    { text: 'Approved', id: 'Dynamic' },\n                    { text: 'Not Approved', id: 'Dynamic' },\n                ],\n            },\n            {\n                text: 'Sign Here',\n                items: [\n                    { text: 'Witness' , id: 'Sign Here' }, \n                    { text: 'Initial Here', id: 'Sign Here' }, \n                    { text: 'Sign Here', id: 'Sign Here' }, \n                    { text: 'Accepted', id: 'Sign Here'}, \n                    { text: 'Rejected', id: 'Sign Here' }],\n            },\n            {\n                text: 'Standard Business',\n                items: [\n                    { text: 'Approved' , id: 'Standard Business' }, \n                    { text: 'Not Approved', id: 'Standard Business' }, \n                    { text: 'Draft', id: 'Standard Business' }, \n                    { text: 'Final', id: 'Standard Business'}, \n                    { text: 'Completed', id: 'Standard Business' },\n                    { text: 'Confidential' , id: 'Standard Business' }, \n                    { text: 'For Public Release', id: 'Standard Business' }, \n                    { text: 'Not For Public Release', id: 'Standard Business' }, \n                    { text: 'For Comment', id: 'Standard Business'}, \n                    { text: 'Void', id: 'Standard Business' },\n                    { text: 'Preliminary Results' , id: 'Standard Business' }, \n                    { text: 'Information Only', id: 'Standard Business' }\n                ],\n            },\n        ],\n    },\n]; \nconst signMenu:MenuItemModel[]=[{\n  iconCss: \"e-icons e-signature\",\n    items:\n      [\n        { text: \"Add Signature\" },\n        { text: \"Add Initial\" },\n\n      ]\n    }\n];\n\nfunction disableInkAnnotation() {\n  if(isInkEnabled)\n  {\n    viewer.annotation.setAnnotationMode(\"None\");\n    isInkEnabled = false;\n  }\n}\nfunction previousClicked(args: ClickEventArgs): void {\n   disableInkAnnotation();\n    hidePopups();\n    viewer.navigation.goToPreviousPage();\n    searchActive = true;\n}\n\nfunction checkSearchActive(args:any) {\n  if(!searchActive) {\n    viewer.textSearch.clearAllOccurrences();\n  }\n}\n\nfunction inputChange(args:any) {\n  viewer.textSearch.clearAllOccurrences();\n  searchActive = false;\n  if((searchInput as HTMLInputElement).value == '') {\n    updateSearchInputIcon(true);\n  }\n}\n\nfunction hidePopups(): void {\n    isBookmarkOpen = false;\n    isTextSearchBoxOpen = false;\n    bookmarkPopup.hide();\n    textSearchPopup.hide();\n}\n\nfunction bookmarkClicked(): void {\n    textSearchPopup.hide();\n    if (!isBookmarkOpen) {\n        let bookmarkDetails: any = viewer.bookmark.getBookmarks();\n        if (bookmarkDetails.bookmarks) {\n            if (!isBookmarkView) {\n                let bookmarks: any = bookmarkDetails.bookmarks.bookMark;\n                treeObj = new TreeView({\n                    fields:\n                    {\n                        dataSource: bookmarks,\n                        id: 'Id',\n                        child: 'Child',\n                        text: 'Title',\n                        hasChildren: 'HasChild',\n                    }, nodeSelected: nodeClick\n                });\n                isBookmarkView = true;\n                treeObj.appendTo('#bookmarkview');\n                // tslint:disable-next-line:max-line-length\n                ['mouseover', 'keydown'].forEach( (evt: string) => document.getElementById('bookmarkview').addEventListener(evt, (event: Event) => {\n                    setHeight(event.target); }));\n            }\n            bookmarkPopup.show();\n            isBookmarkOpen = true;\n            isBookmarkClick = true;\n        } else {\n            toolbarObj.enableItems(document.getElementById('bookmarkButton'), false);\n            isBookmarkOpen = false;\n        }\n    } else {\n        if (!isBookmarkClick) {\n            bookmarkPopup.show();\n            isBookmarkClick = true;\n        } else {\n            bookmarkPopup.hide();\n            isBookmarkClick = false;\n        }\n    }\n}\n\nfunction nextClicked(args: ClickEventArgs): void {\n  disableInkAnnotation();\n    hidePopups();\n    viewer.navigation.goToNextPage();\n}\n\nfunction searchClicked(args: ClickEventArgs): void {\n  disableInkAnnotation();\n    bookmarkPopup.hide();\n    if (!isTextSearchBoxOpen) {\n        textSearchPopup.show();\n    } else {\n        updateSearchInputIcon(true);\n        (searchInput as HTMLInputElement).value = '';\n        viewer.textSearch.cancelTextSearch();\n        textSearchPopup.hide();\n    }\n    isTextSearchBoxOpen = !isTextSearchBoxOpen;\n}\n\nfunction printClicked(args: ClickEventArgs): void {\n  disableInkAnnotation();\n    hidePopups();\n    viewer.print.print();\n}\n\nfunction downloadClicked(args: ClickEventArgs): void {\n  disableInkAnnotation();\n    hidePopups();\n    viewer.download();\n}\n\nfunction pageFitClicked(args: ClickEventArgs): void {\n    hidePopups();\n    viewer.magnification.fitToPage();\n    updateZoomButtons();\n    toolbarObj.enableItems(document.getElementById('fitPage'), false);\n}\n\nfunction zoomInClicked(args: ClickEventArgs): void {\n    hidePopups();\n    viewer.magnification.zoomIn();\n    updateZoomButtons();\n}\n\nfunction zoomOutClicked(args: ClickEventArgs): void {\n    hidePopups();\n    viewer.magnification.zoomOut();\n    updateZoomButtons();\n}\n\nfunction onCurrentPageBoxKeypress(event: KeyboardEvent): boolean {\n    if ((event.which < 48 || event.which > 57) && event.which !== 8 && event.which !== 13) {\n        event.preventDefault();\n        return false;\n    } else {\n        // tslint:disable-next-line:radix\n        let currentPageNumber: number = parseInt((currentPageBox as HTMLInputElement).value);\n        if (event.which === 13) {\n            if (currentPageNumber > 0 && currentPageNumber <= viewer.pageCount) {\n                viewer.navigation.goToPage(currentPageNumber);\n            } else {\n                (currentPageBox as HTMLInputElement).value = viewer.currentPageNumber.toString();\n            }\n        }\n        return true;\n    }\n}\n\nfunction onCurrentPageBoxClicked(): void {\n    (currentPageBox as HTMLInputElement).select();\n    (currentPageBox).focus();\n}\n\nfunction  readFile(args:  any):  void  {\n    // tslint:disable-next-line\n    let  upoadedFiles:  any  =  args.target.files;\n    if  (args.target.files[0]  !==  null) {\n        let  uploadedFile:  File  =  upoadedFiles[0];\n        if  (uploadedFile) {\n            let  reader:  FileReader  =  new  FileReader();\n            let filename: string = upoadedFiles[0].name;\n            reader.readAsDataURL(uploadedFile);\n            // tslint:disable-next-line\n            reader.onload  =  (e:  any):  void  =>  {\n                let  uploadedFileUrl:  string  =  e.currentTarget.result;\n                viewer.documentPath= uploadedFileUrl;\n                viewer.fileName = filename;\n                viewer.downloadFileName = filename;\n                (currentPageBox as HTMLInputElement).value = '1';\n                document.getElementById('totalPage').textContent = 'of ' + viewer.pageCount;\n                document.getElementById('bookmarkview').innerHTML = '';\n                isBookmarkOpen = false;\n                isBookmarkView = false;\n            };\n        }\n    }\n}\n\nfunction  openDocument(e:  ClickEventArgs):  void  {\n    disableInkAnnotation();\n    const textSearchToolbarElement = document.getElementById('textSearchToolbar');\n  if (textSearchToolbarElement !== null && textSearchToolbarElement.style.display === 'block') {\n    textSearchToolbarElement.style.display = 'none';\n  }\n  const formFieldToolbarElement = document.getElementById('formFieldToolbar');\n  if (formFieldToolbarElement !== null && formFieldToolbarElement.style.display === 'block') {\n    formFieldToolbarElement.style.display = 'none';\n    viewer.designerMode = false;\n  }\n    document.getElementById('fileUpload').click();\n}\n\nfunction updatePageNavigation(): void {\n    if (viewer.currentPageNumber === 1) {\n        toolbarObj.enableItems(document.getElementById('previousPage'), false);\n        toolbarObj.enableItems(document.getElementById('nextPage'), true);\n    } else if (viewer.currentPageNumber === viewer.pageCount) {\n        toolbarObj.enableItems(document.getElementById('previousPage'), true);\n        toolbarObj.enableItems(document.getElementById('nextPage'), false);\n    } else {\n        toolbarObj.enableItems(document.getElementById('previousPage'), true);\n        toolbarObj.enableItems(document.getElementById('nextPage'), true);\n    }\n}\n\nfunction updateZoomButtons(): void {\n    if (viewer.zoomPercentage <= 50) {\n        toolbarObj.enableItems(document.getElementById('zoomIn'), true);\n        toolbarObj.enableItems(document.getElementById('zoomOut'), false);\n        toolbarObj.enableItems(document.getElementById('fitPage'), true);\n    } else if (viewer.zoomPercentage >= 400) {\n        toolbarObj.enableItems(document.getElementById('zoomIn'), false);\n        toolbarObj.enableItems(document.getElementById('zoomOut'), true);\n        toolbarObj.enableItems(document.getElementById('fitPage'), true);\n    } else {\n        toolbarObj.enableItems(document.getElementById('zoomIn'), true);\n        toolbarObj.enableItems(document.getElementById('zoomOut'), true);\n        toolbarObj.enableItems(document.getElementById('fitPage'), true);\n    }\n}\n\nfunction nodeClick(args: NodeSelectEventArgs): boolean {\n    let bookmarksDetails: any = viewer.bookmark.getBookmarks();\n    setHeight(args.node);\n    let bookmarksDestination: any = bookmarksDetails.bookmarksDestination;\n    let bookid: number = Number(args.nodeData.id);\n    let pageIndex: number = bookmarksDestination.bookMarkDestination[bookid].PageIndex;\n    let Y: number = bookmarksDestination.bookMarkDestination[bookid].Y;\n    viewer.bookmark.goToBookmark(pageIndex, Y);\n    return false;\n}\n\n// tslint:disable-next-line\nfunction setHeight(element:any): void {\n    if (treeObj.fullRowSelect) {\n        if (element.classList.contains('e-treeview')) {\n          element = element.querySelector('.e-node-focus').querySelector('.e-fullrow');\n        } else if (element.classList.contains('e-list-parent')) {\n          element = element.querySelector('.e-fullrow');\n        } else if (element.classList.value !== ('e-fullrow') && element.closest('.e-list-item')) {\n          element = element.closest('.e-list-item').querySelector('.e-fullrow');\n        }\n        if (element.nextElementSibling) {\n          element.style.height = element.nextElementSibling.offsetHeight + 'px';\n        }\n    }\n}\n  \nfunction onItemSelect (args:any) {\n  disableInkAnnotation();\n  const textSearchToolbarElement = document.getElementById('textSearchToolbar');\n  if (textSearchToolbarElement !== null && textSearchToolbarElement.style.display === 'block') {\n    textSearchToolbarElement.style.display = 'none';\n  }\n\n  const formFieldToolbarElement = document.getElementById('formFieldToolbar');\n  if (formFieldToolbarElement !== null && formFieldToolbarElement.style.display === 'block') {\n    formFieldToolbarElement.style.display = 'none';\n    viewer.designerMode = false;\n  }\n  var stampId = args.element.id;\n    var stampText = args.element.innerText;\n    if (stampId === 'Dynamic' && stampText != null) {\n      if (stampText === 'Revised') {\n        viewer.annotation.setAnnotationMode('Stamp', DynamicStampItem.Revised);\n      } else if (stampText == 'Reviewed') {\n        viewer.annotation.setAnnotationMode('Stamp', DynamicStampItem.Reviewed);\n      } else if (stampText == 'Received') {\n        viewer.annotation.setAnnotationMode('Stamp', DynamicStampItem.Received);\n      } else if (stampText == 'Confidential') {\n        viewer.annotation.setAnnotationMode('Stamp', DynamicStampItem.Confidential);\n      } else if (stampText == 'Approved') {\n        viewer.annotation.setAnnotationMode('Stamp', DynamicStampItem.Approved);\n      } else if (stampText == 'Not Approved') {\n        viewer.annotation.setAnnotationMode('Stamp', DynamicStampItem.NotApproved);\n      }\n    }\n    if (stampId === 'Sign Here' && stampText != null) {\n      if (stampText === 'Witness') {\n        viewer.annotation.setAnnotationMode('Stamp', undefined, SignStampItem.Witness);\n      } else if (stampText == 'Initial Here') {\n        viewer.annotation.setAnnotationMode('Stamp', undefined, SignStampItem.InitialHere);\n      } else if (stampText == 'Sign Here') {\n        viewer.annotation.setAnnotationMode('Stamp', undefined, SignStampItem.SignHere);\n      } else if (stampText == 'Accepted') {\n        viewer.annotation.setAnnotationMode('Stamp', undefined, SignStampItem.Accepted);\n      } else if (stampText == 'Rejected') {\n        viewer.annotation.setAnnotationMode('Stamp', undefined, SignStampItem.Rejected);\n      }\n    }\n    if (stampId === 'Standard Business' && stampText != null) {\n      if (stampText === 'Approved') {\n        viewer.annotation.setAnnotationMode(\n          'Stamp',\n          undefined,\n          undefined,\n          StandardBusinessStampItem.Approved\n        );\n      } else if (stampText == 'Not Approved') {\n        viewer.annotation.setAnnotationMode(\n          'Stamp',\n          undefined,\n          undefined,\n          StandardBusinessStampItem.NotApproved\n        );\n      } else if (stampText == 'Draft') {\n        viewer.annotation.setAnnotationMode(\n          'Stamp',\n          undefined,\n          undefined,\n          StandardBusinessStampItem.Draft\n        );\n      } else if (stampText == 'Final') {\n        viewer.annotation.setAnnotationMode(\n          'Stamp',\n          undefined,\n          undefined,\n          StandardBusinessStampItem.Final\n        );\n      } else if (stampText == 'Completed') {\n        viewer.annotation.setAnnotationMode(\n          'Stamp',\n          undefined,\n          undefined,\n          StandardBusinessStampItem.Completed\n        );\n      } else if (stampText == 'Confidential') {\n        viewer.annotation.setAnnotationMode(\n          'Stamp',\n          undefined,\n          undefined,\n          StandardBusinessStampItem.Confidential\n        );\n      } else if (stampText == 'For Public Release') {\n        viewer.annotation.setAnnotationMode(\n          'Stamp',\n          undefined,\n          undefined,\n          StandardBusinessStampItem.ForPublicRelease\n        );\n      } else if (stampText == 'Not For Public Release') {\n        viewer.annotation.setAnnotationMode(\n          'Stamp',\n          undefined,\n          undefined,\n          StandardBusinessStampItem.NotForPublicRelease\n        );\n      } else if (stampText == 'For Comment') {\n        viewer.annotation.setAnnotationMode(\n          'Stamp',\n          undefined,\n          undefined,\n          StandardBusinessStampItem.ForComment\n        );\n      } else if (stampText == 'Void') {\n        viewer.annotation.setAnnotationMode(\n          'Stamp',\n          undefined,\n          undefined,\n          StandardBusinessStampItem.Void\n        );\n      } else if (stampText == 'Preliminary Results') {\n        viewer.annotation.setAnnotationMode(\n          'Stamp',\n          undefined,\n          undefined,\n          StandardBusinessStampItem.PreliminaryResults\n        );\n      } else if (stampText == 'Information Only') {\n        viewer.annotation.setAnnotationMode(\n          'Stamp',\n          undefined,\n          undefined,\n          StandardBusinessStampItem.InformationOnly\n        );\n      }\n    }\n  }\n  function textSelection(e: ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.interactionMode = 'TextSelection';\n    viewer.enableTextSelection = true; \n  }\n  function panMode(e: ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.interactionMode = 'Pan';\n    // viewer.enablePanMode = true;\n  }\n\nfunction openEditAnnotation(args:ClickEventArgs) {\n    disableInkAnnotation();\n    const textSearchToolbarElement = document.getElementById('textSearchToolbar');\n    if (textSearchToolbarElement !== null && textSearchToolbarElement.style.display === 'block') {\n      textSearchToolbarElement.style.display = 'none';\n    }\n\n    const formFieldToolbarElement = document.getElementById('formFieldToolbar');\n    if (formFieldToolbarElement !== null && formFieldToolbarElement.style.display === 'block') {\n      formFieldToolbarElement.style.display = 'none';\n      viewer.designerMode = false;\n    }\n    const editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n    if (editAnnotationToolbarElement !== null) {\n      if (editAnnotationToolbarElement.style.display === 'block') {\n        editAnnotationToolbarElement.style.display = 'none';\n      } else {\n        editAnnotationToolbarElement.style.display = 'block';\n      }\n    }\n\n  }\n\n  function addEditFormFields(args:ClickEventArgs){\n    disableInkAnnotation();\n    const formFieldToolbarElement = document.getElementById('formFieldToolbar');\n    if (formFieldToolbarElement !== null) {\n      if (formFieldToolbarElement.style.display === 'block') {\n        formFieldToolbarElement.style.display = 'none';\n        viewer.designerMode = false;\n      } else {\n        formFieldToolbarElement.style.display = 'block';\n        viewer.designerMode = true;\n      }\n    }\n\n    const editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n    if (editAnnotationToolbarElement !== null && editAnnotationToolbarElement.style.display === 'block') {\n      editAnnotationToolbarElement.style.display = 'none';\n    }\n\n    const textSearchToolbarElement = document.getElementById('textSearchToolbar');\n    if (textSearchToolbarElement !== null && textSearchToolbarElement.style.display === 'block') {\n      textSearchToolbarElement.style.display = 'none';\n    }\n  }\n  function highlight(args:ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.annotation.setAnnotationMode('Highlight');\n  }\n  function underLine(args:ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.annotation.setAnnotationMode('Underline');\n  }\n  \n  function strikeThrough(args:ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.annotation.setAnnotationMode('Strikethrough');\n  }\n  \n  function addLine(args:ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.annotation.setAnnotationMode('Line');\n  }\n  \n  function addArrow(args:ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.annotation.setAnnotationMode('Arrow');\n  }\n  \n  function addRectangle(args:ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.annotation.setAnnotationMode('Rectangle');\n  }\n  \n  function addCircle(args:ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.annotation.setAnnotationMode('Circle');\n  }\n  \n  function addPoligon(args:ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.annotation.setAnnotationMode('Polygon');\n  }\n  \n  function distance(args:ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.annotation.setAnnotationMode('Distance');\n  }\n  \n  function perimeter(args:ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.annotation.setAnnotationMode('Perimeter');\n  }\n  \n  function area(args:ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.annotation.setAnnotationMode('Area');\n  }\n  \n  function radius(args:ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.annotation.setAnnotationMode('Radius');\n  }\n  \n  function volume(args:ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.annotation.setAnnotationMode('Volume');\n  }\n  \n  function freeText(args:ClickEventArgs) {\n    disableInkAnnotation();\n    viewer.annotation.setAnnotationMode('FreeText');\n  }\n  \n  \n  \n  \n  function ink(args:ClickEventArgs) {\n    if(!isInkEnabled)\n    {\n      viewer.annotation.setAnnotationMode(\"Ink\");\n      isInkEnabled=true;\n    }\n    else\n    {\n      viewer.annotation.setAnnotationMode(\"None\");\n      isInkEnabled =false;\n    }\n  }\n  function textBox(args:ClickEventArgs) {\n    viewer.formDesignerModule.setFormFieldMode('Textbox');\n  }\n  \n  function passWord(args:ClickEventArgs) {\n    viewer.formDesignerModule.setFormFieldMode('Password');\n  }\n  \n  function checkBox(args:ClickEventArgs) {\n    viewer.formDesignerModule.setFormFieldMode('CheckBox');\n  }\n  \n  function radioButton(args:ClickEventArgs) {\n    viewer.formDesignerModule.setFormFieldMode('RadioButton');\n  }\n  \n  function dropDown(args:ClickEventArgs) {\n    viewer.formDesignerModule.setFormFieldMode('DropDown');\n  }\n  \n  function listBox(args:ClickEventArgs) {\n    viewer.formDesignerModule.setFormFieldMode('ListBox');\n  }\n  \nfunction searchInputKeypressed(event: KeyboardEvent): void {\n    enablePrevButton(true);\n    enableNextButton(true);\n    if (event.which === 13) {\n        searchActive = true;\n        initiateTextSearch();\n        updateSearchInputIcon(false);\n    }\n}\n\nfunction searchClickHandler(): void {\n    if (searchButton.classList.contains('e-pv-search-icon')) {\n        viewer.textSearch.cancelTextSearch();\n        initiateTextSearch();\n        updateSearchInputIcon(false);\n    } else if (searchButton.classList.contains('e-pv-search-close')) {\n        (searchInput as HTMLInputElement).value = '';\n        updateSearchInputIcon(true);\n        searchInput.focus();\n        viewer.textSearch.cancelTextSearch();\n    }\n}\n\nfunction initiateTextSearch(): void {\n    let searchString: string = (searchInput as HTMLInputElement).value;\n    viewer.textSearch.searchText(searchString, matchCase);\n}\n\nfunction previousSearchClicked(): void {\n    let searchString: string = (searchInput as HTMLInputElement).value;\n    if (searchString) {\n        viewer.textSearch.searchPrevious();\n    }\n}\n\nfunction nextSearchClicked(): void {\n    searchActive = true;\n    let searchString: string = (searchInput as HTMLInputElement).value;\n    if (searchString) {\n        viewer.textSearch.searchNext();\n    }\n}\n\nfunction checkBoxChanged(args: ChangeEventArgs): void {\n    if (args.checked) {\n        matchCase = true;\n    } else {\n        matchCase = false;\n    }\n    initiateTextSearch();\n}\n\nfunction enablePrevButton(isEnable: boolean): void {\n    let previousSearchButton: HTMLElement = document.getElementById('previousSearch');\n    if (isEnable) {\n        previousSearchButton.removeAttribute('disabled');\n    } else {\n        (previousSearchButton as HTMLButtonElement).disabled = true;\n    }\n}\n\nfunction enableNextButton(isEnable: boolean): void {\n    let nextSearchButton: HTMLElement = document.getElementById('nextSearch');\n    if (isEnable) {\n        nextSearchButton.removeAttribute('disabled');\n    } else {\n        (nextSearchButton as HTMLButtonElement).disabled = true;\n    }\n}\n\nfunction updateSearchInputIcon(isEnable: boolean): void {\n    if (isEnable) {\n        searchButton.classList.remove('e-pv-search-close');\n        searchButton.classList.add('e-pv-search-icon');\n    } else {\n        searchButton.classList.remove('e-pv-search-icon');\n        searchButton.classList.add('e-pv-search-close');\n    }\n}\nfunction onSignatureClick(event : any): void{\n  const editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar') as HTMLElement | null;\n\n  if (editAnnotationToolbarElement && editAnnotationToolbarElement.style.display === 'block') {\n    if (event.element instanceof HTMLElement) {\n      if (event.element.innerText === 'Add Signature') {\n        viewer.annotationModule.setAnnotationMode('HandWrittenSignature');\n      } else if (event.element.innerText === 'Add Initial') {\n        viewer.annotationModule.setAnnotationMode('Initial');\n      }\n    }\n  }\n\n  const formFieldToolbarElement = document.getElementById('formFieldToolbar') as HTMLElement | null;\n\n  if (formFieldToolbarElement && formFieldToolbarElement.style.display === 'block') {\n    if (event.element instanceof HTMLElement) {\n      if (event.element.innerText === 'Add Signature') {\n        viewer.formDesignerModule.setFormFieldMode('SignatureField');\n      } else if (event.element.innerText === 'Add Initial') {\n        viewer.formDesignerModule.setFormFieldMode('InitialField');\n      }\n    }\n  }\n}\n\n    \n    toolbarObj = new Tool({\n        items: [\n            { prefixIcon: 'e-icons e-folder', tooltipText: 'Open', id: 'openButton', click: openDocument.bind(this) },\n            { prefixIcon: 'e-icons e-save', tooltipText: 'Save', id:'save', click: downloadClicked.bind(this) },\n            // tslint:disable-next-line:max-line-length\n            { prefixIcon: 'e-icons e-chevron-left', id: 'previousPage', tooltipText: 'Previous Page', align: 'Center', click: previousClicked.bind(this) },\n            // tslint:disable-next-line:max-line-length\n            { prefixIcon: 'e-icons e-chevron-right', id: 'nextPage', tooltipText: 'Next Page', align: 'Center', click: nextClicked.bind(this) },\n            { template: inputTemplate, tooltipText: 'Page Number', align: 'Center' },\n            { template: ele, tooltipText: 'Page Number', align: 'Center' },\n            { type:\"Separator\",tooltipText:\"separator\", align:\"Center\" },\n            { prefixIcon:\"e-icons e-mouse-pointer\", tooltipText:\"Text Selection Tool\", align:\"Center\", click: textSelection.bind(this) },\n            { prefixIcon:\"e-icons e-pan\", tooltipText:\"Pan Mode\", align:\"Center\", click: panMode.bind(this) },\n            { type:\"Separator\",tooltipText:\"separator\", align:\"Center\" },\n            { prefixIcon:\"e-icons e-annotation-edit\", tooltipText:\"Edit Annotations\", align:\"Center\", click: openEditAnnotation.bind(this) },\n            { type:\"Separator\",tooltipText:\"separator\", align:\"Center\" },\n            { prefixIcon:\"e-icons e-split-vertical\", tooltipText:\"Add and Edit Form Fields\", align:\"Center\", click: addEditFormFields.bind(this) },\n            { type:\"Separator\",tooltipText:\"separator\", align:\"Center\" },\n            { prefixIcon: 'e-icons e-search', tooltipText: 'Text Search', align: 'Right', click: searchClicked.bind(this) },\n            { prefixIcon: 'e-icons e-print', tooltipText: 'Print', align: 'Right', click: printClicked.bind(this) }          \n        ]\n    });\n    toolbarObj.appendTo('#topToolbar');\n    var editAnnotationToolbarToolbar = new Tool({\n        items: [\n            { prefixIcon:\"e-icons e-highlight-color\", click: highlight.bind(this), tooltipText:\"Highlight\", id:\"highlight\", align:\"Center\" },\n            { prefixIcon: 'e-icons e-underline', click: underLine.bind(this), tooltipText: 'Underline', id: 'underline', align: 'Center' },\n            { prefixIcon: 'e-icons e-strikethrough', click: strikeThrough.bind(this), tooltipText: 'Strikethrough', id: 'strikethrough', align: 'Center' },\n            { type: 'Separator', tooltipText: 'separator', align: 'Center' },\n            { prefixIcon: 'e-icons e-line', click: addLine.bind(this), tooltipText: 'Add Line', id: 'line', align: 'Center' },\n            { prefixIcon: 'e-icons e-arrow-right-up', click: addArrow.bind(this), tooltipText: 'Add Arrow', id: 'arrow', align: 'Center' },\n            { prefixIcon: 'e-icons e-rectangle', click: addRectangle.bind(this), tooltipText: 'Add Rectangle', id: 'rectangle', align: 'Center' },\n            { prefixIcon: 'e-icons e-circle', click: addCircle.bind(this), tooltipText: 'Add Circle', id: 'circle', align: 'Center' },\n            { prefixIcon: 'e-icons e-pentagon', click: addPoligon.bind(this), tooltipText: 'Add Polygon', id: 'polygon', align: 'Center' },\n            { type: 'Separator', tooltipText: 'separator', align: 'Center' },\n            { prefixIcon: 'e-icons e-length', click: distance.bind(this), tooltipText: 'Calibrate Distance', id: 'calibrate_distance', align: 'Center' },\n            { prefixIcon: 'e-icons e-perimeter', click: perimeter.bind(this), tooltipText: 'Calibrate Perimeter', id: 'calibrate_perimeter', align: 'Center' },\n            { prefixIcon: 'e-icons e-area', click: area.bind(this), tooltipText: 'Calibrate Area', id: 'calibrate_area', align: 'Center' },\n            { prefixIcon: 'e-icons e-radius', click: radius.bind(this), tooltipText: 'Calibrate Radius', id: 'calibrate_radius', align: 'Center' },\n            { prefixIcon: 'e-icons e-volume', click: volume.bind(this), tooltipText: 'Calibrate Volume', id: 'calibrate_volume', align: 'Center' },\n            { type: 'Separator', tooltipText: 'separator', align: 'Center' },\n            { prefixIcon: 'e-icons e-text-annotation', click: freeText.bind(this), tooltipText: 'Free Text', id: 'freeText', align: 'Center' },\n            { type: 'Separator', tooltipText: 'separator', align: 'Center' },\n            { prefixIcon: 'e-icons e-stamp', tooltipText: 'Add Stamp', id: 'stamp', align: 'Center', template: `<div><ul id=\"menu\"></ul></div>`},\n            { type: 'Separator', tooltipText: 'separator', align: 'Center' },\n            { id: 'signature', tooltipText: 'Add Signature', align: 'Center', template: `<div><ul id=\"signatureToolbar\"></ul></div>`},\n            { type: 'Separator', tooltipText: 'separator', align: 'Center' },\n            { prefixIcon: 'e-icons e-style', click: ink.bind(this), id: 'ink', tooltipText: 'Ink', align: 'Center' }\n        ]\n    });\n    editAnnotationToolbarToolbar.appendTo('#editAnnotationToolbar');\n    var formFieldToolbar = new Tool({\n        items: [\n         { id: 'textbox', prefixIcon: 'e-icons e-text-form', click: textBox.bind(this), tooltipText: 'Textbox', align: 'Center' },\n         { id: 'password', prefixIcon: 'e-icons e-password', click: passWord.bind(this), tooltipText: 'Password', align: 'Center' },\n         { id: 'checkbox', prefixIcon: 'e-icons e-check-box', click: checkBox.bind(this), tooltipText: 'Checkbox', align: 'Center' },\n         { id: 'radio_button', prefixIcon: 'e-icons e-radio-button', click: radioButton.bind(this), tooltipText: 'Radio Button', align: 'Center' },\n         { id: 'drop_down', prefixIcon: 'e-icons e-drop-down', click: dropDown.bind(this), tooltipText: 'Drop Down', align: 'Center' },\n         { id: 'list_box', prefixIcon: 'e-icons e-list-unordered', click: listBox.bind(this), tooltipText: 'List Box', align: 'Center' },\n         { id: 'formField_signature',tooltipText: 'Add Signature', align: 'Center',template: `<div><ul id=\"formFieldSignatureToolbar\"></ul></div>` }\n        ]\n    });\n    formFieldToolbar.appendTo('#formFieldToolbar');\n    let magnificationToolbar: Tool = new Tool({\n        items: [\n            { prefixIcon: 'e-pv-fit-page-icon', id: 'fitPage', tooltipText: 'Fit to page', click: pageFitClicked.bind(this) },\n            { prefixIcon: 'e-icons e-circle-add', id: 'zoomIn', tooltipText: 'Zoom in', click: zoomInClicked.bind(this) },\n            { prefixIcon: 'e-icons e-circle-remove', id: 'zoomOut', tooltipText: 'Zoom out', click: zoomOutClicked.bind(this) },\n        ]\n    });\n    magnificationToolbar.appendTo('#magnificationToolbar');\n    viewer = new PdfViewer({\n        enableToolbar: false,\n        enableNavigationToolbar: false,\n        enableThumbnail: false,\n        enableAnnotationToolbar:false,\n        enableCommentPanel:false,\n        documentPath: 'https://cdn.syncfusion.com/content/pdf/hive-succinctly.pdf',\n        resourceUrl:'https://cdn.syncfusion.com/ej2/23.2.6/dist/ej2-pdfviewer-lib'\n    });\n    viewer.appendTo('#pdfViewer');\n    isBookmarkView = false;\n    document.getElementById('fileUpload').addEventListener('change', readFile, false);\n    currentPageBox = document.getElementById('currentPage');\n    (currentPageBox as HTMLInputElement).value = '1';\n    searchInput = document.getElementById('searchInput');\n    bookmarkPopup = new Dialog({\n        showCloseIcon: true, header: 'Bookmarks', closeOnEscape: false, isModal: false, target: document.getElementById('pdfViewer'),\n        content: '<div class=\"e-pv-bookmarks\" id=\"bookmarkview\"></div>',\n        buttons: [{\n            buttonModel: {},\n        }], position: { X: 'left', Y: 'top' }, cssClass: 'e-bookmark-popup', beforeClose: (): void => {\n            isBookmarkOpen = false;\n         }\n    });\n    bookmarkPopup.appendTo('#popup');\n\n    textSearchPopup = new Dialog({\n        showCloseIcon: false, closeOnEscape: false, isModal: false, target: document.getElementById('pdfViewer'),\n        buttons: [{\n            buttonModel: {},\n        }], position: { X: 'right', Y: 'top' }, cssClass: 'e-text-search-popup',\n    });\n    textSearchPopup.appendTo('#textSearchBox');\n\n    let previousSearch: Button = new Button({ iconCss: 'e-icons e-chevron-left' });\n    previousSearch.appendTo('#previousSearch');\n\n    let nextSearch: Button = new Button({ iconCss: 'e-icons e-chevron-right' });\n    nextSearch.appendTo('#nextSearch');\n\n    let matchCaseCheck: CheckBox = new CheckBox({ label: 'Match case', change: checkBoxChanged });\n    matchCaseCheck.appendTo('#matchCase');\n\n    viewer.pageChange = (args: PageChangeEventArgs): void => {\n        (currentPageBox as HTMLInputElement).value = viewer.currentPageNumber.toString();\n        updatePageNavigation();\n    };\n\n    viewer.documentLoad = (args: LoadEventArgs): void => {\n        document.getElementById('totalPage').textContent = 'of ' + viewer.pageCount;\n        updatePageNavigation();\n    };\n\n    var switchObj = new Switch({ value: 'Standalone Rendering', checked: true });\n    switchObj.appendTo('#checked');\n\n    switchObj.change = function (args:any) {\n        if (args.checked) {\n            viewer.serviceUrl = '';\n        }\n        else {\n            viewer.serviceUrl = 'http://localhost:62728/api/pdfviewer';\n        }\n        viewer.dataBind();\n        viewer.load(viewer.documentPath, null);\n    }\n    new Menu({ items: data, select:onItemSelect, showItemOnClick: true }, \"#menu\");\n    new Menu({items:signMenu,select:onSignatureClick,showItemOnClick:true},\"#signatureToolbar\");\n    new Menu({items:signMenu,select:onSignatureClick,showItemOnClick:true},\"#formFieldSignatureToolbar\");\n    searchButton = document.getElementById('searchBtn');\n    document.addEventListener('click', checkSearchActive);\n    searchInput.addEventListener('focus', () => { searchInput.parentElement.classList.add('e-input-focus'); });\n    searchInput.addEventListener('blur', () => { searchInput.parentElement.classList.remove('e-input-focus'); });\n    searchInput.addEventListener('keypress', searchInputKeypressed);\n    searchInput.addEventListener('input', inputChange);\n    document.getElementById('previousSearch').addEventListener('click', previousSearchClicked);\n    document.getElementById('nextSearch').addEventListener('click', nextSearchClicked);\n    currentPageBox.addEventListener('keypress', onCurrentPageBoxKeypress);\n    currentPageBox.addEventListener('click', onCurrentPageBoxClicked);\n    searchButton.addEventListener('click', searchClickHandler);\n    document.getElementById('e-dropdown-btn-item_63').addEventListener('click', onSignatureClick);\n    document.getElementById('e-dropdown-btn-item_65').addEventListener('click', onSignatureClick);\n    bookmarkPopup.hide();\n    textSearchPopup.hide();\n    enableNextButton(false);\n    enablePrevButton(false);\n"}