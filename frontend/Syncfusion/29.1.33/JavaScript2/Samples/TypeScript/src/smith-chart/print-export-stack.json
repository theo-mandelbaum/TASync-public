{"theme-color.ts":"import { ISmithchartLoadEventArgs, SmithchartTheme } from \"@syncfusion/ej2/charts\";\n\nexport function loadSmithChartTheme(args: ISmithchartLoadEventArgs): void {\n    let theme: string = location.hash.split('/')[1];\n    theme = theme ? theme : 'Tailwind3';\n    args.smithchart.theme = <SmithchartTheme>(theme.charAt(0).toUpperCase() + theme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast'));\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-9 control-section\">\n    <div id=\"container\">\n    </div>\n</div>\n<!-- property panel -->\n<div class=\"col-lg-3 property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n        <tbody>\n            <tr style=\"height: 50px\">\n                <td style=\"width: 40%\">\n                    <div class=\"property-text\">Export Type</div>\n                </td>\n                <td style=\"width: 60%;\">\n                    <div style=\"margin-left: -10px\">\n                        <select id=\"mode\">\n                            <option value=\"JPEG\">JPEG</option>\n                            <option value=\"PNG\">PNG</option>\n                            <option value=\"SVG\">SVG</option>\n                            <option value=\"PDF\">PDF</option>\n                        </select>\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td style=\"width: 40%\">\n                    <div class=\"property-text\" id=\"filename\">File Name</div>\n                </td>\n                <td style=\"width: 60%;\">\n                    <div class=\"e-float-input\" style=\"margin-top: 0px;\">\n                        <input type=\"text\" value=\"Smith chart\" id=\"fileName\" style=\"margin-left: -10px;width: 100px\" aria-labelledby=\"Smith Chart\">\n                    </div>\n                </td>\n            </tr>\n            <tr id=\"button-control1\">\n                <td>\n                    <div style=\"height: 45px; margin-left: 50%;\">\n                        <button id=\"togglebtn1\" style=\"text-transform:none !important;widows: 80px;\">Export</button>\n                    </div>\n                </td>\n            </tr>\n            <tr id=\"button-control2\">\n                <td>\n                    <div style=\"height: 45px; margin-left: 50%;\">\n                        <button id=\"togglebtn2\" style=\"text-transform:none !important;width: 80px;\">Print</button>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n\n\n\n\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-charts/index\": \"*\",\n  \"@syncfusion/ej2-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}// custom code start\n\n// custom code end\n/**\n * Print and export sample for smith chart\n */\nimport { Smithchart, SmithchartLegend, TooltipRender, SmithchartExportType, ISmithchartLoadEventArgs,\n    SmithchartTheme } from '@syncfusion/ej2-charts/index';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { loadSmithChartTheme } from './theme-color';\nSmithchart.Inject(SmithchartLegend, TooltipRender);\n\n\n    // custom code start\n    \n    // custom code end\n    let smithchart: Smithchart = new Smithchart({\n        // custom code start\n        load: (args: ISmithchartLoadEventArgs) => {\n            loadSmithChartTheme(args);\n        },\n        // custom code end\n        horizontalAxis: {\n            minorGridLines: {\n                visible: true\n            }\n        },\n        radialAxis: {\n            minorGridLines: {\n                visible: true\n            }\n        },\n        series: [\n            {\n                points: [\n                    { resistance: 0.15, reactance: 0 },\n                    { resistance: 0.15, reactance: 0.15 },\n                    { resistance: 0.18, reactance: 0.3 },\n                    { resistance: 0.2, reactance: 0.4 },\n                    { resistance: 0.25, reactance: 0.6 },\n                    { resistance: 0.38, reactance: 0.95 },\n                    { resistance: 0.6, reactance: 1.25 },\n                    { resistance: 1, reactance: 1.6 },\n                    { resistance: 1.65, reactance: 1.9 },\n                    { resistance: 2.75, reactance: 2 },\n                    { resistance: 4.5, reactance: 0 },\n                    { resistance: 3, reactance: -2 },\n                    { resistance: 1.65, reactance: -1.95 },\n                    { resistance: 1, reactance: -1.65 },\n                    { resistance: 0.6, reactance: -1.25 },\n                    { resistance: 0.35, reactance: -0.9 },\n                    { resistance: 0.25, reactance: -0.6 },\n                    { resistance: 0.25, reactance: -0.4 },\n                    { resistance: 0.25, reactance: -0.3 },\n                    { resistance: 0.25, reactance: -0.15 },\n                    { resistance: 0.25, reactance: 0 },\n                ],\n                name: 'Transmission',\n                enableAnimation: false,\n                tooltip: { visible: true },\n                marker: {\n                    shape: 'Circle',\n                    visible: true,\n                    border: {\n                        width: 2,\n                    }\n                }\n            },\n        ],\n        legendSettings: {\n            visible: true,\n            shape: 'Circle'\n        }\n    });\n    smithchart.appendTo('#container');\n    let mode: DropDownList = new DropDownList({\n        index: 0,\n        width: 100\n    });\n    mode.appendTo('#mode');\n    let togglebtn1: Button = new Button({\n        iconCss: 'e-icons e-export-icon', cssClass: 'e-flat', isPrimary: true\n    });\n    togglebtn1.appendTo('#togglebtn1');\n    document.getElementById('togglebtn1').onclick = () => {\n        let fileName: string = (<HTMLInputElement>(document.getElementById('fileName'))).value;\n        smithchart.export(<SmithchartExportType>mode.value, fileName);\n    };\n    let togglebtn2: Button = new Button({\n        cssClass: 'e-flat', iconCss: 'e-icons e-print-icon', isPrimary: true\n    });\n    togglebtn2.appendTo('#togglebtn2');\n    document.getElementById('togglebtn2').onclick = () => {\n        smithchart.print();\n    };\n"}