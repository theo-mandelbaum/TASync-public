{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div>\n        <div class=\"col-md-8 control-section\">\n            <div class=\"content-wrapper\">\n                <div id=\"gauge\"></div>\n            </div>\n        </div>\n        <!-- property panel-->\n        <div class=\"col-md-4 property-section\">\n            &nbsp;\n                    &nbsp;\n                    &nbsp;\n                <table id=\"property\" title=\"Properties\" style=\"width: 100%; margin-left:-10px\" role=\"none\">\n                <tbody>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div> Export Type </div>\n                        </td>\n                        <td>\n                            <div>\n                                <select id=\"type\">\n                                    <option value=\"JPEG\" selected=\"\">JPEG</option>\n                                    <option value=\"PNG\">PNG</option>\n                                    <option value=\"SVG\">SVG</option>\n                                    <option value=\"PDF\">PDF</option>\n                                </select>\n                                \n                            </div>\n                        </td>\n                    </tr><tr style=\"height: 50px\">\n                        <td>\n                            <div> File Name </div>\n                        </td>\n                        <td>\n                            <div style=\"margin-top: 0px;\">\n                                <input value=\"Linear Gauge\" type=\"text\" id=\"fileName\">\n                            </div>\n                        </td>\n                    </tr><tr id=\"button-control\" style=\"height: 70px\" align=\"center\">\n                        <td style=\"width: 50%\">\n                            <div style=\"text-align: center;margin-left: 15%;\">\n                                <button id=\"export\" style=\"text-transform: capitalize;\">Export</button>\n                            </div>\n                        </td>\n                        <td style=\"width: 50%\">\n                            <div style=\"text-align: center;margin-left: -20%;\">\n                                <button id=\"print\" style=\"text-transform: capitalize;\">Print</button>\n                            </div>\n                        </td>\n                    </tr></tbody>\n            </table>\n        </div>\n    </div>\n    \n    \n    \n    <style>\n        #button-control {\n            width: 100%;\n            text-align: center;\n        }\n    \n        #control-container {\n            padding: 0px !important;\n        }\n    \n        .e-play-icon::before {\n            content: '\\e34b';\n        }\n    \n        .e-play-icon1::before {\n            content: '\\e728';\n        }\n    \n        .e-view.fluent .e-play-icon::before,\n        .e-view.fluent-dark .e-play-icon::before {\n            content: '\\e75d';\n        }\n    \n        .e-view.fluent .e-play-icon1::before,\n        .e-view.fluent-dark .e-play-icon1::before {\n            content: '\\e72e';\n        }\n    \n        .e-view.fabric .e-play-icon::before,\n        .e-view.fabric-dark .e-play-icon::before {\n            content: '\\e7df';\n        }\n    \n        .e-view.fabric .e-play-icon1::before,\n        .e-view.fabric-dark .e-play-icon1::before {\n            content: '\\e710';\n        }\n    \n        .e-view.bootstrap .e-play-icon::before {\n            content: '\\ebd2';\n        }\n    \n        .e-view.bootstrap4 .e-play-icon1::before {\n            content: '\\e780';\n        }\n    \n        .e-view.bootstrap4 .e-play-icon::before {\n            content: '\\e743';\n        }\n    \n        .e-view.highcontrast .e-play-icon::before {\n            content: '\\ebf9';\n        }\n    \n        .e-view.highcontrast .e-play-icon1::before {\n            content: '\\e710';\n        }\n    \n        .e-view.bootstrap5 .e-play-icon::before,\n        .e-view.bootstrap5-dark .e-play-icon::before {\n            content: '\\e75d';\n        }\n    \n        .e-view.bootstrap5 .e-play-icon1::before,\n        .e-view.bootstrap5-dark .e-play-icon1::before {\n            content: '\\e72e';\n        }\n    </style>\n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-lineargauge\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { LinearGauge, ILoadEventArgs, LinearGaugeTheme, ExportType, Print, ImageExport, PdfExport } from '@syncfusion/ej2-lineargauge';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { TextBox } from '@syncfusion/ej2-inputs';\nLinearGauge.Inject(Print, ImageExport, PdfExport);\n// custom code start\n\n\n// custom code end\n\n    let gauge: LinearGauge = new LinearGauge({\n        orientation: 'Horizontal',\n        title: 'Speedometer',\n        titleStyle: {\n            fontFamily: \"inherit\",\n        },\n        allowPrint: true,\n        allowImageExport: true,\n        allowPdfExport: true,\n        axes: [{\n            minimum: 0,\n            maximum: 120,\n            line:\n            {\n                width: 0\n            },\n            majorTicks: {\n                height: 0,\n                width: 0,\n                interval: 20\n            },\n            minorTicks: {\n                height: 7,\n                width: 0,\n                interval: 4\n            },\n            labelStyle: {\n                position: 'Outside',\n                offset: 4,\n                font: {\n                    fontFamily: \"inherit\",\n                }\n            },\n            ranges: [{\n                start: 0,\n                end: 20,\n                startWidth: 15,\n                endWidth: 25,\n                color: '#82b944'\n            },\n            {\n                start: 20, end: 40, startWidth: 25, endWidth: 35, color: '#a1cb43'\n            },\n            {\n                start: 40, end: 60, startWidth: 35, endWidth: 45, color: '#ddec12'\n            },\n            {\n                start: 60, end: 80, startWidth: 45, endWidth: 55, color: '#ffbc00'\n            },\n            {\n                start: 80, end: 100, startWidth: 55, endWidth: 65, color: '#ff6000'\n            },\n            {\n                start: 100,\n                end: 120,\n                startWidth: 65,\n                endWidth: 75,\n                color: 'red'\n            },\n            ],\n            pointers: [{\n                value: 80,\n                height: 23,\n                width: 35,\n                offset: -55,\n                markerType: 'Triangle',\n                border: {\n                    width: 2,\n                    color: 'white'\n                }\n            }],\n        }],\n        load: (args: ILoadEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.gauge.theme = <LinearGaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge.appendTo('#gauge');\n\n    let mode: DropDownList = new DropDownList({\n        index: 0,\n        width: '100%'\n    });\n    mode.appendTo('#type');\n    let exportGauge: Button = new Button({\n        isPrimary: true\n    });\n    exportGauge.appendTo('#export');\n    let fileText: TextBox = new TextBox({\n        value: 'Linear Gauge',\n        width: '90%'\n    }); \n    fileText.appendTo('#fileName');\n    document.getElementById('export').onclick = () => {\n        let fileName: string = fileText.value;\n        gauge.export(<ExportType>mode.value, fileName);\n    };\n    let printGauge: Button = new Button({\n        isPrimary: true\n    });\n    printGauge.appendTo('#print');\n    document.getElementById('print').onclick = () => {\n        gauge.print();\n    };\n"}