{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div class=\"control-section\">\n        <div id=\"tooltipContainer\"></div>\n    </div>\n    \n    \n    \n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-lineargauge\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { LinearGauge, GaugeTooltip, Annotations, ITooltipRenderEventArgs, IResizeEventArgs, LinearGaugeTheme, IAxisLabelRenderEventArgs, ILoadedEventArgs, ILoadEventArgs  } from '@syncfusion/ej2-lineargauge';\nLinearGauge.Inject(Annotations, GaugeTooltip);\n// custom code start\n\n\n// custom code end\n\n   let gauge = new LinearGauge({\n        container: {\n            width: 140,\n            border: {\n                width: 2,\n                color: '#a6a6a6'\n            }\n        },\n        tooltip: {\n            enable: true,\n            showAtMousePosition: true,\n            textStyle: { fontFamily: \"inherit\" },\n        },\n        background:'transparent',  \n        orientation: 'Horizontal',\n        axes: [\n            {\n                minimum: 0,\n                maximum: 10,\n                line: {\n                    offset: 140,\n                    color:\"#a6a6a6\"\n                },\n                majorTicks: {\n                    interval: 1,\n                    height: 20,\n                    color: \"#9E9E9E\",\n                },\n                minorTicks: {\n                    interval: 0.2,\n                    height: 10,\n                    color: \"#9E9E9E\",\n                },\n                labelStyle: {\n                    font: {\n                        fontFamily: \"inherit\",\n                    }\n                },\n                pointers: [{\n                    type: 'Bar',\n                    value: 5.4,\n                    offset: 15,\n                    color: '#ff66b3'\n                }],\n            },\n            {\n                opposedPosition: true,\n                minimum: 0,\n                maximum: 25,\n                line: {\n                    offset: -140,\n                    color:\"#a6a6a6\"\n                },\n                majorTicks: {\n                    interval: 1,\n                    height: 20,\n                    color: '#9E9E9E',\n                },\n                minorTicks: {\n                    interval: 0.2,\n                    height: 10,\n                    color: '#9E9E9E',\n                },\n                pointers: [{\n                    type: 'Bar',\n                    offset: -15,\n                    value: 16.5,\n                    color: '#4d94ff',\n                }],\n                labelStyle: {\n                    font: {\n                        fontFamily: \"inherit\",\n                    },\n                }\n            }\n        ],\n        annotations: [\n            {\n                content: '<div id=\"first\"><h1 style=\"font-size:15px;color:#686868;\">Inches</h1></div>',\n                axisIndex: 0,\n                axisValue: 5.4,\n                x: 35,\n                y: -58,\n                zIndex: '1'\n            },\n            {\n                content: '<div id=\"second\"><h1 style=\"font-size:15px;color:#686868;\">Centimeters</h1></div>',\n                axisIndex: 1,\n                axisValue: 16.5,\n                x: 50,\n                y: 52,\n                zIndex: '1'\n            }\n        ],\n        axisLabelRender: labelRender,\n        tooltipRender: renderTooltip,\n        load: gaugeLoad,\n        loaded: gaugeLoaded\n    });\n    gauge.appendTo('#tooltipContainer');\n\nfunction renderTooltip(args: ITooltipRenderEventArgs): void {\n    args.content = (args.axis.visibleRange.max === 25) ? args.content + ' cm' : args.content + ' in';\n}\n\nfunction labelRender(args: IAxisLabelRenderEventArgs): void {\n    if (args.axis.visibleRange.min === args.value || args.axis.visibleRange.max === args.value) {\n        args.text = '';\n    }\n}\n\nfunction gaugeLoad(args: ILoadEventArgs): void {\n    // custom code start\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Material';\n    args.gauge.theme = <LinearGaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n        selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n    // custom code end\n    if (args.gauge.theme.toLowerCase().indexOf('dark') > 1 || args.gauge.theme.toLowerCase() === 'highcontrast' || args.gauge.theme.toLowerCase() === 'fluent2highcontrast') {\n        args.gauge.annotations[0].content = '<div id=\"second\"><h1 style=\"font-size:15px; color: #DADADA\">Inches</h1></div>';\n        args.gauge.annotations[1].content = '<div id=\"second\"><h1 style=\"font-size:15px; color: #DADADA\">Centimeters</h1></div>';\n    }    \n}\n\nfunction gaugeLoaded(args: ILoadedEventArgs): void {\n    let width: number = parseInt(((this.width, this.element.offsetWidth) || this.element.offsetWidth || 600), 10);\n    if (width < 500) {\n        gauge.axes[1].majorTicks.interval = 2;\n        gauge.axes[1].minorTicks.interval = 1;\n        gauge.orientation = 'Vertical';\n        gauge.annotations[0].x = -57;\n        gauge.annotations[0].y = -30;\n        gauge.annotations[1].x = 50;\n        gauge.annotations[1].y = -45;\n    } else {\n        gauge.axes[1].majorTicks.interval = 1;\n        gauge.axes[1].minorTicks.interval = 0.2;\n        gauge.orientation = 'Horizontal';\n        gauge.annotations[0].x = 35;\n        gauge.annotations[0].y = -58;\n        gauge.annotations[1].x = 50;\n        gauge.annotations[1].y = 52;\n    }\n    if (document.getElementById('tooltipContainer')) {\n        if (gauge.availableSize.width < 500) {\n            document.getElementById('tooltipContainer_Annotation_0').style.transform = 'rotate(270deg)';\n            document.getElementById('tooltipContainer_Annotation_1').style.transform = 'rotate(270deg)';\n        } else {\n            document.getElementById('tooltipContainer_Annotation_0').style.transform = '';\n            document.getElementById('tooltipContainer_Annotation_1').style.transform = '';\n        }\n    }\n }\n"}