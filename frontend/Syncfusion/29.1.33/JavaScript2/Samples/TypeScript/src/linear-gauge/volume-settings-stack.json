{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div class=\"control-section\">\n        <div style=\"display: flex; justify-content: center;padding-top: 12px;\">\n            <div id=\"gauge1\" style=\"justify-content: center; align-items: center;height:350px;width:70px;\">\n            </div>\n            <div id=\"gauge2\" style=\"justify-content: center; align-items: center;height:350px;width:70px;\">\n            </div>\n            <div id=\"gauge3\" style=\"justify-content: center; align-items: center;height:350px;width:70px;\">\n            </div>\n        </div>\n    </div>\n    \n    \n    \n    <style>\n        .divclass {\n            padding: 6px;\n            color: white;\n        }\n    \n        @font-face {\n            font-family: 'font-v1';\n            src:\n                url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');\n            font-weight: normal;\n            font-style: normal;\n        }\n    \n        [class^=\"sf-icon-\"],\n        [class*=\" sf-icon-\"] {\n            font-family: 'font-v1' !important;\n            color: white;\n            font-size: 16px;\n            font-style: normal;\n            font-weight: normal;\n            font-variant: normal;\n            text-transform: none;\n            line-height: 1;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n            margin-left: 40%;\n            margin-top: 70%;\n        }\n    \n        .sf-icon-music:before {\n            content: \"\\e701\";\n    \n        }\n    \n        .sf-icon-clock:before {\n            content: \"\\e702\";\n        }\n    \n        .sf-icon-tick:before {\n            content: \"\\e704\";\n        }\n    \n        .sf-icon-bell:before {\n            content: \"\\e706\";\n        }\n    </style>\n    \n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-lineargauge\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { LinearGauge, Annotations, ILoadEventArgs, LinearGaugeTheme } from '@syncfusion/ej2-lineargauge';\nLinearGauge.Inject(Annotations);\nlet textColor = '#000000';\n// custom code start\n\n\n// custom code end\n\n    let gauge1: LinearGauge = new LinearGauge({     \n        container: {\n            width: 30,\n            roundedCornerRadius: 15,\n            type: 'RoundedRectangle',\n            border: { width: 1 },\n            backgroundColor: 'transparent'\n        },\n        background:'transparent',\n        axes: [{\n            minimum: 0,\n            maximum: 100,\n            line: {\n                width: 0\n            },\n            pointers: [{\n                value: 100,\n                width: 30,\n                color: '#0074E3',\n                type: 'Bar',\n                position: 'Cross',\n                roundedCornerRadius: 15,\n                offset: -15\n            }],\n            majorTicks: {\n                interval: 20,\n                height: 0\n            },\n            minorTicks: {\n                interval: 10, height: 0\n            },\n            labelStyle: {\n                format:'Music {value} %',\n                font: { size: '0px' }\n            }\n        }],\n        annotations: [{\n            axisIndex: 0,\n            axisValue: 100,\n            x: 1,\n            y: 0, zIndex: '1',\n        }, {\n            content: '<div class=\"sf-icon-music\" style=\"width:16px\"></div>',\n            axisIndex: 0,\n            axisValue: 11,\n            x: 9,\n            y: 1, zIndex: '1',\n        }\n        ],\n        load: (args1: ILoadEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args1.gauge.theme = <LinearGaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            // custom code end            \n            textColor = args1.gauge.theme.indexOf('Dark') > -1 || args1.gauge.theme.indexOf('HighContrast') > -1 ? '#FFFFFF' : '#000000';\n            args1.gauge.annotations[0].content = `<div style=\"width: 70px;font-size: 16px;margin-left:64px;margin-top: -31px;font-family:inherit;color:${textColor};\">100%</div>`;\n        }\n    });\n    gauge1.appendTo('#gauge1');\n\n    let gauge2: LinearGauge = new LinearGauge({\n        container: {\n            width: 30,\n            roundedCornerRadius: 15,\n            type: 'RoundedRectangle',\n            border: { width: 1 },\n            backgroundColor: 'transparent'\n        },\n        background:'transparent',\n        axes: [{\n            minimum: 0,\n            maximum: 100,\n            line: {\n                width: 0\n            },\n            pointers: [{\n                value: 85,\n                width: 30,\n                color: '#0074E3',\n                type: 'Bar',\n                position: 'Cross',\n                roundedCornerRadius: 15,\n                offset: -15\n            }],\n            majorTicks: {\n                interval: 20,\n                height: 0\n            },\n            minorTicks: {\n                interval: 10, height: 0\n            },\n            labelStyle: {\n                format:'Bell {value} %',\n                font: { size: '0px' }\n            }\n        }],\n        annotations: [{\n            axisIndex: 0,\n            axisValue: 100,\n            x: 1,\n            y: 0, zIndex: '1',\n        }, {\n            content: '<div class=\"sf-icon-bell\" style=\"width:16px\"></div>',\n            axisIndex: 0,\n            axisValue: 11,\n            x: 9,\n            y: 1, zIndex: '1',\n        }],\n        load: (args2: ILoadEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args2.gauge.theme = <LinearGaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end            \n            textColor = args2.gauge.theme.indexOf('Dark') > -1 || args2.gauge.theme.indexOf('HighContrast') > -1 ? '#FFFFFF' : '#000000';\n            args2.gauge.annotations[0].content = `<div style=\"width: 70px;font-size: 16px;margin-left:73px;margin-top: -31px;font-family:inherit;color:${textColor};\"> 85%</div>`;\n        }\n    });\n    gauge2.appendTo('#gauge2');\n\n    let gauge3: LinearGauge = new LinearGauge({\n        container: {\n            width: 30,\n            roundedCornerRadius: 15,\n            type: 'RoundedRectangle',\n            border: { width: 1 },\n            backgroundColor: 'transparent'\n        },\n        background:'transparent',\n        axes: [{\n            minimum: 0,\n            maximum: 100,\n            line: {\n                width: 0\n            },\n            pointers: [{\n                value: 65,\n                width: 30,\n                color: '#0074E3',\n                type: 'Bar',\n                position: 'Cross',\n                roundedCornerRadius: 15,\n                offset: -15\n            }],\n            majorTicks: {\n                interval: 20,\n                height: 0\n            },\n            minorTicks: {\n                interval: 10, height: 0\n            },\n            labelStyle: {\n                format:'Clock {value} %',\n                font: { size: '0px' }\n            }\n        }],\n        annotations: [{\n            axisIndex: 0,\n            axisValue: 100,\n            x: 0,\n            y: 0, zIndex: '1',\n        }, {\n            content: '<div class=\"sf-icon-clock\" style=\"width:16px\"></div>',\n            axisIndex: 0,\n            axisValue: 11,\n            x: 9,\n            y: 1, zIndex: '1',\n        }],\n        load: (args3: ILoadEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n              args3.gauge.theme = <LinearGaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n            // custom code end            \n            textColor = args3.gauge.theme.indexOf('Dark') > -1 || args3.gauge.theme.indexOf('HighContrast') > -1 ? '#FFFFFF' : '#000000';\n            args3.gauge.annotations[0].content = `<div style=\"width: 70px;font-size: 16px;margin-left:71px;margin-top: -31px;font-family:inherit;color:${textColor};\"> 65%</div>`;\n        }\n    });\n    gauge3.appendTo('#gauge3');\n"}