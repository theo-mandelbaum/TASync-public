{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    \n<div class=\"control-section\">\n    <div style=\"justify-content: center; display: flex; align-items: center;\">\n        <div id=\"thermometer\">\n        </div>\n    </div>\n</div>\n\n\n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-lineargauge\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { LinearGauge, Annotations, ILoadEventArgs, LinearGaugeTheme } from '@syncfusion/ej2-lineargauge';\nLinearGauge.Inject(Annotations);\n// custom code start\n\n\n// custom code end\n\n    let gauge: LinearGauge = new LinearGauge({\n        container: {\n            width: 13,\n            roundedCornerRadius: 5,\n            type: 'Thermometer',\n            border: { width: 1 }\n        },\n        background:'transparent',  \n        axes: [{\n            minimum: -20,\n            maximum: 50,\n            pointers: [{\n                value: 35,\n                height: 12,\n                width: 12,\n                placement: 'Center',\n                offset: 3,\n                markerType: 'Triangle',\n                color: '#0074E3'\n            }],\n            line: {\n                width: 0\n            },\n            majorTicks: {\n                height: 7, interval: 10\n            },\n            minorTicks: {\n                height: 0, interval: 5\n            },\n            labelStyle: {\n                font: { fontFamily: 'inherit' }\n            }\n        }, {\n            minimum: 0,\n            maximum: 120,\n            opposedPosition: true,\n            pointers: [{\n                value: 94,\n                height: 13,\n                width: 13,\n                type: 'Bar',\n                color: '#0074E3'\n            }],\n            line: {\n                width: 0\n            },\n            majorTicks: {\n                height: 7, interval: 20\n            },\n            minorTicks: {\n                height: 0, interval: 5\n            },\n            labelStyle: {\n                font: { fontFamily: 'inherit' }\n            }\n        }],\n        annotations: [\n            {\n                content: '<div style=\"font-size:13px;margin-left: -20px;margin-top: -30px;\"> \\u00b0C </div>',\n                axisIndex: 0,\n                axisValue: 50,\n                x: 0,\n                y: 0, zIndex: '1'\n            },\n            {\n                content: '<div style=\"font-size:13px;margin-left: 18px;margin-top: -30px;\"> \\u00b0F </div>',\n                axisIndex: 1,\n                axisValue: 120,\n                x: 12,\n                y: 0, zIndex: '1'\n            }\n        ],\n        load: (args: ILoadEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.gauge.theme = <LinearGaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge.appendTo('#thermometer');\n"}