{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div class=\"control-section\">\n        <div id=\"stepprogressbar\">\n        </div>\n    </div>\n    \n    \n    \n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-lineargauge\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { LinearGauge, Annotations, ILoadEventArgs, LinearGaugeTheme, IAxisLabelRenderEventArgs } from '@syncfusion/ej2-lineargauge';\nLinearGauge.Inject(Annotations);\n// custom code start\n\n\n// custom code end\n\n    let gauge: LinearGauge = new LinearGauge({\n        orientation: 'Horizontal',\n        background:'transparent',  \n        axes: [{\n            minimum: 5,\n            maximum: 20,\n            opposedPosition: true,\n            line: {\n                width: 5\n            },\n            pointers: [{\n                value: 5,\n                height: 25,\n                width: 25,\n                placement: 'Near',\n                markerType: 'Image',\n                imageUrl: '//npmci.syncfusion.com/development/demos/src/linear-gauge/images/tick-icon.png'\n            }, {\n                value: 10,\n                height: 25,\n                width: 25,\n                placement: 'Near',\n                markerType: 'Image',\n                imageUrl: '//npmci.syncfusion.com/development/demos/src/linear-gauge/images/tick-icon.png'\n            }, {\n                value: 15,\n                height: 25,\n                width: 25,\n                placement: 'Near',\n                markerType: 'Image',\n                imageUrl: '//npmci.syncfusion.com/development/demos/src/linear-gauge/images/tick-icon.png'\n            }, {\n                value: 20,\n                height: 25,\n                width: 15,\n                placement: 'Center',\n                position: 'Cross',\n                color: '#D1D9DD',\n                offset: -2,\n                markerType: 'Circle'\n            }],\n            ranges: [\n                {\n                    start: 5,\n                    end: 10,\n                    startWidth: 5,\n                    endWidth: 5,\n                    color: '#1FAC8A'\n                }, {\n                    start: 10,\n                    end: 15,\n                    startWidth: 5,\n                    endWidth: 5,\n                    color: '#1FAC8A'\n                }, {\n                    start: 15,\n                    end: 20,\n                    startWidth: 5,\n                    endWidth: 5,\n                    color: '#D1D9DD'\n                }\n            ],\n            majorTicks: {\n                height: 0,\n                interval:5\n            },\n            minorTicks: {\n                height: 0\n            },\n            labelStyle: {\n                offset: 20,\n                font: { size: '16px', fontFamily: 'inherit' }\n            }\n        }],\n        axisLabelRender(args: IAxisLabelRenderEventArgs): void {\n            if (args.text == \"5\")\n                args.text = \"Ordered\";\n            else if (args.text == \"10\")\n                args.text = \"Packed\";\n            else if (args.text == \"15\")\n                args.text = \"Shipped\";\n            else if (args.text == \"20\")\n                args.text = \"Delivered\";\n            else\n                args.text = \" \";\n        },\n        load: (args: ILoadEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.gauge.theme = <LinearGaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge.appendTo('#stepprogressbar');\n"}