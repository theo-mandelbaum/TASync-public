{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<main>\n    <div>\n        <div class=\"col-md-8 control-section\">\n            <div class=\"content-wrapper\">\n                <div id=\"boxContainer\" style=\"width:100%;\"></div>\n            </div>\n        </div>\n        <br>\n        <!-- property panel -->\n        <div class=\"col-md-4 property-section\">\n            <table id=\"property\" title=\"Properties\" style=\"width: 100%; margin-left:-10px\" role=\"none\">\n                <colgroup>\n                    <col span=\"1\" style=\"width: 30%;\">\n                    <col span=\"1\" style=\"width: 70%;\">\n                </colgroup>\n                <tbody>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div style=\"font-size:14px\">Orientation</div>\n                        </td>\n                        <td>\n                            <div style=\"margin-left: 0px\">\n                                <select name=\"selectIndex\" autocomplete=\"off\" id=\"orientationMode\" class=\"form-control\" style=\"width:90%\">\n                                    <option value=\"Vertical\" selected=\"\">Vertical</option>\n                                    <option value=\"Horizontal\">Horizontal</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div style=\"width: 70%;font-size:14px\">Container Type</div>\n                        </td>\n                        <td>\n                            <div style=\"margin-left: 0px\">\n                                <select name=\"selectIndex\" autocomplete=\"off\" id=\"containerMode\" class=\"form-control\" style=\"width:90%\">\n                                    <option value=\"Thermometer\" selected=\"\">Thermometer</option>\n                                    <option value=\"Normal\">Normal</option>\n                                    <option value=\"RoundedRectangle\">RoundedRectangle</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    \n    \n    <!-- custom code start -->\n    <style>\n        #control-container {\n            padding: 0px !important;\n        }\n    </style>\n    <!-- custom code ends -->\n</main>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-lineargauge\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}import { LinearGauge, ContainerType, Orientation, ILoadEventArgs, LinearGaugeTheme } from '@syncfusion/ej2-lineargauge';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\n// custom code start\n\n\n// custom code end\n\n    let gauge: LinearGauge = new LinearGauge({\n        title: 'Temperature Measure',        \n        titleStyle: {\n            fontFamily: \"inherit\",\n        },\n        background:'transparent',  \n        container: {\n            width: 13,\n            roundedCornerRadius: 5,\n            type: 'Thermometer'\n        },\n        axes: [{\n            minimum: 0,\n            maximum: 180,\n            line: {\n                width: 0\n            },\n            majorTicks: {\n                interval: 20,\n                color: '#9e9e9e'\n            },\n            minorTicks: {\n                color: '#9e9e9e'\n            },\n            labelStyle: {\n                font: {\n                    fontFamily: \"inherit\",\n                }\n            },\n            pointers: [\n                {\n                    value: 90,\n                    height: 13,\n                    width: 13,\n                    roundedCornerRadius: 5,\n                    type: 'Bar',\n                    color: '#f02828'\n                }\n            ]\n        },\n        {\n            minimum: 0,\n            maximum: 180,\n            line: {\n                width: 0\n            },\n            labelStyle: {\n                font: {\n                    fontFamily: \"inherit\",\n                }\n            },\n            majorTicks: {\n                interval: 20,\n                color: '#9e9e9e'\n            },\n            minorTicks: {\n                color: '#9e9e9e'\n            },\n            opposedPosition: true,\n            pointers: [\n                {\n                    width: 0\n                }\n            ]\n        }],\n        load: (args: ILoadEventArgs) => {\n            // custom code start\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.gauge.theme = <LinearGaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');\n            // custom code end\n        }\n    });\n    gauge.appendTo('#boxContainer');\n    let containerMode: DropDownList = new DropDownList({\n        index: 0,\n        placeholder: 'Select Range Bar Color',\n        width: '100%',\n        change: () => {\n            gauge.container.type = <ContainerType>containerMode.value;\n            gauge.refresh();\n        }\n    });\n    containerMode.appendTo('#containerMode');\n\n    let orientationMode: DropDownList = new DropDownList({\n        index: 0,\n        placeholder: 'Select Range Bar Color',\n        width: '100%',\n        change: () => {\n            gauge.orientation = <Orientation>orientationMode.value;\n            gauge.refresh();\n        }\n    });\n    orientationMode.appendTo('#orientationMode');\n"}