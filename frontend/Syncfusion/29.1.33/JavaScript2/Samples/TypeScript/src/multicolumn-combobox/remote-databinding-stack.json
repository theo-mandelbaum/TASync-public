{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div class=\"control-wrapper\">\n        <div style=\"padding-top:60px;\">\n            <label>Select an employee</label>\n            <input type=\"text\" id=\"remote\">\n        </div>\n    </div>\n</div>\n\n\n\n\n<style>\n    .control-wrapper {\n        margin: 0 auto;\n        width: 250px;\n    }\n    /*custom code starts*/\n    @media screen and (max-width: 480px) {\n        .control-wrapper {\n            width: 300px;\n        }\n    }\n    /*custom code ends*/\n</style>\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-grids\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-multicolumn-combobox\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\n/**\n * MultiColumn ComboBox Remote DataBinding Sample\n */\nimport { MultiColumnComboBox, ColumnModel } from '@syncfusion/ej2-multicolumn-combobox';\nimport { Query, DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\n\n\n\n    \n\n    const columns: ColumnModel[] = [\n        { field: 'EmployeeID', header: 'Employee ID', width: 120 },\n        { field: 'FirstName', header: 'Name', width: 130 },\n        { field: 'Designation', header: 'Designation', width: 120 },\n        { field: 'Country', header: 'Country', width: 90 },\n    ];\n\n    // Initialize multicolumn ComboBox component\n    let multicolumnObj: MultiColumnComboBox = new MultiColumnComboBox({\n        //set the remote data to dataSource property\n        dataSource: new DataManager({\n            url: 'http://localhost:62728/api/Employees',\n            adaptor: new WebApiAdaptor,\n            crossDomain: true\n        }),\n        //set the column of the multicolumn combobox\n        columns: columns,\n        //set the fields of the multicolumn combobox\n        fields: { text: 'FirstName', value: 'EmployeeID' },\n        // bind the Query instance to query property\n        query: new Query().select(['FirstName', 'EmployeeID', 'Designation', 'Country']).take(10).requiresCount(),\n        // set the placeholder to multiColumn comboBox input element\n        placeholder: 'eg. Andrew',\n        // set the height of the popup element\n        popupHeight: '210px',\n        popupWidth: '500px',\n        allowSorting: false\n    });\n    multicolumnObj.appendTo('#remote');\n"}