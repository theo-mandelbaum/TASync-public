{"theme-colors.ts":"import { ChartTheme, ILoadedEventArgs } from \"@syncfusion/ej2/charts\";\n\nexport let themes : string[] = ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentdark', 'material3', 'material3dark', 'fluent2', 'fluent2highcontrast', 'fluent2dark', 'tailwind3', 'tailwind3dark'];\nexport let borderColor : string[] = ['#FD7E14', '#FD7E14', '#5A61F6', '#8B5CF6', '#00bdae', '#9ECB08', '#a16ee5', '#a16ee5', '#a16ee5', '#4472c4', '#4472c4', '#79ECE4', '#1AC9E6', '#1AC9E6','#6355C7', '#4EAAFF', '#6200EE', '#9BB449', '#9BB449', '#2F4074', '#8029F1'];\nexport let regionColor : string[] = ['rgba(52, 58, 64, 0.1)', 'rgba(173, 181, 189, 0.1)', 'rgba(90, 97, 246, 0.3)', 'rgba(139, 92, 246, 0.3)', 'rgba(0, 189, 174, 0.3)',\n    'rgba(158, 203, 8, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(68, 114, 196, 0.3)',\n    'rgba(68, 114, 196, 0.3)', 'rgba(121, 236, 228, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(99, 85, 199, 0.3)', 'rgba(78, 170, 255, 0.3)',\n    'rgba(98, 0, 238, 0.3)', 'rgba(155, 180, 73, 0.3)', 'rgba(155, 180, 73, 0.3)', 'rgba(47, 64, 116, 0.3)', 'rgba(128, 41, 241, 0.3)'];\nexport let printRegionColors = ['rgba(255, 64, 129, 0.3)', 'rgba(0, 120, 151, 0.3)',\n    'rgba(66, 139, 202, 0.3)', 'rgba(255, 217, 57, 0.3)', 'rgba(255, 217, 57, 0.3)', 'rgba(253, 126, 20, 0.3)', 'rgba(79, 70, 229, 0.3)',\n    'rgba(255, 64, 129, 0.3)', 'rgba(0, 120, 151, 0.3)', 'rgba(66, 139, 202, 0.3)', 'rgba(34, 211, 238, 0.3)', 'rgba(253, 126, 20, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(99, 85, 199, 0.3)', 'rgba(78, 170, 255, 0.3)', 'rgba(98, 0, 238, 0.3)', 'rgba(155, 180, 73, 0.3)', 'rgba(155, 180, 73, 0.3)', 'rgba(47, 64, 116, 0.3)', 'rgba(128, 41, 241, 0.3)'];\nexport let printThemes: string[] = ['Material', 'Fabric', 'Bootstrap', 'Bootstrap4', 'HighContrast', 'Bootstrap5', 'Tailwind','MaterialDark', 'FabricDark', 'BootstrapDark', 'TailwindDark', 'Bootstrap5Dark', 'Fluent', 'FluentDark', 'Material3', 'Material3Dark', 'Fluent2', 'Fluent2HighContrast', 'Fluent2Dark', 'Tailwind3', 'Tailwind3Dark'];\nexport let printBorderColor: string[] = ['#FF4081', '#007897', '#428BCA', '#FFD939', '#FFD939', '#FD7E14', '#4F46E5', '#FF4081', '#007897', '#428BCA', '#22D3EE', '#FD7E14', '#1AC9E6', '#1AC9E6', '#6355C7', '#4EAAFF', '#6200EE', '#9BB449', '#9BB449', '#2F4074', '#8029F1'];\nexport function loadRangeNavigatorTheme(args?: ILoadedEventArgs): ChartTheme {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    let theme: ChartTheme;\n    if (args) {\n        theme = args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    else {\n        theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    return theme;\n}\n","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div>\n    <div class=\"col-lg-9 control-section\">\n        <div class=\"content-wrapper\">\n            <br>\n            <h1 id=\"days\" align=\"center\" style=\"font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px; margin-top: 10px;\">Conns,Inc Stock Close Details</h1>\n            <div id=\"container\" align=\"center\"></div>\n            <br> <br>\n            <div id=\"chart\" align=\"center\"></div>\n        </div>\n    </div>\n    <div class=\"col-lg-3 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody><tr style=\"height: 50px\">\n                <td style=\"width: 40%\">\n                    <div>Export Type:\n                    </div>\n                </td>\n                <td style=\"width: 60%;\">\n                    <div style=\"margin-left: -10px\">\n                        <select id=\"mode\">\n                            <option value=\"JPEG\">JPEG</option>\n                            <option value=\"PNG\">PNG</option>\n                            <option value=\"SVG\">SVG</option>\n                            <option value=\"PDF\">PDF</option>\n                        </select>\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td style=\"width: 40%\">\n                    <div id=\"filename\">File Name:</div>\n                </td>\n                <td style=\"width: 40%;\">\n                    <div class=\"e-float-input\" style=\"margin-top: 0px;\">\n                        <input type=\"text\" value=\"Chart\" id=\"fileName\" style=\"margin-left: -10px\" aria-labelledby=\"Chart\">\n                    </div>\n                </td>\n            </tr>\n            <tr id=\"button-control\" style=\"height: 50px\" align=\"center\">\n                <td style=\"width: 40%;\"></td>\n                <td style=\"width: 60%; margin-left: -20px;float: left;\">\n                    <div>\n                        <button id=\"exportBtn\">Export</button>\n                    </div>\n                </td>\n            </tr>\n            <tr id=\"button-control\" style=\"height: 50px\" align=\"center\">\n                <td style=\"width: 40%;\">\n                </td>\n                <td style=\"width: 60%; margin-left: -20px;float: left;\">\n                    <div>\n                        <button id=\"printBtn\">Print</button>\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n\n<style>\n    #button-control {\n        width: 100%;\n        /*text-align: center;*/\n    }\n\n    #control-container {\n        padding: 0px !important;\n    }\n\n    .e-print-icon::before {\n        content: '\\e34b';\n    }\n \n    .e-view.fabric .e-print-icon::before, .e-view.fabric-dark .e-print-icon::before {\n        content: '\\e7df';\n    }\n \n    .e-view.bootstrap .e-print-icon::before {\n        content: '\\ebd2';\n    }\n \n    .e-view.bootstrap4 .e-print-icon::before {\n        content: '\\e743';\n    }\n \n    .e-view.tailwind .e-print-icon::before, .e-view.tailwind-dark .e-print-icon::before, .e-view.tailwind3 .e-print-icon::before, .e-view.tailwind3-dark .e-print-icon::before {\n        content: '\\e76c';\n    }\n \n    .e-view.highcontrast .e-print-icon::before {\n        content: '\\ebf9';\n    }\n \n    .e-view.bootstrap5 .e-print-icon::before, .e-view.bootstrap5-dark .e-print-icon::before {\n        content: '\\e75d';\n    }\n \n    .e-view.fluent .e-print-icon::before, .e-view.fluent-dark .e-print-icon::before {\n        content: '\\e75d';\n    }\n\n    .e-view.fluent2 .e-print-icon::before, .e-view.fluent2-dark .e-print-icon::before, .e-view.fluent2-highcontrast .e-print-icon::before {\n        content: '\\e75d';\n    }\n\n    .e-view.material3 .e-print-icon::before, .e-view.material3-dark .e-print-icon::before {\n        content: '\\e75d';\n    }\n\n    .e-export-icon::before {\n        content: '\\e728';\n    }\n \n    .e-view.fabric .e-export-icon::before, .e-view.fabric-dark .e-export-icon::before {\n        content: '\\e710';\n    }\n \n    .e-view.bootstrap4 .e-export-icon::before {\n        content: '\\e780';\n    }\n \n    .e-view.tailwind-dark .e-export-icon::before, .e-view.tailwind .e-export-icon::before, .e-view.tailwind3-dark .e-export-icon::before, .e-view.tailwind3 .e-export-icon::before {\n        content: '\\e7bf';\n    }\n \n    .e-view.highcontrast .e-export-icon::before {\n        content: '\\e710';\n    }\n \n    .e-view.bootstrap5 .e-export-icon::before, .e-view.bootstrap5-dark .e-export-icon::before {\n        content: '\\e72e';\n    }\n\n    .e-view.fluent .e-export-icon::before, .e-view.fluent-dark .e-export-icon::before {\n        content: '\\e72e';\n    }\n\n    .e-view.fluent2 .e-export-icon::before, .e-view.fluent2-dark .e-export-icon::before, .e-view.fluent2-highcontrast .e-export-icon::before {\n        content: '\\e72e';\n    }\n    \n    .e-view.material3 .e-export-icon::before, .e-view.material3-dark .e-export-icon::before {\n        content: '\\e72e';\n    }\n</style>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-calendars\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-excel-export\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-charts\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-icons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport {\n    ChartTheme, RangeNavigator, Chart, SplineAreaSeries, Crosshair,\n    ExportType, DateTime, StepLineSeries, IChangedEventArgs, Tooltip, Export\n} from '@syncfusion/ej2-charts';\nChart.Inject(SplineAreaSeries, DateTime, Crosshair, Tooltip, Export);\nRangeNavigator.Inject(DateTime, StepLineSeries);\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { Fetch } from '@syncfusion/ej2-base';\nimport { borderColor, printBorderColor, printRegionColors, printThemes, loadRangeNavigatorTheme } from './theme-colors';\n\n/**\n * Sample for range navigator with print and export functionalities.\n */\nlet theme: ChartTheme = loadRangeNavigatorTheme();\n\n\n    \n    let datasrc: Object[];\n    let fetchApi: Fetch = new Fetch('./src/range-navigator/data-source/export-data.json', 'GET');\n    fetchApi.send().then();\n    // Rendering Dialog on FETCH success\n    fetchApi.onSuccess = (data: Object[]): void => {\n        datasrc = data;\n        datasrc.map((data: Object) => {\n            // tslint:disable-next-line:no-string-literal\n            data['xDate'] = new Date(data['xDate']);\n        });\n        let chart: Chart = new Chart(\n            {\n                primaryXAxis: {\n                    valueType: 'DateTime', crosshairTooltip: { enable: true },\n                    edgeLabelPlacement: 'Shift', majorGridLines: { width: 0 }\n                },\n                series: [{\n                    dataSource: datasrc, xName: 'xDate', yName: 'Close', width: 2,\n                    name: 'Close',\n                    fill: printRegionColors[printThemes.indexOf(theme)], type: 'SplineArea',\n                    border: { width: 2, color: printBorderColor[printThemes.indexOf(theme)] }\n                }],\n                chartArea: { border: { width: 0 } },\n                primaryYAxis: {\n                    minimum: 81, maximum: 87, interval: 2,\n                    majorTickLines: { width: 0 }, lineStyle: { width: 0 },\n                    labelFormat: '{value}M', title: 'Million in USD'\n                },\n                tooltip: { enable: true, shared: true },\n                legendSettings: { visible: false },\n                height: '350',\n                theme: theme\n            }\n        );\n        chart.appendTo('#chart');\n        let dateTimeControl: RangeNavigator = new RangeNavigator(\n            {\n                valueType: 'DateTime',\n                animationDuration: 500,\n                intervalType: 'Months',\n                labelFormat: 'MMM', theme: theme,\n                enableGrouping: true,\n                value: [new Date('2013-05-01'), new Date('2013-08-01')],\n                dataSource: datasrc,\n                xName: 'xDate', yName: 'Close',\n                changed: (args: IChangedEventArgs) => {\n                    chart.primaryXAxis.zoomFactor = args.zoomFactor;\n                    chart.primaryXAxis.zoomPosition = args.zoomPosition;\n                    chart.dataBind();\n                }\n            }\n        );\n        dateTimeControl.appendTo('#container');\n    \n        let mode: DropDownList = new DropDownList({\n            index: 0,\n            width: 90\n        });\n        mode.appendTo('#mode');\n        let togglebtn: Button = new Button({\n            iconCss: 'e-icons e-export-icon', cssClass: 'e-flat', isPrimary: true,\n        });\n        togglebtn.appendTo('#exportBtn');\n        document.getElementById('exportBtn').onclick = () => {\n            let fileName: string = (<HTMLInputElement>(document.getElementById('fileName'))).value;\n            chart.exportModule.export(<ExportType>mode.value, fileName, null, [dateTimeControl, chart]);\n        };\n    \n        let printBtn: Button = new Button({\n            iconCss: 'e-icons e-print-icon', cssClass: 'e-flat', isPrimary: true,\n        });\n        printBtn.appendTo('#printBtn');\n        document.getElementById('printBtn').onclick = () => {\n            dateTimeControl.print(['container', 'chart']);\n        };\n    };\n"}