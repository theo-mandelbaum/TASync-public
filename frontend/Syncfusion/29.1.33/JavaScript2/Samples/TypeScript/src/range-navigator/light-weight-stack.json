{"data-service.ts":"\n/**\n * Chart data service\n */\n\n\nexport function GetDateTimeData(start: Date, end: Date, min?: number, max?: number, inc?: number): object[] {\n    let series1: object[] = [];\n    let point: object = {};\n    let value: number = 100;\n    let date: number;\n    inc = inc ? inc : 1;\n    for (let i: number = 0; start <= end; i += inc) {\n        date = start.getTime();\n        if (min || max) {\n            value = getRandomInt(min, max);\n        } else {\n            if (Math.random() > .5) {\n                value += Math.random();\n            } else {\n                value -= Math.random();\n            }\n        }\n        point = { x: new Date(date), y: value };\n        new Date(start.setDate(start.getDate() + 1));\n        series1.push(point);\n    }\n    return series1;\n}\n\nexport function getRandomInt(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function GetNumericData(start: number, end: number, min?: number, max?: number): object[] {\n    let series1: object[] = [];\n    let point: object = {};\n    let value: number = 30;\n\n    for (let i: number = start; i <= end; i++) {\n        if (min || max) {\n            value = getRandomInt(min, max);\n        } else {\n            if (Math.random() > .5) {\n                value += Math.random();\n            } else {\n                value -= Math.random();\n            }\n        }\n        point = { x: i, y: Math.round(value) };\n        series1.push(point);\n    }\n    return series1;\n}","theme-colors.ts":"import { ChartTheme, ILoadedEventArgs } from \"@syncfusion/ej2/charts\";\n\nexport let themes : string[] = ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentdark', 'material3', 'material3dark', 'fluent2', 'fluent2highcontrast', 'fluent2dark', 'tailwind3', 'tailwind3dark'];\nexport let borderColor : string[] = ['#FD7E14', '#FD7E14', '#5A61F6', '#8B5CF6', '#00bdae', '#9ECB08', '#a16ee5', '#a16ee5', '#a16ee5', '#4472c4', '#4472c4', '#79ECE4', '#1AC9E6', '#1AC9E6','#6355C7', '#4EAAFF', '#6200EE', '#9BB449', '#9BB449', '#2F4074', '#8029F1'];\nexport let regionColor : string[] = ['rgba(52, 58, 64, 0.1)', 'rgba(173, 181, 189, 0.1)', 'rgba(90, 97, 246, 0.3)', 'rgba(139, 92, 246, 0.3)', 'rgba(0, 189, 174, 0.3)',\n    'rgba(158, 203, 8, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(68, 114, 196, 0.3)',\n    'rgba(68, 114, 196, 0.3)', 'rgba(121, 236, 228, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(99, 85, 199, 0.3)', 'rgba(78, 170, 255, 0.3)',\n    'rgba(98, 0, 238, 0.3)', 'rgba(155, 180, 73, 0.3)', 'rgba(155, 180, 73, 0.3)', 'rgba(47, 64, 116, 0.3)', 'rgba(128, 41, 241, 0.3)'];\nexport let printRegionColors = ['rgba(255, 64, 129, 0.3)', 'rgba(0, 120, 151, 0.3)',\n    'rgba(66, 139, 202, 0.3)', 'rgba(255, 217, 57, 0.3)', 'rgba(255, 217, 57, 0.3)', 'rgba(253, 126, 20, 0.3)', 'rgba(79, 70, 229, 0.3)',\n    'rgba(255, 64, 129, 0.3)', 'rgba(0, 120, 151, 0.3)', 'rgba(66, 139, 202, 0.3)', 'rgba(34, 211, 238, 0.3)', 'rgba(253, 126, 20, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(99, 85, 199, 0.3)', 'rgba(78, 170, 255, 0.3)', 'rgba(98, 0, 238, 0.3)', 'rgba(155, 180, 73, 0.3)', 'rgba(155, 180, 73, 0.3)', 'rgba(47, 64, 116, 0.3)', 'rgba(128, 41, 241, 0.3)'];\nexport let printThemes: string[] = ['Material', 'Fabric', 'Bootstrap', 'Bootstrap4', 'HighContrast', 'Bootstrap5', 'Tailwind','MaterialDark', 'FabricDark', 'BootstrapDark', 'TailwindDark', 'Bootstrap5Dark', 'Fluent', 'FluentDark', 'Material3', 'Material3Dark', 'Fluent2', 'Fluent2HighContrast', 'Fluent2Dark', 'Tailwind3', 'Tailwind3Dark'];\nexport let printBorderColor: string[] = ['#FF4081', '#007897', '#428BCA', '#FFD939', '#FFD939', '#FD7E14', '#4F46E5', '#FF4081', '#007897', '#428BCA', '#22D3EE', '#FD7E14', '#1AC9E6', '#1AC9E6', '#6355C7', '#4EAAFF', '#6200EE', '#9BB449', '#9BB449', '#2F4074', '#8029F1'];\nexport function loadRangeNavigatorTheme(args?: ILoadedEventArgs): ChartTheme {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    let theme: ChartTheme;\n    if (args) {\n        theme = args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    else {\n        theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    return theme;\n}\n","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\" align=\"center\">\n    <div id=\"container\">\n        <div class=\"row\" align=\"center\">\n            <h1 id=\"days\" style=\"font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px; margin-top: 10px;\">Calculate the Business and Weekend days in a period</h1>\n            <div id=\"datetime\"></div>\n            <br>\n            <table style=\"font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px;\">\n                <tbody><tr>\n                    <td id=\"working\">\n                        <table>\n                            <tbody><tr>\n                                <td id=\"working\" style=\"width: 150px;\">Total Business Days:</td>\n                                <td id=\"workingcount\" style=\"width: 25px;\"></td>\n                            </tr>\n                        </tbody></table>\n                    </td>\n                    <td style=\"padding-left: 20px;\" id=\"holiday\">\n                        <table>\n                            <tbody><tr>\n                                <td id=\"weekend\" style=\"width: 150px;\">Total Weekend Days: </td>\n                                <td id=\"weekendcount\" style=\"width: 25px;\"></td>\n                            </tr>\n                        </tbody></table>\n                    </td>\n                </tr>\n            </tbody></table>\n        </div>\n    </div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n\n    #container {\n        transform: translateY(25%);\n    }\n</style>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-calendars\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-excel-export\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-charts\": \"*\",\n  \"@syncfusion/ej2-icons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { RangeNavigator, IChangedEventArgs, Logarithmic, DateTime } from '@syncfusion/ej2-charts';\nimport { ChartTheme } from '@syncfusion/ej2-charts';\nRangeNavigator.Inject(Logarithmic, DateTime);\nimport { GetDateTimeData } from './data-service';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { loadRangeNavigatorTheme } from './theme-colors';\n\n/**\n * Sample for range navigator without series\n */\n\n\n    \n\n    let theme: ChartTheme = loadRangeNavigatorTheme();\n    let range: RangeNavigator = new RangeNavigator(\n        {\n            valueType: 'DateTime',\n            intervalType: 'Months',\n            labelFormat: 'MMM',\n            animationDuration: 500,\n            value: [new Date('2018-06-01'), new Date('2018-07-01')],\n            dataSource: GetDateTimeData(new Date('2018-01-01'), new Date('2019-01-01')),\n            xName: 'x', yName: 'y',\n            width: Browser.isDevice ? '100%' : '80%', theme: theme,\n            navigatorStyleSettings: {\n                thumb: {\n                    type: 'Rectangle'\n                },\n            },\n            changed: ((args: IChangedEventArgs) => {\n                let currentDate: Date = new Date(+args.start);\n                let workingDaysCount: number = 0;\n                let holidaysDaysCount: number = 0;\n                while (currentDate <= new Date(+args.end)) {\n                    if (currentDate.getDay() > 0 && currentDate.getDay() <= 5) {\n                        workingDaysCount++;\n                    } else {\n                        holidaysDaysCount++;\n                    }\n                    currentDate.setDate(currentDate.getDate() + 1);\n                }\n                document.getElementById('workingcount').innerHTML = ' ' + workingDaysCount;\n                document.getElementById('weekendcount').innerHTML = ' ' + holidaysDaysCount;\n            }),\n        }\n    );\n    range.appendTo('#datetime');\n"}