{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div class=\"performance-time-container\" style=\"margin-bottom: 15px;\">\n        <select id=\"ddl\">\n            <option value=\"10000\">10,000 Rows and 10 Columns</option>\n            <option value=\"100000\">1,00,000 Rows and 10 Columns</option>\n            <option value=\"1000000\">1,000,000 Rows and 10 Columns</option>\n        </select>\n        <span id=\"performanceTime\">Time Taken: 0 sec</span>\n        <br>\n    </div>\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"height:100%;\">\n        </div>\n    </div>\n</div>\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-calendars\": \"*\",\n  \"@syncfusion/ej2-charts\": \"*\",\n  \"@syncfusion/ej2-compression\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-excel-export\": \"*\",\n  \"@syncfusion/ej2-file-utils\": \"*\",\n  \"@syncfusion/ej2-grids\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-pivotview\": \"*\",\n  \"@syncfusion/ej2-icons\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { PivotView } from '@syncfusion/ej2-pivotview';\nimport { enableRipple, Browser } from '@syncfusion/ej2-base';\nimport { DropDownList, ChangeEventArgs } from '@syncfusion/ej2-dropdowns';\nenableRipple(false);\n\n/* tslint:disable */\n\n/**\n * PivotView Default Sample.\n */\n\n\n    \n    let customerName: string[] = ['TOM', 'Hawk', 'Jon', 'Chandler', 'Monica', 'Rachel', 'Phoebe', 'Gunther',\n        'Ross', 'Geller', 'Joey', 'Bing', 'Tribbiani', 'Janice', 'Bong', 'Perk', 'Green', 'Ken', 'Adams'];\n    let city: string[] = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Philadelphia', 'Phoenix', 'San Antonio', 'Austin',\n        'San Francisco', 'Columbus', 'Washington', 'Portland', 'Oklahoma', 'Las Vegas', 'Virginia', 'St. Louis', 'Birmingham'];\n    let date1: number;\n    let date2: number;\n    let isInit: boolean = true;\n    function data(count: number): any {\n        let result: Object[] = [];\n        let dt: number = 0;\n        for (let i: number = 1; i < (count + 1); i++) {\n            dt++;\n            let round: string;\n            let toString: string = i.toString();\n            if (toString.length === 1) {\n                round = '0000' + (i);\n            }\n            else if (toString.length === 2) {\n                round = '000' + i;\n            }\n            else if (toString.length === 3) {\n                round = '00' + i;\n            } else if (toString.length === 4) {\n                round = '0' + i;\n            } else {\n                round = toString;\n            }\n            result.push({\n                ProductID: 'PRO-' + round,\n                City: city[Math.round(Math.random() * city.length)] || city[0],\n                Year: \"FY \" + (dt + 2013),\n                CustomerName: customerName[Math.round(Math.random() * customerName.length)] || customerName[0],\n                Price: Math.round(Math.random() * 5000) + 5000,\n                Sold: Math.round(Math.random() * 80) + 10,\n            });\n            if (dt / 4 == 1) {\n                dt = 0;\n            }\n        }\n        return result;\n    };\n    let pivotObj: PivotView = new PivotView({\n        dataSourceSettings: {\n            dataSource: data(10000),\n            enableSorting: false,\n            expandAll: true,\n            formatSettings: [{ name: 'Price', format: 'C0' }],\n            rows: [{ name: 'ProductID' }],\n            columns: [{ name: 'Year' }],\n            values: [{ name: 'Price', caption: 'Unit Price' }, { name: 'Sold', caption: 'Unit Sold' }],\n        },\n        width: '100%',\n        height: 300,\n        enableVirtualization: true,\n        gridSettings: { columnWidth: 120 },\n        dataBound: function () {\n            if (this.dataSourceSettings.dataSource.length > 0) {\n                if (date1 && isInit) {\n                    date2 = new Date().getTime();\n                    document.getElementById('performanceTime').innerHTML = 'Time Taken: ' + (date2 - date1) / 1000 + ' sec';\n                }\n                isInit = false;\n            }\n            if (Browser.isDevice && pivotObj && pivotObj.enableRtl) {\n                document.querySelector('.control-section').classList.add('e-rtl');\n            }\n        },\n        load: function () {\n            if (isInit) {\n                date1 = new Date().getTime();\n            }\n        }\n    });\n    pivotObj.appendTo('#PivotView');\n    let listObj: DropDownList = new DropDownList({\n        index: 0,\n        placeholder: 'Select a Data Range',\n        popupHeight: '240px',\n        width: '240px',\n        change: function (args: ChangeEventArgs) {\n            (<any>listObj).closePopup();\n            isInit = true;\n            pivotObj.dataSourceSettings.dataSource = data(Number(args.value));\n            date1 = new Date().getTime();\n        }\n    });\n    listObj.appendTo('#ddl');\n\n"}