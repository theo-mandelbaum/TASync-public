{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div id=\"btn-control\" style=\"margin-bottom:5px;\">\n        <button id=\"load\">Load 100K Data</button>\n        <span id=\"popup\">\n            <span id=\"gif\" classname=\"image\"></span>\n        </span>\n        <span id=\"performanceTime\">Time Taken: 0 sec</span>\n    </div>\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"height:100%;\">\n        </div>\n    </div>\n</div>\n\n\n<style>\n    .image {\n        position: absolute;\n        background-repeat: no-repeat;\n        background-image: url('//npmci.syncfusion.com/development/demos/src/grid/images/spinner.gif');\n        background-position: center;\n        width: 16px;\n        height: 28px;\n    }\n\n    .e-bigger .image {\n        height: 36px;\n    }\n\n    #popup {\n        position: absolute;\n        background-color: transparent;\n        display: none;\n        z-index: 100;\n    }\n\n    .div-button {\n        margin: 5px 5px 5px 0;\n    }\n\n    #performanceTime {\n        float: right;\n        margin-top: 3px;\n        margin-right: 27px;\n    }\n\n    .e-bigger #performanceTime {\n        margin-top: 8px;\n    }\n</style>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-calendars\": \"*\",\n  \"@syncfusion/ej2-charts\": \"*\",\n  \"@syncfusion/ej2-compression\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-excel-export\": \"*\",\n  \"@syncfusion/ej2-file-utils\": \"*\",\n  \"@syncfusion/ej2-grids\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-pivotview\": \"*\",\n  \"@syncfusion/ej2-icons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { PivotView, IDataSet, VirtualScroll } from '@syncfusion/ej2-pivotview';\nimport { enableRipple, Browser } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nenableRipple(false);\n\n/* tslint:disable */\n\n/**\n * PivotView VirtualScrolling Sample.\n */\nPivotView.Inject(VirtualScroll);\n\nlet customername: string[] = ['TOM', 'Hawk', 'Jon', 'Chandler', 'Monica', 'Rachel', 'Phoebe', 'Gunther',\n    'Ross', 'Geller', 'Joey', 'Bing', 'Tribbiani', 'Janice', 'Bong', 'Perk', 'Green', 'Ken', 'Adams'];\nlet city: string[] = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Philadelphia', 'Phoenix', 'San Antonio', 'Austin',\n    'San Francisco', 'Columbus', 'Washington', 'Portland', 'Oklahoma', 'Las Vegas', 'Virginia', 'St. Louis', 'Birmingham'];\nlet date1: number;\nlet date2: number;\nlet isInit: boolean;\nlet dt: number = 0;\nlet data: Function = (count: number) => {\n    let result: Object[] = [];\n    for (let i: number = 1; i < (count + 1); i++) {\n        dt++;\n        let round: string;\n        let toString: string = i.toString();\n        if (toString.length === 1) {\n            round = '0000' + (i);\n        }\n        else if (toString.length === 2) {\n            round = '000' + i;\n        }\n        else if (toString.length === 3) {\n            round = '00' + i;\n        } else if (toString.length === 4) {\n            round = '0' + i;\n        } else {\n            round = toString;\n        }\n        result.push({\n            ProductID: 'PRO-' + round,\n            City: city[Math.round(Math.random() * city.length)] || city[0],\n            Year: \"FY \" + (dt + 2013),\n            CustomerName: customername[Math.round(Math.random() * customername.length)] || customername[0],\n            Price: Math.round(Math.random() * 5000) + 5000,\n            Sold: Math.round(Math.random() * 80) + 10,\n        });\n        if (dt / 2 == 1) {\n            dt = 0;\n        }\n    }\n    return result;\n};\n\n\n    \n    let pivotObj: PivotView = new PivotView({\n        dataSourceSettings: {\n            dataSource: [],\n            enableSorting: false,\n            expandAll: true,\n            formatSettings: [{ name: 'Price', format: 'C0' }],\n            rows: [{ name: 'ProductID' }],\n            columns: [{ name: 'Year' }],\n            values: [{ name: 'Price', caption: 'Unit Price' }, { name: 'Sold', caption: 'Unit Sold' }],\n        },\n        width: '100%',\n        height: 300,\n        enableVirtualization: true,\n        virtualScrollSettings: { allowSinglePage: true },\n        dataBound: (args: any): void => {\n            if ((pivotObj.dataSourceSettings.dataSource as IDataSet[]).length > 0) {\n                if (date1 && isInit) {\n                    date2 = new Date().getTime();\n                    document.getElementById('performanceTime').innerHTML = 'Time Taken: ' + (date2 - date1) / 1000 + ' sec';\n                }\n                isInit = false;\n                button.disabled = true;\n                document.getElementById('popup').style.display = 'none';\n            }\n            if (Browser.isDevice && pivotObj && pivotObj.enableRtl) {\n                document.querySelector('.control-section').classList.add('e-rtl');\n            }\n        },\n    });\n    pivotObj.appendTo('#PivotView');\n\n    let button: Button = new Button({ isPrimary: true, cssClass: 'e-info' });\n    button.appendTo('#load');\n\n    function show() {\n        document.getElementById('popup').style.display = 'inline-block';\n    }\n\n    button.element.onclick = (): void => {\n        show();\n        isInit = true;\n        pivotObj.dataSourceSettings.dataSource = data(100000) as IDataSet[];\n        date1 = new Date().getTime();\n    };\n\n"}