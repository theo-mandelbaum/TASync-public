{"theme-colors.ts":"import { CircularChart3DLoadedEventArgs, CircularChart3DTheme } from \"@syncfusion/ej2/charts\";\n\nexport function loadCircular3DChartTheme (args: CircularChart3DLoadedEventArgs): void {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    args.chart.theme = <CircularChart3DTheme>(selectedTheme.charAt(0).toUpperCase() +\n        selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div id=\"donut-container\"></div>\n</div>\n\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-calendars\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-excel-export\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-charts\": \"*\",\n  \"@syncfusion/ej2/base\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { CircularChart3D, PieSeries3D, CircularChartDataLabel3D, CircularChartLegend3D, CircularChartTooltip3D, CircularChartHighlight3D, CircularChartSelection3D , CircularChart3DLoadedEventArgs, CircularChart3DTheme } from '@syncfusion/ej2-charts';\nimport { Browser, EmitType } from '@syncfusion/ej2/base';\nimport { loadCircular3DChartTheme } from './theme-colors';\n\nCircularChart3D.Inject( PieSeries3D, CircularChartDataLabel3D, CircularChartLegend3D, CircularChartTooltip3D, CircularChartHighlight3D, CircularChartSelection3D );\n/**\n * Sample for pie selection\n */\n\n// tslint:disable-next-line:max-func-body-length\n\n    \n    let count: number = 0;\n    let pie: CircularChart3D = new CircularChart3D({\n        // Initialize the chart series\n        series: [\n            {\n                dataSource: [\n                    { 'x': 'Chrome', y: 62.92 },\n                    { 'x': 'Internet Explorer', y: 6.12 },\n                    { 'x': 'Edge', y: 5.5 },\n                    { 'x': 'Opera', y: 3.15 },\n                    { 'x': 'Safari', y: 19.97 },\n                    { 'x': 'Others', y: 2.34 }\n                ],\n                xName: 'x', yName: 'y',\n                radius: Browser.isDevice ? '50%' : '70%',\n                dataLabel: {\n                    visible: true,\n                    name: 'x',\n                    position: 'Outside',\n                    font: {\n                        fontWeight: '600',\n                    },\n                    connectorStyle: { length: Browser.isDevice ? '20px' : '40px' }\n                },\n            }\n        ],\n        title: \"Browser Market Shares in November 2023\",\n        legendSettings: {\n            visible: true,\n            position: Browser.isDevice ? 'Bottom' : 'Right',\n            toggleVisibility: false\n        },\n        tilt: -30,\n        selectionMode: 'Point',\n        selectionPattern: 'DiagonalBackward',\n        isMultiSelect: true,\n        highlightMode: 'Point',\n        tooltip: { enable: true, format: '<b>${point.x}</b><br>Browser Share: <b>${point.y}%</b>', header: \"\" },\n        // Triggered animation complete, text render and load event\n        load: (args: CircularChart3DLoadedEventArgs) => {\n            loadCircular3DChartTheme(args);\n        },\n    });\n    pie.appendTo('#donut-container');\n"}