{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\nï»¿<div class=\"col-lg-12 control-section\">\n    <div class=\"content-wrapper\">\n        <div class=\"schedule-demo-heading\">\n            Flight timings between Barcelona and Los Angeles\n        </div>\n        <div id=\"Schedule\"></div>\n    </div>\n</div>\n\n\n\n\n\n<script id=\"restemplate\" type=\"text/x-template\">\n    <div class='template-wrap'>\n        <div class=\"airline-image ${getAirlineImage(data)}\"></div>\n        <div class=\"airline-details\">\n            <div class=\"airline-name\">${getAirlineName(data)}</div>\n            <div class=\"airline-model\">Model no: ${getAirlineModel(data)}</div>\n            <div class=\"airline-seats\">No.of seats: ${getAirlineSeats(data)}</div>\n        </div>\n    </div>\n</script>\n\n<style>\n    .e-schedule .template-wrap {\n        display: flex;\n        text-align: left;\n    }\n\n    .schedule-demo-heading {\n        font-size: 16px;\n        padding-bottom: 15px;\n        text-align: center;\n        font-weight: 500\n    }\n\n    .e-schedule .e-agenda-view .template-wrap {\n        display: table;\n        width: inherit;\n        text-align: center;\n        padding-top: 10px;\n    }\n\n    .e-schedule:not(.e-device) .e-agenda-view .e-content-wrap table td:first-child {\n        width: 110px;\n    }\n\n    .e-schedule .template-wrap .airline-image {\n        width: 30px;\n        margin-top: 15px;\n        background-repeat: no-repeat;\n    }\n\n    .e-schedule.e-device .template-wrap .airline-image {\n        margin-top: 5px;\n    }\n\n    .e-schedule .e-agenda-view .template-wrap .airline-image {\n        height: 30px;\n        margin-top: 0;\n        margin-left: 35%;\n    }\n\n    .e-schedule .e-vertical-view .e-resource-cells {\n        height: 80px;\n    }\n\n    .e-schedule .template-wrap .airline-details {\n        padding-left: 15px;\n    }\n\n    .e-schedule .e-agenda-view .template-wrap .airline-details {\n        padding: 0;\n    }\n\n    .e-schedule .template-wrap .airline-details .airline-name {\n        font-size: 16px;\n        font-weight: 500;\n    }\n\n    .e-schedule.e-device .template-wrap .airline-details .airline-name {\n        font-size: inherit;\n        font-weight: inherit;\n    }\n\n    .e-schedule .template-wrap .airline-image.airways-1 {\n        background-image: url('//npmci.syncfusion.com/development/demos/src/schedule/images/airways-1.svg');\n    }\n\n    .e-schedule .template-wrap .airline-image.airways-2 {\n        background-image: url('//npmci.syncfusion.com/development/demos/src/schedule/images/airways-2.svg');\n    }\n\n    .e-schedule .template-wrap .airline-image.airways-3 {\n        background-image: url('//npmci.syncfusion.com/development/demos/src/schedule/images/airways-3.svg');\n    }\n\n    .e-schedule .e-agenda-view .template-wrap .airline-model,\n    .e-schedule .e-agenda-view .template-wrap .airline-seats {\n        display: none;\n    }\n\n    .e-schedule.e-device .template-wrap .airline-model,\n    .e-schedule.e-device .template-wrap .airline-seats {\n        display: none;\n    }\n\n    @media (max-width: 550px) {\n        .schedule-demo-heading {\n            font-size: 14px;\n        }\n    }\n</style>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-calendars\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@syncfusion/ej2-excel-export\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@types/requirejs\": \"^2.1.37\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-schedule\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { Schedule, ScheduleModel, Week, Month, ResourceDetails, Agenda, Resize, DragAndDrop } from '@syncfusion/ej2-schedule';\n\n/**\n * schedule resources group sample\n */\nSchedule.Inject(Week, Month, Agenda, Resize, DragAndDrop);\n\n\n    \n    interface TemplateFunction extends Window {\n        getAirlineImage?: Function;\n        getAirlineName?: Function;\n        getAirlineModel?: Function;\n        getAirlineSeats?: Function;\n    }\n\n    let scheduleOptions: ScheduleModel = {\n        width: '100%',\n        height: '650px',\n        selectedDate: new Date(2021, 3, 6),\n        views: ['Week', 'Month', 'Agenda'],\n        resourceHeaderTemplate: '#restemplate',\n        group: {\n            resources: ['Airlines']\n        },\n        resources: [{\n            field: 'AirlineId', title: 'Airline Name',\n            name: 'Airlines', allowMultiple: true,\n            dataSource: [\n                { AirlineName: 'Airways 1', AirlineId: 1, AirlineColor: '#EA7A57' },\n                { AirlineName: 'Airways 2', AirlineId: 2, AirlineColor: '#357cd2' },\n                { AirlineName: 'Airways 3', AirlineId: 3, AirlineColor: '#7fa900' }\n            ],\n            textField: 'AirlineName', idField: 'AirlineId', colorField: 'AirlineColor'\n        }],\n        eventSettings: {\n            dataSource: generateEvents(),\n            fields: {\n                subject: { title: 'Travel Summary', name: 'Subject' },\n                location: { title: 'Source', name: 'Location' },\n                description: { title: 'Comments', name: 'Description' },\n                startTime: { title: 'Departure Time', name: 'StartTime' },\n                endTime: { title: 'Arrival Time', name: 'EndTime' }\n            }\n        }\n    };\n\n    let scheduleObj: Schedule = new Schedule(scheduleOptions);\n    scheduleObj.appendTo(document.getElementById('Schedule'));\n    (window as TemplateFunction).getAirlineImage = (value: ResourceDetails) => {\n        let airlineName: string = (window as TemplateFunction).getAirlineName(value);\n        return airlineName.replace(' ', '-').toLowerCase();\n    };\n    (window as TemplateFunction).getAirlineName = (value: ResourceDetails) => {\n        return ((value as ResourceDetails).resourceData) ?\n            (value as ResourceDetails).resourceData[(value as ResourceDetails).resource.textField] : value.resourceName;\n    };\n    (window as TemplateFunction).getAirlineModel = (value: ResourceDetails) => {\n        let airlineName: string = (window as TemplateFunction).getAirlineName(value);\n        return (airlineName === 'Airways 1') ? 'CRJ 700' : (airlineName === 'Airways 2') ? 'Airbus A330' : 'ATR 72-600';\n    };\n    (window as TemplateFunction).getAirlineSeats = (value: ResourceDetails) => {\n        let airlineName: string = (window as TemplateFunction).getAirlineName(value);\n        return (airlineName === 'Airways 1') ? 50 : (airlineName === 'Airways 2') ? 75 : 100;\n    };\n\n    function generateEvents(): Record<string, any>[] {\n        let subjectCollection: string[] = ['Barcelona to Los Angeles', 'Los Angeles to Barcelona'];\n        let collections: Record<string, any>[] = [];\n        let dataCollections: number[] = [1, 2, 3];\n        let id: number = 1;\n        for (let data of dataCollections) {\n            let startDate: Date = new Date(2021, 3, 1);\n            startDate.setMilliseconds(1000 * 60 * 60 * .5 * (data - 1));\n            let lastDate: Date = new Date((+startDate) + (1000 * 60 * 60 * 24 * 30));\n            for (let date: Date = startDate; date.getTime() < lastDate.getTime(); date = new Date(date.getTime() + (1000 * 60 * 60 * 5))) {\n                let strDate: Date = new Date(+date);\n                let endDate: Date = new Date((+strDate) + (1000 * 60 * 60 * (2.5 + (0.5 * data))));\n                collections.push({\n                    Id: id,\n                    Subject: subjectCollection[id % 2],\n                    StartTime: new Date(+strDate),\n                    EndTime: new Date(+endDate),\n                    AirlineId: data\n                });\n                id += 1;\n            }\n        }\n        return collections;\n    }\n"}