{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div id=\"container\" class=\"fileupload\">\n        <input type=\"file\" id=\"fileupload\" name=\"UploadFiles\" onclick=\"return onclick()\">\n        <button id=\"openBtn\" class=\"dlgbtn\" type=\"button\">File Browser</button>\n    </div>\n    <div id=\"target\" class=\"control-section\">\n        <div id=\"dialog\">\n            <div id=\"filemanager\"></div>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n<style>\n    .fileupload {\n        max-width: 500px;\n        margin: auto;\n    }\n    #openBtn {\n        position: absolute;\n        top: 28px;\n        left: 43%;\n    }\n    #target {\n        height: 550px;\n    }\n    #dialog {\n        top: 20px !important;\n        max-height: 500px !important;\n    }\n    .fileupload .e-file-drop, .fileupload .e-css.e-btn {\n        display: none;\n    }\n    \n    .tailwind #openBtn,\n\t.tailwind-dark #openBtn {\n\t\ttop: 29px;\n\t}\n\t\n    .bootstrap #openBtn,\n    .bootstrap-dark #openBtn {\n        top: 30px;\n    }\n\t.bootstrap5 #openBtn,\n    .bootstrap5-dark #openBtn {\n        top: 26px;\n    }\n\n    .ej2-new #openBtn {\n    top: 171px;\n    }\n\t\n    @media (max-width: 768px) {\n\t.ej2-new #openBtn {\n\ttop: 270px !important;\n\tleft: 35%;\n\t}\n    }\n\n    .fileupload .e-file-select-wrap {\n        padding: 20px 0 20px 20px;\n    }\n</style>\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-grids\": \"*\",\n  \"@syncfusion/ej2-layouts\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-filemanager\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { Uploader } from '@syncfusion/ej2-inputs';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { FileManager, FileOpenEventArgs, Toolbar, NavigationPane, DetailsView } from '@syncfusion/ej2-filemanager';\nimport { Button } from '@syncfusion/ej2-buttons';\n\nFileManager.Inject(Toolbar, NavigationPane, DetailsView);\n\n/**\n * File Manager real time use case sample\n */\n\n\n    \n\n    // Initialize the Uploader component\n    let uploadObject: Uploader = new Uploader();\n    uploadObject.appendTo('#fileupload');\n\n    // Initialize the Button component\n    let btnObj: Button = new Button();\n    btnObj.appendTo('#openBtn');\n\n    // Initialize the Dialog component\n    let dialogObj: Dialog = new Dialog({\n        header: 'Select a file',\n        showCloseIcon: true,\n        closeOnEscape: false,\n        width: '850px',\n        visible: false,\n        target: document.getElementById('target'),\n        animationSettings: { effect: 'None' },\n        open: dialogOpen,\n        close: dialogClose\n    });\n    dialogObj.appendTo('#dialog');\n\n    let hostUrl: string = 'https://ej2-aspcore-service.azurewebsites.net/';\n\n    // Initialize the FileManager component\n    let filemanagerInstance: FileManager = new FileManager({\n        ajaxSettings: {\n            url: hostUrl + 'api/FileManager/FileOperations',\n            getImageUrl: hostUrl + 'api/FileManager/GetImage',\n            uploadUrl: hostUrl + 'api/FileManager/Upload',\n            downloadUrl: hostUrl + 'api/FileManager/Download'\n        },\n        allowMultiSelection: false,\n        toolbarSettings: {\n            items: ['NewFolder', 'Upload', 'Delete', 'Cut', 'Copy', 'Rename', 'SortBy', 'Refresh', 'Selection', 'View', 'Details']\n        },\n        contextMenuSettings: {\n            file: [ \"Cut\", \"Copy\", \"|\", \"Delete\", \"Download\", \"Rename\", \"|\", \"Details\"],\n            visible: true\n        },\n        fileOpen : onFileOpen\n    });\n    filemanagerInstance.appendTo('#filemanager');\n\n    document.getElementById('openBtn').onclick = (): void => {\n        dialogObj.show();\n        dialogOpen();\n        filemanagerInstance.path = '/';\n        filemanagerInstance.selectedItems = [];\n        filemanagerInstance.refresh();\n    };\n\n    // Uploader will be shown, if Dialog is closed\n    function dialogClose(): void {\n        document.getElementById('container').style.display = 'block';\n    }\n\n    // Uploader will be hidden, if Dialog is opened\n    function dialogOpen(): void {\n        document.getElementById('container').style.display = 'none';\n    }\n\n    // File Manager's fileOpen event function\n    function onFileOpen(args: FileOpenEventArgs): void {\n        let file: any = (args as any).fileDetails;\n        if (file.isFile) {\n            args.cancel = true;\n            if (file.size <= 0 ) { file.size = 10000; }\n            uploadObject.files = [{name: file.name, size: file.size, type: file.type }];\n            dialogObj.hide();\n        }\n    }\n"}