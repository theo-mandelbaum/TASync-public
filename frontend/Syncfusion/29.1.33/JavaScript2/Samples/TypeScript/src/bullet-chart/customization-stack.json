{"theme-color.ts":"import { ChartTheme, IBulletLoadedEventArgs } from \"@syncfusion/ej2/charts\";\n\nexport function loadBulletChartTheme(args: IBulletLoadedEventArgs): void {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    args.bulletChart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() +\n    selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/light/i, 'Light').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-md-8 control-section\" align=\"center\">\n    <div id=\"container\"></div>\n</div>\n<div class=\"col-md-4 property-section\">\n        <div class=\"property-panel-header\">Properties</div>\n    <table title=\"Properties\" style=\"width: 100%; height: 100%;\">        \n        <tbody><tr>\n            <td style=\"width: 60%\">\n                <div class=\"prop-text\">Start Color:</div>\n            </td>\n            <td style=\"width: 40%;\">\n                <div align=\"center\">\n                    <input id=\"color-picker1\" type=\"color\">\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td style=\"width: 60%\">\n                <div class=\"prop-text\">Middle Color:</div>\n            </td>\n            <td style=\"width: 40%;\">\n                <div align=\"center\">\n                    <input id=\"color-picker2\" type=\"color\">\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td style=\"width: 60%\">\n                <div class=\"prop-text\">End Color:</div>\n            </td>\n            <td style=\"width: 40%;\">\n                <div align=\"center\">\n                    <input id=\"color-picker3\" type=\"color\">\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td style=\"width: 60%\">\n                <div class=\"prop-text\">Use Range Color:</div>\n            </td>\n            <td style=\"width: 40%;\">\n                <div align=\"center\">\n                    <input type=\"checkbox\" id=\"rangeColor\"><br>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td style=\"width: 60%\">\n                <div class=\"prop-text\">Opposed position:</div>\n            </td>\n            <td style=\"width: 40%;\">\n                <div align=\"center\">\n                    <input type=\"checkbox\" id=\"position\"><br>\n                </div>\n            </td>\n        </tr>\n    </tbody></table>\n</div>\n\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n\n    .prop-text {\n        font-size: small\n    }\n\n    tr {\n        height: 50px !important;\n    }\n</style>\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-calendars\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-excel-export\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-charts\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-splitbuttons\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-icons\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { BulletChart, BulletTooltip,  ChartTheme, IBulletLoadedEventArgs } from '@syncfusion/ej2-charts';\nimport { ColorPicker, ColorPickerEventArgs } from '@syncfusion/ej2-inputs';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { CheckBox, ChangeEventArgs } from '@syncfusion/ej2-buttons';\nimport { loadBulletChartTheme } from './theme-color';\nBulletChart.Inject(BulletTooltip);\n\n/**\n * Sample for default bullet chart.\n */\n\nlet featureValue: number;\nlet targetValue: number;\n\n    \n    let chart: BulletChart = new BulletChart({\n        width: Browser.isDevice ? '100%' : '100%',\n        tooltip: { enable: true },\n        dataSource: [{ value: 1.7, target: 2.5 }],\n        valueField: 'value',\n        targetField: 'target',\n        animation: { enable: false },\n        ranges: [{ end: 1.5, color: '#599C20' },\n        { end: 2.5, color: '#EFC820' },\n        { end: 3, color: '#CA4218' }\n        ],\n        minimum: 0, maximum: 3, interval: 0.5,\n        title: 'Package Downloads',\n        subtitle: 'in Thousands',\n        minorTickLines: { width: 0},\n        load: (args: IBulletLoadedEventArgs) => {\n            loadBulletChartTheme(args);\n        },\n    });\n    chart.appendTo('#container');\n\n    let colorPicker: ColorPicker = new ColorPicker(\n        {\n            value: '#599C20',\n            mode: 'Palette',\n            change: (args: ColorPickerEventArgs) => {\n                chart.ranges[0].color = args.currentValue.hex;\n                chart.refresh();\n            }\n        });\n    colorPicker.appendTo('#color-picker1');\n    let colorPicker2: ColorPicker = new ColorPicker(\n        {\n            value: '#EFC820',\n            mode: 'Palette',\n            change: (args: ColorPickerEventArgs) => {\n                chart.ranges[1].color = args.currentValue.hex;\n                chart.refresh();\n            }\n        });\n    colorPicker2.appendTo('#color-picker2');\n    let colorPicker3: ColorPicker = new ColorPicker(\n        {\n            value: '#CA4218',\n            mode: 'Palette',\n            change: (args: ColorPickerEventArgs) => {\n                chart.ranges[2].color = args.currentValue.hex;\n                chart.refresh();\n            }\n        });\n    colorPicker3.appendTo('#color-picker3');\n\n    let rangeColor: CheckBox = new CheckBox({\n        checked: false,\n        change: (args: ChangeEventArgs) => {\n            chart.majorTickLines.useRangeColor = args.checked;\n            chart.minorTickLines.useRangeColor = args.checked;\n            chart.labelStyle.useRangeColor = args.checked;\n            chart.refresh();\n        }\n    });\n    rangeColor.appendTo('#rangeColor');\n    let position: CheckBox = new CheckBox({\n        checked: false,\n        change: (args: ChangeEventArgs) => {\n           chart.opposedPosition = args.checked;\n           chart.refresh();\n        }\n    });\n    position.appendTo('#position');\n\n\n"}