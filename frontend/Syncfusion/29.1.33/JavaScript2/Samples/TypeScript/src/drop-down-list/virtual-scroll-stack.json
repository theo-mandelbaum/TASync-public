{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section col-lg-12\">\n    <div id=\"local-data\" class=\"col-lg-6\" style=\"padding-top:15px\">\n        <div class=\"drop-down-list-content\">\n            <label class=\"h4\">Local Data</label>\n            <input type=\"text\" id=\"local\" tabindex=\"0\">\n        </div>\n    </div>\n    <div id=\"remote-data\" class=\"col-lg-6\" style=\"padding-top:15px\">\n        <div class=\"drop-down-list-content\">\n            <label class=\"h4\">Remote Data</label>\n            <input type=\"text\" id=\"remote\" tabindex=\"0\">\n        </div>\n    </div>\n    <div id=\"group-data\" class=\"col-lg-6\" style=\"padding-top:15px\">\n        <div class=\"drop-down-list-content\">\n            <label class=\"h4\">Grouping</label>\n            <input type=\"text\" id=\"group\" tabindex=\"0\">\n        </div>\n    </div>\n</div>\n\n\n\n\n<!-- custom code start -->\n<style>\n    .drop-down-list-content {\n        margin: 0 auto; \n        width: 320px;\n    }\n    .drop-down-list-content .h4 {\n        font-size: 16px;\n        margin: 0 0 10px;\n        font-weight: bold;\n    }\n</style>\n<!-- custom code end-->\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\n/**\n * Dropdownlist Default functionality Sample\n */\nimport { DropDownList , VirtualScroll } from '@syncfusion/ej2-dropdowns';\nimport { Query, DataManager, UrlAdaptor  } from '@syncfusion/ej2-data';\n\n\nDropDownList.Inject(VirtualScroll);\n\nlet records: { [key: string]: Object }[] = [];\n\nfor (let i = 1; i <= 150; i++) {\n    let item: { [key: string]: Object } = {};\n    item.id = 'id' + i;\n    item.text = `Item ${i}`;\n\n    // Generate a random number between 1 and 4 to determine the group\n    const randomGroup = Math.floor(Math.random() * 4) + 1;\n    switch (randomGroup) {\n        case 1:\n            item.group = 'Group A';\n            break;\n        case 2:\n            item.group = 'Group B';\n            break;\n        case 3:\n            item.group = 'Group C';\n            break;\n        case 4:\n            item.group = 'Group D';\n            break;\n        default:\n            break;\n    }\n    records.push(item);\n}\n\n\n    \n    // initialize DropDownList component\n    let localObj: DropDownList = new DropDownList({\n        //set the local data to dataSource property\n        dataSource: records,\n        //enable the virtualization property\n        enableVirtualization: true,\n        popupHeight: '200px',\n        allowFiltering: true,\n        fields: { text: 'text', value: 'id' },\n        // set the placeholder to DropDownList component\n        placeholder: 'e.g. Item 1'\n    });\n    localObj.appendTo('#local');\n\n    let remoteObj: DropDownList = new DropDownList({\n        //set the remote data to dataSource property\n        dataSource: new DataManager({\n            url: 'http://localhost:62728/api/VirtualDropdownData',\n            adaptor: new UrlAdaptor ,\n            crossDomain: true\n        }),\n        fields: { text: 'OrderID', value: 'OrderID' },\n        //enable the virtualization property\n        enableVirtualization: true,\n        popupHeight: '200px',\n        allowFiltering: true,\n        // set the placeholder to DropDownList component\n        placeholder: 'OrderID'\n    });\n    remoteObj.appendTo('#remote');\n\n    let groupObj: DropDownList = new DropDownList({\n        //set the local data to dataSource property\n        dataSource: records,\n        //enable the virtualization property\n        enableVirtualization: true,\n        popupHeight: '200px',\n        allowFiltering: true,\n        fields: { groupBy: 'group', text: 'text', value: 'id' },\n        // set the placeholder to DropDownList component\n        placeholder: 'e.g. Item 1'\n    });\n    groupObj.appendTo('#group');\n"}