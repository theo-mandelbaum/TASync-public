{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div id=\"linear-stepper-section\">\n        <div class=\"e-btn-group\">\n            <input type=\"radio\" id=\"linear\" name=\"Linear\" value=\"true\" onclick=\"updateLinear(this)\" checked=\"\">\n            <label class=\"e-btn\" for=\"linear\">Linear</label>\n            <input type=\"radio\" id=\"nonLinear\" name=\"Linear\" value=\"false\" onclick=\"updateLinear(this)\">\n            <label class=\"e-btn\" for=\"nonLinear\">Non-Linear</label>\n        </div>\n        <div class=\"linear-stepper-control\">\n            <nav id=\"linear-stepper\"></nav>\n        </div>\n    </div>\n    <div id=\"linear-stepper-content\">\n        <b>Description:</b> <br><br> <ul><li>During this phase, the project's scope and objectives are clearly defined, along with the establishment of initial settings and parameters.</li><li>This step involves outlining the primary goals, deliverables, and the overall vision of the project to ensure a comprehensive understanding among all stakeholders.</li></ul>\n    </div>\n    <div class=\"linear-stepper-options\" style=\"display: inline-flex;\">\n        <button id=\"previousStep\" style=\"margin-right:15px; display: none;\" onclick=\"updateBack(this)\" class=\"e-btn\">Back</button>\n        <button id=\"nextStep\" style=\"display: block;\" onclick=\"updateNext(this)\" class=\"e-btn\">Next</button>\n    </div>\n</div>\n<style>\n\n    @font-face {\n        font-family: 'Linear_flow';\n        src:\n        url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');\n        font-weight: normal;\n        font-style: normal;\n    }\n\n    [class^=\"sf-icon-\"], [class*=\" sf-icon-\"] {\n        font-family: 'Linear_flow' !important;\n        speak: none;\n        font-style: normal;\n        font-weight: normal;\n        font-variant: normal;\n        text-transform: none;\n        line-height: inherit;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n    .sf-icon-form:before { content: \"\\e700\"; }\n    .sf-icon-tasksheet:before { content: \"\\e701\"; }\n    .sf-icon-progress:before { content: \"\\e702\"; }\n    .sf-icon-submit:before { content: \"\\e703\"; }\n\n\n    #linear-stepper-section {\n        text-align: center;\n    }\n\n    .linear-stepper-control {\n        margin: 45px 100px;\n    }\n\n    .linear-stepper-options {\n        margin: 30px 100px;\n    }\n\n    #linear-stepper-content {\n        height: 120px;\n        width: 75%;\n        margin: 0px 105px;\n    }\n\n    @media only screen and (max-width: 965px) {\n        .linear-stepper-control {\n            width: 100%;\n            margin: 30px auto;\n        }\n        #linear-stepper-content, .linear-stepper-options {\n            margin: 30px 0px 0px 0px;\n            width: auto;\n            height: auto;\n            left: 25%;\n        }\n    }\n\n</style>\n\n\n\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { Stepper, StepModel } from '@syncfusion/ej2-navigations';\n\n\n    \n\n    let stepper: StepModel[] = [\n        { iconCss: 'sf-icon-form', label: 'Project Setup' },\n        { iconCss: 'sf-icon-tasksheet', label: 'Task Planning' },\n        { iconCss: 'sf-icon-progress', label: ' Progress Tracking' },\n        { iconCss: 'sf-icon-submit', label: 'Project Completion' }\n    ];\n\n    let linearStepper: Stepper = new Stepper ({\n        steps: stepper,\n        linear: true,\n        stepChanged: (args) => {\n            updateContent(args.activeStep);\n        }\n    });\n    linearStepper.appendTo('#linear-stepper');\n\n    (window as any).updateBack = () => {\n        linearStepper.previousStep();\n        updateContent(linearStepper.activeStep);\n    };\n\n    (window as any).updateNext = () => {\n        linearStepper.nextStep();\n        updateContent(linearStepper.activeStep);\n    };\n\n    function toggleNavigationButtons(activeStep: number) {\n        (document.getElementById('previousStep') as HTMLElement).style.display = (activeStep !== 0) ? 'block' : 'none';\n        (document.getElementById('nextStep') as HTMLElement).style.display = (activeStep !== 3) ? 'block' : 'none';\n    };\n\n    function updateContent(args: number): void {\n        let stepperContent: HTMLElement = document.getElementById('linear-stepper-content') as HTMLElement;\n        switch (args) {\n          case 0:\n              stepperContent.innerHTML = `<b>Description:</b> <br/><br/> <ul><li>During this phase, the project's scope and objectives are clearly defined, along with the establishment of initial settings and parameters.</li><li>This step involves outlining the primary goals, deliverables, and the overall vision of the project to ensure a comprehensive understanding among all stakeholders.</li></ul>`;\n              break;\n          case 1:\n              stepperContent.innerHTML = `<b>Description:</b> <br/><br/> <ul><li>Task planning involves creating a comprehensive roadmap that outlines specific tasks, sets achievable milestones, and allocates responsibilities among team members. </li>\n              <li>This phase requires a detailed breakdown of the project's requirements, resources, and a strategic timeline to ensure a systematic and efficient execution of tasks.</li>\n              </ul>`;\n              break;\n          case 2:\n              stepperContent.innerHTML = `<b>Description:</b> <br/><br/> <ul><li>In this phase, project managers closely monitor the progress of individual tasks, track the overall project's advancement, and regularly update task statuses.</li><li>Continuous assessment of the project's timeline and potential challenges allows for timely adjustments, ensuring that the project stays on course and within the predefined parameters.</li></ul>`;\n              break;\n          case 3:\n              stepperContent.innerHTML = `<b>Description:</b> <br/><br/> <ul><li>\n              The final phase focuses on the comprehensive evaluation of the project's success, completion of all deliverables, and documentation of lessons learned. </li><li>Analyzing the outcomes and documenting the experiences gained during the project's lifecycle are crucial for improving future project management processes and enhancing overall organizational efficiency.</li>`;\n              break;\n          default:\n              break;\n      }\n      toggleNavigationButtons(args);\n    }\n\n    (window as any).updateLinear = (args: any) => {\n        linearStepper.linear = (/true/).test(args.value) ? true : false;\n        linearStepper.reset();\n        updateContent(linearStepper.activeStep);\n    };\n\n"}