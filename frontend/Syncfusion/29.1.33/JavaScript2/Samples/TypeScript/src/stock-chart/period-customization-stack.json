{"theme-color.ts":"import { ChartTheme, IStockChartEventArgs } from \"@syncfusion/ej2/charts\";\n\nexport function loadStockChartTheme(args?: IStockChartEventArgs) {\n    let selectedTheme: string = location.hash.split('/')[1];\n    let theme;\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (args) {\n        theme = args.stockChart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    else {\n        theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    return theme.toLowerCase();\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div id=\"container\"></div>\n</div>\n\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-calendars\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-excel-export\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-pdf-export\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-charts\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { StockChart } from '@syncfusion/ej2-charts';\nimport { DateTime, AreaSeries, CandleSeries, HiloOpenCloseSeries, HiloSeries, LineSeries, SplineSeries } from '@syncfusion/ej2-charts';\nimport { AccumulationDistributionIndicator, AtrIndicator, BollingerBands, EmaIndicator, MomentumIndicator } from '@syncfusion/ej2-charts';\nimport { MacdIndicator, RsiIndicator, Trendlines, SmaIndicator, StochasticIndicator, Export } from '@syncfusion/ej2-charts';\nimport { TmaIndicator, RangeTooltip, Tooltip, Crosshair, IStockChartEventArgs, ChartTheme } from '@syncfusion/ej2-charts';\nimport { loadStockChartTheme } from './theme-color';\nStockChart.Inject(DateTime, AreaSeries, CandleSeries, HiloOpenCloseSeries, HiloSeries, LineSeries, SplineSeries);\nStockChart.Inject(AccumulationDistributionIndicator, AtrIndicator, BollingerBands, EmaIndicator, MomentumIndicator);\nStockChart.Inject(MacdIndicator, RsiIndicator, SmaIndicator, StochasticIndicator);\nStockChart.Inject(Trendlines, TmaIndicator, RangeTooltip, Tooltip, Crosshair, Export);\n\n/**\n * Sample for Multiple series in stock chart\n */\n\n    \n    let series1: Object[] = [];\n    let point1: Object;\n    let value: number = 80;\n    let i: number;\n    for (i = 1; i < 1440; i++) {\n        if (Math.random() > .5) {\n            value += Math.random();\n        } else {\n            value -= Math.random();\n        }\n        point1 = { x: new Date(2000, 1, 1, 0, i), y: value.toFixed(1) };\n        series1.push(point1);\n    }\n    let stockChart: StockChart = new StockChart({\n        primaryXAxis: { valueType: 'DateTime', majorGridLines: { color: 'transparent' }, edgeLabelPlacement: 'Shift',\n                        crosshairTooltip: { enable: true }},\n        primaryYAxis: {\n            lineStyle: { color: 'transparent' },\n            majorTickLines: { color: 'transparent', height: 0 },\n            crosshairTooltip: { enable: true }\n        },\n        chartArea: { border: { width: 0 } },\n        series: [\n            {\n                dataSource: series1, xName: 'x', yName: 'y', type: 'Line', name: 'google',\n            }\n        ],\n        seriesType: [],\n        indicatorType: [],\n        exportType: [],\n        trendlineType : [],\n        periods: [\n            { intervalType: 'Minutes', interval: 1, text: '1m' },\n            { intervalType: 'Minutes', interval: 30, text: '30m' },\n            { intervalType: 'Hours', interval: 1, text: '1H' },\n            { intervalType: 'Hours', interval: 12, text: '12H', selected: true },\n            { text: '1D' }\n        ],\n        title: 'AAPL stock price by minutes',\n        crosshair: {\n            enable: true,\n            lineType:'Both'\n        },\n        load: (args: IStockChartEventArgs) => {\n            loadStockChartTheme(args);\n        }\n    });\n    stockChart.appendTo('#container');\n"}