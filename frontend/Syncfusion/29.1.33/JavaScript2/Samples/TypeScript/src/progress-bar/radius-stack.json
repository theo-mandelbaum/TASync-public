{"theme-colors.ts":"import { ILoadedEventArgs, ProgressTheme } from \"@syncfusion/ej2-progressbar\";\n\nexport function loadProgressBarTheme (args: ILoadedEventArgs): string  {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    args.progressBar.theme = <ProgressTheme>(selectedTheme.charAt(0).toUpperCase() +\n        selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    var theme = args.progressBar.theme.replace(/dark/i, '-dark').replace(/highcontrast/i, '-highcontrast').toLowerCase();\n    return theme as string;\n};","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section progress-bar-parent\">\n    <div class=\"row\" style=\"margin-top: 8%\">\n        <div class=\"col-lg-3 col-md-3 col-3\" align=\"center\">\n            <div id=\"full-background\"></div>\n        </div>\n        <div class=\"col-lg-3 col-md-3 col-3\" align=\"center\">\n            <div id=\"outer-radius\"></div>\n        </div>\n        <div class=\"col-lg-3 col-md-3 col-3\" align=\"center\">\n            <div id=\"on-radius\"></div>\n        </div>\n        <div class=\"col-lg-3 col-md-3 col-3\" align=\"center\">\n            <div id=\"pie\"></div>\n        </div>\n    </div>\n    <div class=\"row linear-parent\">\n        <button id=\"reLoad\" class=\"e-control e-btn e-lib e-outline e-primary\">Reload</button></div>\n</div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n\n    #reLoad {\n        border-radius: 4px;\n        text-transform: capitalize;\n        margin-top: 3%;\n    }\n\n    #full-background_Circulartrack {\n            opacity: 1 !important;\n    }\n    \n    .linear-parent {\n        text-align: center;\n        width: 80%;\n        margin: auto;\n    }\n</style>\n</body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-svg-base\": \"*\",\n  \"@types/requirejs\": \"^2.1.37\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-progressbar\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { ProgressBar, ProgressAnnotation, ILoadedEventArgs, ProgressTheme } from '@syncfusion/ej2-progressbar';\nimport { loadProgressBarTheme } from './theme-colors';\nProgressBar.Inject(ProgressAnnotation);\n/**\n * Sample for Semi circular progress bar\n */\n// tslint:disable-next-line:max-func-body-length\n\n    \n    let fullBackground: ProgressBar = new ProgressBar({\n        type: 'Circular',\n        value: 60,\n        width: '160px',\n        height: '160px',\n        enableRtl: false,\n        radius: '100%',\n        innerRadius: '190%',\n        trackThickness: 80,\n        cornerRadius: 'Round',\n        progressThickness: 10,\n        animation: {\n            enable: true,\n            duration: 2000,\n            delay: 0,\n        },\n        load: (args: ILoadedEventArgs) => {\n            args.progressBar.progressColor = '#FFFFFF';\n            let theme: string = loadProgressBarTheme(args);\n            // tslint:disable-next-line:align\n            switch (theme) {\n                case 'material':\n                    args.progressBar.trackColor = '#f8c2d4';\n                    args.progressBar.progressColor = '#e91e63';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#e91e63\"><span></span></div>';\n                    break;\n                case 'fabric':\n                    args.progressBar.progressColor = '#0078D6';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#0078D6\"><span></span></div>';\n                    break;\n                case 'bootstrap':\n                    args.progressBar.progressColor = '#317ab9';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#317ab9\"><span></span></div>';\n                    break;\n                case 'tailwind':\n                case 'tailwind3':\n                    args.progressBar.progressColor = '#4F46E5';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#4F46E5\"><span></span></div>';\n                    break;    \n                case 'highcontrast':\n                    args.progressBar.progressColor = '#FFD939';\n                    args.progressBar.annotations[0].content =\n                        '<div id=\"point1\" style=\"font-size:20px;font-weight:bold;color:#FFD939;\"><span>60%</span></div>';\n                    break;\n                case 'bootstrap-dark':\n                case 'fabric-dark':\n                case 'material-dark':\n                    args.progressBar.progressColor = '#9A9A9A';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#9A9A9A\"><span></span></div>';\n                    break;\n                case 'tailwind-dark':\n                    args.progressBar.progressColor = '#22D3EE';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#22D3EE\"><span></span></div>';\n                    break;\n                case 'tailwind3-dark':\n                    args.progressBar.progressColor = '#6366F1';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#6366F1\"><span></span></div>';\n                    break;\n                case 'bootstrap4':\n                    args.progressBar.progressColor = '#007bff';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#007bff\"><span></span></div>';\n                    break;\n                case 'bootstrap5':\n                case 'bootstrap5-dark':\n                case 'fluent':\n                case 'fluent-dark':\n                    args.progressBar.progressColor = '#0D6EFD';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#0D6EFD\"><span></span></div>';\n                    break;\n                case 'material3':\n                    args.progressBar.progressColor = '#6750A4';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#6750A4\"><span></span></div>';\n                    break;\n                case 'material3-dark':\n                    args.progressBar.progressColor = '#D0BCFF';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#D0BCFF\"><span></span></div>';\n                    break;  \n                case 'fluent2':\n                    args.progressBar.progressColor = '#0F6CBD';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#0F6CBD\"><span></span></div>';\n                    break;\n                case 'fluent2-highcontrast':\n                    args.progressBar.progressColor = '#1AEBFF';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#1AEBFF\"><span></span></div>';\n                    break;\n                case \"fluent2-dark\":\n                    args.progressBar.progressColor = '#115EA3';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#115EA3\"><span></span></div>';\n                break; \n                default:\n                    args.progressBar.progressColor = '#D0BCFF';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#D0BCFF\"><span></span></div>';\n                    break;\n            }\n        },\n        annotations: [\n            {\n                content: '<div id=\"point1\" style=\"font-size:20px;font-weight:bold;color:#ffffff\"><span>60%</span></div>',\n            }\n        ],\n    });\n    fullBackground.appendTo('#full-background');\n\n\n    let partBackground: ProgressBar = new ProgressBar({\n        type: 'Circular',\n        value: 60,\n        width: '160px',\n        height: '160px',\n        radius: '73%',\n        innerRadius: '80%',\n        progressThickness: 62,\n        trackThickness: 59,\n        trackColor: 'lightgray',\n        load: (args: ILoadedEventArgs) => {\n            loadProgressBarTheme(args);\n        },\n    });\n    partBackground.appendTo('#part-background');\n\n    let outerRadius: ProgressBar = new ProgressBar({\n        type: 'Circular',\n        value: 90,\n        width: '160px',\n        height: '160px',\n        innerRadius: '72',\n        progressThickness: 8,\n        cornerRadius: 'Round',\n        animation: {\n            enable: true,\n            duration: 2000,\n            delay: 0,\n        },\n        load: (args: ILoadedEventArgs) => {\n            loadProgressBarTheme(args);\n        },\n    });\n    outerRadius.appendTo('#outer-radius');\n\n    let onRadius: ProgressBar = new ProgressBar({\n        type: 'Circular',\n        value: 90,\n        width: '160px',\n        height: '160px',\n        animation: {\n            enable: true,\n            duration: 2000,\n            delay: 0,\n        },\n        trackThickness: 3,\n        progressThickness: 8,\n        load: (args: ILoadedEventArgs) => {\n            loadProgressBarTheme(args);\n        },\n    });\n    onRadius.appendTo('#on-radius');\n\n    let pie: ProgressBar = new ProgressBar({\n        type: 'Circular',\n        value: 70,\n        width: '160px',\n        height: '160px',\n        enablePieProgress: true,\n        animation: {\n            enable: true,\n            duration: 2000,\n            delay: 0,\n        },\n        load: (args: ILoadedEventArgs) => {\n            loadProgressBarTheme(args);\n        },\n    });\n    pie.appendTo('#pie');\n\n    let replayBtn: HTMLElement = document.getElementById('reLoad') as HTMLElement;\n    replayBtn.onclick = () => {\n        fullBackground.refresh();\n        outerRadius.refresh();\n        onRadius.refresh();\n        pie.refresh();\n    };\n"}