{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section col-lg-12 dropdowntree-remote\">\n    <div style=\"padding-top:15px\">\n        <div class=\"content\">\n            <input type=\"text\" id=\"ddtremote\">\n        </div>\n    </div>\n</div>\n\n<style>\n    .dropdowntree-remote .content {\n        margin: 0 auto;\n        width: 280px;\n    }\n</style>\n\n\n\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-dropdowns\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\nimport { DataManager, Query, ODataV4Adaptor } from '@syncfusion/ej2-data';\nimport { DropDownTree } from '@syncfusion/ej2-dropdowns';\n/**\n * DropdownTree remote data sample\n */\n\n    \n    // Use data manager to get tree data from remote source\n    let data: DataManager = new DataManager({\n        url: 'https://services.odata.org/V4/Northwind/Northwind.svc',\n        adaptor: new ODataV4Adaptor,\n        crossDomain: true,\n    });\n    // Set queries to filter and fetch remote data\n    let query: Query = new Query().from('Employees').select('EmployeeID,FirstName,Title').take(5);\n    let query1: Query = new Query().from('Orders').select('OrderID,EmployeeID,ShipName').take(5);\n\n    // Render the DropDownTree with remote data source\n    let ddTreeObj: DropDownTree = new DropDownTree({\n        fields: {\n            dataSource: data, query: query, value: 'EmployeeID', text: 'FirstName', hasChildren: 'EmployeeID',\n            child: { dataSource: data, query: query1, value: 'OrderID', parentValue: 'EmployeeID', text: 'ShipName' }\n        },\n        popupHeight: '200px',\n        placeholder: 'Select a name',\n\n    });\n    ddTreeObj.appendTo('#ddtremote');\n"}