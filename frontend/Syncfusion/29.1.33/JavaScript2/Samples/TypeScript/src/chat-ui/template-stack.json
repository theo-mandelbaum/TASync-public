{"messageData.ts":"let communityMessageAdmin = {\n    user: 'Alice',\n    id: 'admin'\n};\n\nlet communityMessageUser1 = {\n    user: 'Michale Suyama',\n    id: 'user1',\n    avatarBgColor: \"#87cefa\"\n};\n\nlet communityMessageUser2 = {\n    user: 'Charlie',\n    id: 'user2',\n    avatarUrl: \"//npmci.syncfusion.com/development/demos/src/chat-ui/images/charlie.png\",\n};\n\nlet communityMessageUser3 = {\n    user: 'Janet',\n    id: 'user3',\n    avatarBgColor: \"#dec287\",\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/janet.png'\n};\n\nlet chatMessageUser1 = {\n    user: 'Albert',\n    id: 'user1',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/andrew.png'\n};\n\nlet chatMessageUser2 = {\n    user: 'Reena',\n    id: 'user2',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/reena.png'\n};\n\nlet integrationMessageUser1 = {\n    user: 'Reena',\n    id: 'user1',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/reena.png'\n};\n\nlet integrationMessageUser2 = {\n    user: 'Albert',\n    id: 'user2',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/andrew.png'\n};\n\nlet botMessage = {\n    user: 'Bot',\n    id: 'bot',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/bot.png'\n};\n\nlet walterMessageUser1 = {\n    user: 'Sam',\n    id: 'user2',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/laura.png'\n};\n\nlet walterMessageUser2 = {\n    user: 'Charlie',\n    id: 'user5',\n    avatarUrl: \"//npmci.syncfusion.com/development/demos/src/chat-ui/images/charlie.png\",\n};\n\nlet lauraMessageUser1 = {\n    user: 'Laura Callahan',\n    id: 'user1',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/laura.png'\n};\n\nlet lauraMessageUser2 = {\n    user: 'Sam',\n    id: 'user3',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/laura.png'\n};\n\nlet teamsMessageUser1 = {\n    user: 'Admin',\n    id: 'team'\n};\n\nlet teamsMessageUser2= {\n    user: 'Janet',\n    id: 'user2',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/janet.png'\n};\n\nexport let communityMessagedata : any = [\n    {\n        author: communityMessageAdmin,\n        text: 'Hey Michale, Charlie! Seen the latest posts in the Design Community? Amazing projects!',\n        timeStamp: new Date(\"October 25, 2024 07:30\")\n    },\n    {\n        author: communityMessageUser1,\n        text: 'Hi Alice! Yes, Dana’s new UI design is incredible.',\n        timeStamp: new Date(\"October 25, 2024 08:00\")\n    },\n    {\n        author: communityMessageUser2,\n        text: 'Hey! I loved Dana’s use of color. Frank’s typography guide was great too.',\n        timeStamp: new Date(\"October 25, 2024 11:00\")\n    },\n    {\n        author: communityMessageAdmin,\n        text: 'Absolutely! Any new community events planned?',\n        timeStamp: new Date(\"October 26, 2024 11:00\")\n    },\n    {\n        author: communityMessageUser1,\n        text: 'We should organize a design challenge.',\n        timeStamp: new Date(\"October 26, 2024 12:15\")\n    },\n    {\n        author: communityMessageUser3,\n        text: 'I am excited to see the new projects.',\n        timeStamp: new Date(\"October 26, 2024 12:17\")\n    },\n    {\n        author: communityMessageUser2,\n        text: 'Great idea! Let’s discuss it in the next meeting.',\n        timeStamp: new Date(\"October 26, 2024 12:30\")\n    },\n    {\n        author: communityMessageAdmin,\n        text: 'Sounds good! This community is so inspiring.',\n        timeStamp: new Date()\n    },\n    {\n        author: communityMessageUser1,\n        text: 'Agreed! Excited to see everyone’s ideas.',\n        timeStamp: new Date()\n    },\n    {\n        author: communityMessageUser2,\n        text: 'I am looking forward to the design challenge.',\n        timeStamp: new Date()\n    }\n];\n\nexport let chatMessagedata : any = [\n    {\n        author: chatMessageUser1,\n        text: \"Hi there! How's it going?\"\n    },\n    {\n        author: chatMessageUser2,\n        text: \"Hey! I'm doing well, thanks. How about you?\"\n    },\n    {\n        author: chatMessageUser1,\n        text: \"Mostly the usual stuff. I did start a new hobby - painting!\"\n    },\n];\n\nexport let integrationMessagedata : any = [\n    {\n        author: integrationMessageUser1,\n        text: \"Hey, I'm having trouble with my computer. It keeps freezing.\"\n    },\n    {\n        author: integrationMessageUser2,\n        text: \"Oh, that's annoying. Have you tried restarting it?\"\n    },\n    {\n        author: integrationMessageUser1,\n        text: \"Yeah, I did, but it didn't help.\"\n    },\n    {\n        author: integrationMessageUser2,\n        text: \"Sometimes, outdated software or malware can cause issues.\"\n    },\n    {\n        author: integrationMessageUser1,\n        text: \"Okay, I'll try that. Thanks for the help!\"\n    }\n];\n\nexport let botMessagedata : any = [\n    {\n        author: botMessage,\n        text: \"Hello Sam, I am a virtual assitant.\"\n    },\n    {\n        author: botMessage,\n        text: \"Which room are you looking to decorate?\"\n    }\n];\n\nexport let botData : any = [\n    {\n        text: \"Bedroom\",\n        reply: \"For a bedroom, we can create a serene and calm atmosphere with neutral colors and comfortable bedding.\",\n        suggestions: [\"Garden\", \"Balcony\"]\n    },\n    {\n        text: \"Kitchen\",\n        reply: \"For a kitchen, we can go for a modern, sleek look with stainless steel appliances and minimalist cabinetry. </br> <p>Any other home decor suggestions you'd like to explore ?</p>\",\n        suggestions: [\"Wall art\", \"Plants\"]\n    }\n    \n];\n\nexport let chatSuggestions : any = [\"Bedroom\", \"Kitchen\"];\n\nexport let walterMessagedata : any = [\n    {\n        author: walterMessageUser1,\n        text: \"Hey Charlie, have you thought about where you want to go for our vacation?\"\n    },\n    {\n        author: walterMessageUser2,\n        text: \"Hi Sam! I was thinking about going to Bali. I've heard the beaches are beautiful and there's so much to do.\"\n    },\n    {\n        author: walterMessageUser1,\n        text: \"Bali sounds amazing! I've always wanted to try surfing. Do you know any good places to stay?\"\n    },\n    {\n        author: walterMessageUser2,\n        text: \"Yes, I found a few nice resorts and some budget-friendly options too. I'll send you the links.\"\n    },\n    {\n        author: walterMessageUser1,\n        text: \"Great! Let's finalize our plans this weekend.\"\n    }\n];\n\nexport let lauraMessagedata : any = [\n    {\n        author: lauraMessageUser1,\n        text: \"Hey Sam, can we have a quick meeting tomorrow morning to discuss the new project?\"\n    },\n    {\n        author: lauraMessageUser2,\n        text: \"Sure, what time works best for you?\"\n    },\n    {\n        author: lauraMessageUser1,\n        text: \"10 AM?\"\n    },\n    {\n        author: lauraMessageUser2,\n        text: \"10 AM works for me.\"\n    }\n];\n\nexport let teamsMessagedate : any = [\n    {\n        author: teamsMessageUser1,\n        text: \"Hi, everyone!, welcome to the new web team\"\n    },\n    {\n        author: teamsMessageUser2,\n        text: \"Hi Sir, excited about the new team.\"\n    },\n    {\n        author: {\n            user: 'Margaret Peacock',\n            id: 'user3'\n        },\n        text: \"Good morning ! suprised with the new team message.\"\n    },\n    {\n        author: communityMessageUser2,\n        text: \"Hi all, what's the purpose of this new team formation ?\"\n    },\n    {\n        author: teamsMessageUser1,\n        text: \"Charlie, we are planning for a new portal launch hence, grouping all in one place.\"\n    }\n];\n\nexport let suyamaMessagedata : any = [\n    { \n        author: {\n            id: 'user4',\n            user: 'Reena'\n        },\n        text: \"Hi, are you available ?\"\n    }\n];\n\nexport let templateMessagedata : any = [\n    {\n        text: \"Hello! I'm the Order tracking bot. how can I help you today?\",\n        suggestions: [\"Track an order\", \"Cancel an order\"]\n    },\n    {\n        text: \"Track an order\",\n        reply: 'Please select the order you want to track.',\n        suggestions: [\"Order #67890\", \"Order #53461\"]\n    },\n    {\n        text: \"Order #67890\",\n        reply: \"Fetching details for order <b>#67890</b> </br></br> Your order is currently being processed and will ship in 2-3 days.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Order #53461\",\n        reply: \"Fetching details for order <b>#53461</b> </br></br> Your order is currently being processed and will ship in 2-3 days.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Order #87890\",\n        reply: \"Your order <b>#87890</b> has been cancelled.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Order #90910\",\n        reply: \"Your order <b>#90910</b> has been cancelled.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Cancel an order\",\n        reply: 'Pick the order you need to cancel.',\n        suggestions: [\"Order #87890\", \"Order #90910\"]\n    },\n    {\n        text: \"Back to main menu\",\n        reply: \"You have returned to the main menu. What would you like to do next?\",\n        suggestions: [\"Track an order\", \"Cancel an order\"]\n    },\n    {\n        text: \"Need help with something else\",\n        reply: \"Please hold while we connect you to a support agent. You can chat with them for any additional queries.\",\n        suggestions: []\n    }\n];\n\nexport let defaultChatSuggestions : any = [ \"Awesome!\", \"What kind of painting ?\" ];\n\nexport let integrationListTemplateData : any = [\n    {\n        id: '01',\n        title: 'Albert',\n        imgSrc: 'andrew', message: \"Okay, I'll try that. Thanks for the help!\"\n    },\n    {\n        id: '02',\n        title: 'Bot',\n        imgSrc: 'bot', message: 'Personal decor assistant'\n    },\n    {\n        id: '03',\n        title: 'Charlie',\n        imgSrc: 'charlie', message: \"Great! Let's finalize our plans this weekend.\"\n    },\n    {\n        id: '04',\n        title: 'Laura',\n        imgSrc: 'laura', message: '10 AM works for me.'\n    },\n    {\n        id: '05',\n        title: 'New Dev Team',\n        imgSrc: 'calendar', message: 'User added'\n    },\n    {\n        id: '06',\n        title: 'Reena',\n        imgSrc: 'reena', message: 'You: Hi, are you available ?'\n    },\n];\n\n","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div class=\"template-chatui\"> \n        <div id=\"chatTemplate\"></div>\n    </div>\n</div>\n\n<script id=\"emptyChatTemplate\" type=\"text/x-jsrender\">\n    <div class=\"emptychat-content\">\n        <h3><span class=\"e-icons e-comment-show\"></span></h3>\n        <div class=\"emptyChatText\" style=\"font-size: 16px;\">Just a second, we're preparing your chat...</div>\n    </div>\n</script>\n\n<style>\n    .template-chatui {\n        height: 500px;\n        width: 40%;\n        margin: 0 auto;\n    }\n\n    .template-chatui .chat-bot {\n        background-image: url('//npmci.syncfusion.com/development/demos/src/chat-ui/images/bot.png');\n        background-color: unset;\n    }\n\n    .template-chatui .emptyChatText {\n        font-size: 16px;\n        font-style: italic;\n    }\n\n    .template-chatui .emptychat-content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        text-align: center;\n        align-items: center;\n        padding: 10px;\n    }\n\n    .template-chatui .e-right .message-items {\n        border-radius: 16px 16px 2px 16px;\n    }\n\n    .template-chatui .e-left .message-items {\n        border-radius: 16px 16px 16px 2px;\n    }\n\n    .template-chatui .message-user {\n        height: 30px;\n        width: 30px;\n        margin-right: 3px;\n    }\n\n    .template-chatui .e-left .message-template,\n    .template-chatui .e-right .message-template {\n        display: flex;\n        align-items: flex-end;\n    }\n\n    .template-chatui .message-items.e-card {\n        line-height: 20px;\n        box-shadow: none;\n        background: none;\n    }\n\n    body[class*=\"material3\"] .template-chatui .message-items.e-card {\n        border: 1px solid rgb(230, 227, 227);\n    }\n\n    .template-chatui .message-items.e-card:hover {\n        background-color: unset;\n    }\n\n    .template-chatui .e-left .message-template {\n        flex-direction: row;\n        margin-top: 10px;\n    }\n\n    .template-chatui .e-right .message-template {\n        flex-direction: column;\n        padding: 5px;\n    }\n\n    .template-chatui .message-text {\n        margin: 5px;\n        padding: 4px;\n        font-size: 14px;\n    }\n\n    .template-chatui .message-suggestions {\n        margin: 10px 30px;\n        display: flex;\n        gap: 5px;\n    }\n\n    .template-chatui .suggestion-button {\n        border-radius: 8px;\n        cursor: pointer;\n        padding: 5px 12px;\n        font-size: 13px;\n    }\n\n    @media only screen and (max-width: 850px) {\n        .template-chatui {\n            width: 70%;\n        }\n        .template-chatui .message-suggestions {\n            flex-direction: column;\n            width: 80%;\n        }\n        .template-chatui .message-suggestions .suggestion-button {\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n    }\n</style>\n\n\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-interactive-chat\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\n\nimport { ChatUI } from '@syncfusion/ej2-interactive-chat';\nimport { templateMessagedata } from './messageData';\n\n/**\n * Template sample\n */\n\n    \n\n    let templateChatUI = new ChatUI({\n        headerText: 'Order Assistant',\n        headerIconCss: 'chat-bot',\n        showTimeBreak: true,\n        showFooter: false,\n        user: { id: 'admin', user: 'Admin', avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/bot.png' },\n        emptyChatTemplate: '#emptyChatTemplate',\n        messageTemplate: (context: any) => messageTemplate(context),\n        timeBreakTemplate: (context: any) => timeBreakTemplate(context),\n        messageSend: () => {\n            setTimeout(() => {\n                let defaultResponse = \"Unfortunately, I don't have information on that. Use any real-time data streaming service to provide chat updates.\";\n                let message = {\n                    author: { id: 'bot', user: 'Bot', avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/bot.png' },\n                    text: defaultResponse\n                }\n                templateChatUI.addMessage(message);\n            }, 500);\n        },\n    });\n\n    templateChatUI.appendTo('#chatTemplate');\n\n    function messageTemplate(context: any): string {\n        let isAdmin = context.message.author.id === 'admin';\n        let userImage = !isAdmin ? `<img class=\"message-user\" src=\"${context.message.author.avatarUrl}\" alt=\"${context.message.author.user}\">` : '';\n        let suggestions = context.message.suggestions && context.message.suggestions.length > 0 && !isAdmin ?\n            `<div class=\"message-suggestions\">${context.message.suggestions.map((suggestion: any) => `<button class=\"suggestion-button e-btn e-primary e-outline\">${suggestion}</button>`).join('')}</div>` : '';\n        return `<div class=\"message-wrapper\">\n                <div class=\"message-template\">\n                    ${userImage}\n                    <div class=\"message-items e-card\">\n                        <div class=\"message-text\">${context.message.text}</div>\n                    </div>\n                </div>\n                <div class=\"suggestion-container\">\n                    ${suggestions}\n                </div>\n            </div>`;\n    }\n\n    function timeBreakTemplate(context: any): string {\n        let dateText = context.messageDate;\n        if (context.messageDate.toDateString() === new Date().toDateString()) {\n            dateText = 'Today';\n        }\n        return `<div class=\"timebreak-template\">${dateText}</div>`;\n    }\n\n\n    function bindClickAction(): void {\n        templateChatUI.element.querySelectorAll('.suggestion-button').forEach(suggestion => {\n            suggestion.addEventListener('click', () => handleSuggestionClick(suggestion as HTMLElement));\n        });\n    }\n\n    function handleSuggestionClick(suggestion: HTMLElement): void {\n        let message = templateMessagedata.find((message: { text: string; }) => message.text === suggestion.innerText);\n        if (message) {\n            templateChatUI.addMessage(message.text);\n            setTimeout(() => {\n                let messageModel = {\n                    author: { id: 'bot', user: 'Bot', avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/bot.png' },\n                    text: message.reply,\n                    suggestions: message.suggestions\n                }\n                templateChatUI.addMessage(messageModel);\n                bindClickAction();\n                if (message.suggestions.length === 0) { templateChatUI.showFooter = true; }\n            }, 500);\n            suggestion.parentElement.innerHTML = '';\n        }\n    }\n\n    // Initial bot message with suggestions\n    setTimeout(() => {\n        let message = {\n            author: { id: 'bot', user: 'Bot', avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/bot.png' },\n            text: templateMessagedata[0].text,\n            suggestions: templateMessagedata[0].suggestions\n        }\n        templateChatUI.addMessage(message);\n        bindClickAction();\n    }, 1500);\n"}