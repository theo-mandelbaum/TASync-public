{"messageData.ts":"let communityMessageAdmin = {\n    user: 'Alice',\n    id: 'admin'\n};\n\nlet communityMessageUser1 = {\n    user: 'Michale Suyama',\n    id: 'user1',\n    avatarBgColor: \"#87cefa\"\n};\n\nlet communityMessageUser2 = {\n    user: 'Charlie',\n    id: 'user2',\n    avatarUrl: \"//npmci.syncfusion.com/development/demos/src/chat-ui/images/charlie.png\",\n};\n\nlet communityMessageUser3 = {\n    user: 'Janet',\n    id: 'user3',\n    avatarBgColor: \"#dec287\",\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/janet.png'\n};\n\nlet chatMessageUser1 = {\n    user: 'Albert',\n    id: 'user1',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/andrew.png'\n};\n\nlet chatMessageUser2 = {\n    user: 'Reena',\n    id: 'user2',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/reena.png'\n};\n\nlet integrationMessageUser1 = {\n    user: 'Reena',\n    id: 'user1',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/reena.png'\n};\n\nlet integrationMessageUser2 = {\n    user: 'Albert',\n    id: 'user2',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/andrew.png'\n};\n\nlet botMessage = {\n    user: 'Bot',\n    id: 'bot',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/bot.png'\n};\n\nlet walterMessageUser1 = {\n    user: 'Sam',\n    id: 'user2',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/laura.png'\n};\n\nlet walterMessageUser2 = {\n    user: 'Charlie',\n    id: 'user5',\n    avatarUrl: \"//npmci.syncfusion.com/development/demos/src/chat-ui/images/charlie.png\",\n};\n\nlet lauraMessageUser1 = {\n    user: 'Laura Callahan',\n    id: 'user1',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/laura.png'\n};\n\nlet lauraMessageUser2 = {\n    user: 'Sam',\n    id: 'user3',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/laura.png'\n};\n\nlet teamsMessageUser1 = {\n    user: 'Admin',\n    id: 'team'\n};\n\nlet teamsMessageUser2= {\n    user: 'Janet',\n    id: 'user2',\n    avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/janet.png'\n};\n\nexport let communityMessagedata : any = [\n    {\n        author: communityMessageAdmin,\n        text: 'Hey Michale, Charlie! Seen the latest posts in the Design Community? Amazing projects!',\n        timeStamp: new Date(\"October 25, 2024 07:30\")\n    },\n    {\n        author: communityMessageUser1,\n        text: 'Hi Alice! Yes, Dana’s new UI design is incredible.',\n        timeStamp: new Date(\"October 25, 2024 08:00\")\n    },\n    {\n        author: communityMessageUser2,\n        text: 'Hey! I loved Dana’s use of color. Frank’s typography guide was great too.',\n        timeStamp: new Date(\"October 25, 2024 11:00\")\n    },\n    {\n        author: communityMessageAdmin,\n        text: 'Absolutely! Any new community events planned?',\n        timeStamp: new Date(\"October 26, 2024 11:00\")\n    },\n    {\n        author: communityMessageUser1,\n        text: 'We should organize a design challenge.',\n        timeStamp: new Date(\"October 26, 2024 12:15\")\n    },\n    {\n        author: communityMessageUser3,\n        text: 'I am excited to see the new projects.',\n        timeStamp: new Date(\"October 26, 2024 12:17\")\n    },\n    {\n        author: communityMessageUser2,\n        text: 'Great idea! Let’s discuss it in the next meeting.',\n        timeStamp: new Date(\"October 26, 2024 12:30\")\n    },\n    {\n        author: communityMessageAdmin,\n        text: 'Sounds good! This community is so inspiring.',\n        timeStamp: new Date()\n    },\n    {\n        author: communityMessageUser1,\n        text: 'Agreed! Excited to see everyone’s ideas.',\n        timeStamp: new Date()\n    },\n    {\n        author: communityMessageUser2,\n        text: 'I am looking forward to the design challenge.',\n        timeStamp: new Date()\n    }\n];\n\nexport let chatMessagedata : any = [\n    {\n        author: chatMessageUser1,\n        text: \"Hi there! How's it going?\"\n    },\n    {\n        author: chatMessageUser2,\n        text: \"Hey! I'm doing well, thanks. How about you?\"\n    },\n    {\n        author: chatMessageUser1,\n        text: \"Mostly the usual stuff. I did start a new hobby - painting!\"\n    },\n];\n\nexport let integrationMessagedata : any = [\n    {\n        author: integrationMessageUser1,\n        text: \"Hey, I'm having trouble with my computer. It keeps freezing.\"\n    },\n    {\n        author: integrationMessageUser2,\n        text: \"Oh, that's annoying. Have you tried restarting it?\"\n    },\n    {\n        author: integrationMessageUser1,\n        text: \"Yeah, I did, but it didn't help.\"\n    },\n    {\n        author: integrationMessageUser2,\n        text: \"Sometimes, outdated software or malware can cause issues.\"\n    },\n    {\n        author: integrationMessageUser1,\n        text: \"Okay, I'll try that. Thanks for the help!\"\n    }\n];\n\nexport let botMessagedata : any = [\n    {\n        author: botMessage,\n        text: \"Hello Sam, I am a virtual assitant.\"\n    },\n    {\n        author: botMessage,\n        text: \"Which room are you looking to decorate?\"\n    }\n];\n\nexport let botData : any = [\n    {\n        text: \"Bedroom\",\n        reply: \"For a bedroom, we can create a serene and calm atmosphere with neutral colors and comfortable bedding.\",\n        suggestions: [\"Garden\", \"Balcony\"]\n    },\n    {\n        text: \"Kitchen\",\n        reply: \"For a kitchen, we can go for a modern, sleek look with stainless steel appliances and minimalist cabinetry. </br> <p>Any other home decor suggestions you'd like to explore ?</p>\",\n        suggestions: [\"Wall art\", \"Plants\"]\n    }\n    \n];\n\nexport let chatSuggestions : any = [\"Bedroom\", \"Kitchen\"];\n\nexport let walterMessagedata : any = [\n    {\n        author: walterMessageUser1,\n        text: \"Hey Charlie, have you thought about where you want to go for our vacation?\"\n    },\n    {\n        author: walterMessageUser2,\n        text: \"Hi Sam! I was thinking about going to Bali. I've heard the beaches are beautiful and there's so much to do.\"\n    },\n    {\n        author: walterMessageUser1,\n        text: \"Bali sounds amazing! I've always wanted to try surfing. Do you know any good places to stay?\"\n    },\n    {\n        author: walterMessageUser2,\n        text: \"Yes, I found a few nice resorts and some budget-friendly options too. I'll send you the links.\"\n    },\n    {\n        author: walterMessageUser1,\n        text: \"Great! Let's finalize our plans this weekend.\"\n    }\n];\n\nexport let lauraMessagedata : any = [\n    {\n        author: lauraMessageUser1,\n        text: \"Hey Sam, can we have a quick meeting tomorrow morning to discuss the new project?\"\n    },\n    {\n        author: lauraMessageUser2,\n        text: \"Sure, what time works best for you?\"\n    },\n    {\n        author: lauraMessageUser1,\n        text: \"10 AM?\"\n    },\n    {\n        author: lauraMessageUser2,\n        text: \"10 AM works for me.\"\n    }\n];\n\nexport let teamsMessagedate : any = [\n    {\n        author: teamsMessageUser1,\n        text: \"Hi, everyone!, welcome to the new web team\"\n    },\n    {\n        author: teamsMessageUser2,\n        text: \"Hi Sir, excited about the new team.\"\n    },\n    {\n        author: {\n            user: 'Margaret Peacock',\n            id: 'user3'\n        },\n        text: \"Good morning ! suprised with the new team message.\"\n    },\n    {\n        author: communityMessageUser2,\n        text: \"Hi all, what's the purpose of this new team formation ?\"\n    },\n    {\n        author: teamsMessageUser1,\n        text: \"Charlie, we are planning for a new portal launch hence, grouping all in one place.\"\n    }\n];\n\nexport let suyamaMessagedata : any = [\n    { \n        author: {\n            id: 'user4',\n            user: 'Reena'\n        },\n        text: \"Hi, are you available ?\"\n    }\n];\n\nexport let templateMessagedata : any = [\n    {\n        text: \"Hello! I'm the Order tracking bot. how can I help you today?\",\n        suggestions: [\"Track an order\", \"Cancel an order\"]\n    },\n    {\n        text: \"Track an order\",\n        reply: 'Please select the order you want to track.',\n        suggestions: [\"Order #67890\", \"Order #53461\"]\n    },\n    {\n        text: \"Order #67890\",\n        reply: \"Fetching details for order <b>#67890</b> </br></br> Your order is currently being processed and will ship in 2-3 days.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Order #53461\",\n        reply: \"Fetching details for order <b>#53461</b> </br></br> Your order is currently being processed and will ship in 2-3 days.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Order #87890\",\n        reply: \"Your order <b>#87890</b> has been cancelled.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Order #90910\",\n        reply: \"Your order <b>#90910</b> has been cancelled.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Cancel an order\",\n        reply: 'Pick the order you need to cancel.',\n        suggestions: [\"Order #87890\", \"Order #90910\"]\n    },\n    {\n        text: \"Back to main menu\",\n        reply: \"You have returned to the main menu. What would you like to do next?\",\n        suggestions: [\"Track an order\", \"Cancel an order\"]\n    },\n    {\n        text: \"Need help with something else\",\n        reply: \"Please hold while we connect you to a support agent. You can chat with them for any additional queries.\",\n        suggestions: []\n    }\n];\n\nexport let defaultChatSuggestions : any = [ \"Awesome!\", \"What kind of painting ?\" ];\n\nexport let integrationListTemplateData : any = [\n    {\n        id: '01',\n        title: 'Albert',\n        imgSrc: 'andrew', message: \"Okay, I'll try that. Thanks for the help!\"\n    },\n    {\n        id: '02',\n        title: 'Bot',\n        imgSrc: 'bot', message: 'Personal decor assistant'\n    },\n    {\n        id: '03',\n        title: 'Charlie',\n        imgSrc: 'charlie', message: \"Great! Let's finalize our plans this weekend.\"\n    },\n    {\n        id: '04',\n        title: 'Laura',\n        imgSrc: 'laura', message: '10 AM works for me.'\n    },\n    {\n        id: '05',\n        title: 'New Dev Team',\n        imgSrc: 'calendar', message: 'User added'\n    },\n    {\n        id: '06',\n        title: 'Reena',\n        imgSrc: 'reena', message: 'You: Hi, are you available ?'\n    },\n];\n\n","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section chat-integration\">\n    <div class=\"integration-chatui\">\n        <div id=\"splitter\">\n            <div>\n                <div class=\"chat-options-container\">\n                    <button id=\"activitybtn\" class=\"chat_options\"><span>Activity</span></button>\n                    <button id=\"chatbtn\" class=\"chat_options chat_interactable\" style=\"border-left: 2px solid #0f6cbd;\"><span>Chat</span></button>\n                    <button id=\"calendarbtn\" class=\"chat_options\"><span>Calendar</span></button>\n                    <button id=\"teamsbtn\" class=\"chat_options\"><span>Teams</span></button>\n                </div>\n                <div id=\"toggle-chat-list\" class=\"toggle-chat-listview e-card\">\n                    <div id=\"listview_template\" tabindex=\"1\"></div>\n                </div>\n            </div>\n            <div>\n                <div id=\"integration-chat\" style=\"border: none;\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script id=\"emptyChatTemplate\" type=\"text/x-jsrender\">\n    <div class=\"emptychat-content\">\n        <h3><span class=\"e-icons e-comment-show\"></span></h3>\n        <div class=\"emptyChatText\" style=\"font-size: 16px;\">No conversations yet</div>\n    </div>\n</script>\n\n<style>\n    .integration-chatui {\n        width: 85%;\n        height: 600px;\n        margin: 0 auto;\n    }\n    .integration-chatui .chat-leftContent {\n        display: flex;\n    }\n    .integration-chatui .toggle-chat-listview.e-card:hover {\n        background: none;\n    }\n\n    .integration-chatui .toggle-chat-listview {\n        border: none;\n        justify-content: flex-start;\n        border-radius: unset;\n        line-height: 20px;\n        box-shadow: none;\n    }\n\n    .integration-chatui .chat-options-container {\n        display: flex;\n        flex-direction: column;\n        background: whitesmoke;\n        overflow: hidden;\n    }\n\n    .integration-chatui .chat_options {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        border: none;\n        border-radius: 0;\n        pointer-events: none;\n    }\n\n    .integration-chatui .chat_options .e-icon-top,\n    .integration-chatui .e-headertext {\n        font-size: 20px !important;\n    }\n\n    .integration-chatui .e-list-header {\n        font-size: 25px;\n        margin: 8px 0 8px 5px;\n        border-bottom: 0;\n        background: unset;\n    }\n\n    .integration-chatui .e-list-container li {\n        border: none;\n    }\n\n    .integration-chatui .e-list-container {\n        border-top: 1px solid #d0d0d0;\n    }\n\n    .integration-chatui .e-splitter .e-split-bar.e-split-bar-horizontal:not(.e-resizable-split-bar), \n    .integration-chatui .e-splitter .e-split-bar-horizontal.e-last-bar,\n    .integration-chatui .e-list-template li {\n        margin: 0;\n        border-radius: 0;\n    }\n\n    .integration-chatui .chat_message {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    .integration-chatui .e-header-icon {\n        background-color: unset;\n    }\n\n    .integration-chatui .chat_user1_avatar {\n        background-image: url('//npmci.syncfusion.com/development/demos/src/chat-ui/images/andrew.png');\n    }\n\n    .integration-chatui .chat_user2_avatar {\n        background-image: url('//npmci.syncfusion.com/development/demos/src/chat-ui/images/charlie.png');\n    }\n\n    .integration-chatui .chat_user3_avatar {\n        background-image: url('//npmci.syncfusion.com/development/demos/src/chat-ui/images/laura.png');\n    }\n\n    .integration-chatui .chat_user4_avatar {\n        background-image: url('//npmci.syncfusion.com/development/demos/src/chat-ui/images/reena.png');\n    }\n\n    .integration-chatui .chat_team_avatar {\n        background-image: url('//npmci.syncfusion.com/development/demos/src/chat-ui/images/calendar.png');\n    }\n\n    .integration-chatui .chat_bot_avatar {\n        background-image: url('//npmci.syncfusion.com/development/demos/src/chat-ui/images/bot.png');\n    }\n\n    .integration-chatui #listview_template {\n        border-right: 0;\n        border-bottom: 0;\n        border-top: 0;\n        border-radius: 0;\n        height: 100%;\n    }\n\n    @font-face {\n        font-family: 'Chatdemo';\n        src:\n        url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj1tSfUAAAEoAAAAVmNtYXDnE+dkAAABlAAAADxnbHlmqS+qEQAAAdwAAAMcaGVhZCnJluEAAADQAAAANmhoZWEIUQQGAAAArAAAACRobXR4FAAAAAAAAYAAAAAUbG9jYQGCAkYAAAHQAAAADG1heHABEQCsAAABCAAAACBuYW1lChZRfQAABPgAAAIxcG9zdNaOJHIAAAcsAAAAbAABAAAEAAAAAFwEAAAAAAAD9AABAAAAAAAAAAAAAAAAAAAABQABAAAAAQAAt5KxUl8PPPUACwQAAAAAAONbqPgAAAAA41uo+AAAAAAD9AP0AAAACAACAAAAAAAAAAEAAAAFAKAAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAwQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAEAAAABAAAAAQAAAAAAAACAAAAAwAAABQAAwABAAAAFAAEACgAAAAEAAQAAQAA5wP//wAA5wD//wAAAAEABAAAAAEAAgADAAQAAAAAAKYAuADcAY4AAgAAAAAD6QP0ADIAjAAAAQcfCzM/BBcHLxo1NycPBhUfHjM/Bi8IKwEPAy8IPwM1LwkjDwEBWUgIJh8dIxsdICImGQcEBQUPFFW9cB4sLScsMCMkJiglH0swHhMSCREPDAYEBAQCAoQVC20pCAMBAQICAwQFBQcHBxETExUWIClOLC8uKyknJCIfHSYfHxgFCAkHigQDAQECBAUH3gUFBgYFBgU3NQ8cJiMgJR4jFT4CAgEBAQIDlQUDCAgICAcGAu2PDzkoIiUaGxsaGxADAQEFCzR1lAgQExQZHxcbHiEhHVE5JhwcDx0fHxAQDxAQEBB3QAlgKAoGBgcSExISExISERIRIiEgHx0oL1MpKCQgHBkWEg8NDwoIBAIEBrUHCAgJCAcHBYkDAgEBAiMfChQeHx4mIy0ffAUFBQYFBQUF3QcDBAMBAgMAAAABAAAAAAP0AzMABwAANyE1FxEHNSEMAwTk5Pz8zO6yAfCy7gACAAAAAAP0AzMACQATAAABFTM3EScjFSERAyE1FzMRIwc1IQKyenR0ev2uVAL6pkhIpv0GAuOvWv7hWq8Byf3puYQB/oS5AAABAAAAAAPzA/MAnwAAEw8JHyozPxAvDysBDwojLxc1PwovDiMPBYkDUgkIBgYEAwICAQECAwQFBgcICQkLCwwNDg4PEBAjJigoFBUUFRUVFRQVFRUVFRUUFRQUFBQUFBMTExMSElEIBQMDAwEBAQEBAQMDAwUFVAYGBwYHBwcHBwgHBw8MWAsMCwsWFhYVFRUVFBUUFBMUFBISERAPDQsKCQYEAgIFB1AFAwMDAQEBAQEBAwMDBVkGBgcGBwcHBw4HBwYGBQPhA1ESExITExQTFBQUFBUUFRUUFRUVFRUVFBUVFRQUKScmJBEQDw8NDQ0LCwkJCAcGBQQEAgEBAgQEBQcICVEJBwYHBwcHCAcHBwcGBgYGVAUFBAMCAgECAgIHCU4EBAICAwIFBggKDA0OEBESExQUFBQUFRQVFRUVFhYXFxdaBwYHBwcHBwgHBwYHBgZdBQUEAwICAQECAgIEAwAAAAAAEgDeAAEAAAAAAAAAAQAAAAEAAAAAAAEACAABAAEAAAAAAAIABwAJAAEAAAAAAAMACAAQAAEAAAAAAAQACAAYAAEAAAAAAAUACwAgAAEAAAAAAAYACAArAAEAAAAAAAoALAAzAAEAAAAAAAsAEgBfAAMAAQQJAAAAAgBxAAMAAQQJAAEAEABzAAMAAQQJAAIADgCDAAMAAQQJAAMAEACRAAMAAQQJAAQAEAChAAMAAQQJAAUAFgCxAAMAAQQJAAYAEADHAAMAAQQJAAoAWADXAAMAAQQJAAsAJAEvIENoYXRkZW1vUmVndWxhckNoYXRkZW1vQ2hhdGRlbW9WZXJzaW9uIDEuMENoYXRkZW1vRm9udCBnZW5lcmF0ZWQgdXNpbmcgU3luY2Z1c2lvbiBNZXRybyBTdHVkaW93d3cuc3luY2Z1c2lvbi5jb20AIABDAGgAYQB0AGQAZQBtAG8AUgBlAGcAdQBsAGEAcgBDAGgAYQB0AGQAZQBtAG8AQwBoAGEAdABkAGUAbQBvAFYAZQByAHMAaQBvAG4AIAAxAC4AMABDAGgAYQB0AGQAZQBtAG8ARgBvAG4AdAAgAGcAZQBuAGUAcgBhAHQAZQBkACAAdQBzAGkAbgBnACAAUwB5AG4AYwBmAHUAcwBpAG8AbgAgAE0AZQB0AHIAbwAgAFMAdAB1AGQAaQBvAHcAdwB3AC4AcwB5AG4AYwBmAHUAcwBpAG8AbgAuAGMAbwBtAAAAAAIAAAAAAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQECAQMBBAEFAQYADnBob25lLWNhbGxzLXdmD3ZpZGVvLXJlY29yZC0wMw92aWRlby1yZWNvcmQtMDQNdGVsZXBob25lLS0wMwAA) format('truetype');\n        font-weight: normal;\n        font-style: normal;\n    }\n\n    [class^=\"sf-icon-\"], [class*=\" sf-icon-\"] {\n        font-family: 'Chatdemo' !important;\n    }\n\n    .integration-chatui .sf-icon-phone-call:before { content: \"\\e703\"; }\n\n    body[class*=\"-dark\"] .integration-chatui .chat-options-container,\n    body[class*=\"high\"] .integration-chatui .chat-options-container {\n        background: #000;\n    }\n\n    @media only screen and (max-width: 1200px) {\n        .integration-chatui {\n            height: 600px;\n            width: 100%;\n        }\n        .integration-chatui .chat_options .e-btn-icon + span {\n            display: none;\n        }\n        .chat-integration.control-section {\n            height: 650px;\n        }\n        .integration-chatui .toggle-chat-listview {\n            position: absolute;\n            top: 0;\n            width: 300px;\n            left: 46px;\n            height: 100%;\n            z-index: 2000;\n            border: none;\n            border-radius: unset;\n            display: none;\n        }\n        .integration-chatui .chat_options.chat_interactable {\n            pointer-events: auto;\n        }\n        .integration-chatui .toggle-chat-listview.e-card:hover {\n            background: #f6f6f6;\n        }\n    }\n</style>\n\n\n\n</div></body></html>","package.json":"{\n  \"@syncfusion/ej2-base\": \"*\",\n  \"@syncfusion/ej2-inputs\": \"*\",\n  \"@syncfusion/ej2-navigations\": \"*\",\n  \"@syncfusion/ej2-notifications\": \"*\",\n  \"markdown-spellcheck\": \"^1.3.1\",\n  \"@syncfusion/ej2-interactive-chat\": \"*\",\n  \"@syncfusion/ej2-layouts\": \"*\",\n  \"@syncfusion/ej2-buttons\": \"*\",\n  \"@syncfusion/ej2-data\": \"*\",\n  \"@syncfusion/ej2-popups\": \"*\",\n  \"@syncfusion/ej2-lists\": \"*\",\n  \"@types/crossroads\": \"0.0.28\",\n  \"@types/signals\": \"0.0.16\",\n  \"@types/moment-timezone\": \"^0.5.3\",\n  \"@types/hasher\": \"0.0.27\",\n  \"fuse.js\": \"^3.2.0\",\n  \"marked\": \"5.1.2\",\n  \"codemirror\": \"^5.37.0\",\n  \"crossroads\": \"^0.12.2\",\n  \"@types/marked\": \"5.0.1\",\n  \"@types/codemirror\": \"0.0.56\",\n  \"@types/es6-promise\": \"0.0.28\",\n  \"hasher\": \"^1.2.0\",\n  \"moment-timezone\": \"^0.5.14\"\n}","index.ts":"{{ripple}}\n\nimport { ChatUI, MessageSendEventArgs } from '@syncfusion/ej2-interactive-chat';\nimport { Splitter } from '@syncfusion/ej2-layouts';\nimport { ListView } from '@syncfusion/ej2-lists';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { integrationMessagedata, botMessagedata, lauraMessagedata, suyamaMessagedata, teamsMessagedate, walterMessagedata, integrationListTemplateData, botData, chatSuggestions } from './messageData';\n\n/**\n * Chat-Integration sample\n */\n\n    \n\n    let chatMessages: { [key: string]: any[] } = {\n        user1: integrationMessagedata,\n        admin: botMessagedata,\n        user2: walterMessagedata,\n        user3: lauraMessagedata,\n        team: teamsMessagedate,\n        user4: suyamaMessagedata\n    }\n\n    let chatUiInst = new ChatUI({\n        headerText: 'Albert',\n        headerIconCss: 'chat_user1_avatar',\n        messages: chatMessages.user1,\n        user: { id: 'user1', user: 'Albert', avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/andrew.png' },\n        headerToolbar: {\n            items: [\n                {\n                    iconCss: 'sf-icon-phone-call',\n                    align: 'Right',\n                    tooltip: 'Audio call'\n                }\n            ]\n        },\n        messageSend: (args: MessageSendEventArgs) => {\n            chatUiInst.suggestions = [];\n            setTimeout(() => {\n              if(args.message.author.id === 'admin') {\n                let foundMessage = botData.find((message: { text: string; }) => message.text === args.message.text);\n                let defaultResponse = 'Use any real-time data streaming service to provide chat updates.';\n                let message = {\n                    author: { id: 'bot', user: 'Bot', avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/bot.png' },\n                    text: foundMessage?.reply || defaultResponse,\n                }\n                chatUiInst.addMessage(message);\n                chatUiInst.suggestions = foundMessage?.suggestions || []\n              }\n            }, 500);\n        }\n    });\n    chatUiInst.appendTo('#integration-chat');\n\n    new Splitter({\n        paneSettings: [{ size: 'auto', resizable: false, cssClass:\"chat-leftContent\" }, { size: '80%', resizable: false, cssClass: \"chat-rightContent\" }],\n    }, '#splitter');\n\n    let template: string = '<div ${if(category!==null)} class=\"clearfix desc e-list-wrapper e-list-multi-line e-list-avatar\" ${else}' +\n        'class=\"clearfix e-list-wrapper e-list-multi-line e-list-avatar\" ${/if}> ${if(imgSrc!==\"\")}' +\n        '<img class=\"e-avatar\" src=\"//npmci.syncfusion.com/development/demos/src/chat-ui/images/${imgSrc}.png\" alt=\"image\" style=\"border-radius: 50%;\"/> ' +\n        '${/if} <span class=\"e-list-item-header\">${title} </span>' +\n        '${if(message!==\"\")} <div class=\"chat_message\" style=\"font-size: 12px;\">' +\n        '${message} </div> ${/if} </div>';\n\n    let templateObj = new ListView({\n        dataSource: integrationListTemplateData,\n        template: template,\n        headerTitle: 'Chats',\n        cssClass: 'e-list-template',\n        showHeader: true,\n        actionComplete: () => {\n            templateObj.selectItem(integrationListTemplateData[0]);\n        },\n        select: (args: { index: number }) => {\n            chatMessages[chatUiInst.user.id] = chatUiInst.messages;\n            chatUiInst.suggestions = [];\n            setupChatUser(args.index);\n            if(args.index >=0 ) toggleListView();\n        },\n    });\n    templateObj.appendTo('#listview_template');\n\n    function setupChatUser(index: number): void {\n        let userSettings = [\n            { headerText: 'Albert', headerIconCss: 'chat_user1_avatar', user: { id: 'user1', user: 'Albert', avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/andrew.png' }, messages: chatMessages.user1 },\n            { headerText: 'Decor bot', headerIconCss: 'chat_bot_avatar', user: { id: 'admin', user: 'Admin', avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/bot.png' }, messages: chatMessages.admin, suggestions: chatSuggestions },\n            { headerText: 'Charlie', headerIconCss: 'chat_user2_avatar', user: { id: 'user2', user: 'Charlie', avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/charlie.png' }, messages: chatMessages.user2 },\n            { headerText: 'Laura Callahan', headerIconCss: 'chat_user3_avatar', user: { id: 'user3', user: 'Laura', avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/laura.png' }, messages: chatMessages.user3 },\n            { headerText: 'New Dev Team', headerIconCss: 'chat_team_avatar', user: { id: 'team', user: 'Admin', avatarUrl: '//npmci.syncfusion.com/development/demos/src/chat-ui/images/calendar.png' }, messages: chatMessages.team },\n            { headerText: 'Reena', headerIconCss: 'chat_user4_avatar', user: { id: 'user4', user: 'Albert' }, messages: chatMessages.user4 },\n        ];\n\n        Object.assign(chatUiInst, userSettings[index]);\n        chatUiInst.dataBind();\n    }\n\n    function createButton(iconCss: string, elementId: string): void {\n        new Button({ iconCss, cssClass: 'e-flat', iconPosition: 'Top' }).appendTo(elementId);\n    }\n\n    createButton('e-icons e-stamp', '#activitybtn');\n    createButton('e-icons e-comment-show', '#chatbtn');\n    createButton('e-icons e-month', '#calendarbtn');\n    createButton('e-icons e-people', '#teamsbtn');\n\n    function toggleListView(): void {\n        const listPopup = document.getElementById('toggle-chat-list') as HTMLElement;\n        if (innerWidth < 1200) {\n            listPopup.style.display = listPopup.style.display === 'none' || listPopup.style.display === '' ? 'block' : 'none';\n        }\n    }\n    \n    // Attach event listeners to buttons or other UI elements to trigger toggling\n    const chatButton = document.getElementById('chatbtn') as HTMLElement;\n    chatButton.addEventListener('click', toggleListView);\n"}