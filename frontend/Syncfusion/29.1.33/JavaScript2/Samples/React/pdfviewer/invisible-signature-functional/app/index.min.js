/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/pdfviewer/invisible-signature-functional/app/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/pdfviewer/invisible-signature-functional/app/index.tsx","pdfviewer.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/pdfviewer/invisible-signature-functional/app/index.tsx":
/*!************************************************************************!*\
  !*** ./samples/pdfviewer/invisible-signature-functional/app/index.tsx ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_react_pdfviewer_1 = __webpack_require__(/*! @syncfusion/ej2-react-pdfviewer */ \"./node_modules/@syncfusion/ej2-react-pdfviewer/index.js\");\nvar ej2_react_notifications_1 = __webpack_require__(/*! @syncfusion/ej2-react-notifications */ \"./node_modules/@syncfusion/ej2-react-notifications/index.js\");\nvar ej2_react_navigations_1 = __webpack_require__(/*! @syncfusion/ej2-react-navigations */ \"./node_modules/@syncfusion/ej2-react-navigations/index.js\");\nvar sample_base_1 = __webpack_require__(/*! ./sample-base */ \"./samples/pdfviewer/invisible-signature-functional/app/sample-base.tsx\");\nvar react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nfunction InvisibleDigitalSignature() {\n    React.useEffect(function () {\n        (0, sample_base_1.updateSampleSection)();\n    }, []);\n    var _a = (0, react_1.useState)(false), successVisible = _a[0], setVisible = _a[1];\n    var _b = (0, react_1.useState)(false), errorVisible = _b[0], seterrorVisible = _b[1];\n    var _c = (0, react_1.useState)(false), warningVisible = _c[0], setwarningVisible = _c[1];\n    var viewer;\n    var toolbar;\n    var fileName = '';\n    //Specifies the visibility of the complete signing.\n    var buttonVisiblity = true;\n    //Specifies the visibility of the download icon\n    var downloadVisiblity = true;\n    var msgWarning = \"The document has been digitally signed and at least one signature has problem \";\n    var msgError = \"The document has been digitally signed, but it has been modified since it was signed and at least one signature is invalid\";\n    var msgSuccess = \"The document has been digitally signed and all the signatures are valid\";\n    var documentData;\n    // Specifies whether the document has a digital signature or not.\n    var hasDigitalSignature = false;\n    return (React.createElement(\"div\", null,\n        React.createElement(\"div\", { className: 'control-section' },\n            React.createElement(\"div\", null,\n                React.createElement(\"div\", { className: 'e-pdf-toolbar' },\n                    React.createElement(ej2_react_navigations_1.ToolbarComponent, { ref: function (scope) { toolbar = scope; }, clicked: clickHandler.bind(this) },\n                        React.createElement(ej2_react_navigations_1.ItemsDirective, null,\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-folder-open', id: 'file_Open', tooltipText: 'Open', cssClass: 'e-pv-button-container' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { text: \"Complete Signing\", id: 'pdfviewer_sign', tooltipText: 'Finish Signing', disabled: buttonVisiblity, align: \"Right\" }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-download', tooltipText: \"Download\", id: 'download', disabled: downloadVisiblity, align: \"Right\", cssClass: 'e-pv-download-document-container' })))),\n                React.createElement(\"div\", null,\n                    React.createElement(ej2_react_notifications_1.MessageComponent, { id: \"msg_success\", content: msgSuccess, visible: successVisible, severity: \"Success\" }),\n                    React.createElement(ej2_react_notifications_1.MessageComponent, { id: \"msg_warning\", content: msgWarning, visible: warningVisible, severity: \"Warning\" }),\n                    React.createElement(ej2_react_notifications_1.MessageComponent, { id: \"msg_error\", content: msgError, visible: errorVisible, severity: \"Error\" })),\n                React.createElement(ej2_react_pdfviewer_1.PdfViewerComponent, { id: \"container\", ref: function (scope) { viewer = scope; }, enableToolbar: false, enableNavigationToolbar: false, documentLoad: documentLoaded, enableAnnotationToolbar: false, documentPath: \"https://cdn.syncfusion.com/content/pdf/InvisibleDigitalSignature.pdf\", resourceUrl: 'https://cdn.syncfusion.com/ej2/27.2.2/dist/ej2-pdfviewer-lib', addSignature: addSignature, style: { 'display': 'block', 'height': '640px' } },\n                    React.createElement(ej2_react_pdfviewer_1.Inject, { services: [ej2_react_pdfviewer_1.Magnification, ej2_react_pdfviewer_1.FormFields, ej2_react_pdfviewer_1.FormDesigner, ej2_react_pdfviewer_1.Navigation, ej2_react_pdfviewer_1.LinkAnnotation, ej2_react_pdfviewer_1.BookmarkView,\n                            ej2_react_pdfviewer_1.ThumbnailView, ej2_react_pdfviewer_1.Print, ej2_react_pdfviewer_1.Annotation, ej2_react_pdfviewer_1.TextSearch, ej2_react_pdfviewer_1.PageOrganizer] })),\n                React.createElement(\"input\", { type: \"file\", id: \"fileUpload\", accept: \".pdf\", onChange: readFile.bind(this), style: { 'display': 'block', 'visibility': 'hidden', 'width': '0', 'height': '0' } }))),\n        React.createElement(\"div\", { id: 'sample' },\n            React.createElement(\"div\", { id: 'loader' }, \"Loading....\"))));\n    //This method will get invoked while clicking the toolbar items.\n    function clickHandler(args) {\n        switch (args.item.id) {\n            case 'file_Open':\n                document.getElementById('fileUpload').click();\n                break;\n            case 'pdfviewer_sign':\n                var url = \"https://services.syncfusion.com/react/production/api/pdfviewer/AddSignature\";\n                viewer.saveAsBlob().then(function (value) {\n                    var reader = new FileReader();\n                    reader.readAsDataURL(value);\n                    reader.onload = function (e) {\n                        var base64String = e.target ? e.target.result : null;\n                        var xhr = new XMLHttpRequest();\n                        xhr.open('POST', url, true);\n                        xhr.setRequestHeader('Content-type', 'application/json; charset=UTF-8');\n                        var requestData = JSON.stringify({ base64String: base64String });\n                        xhr.onload = function () {\n                            if (xhr.status === 200) {\n                                documentData = xhr.responseText;\n                                viewer.load(xhr.responseText, null);\n                                toolbar.items[1].disabled = true;\n                                toolbar.items[2].disabled = false;\n                                viewer.fileName = fileName;\n                                viewer.downloadFileName = fileName;\n                            }\n                            else {\n                                console.error('Error in AddSignature API:', xhr.statusText);\n                            }\n                        };\n                        xhr.onerror = function () {\n                            console.error('Error reading Blob as Base64.', xhr.statusText);\n                        };\n                        xhr.send(requestData);\n                    };\n                }).catch(function (error) {\n                    console.error('Error saving Blob:', error);\n                });\n                break;\n            //Downloads the PDF document being loaded in the PDFViewer.\n            case 'download':\n                viewer.download();\n                break;\n        }\n    }\n    function documentLoaded(args) {\n        fileName = args.documentName;\n        var postData = {\n            documentData: documentData\n        };\n        var options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(postData)\n        };\n        var apiUrl = 'https://services.syncfusion.com/react/production/api/pdfviewer/ValidateSignature';\n        fetch(apiUrl, options)\n            .then(function (response) { return response.json(); })\n            .then(function (body) {\n            if (body.successVisible || body.warningVisible || body.errorVisible)\n                toolbar.items[1].disabled = true;\n            if (!body.downloadVisibility)\n                toolbar.items[2].disabled = false;\n            if ((body.successVisible)) {\n                setTimeout(function () {\n                    msgSuccess = body.message;\n                    setVisible(true);\n                }, 1000);\n                setTimeout(function () {\n                    setVisible(false);\n                }, 5000);\n            }\n            if ((body.warningVisible)) {\n                msgWarning = body.message;\n                setwarningVisible(true);\n            }\n            if (body.errorVisible) {\n                msgError = body.message;\n                seterrorVisible(false);\n            }\n        });\n    }\n    function readFile(evt) {\n        var uploadedFiles = evt.target.files;\n        var uploadedFile = uploadedFiles[0];\n        fileName = uploadedFile.name;\n        var reader = new FileReader();\n        reader.readAsDataURL(uploadedFile);\n        var uploadedFileName = fileName;\n        reader.onload = function (e) {\n            toolbar.items[2].disabled = true;\n            var uploadedFileUrl = e.currentTarget.result;\n            documentData = uploadedFileUrl;\n            viewer.load(uploadedFileUrl, null);\n            viewer.fileName = fileName;\n            viewer.downloadFileName = fileName;\n        };\n    }\n    //Triggers while adding the signature in signature field.\n    function addSignature() {\n        var field;\n        // To retrieve the form fields in the loaded PDF Document.\n        field = viewer.retrieveFormFields();\n        var signatureFieldCount = 0;\n        var signaturesCount = 0;\n        for (var i = 0; i < field.Count; i++) {\n            if (field[i].Type.ToString() === \"SignatureField\") {\n                signatureFieldCount++;\n            }\n            if (field[i].Value !== \"\" && field[i].Value !== null && field[i].Type.ToString() === \"SignatureField\") {\n                signaturesCount++;\n            }\n        }\n        // Checks whether all the signature fields are signed or not.\n        if (signatureFieldCount === signaturesCount) {\n            // Checks whether the document has a digital signature or not.\n            if (!hasDigitalSignature) {\n                buttonVisiblity = false;\n                toolbar.items[1].disabled = false;\n            }\n        }\n    }\n}\nexports.default = InvisibleDigitalSignature;\nvar root = (0, client_1.createRoot)(document.getElementById('sample'));\nroot.render(React.createElement(InvisibleDigitalSignature, null));\n\n\n//# sourceURL=webpack:///./samples/pdfviewer/invisible-signature-functional/app/index.tsx?");

/***/ }),

/***/ "./samples/pdfviewer/invisible-signature-functional/app/sample-base.tsx":
/*!******************************************************************************!*\
  !*** ./samples/pdfviewer/invisible-signature-functional/app/sample-base.tsx ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSampleSection = exports.SampleBase = void 0;\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n(0, ej2_base_1.enableRipple)(window.ripple);\nvar SampleBase = /** @class */ (function (_super) {\n    __extends(SampleBase, _super);\n    function SampleBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SampleBase.prototype.rendereComplete = function () {\n        /**custom render complete function */\n    };\n    SampleBase.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.rendereComplete();\n        });\n    };\n    return SampleBase;\n}(React.PureComponent));\nexports.SampleBase = SampleBase;\nfunction updateSampleSection() { }\nexports.updateSampleSection = updateSampleSection;\n\n\n//# sourceURL=webpack:///./samples/pdfviewer/invisible-signature-functional/app/sample-base.tsx?");

/***/ })

/******/ });