/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/rich-text-editor/enter-key-configuration/app/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/rich-text-editor/enter-key-configuration/app/index.tsx","richtexteditor.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/rich-text-editor/enter-key-configuration/app/index.tsx":
/*!************************************************************************!*\
  !*** ./samples/rich-text-editor/enter-key-configuration/app/index.tsx ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnterKeyConfiguration = void 0;\nvar client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\n/**\n * Rich Text Editor Enter Key Configuration sample\n */\nvar ej2_react_richtexteditor_1 = __webpack_require__(/*! @syncfusion/ej2-react-richtexteditor */ \"./node_modules/@syncfusion/ej2-react-richtexteditor/index.js\");\nvar ej2_react_dropdowns_1 = __webpack_require__(/*! @syncfusion/ej2-react-dropdowns */ \"./node_modules/@syncfusion/ej2-react-dropdowns/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar sample_base_1 = __webpack_require__(/*! ./sample-base */ \"./samples/rich-text-editor/enter-key-configuration/app/sample-base.tsx\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\nvar CodeMirror = __webpack_require__(/*! codemirror */ \"./node_modules/codemirror/lib/codemirror.js\");\n__webpack_require__(/*! codemirror/mode/javascript/javascript */ \"./node_modules/codemirror/mode/javascript/javascript.js\");\n__webpack_require__(/*! codemirror/mode/css/css.js */ \"./node_modules/codemirror/mode/css/css.js\");\n__webpack_require__(/*! codemirror/mode/htmlmixed/htmlmixed.js */ \"./node_modules/codemirror/mode/htmlmixed/htmlmixed.js\");\nvar EnterKeyConfiguration = /** @class */ (function (_super) {\n    __extends(EnterKeyConfiguration, _super);\n    function EnterKeyConfiguration(props) {\n        var _this = _super.call(this, props) || this;\n        _this.rteValue = \"<p>In Rich text Editor, the enter key and shift + enter key actions can be customized using the enterKey and shiftEnterKey APIs. And the possible values are as follows:</p><ul><li>P - When 'P' is configured, pressing enter or shift + enter will create a 'p' tag</li><li>DIV - When 'DIV' is configured, pressing enter or shift + enter will create a 'div' tag</li><li>BR - When 'BR' is configured, pressing enter or shift + enter will create a 'br' tag</li></ul>\";\n        _this.popupHeight = '200px';\n        _this.enterValue = \"P\";\n        _this.shiftEnterValue = \"BR\";\n        _this.enterPlaceholder = \"When pressing the enter key\";\n        _this.shiftEnterPlaceholder = \"When pressing the shift + enter key\";\n        _this.fields = { text: \"text\", value: \"value\" };\n        _this.enterData = [\n            { text: 'Create a new <p>', value: 'P' },\n            { text: 'Create a new <div>', value: 'DIV' },\n            { text: 'Create a new <br>', value: 'BR' }\n        ];\n        _this.shiftEnterData = [\n            { text: 'Create a new <br>', value: 'BR' },\n            { text: 'Create a new <div>', value: 'DIV' },\n            { text: 'Create a new <p>', value: 'P' }\n        ];\n        _this.enterChange = function () {\n            if (_this.enterList.value === 'P') {\n                _this.rteObj.enterKey = 'P';\n                _this.rteObj.value = \"<p>In Rich text Editor, the enter key and shift + enter key actions can be customized using the enterKey and shiftEnterKey APIs. And the possible values are as follows:</p><ul><li>P - When 'P' is configured, pressing enter or shift + enter will create a 'p' tag</li><li>DIV - When 'DIV' is configured, pressing enter or shift + enter will create a 'div' tag</li><li>BR - When 'BR' is configured, pressing enter or shift + enter will create a 'br' tag</li></ul>\";\n            }\n            else if (_this.enterList.value === 'DIV') {\n                _this.rteObj.enterKey = 'DIV';\n                _this.rteObj.value = \"<div>In Rich text Editor, the enter key and shift + enter key actions can be customized using the enterKey and shiftEnterKey APIs. And the possible values are as follows:</div><ul><li>P - When 'P' is configured, pressing enter or shift + enter will create a 'p' tag</li><li>DIV - When 'DIV' is configured, pressing enter or shift + enter will create a 'div' tag</li><li>BR - When 'BR' is configured, pressing enter or shift + enter will create a 'br' tag</li></ul>\";\n            }\n            else if (_this.enterList.value === 'BR') {\n                _this.rteObj.enterKey = 'BR';\n                _this.rteObj.value = \"In Rich text Editor, the enter key and shift + enter key actions can be customized using the enterKey and shiftEnterKey APIs. And the possible values are as follows:<ul><li>P - When 'P' is configured, pressing enter or shift + enter will create a 'p' tag</li><li>DIV - When 'DIV' is configured, pressing enter or shift + enter will create a 'div' tag</li><li>BR - When 'BR' is configured, pressing enter or shift + enter will create a 'br' tag</li></ul>\";\n            }\n            _this.onChange();\n        };\n        _this.shiftEnterChange = function () {\n            if (_this.shiftEnterList.value === 'BR') {\n                _this.rteObj.shiftEnterKey = 'BR';\n            }\n            else if (_this.shiftEnterList.value === 'DIV') {\n                _this.rteObj.shiftEnterKey = 'DIV';\n            }\n            else if (_this.shiftEnterList.value === 'P') {\n                _this.rteObj.shiftEnterKey = 'P';\n            }\n        };\n        _this.onCreate = function () {\n            _this.onChange();\n        };\n        _this.onChange = function () {\n            var id = _this.rteObj.getID() + 'mirror-view';\n            var codeView = document.getElementById('codeView');\n            var mirrorView;\n            if (document.getElementById(id)) {\n                mirrorView = document.getElementById(id);\n                mirrorView.innerHTML = '';\n            }\n            else {\n                mirrorView = (0, ej2_base_1.createElement)('div', { className: 'e-content codeViewContent' });\n                mirrorView.id = id;\n                codeView.appendChild(mirrorView);\n            }\n            mirrorView.style.display = 'block';\n            if (_this.rteObj.value !== null) {\n                CodeMirror(mirrorView, {\n                    value: _this.rteObj.value,\n                    mode: 'text/html',\n                    lineWrapping: true,\n                    readOnly: true\n                });\n            }\n        };\n        _this.state = {\n            textAreaValue: \"<p>In Rich text Editor, the enter key and shift + enter key actions can be customized using the enterKey and shiftEnterKey APIs. And the possible values are as follows:</p><ul><li>P - When 'P' is configured, pressing enter or shift + enter will create a 'p' tag</li><li>DIV - When 'DIV' is configured, pressing enter or shift + enter will create a 'div' tag</li><li>BR - When 'BR' is configured, pressing enter or shift + enter will create a 'br' tag</li></ul>\"\n        };\n        return _this;\n    }\n    EnterKeyConfiguration.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(\"div\", { className: 'control-pane' },\n            React.createElement(\"div\", { className: 'control-section enter-key', id: \"rte\" },\n                React.createElement(\"div\", { className: 'rte-control-section' },\n                    React.createElement(\"table\", { className: 'api' },\n                        React.createElement(\"tbody\", null,\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", null,\n                                    React.createElement(\"div\", null,\n                                        React.createElement(ej2_react_dropdowns_1.DropDownListComponent, { id: \"enterOption\", dataSource: this.enterData, ref: function (dropdownlist) { _this.enterList = dropdownlist; }, fields: this.fields, change: this.enterChange.bind(this), value: this.enterValue, popupHeight: this.popupHeight, placeholder: this.enterPlaceholder, floatLabelType: \"Always\" }))),\n                                React.createElement(\"td\", null,\n                                    React.createElement(\"div\", null,\n                                        React.createElement(ej2_react_dropdowns_1.DropDownListComponent, { id: \"shiftEnterOption\", dataSource: this.shiftEnterData, ref: function (dropdownlist) { _this.shiftEnterList = dropdownlist; }, fields: this.fields, change: this.shiftEnterChange.bind(this), value: this.shiftEnterValue, popupHeight: this.popupHeight, placeholder: this.shiftEnterPlaceholder, floatLabelType: \"Always\" })))))),\n                    React.createElement(\"br\", null),\n                    React.createElement(ej2_react_richtexteditor_1.RichTextEditorComponent, { id: \"defaultRTE\", ref: function (richtexteditor) { _this.rteObj = richtexteditor; }, change: this.onChange.bind(this), created: this.onCreate.bind(this), height: 220, saveInterval: 1, value: this.rteValue },\n                        React.createElement(ej2_react_richtexteditor_1.Inject, { services: [ej2_react_richtexteditor_1.HtmlEditor, ej2_react_richtexteditor_1.Toolbar, ej2_react_richtexteditor_1.Image, ej2_react_richtexteditor_1.Link, ej2_react_richtexteditor_1.QuickToolbar, ej2_react_richtexteditor_1.PasteCleanup, ej2_react_richtexteditor_1.Table, ej2_react_richtexteditor_1.Video, ej2_react_richtexteditor_1.Audio] })),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"label\", null, \"Code View \"),\n                    React.createElement(\"div\", { id: \"codeView\", className: \"codeView\" })))));\n    };\n    return EnterKeyConfiguration;\n}(sample_base_1.SampleBase));\nexports.EnterKeyConfiguration = EnterKeyConfiguration;\nvar root = (0, client_1.createRoot)(document.getElementById('sample'));\nroot.render(React.createElement(EnterKeyConfiguration, null));\n\n\n//# sourceURL=webpack:///./samples/rich-text-editor/enter-key-configuration/app/index.tsx?");

/***/ }),

/***/ "./samples/rich-text-editor/enter-key-configuration/app/sample-base.tsx":
/*!******************************************************************************!*\
  !*** ./samples/rich-text-editor/enter-key-configuration/app/sample-base.tsx ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSampleSection = exports.SampleBase = void 0;\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n(0, ej2_base_1.enableRipple)(window.ripple);\nvar SampleBase = /** @class */ (function (_super) {\n    __extends(SampleBase, _super);\n    function SampleBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SampleBase.prototype.rendereComplete = function () {\n        /**custom render complete function */\n    };\n    SampleBase.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.rendereComplete();\n        });\n    };\n    return SampleBase;\n}(React.PureComponent));\nexports.SampleBase = SampleBase;\nfunction updateSampleSection() { }\nexports.updateSampleSection = updateSampleSection;\n\n\n//# sourceURL=webpack:///./samples/rich-text-editor/enter-key-configuration/app/sample-base.tsx?");

/***/ })

/******/ });