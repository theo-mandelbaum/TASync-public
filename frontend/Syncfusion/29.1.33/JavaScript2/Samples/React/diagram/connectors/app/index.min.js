/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/diagram/connectors/app/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/diagram/connectors/app/index.tsx","diagrams.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/diagram/connectors/app/index.tsx":
/*!**************************************************!*\
  !*** ./samples/diagram/connectors/app/index.tsx ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connectors = void 0;\nvar client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_react_diagrams_1 = __webpack_require__(/*! @syncfusion/ej2-react-diagrams */ \"./node_modules/@syncfusion/ej2-react-diagrams/index.js\");\nvar ej2_react_diagrams_2 = __webpack_require__(/*! @syncfusion/ej2-react-diagrams */ \"./node_modules/@syncfusion/ej2-react-diagrams/index.js\");\nvar ej2_react_diagrams_3 = __webpack_require__(/*! @syncfusion/ej2-react-diagrams */ \"./node_modules/@syncfusion/ej2-react-diagrams/index.js\");\nvar ej2_react_dropdowns_1 = __webpack_require__(/*! @syncfusion/ej2-react-dropdowns */ \"./node_modules/@syncfusion/ej2-react-dropdowns/index.js\");\nvar ej2_react_inputs_1 = __webpack_require__(/*! @syncfusion/ej2-react-inputs */ \"./node_modules/@syncfusion/ej2-react-inputs/index.js\");\nvar sample_base_1 = __webpack_require__(/*! ./sample-base */ \"./samples/diagram/connectors/app/sample-base.tsx\");\nej2_react_diagrams_3.Diagram.Inject(ej2_react_diagrams_1.ConnectorEditing);\nvar diagramInstance;\nvar sourceDecoratorDropDown;\nvar targetDecoratorDropDown;\nvar appearanceElement;\nvar segmentDecoratorSizeNumericTextBox;\n//Initialize shape\nvar shape = {\n    type: \"Basic\",\n    shape: \"Rectangle\",\n    cornerRadius: 10\n};\n//Initialize Diagram Nodes\nvar nodes = [\n    { id: \"node1\", annotations: [{ content: \"Promotion\" }] },\n    { id: \"node2\", annotations: [{ content: \"Lead\" }] },\n    { id: \"node3\", annotations: [{ content: \"Account\" }] },\n    { id: \"node4\", annotations: [{ content: \"Information\" }] },\n    { id: \"node5\", annotations: [{ content: \"Opportunity\" }] },\n    { id: \"node6\", offsetX: 540, offsetY: 290, excludeFromLayout: true }\n];\n//Initialize Diagram connectors\nvar connectors = [\n    { id: \"connector\", sourceID: \"node1\", targetID: \"node2\" },\n    {\n        id: \"connector1\",\n        sourceID: \"node2\",\n        sourcePortID: \"port1\",\n        targetID: \"node3\",\n        targetPortID: \"portIn\"\n    },\n    {\n        id: \"connector2\",\n        sourceID: \"node2\",\n        sourcePortID: \"port2\",\n        targetID: \"node4\",\n        targetPortID: \"portIn\"\n    },\n    {\n        id: \"connector3\",\n        sourceID: \"node2\",\n        sourcePortID: \"port3\",\n        targetID: \"node5\",\n        targetPortID: \"portIn\"\n    },\n    {\n        id: \"connector4\",\n        sourceID: \"node6\",\n        sourcePortID: \"port4\",\n        targetID: \"node3\",\n        targetPortID: \"portOut\"\n    },\n    {\n        id: \"connector5\",\n        sourceID: \"node6\",\n        sourcePortID: \"port5\",\n        targetID: \"node4\",\n        targetPortID: \"portOut\"\n    },\n    {\n        id: \"connector7\",\n        sourceID: \"node6\",\n        sourcePortID: \"port6\",\n        targetID: \"node5\",\n        targetPortID: \"portOut\"\n    }\n];\nvar SAMPLE_CSS = \"\\n/* For connector type and style change in property panel*/\\n      .diagram-connector .image-pattern-style {\\n        background-color: white;\\n        background-size: contain;\\n        background-repeat: no-repeat;\\n        height: 45px;\\n        width: calc((100% - 13px) / 3);\\n        cursor: pointer;\\n        border: 1px solid #D5D5D5;\\n        background-position: center;\\n        float: left;\\n    }\\n\\n    .diagram-connector .image-pattern-style:hover {\\n        border-color: gray;\\n        border-width: 2px;\\n    }\\n\\n    .diagram-connector .row {\\n        margin-left: 0px;\\n        margin-right: 0px;\\n    }\\n\\n    .diagram-connector .row-header {\\n        font-size: 13px;\\n        font-weight: 500;\\n    }\\n\\n    .diagram-connector .e-selected-style {\\n        border-color: #006CE6;\\n        border-width: 2px;\\n    }\\n\\n    .diagram-connector label{\\n      display: inline-block;\\n      font-size: 13px;\\n      font-weight: 400;\\n      width: 100%;\\n      margin-top: auto;\\n    }\";\n// Shape collection of the decorators.\nvar decoratorShape = [\n    { shape: 'None', text: 'None' },\n    { shape: 'Square', text: 'Square' },\n    { shape: 'Circle', text: 'Circle' },\n    { shape: 'Diamond', text: 'Diamond' },\n    { shape: 'Arrow', text: 'Arrow' },\n    { shape: 'OpenArrow', text: 'Open Arrow' },\n    { shape: 'Fletch', text: 'Fletch' },\n    { shape: 'OpenFetch', text: 'OpenFetch' },\n    { shape: 'IndentedArrow', text: 'Indented Arrow' },\n    { shape: 'OutdentedArrow', text: 'Outdented Arrow' },\n    { shape: 'DoubleArrow', text: 'Double Arrow' }\n];\nvar Connectors = /** @class */ (function (_super) {\n    __extends(Connectors, _super);\n    function Connectors() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Connectors.prototype.rendereComplete = function () {\n        diagramInstance.fitToPage();\n        //Click Event for Appearance of the layout.\n        appearanceElement.onclick = function (args) {\n            var target = args.target;\n            var selectedElement = document.getElementsByClassName(\"e-selected-style\");\n            if (selectedElement.length) {\n                selectedElement[0].classList.remove(\"e-selected-style\");\n            }\n            if (target.className === \"image-pattern-style\") {\n                switch (target.id) {\n                    case \"straightConnector\":\n                        defaultConnectorStyle(\"Straight\", target);\n                        break;\n                    case \"orthogonalConnector\":\n                        defaultConnectorStyle(\"Orthogonal\", target);\n                        break;\n                    case \"bezierConnector\":\n                        defaultConnectorStyle(\"Bezier\", target);\n                        break;\n                    case \"straightConnectorWithStroke\":\n                        applyConnectorStyle(false, false, false, \"Straight\", target);\n                        break;\n                    case \"orthogonalConnectorWithStroke\":\n                        applyConnectorStyle(false, false, false, \"Orthogonal\", target);\n                        break;\n                    case \"bezierConnectorWithStroke\":\n                        applyConnectorStyle(false, false, false, \"Bezier\", target);\n                        break;\n                    case \"straightConnectorWithDasharray\":\n                        applyConnectorStyle(true, false, false, \"Straight\", target);\n                        break;\n                    case \"orthogonalConnectorWithDasharray\":\n                        applyConnectorStyle(true, false, false, \"Orthogonal\", target);\n                        break;\n                    case \"bezierConnectorWithDasharray\":\n                        applyConnectorStyle(true, false, false, \"Bezier\", target);\n                        break;\n                    case \"cornerRadius\":\n                        applyConnectorStyle(false, false, true, \"Orthogonal\", target);\n                        break;\n                    case \"sourceDecorators\":\n                        applyConnectorStyle(false, true, false, \"Straight\", target);\n                        break;\n                    case \"sourceDecoratorWithDasharray\":\n                        applyConnectorStyle(true, true, false, \"Straight\", target);\n                        break;\n                }\n            }\n        };\n    };\n    Connectors.prototype.render = function () {\n        return (React.createElement(\"div\", { className: \"control-pane diagram-connector\" },\n            React.createElement(\"style\", null, SAMPLE_CSS),\n            React.createElement(\"div\", { className: \"col-lg-8 control-section\" },\n                React.createElement(\"div\", { className: \"content-wrapper\", style: { width: \"100%\", background: \"white\" } },\n                    React.createElement(ej2_react_diagrams_1.DiagramComponent, { id: \"diagram\", ref: function (diagram) { return (diagramInstance = diagram); }, width: \"100%\", height: 580, nodes: nodes, connectors: connectors, segmentThumbSize: 10, selectionChange: function () {\n                            if (diagramInstance.selectedItems.connectors.length > 0) {\n                                segmentDecoratorSizeNumericTextBox.enabled = true;\n                            }\n                            else {\n                                segmentDecoratorSizeNumericTextBox.enabled = false;\n                            }\n                        }, \n                        //Configrues hierarchical tree layout\n                        layout: {\n                            type: \"HierarchicalTree\",\n                            orientation: \"LeftToRight\",\n                            verticalSpacing: 75,\n                            margin: { left: 30, right: 0, top: 0, bottom: 0 }\n                        }, snapSettings: { constraints: ej2_react_diagrams_1.SnapConstraints.None }, \n                        // Sets the default values of nodes\n                        getNodeDefaults: function (obj) {\n                            if (obj.id !== \"node1\") {\n                                //Set ports\n                                obj.ports = getPorts(obj);\n                            }\n                            if (obj.id !== \"node6\") {\n                                obj.shape = shape;\n                                obj.width = 80;\n                                obj.style.strokeWidth = 2;\n                                obj.style.strokeColor = \"#6F409F\";\n                                obj.height = 35;\n                            }\n                        }, \n                        //Sets the default values of connector\n                        getConnectorDefaults: function (obj) {\n                            obj.type = \"Bezier\";\n                            obj.style.strokeColor = \"#6f409f\";\n                            obj.style.strokeWidth = 2;\n                            obj.targetDecorator = {\n                                style: {\n                                    strokeColor: \"#6f409f\",\n                                    fill: \"#6f409f\"\n                                }\n                            };\n                            obj.segments = [\n                                {\n                                    type: 'Bezier',\n                                }\n                            ],\n                                obj.constraints = ej2_react_diagrams_1.ConnectorConstraints.Default | ej2_react_diagrams_1.ConnectorConstraints.DragSegmentThumb;\n                        }, \n                        //Customize the content of the node\n                        setNodeTemplate: function (obj) {\n                            if (obj.id === \"node6\") {\n                                return setNodeTemplate();\n                            }\n                            return null;\n                        } },\n                        React.createElement(ej2_react_diagrams_1.Inject, { services: [ej2_react_diagrams_1.HierarchicalTree] })))),\n            React.createElement(\"div\", { className: \"col-lg-4 property-section\" },\n                React.createElement(\"div\", { className: \"property-panel-header\" }, \"Properties\"),\n                React.createElement(\"div\", { className: \"row property-panel-content\", id: \"appearance\", ref: function (appearance) { return (appearanceElement = appearance); } },\n                    React.createElement(\"div\", { className: \"row row-header\" },\n                        React.createElement(\"b\", null, \"Connector types\")),\n                    React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\" } },\n                        React.createElement(\"div\", { className: \"image-pattern-style\", id: \"straightConnector\", style: {\n                                backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/connector/Connectors_1.png')\",\n                                marginRight: \"3px\"\n                            } }),\n                        React.createElement(\"div\", { className: \"image-pattern-style\", id: \"orthogonalConnector\", style: {\n                                backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/connector/Connectors_2.png')\",\n                                margin: \"0px 3px\"\n                            } }),\n                        React.createElement(\"div\", { className: \"image-pattern-style\", id: \"bezierConnector\", style: {\n                                backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/connector/Connectors_3.png')\",\n                                marginLeft: \"3px\"\n                            } })),\n                    React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\" } },\n                        React.createElement(\"div\", { className: \"image-pattern-style\", id: \"straightConnectorWithStroke\", style: {\n                                backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/connector/Connectors_4.png')\",\n                                marginRight: \"3px\"\n                            } }),\n                        React.createElement(\"div\", { className: \"image-pattern-style\", id: \"orthogonalConnectorWithStroke\", style: {\n                                backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/connector/Connectors_5.png')\",\n                                margin: \"0px 3px\"\n                            } }),\n                        React.createElement(\"div\", { className: \"image-pattern-style\", id: \"bezierConnectorWithStroke\", style: {\n                                backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/connector/Connectors_6.png')\",\n                                marginLeft: \"3px\"\n                            } })),\n                    React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\" } },\n                        React.createElement(\"div\", { className: \"image-pattern-style\", id: \"straightConnectorWithDasharray\", style: {\n                                backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/connector/Connectors_7.png')\",\n                                marginRight: \"3px\"\n                            } }),\n                        React.createElement(\"div\", { className: \"image-pattern-style\", id: \"orthogonalConnectorWithDasharray\", style: {\n                                backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/connector/Connectors_8.png')\",\n                                margin: \"0px 3px\"\n                            } }),\n                        React.createElement(\"div\", { className: \"image-pattern-style\", id: \"bezierConnectorWithDasharray\", style: {\n                                backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/connector/Connectors_9.png')\",\n                                marginLeft: \"3px\"\n                            } })),\n                    React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\" } },\n                        React.createElement(\"div\", { className: \"image-pattern-style\", id: \"cornerRadius\", style: {\n                                backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/connector/Connectors_10.png')\",\n                                marginRight: \"3px\"\n                            } }),\n                        React.createElement(\"div\", { className: \"image-pattern-style\", id: \"sourceDecorators\", style: {\n                                backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/connector/Connectors_11.png')\",\n                                margin: \"0px 3px\"\n                            } }),\n                        React.createElement(\"div\", { className: \"image-pattern-style\", id: \"sourceDecoratorWithDasharray\", style: {\n                                backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/connector/Connectors_12.png')\",\n                                marginLeft: \"3px\"\n                            } }))),\n                React.createElement(\"div\", { className: \"row property-panel-content\", id: \"decorators\", style: { paddingTop: \"10px\" } },\n                    React.createElement(\"div\", { className: \"row row-header\", style: { paddingTop: \"8px\" } },\n                        React.createElement(\"b\", null, \"Decorators\")),\n                    React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\", display: 'flex' } },\n                        React.createElement(\"label\", null, \"Source Decorators\"),\n                        React.createElement(\"div\", null,\n                            React.createElement(ej2_react_dropdowns_1.DropDownListComponent, { id: \"sourceDecorator\", ref: function (sourceDecorator) { return (sourceDecoratorDropDown = sourceDecorator); }, value: \"None\", dataSource: decoratorShape, change: sourceDecoratorShapeChange }))),\n                    React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\", display: 'flex' } },\n                        React.createElement(\"label\", null, \"Target Decorators\"),\n                        React.createElement(\"div\", null,\n                            React.createElement(ej2_react_dropdowns_1.DropDownListComponent, { id: \"targetDecorator\", ref: function (targetDecorator) { return (targetDecoratorDropDown = targetDecorator); }, value: \"None\", dataSource: decoratorShape, change: targetDecoratorShapeChange }))),\n                    React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\", display: 'flex' } },\n                        React.createElement(\"label\", null, \"Segment Decorators\"),\n                        React.createElement(\"div\", null,\n                            React.createElement(ej2_react_dropdowns_1.DropDownListComponent, { id: \"segmentDecorator\", value: \"None\", dataSource: decoratorShape, change: segmentDecoratorShapeChange })))),\n                React.createElement(\"div\", { className: \"row property-panel-content\", id: \"decorators\", style: { paddingTop: \"10px\" } },\n                    React.createElement(\"div\", { className: \"row row-header\", style: { paddingTop: \"8px\" } },\n                        React.createElement(\"b\", null, \"Decorators Size\")),\n                    React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\", display: 'flex' } },\n                        React.createElement(\"label\", null, \"Source Decorators Size\"),\n                        React.createElement(\"div\", null,\n                            React.createElement(ej2_react_inputs_1.NumericTextBoxComponent, { id: \"sourceDecoratorSize\", enabled: true, format: \"###.##\", value: 12, step: 1, max: 20, min: 10, change: sourceDecoratorSizeChange }))),\n                    React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\", display: 'flex' } },\n                        React.createElement(\"label\", null, \"Target Decorators Size\"),\n                        React.createElement(\"div\", null,\n                            React.createElement(ej2_react_inputs_1.NumericTextBoxComponent, { id: \"targetDecoratorSize\", enabled: true, format: \"###.##\", value: 12, step: 1, max: 20, min: 10, change: targetDecoratorSizeChange }))),\n                    React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\", display: 'flex' } },\n                        React.createElement(\"label\", null, \"Segment Decorators Size\"),\n                        React.createElement(\"div\", null,\n                            React.createElement(ej2_react_inputs_1.NumericTextBoxComponent, { id: \"segmentDecoratorSize\", ref: function (segmentDecoratorSize) { return (segmentDecoratorSizeNumericTextBox = segmentDecoratorSize); }, enabled: false, format: \"###.##\", value: 12, step: 1, max: 20, min: 10, change: segmentDecoratorSizeChange })))),\n                React.createElement(\"div\", { className: \"row property-panel-content\", style: { paddingTop: \"8px\" } },\n                    React.createElement(\"div\", { className: \"row row-header\" },\n                        React.createElement(\"b\", null, \"Appearance\")),\n                    React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"10px\", display: 'flex' } },\n                        React.createElement(\"label\", null, \"Line color\"),\n                        React.createElement(ej2_react_inputs_1.ColorPickerComponent, { id: \"color\", mode: \"Palette\", showButtons: false, modeSwitcher: true, value: \"#6F409F\", change: function (args) {\n                                for (var i = 0; i < diagramInstance.connectors.length; i++) {\n                                    diagramInstance.connectors[i].style.strokeColor = args.currentValue.hex;\n                                    diagramInstance.connectors[i].targetDecorator.style.strokeColor = args.currentValue.hex;\n                                    diagramInstance.connectors[i].targetDecorator.style.fill = args.currentValue.hex;\n                                    diagramInstance.connectors[i].sourceDecorator.style.strokeColor = args.currentValue.hex;\n                                    diagramInstance.connectors[i].sourceDecorator.style.fill = args.currentValue.hex;\n                                }\n                                diagramInstance.dataBind();\n                            } }))))));\n    };\n    return Connectors;\n}(sample_base_1.SampleBase));\nexports.Connectors = Connectors;\n//Customize the content of the node\nfunction setNodeTemplate() {\n    var canvas = new ej2_react_diagrams_2.StackPanel();\n    canvas.children = [];\n    canvas.id = (0, ej2_react_diagrams_1.randomId)();\n    canvas.style.strokeWidth = 0;\n    canvas.style.fill = \"#e6e0eb\";\n    canvas.children.push(getTextElement(\"Events\", \"#a6a1e0\"));\n    canvas.children.push(getTextElement(\"Emails\", \"#db8ec9\"));\n    canvas.children.push(getTextElement(\"Calls\", \"#db8ec9\"));\n    canvas.children.push(getTextElement(\"Smart Contents\", \"#db8ec9\"));\n    return canvas;\n}\n//creation of the TextElement.\nfunction getTextElement(text, color) {\n    var textElement = new ej2_react_diagrams_1.TextElement();\n    textElement.id = (0, ej2_react_diagrams_1.randomId)();\n    textElement.width = 80;\n    textElement.height = 35;\n    textElement.content = text;\n    textElement.style.fill = \"#6f409f\";\n    textElement.style.color = \"white\";\n    textElement.style.strokeColor = \"#6f409f\";\n    textElement.cornerRadius = 5;\n    textElement.margin = { top: 10, bottom: 10, left: 10, right: 10 };\n    textElement.relativeMode = \"Object\";\n    return textElement;\n}\n//creation of Port for Node.\nfunction getPorts(obj) {\n    if (obj.id === \"node2\") {\n        var node2Ports = [\n            {\n                id: \"port1\",\n                offset: { x: 1, y: 0.25 },\n                visibility: ej2_react_diagrams_3.PortVisibility.Hidden\n            },\n            {\n                id: \"port2\",\n                offset: { x: 1, y: 0.5 },\n                visibility: ej2_react_diagrams_3.PortVisibility.Hidden\n            },\n            {\n                id: \"port3\",\n                offset: { x: 1, y: 0.75 },\n                visibility: ej2_react_diagrams_3.PortVisibility.Hidden\n            }\n        ];\n        return node2Ports;\n    }\n    else if (obj.id === \"node6\") {\n        var node6Ports = [\n            {\n                id: \"port4\",\n                offset: { x: 0, y: 0.46 },\n                visibility: ej2_react_diagrams_3.PortVisibility.Hidden\n            },\n            {\n                id: \"port5\",\n                offset: { x: 0, y: 0.5 },\n                visibility: ej2_react_diagrams_3.PortVisibility.Hidden\n            },\n            {\n                id: \"port6\",\n                offset: { x: 0, y: 0.54 },\n                visibility: ej2_react_diagrams_3.PortVisibility.Hidden\n            }\n        ];\n        return node6Ports;\n    }\n    else {\n        var ports = [\n            {\n                id: \"portIn\",\n                offset: { x: 0, y: 0.5 },\n                visibility: ej2_react_diagrams_3.PortVisibility.Hidden\n            },\n            {\n                id: \"portOut\",\n                offset: { x: 1, y: 0.5 },\n                visibility: ej2_react_diagrams_3.PortVisibility.Hidden\n            }\n        ];\n        return ports;\n    }\n}\n//ConnectorStyle customization\nfunction applyConnectorStyle(dashedLine, sourceDecorator, isRounded, type, target) {\n    for (var i = 0; i < diagramInstance.connectors.length; i++) {\n        diagramInstance.connectors[i].style.strokeWidth = 2;\n        diagramInstance.connectors[i].type = type;\n        if (isRounded) {\n            diagramInstance.connectors[i].cornerRadius = 5;\n        }\n        if (sourceDecorator) {\n            diagramInstance.connectors[i].sourceDecorator = {\n                style: {\n                    strokeColor: diagramInstance.connectors[i].style.strokeColor,\n                    fill: diagramInstance.connectors[i].style.strokeColor,\n                    strokeWidth: 2\n                },\n                shape: \"Circle\"\n            };\n            sourceDecoratorDropDown.value = 'Circle';\n        }\n        else {\n            diagramInstance.connectors[i].sourceDecorator = { shape: \"None\" };\n            sourceDecoratorDropDown.value = 'None';\n        }\n        if (dashedLine) {\n            diagramInstance.connectors[i].style.strokeDashArray = \"5,5\";\n        }\n        else {\n            diagramInstance.connectors[i].style.strokeDashArray = \"\";\n        }\n        diagramInstance.connectors[i].targetDecorator = {\n            style: {\n                strokeColor: diagramInstance.connectors[i].style.strokeColor,\n                fill: diagramInstance.connectors[i].style.strokeColor,\n                strokeWidth: 2\n            },\n            shape: \"Arrow\"\n        };\n        targetDecoratorDropDown.value = 'Arrow';\n        diagramInstance.dataBind();\n        diagramInstance.updateSelector();\n    }\n    target.classList.add(\"e-selected-style\");\n}\n//ConnectorStyle customization\nfunction defaultConnectorStyle(type, target) {\n    for (var i = 0; i < diagramInstance.connectors.length; i++) {\n        diagramInstance.connectors[i].style.strokeWidth = 1;\n        diagramInstance.connectors[i].type = type;\n        diagramInstance.connectors[i].sourceDecorator = { shape: \"None\" };\n        diagramInstance.connectors[i].style.strokeDashArray = \"\";\n        diagramInstance.connectors[i].targetDecorator = {\n            style: {\n                strokeColor: diagramInstance.connectors[i].style.strokeColor,\n                fill: diagramInstance.connectors[i].style.strokeColor,\n                strokeWidth: 1\n            },\n            shape: \"Arrow\"\n        };\n        diagramInstance.dataBind();\n        targetDecoratorDropDown.value = 'Arrow';\n    }\n    target.classList.add(\"e-selected-style\");\n}\n//Change Source decorator shape\nfunction sourceDecoratorShapeChange(args) {\n    for (var i = 0; i < diagramInstance.connectors.length; i++) {\n        diagramInstance.connectors[i].sourceDecorator = {\n            shape: args.itemData.shape,\n            style: {\n                strokeColor: diagramInstance.connectors[i].style.strokeColor,\n                fill: diagramInstance.connectors[i].style.strokeColor,\n            }\n        };\n    }\n    diagramInstance.dataBind();\n}\n//Change target decorator shape\nfunction targetDecoratorShapeChange(args) {\n    for (var i = 0; i < diagramInstance.connectors.length; i++) {\n        diagramInstance.connectors[i].targetDecorator = {\n            shape: args.itemData.shape,\n            style: {\n                strokeColor: diagramInstance.connectors[i].style.strokeColor,\n                fill: diagramInstance.connectors[i].style.strokeColor,\n            }\n        };\n        diagramInstance.dataBind();\n    }\n}\n//Change segment decorator shape\nfunction segmentDecoratorShapeChange(args) {\n    for (var i = 0; i < diagramInstance.connectors.length; i++) {\n        diagramInstance.segmentThumbShape = args.itemData.shape;\n    }\n    diagramInstance.dataBind();\n}\n//Change Source decorator size\nfunction sourceDecoratorSizeChange(args) {\n    for (var i = 0; i < diagramInstance.connectors.length; i++) {\n        diagramInstance.connectors[i].sourceDecorator.width = args.value;\n        diagramInstance.connectors[i].sourceDecorator.height = args.value;\n    }\n    diagramInstance.dataBind();\n}\n//Change target decorator size\nfunction targetDecoratorSizeChange(args) {\n    for (var i = 0; i < diagramInstance.connectors.length; i++) {\n        diagramInstance.connectors[i].targetDecorator.width = args.value;\n        diagramInstance.connectors[i].targetDecorator.height = args.value;\n    }\n    diagramInstance.dataBind();\n}\n//Change segment decorator size\nfunction segmentDecoratorSizeChange(args) {\n    var connector = diagramInstance.selectedItems.connectors[0];\n    diagramInstance.segmentThumbSize = args.value;\n    diagramInstance.clearSelection();\n    diagramInstance.select([diagramInstance.nameTable[connector.id]]);\n    diagramInstance.dataBind();\n}\nvar root = (0, client_1.createRoot)(document.getElementById('sample'));\nroot.render(React.createElement(Connectors, null));\n\n\n//# sourceURL=webpack:///./samples/diagram/connectors/app/index.tsx?");

/***/ }),

/***/ "./samples/diagram/connectors/app/sample-base.tsx":
/*!********************************************************!*\
  !*** ./samples/diagram/connectors/app/sample-base.tsx ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSampleSection = exports.SampleBase = void 0;\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n(0, ej2_base_1.enableRipple)(window.ripple);\nvar SampleBase = /** @class */ (function (_super) {\n    __extends(SampleBase, _super);\n    function SampleBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SampleBase.prototype.rendereComplete = function () {\n        /**custom render complete function */\n    };\n    SampleBase.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.rendereComplete();\n        });\n    };\n    return SampleBase;\n}(React.PureComponent));\nexports.SampleBase = SampleBase;\nfunction updateSampleSection() { }\nexports.updateSampleSection = updateSampleSection;\n\n\n//# sourceURL=webpack:///./samples/diagram/connectors/app/sample-base.tsx?");

/***/ })

/******/ });