/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/diagram/bpmn-editor-functional/app/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/diagram/bpmn-editor-functional/app/index.tsx","diagrams.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/diagram/bpmn-editor-functional/app/index.tsx":
/*!**************************************************************!*\
  !*** ./samples/diagram/bpmn-editor-functional/app/index.tsx ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\n// Import React and necessary components from Syncfusion's EJ2 React Diagrams library for building the BPMN editor.\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_react_diagrams_1 = __webpack_require__(/*! @syncfusion/ej2-react-diagrams */ \"./node_modules/@syncfusion/ej2-react-diagrams/index.js\");\nvar sample_base_1 = __webpack_require__(/*! ./sample-base */ \"./samples/diagram/bpmn-editor-functional/app/sample-base.tsx\");\n// Importing CSS for BPMN icons\nvar diagram;\n// Function to initialize a node\nvar createNode = function (id, width, height, offsetX, offsetY, shape, annotations, margin, style, constraints) {\n    if (annotations === void 0) { annotations = []; }\n    if (margin === void 0) { margin = {}; }\n    if (style === void 0) { style = {}; }\n    if (constraints === void 0) { constraints = ej2_react_diagrams_1.NodeConstraints.Default; }\n    return ({\n        id: id,\n        width: width,\n        height: height,\n        offsetX: offsetX,\n        offsetY: offsetY,\n        shape: shape,\n        annotations: annotations,\n        margin: margin,\n        style: style,\n        constraints: constraints\n    });\n};\n//Initializes the nodes for the diagram.\nvar nodes = [\n    createNode('start', 40, 40, 35, 180, { type: 'Bpmn', shape: 'Event', event: { event: 'Start' } }),\n    createNode('subProcess', 520, 250, 355, 180, { shape: 'Activity', type: 'Bpmn', activity: { activity: 'SubProcess',\n            subProcess: { type: 'Transaction', collapsed: false, processes: ['processesStart', 'service', 'compensation',\n                    'error', 'processesTask', 'processesEnd', 'user', 'subProcessesEnd'] } } }, [], {}, {}, ej2_react_diagrams_1.NodeConstraints.Default | ej2_react_diagrams_1.NodeConstraints.AllowDrop),\n    createNode('hazardEnd', 40, 40, 305, 370, { type: 'Bpmn', shape: 'Event', event: { event: 'End' } }, [\n        { id: 'label2', content: 'Hazard', verticalAlignment: 'Top', style: { fill: 'white', color: 'black' }, margin: { top: 20 } }\n    ]),\n    createNode('cancelledEnd', 40, 40, 545, 370, { type: 'Bpmn', shape: 'Event', event: { event: 'End' } }, [\n        { id: 'cancelledEndLabel2', content: 'Cancelled', verticalAlignment: 'Top', style: { fill: 'white', color: 'black' }, margin: { top: 20 } }\n    ]),\n    createNode('end', 40, 40, 665, 180, { type: 'Bpmn', shape: 'Event', event: { event: 'End' } }),\n    createNode('processesStart', 30, 30, 0, 0, { type: 'Bpmn', shape: 'Event', event: { event: 'Start' } }, [], { left: 40, top: 80 }),\n    createNode('service', 95, 70, 0, 0, {\n        type: 'Bpmn', shape: 'Activity', activity: { activity: 'Task', task: { type: 'Service', loop: 'ParallelMultiInstance' } }\n    }, [{ id: 'serviceLabel2', content: 'Book hotel', style: { color: 'white' }, offset: { x: 0.5, y: 0.5 } }], { left: 110, top: 20 }, { fill: '#6FAAB0' }),\n    createNode('compensation', 30, 30, 0, 0, { type: 'Bpmn', shape: 'Event', event: { event: 'Intermediate', trigger: 'Compensation' } }, [], { left: 170, top: 100 }),\n    createNode('processesTask', 95, 70, 0, 0, {\n        type: 'Bpmn', shape: 'Activity', activity: { activity: 'Task', task: { type: 'Service' } }\n    }, [{ id: 'serviceLabel2', content: 'Charge credit card', style: { color: 'white' }, offset: { x: 0.5, y: 0.6 } }], { left: 290, top: 20 }, { fill: '#F6B53F' }),\n    createNode('error', 30, 30, 0, 0, { type: 'Bpmn', shape: 'Event', event: { event: 'Intermediate', trigger: 'Error' } }, [], { left: 350, top: 100 }),\n    createNode('processesEnd', 30, 30, 0, 0, { type: 'Bpmn', shape: 'Event', event: { event: 'End' } }, [], { left: 440, top: 80 }),\n    createNode('user', 90, 80, 0, 0, {\n        type: 'Bpmn', shape: 'Activity', activity: { activity: 'Task', task: { type: 'User', compensation: true } }\n    }, [{ id: 'serviceLabel2', content: 'Cancel hotel reservation', style: { color: 'white' }, offset: { x: 0.5, y: 0.6 } }], { left: 30, top: 160 }, { fill: '#E94649' }),\n    createNode('subProcessesEnd', 30, 30, 0, 0, { type: 'Bpmn', shape: 'Event', event: { event: 'End' } }, [], { left: 440, top: 210 }),\n];\n// Function to create a connector\nvar createConnector = function (id, sourceID, targetID, sourcePortID, targetPortID, type, segments, annotations, shape, style) {\n    if (sourcePortID === void 0) { sourcePortID = \" \"; }\n    if (targetPortID === void 0) { targetPortID = \"\"; }\n    if (type === void 0) { type = \"Orthogonal\"; }\n    if (segments === void 0) { segments = []; }\n    if (annotations === void 0) { annotations = []; }\n    if (shape === void 0) { shape = {}; }\n    if (style === void 0) { style = {}; }\n    return ({\n        id: id,\n        sourceID: sourceID,\n        targetID: targetID,\n        sourcePortID: sourcePortID,\n        targetPortID: targetPortID,\n        type: type,\n        segments: segments,\n        annotations: annotations,\n        shape: shape,\n        style: style\n    });\n};\n//Initializes the connectors for the diagram.\nvar connectors = [\n    createConnector('connector1', 'start', 'subProcess'),\n    createConnector('connector2', 'subProcess', 'end', 'success'),\n    createConnector('connector3', 'subProcess', 'hazardEnd', 'failure', \"\", 'Orthogonal', [{ type: 'Orthogonal', length: 50, direction: 'Bottom' }], [{ id: 'connector3Label2', content: 'Booking system failure', offset: 0.50, style: { fill: 'white' } }]),\n    createConnector('connector4', 'subProcess', 'cancelledEnd', 'cancel', \"\", 'Orthogonal', [{ type: 'Orthogonal', length: 50, direction: 'Bottom' }]),\n    createConnector('connector5', 'processesStart', 'service', \"\", \"\", 'Orthogonal'),\n    createConnector('connector6', 'service', 'processesTask'),\n    createConnector('connector7', 'processesTask', 'processesEnd', \"\", \"\", 'Orthogonal'),\n    createConnector('connector8', 'compensation', 'user', \"\", \"\", 'Orthogonal', [{ type: 'Orthogonal', length: 30, direction: 'Bottom' }, { type: 'Orthogonal', length: 80, direction: 'Left' }], [], { type: 'Bpmn', flow: 'Association', association: 'Directional' }, { strokeDashArray: '2,2' }),\n    createConnector('connector9', 'error', 'subProcessesEnd', null, null, 'Orthogonal', [{ type: 'Orthogonal', length: 50, direction: 'Bottom' }], [{ id: 'connector9Label2', content: 'Cannot charge card', offset: 0.5,\n            style: { fill: 'white', color: 'black' } }])\n];\n//Initializes the bpmn shapes for the symbol pallete.\nvar bpmnShapes = [\n    {\n        id: 'Start', width: 35, height: 35, shape: {\n            type: 'Bpmn', shape: 'Event',\n            event: { event: 'Start' }\n        }\n    },\n    {\n        id: 'NonInterruptingIntermediate', width: 35, height: 35, shape: {\n            type: 'Bpmn', shape: 'Event',\n            event: { event: 'NonInterruptingIntermediate' }\n        },\n    },\n    {\n        id: 'End', width: 35, height: 35, shape: {\n            type: 'Bpmn', shape: 'Event',\n            event: { event: 'End' }\n        },\n    },\n    {\n        id: 'Task', width: 35, height: 35, shape: {\n            type: 'Bpmn', shape: 'Activity', activity: {\n                activity: 'Task',\n            },\n        }\n    },\n    {\n        id: 'Transaction', width: 35, height: 35, shape: {\n            type: 'Bpmn', shape: 'Activity',\n            activity: {\n                activity: 'SubProcess', subProcess: {\n                    type: 'Transaction', transaction: {\n                        cancel: { visible: false }, failure: { visible: false }, success: { visible: false }\n                    }\n                }\n            }\n        }\n    },\n    {\n        id: 'Task_Service', width: 35, height: 35, shape: {\n            type: 'Bpmn', shape: 'Activity', activity: {\n                activity: 'Task', task: { type: 'Service' }\n            },\n        }\n    },\n    {\n        id: 'Gateway', width: 35, height: 35, shape: { type: 'Bpmn', shape: 'Gateway', gateway: { type: 'Exclusive' } },\n    },\n    {\n        id: 'DataObject', width: 35, height: 35, shape: { type: 'Bpmn', shape: 'DataObject', dataObject: { collection: false, type: 'None' } }\n    },\n    {\n        id: 'subProcess', width: 520, height: 250,\n        constraints: ej2_react_diagrams_1.NodeConstraints.Default | ej2_react_diagrams_1.NodeConstraints.AllowDrop,\n        shape: {\n            shape: 'Activity', type: 'Bpmn',\n            activity: {\n                activity: 'SubProcess', subProcess: {\n                    type: 'Transaction', collapsed: false,\n                    processes: [], transaction: {\n                        cancel: { visible: false }, failure: { visible: false }, success: { visible: false }\n                    }\n                }\n            }\n        }\n    },\n];\n//Initializes the context menu for shapes.\nvar contextMenu = {\n    show: true, items: [\n        {\n            text: 'Ad-Hoc', id: 'Adhoc',\n            items: [{ text: 'None', iconCss: 'e-adhocs e-bpmn-event e-bpmn-icons e-None', id: 'AdhocNone' },\n                { iconCss: 'e-adhocs e-bpmn-icons e-adhoc', text: 'Ad-Hoc', id: 'AdhocAdhoc' }]\n        }, {\n            text: 'Loop', id: 'Loop',\n            items: [{ text: 'None', iconCss: 'e-loop e-bpmn-icons e-None', id: 'LoopNone' },\n                { text: 'Standard', iconCss: 'e-loop e-bpmn-icons e-Loop', id: 'Standard' },\n                { text: 'Parallel Multi-Instance', iconCss: 'e-loop e-bpmn-icons e-ParallelMI', id: 'ParallelMultiInstance' },\n                { text: 'Sequence Multi-Instance', iconCss: 'e-loop e-bpmn-icons e-SequentialMI', id: 'SequenceMultiInstance' }]\n        }, {\n            text: 'Compensation', id: 'taskCompensation',\n            items: [{ text: 'None', iconCss: 'e-compensation e-bpmn-icons e-None', id: 'CompensationNone' },\n                { iconCss: 'e-compensation e-bpmn-icons e-Compensation', text: 'Compensation', id: 'CompensationCompensation' }]\n        }, {\n            text: 'Activity-Type', id: 'Activity-Type',\n            items: [{ text: 'Collapsed sub-process', iconCss: 'e-bpmn-icons e-SubProcess', id: 'CollapsedSubProcess' },\n                { iconCss: 'e-bpmn-icons e-Task', text: 'Expanded sub-process', id: 'ExpandedSubProcess' }]\n        }, {\n            text: 'Boundry', id: 'Boundry',\n            items: [{ text: 'Default', iconCss: 'e-boundry e-bpmn-icons e-Default', id: 'Default' },\n                { text: 'Call', iconCss: 'e-boundry e-bpmn-icons e-Call', id: 'BoundryCall' },\n                { text: 'Event', iconCss: 'e-boundry e-bpmn-icons e-Event', id: 'BoundryEvent' }]\n        }, {\n            text: 'Data Object', id: 'DataObject',\n            items: [{ text: 'None', iconCss: 'e-data e-bpmn-icons e-None', id: 'DataObjectNone' },\n                { text: 'Input', iconCss: 'e-data e-bpmn-icons e-DataInput', id: 'Input' },\n                { text: 'Output', iconCss: 'e-data e-bpmn-icons e-DataOutput', id: 'Output' }]\n        }, {\n            text: 'Collection', id: 'collection',\n            items: [{ text: 'None', iconCss: 'e-collection e-bpmn-icons e-None', id: 'collectionNone' },\n                { text: 'Collection', iconCss: 'e-collection e-bpmn-icons e-ParallelMI', id: 'Collectioncollection' }]\n        }, {\n            text: 'Call', id: 'DeftCall',\n            items: [{ text: 'None', iconCss: 'e-call e-bpmn-icons e-None', id: 'CallNone' },\n                { text: 'Call', iconCss: 'e-call e-bpmn-icons e-CallActivity', id: 'CallCall' }]\n        }, {\n            text: 'Trigger Result', id: 'TriggerResult',\n            items: [{ text: 'None', id: 'TriggerNone', iconCss: 'e-trigger e-bpmn-icons e-None' },\n                { text: 'Message', id: 'Message', iconCss: 'e-trigger e-bpmn-icons e-InMessage' },\n                { text: 'Multiple', id: 'Multiple', iconCss: 'e-trigger e-bpmn-icons e-InMultiple' },\n                { text: 'Parallel', id: 'Parallel', iconCss: 'e-trigger e-bpmn-icons e-InParallelMultiple' },\n                { text: 'Signal', id: 'Signal', iconCss: 'e-trigger e-bpmn-icons e-InSignal' },\n                { text: 'Timer', id: 'Timer', iconCss: 'e-trigger e-bpmn-icons e-InTimer' },\n                { text: 'Cancel', id: 'Cancel', iconCss: 'e-trigger e-bpmn-icons e-CancelEnd' },\n                { text: 'Escalation', id: 'Escalation', iconCss: 'e-trigger e-bpmn-icons e-InEscalation' },\n                { text: 'Error', id: 'Error', iconCss: 'e-trigger e-bpmn-icons e-InError' },\n                { text: 'Compensation', id: 'triggerCompensation', iconCss: 'e-trigger e-bpmn-icons e-InCompensation' },\n                { text: 'Terminate', id: 'Terminate', iconCss: 'e-trigger e-bpmn-icons e-TerminateEnd' },\n                { text: 'Conditional', id: 'Conditional', iconCss: 'e-trigger e-bpmn-icons e-InConditional' },\n                { text: 'Link', id: 'Link', iconCss: 'e-trigger e-bpmn-icons e-ThrowLinkin' }\n            ]\n        },\n        {\n            text: 'Event Type', id: 'EventType',\n            items: [{ text: 'Start', id: 'Start', iconCss: 'e-event e-bpmn-icons e-NoneStart', },\n                { text: 'Intermediate', id: 'Intermediate', iconCss: 'e-event e-bpmn-icons e-InterruptingNone' },\n                { text: 'NonInterruptingStart', id: 'NonInterruptingStart', iconCss: 'e-event e-bpmn-icons e-Noninterruptingstart' },\n                { text: 'ThrowingIntermediate', id: 'ThrowingIntermediate', iconCss: 'e-event e-bpmn-icons e-ThrowingIntermediate' },\n                {\n                    text: 'NonInterruptingIntermediate', id: 'NonInterruptingIntermediate',\n                    iconCss: 'e-event e-bpmn-icons e-NoninterruptingIntermediate'\n                },\n                { text: 'End', id: 'End', iconCss: 'e-event e-bpmn-icons e-NoneEnd' }]\n        }, {\n            text: 'Task Type', id: 'TaskType',\n            items: [\n                { text: 'None', id: 'TaskNone', iconCss: 'e-task e-bpmn-icons e-None' },\n                { text: 'Service', id: 'Service', iconCss: 'e-task e-bpmn-icons e-ServiceTask' },\n                { text: 'BusinessRule', id: 'BusinessRule', iconCss: 'e-task e-bpmn-icons e-BusinessRule' },\n                { text: 'InstantiatingReceive', id: 'InstantiatingReceive', iconCss: 'e-task e-bpmn-icons e-InstantiatingReceive' },\n                { text: 'Manual', id: 'Manual', iconCss: 'e-task e-bpmn-icons e-ManualCall' },\n                { text: 'Receive', id: 'Receive', iconCss: 'e-task e-bpmn-icons e-InMessage' },\n                { text: 'Script', id: 'Script', iconCss: 'e-task e-bpmn-icons e-ScriptCall' },\n                { text: 'Send', id: 'Send', iconCss: 'e-task e-bpmn-icons e-OutMessage' },\n                { text: 'User', id: 'User', iconCss: 'e-task e-bpmn-icons e-UserCall' },\n            ]\n        }, {\n            text: 'GateWay', id: 'GateWay',\n            iconCss: 'e-bpmn-icons e-Gateway', items: [\n                { text: 'None', id: 'GatewayNone', iconCss: 'e-gate e-bpmn-icons e-None' },\n                { text: 'Exclusive', iconCss: 'e-gate e-bpmn-icons e-ExclusiveGatewayWithMarker', id: 'Exclusive' },\n                { text: 'Inclusive', iconCss: 'e-gate e-bpmn-icons e-InclusiveGateway', id: 'Inclusive' },\n                { text: 'Parallel', iconCss: 'e-gate e-bpmn-icons e-ParallelGateway', id: 'GatewayParallel' },\n                { text: 'Complex', iconCss: 'e-gate e-bpmn-icons e-ComplexGateway', id: 'Complex' },\n                { text: 'EventBased', iconCss: 'e-gate e-bpmn-icons e-EventBasedGateway', id: 'EventBased' },\n                { text: 'ExclusiveEventBased', iconCss: 'e-gate e-bpmn-icons e-ExclusiveEventBased', id: 'ExclusiveEventBased' },\n                { text: 'ParallelEventBased', iconCss: 'e-gate e-bpmn-icons e-ParallelEventBasedGatewaytostart', id: 'ParallelEventBased' }\n            ]\n        },\n    ],\n    showCustomMenuOnly: true,\n};\n// Define a variable to hold an instance of the DiagramComponent\nvar diagramInstance;\n// Define the function BpmnEditor\nfunction BpmnEditor() {\n    React.useEffect(function () {\n        // Call functions to update sample section and render completion\n        (0, sample_base_1.updateSampleSection)();\n        rendereComplete();\n    }, []);\n    function rendereComplete() {\n        diagramInstance.fitToPage();\n    }\n    // Define the function getConnectors\n    function getConnectors() {\n        //Initializes the Connector shapes for the symbol pallete.\n        var connectorSymbols = [\n            {\n                id: 'Link1', type: 'Orthogonal', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 40, y: 40 },\n                targetDecorator: { shape: 'Arrow', style: { strokeColor: '#757575', fill: '#757575' } }, style: { strokeWidth: 2, strokeColor: '#757575' }\n            },\n            {\n                id: 'Link2', type: 'Orthogonal', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 40, y: 40 },\n                targetDecorator: { shape: 'Arrow', style: { strokeColor: '#757575', fill: '#757575' } }, style: { strokeWidth: 2, strokeDashArray: '4 4', strokeColor: '#757575' }\n            },\n            {\n                id: 'Link3', type: 'Straight', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 40, y: 40 },\n                targetDecorator: { shape: 'Arrow', style: { strokeColor: '#757575', fill: '#757575' } }, style: { strokeWidth: 2, strokeColor: '#757575' }\n            },\n            {\n                id: 'link4', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 40, y: 40 }, type: 'Orthogonal',\n                targetDecorator: { style: { strokeColor: '#757575', fill: '#757575' } },\n                shape: {\n                    type: 'Bpmn',\n                    flow: 'Association',\n                    association: 'Directional'\n                }, style: {\n                    strokeDashArray: '2,2', strokeColor: '#757575'\n                },\n            },\n        ];\n        return connectorSymbols;\n    }\n    //function context menu click\n    function contextMenuClick(args) {\n        diagram = diagramInstance;\n        if (diagram.selectedItems.nodes.length > 0) {\n            var bpmnShape = diagram.selectedItems.nodes[0].shape;\n            if (args.item.iconCss.indexOf('e-adhocs') > -1) {\n                bpmnShape.activity.subProcess.adhoc = args.item.id === 'AdhocNone' ? false : true;\n            }\n            if (args.item.iconCss.indexOf('e-event') > -1) {\n                bpmnShape.event.event = args.item.id;\n            }\n            if (args.item.iconCss.indexOf('e-trigger') > -1) {\n                bpmnShape.event.trigger = args.item.text;\n            }\n            if (args.item.iconCss.indexOf('e-loop') > -1) {\n                var loop = (args.item.id === 'LoopNone') ? 'None' : args.item.id;\n                if (bpmnShape.activity.activity === 'Task') {\n                    bpmnShape.activity.task.loop = loop;\n                }\n                if (bpmnShape.activity.activity === 'SubProcess') {\n                    bpmnShape.activity.subProcess.loop = loop;\n                }\n            }\n            if (args.item.iconCss.indexOf('e-compensation') > -1) {\n                var compensation = (args.item.id === 'CompensationNone') ? false : true;\n                if (bpmnShape.activity.activity === 'Task') {\n                    bpmnShape.activity.task.compensation = compensation;\n                }\n                if (bpmnShape.activity.activity === 'SubProcess') {\n                    bpmnShape.activity.subProcess.compensation = compensation;\n                }\n            }\n            if (args.item.iconCss.indexOf('e-call') > -1) {\n                var compensation = (args.item.id === 'CallNone') ? false : true;\n                if (bpmnShape.activity.activity === 'Task') {\n                    bpmnShape.activity.task.call = compensation;\n                }\n            }\n            if (args.item.id === 'CollapsedSubProcess' || args.item.id === 'ExpandedSubProcess') {\n                if (args.item.id === 'ExpandedSubProcess') {\n                    bpmnShape.activity.activity = 'SubProcess';\n                    bpmnShape.activity.subProcess.collapsed = false;\n                }\n                else {\n                    bpmnShape.activity.activity = 'SubProcess';\n                    bpmnShape.activity.subProcess.collapsed = true;\n                }\n            }\n            if (args.item.iconCss.indexOf('e-boundry') > -1) {\n                var call = args.item.id;\n                if (args.item.id !== 'Default') {\n                    call = (args.item.id === 'BoundryEvent') ? 'Event' : 'Call';\n                }\n                bpmnShape.activity.subProcess.boundary = call;\n            }\n            if (args.item.iconCss.indexOf('e-data') > -1) {\n                var call = args.item.id === 'DataObjectNone' ? 'None' : args.item.id;\n                bpmnShape.dataObject.type = call;\n            }\n            if (args.item.iconCss.indexOf('e-collection') > -1) {\n                var call = (args.item.id === 'Collectioncollection') ? true : false;\n                bpmnShape.dataObject.collection = call;\n            }\n            if (args.item.iconCss.indexOf('e-task') > -1) {\n                var task = args.item.id === 'TaskNone' ? 'None' : args.item.id;\n                if (bpmnShape.activity.activity === 'Task') {\n                    bpmnShape.activity.task.type = task;\n                }\n            }\n            if (args.item.iconCss.indexOf('e-gate') > -1) {\n                var task = args.item.id.replace('Gateway', '');\n                if (bpmnShape.shape === 'Gateway') {\n                    bpmnShape.gateway.type = task;\n                }\n            }\n            diagram.dataBind();\n        }\n    }\n    // Define a function to handle opening the context menu\n    function contextMenuOpen(args) {\n        diagram = diagramInstance;\n        var hiddenId = [];\n        if (args.element.className !== 'e-menu-parent e-ul ') {\n            hiddenId = ['Adhoc', 'Loop', 'taskCompensation', 'Activity-Type', 'Boundry', 'DataObject',\n                'collection', 'DeftCall', 'TriggerResult', 'EventType', 'TaskType', 'GateWay'];\n        }\n        // Check if nodes are selected\n        if (diagram.selectedItems.nodes.length) {\n            for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var bpmnShape = diagram.selectedItems.nodes[0].shape;\n                if (bpmnShape.shape !== 'DataObject' && bpmnShape.shape !== 'Gateway') {\n                    if (item.text === 'Ad-Hoc') {\n                        if (bpmnShape.activity.activity === 'SubProcess') {\n                            hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                        }\n                    }\n                    if (item.text === 'Loop' || item.text === 'Compensation' || item.text === 'Activity-Type') {\n                        if (bpmnShape.shape === 'Activity') {\n                            hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                        }\n                    }\n                    if (item.text === 'Boundry') {\n                        if (bpmnShape.activity.activity === 'SubProcess') {\n                            hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                        }\n                    }\n                }\n                if (item.text === 'Data Object') {\n                    if (bpmnShape.shape === 'DataObject') {\n                        hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                    }\n                }\n                if (item.text === 'Collection') {\n                    if (bpmnShape.shape === 'DataObject') {\n                        hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                    }\n                }\n                if (item.text === 'Call') {\n                    if (bpmnShape.shape === 'Activity' && bpmnShape.activity.activity === 'Task') {\n                        hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                    }\n                }\n                if (item.text === 'Trigger Result') {\n                    if ((bpmnShape.shape === 'Event')) {\n                        hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                    }\n                }\n                if (item.text === 'Event Type') {\n                    if ((bpmnShape.shape === 'Event')) {\n                        hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                    }\n                }\n                if (item.text === 'Task Type') {\n                    if ((bpmnShape.shape === 'Activity')\n                        && (bpmnShape.activity.activity === 'Task')) {\n                        hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                    }\n                }\n                if (item.text === 'GateWay') {\n                    if ((bpmnShape.shape === 'Gateway')) {\n                        hiddenId.splice(hiddenId.indexOf(item.id), 1);\n                    }\n                }\n                if (args.parentItem && args.parentItem.id === 'TriggerResult' && bpmnShape.shape === 'Event') {\n                    if (item.text !== 'None' && (item.text === bpmnShape.event.event || item.text === bpmnShape.event.trigger)) {\n                        hiddenId.push(item.id);\n                    }\n                    if (bpmnShape.event.event === 'Start') {\n                        if (item.text === 'Cancel' || item.text === 'Terminate' || item.text === 'Link') {\n                            hiddenId.push(item.id);\n                        }\n                    }\n                    if (bpmnShape.event.event === 'NonInterruptingStart' || item.text === 'Link') {\n                        if (item.text === 'Cancel' || item.text === 'Terminate' || item.text === 'Compensation' ||\n                            item.text === 'Error' || item.text === 'None') {\n                            hiddenId.push(item.id);\n                        }\n                    }\n                    if (bpmnShape.event.event === 'Intermediate') {\n                        if (item.text === 'Terminate') {\n                            hiddenId.push(item.id);\n                        }\n                    }\n                    if (bpmnShape.event.event === 'NonInterruptingIntermediate') {\n                        if (item.text === 'Cancel' || item.text === 'Terminate' || item.text === 'Compensation' ||\n                            item.text === 'Error' || item.text === 'None' || item.text === 'Link') {\n                            hiddenId.push(item.id);\n                        }\n                    }\n                    if (bpmnShape.event.event === 'ThrowingIntermediate') {\n                        if (item.text === 'Cancel' || item.text === 'Terminate' || item.text === 'Timer' || item.text === 'Error' ||\n                            item.text === 'None' || item.text === 'Pareller' || item.text === 'Conditional') {\n                            hiddenId.push(item.id);\n                        }\n                    }\n                    if (bpmnShape.event.event === 'End') {\n                        if (item.text === 'Parallel' || item.text === 'Timer' || item.text === 'Conditional' || item.text === 'Link') {\n                            hiddenId.push(item.id);\n                        }\n                    }\n                }\n                if (args.parentItem && args.parentItem.id === 'EventType' && bpmnShape.shape === 'Event') {\n                    if (item.text === bpmnShape.event.event) {\n                        hiddenId.push(item.id);\n                    }\n                }\n            }\n        }\n        args.hiddenItems = hiddenId;\n    }\n    return (React.createElement(\"div\", { className: \"control-pane\" },\n        React.createElement(\"div\", { className: \"control-section\" },\n            React.createElement(\"div\", { className: \"sb-mobile-palette-bar\" },\n                React.createElement(\"div\", { id: \"palette-icon\", style: { float: \"right\" }, className: \"e-ddb-icons1 e-toggle-palette\" })),\n            React.createElement(\"div\", { id: \"palette-space\", className: \"sb-mobile-palette\" },\n                React.createElement(ej2_react_diagrams_1.SymbolPaletteComponent\n                //Sets the default values of a Symbol Palette Component \n                , { \n                    //Sets the default values of a Symbol Palette Component \n                    id: \"symbolpalette\", expandMode: \"Multiple\", \n                    // Palette configurations for BPMN shapes and connectors\n                    palettes: [\n                        {\n                            id: \"Bpmn\",\n                            expanded: true,\n                            symbols: bpmnShapes,\n                            iconCss: \"e-diagram-icons1 e-diagram-Bpmn\",\n                            title: \"Bpmn Shapes\"\n                        },\n                        {\n                            id: \"connectors\",\n                            expanded: true,\n                            symbols: getConnectors(),\n                            iconCss: \"e-diagram-icons1 e-diagram-connector\",\n                            title: \"Connectors\"\n                        }\n                    ], width: \"100%\", height: \"471px\", symbolHeight: 60, symbolWidth: 60, symbolMargin: { left: 15, right: 15, top: 15, bottom: 15 }, getNodeDefaults: function (symbol) {\n                        symbol.style.strokeColor = '#757575';\n                    }, getSymbolInfo: function (symbol) {\n                        return { fit: true };\n                    } },\n                    React.createElement(ej2_react_diagrams_1.Inject, { services: [ej2_react_diagrams_1.BpmnDiagrams, ej2_react_diagrams_1.UndoRedo, ej2_react_diagrams_1.DiagramContextMenu, ej2_react_diagrams_1.DataBinding] }))),\n            React.createElement(\"div\", { id: \"diagram-space\", className: \"sb-mobile-diagram sb-bpmn-editor\" },\n                React.createElement(ej2_react_diagrams_1.DiagramComponent, { id: \"diagram\", ref: function (diagram) { return (diagramInstance = diagram); }, width: \"100%\", height: \"445px\", snapSettings: { constraints: 0 }, nodes: nodes, connectors: connectors, \n                    //Sets the default values of a node\n                    contextMenuSettings: contextMenu, contextMenuOpen: contextMenuOpen, contextMenuClick: contextMenuClick, dragEnter: function (args) {\n                        var node = args.element;\n                        if (node instanceof Node) {\n                            if (!node.shape.activity.subProcess.collapsed) {\n                                node.shape.activity.subProcess.transaction.cancel.visible = true;\n                                node.shape.activity.subProcess.transaction.failure.visible = true;\n                                node.shape.activity.subProcess.transaction.success.visible = true;\n                            }\n                            else {\n                                var ratio = 100 / node.width;\n                                var oldWidth = node.width;\n                                var oldHeight = node.height;\n                                node.width = 100;\n                                node.height *= ratio;\n                                node.offsetX += (node.width - oldWidth) / 2;\n                                node.offsetY += (node.height - oldHeight) / 2;\n                            }\n                        }\n                    } },\n                    React.createElement(ej2_react_diagrams_1.Inject, { services: [ej2_react_diagrams_1.BpmnDiagrams, ej2_react_diagrams_1.UndoRedo, ej2_react_diagrams_1.DiagramContextMenu, ej2_react_diagrams_1.DataBinding] }))))));\n}\nexports.default = BpmnEditor;\nvar root = (0, client_1.createRoot)(document.getElementById('sample'));\nroot.render(React.createElement(BpmnEditor, null));\n\n\n//# sourceURL=webpack:///./samples/diagram/bpmn-editor-functional/app/index.tsx?");

/***/ }),

/***/ "./samples/diagram/bpmn-editor-functional/app/sample-base.tsx":
/*!********************************************************************!*\
  !*** ./samples/diagram/bpmn-editor-functional/app/sample-base.tsx ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSampleSection = exports.SampleBase = void 0;\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n(0, ej2_base_1.enableRipple)(window.ripple);\nvar SampleBase = /** @class */ (function (_super) {\n    __extends(SampleBase, _super);\n    function SampleBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SampleBase.prototype.rendereComplete = function () {\n        /**custom render complete function */\n    };\n    SampleBase.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.rendereComplete();\n        });\n    };\n    return SampleBase;\n}(React.PureComponent));\nexports.SampleBase = SampleBase;\nfunction updateSampleSection() { }\nexports.updateSampleSection = updateSampleSection;\n\n\n//# sourceURL=webpack:///./samples/diagram/bpmn-editor-functional/app/sample-base.tsx?");

/***/ })

/******/ });